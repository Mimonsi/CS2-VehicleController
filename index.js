(()=>{
    var e = {
        639: (e,t,n)=>{
            var s;
            s = function(e, t, n) {
                "use strict";
                var s = void 0 !== t;
                if ((t = t || {})._Initialized)
                    return t;
                var i = [2, 0, 3, 0];
                function a() {
                    this.events = {}
                }
                function o(e, t) {
                    this.code = e,
                    this.context = t
                }
                for (var r in a.prototype._createClear = function(e, n, s, i) {
                    return function() {
                        var a = e.events[n];
                        if (a) {
                            var o = -1;
                            if (void 0 === s) {
                                for (var r = 0; r < a.length; ++r)
                                    if (void 0 !== a[r].wasInCPP) {
                                        o = r;
                                        break
                                    }
                            } else
                                o = a.indexOf(s);
                            -1 != o && (a.splice(o, 1),
                            0 === a.length && delete e.events[n])
                        } else
                            void 0 !== t.RemoveOnHandler && t.RemoveOnHandler(n, s, i || t)
                    }
                }
                ,
                a.prototype.on = function(e, t, n) {
                    var s = this.events[e];
                    void 0 === s && (s = this.events[e] = []);
                    var i = new o(t,n || this);
                    return s.push(i),
                    {
                        clear: this._createClear(this, e, i, n)
                    }
                }
                ,
                a.prototype.off = function(e, n, s) {
                    var i = this.events[e];
                    if (void 0 !== i) {
                        var a;
                        s = s || this;
                        var o = i.length;
                        for (a = 0; a < o; ++a) {
                            var r = i[a];
                            if (r.code == n && r.context == s)
                                break
                        }
                        a < o && (i.splice(a, 1),
                        0 === i.length && delete this.events[e])
                    } else
                        t.RemoveOnHandler(e, n, s || this)
                }
                ,
                a.prototype.trigger = function(e) {
                    var t = this.events[e];
                    if (void 0 !== t) {
                        var n = Array.prototype.slice.call(arguments, 1);
                        return t.forEach((function(e) {
                            e.code.apply(e.context, n)
                        }
                        )),
                        !0
                    }
                    return !1
                }
                ,
                t.isAttached = s,
                t.isAttached || (a.prototype.on = function(e, t, n) {
                    var s = this.events[e];
                    this.browserCallbackOn && this.browserCallbackOn(e, t, n),
                    void 0 === s && (s = this.events[e] = []);
                    var i = new o(t,n || this);
                    return s.push(i),
                    {
                        clear: this._createClear(this, e, i)
                    }
                }
                ,
                a.prototype.off = function(e, t, n) {
                    var s = this.events[e];
                    if (void 0 !== s) {
                        var i;
                        n = n || this;
                        var a = s.length;
                        for (i = 0; i < a; ++i) {
                            var o = s[i];
                            if (o.code == t && o.context == n)
                                break
                        }
                        i < a && (s.splice(i, 1),
                        0 === s.length && (delete this.events[e],
                        this.browserCallbackOff && this.browserCallbackOff(e, t, n)))
                    }
                }
                ,
                t.SendMessage = function(e, n) {
                    var s = Array.prototype.slice.call(arguments, 2)
                      , i = t._ActiveRequests[n];
                    delete t._ActiveRequests[n],
                    window.setTimeout((function() {
                        var n = t._mocks[e];
                        void 0 !== n && i.resolve(n.apply(t, s))
                    }
                    ), 16)
                }
                ,
                t.TriggerEvent = function() {
                    var e = Array.prototype.slice.call(arguments);
                    return window.setTimeout((function() {
                        var n = t._mocks[e[0]];
                        void 0 !== n && n.apply(t, e.slice(1))
                    }
                    ), 16),
                    void 0 !== t._mocks[e[0]]
                }
                ,
                t.BindingsReady = function() {
                    t._OnReady()
                }
                ,
                t.createJSModel = function(t, n) {
                    e[t] = n
                }
                ,
                t.updateWholeModel = function() {}
                ,
                t.synchronizeModels = function() {}
                ,
                t.enableImmediateLayout = function() {}
                ,
                t.isImmediateLayoutEnabled = function() {
                    return !0
                }
                ,
                t.executeImmediateLayoutSync = function() {}
                ,
                t._mocks = {},
                t._mockImpl = function(e, t, n, s) {
                    t && (this._mocks[e] = t);
                    var i = t.toString().replace("function " + t.name + "(", "")
                      , a = i.indexOf(")")
                      , o = i.substr(0, a);
                    this.browserCallbackMock && this.browserCallbackMock(e, o, n, Boolean(s))
                }
                ,
                t.mock = function(e, t, n) {
                    this._mockImpl(e, t, !0, n)
                }
                ),
                t.events = {},
                a.prototype)
                    t[r] = a.prototype[r];
                return t.isAttached && (t.on = function(e, n, s) {
                    return n ? (t.AddOrRemoveOnHandler(e, n, s || t),
                    {
                        clear: this._createClear(this, e, n, s)
                    }) : (console.error("No handler specified for engine.on"),
                    {
                        clear: function() {}
                    })
                }
                ),
                t.whenReady = new Promise((e=>{
                    t.on("Ready", e)
                }
                )),
                t._trigger = a.prototype.trigger,
                t.trigger = function() {
                    this._trigger.apply(this, arguments) || this.TriggerEvent.apply(this, arguments)
                }
                ,
                t.isAttached && (t.mock = function() {}
                ),
                t._BindingsReady = !1,
                t._ContentLoaded = !1,
                t._RequestId = 0,
                t._ActiveRequests = {},
                t.call = function() {
                    t._RequestId++;
                    var e = t._RequestId
                      , n = Array.prototype.slice.call(arguments);
                    return n.splice(1, 0, e),
                    new Promise((function(s, i) {
                        t._ActiveRequests[e] = {
                            resolve: s,
                            reject: i
                        },
                        t.SendMessage.apply(t, n)
                    }
                    ))
                }
                ,
                t._Result = function(e) {
                    var n = t._ActiveRequests[e];
                    if (void 0 !== n) {
                        delete t._ActiveRequests[e];
                        var s = Array.prototype.slice.call(arguments);
                        s.shift(),
                        n.resolve.apply(n, s)
                    }
                }
                ,
                t._Reject = function(e, n) {
                    var s = t._ActiveRequests[e];
                    void 0 !== s && (delete t._ActiveRequests[e],
                    requestAnimationFrame((()=>s.reject("No handler registered with name '" + n + "'"))))
                }
                ,
                t._ForEachError = function(e, t) {
                    for (var n = e.length, s = 0; s < n; ++s)
                        t(e[s].first, e[s].second)
                }
                ,
                t._TriggerError = function(e) {
                    t.trigger("Error", e)
                }
                ,
                t._OnError = function(e, n) {
                    if (null === e || 0 === e)
                        t._ForEachError(n, t._TriggerError);
                    else {
                        var s = t._ActiveRequests[e];
                        delete t._ActiveRequests[e],
                        s.reject(new Error(n[0].second))
                    }
                    if (n.length)
                        throw new Error(n[0].second)
                }
                ,
                t._OnReady = function() {
                    t._BindingsReady = !0,
                    t._ContentLoaded && t.trigger("Ready")
                }
                ,
                t._OnContentLoaded = function() {
                    t._ContentLoaded = !0,
                    t._BindingsReady && t.trigger("Ready")
                }
                ,
                n ? e.addEventListener("DOMContentLoaded", (function() {
                    t._OnContentLoaded()
                }
                )) : t._ContentLoaded = !0,
                t.on("_Result", t._Result, t),
                t.on("_Reject", t._Reject, t),
                t.on("_OnReady", t._OnReady, t),
                t.on("_OnError", t._OnError, t),
                t.dependency = new WeakMap,
                t.hasAttachedUpdateListner = !1,
                t.onUpdateWholeModel = e=>{
                    (t.dependency.get(e) || []).forEach((e=>t.updateWholeModel(e)))
                }
                ,
                t.createObservableModel = e=>{
                    const n = {
                        set: (n,s,i)=>{
                            t.updateWholeModel(window[e]),
                            n[s] = i
                        }
                    };
                    t.createJSModel(e, new Proxy({},n))
                }
                ,
                t.addSynchronizationDependency = (e,n)=>{
                    t.hasAttachedUpdateListner || (t.addDataBindEventListner("updateWholeModel", t.onUpdateWholeModel),
                    t.hasAttachedUpdateListner = !0);
                    let s = t.dependency.get(e);
                    s || (s = [],
                    t.dependency.set(e, s)),
                    s.push(n)
                }
                ,
                t.removeSynchronizationDependency = (e,n)=>{
                    let s = t.dependency.get(e) || [];
                    s.splice(s.indexOf(n), 1)
                }
                ,
                t.BindingsReady(i[0], i[1], i[2], i[3]),
                t._Initialized = !0,
                t
            }
            ,
            e.exports ? e.exports = s(n.g, n.g.engine, !1) : engine = s(window, window.engine, !0)
        }
        ,
        810: ()=>{
            var e, t;
            document && document.location && document.location.hostname || document.location || Object.defineProperty(document, "location", {
                get: ()=>({
                    hostname: ""
                })
            }),
            void 0 === document.body.clientWidth && (Object.defineProperty(Element.prototype, "clientHeight", {
                get: function() {
                    return this.offsetHeight
                }
            }),
            Object.defineProperty(Element.prototype, "clientWidth", {
                get: function() {
                    return this.offsetWidth
                }
            })),
            CanvasRenderingContext2D.prototype.resetTransform || (CanvasRenderingContext2D.prototype.resetTransform = function() {
                this.setTransform(1, 0, 0, 1, 0, 0)
            }
            ),
            CanvasRenderingContext2D.prototype.setLineDash || (CanvasRenderingContext2D.prototype.setLineDash = function() {}
            ),
            window.addEventListener = (e = window.addEventListener,
            function(t, ...n) {
                "test" != t && e(t, ...n)
            }
            ),
            window.removeEventListener = (t = window.removeEventListener,
            function(e, ...n) {
                "test" != e && t(e, ...n)
            }
            )
        }
        ,
        853: e=>{
            var t = .1
              , n = "function" == typeof Float32Array;
            function s(e, t) {
                return 1 - 3 * t + 3 * e
            }
            function i(e, t) {
                return 3 * t - 6 * e
            }
            function a(e) {
                return 3 * e
            }
            function o(e, t, n) {
                return ((s(t, n) * e + i(t, n)) * e + a(t)) * e
            }
            function r(e, t, n) {
                return 3 * s(t, n) * e * e + 2 * i(t, n) * e + a(t)
            }
            function l(e) {
                return e
            }
            e.exports = function(e, s, i, a) {
                if (!(0 <= e && e <= 1 && 0 <= i && i <= 1))
                    throw new Error("bezier x values must be in [0, 1] range");
                if (e === s && i === a)
                    return l;
                for (var c = n ? new Float32Array(11) : new Array(11), u = 0; u < 11; ++u)
                    c[u] = o(u * t, e, i);
                function d(n) {
                    for (var s = 0, a = 1; 10 !== a && c[a] <= n; ++a)
                        s += t;
                    --a;
                    var l = s + (n - c[a]) / (c[a + 1] - c[a]) * t
                      , u = r(l, e, i);
                    return u >= .001 ? function(e, t, n, s) {
                        for (var i = 0; i < 4; ++i) {
                            var a = r(t, n, s);
                            if (0 === a)
                                return t;
                            t -= (o(t, n, s) - e) / a
                        }
                        return t
                    }(n, l, e, i) : 0 === u ? l : function(e, t, n, s, i) {
                        var a, r, l = 0;
                        do {
                            (a = o(r = t + (n - t) / 2, s, i) - e) > 0 ? n = r : t = r
                        } while (Math.abs(a) > 1e-7 && ++l < 10);
                        return r
                    }(n, s, s + t, e, i)
                }
                return function(e) {
                    return 0 === e ? 0 : 1 === e ? 1 : o(d(e), s, a)
                }
            }
        }
        ,
        485: (e,t)=>{
            var n;
            !function() {
                "use strict";
                var s = {}.hasOwnProperty;
                function i() {
                    for (var e = [], t = 0; t < arguments.length; t++) {
                        var n = arguments[t];
                        if (n) {
                            var a = typeof n;
                            if ("string" === a || "number" === a)
                                e.push(n);
                            else if (Array.isArray(n)) {
                                if (n.length) {
                                    var o = i.apply(null, n);
                                    o && e.push(o)
                                }
                            } else if ("object" === a) {
                                if (n.toString !== Object.prototype.toString && !n.toString.toString().includes("[native code]")) {
                                    e.push(n.toString());
                                    continue
                                }
                                for (var r in n)
                                    s.call(n, r) && n[r] && e.push(r)
                            }
                        }
                    }
                    return e.join(" ")
                }
                e.exports ? (i.default = i,
                e.exports = i) : void 0 === (n = function() {
                    return i
                }
                .apply(t, [])) || (e.exports = n)
            }()
        }
        ,
        551: (e,t,n)=>{
            "use strict";
            var s = n(540)
              , i = n(982);
            function a(e) {
                for (var t = "https://reactjs.org/docs/error-decoder.html?invariant=" + e, n = 1; n < arguments.length; n++)
                    t += "&args[]=" + encodeURIComponent(arguments[n]);
                return "Minified React error #" + e + "; visit " + t + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
            }
            var o = new Set
              , r = {};
            function l(e, t) {
                c(e, t),
                c(e + "Capture", t)
            }
            function c(e, t) {
                for (r[e] = t,
                e = 0; e < t.length; e++)
                    o.add(t[e])
            }
            var u = !("undefined" == typeof window || void 0 === window.document || void 0 === window.document.createElement)
              , d = Object.prototype.hasOwnProperty
              , m = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/
              , h = {}
              , g = {};
            function p(e, t, n, s, i, a, o) {
                this.acceptsBooleans = 2 === t || 3 === t || 4 === t,
                this.attributeName = s,
                this.attributeNamespace = i,
                this.mustUseProperty = n,
                this.propertyName = e,
                this.type = t,
                this.sanitizeURL = a,
                this.removeEmptyString = o
            }
            var f = {};
            "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e) {
                f[e] = new p(e,0,!1,e,null,!1,!1)
            }
            )),
            [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach((function(e) {
                var t = e[0];
                f[t] = new p(t,1,!1,e[1],null,!1,!1)
            }
            )),
            ["contentEditable", "draggable", "spellCheck", "value"].forEach((function(e) {
                f[e] = new p(e,2,!1,e.toLowerCase(),null,!1,!1)
            }
            )),
            ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach((function(e) {
                f[e] = new p(e,2,!1,e,null,!1,!1)
            }
            )),
            "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e) {
                f[e] = new p(e,3,!1,e.toLowerCase(),null,!1,!1)
            }
            )),
            ["checked", "multiple", "muted", "selected"].forEach((function(e) {
                f[e] = new p(e,3,!0,e,null,!1,!1)
            }
            )),
            ["capture", "download"].forEach((function(e) {
                f[e] = new p(e,4,!1,e,null,!1,!1)
            }
            )),
            ["cols", "rows", "size", "span"].forEach((function(e) {
                f[e] = new p(e,6,!1,e,null,!1,!1)
            }
            )),
            ["rowSpan", "start"].forEach((function(e) {
                f[e] = new p(e,5,!1,e.toLowerCase(),null,!1,!1)
            }
            ));
            var x = /[\-:]([a-z])/g;
            function v(e) {
                return e[1].toUpperCase()
            }
            function _(e, t, n, s) {
                var i = f.hasOwnProperty(t) ? f[t] : null;
                (null !== i ? 0 !== i.type : s || !(2 < t.length) || "o" !== t[0] && "O" !== t[0] || "n" !== t[1] && "N" !== t[1]) && (function(e, t, n, s) {
                    if (null == t || function(e, t, n, s) {
                        if (null !== n && 0 === n.type)
                            return !1;
                        switch (typeof t) {
                        case "function":
                        case "symbol":
                            return !0;
                        case "boolean":
                            return !s && (null !== n ? !n.acceptsBooleans : "data-" !== (e = e.toLowerCase().slice(0, 5)) && "aria-" !== e);
                        default:
                            return !1
                        }
                    }(e, t, n, s))
                        return !0;
                    if (s)
                        return !1;
                    if (null !== n)
                        switch (n.type) {
                        case 3:
                            return !t;
                        case 4:
                            return !1 === t;
                        case 5:
                            return isNaN(t);
                        case 6:
                            return isNaN(t) || 1 > t
                        }
                    return !1
                }(t, n, i, s) && (n = null),
                s || null === i ? function(e) {
                    return !!d.call(g, e) || !d.call(h, e) && (m.test(e) ? g[e] = !0 : (h[e] = !0,
                    !1))
                }(t) && (null === n ? e.removeAttribute(t) : e.setAttribute(t, "" + n)) : i.mustUseProperty ? e[i.propertyName] = null === n ? 3 !== i.type && "" : n : (t = i.attributeName,
                s = i.attributeNamespace,
                null === n ? e.removeAttribute(t) : (n = 3 === (i = i.type) || 4 === i && !0 === n ? "" : "" + n,
                s ? e.setAttributeNS(s, t, n) : e.setAttribute(t, n))))
            }
            "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e) {
                var t = e.replace(x, v);
                f[t] = new p(t,1,!1,e,null,!1,!1)
            }
            )),
            "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e) {
                var t = e.replace(x, v);
                f[t] = new p(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)
            }
            )),
            ["xml:base", "xml:lang", "xml:space"].forEach((function(e) {
                var t = e.replace(x, v);
                f[t] = new p(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)
            }
            )),
            ["tabIndex", "crossOrigin"].forEach((function(e) {
                f[e] = new p(e,1,!1,e.toLowerCase(),null,!1,!1)
            }
            )),
            f.xlinkHref = new p("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),
            ["src", "href", "action", "formAction"].forEach((function(e) {
                f[e] = new p(e,1,!1,e.toLowerCase(),null,!0,!0)
            }
            ));
            var b = s.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED
              , T = Symbol.for("react.element")
              , E = Symbol.for("react.portal")
              , I = Symbol.for("react.fragment")
              , S = Symbol.for("react.strict_mode")
              , y = Symbol.for("react.profiler")
              , j = Symbol.for("react.provider")
              , C = Symbol.for("react.context")
              , N = Symbol.for("react.forward_ref")
              , w = Symbol.for("react.suspense")
              , O = Symbol.for("react.suspense_list")
              , P = Symbol.for("react.memo")
              , L = Symbol.for("react.lazy");
            Symbol.for("react.scope"),
            Symbol.for("react.debug_trace_mode");
            var A = Symbol.for("react.offscreen");
            Symbol.for("react.legacy_hidden"),
            Symbol.for("react.cache"),
            Symbol.for("react.tracing_marker");
            var M = Symbol.iterator;
            function R(e) {
                return null === e || "object" != typeof e ? null : "function" == typeof (e = M && e[M] || e["@@iterator"]) ? e : null
            }
            var k, D = Object.assign;
            function F(e) {
                if (void 0 === k)
                    try {
                        throw Error()
                    } catch (e) {
                        var t = e.stack.trim().match(/\n( *(at )?)/);
                        k = t && t[1] || ""
                    }
                return "\n" + k + e
            }
            var U = !1;
            function B(e, t) {
                if (!e || U)
                    return "";
                U = !0;
                var n = Error.prepareStackTrace;
                Error.prepareStackTrace = void 0;
                try {
                    if (t)
                        if (t = function() {
                            throw Error()
                        }
                        ,
                        Object.defineProperty(t.prototype, "props", {
                            set: function() {
                                throw Error()
                            }
                        }),
                        "object" == typeof Reflect && Reflect.construct) {
                            try {
                                Reflect.construct(t, [])
                            } catch (e) {
                                var s = e
                            }
                            Reflect.construct(e, [], t)
                        } else {
                            try {
                                t.call()
                            } catch (e) {
                                s = e
                            }
                            e.call(t.prototype)
                        }
                    else {
                        try {
                            throw Error()
                        } catch (e) {
                            s = e
                        }
                        e()
                    }
                } catch (t) {
                    if (t && s && "string" == typeof t.stack) {
                        for (var i = t.stack.split("\n"), a = s.stack.split("\n"), o = i.length - 1, r = a.length - 1; 1 <= o && 0 <= r && i[o] !== a[r]; )
                            r--;
                        for (; 1 <= o && 0 <= r; o--,
                        r--)
                            if (i[o] !== a[r]) {
                                if (1 !== o || 1 !== r)
                                    do {
                                        if (o--,
                                        0 > --r || i[o] !== a[r]) {
                                            var l = "\n" + i[o].replace(" at new ", " at ");
                                            return e.displayName && l.includes("<anonymous>") && (l = l.replace("<anonymous>", e.displayName)),
                                            l
                                        }
                                    } while (1 <= o && 0 <= r);
                                break
                            }
                    }
                } finally {
                    U = !1,
                    Error.prepareStackTrace = n
                }
                return (e = e ? e.displayName || e.name : "") ? F(e) : ""
            }
            function G(e) {
                switch (e.tag) {
                case 5:
                    return F(e.type);
                case 16:
                    return F("Lazy");
                case 13:
                    return F("Suspense");
                case 19:
                    return F("SuspenseList");
                case 0:
                case 2:
                case 15:
                    return e = B(e.type, !1);
                case 11:
                    return e = B(e.type.render, !1);
                case 1:
                    return e = B(e.type, !0);
                default:
                    return ""
                }
            }
            function V(e) {
                if (null == e)
                    return null;
                if ("function" == typeof e)
                    return e.displayName || e.name || null;
                if ("string" == typeof e)
                    return e;
                switch (e) {
                case I:
                    return "Fragment";
                case E:
                    return "Portal";
                case y:
                    return "Profiler";
                case S:
                    return "StrictMode";
                case w:
                    return "Suspense";
                case O:
                    return "SuspenseList"
                }
                if ("object" == typeof e)
                    switch (e.$$typeof) {
                    case C:
                        return (e.displayName || "Context") + ".Consumer";
                    case j:
                        return (e._context.displayName || "Context") + ".Provider";
                    case N:
                        var t = e.render;
                        return (e = e.displayName) || (e = "" !== (e = t.displayName || t.name || "") ? "ForwardRef(" + e + ")" : "ForwardRef"),
                        e;
                    case P:
                        return null !== (t = e.displayName || null) ? t : V(e.type) || "Memo";
                    case L:
                        t = e._payload,
                        e = e._init;
                        try {
                            return V(e(t))
                        } catch (e) {}
                    }
                return null
            }
            function H(e) {
                var t = e.type;
                switch (e.tag) {
                case 24:
                    return "Cache";
                case 9:
                    return (t.displayName || "Context") + ".Consumer";
                case 10:
                    return (t._context.displayName || "Context") + ".Provider";
                case 18:
                    return "DehydratedFragment";
                case 11:
                    return e = (e = t.render).displayName || e.name || "",
                    t.displayName || ("" !== e ? "ForwardRef(" + e + ")" : "ForwardRef");
                case 7:
                    return "Fragment";
                case 5:
                    return t;
                case 4:
                    return "Portal";
                case 3:
                    return "Root";
                case 6:
                    return "Text";
                case 16:
                    return V(t);
                case 8:
                    return t === S ? "StrictMode" : "Mode";
                case 22:
                    return "Offscreen";
                case 12:
                    return "Profiler";
                case 21:
                    return "Scope";
                case 13:
                    return "Suspense";
                case 19:
                    return "SuspenseList";
                case 25:
                    return "TracingMarker";
                case 1:
                case 0:
                case 17:
                case 2:
                case 14:
                case 15:
                    if ("function" == typeof t)
                        return t.displayName || t.name || null;
                    if ("string" == typeof t)
                        return t
                }
                return null
            }
            function K(e) {
                switch (typeof e) {
                case "boolean":
                case "number":
                case "string":
                case "undefined":
                case "object":
                    return e;
                default:
                    return ""
                }
            }
            function W(e) {
                var t = e.type;
                return (e = e.nodeName) && "input" === e.toLowerCase() && ("checkbox" === t || "radio" === t)
            }
            function z(e) {
                e._valueTracker || (e._valueTracker = function(e) {
                    var t = W(e) ? "checked" : "value"
                      , n = Object.getOwnPropertyDescriptor(e.constructor.prototype, t)
                      , s = "" + e[t];
                    if (!e.hasOwnProperty(t) && void 0 !== n && "function" == typeof n.get && "function" == typeof n.set) {
                        var i = n.get
                          , a = n.set;
                        return Object.defineProperty(e, t, {
                            configurable: !0,
                            get: function() {
                                return i.call(this)
                            },
                            set: function(e) {
                                s = "" + e,
                                a.call(this, e)
                            }
                        }),
                        Object.defineProperty(e, t, {
                            enumerable: n.enumerable
                        }),
                        {
                            getValue: function() {
                                return s
                            },
                            setValue: function(e) {
                                s = "" + e
                            },
                            stopTracking: function() {
                                e._valueTracker = null,
                                delete e[t]
                            }
                        }
                    }
                }(e))
            }
            function Y(e) {
                if (!e)
                    return !1;
                var t = e._valueTracker;
                if (!t)
                    return !0;
                var n = t.getValue()
                  , s = "";
                return e && (s = W(e) ? e.checked ? "true" : "false" : e.value),
                (e = s) !== n && (t.setValue(e),
                !0)
            }
            function $(e) {
                if (void 0 === (e = e || ("undefined" != typeof document ? document : void 0)))
                    return null;
                try {
                    return e.activeElement || e.body
                } catch (t) {
                    return e.body
                }
            }
            function q(e, t) {
                var n = t.checked;
                return D({}, t, {
                    defaultChecked: void 0,
                    defaultValue: void 0,
                    value: void 0,
                    checked: null != n ? n : e._wrapperState.initialChecked
                })
            }
            function X(e, t) {
                var n = null == t.defaultValue ? "" : t.defaultValue
                  , s = null != t.checked ? t.checked : t.defaultChecked;
                n = K(null != t.value ? t.value : n),
                e._wrapperState = {
                    initialChecked: s,
                    initialValue: n,
                    controlled: "checkbox" === t.type || "radio" === t.type ? null != t.checked : null != t.value
                }
            }
            function Q(e, t) {
                null != (t = t.checked) && _(e, "checked", t, !1)
            }
            function Z(e, t) {
                Q(e, t);
                var n = K(t.value)
                  , s = t.type;
                if (null != n)
                    "number" === s ? (0 === n && "" === e.value || e.value != n) && (e.value = "" + n) : e.value !== "" + n && (e.value = "" + n);
                else if ("submit" === s || "reset" === s)
                    return void e.removeAttribute("value");
                t.hasOwnProperty("value") ? ee(e, t.type, n) : t.hasOwnProperty("defaultValue") && ee(e, t.type, K(t.defaultValue)),
                null == t.checked && null != t.defaultChecked && (e.defaultChecked = !!t.defaultChecked)
            }
            function J(e, t, n) {
                if (t.hasOwnProperty("value") || t.hasOwnProperty("defaultValue")) {
                    var s = t.type;
                    if (!("submit" !== s && "reset" !== s || void 0 !== t.value && null !== t.value))
                        return;
                    t = "" + e._wrapperState.initialValue,
                    n || t === e.value || (e.value = t),
                    e.defaultValue = t
                }
                "" !== (n = e.name) && (e.name = ""),
                e.defaultChecked = !!e._wrapperState.initialChecked,
                "" !== n && (e.name = n)
            }
            function ee(e, t, n) {
                "number" === t && $(e.ownerDocument) === e || (null == n ? e.defaultValue = "" + e._wrapperState.initialValue : e.defaultValue !== "" + n && (e.defaultValue = "" + n))
            }
            var te = Array.isArray;
            function ne(e, t, n, s) {
                if (e = e.options,
                t) {
                    t = {};
                    for (var i = 0; i < n.length; i++)
                        t["$" + n[i]] = !0;
                    for (n = 0; n < e.length; n++)
                        i = t.hasOwnProperty("$" + e[n].value),
                        e[n].selected !== i && (e[n].selected = i),
                        i && s && (e[n].defaultSelected = !0)
                } else {
                    for (n = "" + K(n),
                    t = null,
                    i = 0; i < e.length; i++) {
                        if (e[i].value === n)
                            return e[i].selected = !0,
                            void (s && (e[i].defaultSelected = !0));
                        null !== t || e[i].disabled || (t = e[i])
                    }
                    null !== t && (t.selected = !0)
                }
            }
            function se(e, t) {
                if (null != t.dangerouslySetInnerHTML)
                    throw Error(a(91));
                return D({}, t, {
                    value: void 0,
                    defaultValue: void 0,
                    children: "" + e._wrapperState.initialValue
                })
            }
            function ie(e, t) {
                var n = t.value;
                if (null == n) {
                    if (n = t.children,
                    t = t.defaultValue,
                    null != n) {
                        if (null != t)
                            throw Error(a(92));
                        if (te(n)) {
                            if (1 < n.length)
                                throw Error(a(93));
                            n = n[0]
                        }
                        t = n
                    }
                    null == t && (t = ""),
                    n = t
                }
                e._wrapperState = {
                    initialValue: K(n)
                }
            }
            function ae(e, t) {
                var n = K(t.value)
                  , s = K(t.defaultValue);
                null != n && ((n = "" + n) !== e.value && (e.value = n),
                null == t.defaultValue && e.defaultValue !== n && (e.defaultValue = n)),
                null != s && (e.defaultValue = "" + s)
            }
            function oe(e) {
                var t = e.textContent;
                t === e._wrapperState.initialValue && "" !== t && null !== t && (e.value = t)
            }
            function re(e) {
                switch (e) {
                case "svg":
                    return "http://www.w3.org/2000/svg";
                case "math":
                    return "http://www.w3.org/1998/Math/MathML";
                default:
                    return "http://www.w3.org/1999/xhtml"
                }
            }
            function le(e, t) {
                return null == e || "http://www.w3.org/1999/xhtml" === e ? re(t) : "http://www.w3.org/2000/svg" === e && "foreignObject" === t ? "http://www.w3.org/1999/xhtml" : e
            }
            var ce, ue, de = (ue = function(e, t) {
                if ("http://www.w3.org/2000/svg" !== e.namespaceURI || "innerHTML"in e)
                    e.innerHTML = t;
                else {
                    for ((ce = ce || document.createElement("div")).innerHTML = "<svg>" + t.valueOf().toString() + "</svg>",
                    t = ce.firstChild; e.firstChild; )
                        e.removeChild(e.firstChild);
                    for (; t.firstChild; )
                        e.appendChild(t.firstChild)
                }
            }
            ,
            "undefined" != typeof MSApp && MSApp.execUnsafeLocalFunction ? function(e, t, n, s) {
                MSApp.execUnsafeLocalFunction((function() {
                    return ue(e, t)
                }
                ))
            }
            : ue);
            function me(e, t) {
                if (t) {
                    var n = e.firstChild;
                    if (n && n === e.lastChild && 3 === n.nodeType)
                        return void (n.nodeValue = t)
                }
                e.textContent = t
            }
            var he = {
                animationIterationCount: !0,
                aspectRatio: !0,
                borderImageOutset: !0,
                borderImageSlice: !0,
                borderImageWidth: !0,
                boxFlex: !0,
                boxFlexGroup: !0,
                boxOrdinalGroup: !0,
                columnCount: !0,
                columns: !0,
                flex: !0,
                flexGrow: !0,
                flexPositive: !0,
                flexShrink: !0,
                flexNegative: !0,
                flexOrder: !0,
                gridArea: !0,
                gridRow: !0,
                gridRowEnd: !0,
                gridRowSpan: !0,
                gridRowStart: !0,
                gridColumn: !0,
                gridColumnEnd: !0,
                gridColumnSpan: !0,
                gridColumnStart: !0,
                fontWeight: !0,
                lineClamp: !0,
                lineHeight: !0,
                opacity: !0,
                order: !0,
                orphans: !0,
                tabSize: !0,
                widows: !0,
                zIndex: !0,
                zoom: !0,
                fillOpacity: !0,
                floodOpacity: !0,
                stopOpacity: !0,
                strokeDasharray: !0,
                strokeDashoffset: !0,
                strokeMiterlimit: !0,
                strokeOpacity: !0,
                strokeWidth: !0
            }
              , ge = ["Webkit", "ms", "Moz", "O"];
            function pe(e, t, n) {
                return null == t || "boolean" == typeof t || "" === t ? "" : n || "number" != typeof t || 0 === t || he.hasOwnProperty(e) && he[e] ? ("" + t).trim() : t + "px"
            }
            function fe(e, t) {
                for (var n in e = e.style,
                t)
                    if (t.hasOwnProperty(n)) {
                        var s = 0 === n.indexOf("--")
                          , i = pe(n, t[n], s);
                        "float" === n && (n = "cssFloat"),
                        s ? e.setProperty(n, i) : e[n] = i
                    }
            }
            Object.keys(he).forEach((function(e) {
                ge.forEach((function(t) {
                    t = t + e.charAt(0).toUpperCase() + e.substring(1),
                    he[t] = he[e]
                }
                ))
            }
            ));
            var xe = D({
                menuitem: !0
            }, {
                area: !0,
                base: !0,
                br: !0,
                col: !0,
                embed: !0,
                hr: !0,
                img: !0,
                input: !0,
                keygen: !0,
                link: !0,
                meta: !0,
                param: !0,
                source: !0,
                track: !0,
                wbr: !0
            });
            function ve(e, t) {
                if (t) {
                    if (xe[e] && (null != t.children || null != t.dangerouslySetInnerHTML))
                        throw Error(a(137, e));
                    if (null != t.dangerouslySetInnerHTML) {
                        if (null != t.children)
                            throw Error(a(60));
                        if ("object" != typeof t.dangerouslySetInnerHTML || !("__html"in t.dangerouslySetInnerHTML))
                            throw Error(a(61))
                    }
                    if (null != t.style && "object" != typeof t.style)
                        throw Error(a(62))
                }
            }
            function _e(e, t) {
                if (-1 === e.indexOf("-"))
                    return "string" == typeof t.is;
                switch (e) {
                case "annotation-xml":
                case "color-profile":
                case "font-face":
                case "font-face-src":
                case "font-face-uri":
                case "font-face-format":
                case "font-face-name":
                case "missing-glyph":
                    return !1;
                default:
                    return !0
                }
            }
            var be = null;
            function Te(e) {
                return (e = e.target || e.srcElement || window).correspondingUseElement && (e = e.correspondingUseElement),
                3 === e.nodeType ? e.parentNode : e
            }
            var Ee = null
              , Ie = null
              , Se = null;
            function ye(e) {
                if (e = _i(e)) {
                    if ("function" != typeof Ee)
                        throw Error(a(280));
                    var t = e.stateNode;
                    t && (t = Ti(t),
                    Ee(e.stateNode, e.type, t))
                }
            }
            function je(e) {
                Ie ? Se ? Se.push(e) : Se = [e] : Ie = e
            }
            function Ce() {
                if (Ie) {
                    var e = Ie
                      , t = Se;
                    if (Se = Ie = null,
                    ye(e),
                    t)
                        for (e = 0; e < t.length; e++)
                            ye(t[e])
                }
            }
            function Ne(e, t) {
                return e(t)
            }
            function we() {}
            var Oe = !1;
            function Pe(e, t, n) {
                if (Oe)
                    return e(t, n);
                Oe = !0;
                try {
                    return Ne(e, t, n)
                } finally {
                    Oe = !1,
                    (null !== Ie || null !== Se) && (we(),
                    Ce())
                }
            }
            function Le(e, t) {
                var n = e.stateNode;
                if (null === n)
                    return null;
                var s = Ti(n);
                if (null === s)
                    return null;
                n = s[t];
                e: switch (t) {
                case "onClick":
                case "onClickCapture":
                case "onDoubleClick":
                case "onDoubleClickCapture":
                case "onMouseDown":
                case "onMouseDownCapture":
                case "onMouseMove":
                case "onMouseMoveCapture":
                case "onMouseUp":
                case "onMouseUpCapture":
                case "onMouseEnter":
                    (s = !s.disabled) || (s = !("button" === (e = e.type) || "input" === e || "select" === e || "textarea" === e)),
                    e = !s;
                    break e;
                default:
                    e = !1
                }
                if (e)
                    return null;
                if (n && "function" != typeof n)
                    throw Error(a(231, t, typeof n));
                return n
            }
            var Ae = !1;
            if (u)
                try {
                    var Me = {};
                    Object.defineProperty(Me, "passive", {
                        get: function() {
                            Ae = !0
                        }
                    }),
                    window.addEventListener("test", Me, Me),
                    window.removeEventListener("test", Me, Me)
                } catch (ue) {
                    Ae = !1
                }
            function Re(e, t, n, s, i, a, o, r, l) {
                var c = Array.prototype.slice.call(arguments, 3);
                try {
                    t.apply(n, c)
                } catch (e) {
                    this.onError(e)
                }
            }
            var ke = !1
              , De = null
              , Fe = !1
              , Ue = null
              , Be = {
                onError: function(e) {
                    ke = !0,
                    De = e
                }
            };
            function Ge(e, t, n, s, i, a, o, r, l) {
                ke = !1,
                De = null,
                Re.apply(Be, arguments)
            }
            function Ve(e) {
                var t = e
                  , n = e;
                if (e.alternate)
                    for (; t.return; )
                        t = t.return;
                else {
                    e = t;
                    do {
                        0 != (4098 & (t = e).flags) && (n = t.return),
                        e = t.return
                    } while (e)
                }
                return 3 === t.tag ? n : null
            }
            function He(e) {
                if (13 === e.tag) {
                    var t = e.memoizedState;
                    if (null === t && (null !== (e = e.alternate) && (t = e.memoizedState)),
                    null !== t)
                        return t.dehydrated
                }
                return null
            }
            function Ke(e) {
                if (Ve(e) !== e)
                    throw Error(a(188))
            }
            function We(e) {
                return null !== (e = function(e) {
                    var t = e.alternate;
                    if (!t) {
                        if (null === (t = Ve(e)))
                            throw Error(a(188));
                        return t !== e ? null : e
                    }
                    for (var n = e, s = t; ; ) {
                        var i = n.return;
                        if (null === i)
                            break;
                        var o = i.alternate;
                        if (null === o) {
                            if (null !== (s = i.return)) {
                                n = s;
                                continue
                            }
                            break
                        }
                        if (i.child === o.child) {
                            for (o = i.child; o; ) {
                                if (o === n)
                                    return Ke(i),
                                    e;
                                if (o === s)
                                    return Ke(i),
                                    t;
                                o = o.sibling
                            }
                            throw Error(a(188))
                        }
                        if (n.return !== s.return)
                            n = i,
                            s = o;
                        else {
                            for (var r = !1, l = i.child; l; ) {
                                if (l === n) {
                                    r = !0,
                                    n = i,
                                    s = o;
                                    break
                                }
                                if (l === s) {
                                    r = !0,
                                    s = i,
                                    n = o;
                                    break
                                }
                                l = l.sibling
                            }
                            if (!r) {
                                for (l = o.child; l; ) {
                                    if (l === n) {
                                        r = !0,
                                        n = o,
                                        s = i;
                                        break
                                    }
                                    if (l === s) {
                                        r = !0,
                                        s = o,
                                        n = i;
                                        break
                                    }
                                    l = l.sibling
                                }
                                if (!r)
                                    throw Error(a(189))
                            }
                        }
                        if (n.alternate !== s)
                            throw Error(a(190))
                    }
                    if (3 !== n.tag)
                        throw Error(a(188));
                    return n.stateNode.current === n ? e : t
                }(e)) ? ze(e) : null
            }
            function ze(e) {
                if (5 === e.tag || 6 === e.tag)
                    return e;
                for (e = e.child; null !== e; ) {
                    var t = ze(e);
                    if (null !== t)
                        return t;
                    e = e.sibling
                }
                return null
            }
            var Ye = i.unstable_scheduleCallback
              , $e = i.unstable_cancelCallback
              , qe = i.unstable_shouldYield
              , Xe = i.unstable_requestPaint
              , Qe = i.unstable_now
              , Ze = i.unstable_getCurrentPriorityLevel
              , Je = i.unstable_ImmediatePriority
              , et = i.unstable_UserBlockingPriority
              , tt = i.unstable_NormalPriority
              , nt = i.unstable_LowPriority
              , st = i.unstable_IdlePriority
              , it = null
              , at = null;
            var ot = Math.clz32 ? Math.clz32 : function(e) {
                return e >>>= 0,
                0 === e ? 32 : 31 - (rt(e) / lt | 0) | 0
            }
              , rt = Math.log
              , lt = Math.LN2;
            var ct = 64
              , ut = 4194304;
            function dt(e) {
                switch (e & -e) {
                case 1:
                    return 1;
                case 2:
                    return 2;
                case 4:
                    return 4;
                case 8:
                    return 8;
                case 16:
                    return 16;
                case 32:
                    return 32;
                case 64:
                case 128:
                case 256:
                case 512:
                case 1024:
                case 2048:
                case 4096:
                case 8192:
                case 16384:
                case 32768:
                case 65536:
                case 131072:
                case 262144:
                case 524288:
                case 1048576:
                case 2097152:
                    return 4194240 & e;
                case 4194304:
                case 8388608:
                case 16777216:
                case 33554432:
                case 67108864:
                    return 130023424 & e;
                case 134217728:
                    return 134217728;
                case 268435456:
                    return 268435456;
                case 536870912:
                    return 536870912;
                case 1073741824:
                    return 1073741824;
                default:
                    return e
                }
            }
            function mt(e, t) {
                var n = e.pendingLanes;
                if (0 === n)
                    return 0;
                var s = 0
                  , i = e.suspendedLanes
                  , a = e.pingedLanes
                  , o = 268435455 & n;
                if (0 !== o) {
                    var r = o & ~i;
                    0 !== r ? s = dt(r) : 0 !== (a &= o) && (s = dt(a))
                } else
                    0 !== (o = n & ~i) ? s = dt(o) : 0 !== a && (s = dt(a));
                if (0 === s)
                    return 0;
                if (0 !== t && t !== s && 0 == (t & i) && ((i = s & -s) >= (a = t & -t) || 16 === i && 0 != (4194240 & a)))
                    return t;
                if (0 != (4 & s) && (s |= 16 & n),
                0 !== (t = e.entangledLanes))
                    for (e = e.entanglements,
                    t &= s; 0 < t; )
                        i = 1 << (n = 31 - ot(t)),
                        s |= e[n],
                        t &= ~i;
                return s
            }
            function ht(e, t) {
                switch (e) {
                case 1:
                case 2:
                case 4:
                    return t + 250;
                case 8:
                case 16:
                case 32:
                case 64:
                case 128:
                case 256:
                case 512:
                case 1024:
                case 2048:
                case 4096:
                case 8192:
                case 16384:
                case 32768:
                case 65536:
                case 131072:
                case 262144:
                case 524288:
                case 1048576:
                case 2097152:
                    return t + 5e3;
                default:
                    return -1
                }
            }
            function gt(e) {
                return 0 !== (e = -1073741825 & e.pendingLanes) ? e : 1073741824 & e ? 1073741824 : 0
            }
            function pt() {
                var e = ct;
                return 0 == (4194240 & (ct <<= 1)) && (ct = 64),
                e
            }
            function ft(e) {
                for (var t = [], n = 0; 31 > n; n++)
                    t.push(e);
                return t
            }
            function xt(e, t, n) {
                e.pendingLanes |= t,
                536870912 !== t && (e.suspendedLanes = 0,
                e.pingedLanes = 0),
                (e = e.eventTimes)[t = 31 - ot(t)] = n
            }
            function vt(e, t) {
                var n = e.entangledLanes |= t;
                for (e = e.entanglements; n; ) {
                    var s = 31 - ot(n)
                      , i = 1 << s;
                    i & t | e[s] & t && (e[s] |= t),
                    n &= ~i
                }
            }
            var _t = 0;
            function bt(e) {
                return 1 < (e &= -e) ? 4 < e ? 0 != (268435455 & e) ? 16 : 536870912 : 4 : 1
            }
            var Tt, Et, It, St, yt, jt = !1, Ct = [], Nt = null, wt = null, Ot = null, Pt = new Map, Lt = new Map, At = [], Mt = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
            function Rt(e, t) {
                switch (e) {
                case "focusin":
                case "focusout":
                    Nt = null;
                    break;
                case "dragenter":
                case "dragleave":
                    wt = null;
                    break;
                case "mouseover":
                case "mouseout":
                    Ot = null;
                    break;
                case "pointerover":
                case "pointerout":
                    Pt.delete(t.pointerId);
                    break;
                case "gotpointercapture":
                case "lostpointercapture":
                    Lt.delete(t.pointerId)
                }
            }
            function kt(e, t, n, s, i, a) {
                return null === e || e.nativeEvent !== a ? (e = {
                    blockedOn: t,
                    domEventName: n,
                    eventSystemFlags: s,
                    nativeEvent: a,
                    targetContainers: [i]
                },
                null !== t && (null !== (t = _i(t)) && Et(t)),
                e) : (e.eventSystemFlags |= s,
                t = e.targetContainers,
                null !== i && -1 === t.indexOf(i) && t.push(i),
                e)
            }
            function Dt(e) {
                var t = vi(e.target);
                if (null !== t) {
                    var n = Ve(t);
                    if (null !== n)
                        if (13 === (t = n.tag)) {
                            if (null !== (t = He(n)))
                                return e.blockedOn = t,
                                void yt(e.priority, (function() {
                                    It(n)
                                }
                                ))
                        } else if (3 === t && n.stateNode.current.memoizedState.isDehydrated)
                            return void (e.blockedOn = 3 === n.tag ? n.stateNode.containerInfo : null)
                }
                e.blockedOn = null
            }
            function Ft(e) {
                if (null !== e.blockedOn)
                    return !1;
                for (var t = e.targetContainers; 0 < t.length; ) {
                    var n = qt(e.domEventName, e.eventSystemFlags, t[0], e.nativeEvent);
                    if (null !== n)
                        return null !== (t = _i(n)) && Et(t),
                        e.blockedOn = n,
                        !1;
                    var s = new (n = e.nativeEvent).constructor(n.type,n);
                    be = s,
                    n.target.dispatchEvent(s),
                    be = null,
                    t.shift()
                }
                return !0
            }
            function Ut(e, t, n) {
                Ft(e) && n.delete(t)
            }
            function Bt() {
                jt = !1,
                null !== Nt && Ft(Nt) && (Nt = null),
                null !== wt && Ft(wt) && (wt = null),
                null !== Ot && Ft(Ot) && (Ot = null),
                Pt.forEach(Ut),
                Lt.forEach(Ut)
            }
            function Gt(e, t) {
                e.blockedOn === t && (e.blockedOn = null,
                jt || (jt = !0,
                i.unstable_scheduleCallback(i.unstable_NormalPriority, Bt)))
            }
            function Vt(e) {
                function t(t) {
                    return Gt(t, e)
                }
                if (0 < Ct.length) {
                    Gt(Ct[0], e);
                    for (var n = 1; n < Ct.length; n++) {
                        var s = Ct[n];
                        s.blockedOn === e && (s.blockedOn = null)
                    }
                }
                for (null !== Nt && Gt(Nt, e),
                null !== wt && Gt(wt, e),
                null !== Ot && Gt(Ot, e),
                Pt.forEach(t),
                Lt.forEach(t),
                n = 0; n < At.length; n++)
                    (s = At[n]).blockedOn === e && (s.blockedOn = null);
                for (; 0 < At.length && null === (n = At[0]).blockedOn; )
                    Dt(n),
                    null === n.blockedOn && At.shift()
            }
            var Ht = b.ReactCurrentBatchConfig
              , Kt = !0;
            function Wt(e, t, n, s) {
                var i = _t
                  , a = Ht.transition;
                Ht.transition = null;
                try {
                    _t = 1,
                    Yt(e, t, n, s)
                } finally {
                    _t = i,
                    Ht.transition = a
                }
            }
            function zt(e, t, n, s) {
                var i = _t
                  , a = Ht.transition;
                Ht.transition = null;
                try {
                    _t = 4,
                    Yt(e, t, n, s)
                } finally {
                    _t = i,
                    Ht.transition = a
                }
            }
            function Yt(e, t, n, s) {
                if (Kt) {
                    var i = qt(e, t, n, s);
                    if (null === i)
                        Ks(e, t, s, $t, n),
                        Rt(e, s);
                    else if (function(e, t, n, s, i) {
                        switch (t) {
                        case "focusin":
                            return Nt = kt(Nt, e, t, n, s, i),
                            !0;
                        case "dragenter":
                            return wt = kt(wt, e, t, n, s, i),
                            !0;
                        case "mouseover":
                            return Ot = kt(Ot, e, t, n, s, i),
                            !0;
                        case "pointerover":
                            var a = i.pointerId;
                            return Pt.set(a, kt(Pt.get(a) || null, e, t, n, s, i)),
                            !0;
                        case "gotpointercapture":
                            return a = i.pointerId,
                            Lt.set(a, kt(Lt.get(a) || null, e, t, n, s, i)),
                            !0
                        }
                        return !1
                    }(i, e, t, n, s))
                        s.stopPropagation();
                    else if (Rt(e, s),
                    4 & t && -1 < Mt.indexOf(e)) {
                        for (; null !== i; ) {
                            var a = _i(i);
                            if (null !== a && Tt(a),
                            null === (a = qt(e, t, n, s)) && Ks(e, t, s, $t, n),
                            a === i)
                                break;
                            i = a
                        }
                        null !== i && s.stopPropagation()
                    } else
                        Ks(e, t, s, null, n)
                }
            }
            var $t = null;
            function qt(e, t, n, s) {
                if ($t = null,
                null !== (e = vi(e = Te(s))))
                    if (null === (t = Ve(e)))
                        e = null;
                    else if (13 === (n = t.tag)) {
                        if (null !== (e = He(t)))
                            return e;
                        e = null
                    } else if (3 === n) {
                        if (t.stateNode.current.memoizedState.isDehydrated)
                            return 3 === t.tag ? t.stateNode.containerInfo : null;
                        e = null
                    } else
                        t !== e && (e = null);
                return $t = e,
                null
            }
            function Xt(e) {
                switch (e) {
                case "cancel":
                case "click":
                case "close":
                case "contextmenu":
                case "copy":
                case "cut":
                case "auxclick":
                case "dblclick":
                case "dragend":
                case "dragstart":
                case "drop":
                case "focusin":
                case "focusout":
                case "input":
                case "invalid":
                case "keydown":
                case "keypress":
                case "keyup":
                case "mousedown":
                case "mouseup":
                case "paste":
                case "pause":
                case "play":
                case "pointercancel":
                case "pointerdown":
                case "pointerup":
                case "ratechange":
                case "reset":
                case "resize":
                case "seeked":
                case "submit":
                case "touchcancel":
                case "touchend":
                case "touchstart":
                case "volumechange":
                case "change":
                case "selectionchange":
                case "textInput":
                case "compositionstart":
                case "compositionend":
                case "compositionupdate":
                case "beforeblur":
                case "afterblur":
                case "beforeinput":
                case "blur":
                case "fullscreenchange":
                case "focus":
                case "hashchange":
                case "popstate":
                case "select":
                case "selectstart":
                    return 1;
                case "drag":
                case "dragenter":
                case "dragexit":
                case "dragleave":
                case "dragover":
                case "mousemove":
                case "mouseout":
                case "mouseover":
                case "pointermove":
                case "pointerout":
                case "pointerover":
                case "scroll":
                case "toggle":
                case "touchmove":
                case "wheel":
                case "mouseenter":
                case "mouseleave":
                case "pointerenter":
                case "pointerleave":
                    return 4;
                case "message":
                    switch (Ze()) {
                    case Je:
                        return 1;
                    case et:
                        return 4;
                    case tt:
                    case nt:
                        return 16;
                    case st:
                        return 536870912;
                    default:
                        return 16
                    }
                default:
                    return 16
                }
            }
            var Qt = null
              , Zt = null
              , Jt = null;
            function en() {
                if (Jt)
                    return Jt;
                var e, t, n = Zt, s = n.length, i = "value"in Qt ? Qt.value : Qt.textContent, a = i.length;
                for (e = 0; e < s && n[e] === i[e]; e++)
                    ;
                var o = s - e;
                for (t = 1; t <= o && n[s - t] === i[a - t]; t++)
                    ;
                return Jt = i.slice(e, 1 < t ? 1 - t : void 0)
            }
            function tn(e) {
                var t = e.keyCode;
                return "charCode"in e ? 0 === (e = e.charCode) && 13 === t && (e = 13) : e = t,
                10 === e && (e = 13),
                32 <= e || 13 === e ? e : 0
            }
            function nn() {
                return !0
            }
            function sn() {
                return !1
            }
            function an(e) {
                function t(t, n, s, i, a) {
                    for (var o in this._reactName = t,
                    this._targetInst = s,
                    this.type = n,
                    this.nativeEvent = i,
                    this.target = a,
                    this.currentTarget = null,
                    e)
                        e.hasOwnProperty(o) && (t = e[o],
                        this[o] = t ? t(i) : i[o]);
                    return this.isDefaultPrevented = (null != i.defaultPrevented ? i.defaultPrevented : !1 === i.returnValue) ? nn : sn,
                    this.isPropagationStopped = sn,
                    this
                }
                return D(t.prototype, {
                    preventDefault: function() {
                        this.defaultPrevented = !0;
                        var e = this.nativeEvent;
                        e && (e.preventDefault ? e.preventDefault() : "unknown" != typeof e.returnValue && (e.returnValue = !1),
                        this.isDefaultPrevented = nn)
                    },
                    stopPropagation: function() {
                        var e = this.nativeEvent;
                        e && (e.stopPropagation ? e.stopPropagation() : "unknown" != typeof e.cancelBubble && (e.cancelBubble = !0),
                        this.isPropagationStopped = nn)
                    },
                    persist: function() {},
                    isPersistent: nn
                }),
                t
            }
            var on, rn, ln, cn = {
                eventPhase: 0,
                bubbles: 0,
                cancelable: 0,
                timeStamp: function(e) {
                    return e.timeStamp || Date.now()
                },
                defaultPrevented: 0,
                isTrusted: 0
            }, un = an(cn), dn = D({}, cn, {
                view: 0,
                detail: 0
            }), mn = an(dn), hn = D({}, dn, {
                screenX: 0,
                screenY: 0,
                clientX: 0,
                clientY: 0,
                pageX: 0,
                pageY: 0,
                ctrlKey: 0,
                shiftKey: 0,
                altKey: 0,
                metaKey: 0,
                getModifierState: yn,
                button: 0,
                buttons: 0,
                relatedTarget: function(e) {
                    return void 0 === e.relatedTarget ? e.fromElement === e.srcElement ? e.toElement : e.fromElement : e.relatedTarget
                },
                movementX: function(e) {
                    return "movementX"in e ? e.movementX : (e !== ln && (ln && "mousemove" === e.type ? (on = e.screenX - ln.screenX,
                    rn = e.screenY - ln.screenY) : rn = on = 0,
                    ln = e),
                    on)
                },
                movementY: function(e) {
                    return "movementY"in e ? e.movementY : rn
                }
            }), gn = an(hn), pn = an(D({}, hn, {
                dataTransfer: 0
            })), fn = an(D({}, dn, {
                relatedTarget: 0
            })), xn = an(D({}, cn, {
                animationName: 0,
                elapsedTime: 0,
                pseudoElement: 0
            })), vn = D({}, cn, {
                clipboardData: function(e) {
                    return "clipboardData"in e ? e.clipboardData : window.clipboardData
                }
            }), _n = an(vn), bn = an(D({}, cn, {
                data: 0
            })), Tn = {
                Esc: "Escape",
                Spacebar: " ",
                Left: "ArrowLeft",
                Up: "ArrowUp",
                Right: "ArrowRight",
                Down: "ArrowDown",
                Del: "Delete",
                Win: "OS",
                Menu: "ContextMenu",
                Apps: "ContextMenu",
                Scroll: "ScrollLock",
                MozPrintableKey: "Unidentified"
            }, En = {
                8: "Backspace",
                9: "Tab",
                12: "Clear",
                13: "Enter",
                16: "Shift",
                17: "Control",
                18: "Alt",
                19: "Pause",
                20: "CapsLock",
                27: "Escape",
                32: " ",
                33: "PageUp",
                34: "PageDown",
                35: "End",
                36: "Home",
                37: "ArrowLeft",
                38: "ArrowUp",
                39: "ArrowRight",
                40: "ArrowDown",
                45: "Insert",
                46: "Delete",
                112: "F1",
                113: "F2",
                114: "F3",
                115: "F4",
                116: "F5",
                117: "F6",
                118: "F7",
                119: "F8",
                120: "F9",
                121: "F10",
                122: "F11",
                123: "F12",
                144: "NumLock",
                145: "ScrollLock",
                224: "Meta"
            }, In = {
                Alt: "altKey",
                Control: "ctrlKey",
                Meta: "metaKey",
                Shift: "shiftKey"
            };
            function Sn(e) {
                var t = this.nativeEvent;
                return t.getModifierState ? t.getModifierState(e) : !!(e = In[e]) && !!t[e]
            }
            function yn() {
                return Sn
            }
            var jn = D({}, dn, {
                key: function(e) {
                    if (e.key) {
                        var t = Tn[e.key] || e.key;
                        if ("Unidentified" !== t)
                            return t
                    }
                    return "keypress" === e.type ? 13 === (e = tn(e)) ? "Enter" : String.fromCharCode(e) : "keydown" === e.type || "keyup" === e.type ? En[e.keyCode] || "Unidentified" : ""
                },
                code: 0,
                location: 0,
                ctrlKey: 0,
                shiftKey: 0,
                altKey: 0,
                metaKey: 0,
                repeat: 0,
                locale: 0,
                getModifierState: yn,
                charCode: function(e) {
                    return "keypress" === e.type ? tn(e) : 0
                },
                keyCode: function(e) {
                    return "keydown" === e.type || "keyup" === e.type ? e.keyCode : 0
                },
                which: function(e) {
                    return "keypress" === e.type ? tn(e) : "keydown" === e.type || "keyup" === e.type ? e.keyCode : 0
                }
            })
              , Cn = an(jn)
              , Nn = an(D({}, hn, {
                pointerId: 0,
                width: 0,
                height: 0,
                pressure: 0,
                tangentialPressure: 0,
                tiltX: 0,
                tiltY: 0,
                twist: 0,
                pointerType: 0,
                isPrimary: 0
            }))
              , wn = an(D({}, dn, {
                touches: 0,
                targetTouches: 0,
                changedTouches: 0,
                altKey: 0,
                metaKey: 0,
                ctrlKey: 0,
                shiftKey: 0,
                getModifierState: yn
            }))
              , On = an(D({}, cn, {
                propertyName: 0,
                elapsedTime: 0,
                pseudoElement: 0
            }))
              , Pn = D({}, hn, {
                deltaX: function(e) {
                    return "deltaX"in e ? e.deltaX : "wheelDeltaX"in e ? -e.wheelDeltaX : 0
                },
                deltaY: function(e) {
                    return "deltaY"in e ? e.deltaY : "wheelDeltaY"in e ? -e.wheelDeltaY : "wheelDelta"in e ? -e.wheelDelta : 0
                },
                deltaZ: 0,
                deltaMode: 0
            })
              , Ln = an(Pn)
              , An = [9, 13, 27, 32]
              , Mn = u && "CompositionEvent"in window
              , Rn = null;
            u && "documentMode"in document && (Rn = document.documentMode);
            var kn = u && "TextEvent"in window && !Rn
              , Dn = u && (!Mn || Rn && 8 < Rn && 11 >= Rn)
              , Fn = String.fromCharCode(32)
              , Un = !1;
            function Bn(e, t) {
                switch (e) {
                case "keyup":
                    return -1 !== An.indexOf(t.keyCode);
                case "keydown":
                    return 229 !== t.keyCode;
                case "keypress":
                case "mousedown":
                case "focusout":
                    return !0;
                default:
                    return !1
                }
            }
            function Gn(e) {
                return "object" == typeof (e = e.detail) && "data"in e ? e.data : null
            }
            var Vn = !1;
            var Hn = {
                color: !0,
                date: !0,
                datetime: !0,
                "datetime-local": !0,
                email: !0,
                month: !0,
                number: !0,
                password: !0,
                range: !0,
                search: !0,
                tel: !0,
                text: !0,
                time: !0,
                url: !0,
                week: !0
            };
            function Kn(e) {
                var t = e && e.nodeName && e.nodeName.toLowerCase();
                return "input" === t ? !!Hn[e.type] : "textarea" === t
            }
            function Wn(e, t, n, s) {
                je(s),
                0 < (t = zs(t, "onChange")).length && (n = new un("onChange","change",null,n,s),
                e.push({
                    event: n,
                    listeners: t
                }))
            }
            var zn = null
              , Yn = null;
            function $n(e) {
                Fs(e, 0)
            }
            function qn(e) {
                if (Y(bi(e)))
                    return e
            }
            function Xn(e, t) {
                if ("change" === e)
                    return t
            }
            var Qn = !1;
            if (u) {
                var Zn;
                if (u) {
                    var Jn = "oninput"in document;
                    if (!Jn) {
                        var es = document.createElement("div");
                        es.setAttribute("oninput", "return;"),
                        Jn = "function" == typeof es.oninput
                    }
                    Zn = Jn
                } else
                    Zn = !1;
                Qn = Zn && (!document.documentMode || 9 < document.documentMode)
            }
            function ts() {
                zn && (zn.detachEvent("onpropertychange", ns),
                Yn = zn = null)
            }
            function ns(e) {
                if ("value" === e.propertyName && qn(Yn)) {
                    var t = [];
                    Wn(t, Yn, e, Te(e)),
                    Pe($n, t)
                }
            }
            function ss(e, t, n) {
                "focusin" === e ? (ts(),
                Yn = n,
                (zn = t).attachEvent("onpropertychange", ns)) : "focusout" === e && ts()
            }
            function is(e) {
                if ("selectionchange" === e || "keyup" === e || "keydown" === e)
                    return qn(Yn)
            }
            function as(e, t) {
                if ("click" === e)
                    return qn(t)
            }
            function os(e, t) {
                if ("input" === e || "change" === e)
                    return qn(t)
            }
            var rs = "function" == typeof Object.is ? Object.is : function(e, t) {
                return e === t && (0 !== e || 1 / e == 1 / t) || e != e && t != t
            }
            ;
            function ls(e, t) {
                if (rs(e, t))
                    return !0;
                if ("object" != typeof e || null === e || "object" != typeof t || null === t)
                    return !1;
                var n = Object.keys(e)
                  , s = Object.keys(t);
                if (n.length !== s.length)
                    return !1;
                for (s = 0; s < n.length; s++) {
                    var i = n[s];
                    if (!d.call(t, i) || !rs(e[i], t[i]))
                        return !1
                }
                return !0
            }
            function cs(e) {
                for (; e && e.firstChild; )
                    e = e.firstChild;
                return e
            }
            function us(e, t) {
                var n, s = cs(e);
                for (e = 0; s; ) {
                    if (3 === s.nodeType) {
                        if (n = e + s.textContent.length,
                        e <= t && n >= t)
                            return {
                                node: s,
                                offset: t - e
                            };
                        e = n
                    }
                    e: {
                        for (; s; ) {
                            if (s.nextSibling) {
                                s = s.nextSibling;
                                break e
                            }
                            s = s.parentNode
                        }
                        s = void 0
                    }
                    s = cs(s)
                }
            }
            function ds(e, t) {
                return !(!e || !t) && (e === t || (!e || 3 !== e.nodeType) && (t && 3 === t.nodeType ? ds(e, t.parentNode) : "contains"in e ? e.contains(t) : !!e.compareDocumentPosition && !!(16 & e.compareDocumentPosition(t))))
            }
            function ms() {
                for (var e = window, t = $(); t instanceof e.HTMLIFrameElement; ) {
                    try {
                        var n = "string" == typeof t.contentWindow.location.href
                    } catch (e) {
                        n = !1
                    }
                    if (!n)
                        break;
                    t = $((e = t.contentWindow).document)
                }
                return t
            }
            function hs(e) {
                var t = e && e.nodeName && e.nodeName.toLowerCase();
                return t && ("input" === t && ("text" === e.type || "search" === e.type || "tel" === e.type || "url" === e.type || "password" === e.type) || "textarea" === t || "true" === e.contentEditable)
            }
            function gs(e) {
                var t = ms()
                  , n = e.focusedElem
                  , s = e.selectionRange;
                if (t !== n && n && n.ownerDocument && ds(n.ownerDocument.documentElement, n)) {
                    if (null !== s && hs(n))
                        if (t = s.start,
                        void 0 === (e = s.end) && (e = t),
                        "selectionStart"in n)
                            n.selectionStart = t,
                            n.selectionEnd = Math.min(e, n.value.length);
                        else if ((e = (t = n.ownerDocument || document) && t.defaultView || window).getSelection) {
                            e = e.getSelection();
                            var i = n.textContent.length
                              , a = Math.min(s.start, i);
                            s = void 0 === s.end ? a : Math.min(s.end, i),
                            !e.extend && a > s && (i = s,
                            s = a,
                            a = i),
                            i = us(n, a);
                            var o = us(n, s);
                            i && o && (1 !== e.rangeCount || e.anchorNode !== i.node || e.anchorOffset !== i.offset || e.focusNode !== o.node || e.focusOffset !== o.offset) && ((t = t.createRange()).setStart(i.node, i.offset),
                            e.removeAllRanges(),
                            a > s ? (e.addRange(t),
                            e.extend(o.node, o.offset)) : (t.setEnd(o.node, o.offset),
                            e.addRange(t)))
                        }
                    for (t = [],
                    e = n; e = e.parentNode; )
                        1 === e.nodeType && t.push({
                            element: e,
                            left: e.scrollLeft,
                            top: e.scrollTop
                        });
                    for ("function" == typeof n.focus && n.focus(),
                    n = 0; n < t.length; n++)
                        (e = t[n]).element.scrollLeft = e.left,
                        e.element.scrollTop = e.top
                }
            }
            var ps = u && "documentMode"in document && 11 >= document.documentMode
              , fs = null
              , xs = null
              , vs = null
              , _s = !1;
            function bs(e, t, n) {
                var s = n.window === n ? n.document : 9 === n.nodeType ? n : n.ownerDocument;
                _s || null == fs || fs !== $(s) || ("selectionStart"in (s = fs) && hs(s) ? s = {
                    start: s.selectionStart,
                    end: s.selectionEnd
                } : s = {
                    anchorNode: (s = (s.ownerDocument && s.ownerDocument.defaultView || window).getSelection()).anchorNode,
                    anchorOffset: s.anchorOffset,
                    focusNode: s.focusNode,
                    focusOffset: s.focusOffset
                },
                vs && ls(vs, s) || (vs = s,
                0 < (s = zs(xs, "onSelect")).length && (t = new un("onSelect","select",null,t,n),
                e.push({
                    event: t,
                    listeners: s
                }),
                t.target = fs)))
            }
            function Ts(e, t) {
                var n = {};
                return n[e.toLowerCase()] = t.toLowerCase(),
                n["Webkit" + e] = "webkit" + t,
                n["Moz" + e] = "moz" + t,
                n
            }
            var Es = {
                animationend: Ts("Animation", "AnimationEnd"),
                animationiteration: Ts("Animation", "AnimationIteration"),
                animationstart: Ts("Animation", "AnimationStart"),
                transitionend: Ts("Transition", "TransitionEnd")
            }
              , Is = {}
              , Ss = {};
            function ys(e) {
                if (Is[e])
                    return Is[e];
                if (!Es[e])
                    return e;
                var t, n = Es[e];
                for (t in n)
                    if (n.hasOwnProperty(t) && t in Ss)
                        return Is[e] = n[t];
                return e
            }
            u && (Ss = document.createElement("div").style,
            "AnimationEvent"in window || (delete Es.animationend.animation,
            delete Es.animationiteration.animation,
            delete Es.animationstart.animation),
            "TransitionEvent"in window || delete Es.transitionend.transition);
            var js = ys("animationend")
              , Cs = ys("animationiteration")
              , Ns = ys("animationstart")
              , ws = ys("transitionend")
              , Os = new Map
              , Ps = "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");
            function Ls(e, t) {
                Os.set(e, t),
                l(t, [e])
            }
            for (var As = 0; As < Ps.length; As++) {
                var Ms = Ps[As];
                Ls(Ms.toLowerCase(), "on" + (Ms[0].toUpperCase() + Ms.slice(1)))
            }
            Ls(js, "onAnimationEnd"),
            Ls(Cs, "onAnimationIteration"),
            Ls(Ns, "onAnimationStart"),
            Ls("dblclick", "onDoubleClick"),
            Ls("focusin", "onFocus"),
            Ls("focusout", "onBlur"),
            Ls(ws, "onTransitionEnd"),
            c("onMouseEnter", ["mouseout", "mouseover"]),
            c("onMouseLeave", ["mouseout", "mouseover"]),
            c("onPointerEnter", ["pointerout", "pointerover"]),
            c("onPointerLeave", ["pointerout", "pointerover"]),
            l("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" ")),
            l("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),
            l("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]),
            l("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" ")),
            l("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" ")),
            l("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
            var Rs = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" ")
              , ks = new Set("cancel close invalid load scroll toggle".split(" ").concat(Rs));
            function Ds(e, t, n) {
                var s = e.type || "unknown-event";
                e.currentTarget = n,
                function(e, t, n, s, i, o, r, l, c) {
                    if (Ge.apply(this, arguments),
                    ke) {
                        if (!ke)
                            throw Error(a(198));
                        var u = De;
                        ke = !1,
                        De = null,
                        Fe || (Fe = !0,
                        Ue = u)
                    }
                }(s, t, void 0, e),
                e.currentTarget = null
            }
            function Fs(e, t) {
                t = 0 != (4 & t);
                for (var n = 0; n < e.length; n++) {
                    var s = e[n]
                      , i = s.event;
                    s = s.listeners;
                    e: {
                        var a = void 0;
                        if (t)
                            for (var o = s.length - 1; 0 <= o; o--) {
                                var r = s[o]
                                  , l = r.instance
                                  , c = r.currentTarget;
                                if (r = r.listener,
                                l !== a && i.isPropagationStopped())
                                    break e;
                                Ds(i, r, c),
                                a = l
                            }
                        else
                            for (o = 0; o < s.length; o++) {
                                if (l = (r = s[o]).instance,
                                c = r.currentTarget,
                                r = r.listener,
                                l !== a && i.isPropagationStopped())
                                    break e;
                                Ds(i, r, c),
                                a = l
                            }
                    }
                }
                if (Fe)
                    throw e = Ue,
                    Fe = !1,
                    Ue = null,
                    e
            }
            function Us(e, t) {
                var n = t[pi];
                void 0 === n && (n = t[pi] = new Set);
                var s = e + "__bubble";
                n.has(s) || (Hs(t, e, 2, !1),
                n.add(s))
            }
            function Bs(e, t, n) {
                var s = 0;
                t && (s |= 4),
                Hs(n, e, s, t)
            }
            var Gs = "_reactListening" + Math.random().toString(36).slice(2);
            function Vs(e) {
                if (!e[Gs]) {
                    e[Gs] = !0,
                    o.forEach((function(t) {
                        "selectionchange" !== t && (ks.has(t) || Bs(t, !1, e),
                        Bs(t, !0, e))
                    }
                    ));
                    var t = 9 === e.nodeType ? e : e.ownerDocument;
                    null === t || t[Gs] || (t[Gs] = !0,
                    Bs("selectionchange", !1, t))
                }
            }
            function Hs(e, t, n, s) {
                switch (Xt(t)) {
                case 1:
                    var i = Wt;
                    break;
                case 4:
                    i = zt;
                    break;
                default:
                    i = Yt
                }
                n = i.bind(null, t, n, e),
                i = void 0,
                !Ae || "touchstart" !== t && "touchmove" !== t && "wheel" !== t || (i = !0),
                s ? void 0 !== i ? e.addEventListener(t, n, {
                    capture: !0,
                    passive: i
                }) : e.addEventListener(t, n, !0) : void 0 !== i ? e.addEventListener(t, n, {
                    passive: i
                }) : e.addEventListener(t, n, !1)
            }
            function Ks(e, t, n, s, i) {
                var a = s;
                if (0 == (1 & t) && 0 == (2 & t) && null !== s)
                    e: for (; ; ) {
                        if (null === s)
                            return;
                        var o = s.tag;
                        if (3 === o || 4 === o) {
                            var r = s.stateNode.containerInfo;
                            if (r === i || 8 === r.nodeType && r.parentNode === i)
                                break;
                            if (4 === o)
                                for (o = s.return; null !== o; ) {
                                    var l = o.tag;
                                    if ((3 === l || 4 === l) && ((l = o.stateNode.containerInfo) === i || 8 === l.nodeType && l.parentNode === i))
                                        return;
                                    o = o.return
                                }
                            for (; null !== r; ) {
                                if (null === (o = vi(r)))
                                    return;
                                if (5 === (l = o.tag) || 6 === l) {
                                    s = a = o;
                                    continue e
                                }
                                r = r.parentNode
                            }
                        }
                        s = s.return
                    }
                Pe((function() {
                    var s = a
                      , i = Te(n)
                      , o = [];
                    e: {
                        var r = Os.get(e);
                        if (void 0 !== r) {
                            var l = un
                              , c = e;
                            switch (e) {
                            case "keypress":
                                if (0 === tn(n))
                                    break e;
                            case "keydown":
                            case "keyup":
                                l = Cn;
                                break;
                            case "focusin":
                                c = "focus",
                                l = fn;
                                break;
                            case "focusout":
                                c = "blur",
                                l = fn;
                                break;
                            case "beforeblur":
                            case "afterblur":
                                l = fn;
                                break;
                            case "click":
                                if (2 === n.button)
                                    break e;
                            case "auxclick":
                            case "dblclick":
                            case "mousedown":
                            case "mousemove":
                            case "mouseup":
                            case "mouseout":
                            case "mouseover":
                            case "contextmenu":
                                l = gn;
                                break;
                            case "drag":
                            case "dragend":
                            case "dragenter":
                            case "dragexit":
                            case "dragleave":
                            case "dragover":
                            case "dragstart":
                            case "drop":
                                l = pn;
                                break;
                            case "touchcancel":
                            case "touchend":
                            case "touchmove":
                            case "touchstart":
                                l = wn;
                                break;
                            case js:
                            case Cs:
                            case Ns:
                                l = xn;
                                break;
                            case ws:
                                l = On;
                                break;
                            case "scroll":
                                l = mn;
                                break;
                            case "wheel":
                                l = Ln;
                                break;
                            case "copy":
                            case "cut":
                            case "paste":
                                l = _n;
                                break;
                            case "gotpointercapture":
                            case "lostpointercapture":
                            case "pointercancel":
                            case "pointerdown":
                            case "pointermove":
                            case "pointerout":
                            case "pointerover":
                            case "pointerup":
                                l = Nn
                            }
                            var u = 0 != (4 & t)
                              , d = !u && "scroll" === e
                              , m = u ? null !== r ? r + "Capture" : null : r;
                            u = [];
                            for (var h, g = s; null !== g; ) {
                                var p = (h = g).stateNode;
                                if (5 === h.tag && null !== p && (h = p,
                                null !== m && (null != (p = Le(g, m)) && u.push(Ws(g, p, h)))),
                                d)
                                    break;
                                g = g.return
                            }
                            0 < u.length && (r = new l(r,c,null,n,i),
                            o.push({
                                event: r,
                                listeners: u
                            }))
                        }
                    }
                    if (0 == (7 & t)) {
                        if (l = "mouseout" === e || "pointerout" === e,
                        (!(r = "mouseover" === e || "pointerover" === e) || n === be || !(c = n.relatedTarget || n.fromElement) || !vi(c) && !c[gi]) && (l || r) && (r = i.window === i ? i : (r = i.ownerDocument) ? r.defaultView || r.parentWindow : window,
                        l ? (l = s,
                        null !== (c = (c = n.relatedTarget || n.toElement) ? vi(c) : null) && (c !== (d = Ve(c)) || 5 !== c.tag && 6 !== c.tag) && (c = null)) : (l = null,
                        c = s),
                        l !== c)) {
                            if (u = gn,
                            p = "onMouseLeave",
                            m = "onMouseEnter",
                            g = "mouse",
                            "pointerout" !== e && "pointerover" !== e || (u = Nn,
                            p = "onPointerLeave",
                            m = "onPointerEnter",
                            g = "pointer"),
                            d = null == l ? r : bi(l),
                            h = null == c ? r : bi(c),
                            (r = new u(p,g + "leave",l,n,i)).target = d,
                            r.relatedTarget = h,
                            p = null,
                            vi(i) === s && ((u = new u(m,g + "enter",c,n,i)).target = h,
                            u.relatedTarget = d,
                            p = u),
                            d = p,
                            l && c)
                                e: {
                                    for (m = c,
                                    g = 0,
                                    h = u = l; h; h = Ys(h))
                                        g++;
                                    for (h = 0,
                                    p = m; p; p = Ys(p))
                                        h++;
                                    for (; 0 < g - h; )
                                        u = Ys(u),
                                        g--;
                                    for (; 0 < h - g; )
                                        m = Ys(m),
                                        h--;
                                    for (; g--; ) {
                                        if (u === m || null !== m && u === m.alternate)
                                            break e;
                                        u = Ys(u),
                                        m = Ys(m)
                                    }
                                    u = null
                                }
                            else
                                u = null;
                            null !== l && $s(o, r, l, u, !1),
                            null !== c && null !== d && $s(o, d, c, u, !0)
                        }
                        if ("select" === (l = (r = s ? bi(s) : window).nodeName && r.nodeName.toLowerCase()) || "input" === l && "file" === r.type)
                            var f = Xn;
                        else if (Kn(r))
                            if (Qn)
                                f = os;
                            else {
                                f = is;
                                var x = ss
                            }
                        else
                            (l = r.nodeName) && "input" === l.toLowerCase() && ("checkbox" === r.type || "radio" === r.type) && (f = as);
                        switch (f && (f = f(e, s)) ? Wn(o, f, n, i) : (x && x(e, r, s),
                        "focusout" === e && (x = r._wrapperState) && x.controlled && "number" === r.type && ee(r, "number", r.value)),
                        x = s ? bi(s) : window,
                        e) {
                        case "focusin":
                            (Kn(x) || "true" === x.contentEditable) && (fs = x,
                            xs = s,
                            vs = null);
                            break;
                        case "focusout":
                            vs = xs = fs = null;
                            break;
                        case "mousedown":
                            _s = !0;
                            break;
                        case "contextmenu":
                        case "mouseup":
                        case "dragend":
                            _s = !1,
                            bs(o, n, i);
                            break;
                        case "selectionchange":
                            if (ps)
                                break;
                        case "keydown":
                        case "keyup":
                            bs(o, n, i)
                        }
                        var v;
                        if (Mn)
                            e: {
                                switch (e) {
                                case "compositionstart":
                                    var _ = "onCompositionStart";
                                    break e;
                                case "compositionend":
                                    _ = "onCompositionEnd";
                                    break e;
                                case "compositionupdate":
                                    _ = "onCompositionUpdate";
                                    break e
                                }
                                _ = void 0
                            }
                        else
                            Vn ? Bn(e, n) && (_ = "onCompositionEnd") : "keydown" === e && 229 === n.keyCode && (_ = "onCompositionStart");
                        _ && (Dn && "ko" !== n.locale && (Vn || "onCompositionStart" !== _ ? "onCompositionEnd" === _ && Vn && (v = en()) : (Zt = "value"in (Qt = i) ? Qt.value : Qt.textContent,
                        Vn = !0)),
                        0 < (x = zs(s, _)).length && (_ = new bn(_,e,null,n,i),
                        o.push({
                            event: _,
                            listeners: x
                        }),
                        v ? _.data = v : null !== (v = Gn(n)) && (_.data = v))),
                        (v = kn ? function(e, t) {
                            switch (e) {
                            case "compositionend":
                                return Gn(t);
                            case "keypress":
                                return 32 !== t.which ? null : (Un = !0,
                                Fn);
                            case "textInput":
                                return (e = t.data) === Fn && Un ? null : e;
                            default:
                                return null
                            }
                        }(e, n) : function(e, t) {
                            if (Vn)
                                return "compositionend" === e || !Mn && Bn(e, t) ? (e = en(),
                                Jt = Zt = Qt = null,
                                Vn = !1,
                                e) : null;
                            switch (e) {
                            case "paste":
                            default:
                                return null;
                            case "keypress":
                                if (!(t.ctrlKey || t.altKey || t.metaKey) || t.ctrlKey && t.altKey) {
                                    if (t.char && 1 < t.char.length)
                                        return t.char;
                                    if (t.which)
                                        return String.fromCharCode(t.which)
                                }
                                return null;
                            case "compositionend":
                                return Dn && "ko" !== t.locale ? null : t.data
                            }
                        }(e, n)) && (0 < (s = zs(s, "onBeforeInput")).length && (i = new bn("onBeforeInput","beforeinput",null,n,i),
                        o.push({
                            event: i,
                            listeners: s
                        }),
                        i.data = v))
                    }
                    Fs(o, t)
                }
                ))
            }
            function Ws(e, t, n) {
                return {
                    instance: e,
                    listener: t,
                    currentTarget: n
                }
            }
            function zs(e, t) {
                for (var n = t + "Capture", s = []; null !== e; ) {
                    var i = e
                      , a = i.stateNode;
                    5 === i.tag && null !== a && (i = a,
                    null != (a = Le(e, n)) && s.unshift(Ws(e, a, i)),
                    null != (a = Le(e, t)) && s.push(Ws(e, a, i))),
                    e = e.return
                }
                return s
            }
            function Ys(e) {
                if (null === e)
                    return null;
                do {
                    e = e.return
                } while (e && 5 !== e.tag);
                return e || null
            }
            function $s(e, t, n, s, i) {
                for (var a = t._reactName, o = []; null !== n && n !== s; ) {
                    var r = n
                      , l = r.alternate
                      , c = r.stateNode;
                    if (null !== l && l === s)
                        break;
                    5 === r.tag && null !== c && (r = c,
                    i ? null != (l = Le(n, a)) && o.unshift(Ws(n, l, r)) : i || null != (l = Le(n, a)) && o.push(Ws(n, l, r))),
                    n = n.return
                }
                0 !== o.length && e.push({
                    event: t,
                    listeners: o
                })
            }
            var qs = /\r\n?/g
              , Xs = /\u0000|\uFFFD/g;
            function Qs(e) {
                return ("string" == typeof e ? e : "" + e).replace(qs, "\n").replace(Xs, "")
            }
            function Zs(e, t, n) {
                if (t = Qs(t),
                Qs(e) !== t && n)
                    throw Error(a(425))
            }
            function Js() {}
            var ei = null
              , ti = null;
            function ni(e, t) {
                return "textarea" === e || "noscript" === e || "string" == typeof t.children || "number" == typeof t.children || "object" == typeof t.dangerouslySetInnerHTML && null !== t.dangerouslySetInnerHTML && null != t.dangerouslySetInnerHTML.__html
            }
            var si = "function" == typeof setTimeout ? setTimeout : void 0
              , ii = "function" == typeof clearTimeout ? clearTimeout : void 0
              , ai = "function" == typeof Promise ? Promise : void 0
              , oi = "function" == typeof queueMicrotask ? queueMicrotask : void 0 !== ai ? function(e) {
                return ai.resolve(null).then(e).catch(ri)
            }
            : si;
            function ri(e) {
                setTimeout((function() {
                    throw e
                }
                ))
            }
            function li(e, t) {
                var n = t
                  , s = 0;
                do {
                    var i = n.nextSibling;
                    if (e.removeChild(n),
                    i && 8 === i.nodeType)
                        if ("/$" === (n = i.data)) {
                            if (0 === s)
                                return e.removeChild(i),
                                void Vt(t);
                            s--
                        } else
                            "$" !== n && "$?" !== n && "$!" !== n || s++;
                    n = i
                } while (n);
                Vt(t)
            }
            function ci(e) {
                for (; null != e; e = e.nextSibling) {
                    var t = e.nodeType;
                    if (1 === t || 3 === t)
                        break;
                    if (8 === t) {
                        if ("$" === (t = e.data) || "$!" === t || "$?" === t)
                            break;
                        if ("/$" === t)
                            return null
                    }
                }
                return e
            }
            function ui(e) {
                e = e.previousSibling;
                for (var t = 0; e; ) {
                    if (8 === e.nodeType) {
                        var n = e.data;
                        if ("$" === n || "$!" === n || "$?" === n) {
                            if (0 === t)
                                return e;
                            t--
                        } else
                            "/$" === n && t++
                    }
                    e = e.previousSibling
                }
                return null
            }
            var di = Math.random().toString(36).slice(2)
              , mi = "__reactFiber$" + di
              , hi = "__reactProps$" + di
              , gi = "__reactContainer$" + di
              , pi = "__reactEvents$" + di
              , fi = "__reactListeners$" + di
              , xi = "__reactHandles$" + di;
            function vi(e) {
                var t = e[mi];
                if (t)
                    return t;
                for (var n = e.parentNode; n; ) {
                    if (t = n[gi] || n[mi]) {
                        if (n = t.alternate,
                        null !== t.child || null !== n && null !== n.child)
                            for (e = ui(e); null !== e; ) {
                                if (n = e[mi])
                                    return n;
                                e = ui(e)
                            }
                        return t
                    }
                    n = (e = n).parentNode
                }
                return null
            }
            function _i(e) {
                return !(e = e[mi] || e[gi]) || 5 !== e.tag && 6 !== e.tag && 13 !== e.tag && 3 !== e.tag ? null : e
            }
            function bi(e) {
                if (5 === e.tag || 6 === e.tag)
                    return e.stateNode;
                throw Error(a(33))
            }
            function Ti(e) {
                return e[hi] || null
            }
            var Ei = []
              , Ii = -1;
            function Si(e) {
                return {
                    current: e
                }
            }
            function yi(e) {
                0 > Ii || (e.current = Ei[Ii],
                Ei[Ii] = null,
                Ii--)
            }
            function ji(e, t) {
                Ii++,
                Ei[Ii] = e.current,
                e.current = t
            }
            var Ci = {}
              , Ni = Si(Ci)
              , wi = Si(!1)
              , Oi = Ci;
            function Pi(e, t) {
                var n = e.type.contextTypes;
                if (!n)
                    return Ci;
                var s = e.stateNode;
                if (s && s.__reactInternalMemoizedUnmaskedChildContext === t)
                    return s.__reactInternalMemoizedMaskedChildContext;
                var i, a = {};
                for (i in n)
                    a[i] = t[i];
                return s && ((e = e.stateNode).__reactInternalMemoizedUnmaskedChildContext = t,
                e.__reactInternalMemoizedMaskedChildContext = a),
                a
            }
            function Li(e) {
                return null != (e = e.childContextTypes)
            }
            function Ai() {
                yi(wi),
                yi(Ni)
            }
            function Mi(e, t, n) {
                if (Ni.current !== Ci)
                    throw Error(a(168));
                ji(Ni, t),
                ji(wi, n)
            }
            function Ri(e, t, n) {
                var s = e.stateNode;
                if (t = t.childContextTypes,
                "function" != typeof s.getChildContext)
                    return n;
                for (var i in s = s.getChildContext())
                    if (!(i in t))
                        throw Error(a(108, H(e) || "Unknown", i));
                return D({}, n, s)
            }
            function ki(e) {
                return e = (e = e.stateNode) && e.__reactInternalMemoizedMergedChildContext || Ci,
                Oi = Ni.current,
                ji(Ni, e),
                ji(wi, wi.current),
                !0
            }
            function Di(e, t, n) {
                var s = e.stateNode;
                if (!s)
                    throw Error(a(169));
                n ? (e = Ri(e, t, Oi),
                s.__reactInternalMemoizedMergedChildContext = e,
                yi(wi),
                yi(Ni),
                ji(Ni, e)) : yi(wi),
                ji(wi, n)
            }
            var Fi = null
              , Ui = !1
              , Bi = !1;
            function Gi(e) {
                null === Fi ? Fi = [e] : Fi.push(e)
            }
            function Vi() {
                if (!Bi && null !== Fi) {
                    Bi = !0;
                    var e = 0
                      , t = _t;
                    try {
                        var n = Fi;
                        for (_t = 1; e < n.length; e++) {
                            var s = n[e];
                            do {
                                s = s(!0)
                            } while (null !== s)
                        }
                        Fi = null,
                        Ui = !1
                    } catch (t) {
                        throw null !== Fi && (Fi = Fi.slice(e + 1)),
                        Ye(Je, Vi),
                        t
                    } finally {
                        _t = t,
                        Bi = !1
                    }
                }
                return null
            }
            var Hi = []
              , Ki = 0
              , Wi = null
              , zi = 0
              , Yi = []
              , $i = 0
              , qi = null
              , Xi = 1
              , Qi = "";
            function Zi(e, t) {
                Hi[Ki++] = zi,
                Hi[Ki++] = Wi,
                Wi = e,
                zi = t
            }
            function Ji(e, t, n) {
                Yi[$i++] = Xi,
                Yi[$i++] = Qi,
                Yi[$i++] = qi,
                qi = e;
                var s = Xi;
                e = Qi;
                var i = 32 - ot(s) - 1;
                s &= ~(1 << i),
                n += 1;
                var a = 32 - ot(t) + i;
                if (30 < a) {
                    var o = i - i % 5;
                    a = (s & (1 << o) - 1).toString(32),
                    s >>= o,
                    i -= o,
                    Xi = 1 << 32 - ot(t) + i | n << i | s,
                    Qi = a + e
                } else
                    Xi = 1 << a | n << i | s,
                    Qi = e
            }
            function ea(e) {
                null !== e.return && (Zi(e, 1),
                Ji(e, 1, 0))
            }
            function ta(e) {
                for (; e === Wi; )
                    Wi = Hi[--Ki],
                    Hi[Ki] = null,
                    zi = Hi[--Ki],
                    Hi[Ki] = null;
                for (; e === qi; )
                    qi = Yi[--$i],
                    Yi[$i] = null,
                    Qi = Yi[--$i],
                    Yi[$i] = null,
                    Xi = Yi[--$i],
                    Yi[$i] = null
            }
            var na = null
              , sa = null
              , ia = !1
              , aa = null;
            function oa(e, t) {
                var n = Lc(5, null, null, 0);
                n.elementType = "DELETED",
                n.stateNode = t,
                n.return = e,
                null === (t = e.deletions) ? (e.deletions = [n],
                e.flags |= 16) : t.push(n)
            }
            function ra(e, t) {
                switch (e.tag) {
                case 5:
                    var n = e.type;
                    return null !== (t = 1 !== t.nodeType || n.toLowerCase() !== t.nodeName.toLowerCase() ? null : t) && (e.stateNode = t,
                    na = e,
                    sa = ci(t.firstChild),
                    !0);
                case 6:
                    return null !== (t = "" === e.pendingProps || 3 !== t.nodeType ? null : t) && (e.stateNode = t,
                    na = e,
                    sa = null,
                    !0);
                case 13:
                    return null !== (t = 8 !== t.nodeType ? null : t) && (n = null !== qi ? {
                        id: Xi,
                        overflow: Qi
                    } : null,
                    e.memoizedState = {
                        dehydrated: t,
                        treeContext: n,
                        retryLane: 1073741824
                    },
                    (n = Lc(18, null, null, 0)).stateNode = t,
                    n.return = e,
                    e.child = n,
                    na = e,
                    sa = null,
                    !0);
                default:
                    return !1
                }
            }
            function la(e) {
                return 0 != (1 & e.mode) && 0 == (128 & e.flags)
            }
            function ca(e) {
                if (ia) {
                    var t = sa;
                    if (t) {
                        var n = t;
                        if (!ra(e, t)) {
                            if (la(e))
                                throw Error(a(418));
                            t = ci(n.nextSibling);
                            var s = na;
                            t && ra(e, t) ? oa(s, n) : (e.flags = -4097 & e.flags | 2,
                            ia = !1,
                            na = e)
                        }
                    } else {
                        if (la(e))
                            throw Error(a(418));
                        e.flags = -4097 & e.flags | 2,
                        ia = !1,
                        na = e
                    }
                }
            }
            function ua(e) {
                for (e = e.return; null !== e && 5 !== e.tag && 3 !== e.tag && 13 !== e.tag; )
                    e = e.return;
                na = e
            }
            function da(e) {
                if (e !== na)
                    return !1;
                if (!ia)
                    return ua(e),
                    ia = !0,
                    !1;
                var t;
                if ((t = 3 !== e.tag) && !(t = 5 !== e.tag) && (t = "head" !== (t = e.type) && "body" !== t && !ni(e.type, e.memoizedProps)),
                t && (t = sa)) {
                    if (la(e))
                        throw ma(),
                        Error(a(418));
                    for (; t; )
                        oa(e, t),
                        t = ci(t.nextSibling)
                }
                if (ua(e),
                13 === e.tag) {
                    if (!(e = null !== (e = e.memoizedState) ? e.dehydrated : null))
                        throw Error(a(317));
                    e: {
                        for (e = e.nextSibling,
                        t = 0; e; ) {
                            if (8 === e.nodeType) {
                                var n = e.data;
                                if ("/$" === n) {
                                    if (0 === t) {
                                        sa = ci(e.nextSibling);
                                        break e
                                    }
                                    t--
                                } else
                                    "$" !== n && "$!" !== n && "$?" !== n || t++
                            }
                            e = e.nextSibling
                        }
                        sa = null
                    }
                } else
                    sa = na ? ci(e.stateNode.nextSibling) : null;
                return !0
            }
            function ma() {
                for (var e = sa; e; )
                    e = ci(e.nextSibling)
            }
            function ha() {
                sa = na = null,
                ia = !1
            }
            function ga(e) {
                null === aa ? aa = [e] : aa.push(e)
            }
            var pa = b.ReactCurrentBatchConfig;
            function fa(e, t) {
                if (e && e.defaultProps) {
                    for (var n in t = D({}, t),
                    e = e.defaultProps)
                        void 0 === t[n] && (t[n] = e[n]);
                    return t
                }
                return t
            }
            var xa = Si(null)
              , va = null
              , _a = null
              , ba = null;
            function Ta() {
                ba = _a = va = null
            }
            function Ea(e) {
                var t = xa.current;
                yi(xa),
                e._currentValue = t
            }
            function Ia(e, t, n) {
                for (; null !== e; ) {
                    var s = e.alternate;
                    if ((e.childLanes & t) !== t ? (e.childLanes |= t,
                    null !== s && (s.childLanes |= t)) : null !== s && (s.childLanes & t) !== t && (s.childLanes |= t),
                    e === n)
                        break;
                    e = e.return
                }
            }
            function Sa(e, t) {
                va = e,
                ba = _a = null,
                null !== (e = e.dependencies) && null !== e.firstContext && (0 != (e.lanes & t) && (br = !0),
                e.firstContext = null)
            }
            function ya(e) {
                var t = e._currentValue;
                if (ba !== e)
                    if (e = {
                        context: e,
                        memoizedValue: t,
                        next: null
                    },
                    null === _a) {
                        if (null === va)
                            throw Error(a(308));
                        _a = e,
                        va.dependencies = {
                            lanes: 0,
                            firstContext: e
                        }
                    } else
                        _a = _a.next = e;
                return t
            }
            var ja = null;
            function Ca(e) {
                null === ja ? ja = [e] : ja.push(e)
            }
            function Na(e, t, n, s) {
                var i = t.interleaved;
                return null === i ? (n.next = n,
                Ca(t)) : (n.next = i.next,
                i.next = n),
                t.interleaved = n,
                wa(e, s)
            }
            function wa(e, t) {
                e.lanes |= t;
                var n = e.alternate;
                for (null !== n && (n.lanes |= t),
                n = e,
                e = e.return; null !== e; )
                    e.childLanes |= t,
                    null !== (n = e.alternate) && (n.childLanes |= t),
                    n = e,
                    e = e.return;
                return 3 === n.tag ? n.stateNode : null
            }
            var Oa = !1;
            function Pa(e) {
                e.updateQueue = {
                    baseState: e.memoizedState,
                    firstBaseUpdate: null,
                    lastBaseUpdate: null,
                    shared: {
                        pending: null,
                        interleaved: null,
                        lanes: 0
                    },
                    effects: null
                }
            }
            function La(e, t) {
                e = e.updateQueue,
                t.updateQueue === e && (t.updateQueue = {
                    baseState: e.baseState,
                    firstBaseUpdate: e.firstBaseUpdate,
                    lastBaseUpdate: e.lastBaseUpdate,
                    shared: e.shared,
                    effects: e.effects
                })
            }
            function Aa(e, t) {
                return {
                    eventTime: e,
                    lane: t,
                    tag: 0,
                    payload: null,
                    callback: null,
                    next: null
                }
            }
            function Ma(e, t, n) {
                var s = e.updateQueue;
                if (null === s)
                    return null;
                if (s = s.shared,
                0 != (2 & wl)) {
                    var i = s.pending;
                    return null === i ? t.next = t : (t.next = i.next,
                    i.next = t),
                    s.pending = t,
                    wa(e, n)
                }
                return null === (i = s.interleaved) ? (t.next = t,
                Ca(s)) : (t.next = i.next,
                i.next = t),
                s.interleaved = t,
                wa(e, n)
            }
            function Ra(e, t, n) {
                if (null !== (t = t.updateQueue) && (t = t.shared,
                0 != (4194240 & n))) {
                    var s = t.lanes;
                    n |= s &= e.pendingLanes,
                    t.lanes = n,
                    vt(e, n)
                }
            }
            function ka(e, t) {
                var n = e.updateQueue
                  , s = e.alternate;
                if (null !== s && n === (s = s.updateQueue)) {
                    var i = null
                      , a = null;
                    if (null !== (n = n.firstBaseUpdate)) {
                        do {
                            var o = {
                                eventTime: n.eventTime,
                                lane: n.lane,
                                tag: n.tag,
                                payload: n.payload,
                                callback: n.callback,
                                next: null
                            };
                            null === a ? i = a = o : a = a.next = o,
                            n = n.next
                        } while (null !== n);
                        null === a ? i = a = t : a = a.next = t
                    } else
                        i = a = t;
                    return n = {
                        baseState: s.baseState,
                        firstBaseUpdate: i,
                        lastBaseUpdate: a,
                        shared: s.shared,
                        effects: s.effects
                    },
                    void (e.updateQueue = n)
                }
                null === (e = n.lastBaseUpdate) ? n.firstBaseUpdate = t : e.next = t,
                n.lastBaseUpdate = t
            }
            function Da(e, t, n, s) {
                var i = e.updateQueue;
                Oa = !1;
                var a = i.firstBaseUpdate
                  , o = i.lastBaseUpdate
                  , r = i.shared.pending;
                if (null !== r) {
                    i.shared.pending = null;
                    var l = r
                      , c = l.next;
                    l.next = null,
                    null === o ? a = c : o.next = c,
                    o = l;
                    var u = e.alternate;
                    null !== u && ((r = (u = u.updateQueue).lastBaseUpdate) !== o && (null === r ? u.firstBaseUpdate = c : r.next = c,
                    u.lastBaseUpdate = l))
                }
                if (null !== a) {
                    var d = i.baseState;
                    for (o = 0,
                    u = c = l = null,
                    r = a; ; ) {
                        var m = r.lane
                          , h = r.eventTime;
                        if ((s & m) === m) {
                            null !== u && (u = u.next = {
                                eventTime: h,
                                lane: 0,
                                tag: r.tag,
                                payload: r.payload,
                                callback: r.callback,
                                next: null
                            });
                            e: {
                                var g = e
                                  , p = r;
                                switch (m = t,
                                h = n,
                                p.tag) {
                                case 1:
                                    if ("function" == typeof (g = p.payload)) {
                                        d = g.call(h, d, m);
                                        break e
                                    }
                                    d = g;
                                    break e;
                                case 3:
                                    g.flags = -65537 & g.flags | 128;
                                case 0:
                                    if (null == (m = "function" == typeof (g = p.payload) ? g.call(h, d, m) : g))
                                        break e;
                                    d = D({}, d, m);
                                    break e;
                                case 2:
                                    Oa = !0
                                }
                            }
                            null !== r.callback && 0 !== r.lane && (e.flags |= 64,
                            null === (m = i.effects) ? i.effects = [r] : m.push(r))
                        } else
                            h = {
                                eventTime: h,
                                lane: m,
                                tag: r.tag,
                                payload: r.payload,
                                callback: r.callback,
                                next: null
                            },
                            null === u ? (c = u = h,
                            l = d) : u = u.next = h,
                            o |= m;
                        if (null === (r = r.next)) {
                            if (null === (r = i.shared.pending))
                                break;
                            r = (m = r).next,
                            m.next = null,
                            i.lastBaseUpdate = m,
                            i.shared.pending = null
                        }
                    }
                    if (null === u && (l = d),
                    i.baseState = l,
                    i.firstBaseUpdate = c,
                    i.lastBaseUpdate = u,
                    null !== (t = i.shared.interleaved)) {
                        i = t;
                        do {
                            o |= i.lane,
                            i = i.next
                        } while (i !== t)
                    } else
                        null === a && (i.shared.lanes = 0);
                    Dl |= o,
                    e.lanes = o,
                    e.memoizedState = d
                }
            }
            function Fa(e, t, n) {
                if (e = t.effects,
                t.effects = null,
                null !== e)
                    for (t = 0; t < e.length; t++) {
                        var s = e[t]
                          , i = s.callback;
                        if (null !== i) {
                            if (s.callback = null,
                            s = n,
                            "function" != typeof i)
                                throw Error(a(191, i));
                            i.call(s)
                        }
                    }
            }
            var Ua = (new s.Component).refs;
            function Ba(e, t, n, s) {
                n = null == (n = n(s, t = e.memoizedState)) ? t : D({}, t, n),
                e.memoizedState = n,
                0 === e.lanes && (e.updateQueue.baseState = n)
            }
            var Ga = {
                isMounted: function(e) {
                    return !!(e = e._reactInternals) && Ve(e) === e
                },
                enqueueSetState: function(e, t, n) {
                    e = e._reactInternals;
                    var s = tc()
                      , i = nc(e)
                      , a = Aa(s, i);
                    a.payload = t,
                    null != n && (a.callback = n),
                    null !== (t = Ma(e, a, i)) && (sc(t, e, i, s),
                    Ra(t, e, i))
                },
                enqueueReplaceState: function(e, t, n) {
                    e = e._reactInternals;
                    var s = tc()
                      , i = nc(e)
                      , a = Aa(s, i);
                    a.tag = 1,
                    a.payload = t,
                    null != n && (a.callback = n),
                    null !== (t = Ma(e, a, i)) && (sc(t, e, i, s),
                    Ra(t, e, i))
                },
                enqueueForceUpdate: function(e, t) {
                    e = e._reactInternals;
                    var n = tc()
                      , s = nc(e)
                      , i = Aa(n, s);
                    i.tag = 2,
                    null != t && (i.callback = t),
                    null !== (t = Ma(e, i, s)) && (sc(t, e, s, n),
                    Ra(t, e, s))
                }
            };
            function Va(e, t, n, s, i, a, o) {
                return "function" == typeof (e = e.stateNode).shouldComponentUpdate ? e.shouldComponentUpdate(s, a, o) : !t.prototype || !t.prototype.isPureReactComponent || (!ls(n, s) || !ls(i, a))
            }
            function Ha(e, t, n) {
                var s = !1
                  , i = Ci
                  , a = t.contextType;
                return "object" == typeof a && null !== a ? a = ya(a) : (i = Li(t) ? Oi : Ni.current,
                a = (s = null != (s = t.contextTypes)) ? Pi(e, i) : Ci),
                t = new t(n,a),
                e.memoizedState = null !== t.state && void 0 !== t.state ? t.state : null,
                t.updater = Ga,
                e.stateNode = t,
                t._reactInternals = e,
                s && ((e = e.stateNode).__reactInternalMemoizedUnmaskedChildContext = i,
                e.__reactInternalMemoizedMaskedChildContext = a),
                t
            }
            function Ka(e, t, n, s) {
                e = t.state,
                "function" == typeof t.componentWillReceiveProps && t.componentWillReceiveProps(n, s),
                "function" == typeof t.UNSAFE_componentWillReceiveProps && t.UNSAFE_componentWillReceiveProps(n, s),
                t.state !== e && Ga.enqueueReplaceState(t, t.state, null)
            }
            function Wa(e, t, n, s) {
                var i = e.stateNode;
                i.props = n,
                i.state = e.memoizedState,
                i.refs = Ua,
                Pa(e);
                var a = t.contextType;
                "object" == typeof a && null !== a ? i.context = ya(a) : (a = Li(t) ? Oi : Ni.current,
                i.context = Pi(e, a)),
                i.state = e.memoizedState,
                "function" == typeof (a = t.getDerivedStateFromProps) && (Ba(e, t, a, n),
                i.state = e.memoizedState),
                "function" == typeof t.getDerivedStateFromProps || "function" == typeof i.getSnapshotBeforeUpdate || "function" != typeof i.UNSAFE_componentWillMount && "function" != typeof i.componentWillMount || (t = i.state,
                "function" == typeof i.componentWillMount && i.componentWillMount(),
                "function" == typeof i.UNSAFE_componentWillMount && i.UNSAFE_componentWillMount(),
                t !== i.state && Ga.enqueueReplaceState(i, i.state, null),
                Da(e, n, i, s),
                i.state = e.memoizedState),
                "function" == typeof i.componentDidMount && (e.flags |= 4194308)
            }
            function za(e, t, n) {
                if (null !== (e = n.ref) && "function" != typeof e && "object" != typeof e) {
                    if (n._owner) {
                        if (n = n._owner) {
                            if (1 !== n.tag)
                                throw Error(a(309));
                            var s = n.stateNode
                        }
                        if (!s)
                            throw Error(a(147, e));
                        var i = s
                          , o = "" + e;
                        return null !== t && null !== t.ref && "function" == typeof t.ref && t.ref._stringRef === o ? t.ref : (t = function(e) {
                            var t = i.refs;
                            t === Ua && (t = i.refs = {}),
                            null === e ? delete t[o] : t[o] = e
                        }
                        ,
                        t._stringRef = o,
                        t)
                    }
                    if ("string" != typeof e)
                        throw Error(a(284));
                    if (!n._owner)
                        throw Error(a(290, e))
                }
                return e
            }
            function Ya(e, t) {
                throw e = Object.prototype.toString.call(t),
                Error(a(31, "[object Object]" === e ? "object with keys {" + Object.keys(t).join(", ") + "}" : e))
            }
            function $a(e) {
                return (0,
                e._init)(e._payload)
            }
            function qa(e) {
                function t(t, n) {
                    if (e) {
                        var s = t.deletions;
                        null === s ? (t.deletions = [n],
                        t.flags |= 16) : s.push(n)
                    }
                }
                function n(n, s) {
                    if (!e)
                        return null;
                    for (; null !== s; )
                        t(n, s),
                        s = s.sibling;
                    return null
                }
                function s(e, t) {
                    for (e = new Map; null !== t; )
                        null !== t.key ? e.set(t.key, t) : e.set(t.index, t),
                        t = t.sibling;
                    return e
                }
                function i(e, t) {
                    return (e = Mc(e, t)).index = 0,
                    e.sibling = null,
                    e
                }
                function o(t, n, s) {
                    return t.index = s,
                    e ? null !== (s = t.alternate) ? (s = s.index) < n ? (t.flags |= 2,
                    n) : s : (t.flags |= 2,
                    n) : (t.flags |= 1048576,
                    n)
                }
                function r(t) {
                    return e && null === t.alternate && (t.flags |= 2),
                    t
                }
                function l(e, t, n, s) {
                    return null === t || 6 !== t.tag ? ((t = Fc(n, e.mode, s)).return = e,
                    t) : ((t = i(t, n)).return = e,
                    t)
                }
                function c(e, t, n, s) {
                    var a = n.type;
                    return a === I ? d(e, t, n.props.children, s, n.key) : null !== t && (t.elementType === a || "object" == typeof a && null !== a && a.$$typeof === L && $a(a) === t.type) ? ((s = i(t, n.props)).ref = za(e, t, n),
                    s.return = e,
                    s) : ((s = Rc(n.type, n.key, n.props, null, e.mode, s)).ref = za(e, t, n),
                    s.return = e,
                    s)
                }
                function u(e, t, n, s) {
                    return null === t || 4 !== t.tag || t.stateNode.containerInfo !== n.containerInfo || t.stateNode.implementation !== n.implementation ? ((t = Uc(n, e.mode, s)).return = e,
                    t) : ((t = i(t, n.children || [])).return = e,
                    t)
                }
                function d(e, t, n, s, a) {
                    return null === t || 7 !== t.tag ? ((t = kc(n, e.mode, s, a)).return = e,
                    t) : ((t = i(t, n)).return = e,
                    t)
                }
                function m(e, t, n) {
                    if ("string" == typeof t && "" !== t || "number" == typeof t)
                        return (t = Fc("" + t, e.mode, n)).return = e,
                        t;
                    if ("object" == typeof t && null !== t) {
                        switch (t.$$typeof) {
                        case T:
                            return (n = Rc(t.type, t.key, t.props, null, e.mode, n)).ref = za(e, null, t),
                            n.return = e,
                            n;
                        case E:
                            return (t = Uc(t, e.mode, n)).return = e,
                            t;
                        case L:
                            return m(e, (0,
                            t._init)(t._payload), n)
                        }
                        if (te(t) || R(t))
                            return (t = kc(t, e.mode, n, null)).return = e,
                            t;
                        Ya(e, t)
                    }
                    return null
                }
                function h(e, t, n, s) {
                    var i = null !== t ? t.key : null;
                    if ("string" == typeof n && "" !== n || "number" == typeof n)
                        return null !== i ? null : l(e, t, "" + n, s);
                    if ("object" == typeof n && null !== n) {
                        switch (n.$$typeof) {
                        case T:
                            return n.key === i ? c(e, t, n, s) : null;
                        case E:
                            return n.key === i ? u(e, t, n, s) : null;
                        case L:
                            return h(e, t, (i = n._init)(n._payload), s)
                        }
                        if (te(n) || R(n))
                            return null !== i ? null : d(e, t, n, s, null);
                        Ya(e, n)
                    }
                    return null
                }
                function g(e, t, n, s, i) {
                    if ("string" == typeof s && "" !== s || "number" == typeof s)
                        return l(t, e = e.get(n) || null, "" + s, i);
                    if ("object" == typeof s && null !== s) {
                        switch (s.$$typeof) {
                        case T:
                            return c(t, e = e.get(null === s.key ? n : s.key) || null, s, i);
                        case E:
                            return u(t, e = e.get(null === s.key ? n : s.key) || null, s, i);
                        case L:
                            return g(e, t, n, (0,
                            s._init)(s._payload), i)
                        }
                        if (te(s) || R(s))
                            return d(t, e = e.get(n) || null, s, i, null);
                        Ya(t, s)
                    }
                    return null
                }
                function p(i, a, r, l) {
                    for (var c = null, u = null, d = a, p = a = 0, f = null; null !== d && p < r.length; p++) {
                        d.index > p ? (f = d,
                        d = null) : f = d.sibling;
                        var x = h(i, d, r[p], l);
                        if (null === x) {
                            null === d && (d = f);
                            break
                        }
                        e && d && null === x.alternate && t(i, d),
                        a = o(x, a, p),
                        null === u ? c = x : u.sibling = x,
                        u = x,
                        d = f
                    }
                    if (p === r.length)
                        return n(i, d),
                        ia && Zi(i, p),
                        c;
                    if (null === d) {
                        for (; p < r.length; p++)
                            null !== (d = m(i, r[p], l)) && (a = o(d, a, p),
                            null === u ? c = d : u.sibling = d,
                            u = d);
                        return ia && Zi(i, p),
                        c
                    }
                    for (d = s(i, d); p < r.length; p++)
                        null !== (f = g(d, i, p, r[p], l)) && (e && null !== f.alternate && d.delete(null === f.key ? p : f.key),
                        a = o(f, a, p),
                        null === u ? c = f : u.sibling = f,
                        u = f);
                    return e && d.forEach((function(e) {
                        return t(i, e)
                    }
                    )),
                    ia && Zi(i, p),
                    c
                }
                function f(i, r, l, c) {
                    var u = R(l);
                    if ("function" != typeof u)
                        throw Error(a(150));
                    if (null == (l = u.call(l)))
                        throw Error(a(151));
                    for (var d = u = null, p = r, f = r = 0, x = null, v = l.next(); null !== p && !v.done; f++,
                    v = l.next()) {
                        p.index > f ? (x = p,
                        p = null) : x = p.sibling;
                        var _ = h(i, p, v.value, c);
                        if (null === _) {
                            null === p && (p = x);
                            break
                        }
                        e && p && null === _.alternate && t(i, p),
                        r = o(_, r, f),
                        null === d ? u = _ : d.sibling = _,
                        d = _,
                        p = x
                    }
                    if (v.done)
                        return n(i, p),
                        ia && Zi(i, f),
                        u;
                    if (null === p) {
                        for (; !v.done; f++,
                        v = l.next())
                            null !== (v = m(i, v.value, c)) && (r = o(v, r, f),
                            null === d ? u = v : d.sibling = v,
                            d = v);
                        return ia && Zi(i, f),
                        u
                    }
                    for (p = s(i, p); !v.done; f++,
                    v = l.next())
                        null !== (v = g(p, i, f, v.value, c)) && (e && null !== v.alternate && p.delete(null === v.key ? f : v.key),
                        r = o(v, r, f),
                        null === d ? u = v : d.sibling = v,
                        d = v);
                    return e && p.forEach((function(e) {
                        return t(i, e)
                    }
                    )),
                    ia && Zi(i, f),
                    u
                }
                return function e(s, a, o, l) {
                    if ("object" == typeof o && null !== o && o.type === I && null === o.key && (o = o.props.children),
                    "object" == typeof o && null !== o) {
                        switch (o.$$typeof) {
                        case T:
                            e: {
                                for (var c = o.key, u = a; null !== u; ) {
                                    if (u.key === c) {
                                        if ((c = o.type) === I) {
                                            if (7 === u.tag) {
                                                n(s, u.sibling),
                                                (a = i(u, o.props.children)).return = s,
                                                s = a;
                                                break e
                                            }
                                        } else if (u.elementType === c || "object" == typeof c && null !== c && c.$$typeof === L && $a(c) === u.type) {
                                            n(s, u.sibling),
                                            (a = i(u, o.props)).ref = za(s, u, o),
                                            a.return = s,
                                            s = a;
                                            break e
                                        }
                                        n(s, u);
                                        break
                                    }
                                    t(s, u),
                                    u = u.sibling
                                }
                                o.type === I ? ((a = kc(o.props.children, s.mode, l, o.key)).return = s,
                                s = a) : ((l = Rc(o.type, o.key, o.props, null, s.mode, l)).ref = za(s, a, o),
                                l.return = s,
                                s = l)
                            }
                            return r(s);
                        case E:
                            e: {
                                for (u = o.key; null !== a; ) {
                                    if (a.key === u) {
                                        if (4 === a.tag && a.stateNode.containerInfo === o.containerInfo && a.stateNode.implementation === o.implementation) {
                                            n(s, a.sibling),
                                            (a = i(a, o.children || [])).return = s,
                                            s = a;
                                            break e
                                        }
                                        n(s, a);
                                        break
                                    }
                                    t(s, a),
                                    a = a.sibling
                                }
                                (a = Uc(o, s.mode, l)).return = s,
                                s = a
                            }
                            return r(s);
                        case L:
                            return e(s, a, (u = o._init)(o._payload), l)
                        }
                        if (te(o))
                            return p(s, a, o, l);
                        if (R(o))
                            return f(s, a, o, l);
                        Ya(s, o)
                    }
                    return "string" == typeof o && "" !== o || "number" == typeof o ? (o = "" + o,
                    null !== a && 6 === a.tag ? (n(s, a.sibling),
                    (a = i(a, o)).return = s,
                    s = a) : (n(s, a),
                    (a = Fc(o, s.mode, l)).return = s,
                    s = a),
                    r(s)) : n(s, a)
                }
            }
            var Xa = qa(!0)
              , Qa = qa(!1)
              , Za = {}
              , Ja = Si(Za)
              , eo = Si(Za)
              , to = Si(Za);
            function no(e) {
                if (e === Za)
                    throw Error(a(174));
                return e
            }
            function so(e, t) {
                switch (ji(to, t),
                ji(eo, e),
                ji(Ja, Za),
                e = t.nodeType) {
                case 9:
                case 11:
                    t = (t = t.documentElement) ? t.namespaceURI : le(null, "");
                    break;
                default:
                    t = le(t = (e = 8 === e ? t.parentNode : t).namespaceURI || null, e = e.tagName)
                }
                yi(Ja),
                ji(Ja, t)
            }
            function io() {
                yi(Ja),
                yi(eo),
                yi(to)
            }
            function ao(e) {
                no(to.current);
                var t = no(Ja.current)
                  , n = le(t, e.type);
                t !== n && (ji(eo, e),
                ji(Ja, n))
            }
            function oo(e) {
                eo.current === e && (yi(Ja),
                yi(eo))
            }
            var ro = Si(0);
            function lo(e) {
                for (var t = e; null !== t; ) {
                    if (13 === t.tag) {
                        var n = t.memoizedState;
                        if (null !== n && (null === (n = n.dehydrated) || "$?" === n.data || "$!" === n.data))
                            return t
                    } else if (19 === t.tag && void 0 !== t.memoizedProps.revealOrder) {
                        if (0 != (128 & t.flags))
                            return t
                    } else if (null !== t.child) {
                        t.child.return = t,
                        t = t.child;
                        continue
                    }
                    if (t === e)
                        break;
                    for (; null === t.sibling; ) {
                        if (null === t.return || t.return === e)
                            return null;
                        t = t.return
                    }
                    t.sibling.return = t.return,
                    t = t.sibling
                }
                return null
            }
            var co = [];
            function uo() {
                for (var e = 0; e < co.length; e++)
                    co[e]._workInProgressVersionPrimary = null;
                co.length = 0
            }
            var mo = b.ReactCurrentDispatcher
              , ho = b.ReactCurrentBatchConfig
              , go = 0
              , po = null
              , fo = null
              , xo = null
              , vo = !1
              , _o = !1
              , bo = 0
              , To = 0;
            function Eo() {
                throw Error(a(321))
            }
            function Io(e, t) {
                if (null === t)
                    return !1;
                for (var n = 0; n < t.length && n < e.length; n++)
                    if (!rs(e[n], t[n]))
                        return !1;
                return !0
            }
            function So(e, t, n, s, i, o) {
                if (go = o,
                po = t,
                t.memoizedState = null,
                t.updateQueue = null,
                t.lanes = 0,
                mo.current = null === e || null === e.memoizedState ? rr : lr,
                e = n(s, i),
                _o) {
                    o = 0;
                    do {
                        if (_o = !1,
                        bo = 0,
                        25 <= o)
                            throw Error(a(301));
                        o += 1,
                        xo = fo = null,
                        t.updateQueue = null,
                        mo.current = cr,
                        e = n(s, i)
                    } while (_o)
                }
                if (mo.current = or,
                t = null !== fo && null !== fo.next,
                go = 0,
                xo = fo = po = null,
                vo = !1,
                t)
                    throw Error(a(300));
                return e
            }
            function yo() {
                var e = 0 !== bo;
                return bo = 0,
                e
            }
            function jo() {
                var e = {
                    memoizedState: null,
                    baseState: null,
                    baseQueue: null,
                    queue: null,
                    next: null
                };
                return null === xo ? po.memoizedState = xo = e : xo = xo.next = e,
                xo
            }
            function Co() {
                if (null === fo) {
                    var e = po.alternate;
                    e = null !== e ? e.memoizedState : null
                } else
                    e = fo.next;
                var t = null === xo ? po.memoizedState : xo.next;
                if (null !== t)
                    xo = t,
                    fo = e;
                else {
                    if (null === e)
                        throw Error(a(310));
                    e = {
                        memoizedState: (fo = e).memoizedState,
                        baseState: fo.baseState,
                        baseQueue: fo.baseQueue,
                        queue: fo.queue,
                        next: null
                    },
                    null === xo ? po.memoizedState = xo = e : xo = xo.next = e
                }
                return xo
            }
            function No(e, t) {
                return "function" == typeof t ? t(e) : t
            }
            function wo(e) {
                var t = Co()
                  , n = t.queue;
                if (null === n)
                    throw Error(a(311));
                n.lastRenderedReducer = e;
                var s = fo
                  , i = s.baseQueue
                  , o = n.pending;
                if (null !== o) {
                    if (null !== i) {
                        var r = i.next;
                        i.next = o.next,
                        o.next = r
                    }
                    s.baseQueue = i = o,
                    n.pending = null
                }
                if (null !== i) {
                    o = i.next,
                    s = s.baseState;
                    var l = r = null
                      , c = null
                      , u = o;
                    do {
                        var d = u.lane;
                        if ((go & d) === d)
                            null !== c && (c = c.next = {
                                lane: 0,
                                action: u.action,
                                hasEagerState: u.hasEagerState,
                                eagerState: u.eagerState,
                                next: null
                            }),
                            s = u.hasEagerState ? u.eagerState : e(s, u.action);
                        else {
                            var m = {
                                lane: d,
                                action: u.action,
                                hasEagerState: u.hasEagerState,
                                eagerState: u.eagerState,
                                next: null
                            };
                            null === c ? (l = c = m,
                            r = s) : c = c.next = m,
                            po.lanes |= d,
                            Dl |= d
                        }
                        u = u.next
                    } while (null !== u && u !== o);
                    null === c ? r = s : c.next = l,
                    rs(s, t.memoizedState) || (br = !0),
                    t.memoizedState = s,
                    t.baseState = r,
                    t.baseQueue = c,
                    n.lastRenderedState = s
                }
                if (null !== (e = n.interleaved)) {
                    i = e;
                    do {
                        o = i.lane,
                        po.lanes |= o,
                        Dl |= o,
                        i = i.next
                    } while (i !== e)
                } else
                    null === i && (n.lanes = 0);
                return [t.memoizedState, n.dispatch]
            }
            function Oo(e) {
                var t = Co()
                  , n = t.queue;
                if (null === n)
                    throw Error(a(311));
                n.lastRenderedReducer = e;
                var s = n.dispatch
                  , i = n.pending
                  , o = t.memoizedState;
                if (null !== i) {
                    n.pending = null;
                    var r = i = i.next;
                    do {
                        o = e(o, r.action),
                        r = r.next
                    } while (r !== i);
                    rs(o, t.memoizedState) || (br = !0),
                    t.memoizedState = o,
                    null === t.baseQueue && (t.baseState = o),
                    n.lastRenderedState = o
                }
                return [o, s]
            }
            function Po() {}
            function Lo(e, t) {
                var n = po
                  , s = Co()
                  , i = t()
                  , o = !rs(s.memoizedState, i);
                if (o && (s.memoizedState = i,
                br = !0),
                s = s.queue,
                Ko(Ro.bind(null, n, s, e), [e]),
                s.getSnapshot !== t || o || null !== xo && 1 & xo.memoizedState.tag) {
                    if (n.flags |= 2048,
                    Uo(9, Mo.bind(null, n, s, i, t), void 0, null),
                    null === Ol)
                        throw Error(a(349));
                    0 != (30 & go) || Ao(n, t, i)
                }
                return i
            }
            function Ao(e, t, n) {
                e.flags |= 16384,
                e = {
                    getSnapshot: t,
                    value: n
                },
                null === (t = po.updateQueue) ? (t = {
                    lastEffect: null,
                    stores: null
                },
                po.updateQueue = t,
                t.stores = [e]) : null === (n = t.stores) ? t.stores = [e] : n.push(e)
            }
            function Mo(e, t, n, s) {
                t.value = n,
                t.getSnapshot = s,
                ko(t) && Do(e)
            }
            function Ro(e, t, n) {
                return n((function() {
                    ko(t) && Do(e)
                }
                ))
            }
            function ko(e) {
                var t = e.getSnapshot;
                e = e.value;
                try {
                    var n = t();
                    return !rs(e, n)
                } catch (e) {
                    return !0
                }
            }
            function Do(e) {
                var t = wa(e, 1);
                null !== t && sc(t, e, 1, -1)
            }
            function Fo(e) {
                var t = jo();
                return "function" == typeof e && (e = e()),
                t.memoizedState = t.baseState = e,
                e = {
                    pending: null,
                    interleaved: null,
                    lanes: 0,
                    dispatch: null,
                    lastRenderedReducer: No,
                    lastRenderedState: e
                },
                t.queue = e,
                e = e.dispatch = nr.bind(null, po, e),
                [t.memoizedState, e]
            }
            function Uo(e, t, n, s) {
                return e = {
                    tag: e,
                    create: t,
                    destroy: n,
                    deps: s,
                    next: null
                },
                null === (t = po.updateQueue) ? (t = {
                    lastEffect: null,
                    stores: null
                },
                po.updateQueue = t,
                t.lastEffect = e.next = e) : null === (n = t.lastEffect) ? t.lastEffect = e.next = e : (s = n.next,
                n.next = e,
                e.next = s,
                t.lastEffect = e),
                e
            }
            function Bo() {
                return Co().memoizedState
            }
            function Go(e, t, n, s) {
                var i = jo();
                po.flags |= e,
                i.memoizedState = Uo(1 | t, n, void 0, void 0 === s ? null : s)
            }
            function Vo(e, t, n, s) {
                var i = Co();
                s = void 0 === s ? null : s;
                var a = void 0;
                if (null !== fo) {
                    var o = fo.memoizedState;
                    if (a = o.destroy,
                    null !== s && Io(s, o.deps))
                        return void (i.memoizedState = Uo(t, n, a, s))
                }
                po.flags |= e,
                i.memoizedState = Uo(1 | t, n, a, s)
            }
            function Ho(e, t) {
                return Go(8390656, 8, e, t)
            }
            function Ko(e, t) {
                return Vo(2048, 8, e, t)
            }
            function Wo(e, t) {
                return Vo(4, 2, e, t)
            }
            function zo(e, t) {
                return Vo(4, 4, e, t)
            }
            function Yo(e, t) {
                return "function" == typeof t ? (e = e(),
                t(e),
                function() {
                    t(null)
                }
                ) : null != t ? (e = e(),
                t.current = e,
                function() {
                    t.current = null
                }
                ) : void 0
            }
            function $o(e, t, n) {
                return n = null != n ? n.concat([e]) : null,
                Vo(4, 4, Yo.bind(null, t, e), n)
            }
            function qo() {}
            function Xo(e, t) {
                var n = Co();
                t = void 0 === t ? null : t;
                var s = n.memoizedState;
                return null !== s && null !== t && Io(t, s[1]) ? s[0] : (n.memoizedState = [e, t],
                e)
            }
            function Qo(e, t) {
                var n = Co();
                t = void 0 === t ? null : t;
                var s = n.memoizedState;
                return null !== s && null !== t && Io(t, s[1]) ? s[0] : (e = e(),
                n.memoizedState = [e, t],
                e)
            }
            function Zo(e, t, n) {
                return 0 == (21 & go) ? (e.baseState && (e.baseState = !1,
                br = !0),
                e.memoizedState = n) : (rs(n, t) || (n = pt(),
                po.lanes |= n,
                Dl |= n,
                e.baseState = !0),
                t)
            }
            function Jo(e, t) {
                var n = _t;
                _t = 0 !== n && 4 > n ? n : 4,
                e(!0);
                var s = ho.transition;
                ho.transition = {};
                try {
                    e(!1),
                    t()
                } finally {
                    _t = n,
                    ho.transition = s
                }
            }
            function er() {
                return Co().memoizedState
            }
            function tr(e, t, n) {
                var s = nc(e);
                if (n = {
                    lane: s,
                    action: n,
                    hasEagerState: !1,
                    eagerState: null,
                    next: null
                },
                sr(e))
                    ir(t, n);
                else if (null !== (n = Na(e, t, n, s))) {
                    sc(n, e, s, tc()),
                    ar(n, t, s)
                }
            }
            function nr(e, t, n) {
                var s = nc(e)
                  , i = {
                    lane: s,
                    action: n,
                    hasEagerState: !1,
                    eagerState: null,
                    next: null
                };
                if (sr(e))
                    ir(t, i);
                else {
                    var a = e.alternate;
                    if (0 === e.lanes && (null === a || 0 === a.lanes) && null !== (a = t.lastRenderedReducer))
                        try {
                            var o = t.lastRenderedState
                              , r = a(o, n);
                            if (i.hasEagerState = !0,
                            i.eagerState = r,
                            rs(r, o)) {
                                var l = t.interleaved;
                                return null === l ? (i.next = i,
                                Ca(t)) : (i.next = l.next,
                                l.next = i),
                                void (t.interleaved = i)
                            }
                        } catch (e) {}
                    null !== (n = Na(e, t, i, s)) && (sc(n, e, s, i = tc()),
                    ar(n, t, s))
                }
            }
            function sr(e) {
                var t = e.alternate;
                return e === po || null !== t && t === po
            }
            function ir(e, t) {
                _o = vo = !0;
                var n = e.pending;
                null === n ? t.next = t : (t.next = n.next,
                n.next = t),
                e.pending = t
            }
            function ar(e, t, n) {
                if (0 != (4194240 & n)) {
                    var s = t.lanes;
                    n |= s &= e.pendingLanes,
                    t.lanes = n,
                    vt(e, n)
                }
            }
            var or = {
                readContext: ya,
                useCallback: Eo,
                useContext: Eo,
                useEffect: Eo,
                useImperativeHandle: Eo,
                useInsertionEffect: Eo,
                useLayoutEffect: Eo,
                useMemo: Eo,
                useReducer: Eo,
                useRef: Eo,
                useState: Eo,
                useDebugValue: Eo,
                useDeferredValue: Eo,
                useTransition: Eo,
                useMutableSource: Eo,
                useSyncExternalStore: Eo,
                useId: Eo,
                unstable_isNewReconciler: !1
            }
              , rr = {
                readContext: ya,
                useCallback: function(e, t) {
                    return jo().memoizedState = [e, void 0 === t ? null : t],
                    e
                },
                useContext: ya,
                useEffect: Ho,
                useImperativeHandle: function(e, t, n) {
                    return n = null != n ? n.concat([e]) : null,
                    Go(4194308, 4, Yo.bind(null, t, e), n)
                },
                useLayoutEffect: function(e, t) {
                    return Go(4194308, 4, e, t)
                },
                useInsertionEffect: function(e, t) {
                    return Go(4, 2, e, t)
                },
                useMemo: function(e, t) {
                    var n = jo();
                    return t = void 0 === t ? null : t,
                    e = e(),
                    n.memoizedState = [e, t],
                    e
                },
                useReducer: function(e, t, n) {
                    var s = jo();
                    return t = void 0 !== n ? n(t) : t,
                    s.memoizedState = s.baseState = t,
                    e = {
                        pending: null,
                        interleaved: null,
                        lanes: 0,
                        dispatch: null,
                        lastRenderedReducer: e,
                        lastRenderedState: t
                    },
                    s.queue = e,
                    e = e.dispatch = tr.bind(null, po, e),
                    [s.memoizedState, e]
                },
                useRef: function(e) {
                    return e = {
                        current: e
                    },
                    jo().memoizedState = e
                },
                useState: Fo,
                useDebugValue: qo,
                useDeferredValue: function(e) {
                    return jo().memoizedState = e
                },
                useTransition: function() {
                    var e = Fo(!1)
                      , t = e[0];
                    return e = Jo.bind(null, e[1]),
                    jo().memoizedState = e,
                    [t, e]
                },
                useMutableSource: function() {},
                useSyncExternalStore: function(e, t, n) {
                    var s = po
                      , i = jo();
                    if (ia) {
                        if (void 0 === n)
                            throw Error(a(407));
                        n = n()
                    } else {
                        if (n = t(),
                        null === Ol)
                            throw Error(a(349));
                        0 != (30 & go) || Ao(s, t, n)
                    }
                    i.memoizedState = n;
                    var o = {
                        value: n,
                        getSnapshot: t
                    };
                    return i.queue = o,
                    Ho(Ro.bind(null, s, o, e), [e]),
                    s.flags |= 2048,
                    Uo(9, Mo.bind(null, s, o, n, t), void 0, null),
                    n
                },
                useId: function() {
                    var e = jo()
                      , t = Ol.identifierPrefix;
                    if (ia) {
                        var n = Qi;
                        t = ":" + t + "R" + (n = (Xi & ~(1 << 32 - ot(Xi) - 1)).toString(32) + n),
                        0 < (n = bo++) && (t += "H" + n.toString(32)),
                        t += ":"
                    } else
                        t = ":" + t + "r" + (n = To++).toString(32) + ":";
                    return e.memoizedState = t
                },
                unstable_isNewReconciler: !1
            }
              , lr = {
                readContext: ya,
                useCallback: Xo,
                useContext: ya,
                useEffect: Ko,
                useImperativeHandle: $o,
                useInsertionEffect: Wo,
                useLayoutEffect: zo,
                useMemo: Qo,
                useReducer: wo,
                useRef: Bo,
                useState: function() {
                    return wo(No)
                },
                useDebugValue: qo,
                useDeferredValue: function(e) {
                    return Zo(Co(), fo.memoizedState, e)
                },
                useTransition: function() {
                    return [wo(No)[0], Co().memoizedState]
                },
                useMutableSource: Po,
                useSyncExternalStore: Lo,
                useId: er,
                unstable_isNewReconciler: !1
            }
              , cr = {
                readContext: ya,
                useCallback: Xo,
                useContext: ya,
                useEffect: Ko,
                useImperativeHandle: $o,
                useInsertionEffect: Wo,
                useLayoutEffect: zo,
                useMemo: Qo,
                useReducer: Oo,
                useRef: Bo,
                useState: function() {
                    return Oo(No)
                },
                useDebugValue: qo,
                useDeferredValue: function(e) {
                    var t = Co();
                    return null === fo ? t.memoizedState = e : Zo(t, fo.memoizedState, e)
                },
                useTransition: function() {
                    return [Oo(No)[0], Co().memoizedState]
                },
                useMutableSource: Po,
                useSyncExternalStore: Lo,
                useId: er,
                unstable_isNewReconciler: !1
            };
            function ur(e, t) {
                try {
                    var n = ""
                      , s = t;
                    do {
                        n += G(s),
                        s = s.return
                    } while (s);
                    var i = n
                } catch (e) {
                    i = "\nError generating stack: " + e.message + "\n" + e.stack
                }
                return {
                    value: e,
                    source: t,
                    stack: i,
                    digest: null
                }
            }
            function dr(e, t, n) {
                return {
                    value: e,
                    source: null,
                    stack: null != n ? n : null,
                    digest: null != t ? t : null
                }
            }
            function mr(e, t) {
                try {
                    console.error(t.value)
                } catch (e) {
                    setTimeout((function() {
                        throw e
                    }
                    ))
                }
            }
            var hr = "function" == typeof WeakMap ? WeakMap : Map;
            function gr(e, t, n) {
                (n = Aa(-1, n)).tag = 3,
                n.payload = {
                    element: null
                };
                var s = t.value;
                return n.callback = function() {
                    Wl || (Wl = !0,
                    zl = s),
                    mr(0, t)
                }
                ,
                n
            }
            function pr(e, t, n) {
                (n = Aa(-1, n)).tag = 3;
                var s = e.type.getDerivedStateFromError;
                if ("function" == typeof s) {
                    var i = t.value;
                    n.payload = function() {
                        return s(i)
                    }
                    ,
                    n.callback = function() {
                        mr(0, t)
                    }
                }
                var a = e.stateNode;
                return null !== a && "function" == typeof a.componentDidCatch && (n.callback = function() {
                    mr(0, t),
                    "function" != typeof s && (null === Yl ? Yl = new Set([this]) : Yl.add(this));
                    var e = t.stack;
                    this.componentDidCatch(t.value, {
                        componentStack: null !== e ? e : ""
                    })
                }
                ),
                n
            }
            function fr(e, t, n) {
                var s = e.pingCache;
                if (null === s) {
                    s = e.pingCache = new hr;
                    var i = new Set;
                    s.set(t, i)
                } else
                    void 0 === (i = s.get(t)) && (i = new Set,
                    s.set(t, i));
                i.has(n) || (i.add(n),
                e = jc.bind(null, e, t, n),
                t.then(e, e))
            }
            function xr(e) {
                do {
                    var t;
                    if ((t = 13 === e.tag) && (t = null === (t = e.memoizedState) || null !== t.dehydrated),
                    t)
                        return e;
                    e = e.return
                } while (null !== e);
                return null
            }
            function vr(e, t, n, s, i) {
                return 0 == (1 & e.mode) ? (e === t ? e.flags |= 65536 : (e.flags |= 128,
                n.flags |= 131072,
                n.flags &= -52805,
                1 === n.tag && (null === n.alternate ? n.tag = 17 : ((t = Aa(-1, 1)).tag = 2,
                Ma(n, t, 1))),
                n.lanes |= 1),
                e) : (e.flags |= 65536,
                e.lanes = i,
                e)
            }
            var _r = b.ReactCurrentOwner
              , br = !1;
            function Tr(e, t, n, s) {
                t.child = null === e ? Qa(t, null, n, s) : Xa(t, e.child, n, s)
            }
            function Er(e, t, n, s, i) {
                n = n.render;
                var a = t.ref;
                return Sa(t, i),
                s = So(e, t, n, s, a, i),
                n = yo(),
                null === e || br ? (ia && n && ea(t),
                t.flags |= 1,
                Tr(e, t, s, i),
                t.child) : (t.updateQueue = e.updateQueue,
                t.flags &= -2053,
                e.lanes &= ~i,
                Wr(e, t, i))
            }
            function Ir(e, t, n, s, i) {
                if (null === e) {
                    var a = n.type;
                    return "function" != typeof a || Ac(a) || void 0 !== a.defaultProps || null !== n.compare || void 0 !== n.defaultProps ? ((e = Rc(n.type, null, s, t, t.mode, i)).ref = t.ref,
                    e.return = t,
                    t.child = e) : (t.tag = 15,
                    t.type = a,
                    Sr(e, t, a, s, i))
                }
                if (a = e.child,
                0 == (e.lanes & i)) {
                    var o = a.memoizedProps;
                    if ((n = null !== (n = n.compare) ? n : ls)(o, s) && e.ref === t.ref)
                        return Wr(e, t, i)
                }
                return t.flags |= 1,
                (e = Mc(a, s)).ref = t.ref,
                e.return = t,
                t.child = e
            }
            function Sr(e, t, n, s, i) {
                if (null !== e) {
                    var a = e.memoizedProps;
                    if (ls(a, s) && e.ref === t.ref) {
                        if (br = !1,
                        t.pendingProps = s = a,
                        0 == (e.lanes & i))
                            return t.lanes = e.lanes,
                            Wr(e, t, i);
                        0 != (131072 & e.flags) && (br = !0)
                    }
                }
                return Cr(e, t, n, s, i)
            }
            function yr(e, t, n) {
                var s = t.pendingProps
                  , i = s.children
                  , a = null !== e ? e.memoizedState : null;
                if ("hidden" === s.mode)
                    if (0 == (1 & t.mode))
                        t.memoizedState = {
                            baseLanes: 0,
                            cachePool: null,
                            transitions: null
                        },
                        ji(Ml, Al),
                        Al |= n;
                    else {
                        if (0 == (1073741824 & n))
                            return e = null !== a ? a.baseLanes | n : n,
                            t.lanes = t.childLanes = 1073741824,
                            t.memoizedState = {
                                baseLanes: e,
                                cachePool: null,
                                transitions: null
                            },
                            t.updateQueue = null,
                            ji(Ml, Al),
                            Al |= e,
                            null;
                        t.memoizedState = {
                            baseLanes: 0,
                            cachePool: null,
                            transitions: null
                        },
                        s = null !== a ? a.baseLanes : n,
                        ji(Ml, Al),
                        Al |= s
                    }
                else
                    null !== a ? (s = a.baseLanes | n,
                    t.memoizedState = null) : s = n,
                    ji(Ml, Al),
                    Al |= s;
                return Tr(e, t, i, n),
                t.child
            }
            function jr(e, t) {
                var n = t.ref;
                (null === e && null !== n || null !== e && e.ref !== n) && (t.flags |= 512,
                t.flags |= 2097152)
            }
            function Cr(e, t, n, s, i) {
                var a = Li(n) ? Oi : Ni.current;
                return a = Pi(t, a),
                Sa(t, i),
                n = So(e, t, n, s, a, i),
                s = yo(),
                null === e || br ? (ia && s && ea(t),
                t.flags |= 1,
                Tr(e, t, n, i),
                t.child) : (t.updateQueue = e.updateQueue,
                t.flags &= -2053,
                e.lanes &= ~i,
                Wr(e, t, i))
            }
            function Nr(e, t, n, s, i) {
                if (Li(n)) {
                    var a = !0;
                    ki(t)
                } else
                    a = !1;
                if (Sa(t, i),
                null === t.stateNode)
                    Kr(e, t),
                    Ha(t, n, s),
                    Wa(t, n, s, i),
                    s = !0;
                else if (null === e) {
                    var o = t.stateNode
                      , r = t.memoizedProps;
                    o.props = r;
                    var l = o.context
                      , c = n.contextType;
                    "object" == typeof c && null !== c ? c = ya(c) : c = Pi(t, c = Li(n) ? Oi : Ni.current);
                    var u = n.getDerivedStateFromProps
                      , d = "function" == typeof u || "function" == typeof o.getSnapshotBeforeUpdate;
                    d || "function" != typeof o.UNSAFE_componentWillReceiveProps && "function" != typeof o.componentWillReceiveProps || (r !== s || l !== c) && Ka(t, o, s, c),
                    Oa = !1;
                    var m = t.memoizedState;
                    o.state = m,
                    Da(t, s, o, i),
                    l = t.memoizedState,
                    r !== s || m !== l || wi.current || Oa ? ("function" == typeof u && (Ba(t, n, u, s),
                    l = t.memoizedState),
                    (r = Oa || Va(t, n, r, s, m, l, c)) ? (d || "function" != typeof o.UNSAFE_componentWillMount && "function" != typeof o.componentWillMount || ("function" == typeof o.componentWillMount && o.componentWillMount(),
                    "function" == typeof o.UNSAFE_componentWillMount && o.UNSAFE_componentWillMount()),
                    "function" == typeof o.componentDidMount && (t.flags |= 4194308)) : ("function" == typeof o.componentDidMount && (t.flags |= 4194308),
                    t.memoizedProps = s,
                    t.memoizedState = l),
                    o.props = s,
                    o.state = l,
                    o.context = c,
                    s = r) : ("function" == typeof o.componentDidMount && (t.flags |= 4194308),
                    s = !1)
                } else {
                    o = t.stateNode,
                    La(e, t),
                    r = t.memoizedProps,
                    c = t.type === t.elementType ? r : fa(t.type, r),
                    o.props = c,
                    d = t.pendingProps,
                    m = o.context,
                    "object" == typeof (l = n.contextType) && null !== l ? l = ya(l) : l = Pi(t, l = Li(n) ? Oi : Ni.current);
                    var h = n.getDerivedStateFromProps;
                    (u = "function" == typeof h || "function" == typeof o.getSnapshotBeforeUpdate) || "function" != typeof o.UNSAFE_componentWillReceiveProps && "function" != typeof o.componentWillReceiveProps || (r !== d || m !== l) && Ka(t, o, s, l),
                    Oa = !1,
                    m = t.memoizedState,
                    o.state = m,
                    Da(t, s, o, i);
                    var g = t.memoizedState;
                    r !== d || m !== g || wi.current || Oa ? ("function" == typeof h && (Ba(t, n, h, s),
                    g = t.memoizedState),
                    (c = Oa || Va(t, n, c, s, m, g, l) || !1) ? (u || "function" != typeof o.UNSAFE_componentWillUpdate && "function" != typeof o.componentWillUpdate || ("function" == typeof o.componentWillUpdate && o.componentWillUpdate(s, g, l),
                    "function" == typeof o.UNSAFE_componentWillUpdate && o.UNSAFE_componentWillUpdate(s, g, l)),
                    "function" == typeof o.componentDidUpdate && (t.flags |= 4),
                    "function" == typeof o.getSnapshotBeforeUpdate && (t.flags |= 1024)) : ("function" != typeof o.componentDidUpdate || r === e.memoizedProps && m === e.memoizedState || (t.flags |= 4),
                    "function" != typeof o.getSnapshotBeforeUpdate || r === e.memoizedProps && m === e.memoizedState || (t.flags |= 1024),
                    t.memoizedProps = s,
                    t.memoizedState = g),
                    o.props = s,
                    o.state = g,
                    o.context = l,
                    s = c) : ("function" != typeof o.componentDidUpdate || r === e.memoizedProps && m === e.memoizedState || (t.flags |= 4),
                    "function" != typeof o.getSnapshotBeforeUpdate || r === e.memoizedProps && m === e.memoizedState || (t.flags |= 1024),
                    s = !1)
                }
                return wr(e, t, n, s, a, i)
            }
            function wr(e, t, n, s, i, a) {
                jr(e, t);
                var o = 0 != (128 & t.flags);
                if (!s && !o)
                    return i && Di(t, n, !1),
                    Wr(e, t, a);
                s = t.stateNode,
                _r.current = t;
                var r = o && "function" != typeof n.getDerivedStateFromError ? null : s.render();
                return t.flags |= 1,
                null !== e && o ? (t.child = Xa(t, e.child, null, a),
                t.child = Xa(t, null, r, a)) : Tr(e, t, r, a),
                t.memoizedState = s.state,
                i && Di(t, n, !0),
                t.child
            }
            function Or(e) {
                var t = e.stateNode;
                t.pendingContext ? Mi(0, t.pendingContext, t.pendingContext !== t.context) : t.context && Mi(0, t.context, !1),
                so(e, t.containerInfo)
            }
            function Pr(e, t, n, s, i) {
                return ha(),
                ga(i),
                t.flags |= 256,
                Tr(e, t, n, s),
                t.child
            }
            var Lr, Ar, Mr, Rr, kr = {
                dehydrated: null,
                treeContext: null,
                retryLane: 0
            };
            function Dr(e) {
                return {
                    baseLanes: e,
                    cachePool: null,
                    transitions: null
                }
            }
            function Fr(e, t, n) {
                var s, i = t.pendingProps, o = ro.current, r = !1, l = 0 != (128 & t.flags);
                if ((s = l) || (s = (null === e || null !== e.memoizedState) && 0 != (2 & o)),
                s ? (r = !0,
                t.flags &= -129) : null !== e && null === e.memoizedState || (o |= 1),
                ji(ro, 1 & o),
                null === e)
                    return ca(t),
                    null !== (e = t.memoizedState) && null !== (e = e.dehydrated) ? (0 == (1 & t.mode) ? t.lanes = 1 : "$!" === e.data ? t.lanes = 8 : t.lanes = 1073741824,
                    null) : (l = i.children,
                    e = i.fallback,
                    r ? (i = t.mode,
                    r = t.child,
                    l = {
                        mode: "hidden",
                        children: l
                    },
                    0 == (1 & i) && null !== r ? (r.childLanes = 0,
                    r.pendingProps = l) : r = Dc(l, i, 0, null),
                    e = kc(e, i, n, null),
                    r.return = t,
                    e.return = t,
                    r.sibling = e,
                    t.child = r,
                    t.child.memoizedState = Dr(n),
                    t.memoizedState = kr,
                    e) : Ur(t, l));
                if (null !== (o = e.memoizedState) && null !== (s = o.dehydrated))
                    return function(e, t, n, s, i, o, r) {
                        if (n)
                            return 256 & t.flags ? (t.flags &= -257,
                            Br(e, t, r, s = dr(Error(a(422))))) : null !== t.memoizedState ? (t.child = e.child,
                            t.flags |= 128,
                            null) : (o = s.fallback,
                            i = t.mode,
                            s = Dc({
                                mode: "visible",
                                children: s.children
                            }, i, 0, null),
                            (o = kc(o, i, r, null)).flags |= 2,
                            s.return = t,
                            o.return = t,
                            s.sibling = o,
                            t.child = s,
                            0 != (1 & t.mode) && Xa(t, e.child, null, r),
                            t.child.memoizedState = Dr(r),
                            t.memoizedState = kr,
                            o);
                        if (0 == (1 & t.mode))
                            return Br(e, t, r, null);
                        if ("$!" === i.data) {
                            if (s = i.nextSibling && i.nextSibling.dataset)
                                var l = s.dgst;
                            return s = l,
                            Br(e, t, r, s = dr(o = Error(a(419)), s, void 0))
                        }
                        if (l = 0 != (r & e.childLanes),
                        br || l) {
                            if (null !== (s = Ol)) {
                                switch (r & -r) {
                                case 4:
                                    i = 2;
                                    break;
                                case 16:
                                    i = 8;
                                    break;
                                case 64:
                                case 128:
                                case 256:
                                case 512:
                                case 1024:
                                case 2048:
                                case 4096:
                                case 8192:
                                case 16384:
                                case 32768:
                                case 65536:
                                case 131072:
                                case 262144:
                                case 524288:
                                case 1048576:
                                case 2097152:
                                case 4194304:
                                case 8388608:
                                case 16777216:
                                case 33554432:
                                case 67108864:
                                    i = 32;
                                    break;
                                case 536870912:
                                    i = 268435456;
                                    break;
                                default:
                                    i = 0
                                }
                                0 !== (i = 0 != (i & (s.suspendedLanes | r)) ? 0 : i) && i !== o.retryLane && (o.retryLane = i,
                                wa(e, i),
                                sc(s, e, i, -1))
                            }
                            return fc(),
                            Br(e, t, r, s = dr(Error(a(421))))
                        }
                        return "$?" === i.data ? (t.flags |= 128,
                        t.child = e.child,
                        t = Nc.bind(null, e),
                        i._reactRetry = t,
                        null) : (e = o.treeContext,
                        sa = ci(i.nextSibling),
                        na = t,
                        ia = !0,
                        aa = null,
                        null !== e && (Yi[$i++] = Xi,
                        Yi[$i++] = Qi,
                        Yi[$i++] = qi,
                        Xi = e.id,
                        Qi = e.overflow,
                        qi = t),
                        t = Ur(t, s.children),
                        t.flags |= 4096,
                        t)
                    }(e, t, l, i, s, o, n);
                if (r) {
                    r = i.fallback,
                    l = t.mode,
                    s = (o = e.child).sibling;
                    var c = {
                        mode: "hidden",
                        children: i.children
                    };
                    return 0 == (1 & l) && t.child !== o ? ((i = t.child).childLanes = 0,
                    i.pendingProps = c,
                    t.deletions = null) : (i = Mc(o, c)).subtreeFlags = 14680064 & o.subtreeFlags,
                    null !== s ? r = Mc(s, r) : (r = kc(r, l, n, null)).flags |= 2,
                    r.return = t,
                    i.return = t,
                    i.sibling = r,
                    t.child = i,
                    i = r,
                    r = t.child,
                    l = null === (l = e.child.memoizedState) ? Dr(n) : {
                        baseLanes: l.baseLanes | n,
                        cachePool: null,
                        transitions: l.transitions
                    },
                    r.memoizedState = l,
                    r.childLanes = e.childLanes & ~n,
                    t.memoizedState = kr,
                    i
                }
                return e = (r = e.child).sibling,
                i = Mc(r, {
                    mode: "visible",
                    children: i.children
                }),
                0 == (1 & t.mode) && (i.lanes = n),
                i.return = t,
                i.sibling = null,
                null !== e && (null === (n = t.deletions) ? (t.deletions = [e],
                t.flags |= 16) : n.push(e)),
                t.child = i,
                t.memoizedState = null,
                i
            }
            function Ur(e, t) {
                return (t = Dc({
                    mode: "visible",
                    children: t
                }, e.mode, 0, null)).return = e,
                e.child = t
            }
            function Br(e, t, n, s) {
                return null !== s && ga(s),
                Xa(t, e.child, null, n),
                (e = Ur(t, t.pendingProps.children)).flags |= 2,
                t.memoizedState = null,
                e
            }
            function Gr(e, t, n) {
                e.lanes |= t;
                var s = e.alternate;
                null !== s && (s.lanes |= t),
                Ia(e.return, t, n)
            }
            function Vr(e, t, n, s, i) {
                var a = e.memoizedState;
                null === a ? e.memoizedState = {
                    isBackwards: t,
                    rendering: null,
                    renderingStartTime: 0,
                    last: s,
                    tail: n,
                    tailMode: i
                } : (a.isBackwards = t,
                a.rendering = null,
                a.renderingStartTime = 0,
                a.last = s,
                a.tail = n,
                a.tailMode = i)
            }
            function Hr(e, t, n) {
                var s = t.pendingProps
                  , i = s.revealOrder
                  , a = s.tail;
                if (Tr(e, t, s.children, n),
                0 != (2 & (s = ro.current)))
                    s = 1 & s | 2,
                    t.flags |= 128;
                else {
                    if (null !== e && 0 != (128 & e.flags))
                        e: for (e = t.child; null !== e; ) {
                            if (13 === e.tag)
                                null !== e.memoizedState && Gr(e, n, t);
                            else if (19 === e.tag)
                                Gr(e, n, t);
                            else if (null !== e.child) {
                                e.child.return = e,
                                e = e.child;
                                continue
                            }
                            if (e === t)
                                break e;
                            for (; null === e.sibling; ) {
                                if (null === e.return || e.return === t)
                                    break e;
                                e = e.return
                            }
                            e.sibling.return = e.return,
                            e = e.sibling
                        }
                    s &= 1
                }
                if (ji(ro, s),
                0 == (1 & t.mode))
                    t.memoizedState = null;
                else
                    switch (i) {
                    case "forwards":
                        for (n = t.child,
                        i = null; null !== n; )
                            null !== (e = n.alternate) && null === lo(e) && (i = n),
                            n = n.sibling;
                        null === (n = i) ? (i = t.child,
                        t.child = null) : (i = n.sibling,
                        n.sibling = null),
                        Vr(t, !1, i, n, a);
                        break;
                    case "backwards":
                        for (n = null,
                        i = t.child,
                        t.child = null; null !== i; ) {
                            if (null !== (e = i.alternate) && null === lo(e)) {
                                t.child = i;
                                break
                            }
                            e = i.sibling,
                            i.sibling = n,
                            n = i,
                            i = e
                        }
                        Vr(t, !0, n, null, a);
                        break;
                    case "together":
                        Vr(t, !1, null, null, void 0);
                        break;
                    default:
                        t.memoizedState = null
                    }
                return t.child
            }
            function Kr(e, t) {
                0 == (1 & t.mode) && null !== e && (e.alternate = null,
                t.alternate = null,
                t.flags |= 2)
            }
            function Wr(e, t, n) {
                if (null !== e && (t.dependencies = e.dependencies),
                Dl |= t.lanes,
                0 == (n & t.childLanes))
                    return null;
                if (null !== e && t.child !== e.child)
                    throw Error(a(153));
                if (null !== t.child) {
                    for (n = Mc(e = t.child, e.pendingProps),
                    t.child = n,
                    n.return = t; null !== e.sibling; )
                        e = e.sibling,
                        (n = n.sibling = Mc(e, e.pendingProps)).return = t;
                    n.sibling = null
                }
                return t.child
            }
            function zr(e, t) {
                if (!ia)
                    switch (e.tailMode) {
                    case "hidden":
                        t = e.tail;
                        for (var n = null; null !== t; )
                            null !== t.alternate && (n = t),
                            t = t.sibling;
                        null === n ? e.tail = null : n.sibling = null;
                        break;
                    case "collapsed":
                        n = e.tail;
                        for (var s = null; null !== n; )
                            null !== n.alternate && (s = n),
                            n = n.sibling;
                        null === s ? t || null === e.tail ? e.tail = null : e.tail.sibling = null : s.sibling = null
                    }
            }
            function Yr(e) {
                var t = null !== e.alternate && e.alternate.child === e.child
                  , n = 0
                  , s = 0;
                if (t)
                    for (var i = e.child; null !== i; )
                        n |= i.lanes | i.childLanes,
                        s |= 14680064 & i.subtreeFlags,
                        s |= 14680064 & i.flags,
                        i.return = e,
                        i = i.sibling;
                else
                    for (i = e.child; null !== i; )
                        n |= i.lanes | i.childLanes,
                        s |= i.subtreeFlags,
                        s |= i.flags,
                        i.return = e,
                        i = i.sibling;
                return e.subtreeFlags |= s,
                e.childLanes = n,
                t
            }
            function $r(e, t, n) {
                var s = t.pendingProps;
                switch (ta(t),
                t.tag) {
                case 2:
                case 16:
                case 15:
                case 0:
                case 11:
                case 7:
                case 8:
                case 12:
                case 9:
                case 14:
                    return Yr(t),
                    null;
                case 1:
                case 17:
                    return Li(t.type) && Ai(),
                    Yr(t),
                    null;
                case 3:
                    return s = t.stateNode,
                    io(),
                    yi(wi),
                    yi(Ni),
                    uo(),
                    s.pendingContext && (s.context = s.pendingContext,
                    s.pendingContext = null),
                    null !== e && null !== e.child || (da(t) ? t.flags |= 4 : null === e || e.memoizedState.isDehydrated && 0 == (256 & t.flags) || (t.flags |= 1024,
                    null !== aa && (rc(aa),
                    aa = null))),
                    Ar(e, t),
                    Yr(t),
                    null;
                case 5:
                    oo(t);
                    var i = no(to.current);
                    if (n = t.type,
                    null !== e && null != t.stateNode)
                        Mr(e, t, n, s, i),
                        e.ref !== t.ref && (t.flags |= 512,
                        t.flags |= 2097152);
                    else {
                        if (!s) {
                            if (null === t.stateNode)
                                throw Error(a(166));
                            return Yr(t),
                            null
                        }
                        if (e = no(Ja.current),
                        da(t)) {
                            s = t.stateNode,
                            n = t.type;
                            var o = t.memoizedProps;
                            switch (s[mi] = t,
                            s[hi] = o,
                            e = 0 != (1 & t.mode),
                            n) {
                            case "dialog":
                                Us("cancel", s),
                                Us("close", s);
                                break;
                            case "iframe":
                            case "object":
                            case "embed":
                                Us("load", s);
                                break;
                            case "video":
                            case "audio":
                                for (i = 0; i < Rs.length; i++)
                                    Us(Rs[i], s);
                                break;
                            case "source":
                                Us("error", s);
                                break;
                            case "img":
                            case "image":
                            case "link":
                                Us("error", s),
                                Us("load", s);
                                break;
                            case "details":
                                Us("toggle", s);
                                break;
                            case "input":
                                X(s, o),
                                Us("invalid", s);
                                break;
                            case "select":
                                s._wrapperState = {
                                    wasMultiple: !!o.multiple
                                },
                                Us("invalid", s);
                                break;
                            case "textarea":
                                ie(s, o),
                                Us("invalid", s)
                            }
                            for (var l in ve(n, o),
                            i = null,
                            o)
                                if (o.hasOwnProperty(l)) {
                                    var c = o[l];
                                    "children" === l ? "string" == typeof c ? s.textContent !== c && (!0 !== o.suppressHydrationWarning && Zs(s.textContent, c, e),
                                    i = ["children", c]) : "number" == typeof c && s.textContent !== "" + c && (!0 !== o.suppressHydrationWarning && Zs(s.textContent, c, e),
                                    i = ["children", "" + c]) : r.hasOwnProperty(l) && null != c && "onScroll" === l && Us("scroll", s)
                                }
                            switch (n) {
                            case "input":
                                z(s),
                                J(s, o, !0);
                                break;
                            case "textarea":
                                z(s),
                                oe(s);
                                break;
                            case "select":
                            case "option":
                                break;
                            default:
                                "function" == typeof o.onClick && (s.onclick = Js)
                            }
                            s = i,
                            t.updateQueue = s,
                            null !== s && (t.flags |= 4)
                        } else {
                            l = 9 === i.nodeType ? i : i.ownerDocument,
                            "http://www.w3.org/1999/xhtml" === e && (e = re(n)),
                            "http://www.w3.org/1999/xhtml" === e ? "script" === n ? ((e = l.createElement("div")).innerHTML = "<script><\/script>",
                            e = e.removeChild(e.firstChild)) : "string" == typeof s.is ? e = l.createElement(n, {
                                is: s.is
                            }) : (e = l.createElement(n),
                            "select" === n && (l = e,
                            s.multiple ? l.multiple = !0 : s.size && (l.size = s.size))) : e = l.createElementNS(e, n),
                            e[mi] = t,
                            e[hi] = s,
                            Lr(e, t, !1, !1),
                            t.stateNode = e;
                            e: {
                                switch (l = _e(n, s),
                                n) {
                                case "dialog":
                                    Us("cancel", e),
                                    Us("close", e),
                                    i = s;
                                    break;
                                case "iframe":
                                case "object":
                                case "embed":
                                    Us("load", e),
                                    i = s;
                                    break;
                                case "video":
                                case "audio":
                                    for (i = 0; i < Rs.length; i++)
                                        Us(Rs[i], e);
                                    i = s;
                                    break;
                                case "source":
                                    Us("error", e),
                                    i = s;
                                    break;
                                case "img":
                                case "image":
                                case "link":
                                    Us("error", e),
                                    Us("load", e),
                                    i = s;
                                    break;
                                case "details":
                                    Us("toggle", e),
                                    i = s;
                                    break;
                                case "input":
                                    X(e, s),
                                    i = q(e, s),
                                    Us("invalid", e);
                                    break;
                                case "option":
                                default:
                                    i = s;
                                    break;
                                case "select":
                                    e._wrapperState = {
                                        wasMultiple: !!s.multiple
                                    },
                                    i = D({}, s, {
                                        value: void 0
                                    }),
                                    Us("invalid", e);
                                    break;
                                case "textarea":
                                    ie(e, s),
                                    i = se(e, s),
                                    Us("invalid", e)
                                }
                                for (o in ve(n, i),
                                c = i)
                                    if (c.hasOwnProperty(o)) {
                                        var u = c[o];
                                        "style" === o ? fe(e, u) : "dangerouslySetInnerHTML" === o ? null != (u = u ? u.__html : void 0) && de(e, u) : "children" === o ? "string" == typeof u ? ("textarea" !== n || "" !== u) && me(e, u) : "number" == typeof u && me(e, "" + u) : "suppressContentEditableWarning" !== o && "suppressHydrationWarning" !== o && "autoFocus" !== o && (r.hasOwnProperty(o) ? null != u && "onScroll" === o && Us("scroll", e) : null != u && _(e, o, u, l))
                                    }
                                switch (n) {
                                case "input":
                                    z(e),
                                    J(e, s, !1);
                                    break;
                                case "textarea":
                                    z(e),
                                    oe(e);
                                    break;
                                case "option":
                                    null != s.value && e.setAttribute("value", "" + K(s.value));
                                    break;
                                case "select":
                                    e.multiple = !!s.multiple,
                                    null != (o = s.value) ? ne(e, !!s.multiple, o, !1) : null != s.defaultValue && ne(e, !!s.multiple, s.defaultValue, !0);
                                    break;
                                default:
                                    "function" == typeof i.onClick && (e.onclick = Js)
                                }
                                switch (n) {
                                case "button":
                                case "input":
                                case "select":
                                case "textarea":
                                    s = !!s.autoFocus;
                                    break e;
                                case "img":
                                    s = !0;
                                    break e;
                                default:
                                    s = !1
                                }
                            }
                            s && (t.flags |= 4)
                        }
                        null !== t.ref && (t.flags |= 512,
                        t.flags |= 2097152)
                    }
                    return Yr(t),
                    null;
                case 6:
                    if (e && null != t.stateNode)
                        Rr(e, t, e.memoizedProps, s);
                    else {
                        if ("string" != typeof s && null === t.stateNode)
                            throw Error(a(166));
                        if (n = no(to.current),
                        no(Ja.current),
                        da(t)) {
                            if (s = t.stateNode,
                            n = t.memoizedProps,
                            s[mi] = t,
                            (o = s.nodeValue !== n) && null !== (e = na))
                                switch (e.tag) {
                                case 3:
                                    Zs(s.nodeValue, n, 0 != (1 & e.mode));
                                    break;
                                case 5:
                                    !0 !== e.memoizedProps.suppressHydrationWarning && Zs(s.nodeValue, n, 0 != (1 & e.mode))
                                }
                            o && (t.flags |= 4)
                        } else
                            (s = (9 === n.nodeType ? n : n.ownerDocument).createTextNode(s))[mi] = t,
                            t.stateNode = s
                    }
                    return Yr(t),
                    null;
                case 13:
                    if (yi(ro),
                    s = t.memoizedState,
                    null === e || null !== e.memoizedState && null !== e.memoizedState.dehydrated) {
                        if (ia && null !== sa && 0 != (1 & t.mode) && 0 == (128 & t.flags))
                            ma(),
                            ha(),
                            t.flags |= 98560,
                            o = !1;
                        else if (o = da(t),
                        null !== s && null !== s.dehydrated) {
                            if (null === e) {
                                if (!o)
                                    throw Error(a(318));
                                if (!(o = null !== (o = t.memoizedState) ? o.dehydrated : null))
                                    throw Error(a(317));
                                o[mi] = t
                            } else
                                ha(),
                                0 == (128 & t.flags) && (t.memoizedState = null),
                                t.flags |= 4;
                            Yr(t),
                            o = !1
                        } else
                            null !== aa && (rc(aa),
                            aa = null),
                            o = !0;
                        if (!o)
                            return 65536 & t.flags ? t : null
                    }
                    return 0 != (128 & t.flags) ? (t.lanes = n,
                    t) : ((s = null !== s) !== (null !== e && null !== e.memoizedState) && s && (t.child.flags |= 8192,
                    0 != (1 & t.mode) && (null === e || 0 != (1 & ro.current) ? 0 === Rl && (Rl = 3) : fc())),
                    null !== t.updateQueue && (t.flags |= 4),
                    Yr(t),
                    null);
                case 4:
                    return io(),
                    Ar(e, t),
                    null === e && Vs(t.stateNode.containerInfo),
                    Yr(t),
                    null;
                case 10:
                    return Ea(t.type._context),
                    Yr(t),
                    null;
                case 19:
                    if (yi(ro),
                    null === (o = t.memoizedState))
                        return Yr(t),
                        null;
                    if (s = 0 != (128 & t.flags),
                    null === (l = o.rendering))
                        if (s)
                            zr(o, !1);
                        else {
                            if (0 !== Rl || null !== e && 0 != (128 & e.flags))
                                for (e = t.child; null !== e; ) {
                                    if (null !== (l = lo(e))) {
                                        for (t.flags |= 128,
                                        zr(o, !1),
                                        null !== (s = l.updateQueue) && (t.updateQueue = s,
                                        t.flags |= 4),
                                        t.subtreeFlags = 0,
                                        s = n,
                                        n = t.child; null !== n; )
                                            e = s,
                                            (o = n).flags &= 14680066,
                                            null === (l = o.alternate) ? (o.childLanes = 0,
                                            o.lanes = e,
                                            o.child = null,
                                            o.subtreeFlags = 0,
                                            o.memoizedProps = null,
                                            o.memoizedState = null,
                                            o.updateQueue = null,
                                            o.dependencies = null,
                                            o.stateNode = null) : (o.childLanes = l.childLanes,
                                            o.lanes = l.lanes,
                                            o.child = l.child,
                                            o.subtreeFlags = 0,
                                            o.deletions = null,
                                            o.memoizedProps = l.memoizedProps,
                                            o.memoizedState = l.memoizedState,
                                            o.updateQueue = l.updateQueue,
                                            o.type = l.type,
                                            e = l.dependencies,
                                            o.dependencies = null === e ? null : {
                                                lanes: e.lanes,
                                                firstContext: e.firstContext
                                            }),
                                            n = n.sibling;
                                        return ji(ro, 1 & ro.current | 2),
                                        t.child
                                    }
                                    e = e.sibling
                                }
                            null !== o.tail && Qe() > Hl && (t.flags |= 128,
                            s = !0,
                            zr(o, !1),
                            t.lanes = 4194304)
                        }
                    else {
                        if (!s)
                            if (null !== (e = lo(l))) {
                                if (t.flags |= 128,
                                s = !0,
                                null !== (n = e.updateQueue) && (t.updateQueue = n,
                                t.flags |= 4),
                                zr(o, !0),
                                null === o.tail && "hidden" === o.tailMode && !l.alternate && !ia)
                                    return Yr(t),
                                    null
                            } else
                                2 * Qe() - o.renderingStartTime > Hl && 1073741824 !== n && (t.flags |= 128,
                                s = !0,
                                zr(o, !1),
                                t.lanes = 4194304);
                        o.isBackwards ? (l.sibling = t.child,
                        t.child = l) : (null !== (n = o.last) ? n.sibling = l : t.child = l,
                        o.last = l)
                    }
                    return null !== o.tail ? (t = o.tail,
                    o.rendering = t,
                    o.tail = t.sibling,
                    o.renderingStartTime = Qe(),
                    t.sibling = null,
                    n = ro.current,
                    ji(ro, s ? 1 & n | 2 : 1 & n),
                    t) : (Yr(t),
                    null);
                case 22:
                case 23:
                    return mc(),
                    s = null !== t.memoizedState,
                    null !== e && null !== e.memoizedState !== s && (t.flags |= 8192),
                    s && 0 != (1 & t.mode) ? 0 != (1073741824 & Al) && (Yr(t),
                    6 & t.subtreeFlags && (t.flags |= 8192)) : Yr(t),
                    null;
                case 24:
                case 25:
                    return null
                }
                throw Error(a(156, t.tag))
            }
            function qr(e, t) {
                switch (ta(t),
                t.tag) {
                case 1:
                    return Li(t.type) && Ai(),
                    65536 & (e = t.flags) ? (t.flags = -65537 & e | 128,
                    t) : null;
                case 3:
                    return io(),
                    yi(wi),
                    yi(Ni),
                    uo(),
                    0 != (65536 & (e = t.flags)) && 0 == (128 & e) ? (t.flags = -65537 & e | 128,
                    t) : null;
                case 5:
                    return oo(t),
                    null;
                case 13:
                    if (yi(ro),
                    null !== (e = t.memoizedState) && null !== e.dehydrated) {
                        if (null === t.alternate)
                            throw Error(a(340));
                        ha()
                    }
                    return 65536 & (e = t.flags) ? (t.flags = -65537 & e | 128,
                    t) : null;
                case 19:
                    return yi(ro),
                    null;
                case 4:
                    return io(),
                    null;
                case 10:
                    return Ea(t.type._context),
                    null;
                case 22:
                case 23:
                    return mc(),
                    null;
                default:
                    return null
                }
            }
            Lr = function(e, t) {
                for (var n = t.child; null !== n; ) {
                    if (5 === n.tag || 6 === n.tag)
                        e.appendChild(n.stateNode);
                    else if (4 !== n.tag && null !== n.child) {
                        n.child.return = n,
                        n = n.child;
                        continue
                    }
                    if (n === t)
                        break;
                    for (; null === n.sibling; ) {
                        if (null === n.return || n.return === t)
                            return;
                        n = n.return
                    }
                    n.sibling.return = n.return,
                    n = n.sibling
                }
            }
            ,
            Ar = function() {}
            ,
            Mr = function(e, t, n, s) {
                var i = e.memoizedProps;
                if (i !== s) {
                    e = t.stateNode,
                    no(Ja.current);
                    var a, o = null;
                    switch (n) {
                    case "input":
                        i = q(e, i),
                        s = q(e, s),
                        o = [];
                        break;
                    case "select":
                        i = D({}, i, {
                            value: void 0
                        }),
                        s = D({}, s, {
                            value: void 0
                        }),
                        o = [];
                        break;
                    case "textarea":
                        i = se(e, i),
                        s = se(e, s),
                        o = [];
                        break;
                    default:
                        "function" != typeof i.onClick && "function" == typeof s.onClick && (e.onclick = Js)
                    }
                    for (u in ve(n, s),
                    n = null,
                    i)
                        if (!s.hasOwnProperty(u) && i.hasOwnProperty(u) && null != i[u])
                            if ("style" === u) {
                                var l = i[u];
                                for (a in l)
                                    l.hasOwnProperty(a) && (n || (n = {}),
                                    n[a] = "")
                            } else
                                "dangerouslySetInnerHTML" !== u && "children" !== u && "suppressContentEditableWarning" !== u && "suppressHydrationWarning" !== u && "autoFocus" !== u && (r.hasOwnProperty(u) ? o || (o = []) : (o = o || []).push(u, null));
                    for (u in s) {
                        var c = s[u];
                        if (l = null != i ? i[u] : void 0,
                        s.hasOwnProperty(u) && c !== l && (null != c || null != l))
                            if ("style" === u)
                                if (l) {
                                    for (a in l)
                                        !l.hasOwnProperty(a) || c && c.hasOwnProperty(a) || (n || (n = {}),
                                        n[a] = "");
                                    for (a in c)
                                        c.hasOwnProperty(a) && l[a] !== c[a] && (n || (n = {}),
                                        n[a] = c[a])
                                } else
                                    n || (o || (o = []),
                                    o.push(u, n)),
                                    n = c;
                            else
                                "dangerouslySetInnerHTML" === u ? (c = c ? c.__html : void 0,
                                l = l ? l.__html : void 0,
                                null != c && l !== c && (o = o || []).push(u, c)) : "children" === u ? "string" != typeof c && "number" != typeof c || (o = o || []).push(u, "" + c) : "suppressContentEditableWarning" !== u && "suppressHydrationWarning" !== u && (r.hasOwnProperty(u) ? (null != c && "onScroll" === u && Us("scroll", e),
                                o || l === c || (o = [])) : (o = o || []).push(u, c))
                    }
                    n && (o = o || []).push("style", n);
                    var u = o;
                    (t.updateQueue = u) && (t.flags |= 4)
                }
            }
            ,
            Rr = function(e, t, n, s) {
                n !== s && (t.flags |= 4)
            }
            ;
            var Xr = !1
              , Qr = !1
              , Zr = "function" == typeof WeakSet ? WeakSet : Set
              , Jr = null;
            function el(e, t) {
                var n = e.ref;
                if (null !== n)
                    if ("function" == typeof n)
                        try {
                            n(null)
                        } catch (n) {
                            yc(e, t, n)
                        }
                    else
                        n.current = null
            }
            function tl(e, t, n) {
                try {
                    n()
                } catch (n) {
                    yc(e, t, n)
                }
            }
            var nl = !1;
            function sl(e, t, n) {
                var s = t.updateQueue;
                if (null !== (s = null !== s ? s.lastEffect : null)) {
                    var i = s = s.next;
                    do {
                        if ((i.tag & e) === e) {
                            var a = i.destroy;
                            i.destroy = void 0,
                            void 0 !== a && tl(t, n, a)
                        }
                        i = i.next
                    } while (i !== s)
                }
            }
            function il(e, t) {
                if (null !== (t = null !== (t = t.updateQueue) ? t.lastEffect : null)) {
                    var n = t = t.next;
                    do {
                        if ((n.tag & e) === e) {
                            var s = n.create;
                            n.destroy = s()
                        }
                        n = n.next
                    } while (n !== t)
                }
            }
            function al(e) {
                var t = e.ref;
                if (null !== t) {
                    var n = e.stateNode;
                    e.tag,
                    e = n,
                    "function" == typeof t ? t(e) : t.current = e
                }
            }
            function ol(e) {
                var t = e.alternate;
                null !== t && (e.alternate = null,
                ol(t)),
                e.child = null,
                e.deletions = null,
                e.sibling = null,
                5 === e.tag && (null !== (t = e.stateNode) && (delete t[mi],
                delete t[hi],
                delete t[pi],
                delete t[fi],
                delete t[xi])),
                e.stateNode = null,
                e.return = null,
                e.dependencies = null,
                e.memoizedProps = null,
                e.memoizedState = null,
                e.pendingProps = null,
                e.stateNode = null,
                e.updateQueue = null
            }
            function rl(e) {
                return 5 === e.tag || 3 === e.tag || 4 === e.tag
            }
            function ll(e) {
                e: for (; ; ) {
                    for (; null === e.sibling; ) {
                        if (null === e.return || rl(e.return))
                            return null;
                        e = e.return
                    }
                    for (e.sibling.return = e.return,
                    e = e.sibling; 5 !== e.tag && 6 !== e.tag && 18 !== e.tag; ) {
                        if (2 & e.flags)
                            continue e;
                        if (null === e.child || 4 === e.tag)
                            continue e;
                        e.child.return = e,
                        e = e.child
                    }
                    if (!(2 & e.flags))
                        return e.stateNode
                }
            }
            function cl(e, t, n) {
                var s = e.tag;
                if (5 === s || 6 === s)
                    e = e.stateNode,
                    t ? 8 === n.nodeType ? n.parentNode.insertBefore(e, t) : n.insertBefore(e, t) : (8 === n.nodeType ? (t = n.parentNode).insertBefore(e, n) : (t = n).appendChild(e),
                    null != (n = n._reactRootContainer) || null !== t.onclick || (t.onclick = Js));
                else if (4 !== s && null !== (e = e.child))
                    for (cl(e, t, n),
                    e = e.sibling; null !== e; )
                        cl(e, t, n),
                        e = e.sibling
            }
            function ul(e, t, n) {
                var s = e.tag;
                if (5 === s || 6 === s)
                    e = e.stateNode,
                    t ? n.insertBefore(e, t) : n.appendChild(e);
                else if (4 !== s && null !== (e = e.child))
                    for (ul(e, t, n),
                    e = e.sibling; null !== e; )
                        ul(e, t, n),
                        e = e.sibling
            }
            var dl = null
              , ml = !1;
            function hl(e, t, n) {
                for (n = n.child; null !== n; )
                    gl(e, t, n),
                    n = n.sibling
            }
            function gl(e, t, n) {
                if (at && "function" == typeof at.onCommitFiberUnmount)
                    try {
                        at.onCommitFiberUnmount(it, n)
                    } catch (e) {}
                switch (n.tag) {
                case 5:
                    Qr || el(n, t);
                case 6:
                    var s = dl
                      , i = ml;
                    dl = null,
                    hl(e, t, n),
                    ml = i,
                    null !== (dl = s) && (ml ? (e = dl,
                    n = n.stateNode,
                    8 === e.nodeType ? e.parentNode.removeChild(n) : e.removeChild(n)) : dl.removeChild(n.stateNode));
                    break;
                case 18:
                    null !== dl && (ml ? (e = dl,
                    n = n.stateNode,
                    8 === e.nodeType ? li(e.parentNode, n) : 1 === e.nodeType && li(e, n),
                    Vt(e)) : li(dl, n.stateNode));
                    break;
                case 4:
                    s = dl,
                    i = ml,
                    dl = n.stateNode.containerInfo,
                    ml = !0,
                    hl(e, t, n),
                    dl = s,
                    ml = i;
                    break;
                case 0:
                case 11:
                case 14:
                case 15:
                    if (!Qr && (null !== (s = n.updateQueue) && null !== (s = s.lastEffect))) {
                        i = s = s.next;
                        do {
                            var a = i
                              , o = a.destroy;
                            a = a.tag,
                            void 0 !== o && (0 != (2 & a) || 0 != (4 & a)) && tl(n, t, o),
                            i = i.next
                        } while (i !== s)
                    }
                    hl(e, t, n);
                    break;
                case 1:
                    if (!Qr && (el(n, t),
                    "function" == typeof (s = n.stateNode).componentWillUnmount))
                        try {
                            s.props = n.memoizedProps,
                            s.state = n.memoizedState,
                            s.componentWillUnmount()
                        } catch (e) {
                            yc(n, t, e)
                        }
                    hl(e, t, n);
                    break;
                case 21:
                    hl(e, t, n);
                    break;
                case 22:
                    1 & n.mode ? (Qr = (s = Qr) || null !== n.memoizedState,
                    hl(e, t, n),
                    Qr = s) : hl(e, t, n);
                    break;
                default:
                    hl(e, t, n)
                }
            }
            function pl(e) {
                var t = e.updateQueue;
                if (null !== t) {
                    e.updateQueue = null;
                    var n = e.stateNode;
                    null === n && (n = e.stateNode = new Zr),
                    t.forEach((function(t) {
                        var s = wc.bind(null, e, t);
                        n.has(t) || (n.add(t),
                        t.then(s, s))
                    }
                    ))
                }
            }
            function fl(e, t) {
                var n = t.deletions;
                if (null !== n)
                    for (var s = 0; s < n.length; s++) {
                        var i = n[s];
                        try {
                            var o = e
                              , r = t
                              , l = r;
                            e: for (; null !== l; ) {
                                switch (l.tag) {
                                case 5:
                                    dl = l.stateNode,
                                    ml = !1;
                                    break e;
                                case 3:
                                case 4:
                                    dl = l.stateNode.containerInfo,
                                    ml = !0;
                                    break e
                                }
                                l = l.return
                            }
                            if (null === dl)
                                throw Error(a(160));
                            gl(o, r, i),
                            dl = null,
                            ml = !1;
                            var c = i.alternate;
                            null !== c && (c.return = null),
                            i.return = null
                        } catch (e) {
                            yc(i, t, e)
                        }
                    }
                if (12854 & t.subtreeFlags)
                    for (t = t.child; null !== t; )
                        xl(t, e),
                        t = t.sibling
            }
            function xl(e, t) {
                var n = e.alternate
                  , s = e.flags;
                switch (e.tag) {
                case 0:
                case 11:
                case 14:
                case 15:
                    if (fl(t, e),
                    vl(e),
                    4 & s) {
                        try {
                            sl(3, e, e.return),
                            il(3, e)
                        } catch (t) {
                            yc(e, e.return, t)
                        }
                        try {
                            sl(5, e, e.return)
                        } catch (t) {
                            yc(e, e.return, t)
                        }
                    }
                    break;
                case 1:
                    fl(t, e),
                    vl(e),
                    512 & s && null !== n && el(n, n.return);
                    break;
                case 5:
                    if (fl(t, e),
                    vl(e),
                    512 & s && null !== n && el(n, n.return),
                    32 & e.flags) {
                        var i = e.stateNode;
                        try {
                            me(i, "")
                        } catch (t) {
                            yc(e, e.return, t)
                        }
                    }
                    if (4 & s && null != (i = e.stateNode)) {
                        var o = e.memoizedProps
                          , r = null !== n ? n.memoizedProps : o
                          , l = e.type
                          , c = e.updateQueue;
                        if (e.updateQueue = null,
                        null !== c)
                            try {
                                "input" === l && "radio" === o.type && null != o.name && Q(i, o),
                                _e(l, r);
                                var u = _e(l, o);
                                for (r = 0; r < c.length; r += 2) {
                                    var d = c[r]
                                      , m = c[r + 1];
                                    "style" === d ? fe(i, m) : "dangerouslySetInnerHTML" === d ? de(i, m) : "children" === d ? me(i, m) : _(i, d, m, u)
                                }
                                switch (l) {
                                case "input":
                                    Z(i, o);
                                    break;
                                case "textarea":
                                    ae(i, o);
                                    break;
                                case "select":
                                    var h = i._wrapperState.wasMultiple;
                                    i._wrapperState.wasMultiple = !!o.multiple;
                                    var g = o.value;
                                    null != g ? ne(i, !!o.multiple, g, !1) : h !== !!o.multiple && (null != o.defaultValue ? ne(i, !!o.multiple, o.defaultValue, !0) : ne(i, !!o.multiple, o.multiple ? [] : "", !1))
                                }
                                i[hi] = o
                            } catch (t) {
                                yc(e, e.return, t)
                            }
                    }
                    break;
                case 6:
                    if (fl(t, e),
                    vl(e),
                    4 & s) {
                        if (null === e.stateNode)
                            throw Error(a(162));
                        i = e.stateNode,
                        o = e.memoizedProps;
                        try {
                            i.nodeValue = o
                        } catch (t) {
                            yc(e, e.return, t)
                        }
                    }
                    break;
                case 3:
                    if (fl(t, e),
                    vl(e),
                    4 & s && null !== n && n.memoizedState.isDehydrated)
                        try {
                            Vt(t.containerInfo)
                        } catch (t) {
                            yc(e, e.return, t)
                        }
                    break;
                case 4:
                default:
                    fl(t, e),
                    vl(e);
                    break;
                case 13:
                    fl(t, e),
                    vl(e),
                    8192 & (i = e.child).flags && (o = null !== i.memoizedState,
                    i.stateNode.isHidden = o,
                    !o || null !== i.alternate && null !== i.alternate.memoizedState || (Vl = Qe())),
                    4 & s && pl(e);
                    break;
                case 22:
                    if (d = null !== n && null !== n.memoizedState,
                    1 & e.mode ? (Qr = (u = Qr) || d,
                    fl(t, e),
                    Qr = u) : fl(t, e),
                    vl(e),
                    8192 & s) {
                        if (u = null !== e.memoizedState,
                        (e.stateNode.isHidden = u) && !d && 0 != (1 & e.mode))
                            for (Jr = e,
                            d = e.child; null !== d; ) {
                                for (m = Jr = d; null !== Jr; ) {
                                    switch (g = (h = Jr).child,
                                    h.tag) {
                                    case 0:
                                    case 11:
                                    case 14:
                                    case 15:
                                        sl(4, h, h.return);
                                        break;
                                    case 1:
                                        el(h, h.return);
                                        var p = h.stateNode;
                                        if ("function" == typeof p.componentWillUnmount) {
                                            s = h,
                                            n = h.return;
                                            try {
                                                t = s,
                                                p.props = t.memoizedProps,
                                                p.state = t.memoizedState,
                                                p.componentWillUnmount()
                                            } catch (e) {
                                                yc(s, n, e)
                                            }
                                        }
                                        break;
                                    case 5:
                                        el(h, h.return);
                                        break;
                                    case 22:
                                        if (null !== h.memoizedState) {
                                            El(m);
                                            continue
                                        }
                                    }
                                    null !== g ? (g.return = h,
                                    Jr = g) : El(m)
                                }
                                d = d.sibling
                            }
                        e: for (d = null,
                        m = e; ; ) {
                            if (5 === m.tag) {
                                if (null === d) {
                                    d = m;
                                    try {
                                        i = m.stateNode,
                                        u ? "function" == typeof (o = i.style).setProperty ? o.setProperty("display", "none", "important") : o.display = "none" : (l = m.stateNode,
                                        r = null != (c = m.memoizedProps.style) && c.hasOwnProperty("display") ? c.display : null,
                                        l.style.display = pe("display", r))
                                    } catch (t) {
                                        yc(e, e.return, t)
                                    }
                                }
                            } else if (6 === m.tag) {
                                if (null === d)
                                    try {
                                        m.stateNode.nodeValue = u ? "" : m.memoizedProps
                                    } catch (t) {
                                        yc(e, e.return, t)
                                    }
                            } else if ((22 !== m.tag && 23 !== m.tag || null === m.memoizedState || m === e) && null !== m.child) {
                                m.child.return = m,
                                m = m.child;
                                continue
                            }
                            if (m === e)
                                break e;
                            for (; null === m.sibling; ) {
                                if (null === m.return || m.return === e)
                                    break e;
                                d === m && (d = null),
                                m = m.return
                            }
                            d === m && (d = null),
                            m.sibling.return = m.return,
                            m = m.sibling
                        }
                    }
                    break;
                case 19:
                    fl(t, e),
                    vl(e),
                    4 & s && pl(e);
                case 21:
                }
            }
            function vl(e) {
                var t = e.flags;
                if (2 & t) {
                    try {
                        e: {
                            for (var n = e.return; null !== n; ) {
                                if (rl(n)) {
                                    var s = n;
                                    break e
                                }
                                n = n.return
                            }
                            throw Error(a(160))
                        }
                        switch (s.tag) {
                        case 5:
                            var i = s.stateNode;
                            32 & s.flags && (me(i, ""),
                            s.flags &= -33),
                            ul(e, ll(e), i);
                            break;
                        case 3:
                        case 4:
                            var o = s.stateNode.containerInfo;
                            cl(e, ll(e), o);
                            break;
                        default:
                            throw Error(a(161))
                        }
                    } catch (t) {
                        yc(e, e.return, t)
                    }
                    e.flags &= -3
                }
                4096 & t && (e.flags &= -4097)
            }
            function _l(e, t, n) {
                Jr = e,
                bl(e, t, n)
            }
            function bl(e, t, n) {
                for (var s = 0 != (1 & e.mode); null !== Jr; ) {
                    var i = Jr
                      , a = i.child;
                    if (22 === i.tag && s) {
                        var o = null !== i.memoizedState || Xr;
                        if (!o) {
                            var r = i.alternate
                              , l = null !== r && null !== r.memoizedState || Qr;
                            r = Xr;
                            var c = Qr;
                            if (Xr = o,
                            (Qr = l) && !c)
                                for (Jr = i; null !== Jr; )
                                    l = (o = Jr).child,
                                    22 === o.tag && null !== o.memoizedState ? Il(i) : null !== l ? (l.return = o,
                                    Jr = l) : Il(i);
                            for (; null !== a; )
                                Jr = a,
                                bl(a, t, n),
                                a = a.sibling;
                            Jr = i,
                            Xr = r,
                            Qr = c
                        }
                        Tl(e)
                    } else
                        0 != (8772 & i.subtreeFlags) && null !== a ? (a.return = i,
                        Jr = a) : Tl(e)
                }
            }
            function Tl(e) {
                for (; null !== Jr; ) {
                    var t = Jr;
                    if (0 != (8772 & t.flags)) {
                        var n = t.alternate;
                        try {
                            if (0 != (8772 & t.flags))
                                switch (t.tag) {
                                case 0:
                                case 11:
                                case 15:
                                    Qr || il(5, t);
                                    break;
                                case 1:
                                    var s = t.stateNode;
                                    if (4 & t.flags && !Qr)
                                        if (null === n)
                                            s.componentDidMount();
                                        else {
                                            var i = t.elementType === t.type ? n.memoizedProps : fa(t.type, n.memoizedProps);
                                            s.componentDidUpdate(i, n.memoizedState, s.__reactInternalSnapshotBeforeUpdate)
                                        }
                                    var o = t.updateQueue;
                                    null !== o && Fa(t, o, s);
                                    break;
                                case 3:
                                    var r = t.updateQueue;
                                    if (null !== r) {
                                        if (n = null,
                                        null !== t.child)
                                            switch (t.child.tag) {
                                            case 5:
                                            case 1:
                                                n = t.child.stateNode
                                            }
                                        Fa(t, r, n)
                                    }
                                    break;
                                case 5:
                                    var l = t.stateNode;
                                    if (null === n && 4 & t.flags) {
                                        n = l;
                                        var c = t.memoizedProps;
                                        switch (t.type) {
                                        case "button":
                                        case "input":
                                        case "select":
                                        case "textarea":
                                            c.autoFocus && n.focus();
                                            break;
                                        case "img":
                                            c.src && (n.src = c.src)
                                        }
                                    }
                                    break;
                                case 6:
                                case 4:
                                case 12:
                                case 19:
                                case 17:
                                case 21:
                                case 22:
                                case 23:
                                case 25:
                                    break;
                                case 13:
                                    if (null === t.memoizedState) {
                                        var u = t.alternate;
                                        if (null !== u) {
                                            var d = u.memoizedState;
                                            if (null !== d) {
                                                var m = d.dehydrated;
                                                null !== m && Vt(m)
                                            }
                                        }
                                    }
                                    break;
                                default:
                                    throw Error(a(163))
                                }
                            Qr || 512 & t.flags && al(t)
                        } catch (e) {
                            yc(t, t.return, e)
                        }
                    }
                    if (t === e) {
                        Jr = null;
                        break
                    }
                    if (null !== (n = t.sibling)) {
                        n.return = t.return,
                        Jr = n;
                        break
                    }
                    Jr = t.return
                }
            }
            function El(e) {
                for (; null !== Jr; ) {
                    var t = Jr;
                    if (t === e) {
                        Jr = null;
                        break
                    }
                    var n = t.sibling;
                    if (null !== n) {
                        n.return = t.return,
                        Jr = n;
                        break
                    }
                    Jr = t.return
                }
            }
            function Il(e) {
                for (; null !== Jr; ) {
                    var t = Jr;
                    try {
                        switch (t.tag) {
                        case 0:
                        case 11:
                        case 15:
                            var n = t.return;
                            try {
                                il(4, t)
                            } catch (e) {
                                yc(t, n, e)
                            }
                            break;
                        case 1:
                            var s = t.stateNode;
                            if ("function" == typeof s.componentDidMount) {
                                var i = t.return;
                                try {
                                    s.componentDidMount()
                                } catch (e) {
                                    yc(t, i, e)
                                }
                            }
                            var a = t.return;
                            try {
                                al(t)
                            } catch (e) {
                                yc(t, a, e)
                            }
                            break;
                        case 5:
                            var o = t.return;
                            try {
                                al(t)
                            } catch (e) {
                                yc(t, o, e)
                            }
                        }
                    } catch (e) {
                        yc(t, t.return, e)
                    }
                    if (t === e) {
                        Jr = null;
                        break
                    }
                    var r = t.sibling;
                    if (null !== r) {
                        r.return = t.return,
                        Jr = r;
                        break
                    }
                    Jr = t.return
                }
            }
            var Sl, yl = Math.ceil, jl = b.ReactCurrentDispatcher, Cl = b.ReactCurrentOwner, Nl = b.ReactCurrentBatchConfig, wl = 0, Ol = null, Pl = null, Ll = 0, Al = 0, Ml = Si(0), Rl = 0, kl = null, Dl = 0, Fl = 0, Ul = 0, Bl = null, Gl = null, Vl = 0, Hl = 1 / 0, Kl = null, Wl = !1, zl = null, Yl = null, $l = !1, ql = null, Xl = 0, Ql = 0, Zl = null, Jl = -1, ec = 0;
            function tc() {
                return 0 != (6 & wl) ? Qe() : -1 !== Jl ? Jl : Jl = Qe()
            }
            function nc(e) {
                return 0 == (1 & e.mode) ? 1 : 0 != (2 & wl) && 0 !== Ll ? Ll & -Ll : null !== pa.transition ? (0 === ec && (ec = pt()),
                ec) : 0 !== (e = _t) ? e : e = void 0 === (e = window.event) ? 16 : Xt(e.type)
            }
            function sc(e, t, n, s) {
                if (50 < Ql)
                    throw Ql = 0,
                    Zl = null,
                    Error(a(185));
                xt(e, n, s),
                0 != (2 & wl) && e === Ol || (e === Ol && (0 == (2 & wl) && (Fl |= n),
                4 === Rl && lc(e, Ll)),
                ic(e, s),
                1 === n && 0 === wl && 0 == (1 & t.mode) && (Hl = Qe() + 500,
                Ui && Vi()))
            }
            function ic(e, t) {
                var n = e.callbackNode;
                !function(e, t) {
                    for (var n = e.suspendedLanes, s = e.pingedLanes, i = e.expirationTimes, a = e.pendingLanes; 0 < a; ) {
                        var o = 31 - ot(a)
                          , r = 1 << o
                          , l = i[o];
                        -1 === l ? 0 != (r & n) && 0 == (r & s) || (i[o] = ht(r, t)) : l <= t && (e.expiredLanes |= r),
                        a &= ~r
                    }
                }(e, t);
                var s = mt(e, e === Ol ? Ll : 0);
                if (0 === s)
                    null !== n && $e(n),
                    e.callbackNode = null,
                    e.callbackPriority = 0;
                else if (t = s & -s,
                e.callbackPriority !== t) {
                    if (null != n && $e(n),
                    1 === t)
                        0 === e.tag ? function(e) {
                            Ui = !0,
                            Gi(e)
                        }(cc.bind(null, e)) : Gi(cc.bind(null, e)),
                        oi((function() {
                            0 == (6 & wl) && Vi()
                        }
                        )),
                        n = null;
                    else {
                        switch (bt(s)) {
                        case 1:
                            n = Je;
                            break;
                        case 4:
                            n = et;
                            break;
                        case 16:
                        default:
                            n = tt;
                            break;
                        case 536870912:
                            n = st
                        }
                        n = Oc(n, ac.bind(null, e))
                    }
                    e.callbackPriority = t,
                    e.callbackNode = n
                }
            }
            function ac(e, t) {
                if (Jl = -1,
                ec = 0,
                0 != (6 & wl))
                    throw Error(a(327));
                var n = e.callbackNode;
                if (Ic() && e.callbackNode !== n)
                    return null;
                var s = mt(e, e === Ol ? Ll : 0);
                if (0 === s)
                    return null;
                if (0 != (30 & s) || 0 != (s & e.expiredLanes) || t)
                    t = xc(e, s);
                else {
                    t = s;
                    var i = wl;
                    wl |= 2;
                    var o = pc();
                    for (Ol === e && Ll === t || (Kl = null,
                    Hl = Qe() + 500,
                    hc(e, t)); ; )
                        try {
                            _c();
                            break
                        } catch (t) {
                            gc(e, t)
                        }
                    Ta(),
                    jl.current = o,
                    wl = i,
                    null !== Pl ? t = 0 : (Ol = null,
                    Ll = 0,
                    t = Rl)
                }
                if (0 !== t) {
                    if (2 === t && (0 !== (i = gt(e)) && (s = i,
                    t = oc(e, i))),
                    1 === t)
                        throw n = kl,
                        hc(e, 0),
                        lc(e, s),
                        ic(e, Qe()),
                        n;
                    if (6 === t)
                        lc(e, s);
                    else {
                        if (i = e.current.alternate,
                        0 == (30 & s) && !function(e) {
                            for (var t = e; ; ) {
                                if (16384 & t.flags) {
                                    var n = t.updateQueue;
                                    if (null !== n && null !== (n = n.stores))
                                        for (var s = 0; s < n.length; s++) {
                                            var i = n[s]
                                              , a = i.getSnapshot;
                                            i = i.value;
                                            try {
                                                if (!rs(a(), i))
                                                    return !1
                                            } catch (e) {
                                                return !1
                                            }
                                        }
                                }
                                if (n = t.child,
                                16384 & t.subtreeFlags && null !== n)
                                    n.return = t,
                                    t = n;
                                else {
                                    if (t === e)
                                        break;
                                    for (; null === t.sibling; ) {
                                        if (null === t.return || t.return === e)
                                            return !0;
                                        t = t.return
                                    }
                                    t.sibling.return = t.return,
                                    t = t.sibling
                                }
                            }
                            return !0
                        }(i) && (2 === (t = xc(e, s)) && (0 !== (o = gt(e)) && (s = o,
                        t = oc(e, o))),
                        1 === t))
                            throw n = kl,
                            hc(e, 0),
                            lc(e, s),
                            ic(e, Qe()),
                            n;
                        switch (e.finishedWork = i,
                        e.finishedLanes = s,
                        t) {
                        case 0:
                        case 1:
                            throw Error(a(345));
                        case 2:
                        case 5:
                            Ec(e, Gl, Kl);
                            break;
                        case 3:
                            if (lc(e, s),
                            (130023424 & s) === s && 10 < (t = Vl + 500 - Qe())) {
                                if (0 !== mt(e, 0))
                                    break;
                                if (((i = e.suspendedLanes) & s) !== s) {
                                    tc(),
                                    e.pingedLanes |= e.suspendedLanes & i;
                                    break
                                }
                                e.timeoutHandle = si(Ec.bind(null, e, Gl, Kl), t);
                                break
                            }
                            Ec(e, Gl, Kl);
                            break;
                        case 4:
                            if (lc(e, s),
                            (4194240 & s) === s)
                                break;
                            for (t = e.eventTimes,
                            i = -1; 0 < s; ) {
                                var r = 31 - ot(s);
                                o = 1 << r,
                                (r = t[r]) > i && (i = r),
                                s &= ~o
                            }
                            if (s = i,
                            10 < (s = (120 > (s = Qe() - s) ? 120 : 480 > s ? 480 : 1080 > s ? 1080 : 1920 > s ? 1920 : 3e3 > s ? 3e3 : 4320 > s ? 4320 : 1960 * yl(s / 1960)) - s)) {
                                e.timeoutHandle = si(Ec.bind(null, e, Gl, Kl), s);
                                break
                            }
                            Ec(e, Gl, Kl);
                            break;
                        default:
                            throw Error(a(329))
                        }
                    }
                }
                return ic(e, Qe()),
                e.callbackNode === n ? ac.bind(null, e) : null
            }
            function oc(e, t) {
                var n = Bl;
                return e.current.memoizedState.isDehydrated && (hc(e, t).flags |= 256),
                2 !== (e = xc(e, t)) && (t = Gl,
                Gl = n,
                null !== t && rc(t)),
                e
            }
            function rc(e) {
                null === Gl ? Gl = e : Gl.push.apply(Gl, e)
            }
            function lc(e, t) {
                for (t &= ~Ul,
                t &= ~Fl,
                e.suspendedLanes |= t,
                e.pingedLanes &= ~t,
                e = e.expirationTimes; 0 < t; ) {
                    var n = 31 - ot(t)
                      , s = 1 << n;
                    e[n] = -1,
                    t &= ~s
                }
            }
            function cc(e) {
                if (0 != (6 & wl))
                    throw Error(a(327));
                Ic();
                var t = mt(e, 0);
                if (0 == (1 & t))
                    return ic(e, Qe()),
                    null;
                var n = xc(e, t);
                if (0 !== e.tag && 2 === n) {
                    var s = gt(e);
                    0 !== s && (t = s,
                    n = oc(e, s))
                }
                if (1 === n)
                    throw n = kl,
                    hc(e, 0),
                    lc(e, t),
                    ic(e, Qe()),
                    n;
                if (6 === n)
                    throw Error(a(345));
                return e.finishedWork = e.current.alternate,
                e.finishedLanes = t,
                Ec(e, Gl, Kl),
                ic(e, Qe()),
                null
            }
            function uc(e, t) {
                var n = wl;
                wl |= 1;
                try {
                    return e(t)
                } finally {
                    0 === (wl = n) && (Hl = Qe() + 500,
                    Ui && Vi())
                }
            }
            function dc(e) {
                null !== ql && 0 === ql.tag && 0 == (6 & wl) && Ic();
                var t = wl;
                wl |= 1;
                var n = Nl.transition
                  , s = _t;
                try {
                    if (Nl.transition = null,
                    _t = 1,
                    e)
                        return e()
                } finally {
                    _t = s,
                    Nl.transition = n,
                    0 == (6 & (wl = t)) && Vi()
                }
            }
            function mc() {
                Al = Ml.current,
                yi(Ml)
            }
            function hc(e, t) {
                e.finishedWork = null,
                e.finishedLanes = 0;
                var n = e.timeoutHandle;
                if (-1 !== n && (e.timeoutHandle = -1,
                ii(n)),
                null !== Pl)
                    for (n = Pl.return; null !== n; ) {
                        var s = n;
                        switch (ta(s),
                        s.tag) {
                        case 1:
                            null != (s = s.type.childContextTypes) && Ai();
                            break;
                        case 3:
                            io(),
                            yi(wi),
                            yi(Ni),
                            uo();
                            break;
                        case 5:
                            oo(s);
                            break;
                        case 4:
                            io();
                            break;
                        case 13:
                        case 19:
                            yi(ro);
                            break;
                        case 10:
                            Ea(s.type._context);
                            break;
                        case 22:
                        case 23:
                            mc()
                        }
                        n = n.return
                    }
                if (Ol = e,
                Pl = e = Mc(e.current, null),
                Ll = Al = t,
                Rl = 0,
                kl = null,
                Ul = Fl = Dl = 0,
                Gl = Bl = null,
                null !== ja) {
                    for (t = 0; t < ja.length; t++)
                        if (null !== (s = (n = ja[t]).interleaved)) {
                            n.interleaved = null;
                            var i = s.next
                              , a = n.pending;
                            if (null !== a) {
                                var o = a.next;
                                a.next = i,
                                s.next = o
                            }
                            n.pending = s
                        }
                    ja = null
                }
                return e
            }
            function gc(e, t) {
                for (; ; ) {
                    var n = Pl;
                    try {
                        if (Ta(),
                        mo.current = or,
                        vo) {
                            for (var s = po.memoizedState; null !== s; ) {
                                var i = s.queue;
                                null !== i && (i.pending = null),
                                s = s.next
                            }
                            vo = !1
                        }
                        if (go = 0,
                        xo = fo = po = null,
                        _o = !1,
                        bo = 0,
                        Cl.current = null,
                        null === n || null === n.return) {
                            Rl = 1,
                            kl = t,
                            Pl = null;
                            break
                        }
                        e: {
                            var o = e
                              , r = n.return
                              , l = n
                              , c = t;
                            if (t = Ll,
                            l.flags |= 32768,
                            null !== c && "object" == typeof c && "function" == typeof c.then) {
                                var u = c
                                  , d = l
                                  , m = d.tag;
                                if (0 == (1 & d.mode) && (0 === m || 11 === m || 15 === m)) {
                                    var h = d.alternate;
                                    h ? (d.updateQueue = h.updateQueue,
                                    d.memoizedState = h.memoizedState,
                                    d.lanes = h.lanes) : (d.updateQueue = null,
                                    d.memoizedState = null)
                                }
                                var g = xr(r);
                                if (null !== g) {
                                    g.flags &= -257,
                                    vr(g, r, l, 0, t),
                                    1 & g.mode && fr(o, u, t),
                                    c = u;
                                    var p = (t = g).updateQueue;
                                    if (null === p) {
                                        var f = new Set;
                                        f.add(c),
                                        t.updateQueue = f
                                    } else
                                        p.add(c);
                                    break e
                                }
                                if (0 == (1 & t)) {
                                    fr(o, u, t),
                                    fc();
                                    break e
                                }
                                c = Error(a(426))
                            } else if (ia && 1 & l.mode) {
                                var x = xr(r);
                                if (null !== x) {
                                    0 == (65536 & x.flags) && (x.flags |= 256),
                                    vr(x, r, l, 0, t),
                                    ga(ur(c, l));
                                    break e
                                }
                            }
                            o = c = ur(c, l),
                            4 !== Rl && (Rl = 2),
                            null === Bl ? Bl = [o] : Bl.push(o),
                            o = r;
                            do {
                                switch (o.tag) {
                                case 3:
                                    o.flags |= 65536,
                                    t &= -t,
                                    o.lanes |= t,
                                    ka(o, gr(0, c, t));
                                    break e;
                                case 1:
                                    l = c;
                                    var v = o.type
                                      , _ = o.stateNode;
                                    if (0 == (128 & o.flags) && ("function" == typeof v.getDerivedStateFromError || null !== _ && "function" == typeof _.componentDidCatch && (null === Yl || !Yl.has(_)))) {
                                        o.flags |= 65536,
                                        t &= -t,
                                        o.lanes |= t,
                                        ka(o, pr(o, l, t));
                                        break e
                                    }
                                }
                                o = o.return
                            } while (null !== o)
                        }
                        Tc(n)
                    } catch (e) {
                        t = e,
                        Pl === n && null !== n && (Pl = n = n.return);
                        continue
                    }
                    break
                }
            }
            function pc() {
                var e = jl.current;
                return jl.current = or,
                null === e ? or : e
            }
            function fc() {
                0 !== Rl && 3 !== Rl && 2 !== Rl || (Rl = 4),
                null === Ol || 0 == (268435455 & Dl) && 0 == (268435455 & Fl) || lc(Ol, Ll)
            }
            function xc(e, t) {
                var n = wl;
                wl |= 2;
                var s = pc();
                for (Ol === e && Ll === t || (Kl = null,
                hc(e, t)); ; )
                    try {
                        vc();
                        break
                    } catch (t) {
                        gc(e, t)
                    }
                if (Ta(),
                wl = n,
                jl.current = s,
                null !== Pl)
                    throw Error(a(261));
                return Ol = null,
                Ll = 0,
                Rl
            }
            function vc() {
                for (; null !== Pl; )
                    bc(Pl)
            }
            function _c() {
                for (; null !== Pl && !qe(); )
                    bc(Pl)
            }
            function bc(e) {
                var t = Sl(e.alternate, e, Al);
                e.memoizedProps = e.pendingProps,
                null === t ? Tc(e) : Pl = t,
                Cl.current = null
            }
            function Tc(e) {
                var t = e;
                do {
                    var n = t.alternate;
                    if (e = t.return,
                    0 == (32768 & t.flags)) {
                        if (null !== (n = $r(n, t, Al)))
                            return void (Pl = n)
                    } else {
                        if (null !== (n = qr(n, t)))
                            return n.flags &= 32767,
                            void (Pl = n);
                        if (null === e)
                            return Rl = 6,
                            void (Pl = null);
                        e.flags |= 32768,
                        e.subtreeFlags = 0,
                        e.deletions = null
                    }
                    if (null !== (t = t.sibling))
                        return void (Pl = t);
                    Pl = t = e
                } while (null !== t);
                0 === Rl && (Rl = 5)
            }
            function Ec(e, t, n) {
                var s = _t
                  , i = Nl.transition;
                try {
                    Nl.transition = null,
                    _t = 1,
                    function(e, t, n, s) {
                        do {
                            Ic()
                        } while (null !== ql);
                        if (0 != (6 & wl))
                            throw Error(a(327));
                        n = e.finishedWork;
                        var i = e.finishedLanes;
                        if (null === n)
                            return null;
                        if (e.finishedWork = null,
                        e.finishedLanes = 0,
                        n === e.current)
                            throw Error(a(177));
                        e.callbackNode = null,
                        e.callbackPriority = 0;
                        var o = n.lanes | n.childLanes;
                        if (function(e, t) {
                            var n = e.pendingLanes & ~t;
                            e.pendingLanes = t,
                            e.suspendedLanes = 0,
                            e.pingedLanes = 0,
                            e.expiredLanes &= t,
                            e.mutableReadLanes &= t,
                            e.entangledLanes &= t,
                            t = e.entanglements;
                            var s = e.eventTimes;
                            for (e = e.expirationTimes; 0 < n; ) {
                                var i = 31 - ot(n)
                                  , a = 1 << i;
                                t[i] = 0,
                                s[i] = -1,
                                e[i] = -1,
                                n &= ~a
                            }
                        }(e, o),
                        e === Ol && (Pl = Ol = null,
                        Ll = 0),
                        0 == (2064 & n.subtreeFlags) && 0 == (2064 & n.flags) || $l || ($l = !0,
                        Oc(tt, (function() {
                            return Ic(),
                            null
                        }
                        ))),
                        o = 0 != (15990 & n.flags),
                        0 != (15990 & n.subtreeFlags) || o) {
                            o = Nl.transition,
                            Nl.transition = null;
                            var r = _t;
                            _t = 1;
                            var l = wl;
                            wl |= 4,
                            Cl.current = null,
                            function(e, t) {
                                if (ei = Kt,
                                hs(e = ms())) {
                                    if ("selectionStart"in e)
                                        var n = {
                                            start: e.selectionStart,
                                            end: e.selectionEnd
                                        };
                                    else
                                        e: {
                                            var s = (n = (n = e.ownerDocument) && n.defaultView || window).getSelection && n.getSelection();
                                            if (s && 0 !== s.rangeCount) {
                                                n = s.anchorNode;
                                                var i = s.anchorOffset
                                                  , o = s.focusNode;
                                                s = s.focusOffset;
                                                try {
                                                    n.nodeType,
                                                    o.nodeType
                                                } catch (e) {
                                                    n = null;
                                                    break e
                                                }
                                                var r = 0
                                                  , l = -1
                                                  , c = -1
                                                  , u = 0
                                                  , d = 0
                                                  , m = e
                                                  , h = null;
                                                t: for (; ; ) {
                                                    for (var g; m !== n || 0 !== i && 3 !== m.nodeType || (l = r + i),
                                                    m !== o || 0 !== s && 3 !== m.nodeType || (c = r + s),
                                                    3 === m.nodeType && (r += m.nodeValue.length),
                                                    null !== (g = m.firstChild); )
                                                        h = m,
                                                        m = g;
                                                    for (; ; ) {
                                                        if (m === e)
                                                            break t;
                                                        if (h === n && ++u === i && (l = r),
                                                        h === o && ++d === s && (c = r),
                                                        null !== (g = m.nextSibling))
                                                            break;
                                                        h = (m = h).parentNode
                                                    }
                                                    m = g
                                                }
                                                n = -1 === l || -1 === c ? null : {
                                                    start: l,
                                                    end: c
                                                }
                                            } else
                                                n = null
                                        }
                                    n = n || {
                                        start: 0,
                                        end: 0
                                    }
                                } else
                                    n = null;
                                for (ti = {
                                    focusedElem: e,
                                    selectionRange: n
                                },
                                Kt = !1,
                                Jr = t; null !== Jr; )
                                    if (e = (t = Jr).child,
                                    0 != (1028 & t.subtreeFlags) && null !== e)
                                        e.return = t,
                                        Jr = e;
                                    else
                                        for (; null !== Jr; ) {
                                            t = Jr;
                                            try {
                                                var p = t.alternate;
                                                if (0 != (1024 & t.flags))
                                                    switch (t.tag) {
                                                    case 0:
                                                    case 11:
                                                    case 15:
                                                    case 5:
                                                    case 6:
                                                    case 4:
                                                    case 17:
                                                        break;
                                                    case 1:
                                                        if (null !== p) {
                                                            var f = p.memoizedProps
                                                              , x = p.memoizedState
                                                              , v = t.stateNode
                                                              , _ = v.getSnapshotBeforeUpdate(t.elementType === t.type ? f : fa(t.type, f), x);
                                                            v.__reactInternalSnapshotBeforeUpdate = _
                                                        }
                                                        break;
                                                    case 3:
                                                        var b = t.stateNode.containerInfo;
                                                        1 === b.nodeType ? b.textContent = "" : 9 === b.nodeType && b.documentElement && b.removeChild(b.documentElement);
                                                        break;
                                                    default:
                                                        throw Error(a(163))
                                                    }
                                            } catch (e) {
                                                yc(t, t.return, e)
                                            }
                                            if (null !== (e = t.sibling)) {
                                                e.return = t.return,
                                                Jr = e;
                                                break
                                            }
                                            Jr = t.return
                                        }
                                p = nl,
                                nl = !1
                            }(e, n),
                            xl(n, e),
                            gs(ti),
                            Kt = !!ei,
                            ti = ei = null,
                            e.current = n,
                            _l(n, e, i),
                            Xe(),
                            wl = l,
                            _t = r,
                            Nl.transition = o
                        } else
                            e.current = n;
                        if ($l && ($l = !1,
                        ql = e,
                        Xl = i),
                        o = e.pendingLanes,
                        0 === o && (Yl = null),
                        function(e) {
                            if (at && "function" == typeof at.onCommitFiberRoot)
                                try {
                                    at.onCommitFiberRoot(it, e, void 0, 128 == (128 & e.current.flags))
                                } catch (e) {}
                        }(n.stateNode),
                        ic(e, Qe()),
                        null !== t)
                            for (s = e.onRecoverableError,
                            n = 0; n < t.length; n++)
                                i = t[n],
                                s(i.value, {
                                    componentStack: i.stack,
                                    digest: i.digest
                                });
                        if (Wl)
                            throw Wl = !1,
                            e = zl,
                            zl = null,
                            e;
                        0 != (1 & Xl) && 0 !== e.tag && Ic(),
                        o = e.pendingLanes,
                        0 != (1 & o) ? e === Zl ? Ql++ : (Ql = 0,
                        Zl = e) : Ql = 0,
                        Vi()
                    }(e, t, n, s)
                } finally {
                    Nl.transition = i,
                    _t = s
                }
                return null
            }
            function Ic() {
                if (null !== ql) {
                    var e = bt(Xl)
                      , t = Nl.transition
                      , n = _t;
                    try {
                        if (Nl.transition = null,
                        _t = 16 > e ? 16 : e,
                        null === ql)
                            var s = !1;
                        else {
                            if (e = ql,
                            ql = null,
                            Xl = 0,
                            0 != (6 & wl))
                                throw Error(a(331));
                            var i = wl;
                            for (wl |= 4,
                            Jr = e.current; null !== Jr; ) {
                                var o = Jr
                                  , r = o.child;
                                if (0 != (16 & Jr.flags)) {
                                    var l = o.deletions;
                                    if (null !== l) {
                                        for (var c = 0; c < l.length; c++) {
                                            var u = l[c];
                                            for (Jr = u; null !== Jr; ) {
                                                var d = Jr;
                                                switch (d.tag) {
                                                case 0:
                                                case 11:
                                                case 15:
                                                    sl(8, d, o)
                                                }
                                                var m = d.child;
                                                if (null !== m)
                                                    m.return = d,
                                                    Jr = m;
                                                else
                                                    for (; null !== Jr; ) {
                                                        var h = (d = Jr).sibling
                                                          , g = d.return;
                                                        if (ol(d),
                                                        d === u) {
                                                            Jr = null;
                                                            break
                                                        }
                                                        if (null !== h) {
                                                            h.return = g,
                                                            Jr = h;
                                                            break
                                                        }
                                                        Jr = g
                                                    }
                                            }
                                        }
                                        var p = o.alternate;
                                        if (null !== p) {
                                            var f = p.child;
                                            if (null !== f) {
                                                p.child = null;
                                                do {
                                                    var x = f.sibling;
                                                    f.sibling = null,
                                                    f = x
                                                } while (null !== f)
                                            }
                                        }
                                        Jr = o
                                    }
                                }
                                if (0 != (2064 & o.subtreeFlags) && null !== r)
                                    r.return = o,
                                    Jr = r;
                                else
                                    e: for (; null !== Jr; ) {
                                        if (0 != (2048 & (o = Jr).flags))
                                            switch (o.tag) {
                                            case 0:
                                            case 11:
                                            case 15:
                                                sl(9, o, o.return)
                                            }
                                        var v = o.sibling;
                                        if (null !== v) {
                                            v.return = o.return,
                                            Jr = v;
                                            break e
                                        }
                                        Jr = o.return
                                    }
                            }
                            var _ = e.current;
                            for (Jr = _; null !== Jr; ) {
                                var b = (r = Jr).child;
                                if (0 != (2064 & r.subtreeFlags) && null !== b)
                                    b.return = r,
                                    Jr = b;
                                else
                                    e: for (r = _; null !== Jr; ) {
                                        if (0 != (2048 & (l = Jr).flags))
                                            try {
                                                switch (l.tag) {
                                                case 0:
                                                case 11:
                                                case 15:
                                                    il(9, l)
                                                }
                                            } catch (e) {
                                                yc(l, l.return, e)
                                            }
                                        if (l === r) {
                                            Jr = null;
                                            break e
                                        }
                                        var T = l.sibling;
                                        if (null !== T) {
                                            T.return = l.return,
                                            Jr = T;
                                            break e
                                        }
                                        Jr = l.return
                                    }
                            }
                            if (wl = i,
                            Vi(),
                            at && "function" == typeof at.onPostCommitFiberRoot)
                                try {
                                    at.onPostCommitFiberRoot(it, e)
                                } catch (e) {}
                            s = !0
                        }
                        return s
                    } finally {
                        _t = n,
                        Nl.transition = t
                    }
                }
                return !1
            }
            function Sc(e, t, n) {
                e = Ma(e, t = gr(0, t = ur(n, t), 1), 1),
                t = tc(),
                null !== e && (xt(e, 1, t),
                ic(e, t))
            }
            function yc(e, t, n) {
                if (3 === e.tag)
                    Sc(e, e, n);
                else
                    for (; null !== t; ) {
                        if (3 === t.tag) {
                            Sc(t, e, n);
                            break
                        }
                        if (1 === t.tag) {
                            var s = t.stateNode;
                            if ("function" == typeof t.type.getDerivedStateFromError || "function" == typeof s.componentDidCatch && (null === Yl || !Yl.has(s))) {
                                t = Ma(t, e = pr(t, e = ur(n, e), 1), 1),
                                e = tc(),
                                null !== t && (xt(t, 1, e),
                                ic(t, e));
                                break
                            }
                        }
                        t = t.return
                    }
            }
            function jc(e, t, n) {
                var s = e.pingCache;
                null !== s && s.delete(t),
                t = tc(),
                e.pingedLanes |= e.suspendedLanes & n,
                Ol === e && (Ll & n) === n && (4 === Rl || 3 === Rl && (130023424 & Ll) === Ll && 500 > Qe() - Vl ? hc(e, 0) : Ul |= n),
                ic(e, t)
            }
            function Cc(e, t) {
                0 === t && (0 == (1 & e.mode) ? t = 1 : (t = ut,
                0 == (130023424 & (ut <<= 1)) && (ut = 4194304)));
                var n = tc();
                null !== (e = wa(e, t)) && (xt(e, t, n),
                ic(e, n))
            }
            function Nc(e) {
                var t = e.memoizedState
                  , n = 0;
                null !== t && (n = t.retryLane),
                Cc(e, n)
            }
            function wc(e, t) {
                var n = 0;
                switch (e.tag) {
                case 13:
                    var s = e.stateNode
                      , i = e.memoizedState;
                    null !== i && (n = i.retryLane);
                    break;
                case 19:
                    s = e.stateNode;
                    break;
                default:
                    throw Error(a(314))
                }
                null !== s && s.delete(t),
                Cc(e, n)
            }
            function Oc(e, t) {
                return Ye(e, t)
            }
            function Pc(e, t, n, s) {
                this.tag = e,
                this.key = n,
                this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null,
                this.index = 0,
                this.ref = null,
                this.pendingProps = t,
                this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null,
                this.mode = s,
                this.subtreeFlags = this.flags = 0,
                this.deletions = null,
                this.childLanes = this.lanes = 0,
                this.alternate = null
            }
            function Lc(e, t, n, s) {
                return new Pc(e,t,n,s)
            }
            function Ac(e) {
                return !(!(e = e.prototype) || !e.isReactComponent)
            }
            function Mc(e, t) {
                var n = e.alternate;
                return null === n ? ((n = Lc(e.tag, t, e.key, e.mode)).elementType = e.elementType,
                n.type = e.type,
                n.stateNode = e.stateNode,
                n.alternate = e,
                e.alternate = n) : (n.pendingProps = t,
                n.type = e.type,
                n.flags = 0,
                n.subtreeFlags = 0,
                n.deletions = null),
                n.flags = 14680064 & e.flags,
                n.childLanes = e.childLanes,
                n.lanes = e.lanes,
                n.child = e.child,
                n.memoizedProps = e.memoizedProps,
                n.memoizedState = e.memoizedState,
                n.updateQueue = e.updateQueue,
                t = e.dependencies,
                n.dependencies = null === t ? null : {
                    lanes: t.lanes,
                    firstContext: t.firstContext
                },
                n.sibling = e.sibling,
                n.index = e.index,
                n.ref = e.ref,
                n
            }
            function Rc(e, t, n, s, i, o) {
                var r = 2;
                if (s = e,
                "function" == typeof e)
                    Ac(e) && (r = 1);
                else if ("string" == typeof e)
                    r = 5;
                else
                    e: switch (e) {
                    case I:
                        return kc(n.children, i, o, t);
                    case S:
                        r = 8,
                        i |= 8;
                        break;
                    case y:
                        return (e = Lc(12, n, t, 2 | i)).elementType = y,
                        e.lanes = o,
                        e;
                    case w:
                        return (e = Lc(13, n, t, i)).elementType = w,
                        e.lanes = o,
                        e;
                    case O:
                        return (e = Lc(19, n, t, i)).elementType = O,
                        e.lanes = o,
                        e;
                    case A:
                        return Dc(n, i, o, t);
                    default:
                        if ("object" == typeof e && null !== e)
                            switch (e.$$typeof) {
                            case j:
                                r = 10;
                                break e;
                            case C:
                                r = 9;
                                break e;
                            case N:
                                r = 11;
                                break e;
                            case P:
                                r = 14;
                                break e;
                            case L:
                                r = 16,
                                s = null;
                                break e
                            }
                        throw Error(a(130, null == e ? e : typeof e, ""))
                    }
                return (t = Lc(r, n, t, i)).elementType = e,
                t.type = s,
                t.lanes = o,
                t
            }
            function kc(e, t, n, s) {
                return (e = Lc(7, e, s, t)).lanes = n,
                e
            }
            function Dc(e, t, n, s) {
                return (e = Lc(22, e, s, t)).elementType = A,
                e.lanes = n,
                e.stateNode = {
                    isHidden: !1
                },
                e
            }
            function Fc(e, t, n) {
                return (e = Lc(6, e, null, t)).lanes = n,
                e
            }
            function Uc(e, t, n) {
                return (t = Lc(4, null !== e.children ? e.children : [], e.key, t)).lanes = n,
                t.stateNode = {
                    containerInfo: e.containerInfo,
                    pendingChildren: null,
                    implementation: e.implementation
                },
                t
            }
            function Bc(e, t, n, s, i) {
                this.tag = t,
                this.containerInfo = e,
                this.finishedWork = this.pingCache = this.current = this.pendingChildren = null,
                this.timeoutHandle = -1,
                this.callbackNode = this.pendingContext = this.context = null,
                this.callbackPriority = 0,
                this.eventTimes = ft(0),
                this.expirationTimes = ft(-1),
                this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0,
                this.entanglements = ft(0),
                this.identifierPrefix = s,
                this.onRecoverableError = i,
                this.mutableSourceEagerHydrationData = null
            }
            function Gc(e, t, n, s, i, a, o, r, l) {
                return e = new Bc(e,t,n,r,l),
                1 === t ? (t = 1,
                !0 === a && (t |= 8)) : t = 0,
                a = Lc(3, null, null, t),
                e.current = a,
                a.stateNode = e,
                a.memoizedState = {
                    element: s,
                    isDehydrated: n,
                    cache: null,
                    transitions: null,
                    pendingSuspenseBoundaries: null
                },
                Pa(a),
                e
            }
            function Vc(e) {
                if (!e)
                    return Ci;
                e: {
                    if (Ve(e = e._reactInternals) !== e || 1 !== e.tag)
                        throw Error(a(170));
                    var t = e;
                    do {
                        switch (t.tag) {
                        case 3:
                            t = t.stateNode.context;
                            break e;
                        case 1:
                            if (Li(t.type)) {
                                t = t.stateNode.__reactInternalMemoizedMergedChildContext;
                                break e
                            }
                        }
                        t = t.return
                    } while (null !== t);
                    throw Error(a(171))
                }
                if (1 === e.tag) {
                    var n = e.type;
                    if (Li(n))
                        return Ri(e, n, t)
                }
                return t
            }
            function Hc(e, t, n, s, i, a, o, r, l) {
                return (e = Gc(n, s, !0, e, 0, a, 0, r, l)).context = Vc(null),
                n = e.current,
                (a = Aa(s = tc(), i = nc(n))).callback = null != t ? t : null,
                Ma(n, a, i),
                e.current.lanes = i,
                xt(e, i, s),
                ic(e, s),
                e
            }
            function Kc(e, t, n, s) {
                var i = t.current
                  , a = tc()
                  , o = nc(i);
                return n = Vc(n),
                null === t.context ? t.context = n : t.pendingContext = n,
                (t = Aa(a, o)).payload = {
                    element: e
                },
                null !== (s = void 0 === s ? null : s) && (t.callback = s),
                null !== (e = Ma(i, t, o)) && (sc(e, i, o, a),
                Ra(e, i, o)),
                o
            }
            function Wc(e) {
                return (e = e.current).child ? (e.child.tag,
                e.child.stateNode) : null
            }
            function zc(e, t) {
                if (null !== (e = e.memoizedState) && null !== e.dehydrated) {
                    var n = e.retryLane;
                    e.retryLane = 0 !== n && n < t ? n : t
                }
            }
            function Yc(e, t) {
                zc(e, t),
                (e = e.alternate) && zc(e, t)
            }
            Sl = function(e, t, n) {
                if (null !== e)
                    if (e.memoizedProps !== t.pendingProps || wi.current)
                        br = !0;
                    else {
                        if (0 == (e.lanes & n) && 0 == (128 & t.flags))
                            return br = !1,
                            function(e, t, n) {
                                switch (t.tag) {
                                case 3:
                                    Or(t),
                                    ha();
                                    break;
                                case 5:
                                    ao(t);
                                    break;
                                case 1:
                                    Li(t.type) && ki(t);
                                    break;
                                case 4:
                                    so(t, t.stateNode.containerInfo);
                                    break;
                                case 10:
                                    var s = t.type._context
                                      , i = t.memoizedProps.value;
                                    ji(xa, s._currentValue),
                                    s._currentValue = i;
                                    break;
                                case 13:
                                    if (null !== (s = t.memoizedState))
                                        return null !== s.dehydrated ? (ji(ro, 1 & ro.current),
                                        t.flags |= 128,
                                        null) : 0 != (n & t.child.childLanes) ? Fr(e, t, n) : (ji(ro, 1 & ro.current),
                                        null !== (e = Wr(e, t, n)) ? e.sibling : null);
                                    ji(ro, 1 & ro.current);
                                    break;
                                case 19:
                                    if (s = 0 != (n & t.childLanes),
                                    0 != (128 & e.flags)) {
                                        if (s)
                                            return Hr(e, t, n);
                                        t.flags |= 128
                                    }
                                    if (null !== (i = t.memoizedState) && (i.rendering = null,
                                    i.tail = null,
                                    i.lastEffect = null),
                                    ji(ro, ro.current),
                                    s)
                                        break;
                                    return null;
                                case 22:
                                case 23:
                                    return t.lanes = 0,
                                    yr(e, t, n)
                                }
                                return Wr(e, t, n)
                            }(e, t, n);
                        br = 0 != (131072 & e.flags)
                    }
                else
                    br = !1,
                    ia && 0 != (1048576 & t.flags) && Ji(t, zi, t.index);
                switch (t.lanes = 0,
                t.tag) {
                case 2:
                    var s = t.type;
                    Kr(e, t),
                    e = t.pendingProps;
                    var i = Pi(t, Ni.current);
                    Sa(t, n),
                    i = So(null, t, s, e, i, n);
                    var o = yo();
                    return t.flags |= 1,
                    "object" == typeof i && null !== i && "function" == typeof i.render && void 0 === i.$$typeof ? (t.tag = 1,
                    t.memoizedState = null,
                    t.updateQueue = null,
                    Li(s) ? (o = !0,
                    ki(t)) : o = !1,
                    t.memoizedState = null !== i.state && void 0 !== i.state ? i.state : null,
                    Pa(t),
                    i.updater = Ga,
                    t.stateNode = i,
                    i._reactInternals = t,
                    Wa(t, s, e, n),
                    t = wr(null, t, s, !0, o, n)) : (t.tag = 0,
                    ia && o && ea(t),
                    Tr(null, t, i, n),
                    t = t.child),
                    t;
                case 16:
                    s = t.elementType;
                    e: {
                        switch (Kr(e, t),
                        e = t.pendingProps,
                        s = (i = s._init)(s._payload),
                        t.type = s,
                        i = t.tag = function(e) {
                            if ("function" == typeof e)
                                return Ac(e) ? 1 : 0;
                            if (null != e) {
                                if ((e = e.$$typeof) === N)
                                    return 11;
                                if (e === P)
                                    return 14
                            }
                            return 2
                        }(s),
                        e = fa(s, e),
                        i) {
                        case 0:
                            t = Cr(null, t, s, e, n);
                            break e;
                        case 1:
                            t = Nr(null, t, s, e, n);
                            break e;
                        case 11:
                            t = Er(null, t, s, e, n);
                            break e;
                        case 14:
                            t = Ir(null, t, s, fa(s.type, e), n);
                            break e
                        }
                        throw Error(a(306, s, ""))
                    }
                    return t;
                case 0:
                    return s = t.type,
                    i = t.pendingProps,
                    Cr(e, t, s, i = t.elementType === s ? i : fa(s, i), n);
                case 1:
                    return s = t.type,
                    i = t.pendingProps,
                    Nr(e, t, s, i = t.elementType === s ? i : fa(s, i), n);
                case 3:
                    e: {
                        if (Or(t),
                        null === e)
                            throw Error(a(387));
                        s = t.pendingProps,
                        i = (o = t.memoizedState).element,
                        La(e, t),
                        Da(t, s, null, n);
                        var r = t.memoizedState;
                        if (s = r.element,
                        o.isDehydrated) {
                            if (o = {
                                element: s,
                                isDehydrated: !1,
                                cache: r.cache,
                                pendingSuspenseBoundaries: r.pendingSuspenseBoundaries,
                                transitions: r.transitions
                            },
                            t.updateQueue.baseState = o,
                            t.memoizedState = o,
                            256 & t.flags) {
                                t = Pr(e, t, s, n, i = ur(Error(a(423)), t));
                                break e
                            }
                            if (s !== i) {
                                t = Pr(e, t, s, n, i = ur(Error(a(424)), t));
                                break e
                            }
                            for (sa = ci(t.stateNode.containerInfo.firstChild),
                            na = t,
                            ia = !0,
                            aa = null,
                            n = Qa(t, null, s, n),
                            t.child = n; n; )
                                n.flags = -3 & n.flags | 4096,
                                n = n.sibling
                        } else {
                            if (ha(),
                            s === i) {
                                t = Wr(e, t, n);
                                break e
                            }
                            Tr(e, t, s, n)
                        }
                        t = t.child
                    }
                    return t;
                case 5:
                    return ao(t),
                    null === e && ca(t),
                    s = t.type,
                    i = t.pendingProps,
                    o = null !== e ? e.memoizedProps : null,
                    r = i.children,
                    ni(s, i) ? r = null : null !== o && ni(s, o) && (t.flags |= 32),
                    jr(e, t),
                    Tr(e, t, r, n),
                    t.child;
                case 6:
                    return null === e && ca(t),
                    null;
                case 13:
                    return Fr(e, t, n);
                case 4:
                    return so(t, t.stateNode.containerInfo),
                    s = t.pendingProps,
                    null === e ? t.child = Xa(t, null, s, n) : Tr(e, t, s, n),
                    t.child;
                case 11:
                    return s = t.type,
                    i = t.pendingProps,
                    Er(e, t, s, i = t.elementType === s ? i : fa(s, i), n);
                case 7:
                    return Tr(e, t, t.pendingProps, n),
                    t.child;
                case 8:
                case 12:
                    return Tr(e, t, t.pendingProps.children, n),
                    t.child;
                case 10:
                    e: {
                        if (s = t.type._context,
                        i = t.pendingProps,
                        o = t.memoizedProps,
                        r = i.value,
                        ji(xa, s._currentValue),
                        s._currentValue = r,
                        null !== o)
                            if (rs(o.value, r)) {
                                if (o.children === i.children && !wi.current) {
                                    t = Wr(e, t, n);
                                    break e
                                }
                            } else
                                for (null !== (o = t.child) && (o.return = t); null !== o; ) {
                                    var l = o.dependencies;
                                    if (null !== l) {
                                        r = o.child;
                                        for (var c = l.firstContext; null !== c; ) {
                                            if (c.context === s) {
                                                if (1 === o.tag) {
                                                    (c = Aa(-1, n & -n)).tag = 2;
                                                    var u = o.updateQueue;
                                                    if (null !== u) {
                                                        var d = (u = u.shared).pending;
                                                        null === d ? c.next = c : (c.next = d.next,
                                                        d.next = c),
                                                        u.pending = c
                                                    }
                                                }
                                                o.lanes |= n,
                                                null !== (c = o.alternate) && (c.lanes |= n),
                                                Ia(o.return, n, t),
                                                l.lanes |= n;
                                                break
                                            }
                                            c = c.next
                                        }
                                    } else if (10 === o.tag)
                                        r = o.type === t.type ? null : o.child;
                                    else if (18 === o.tag) {
                                        if (null === (r = o.return))
                                            throw Error(a(341));
                                        r.lanes |= n,
                                        null !== (l = r.alternate) && (l.lanes |= n),
                                        Ia(r, n, t),
                                        r = o.sibling
                                    } else
                                        r = o.child;
                                    if (null !== r)
                                        r.return = o;
                                    else
                                        for (r = o; null !== r; ) {
                                            if (r === t) {
                                                r = null;
                                                break
                                            }
                                            if (null !== (o = r.sibling)) {
                                                o.return = r.return,
                                                r = o;
                                                break
                                            }
                                            r = r.return
                                        }
                                    o = r
                                }
                        Tr(e, t, i.children, n),
                        t = t.child
                    }
                    return t;
                case 9:
                    return i = t.type,
                    s = t.pendingProps.children,
                    Sa(t, n),
                    s = s(i = ya(i)),
                    t.flags |= 1,
                    Tr(e, t, s, n),
                    t.child;
                case 14:
                    return i = fa(s = t.type, t.pendingProps),
                    Ir(e, t, s, i = fa(s.type, i), n);
                case 15:
                    return Sr(e, t, t.type, t.pendingProps, n);
                case 17:
                    return s = t.type,
                    i = t.pendingProps,
                    i = t.elementType === s ? i : fa(s, i),
                    Kr(e, t),
                    t.tag = 1,
                    Li(s) ? (e = !0,
                    ki(t)) : e = !1,
                    Sa(t, n),
                    Ha(t, s, i),
                    Wa(t, s, i, n),
                    wr(null, t, s, !0, e, n);
                case 19:
                    return Hr(e, t, n);
                case 22:
                    return yr(e, t, n)
                }
                throw Error(a(156, t.tag))
            }
            ;
            var $c = "function" == typeof reportError ? reportError : function(e) {
                console.error(e)
            }
            ;
            function qc(e) {
                this._internalRoot = e
            }
            function Xc(e) {
                this._internalRoot = e
            }
            function Qc(e) {
                return !(!e || 1 !== e.nodeType && 9 !== e.nodeType && 11 !== e.nodeType)
            }
            function Zc(e) {
                return !(!e || 1 !== e.nodeType && 9 !== e.nodeType && 11 !== e.nodeType && (8 !== e.nodeType || " react-mount-point-unstable " !== e.nodeValue))
            }
            function Jc() {}
            function eu(e, t, n, s, i) {
                var a = n._reactRootContainer;
                if (a) {
                    var o = a;
                    if ("function" == typeof i) {
                        var r = i;
                        i = function() {
                            var e = Wc(o);
                            r.call(e)
                        }
                    }
                    Kc(t, o, e, i)
                } else
                    o = function(e, t, n, s, i) {
                        if (i) {
                            if ("function" == typeof s) {
                                var a = s;
                                s = function() {
                                    var e = Wc(o);
                                    a.call(e)
                                }
                            }
                            var o = Hc(t, s, e, 0, null, !1, 0, "", Jc);
                            return e._reactRootContainer = o,
                            e[gi] = o.current,
                            Vs(8 === e.nodeType ? e.parentNode : e),
                            dc(),
                            o
                        }
                        for (; i = e.lastChild; )
                            e.removeChild(i);
                        if ("function" == typeof s) {
                            var r = s;
                            s = function() {
                                var e = Wc(l);
                                r.call(e)
                            }
                        }
                        var l = Gc(e, 0, !1, null, 0, !1, 0, "", Jc);
                        return e._reactRootContainer = l,
                        e[gi] = l.current,
                        Vs(8 === e.nodeType ? e.parentNode : e),
                        dc((function() {
                            Kc(t, l, n, s)
                        }
                        )),
                        l
                    }(n, t, e, i, s);
                return Wc(o)
            }
            Xc.prototype.render = qc.prototype.render = function(e) {
                var t = this._internalRoot;
                if (null === t)
                    throw Error(a(409));
                Kc(e, t, null, null)
            }
            ,
            Xc.prototype.unmount = qc.prototype.unmount = function() {
                var e = this._internalRoot;
                if (null !== e) {
                    this._internalRoot = null;
                    var t = e.containerInfo;
                    dc((function() {
                        Kc(null, e, null, null)
                    }
                    )),
                    t[gi] = null
                }
            }
            ,
            Xc.prototype.unstable_scheduleHydration = function(e) {
                if (e) {
                    var t = St();
                    e = {
                        blockedOn: null,
                        target: e,
                        priority: t
                    };
                    for (var n = 0; n < At.length && 0 !== t && t < At[n].priority; n++)
                        ;
                    At.splice(n, 0, e),
                    0 === n && Dt(e)
                }
            }
            ,
            Tt = function(e) {
                switch (e.tag) {
                case 3:
                    var t = e.stateNode;
                    if (t.current.memoizedState.isDehydrated) {
                        var n = dt(t.pendingLanes);
                        0 !== n && (vt(t, 1 | n),
                        ic(t, Qe()),
                        0 == (6 & wl) && (Hl = Qe() + 500,
                        Vi()))
                    }
                    break;
                case 13:
                    dc((function() {
                        var t = wa(e, 1);
                        if (null !== t) {
                            var n = tc();
                            sc(t, e, 1, n)
                        }
                    }
                    )),
                    Yc(e, 1)
                }
            }
            ,
            Et = function(e) {
                if (13 === e.tag) {
                    var t = wa(e, 134217728);
                    if (null !== t)
                        sc(t, e, 134217728, tc());
                    Yc(e, 134217728)
                }
            }
            ,
            It = function(e) {
                if (13 === e.tag) {
                    var t = nc(e)
                      , n = wa(e, t);
                    if (null !== n)
                        sc(n, e, t, tc());
                    Yc(e, t)
                }
            }
            ,
            St = function() {
                return _t
            }
            ,
            yt = function(e, t) {
                var n = _t;
                try {
                    return _t = e,
                    t()
                } finally {
                    _t = n
                }
            }
            ,
            Ee = function(e, t, n) {
                switch (t) {
                case "input":
                    if (Z(e, n),
                    t = n.name,
                    "radio" === n.type && null != t) {
                        for (n = e; n.parentNode; )
                            n = n.parentNode;
                        for (n = n.querySelectorAll("input[name=" + JSON.stringify("" + t) + '][type="radio"]'),
                        t = 0; t < n.length; t++) {
                            var s = n[t];
                            if (s !== e && s.form === e.form) {
                                var i = Ti(s);
                                if (!i)
                                    throw Error(a(90));
                                Y(s),
                                Z(s, i)
                            }
                        }
                    }
                    break;
                case "textarea":
                    ae(e, n);
                    break;
                case "select":
                    null != (t = n.value) && ne(e, !!n.multiple, t, !1)
                }
            }
            ,
            Ne = uc,
            we = dc;
            var tu = {
                usingClientEntryPoint: !1,
                Events: [_i, bi, Ti, je, Ce, uc]
            }
              , nu = {
                findFiberByHostInstance: vi,
                bundleType: 0,
                version: "18.2.0",
                rendererPackageName: "react-dom"
            }
              , su = {
                bundleType: nu.bundleType,
                version: nu.version,
                rendererPackageName: nu.rendererPackageName,
                rendererConfig: nu.rendererConfig,
                overrideHookState: null,
                overrideHookStateDeletePath: null,
                overrideHookStateRenamePath: null,
                overrideProps: null,
                overridePropsDeletePath: null,
                overridePropsRenamePath: null,
                setErrorHandler: null,
                setSuspenseHandler: null,
                scheduleUpdate: null,
                currentDispatcherRef: b.ReactCurrentDispatcher,
                findHostInstanceByFiber: function(e) {
                    return null === (e = We(e)) ? null : e.stateNode
                },
                findFiberByHostInstance: nu.findFiberByHostInstance || function() {
                    return null
                }
                ,
                findHostInstancesForRefresh: null,
                scheduleRefresh: null,
                scheduleRoot: null,
                setRefreshHandler: null,
                getCurrentFiber: null,
                reconcilerVersion: "18.2.0-next-9e3b772b8-20220608"
            };
            if ("undefined" != typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
                var iu = __REACT_DEVTOOLS_GLOBAL_HOOK__;
                if (!iu.isDisabled && iu.supportsFiber)
                    try {
                        it = iu.inject(su),
                        at = iu
                    } catch (ue) {}
            }
            t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = tu,
            t.createPortal = function(e, t) {
                var n = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;
                if (!Qc(t))
                    throw Error(a(200));
                return function(e, t, n) {
                    var s = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;
                    return {
                        $$typeof: E,
                        key: null == s ? null : "" + s,
                        children: e,
                        containerInfo: t,
                        implementation: n
                    }
                }(e, t, null, n)
            }
            ,
            t.createRoot = function(e, t) {
                if (!Qc(e))
                    throw Error(a(299));
                var n = !1
                  , s = ""
                  , i = $c;
                return null != t && (!0 === t.unstable_strictMode && (n = !0),
                void 0 !== t.identifierPrefix && (s = t.identifierPrefix),
                void 0 !== t.onRecoverableError && (i = t.onRecoverableError)),
                t = Gc(e, 1, !1, null, 0, n, 0, s, i),
                e[gi] = t.current,
                Vs(8 === e.nodeType ? e.parentNode : e),
                new qc(t)
            }
            ,
            t.findDOMNode = function(e) {
                if (null == e)
                    return null;
                if (1 === e.nodeType)
                    return e;
                var t = e._reactInternals;
                if (void 0 === t) {
                    if ("function" == typeof e.render)
                        throw Error(a(188));
                    throw e = Object.keys(e).join(","),
                    Error(a(268, e))
                }
                return e = null === (e = We(t)) ? null : e.stateNode
            }
            ,
            t.flushSync = function(e) {
                return dc(e)
            }
            ,
            t.hydrate = function(e, t, n) {
                if (!Zc(t))
                    throw Error(a(200));
                return eu(null, e, t, !0, n)
            }
            ,
            t.hydrateRoot = function(e, t, n) {
                if (!Qc(e))
                    throw Error(a(405));
                var s = null != n && n.hydratedSources || null
                  , i = !1
                  , o = ""
                  , r = $c;
                if (null != n && (!0 === n.unstable_strictMode && (i = !0),
                void 0 !== n.identifierPrefix && (o = n.identifierPrefix),
                void 0 !== n.onRecoverableError && (r = n.onRecoverableError)),
                t = Hc(t, null, e, 1, null != n ? n : null, i, 0, o, r),
                e[gi] = t.current,
                Vs(e),
                s)
                    for (e = 0; e < s.length; e++)
                        i = (i = (n = s[e])._getVersion)(n._source),
                        null == t.mutableSourceEagerHydrationData ? t.mutableSourceEagerHydrationData = [n, i] : t.mutableSourceEagerHydrationData.push(n, i);
                return new Xc(t)
            }
            ,
            t.render = function(e, t, n) {
                if (!Zc(t))
                    throw Error(a(200));
                return eu(null, e, t, !1, n)
            }
            ,
            t.unmountComponentAtNode = function(e) {
                if (!Zc(e))
                    throw Error(a(40));
                return !!e._reactRootContainer && (dc((function() {
                    eu(null, null, e, !1, (function() {
                        e._reactRootContainer = null,
                        e[gi] = null
                    }
                    ))
                }
                )),
                !0)
            }
            ,
            t.unstable_batchedUpdates = uc,
            t.unstable_renderSubtreeIntoContainer = function(e, t, n, s) {
                if (!Zc(n))
                    throw Error(a(200));
                if (null == e || void 0 === e._reactInternals)
                    throw Error(a(38));
                return eu(e, t, n, !1, s)
            }
            ,
            t.version = "18.2.0-next-9e3b772b8-20220608"
        }
        ,
        338: (e,t,n)=>{
            "use strict";
            var s = n(961);
            t.createRoot = s.createRoot,
            t.hydrateRoot = s.hydrateRoot
        }
        ,
        961: (e,t,n)=>{
            "use strict";
            !function e() {
                if ("undefined" != typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" == typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)
                    try {
                        __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)
                    } catch (e) {
                        console.error(e)
                    }
            }(),
            e.exports = n(551)
        }
        ,
        20: (e,t,n)=>{
            "use strict";
            var s = n(540)
              , i = Symbol.for("react.element")
              , a = Symbol.for("react.fragment")
              , o = Object.prototype.hasOwnProperty
              , r = s.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner
              , l = {
                key: !0,
                ref: !0,
                __self: !0,
                __source: !0
            };
            function c(e, t, n) {
                var s, a = {}, c = null, u = null;
                for (s in void 0 !== n && (c = "" + n),
                void 0 !== t.key && (c = "" + t.key),
                void 0 !== t.ref && (u = t.ref),
                t)
                    o.call(t, s) && !l.hasOwnProperty(s) && (a[s] = t[s]);
                if (e && e.defaultProps)
                    for (s in t = e.defaultProps)
                        void 0 === a[s] && (a[s] = t[s]);
                return {
                    $$typeof: i,
                    type: e,
                    key: c,
                    ref: u,
                    props: a,
                    _owner: r.current
                }
            }
            t.Fragment = a,
            t.jsx = c,
            t.jsxs = c
        }
        ,
        287: (e,t)=>{
            "use strict";
            var n = Symbol.for("react.element")
              , s = Symbol.for("react.portal")
              , i = Symbol.for("react.fragment")
              , a = Symbol.for("react.strict_mode")
              , o = Symbol.for("react.profiler")
              , r = Symbol.for("react.provider")
              , l = Symbol.for("react.context")
              , c = Symbol.for("react.forward_ref")
              , u = Symbol.for("react.suspense")
              , d = Symbol.for("react.memo")
              , m = Symbol.for("react.lazy")
              , h = Symbol.iterator;
            var g = {
                isMounted: function() {
                    return !1
                },
                enqueueForceUpdate: function() {},
                enqueueReplaceState: function() {},
                enqueueSetState: function() {}
            }
              , p = Object.assign
              , f = {};
            function x(e, t, n) {
                this.props = e,
                this.context = t,
                this.refs = f,
                this.updater = n || g
            }
            function v() {}
            function _(e, t, n) {
                this.props = e,
                this.context = t,
                this.refs = f,
                this.updater = n || g
            }
            x.prototype.isReactComponent = {},
            x.prototype.setState = function(e, t) {
                if ("object" != typeof e && "function" != typeof e && null != e)
                    throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
                this.updater.enqueueSetState(this, e, t, "setState")
            }
            ,
            x.prototype.forceUpdate = function(e) {
                this.updater.enqueueForceUpdate(this, e, "forceUpdate")
            }
            ,
            v.prototype = x.prototype;
            var b = _.prototype = new v;
            b.constructor = _,
            p(b, x.prototype),
            b.isPureReactComponent = !0;
            var T = Array.isArray
              , E = Object.prototype.hasOwnProperty
              , I = {
                current: null
            }
              , S = {
                key: !0,
                ref: !0,
                __self: !0,
                __source: !0
            };
            function y(e, t, s) {
                var i, a = {}, o = null, r = null;
                if (null != t)
                    for (i in void 0 !== t.ref && (r = t.ref),
                    void 0 !== t.key && (o = "" + t.key),
                    t)
                        E.call(t, i) && !S.hasOwnProperty(i) && (a[i] = t[i]);
                var l = arguments.length - 2;
                if (1 === l)
                    a.children = s;
                else if (1 < l) {
                    for (var c = Array(l), u = 0; u < l; u++)
                        c[u] = arguments[u + 2];
                    a.children = c
                }
                if (e && e.defaultProps)
                    for (i in l = e.defaultProps)
                        void 0 === a[i] && (a[i] = l[i]);
                return {
                    $$typeof: n,
                    type: e,
                    key: o,
                    ref: r,
                    props: a,
                    _owner: I.current
                }
            }
            function j(e) {
                return "object" == typeof e && null !== e && e.$$typeof === n
            }
            var C = /\/+/g;
            function N(e, t) {
                return "object" == typeof e && null !== e && null != e.key ? function(e) {
                    var t = {
                        "=": "=0",
                        ":": "=2"
                    };
                    return "$" + e.replace(/[=:]/g, (function(e) {
                        return t[e]
                    }
                    ))
                }("" + e.key) : t.toString(36)
            }
            function w(e, t, i, a, o) {
                var r = typeof e;
                "undefined" !== r && "boolean" !== r || (e = null);
                var l = !1;
                if (null === e)
                    l = !0;
                else
                    switch (r) {
                    case "string":
                    case "number":
                        l = !0;
                        break;
                    case "object":
                        switch (e.$$typeof) {
                        case n:
                        case s:
                            l = !0
                        }
                    }
                if (l)
                    return o = o(l = e),
                    e = "" === a ? "." + N(l, 0) : a,
                    T(o) ? (i = "",
                    null != e && (i = e.replace(C, "$&/") + "/"),
                    w(o, t, i, "", (function(e) {
                        return e
                    }
                    ))) : null != o && (j(o) && (o = function(e, t) {
                        return {
                            $$typeof: n,
                            type: e.type,
                            key: t,
                            ref: e.ref,
                            props: e.props,
                            _owner: e._owner
                        }
                    }(o, i + (!o.key || l && l.key === o.key ? "" : ("" + o.key).replace(C, "$&/") + "/") + e)),
                    t.push(o)),
                    1;
                if (l = 0,
                a = "" === a ? "." : a + ":",
                T(e))
                    for (var c = 0; c < e.length; c++) {
                        var u = a + N(r = e[c], c);
                        l += w(r, t, i, u, o)
                    }
                else if (u = function(e) {
                    return null === e || "object" != typeof e ? null : "function" == typeof (e = h && e[h] || e["@@iterator"]) ? e : null
                }(e),
                "function" == typeof u)
                    for (e = u.call(e),
                    c = 0; !(r = e.next()).done; )
                        l += w(r = r.value, t, i, u = a + N(r, c++), o);
                else if ("object" === r)
                    throw t = String(e),
                    Error("Objects are not valid as a React child (found: " + ("[object Object]" === t ? "object with keys {" + Object.keys(e).join(", ") + "}" : t) + "). If you meant to render a collection of children, use an array instead.");
                return l
            }
            function O(e, t, n) {
                if (null == e)
                    return e;
                var s = []
                  , i = 0;
                return w(e, s, "", "", (function(e) {
                    return t.call(n, e, i++)
                }
                )),
                s
            }
            function P(e) {
                if (-1 === e._status) {
                    var t = e._result;
                    (t = t()).then((function(t) {
                        0 !== e._status && -1 !== e._status || (e._status = 1,
                        e._result = t)
                    }
                    ), (function(t) {
                        0 !== e._status && -1 !== e._status || (e._status = 2,
                        e._result = t)
                    }
                    )),
                    -1 === e._status && (e._status = 0,
                    e._result = t)
                }
                if (1 === e._status)
                    return e._result.default;
                throw e._result
            }
            var L = {
                current: null
            }
              , A = {
                transition: null
            }
              , M = {
                ReactCurrentDispatcher: L,
                ReactCurrentBatchConfig: A,
                ReactCurrentOwner: I
            };
            t.Children = {
                map: O,
                forEach: function(e, t, n) {
                    O(e, (function() {
                        t.apply(this, arguments)
                    }
                    ), n)
                },
                count: function(e) {
                    var t = 0;
                    return O(e, (function() {
                        t++
                    }
                    )),
                    t
                },
                toArray: function(e) {
                    return O(e, (function(e) {
                        return e
                    }
                    )) || []
                },
                only: function(e) {
                    if (!j(e))
                        throw Error("React.Children.only expected to receive a single React element child.");
                    return e
                }
            },
            t.Component = x,
            t.Fragment = i,
            t.Profiler = o,
            t.PureComponent = _,
            t.StrictMode = a,
            t.Suspense = u,
            t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = M,
            t.cloneElement = function(e, t, s) {
                if (null == e)
                    throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + e + ".");
                var i = p({}, e.props)
                  , a = e.key
                  , o = e.ref
                  , r = e._owner;
                if (null != t) {
                    if (void 0 !== t.ref && (o = t.ref,
                    r = I.current),
                    void 0 !== t.key && (a = "" + t.key),
                    e.type && e.type.defaultProps)
                        var l = e.type.defaultProps;
                    for (c in t)
                        E.call(t, c) && !S.hasOwnProperty(c) && (i[c] = void 0 === t[c] && void 0 !== l ? l[c] : t[c])
                }
                var c = arguments.length - 2;
                if (1 === c)
                    i.children = s;
                else if (1 < c) {
                    l = Array(c);
                    for (var u = 0; u < c; u++)
                        l[u] = arguments[u + 2];
                    i.children = l
                }
                return {
                    $$typeof: n,
                    type: e.type,
                    key: a,
                    ref: o,
                    props: i,
                    _owner: r
                }
            }
            ,
            t.createContext = function(e) {
                return (e = {
                    $$typeof: l,
                    _currentValue: e,
                    _currentValue2: e,
                    _threadCount: 0,
                    Provider: null,
                    Consumer: null,
                    _defaultValue: null,
                    _globalName: null
                }).Provider = {
                    $$typeof: r,
                    _context: e
                },
                e.Consumer = e
            }
            ,
            t.createElement = y,
            t.createFactory = function(e) {
                var t = y.bind(null, e);
                return t.type = e,
                t
            }
            ,
            t.createRef = function() {
                return {
                    current: null
                }
            }
            ,
            t.forwardRef = function(e) {
                return {
                    $$typeof: c,
                    render: e
                }
            }
            ,
            t.isValidElement = j,
            t.lazy = function(e) {
                return {
                    $$typeof: m,
                    _payload: {
                        _status: -1,
                        _result: e
                    },
                    _init: P
                }
            }
            ,
            t.memo = function(e, t) {
                return {
                    $$typeof: d,
                    type: e,
                    compare: void 0 === t ? null : t
                }
            }
            ,
            t.startTransition = function(e) {
                var t = A.transition;
                A.transition = {};
                try {
                    e()
                } finally {
                    A.transition = t
                }
            }
            ,
            t.unstable_act = function() {
                throw Error("act(...) is not supported in production builds of React.")
            }
            ,
            t.useCallback = function(e, t) {
                return L.current.useCallback(e, t)
            }
            ,
            t.useContext = function(e) {
                return L.current.useContext(e)
            }
            ,
            t.useDebugValue = function() {}
            ,
            t.useDeferredValue = function(e) {
                return L.current.useDeferredValue(e)
            }
            ,
            t.useEffect = function(e, t) {
                return L.current.useEffect(e, t)
            }
            ,
            t.useId = function() {
                return L.current.useId()
            }
            ,
            t.useImperativeHandle = function(e, t, n) {
                return L.current.useImperativeHandle(e, t, n)
            }
            ,
            t.useInsertionEffect = function(e, t) {
                return L.current.useInsertionEffect(e, t)
            }
            ,
            t.useLayoutEffect = function(e, t) {
                return L.current.useLayoutEffect(e, t)
            }
            ,
            t.useMemo = function(e, t) {
                return L.current.useMemo(e, t)
            }
            ,
            t.useReducer = function(e, t, n) {
                return L.current.useReducer(e, t, n)
            }
            ,
            t.useRef = function(e) {
                return L.current.useRef(e)
            }
            ,
            t.useState = function(e) {
                return L.current.useState(e)
            }
            ,
            t.useSyncExternalStore = function(e, t, n) {
                return L.current.useSyncExternalStore(e, t, n)
            }
            ,
            t.useTransition = function() {
                return L.current.useTransition()
            }
            ,
            t.version = "18.2.0"
        }
        ,
        540: (e,t,n)=>{
            "use strict";
            e.exports = n(287)
        }
        ,
        848: (e,t,n)=>{
            "use strict";
            e.exports = n(20)
        }
        ,
        262: function(e) {
            e.exports = function() {
                "use strict";
                var e = void 0;
                "undefined" != typeof window && (e = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame || window.oRequestAnimationFrame),
                e || "undefined" == typeof process || "node" !== process.title || (e = setImmediate);
                var t = e = e || function(e) {
                    window.setTimeout(e, 1e3 / 60)
                }
                  , n = Array.prototype.concat
                  , s = Array.prototype.slice;
                function i(e, t) {
                    for (var i = arguments.length, a = Array(i > 2 ? i - 2 : 0), o = 2; o < i; o++)
                        a[o - 2] = arguments[o];
                    return function() {
                        for (var i = arguments.length, o = Array(i), r = 0; r < i; r++)
                            o[r] = arguments[r];
                        e.apply(t, n.call(a, s.call(o)))
                    }
                }
                function a(e, t) {
                    for (var n in t)
                        t.hasOwnProperty(n) && (e[n] = t[n])
                }
                function o(e) {
                    return t(e)
                }
                function r(e, t) {
                    var n = e.indexOf(t);
                    -1 !== n && e.splice(n, 1)
                }
                var l = {};
                function c(e) {
                    if (l[e])
                        return l[e];
                    var t = e.replace("#", "");
                    3 === t.length && (t = t[0] + t[0] + t[1] + t[1] + t[2] + t[2]);
                    var n = t.match(/.{2}/g);
                    if (!n || n.length < 3)
                        throw new Error("Expected a color string of format #rrggbb");
                    var s = {
                        r: parseInt(n[0], 16),
                        g: parseInt(n[1], 16),
                        b: parseInt(n[2], 16)
                    };
                    return l[e] = s,
                    s
                }
                function u(e, t, n) {
                    var s = e.toString(16)
                      , i = t.toString(16)
                      , a = n.toString(16);
                    return "#" + (s = s.length < 2 ? "0" + s : s) + (i = i.length < 2 ? "0" + i : i) + (a = a.length < 2 ? "0" + a : a)
                }
                var d = Object.freeze({
                    bind: i,
                    extend: a,
                    onFrame: o,
                    removeFirst: r,
                    hexToRGB: c,
                    rgbToHex: u
                });
                function m(e, t, n, s, i) {
                    return s + (e - t) / (n - t) * (i - s)
                }
                function h(e, t, n) {
                    var s = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0
                      , i = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 1
                      , a = arguments[5]
                      , o = c(t)
                      , r = c(n)
                      , l = Math.floor(m(e, s, i, o.r, r.r))
                      , d = Math.floor(m(e, s, i, o.g, r.g))
                      , h = Math.floor(m(e, s, i, o.b, r.b));
                    return a ? "rgb(" + l + "," + d + "," + h + ")" : u(l, d, h)
                }
                function g(e) {
                    return e * Math.PI / 180
                }
                function p(e) {
                    return 180 * e / Math.PI
                }
                var f = Object.freeze({
                    mapValueInRange: m,
                    interpolateColor: h,
                    degreesToRadians: g,
                    radiansToDegrees: p
                });
                function x(e) {
                    return 3.62 * (e - 30) + 194
                }
                function v(e) {
                    return (e - 194) / 3.62 + 30
                }
                function _(e) {
                    return 3 * (e - 8) + 25
                }
                function b(e) {
                    return (e - 25) / 3 + 8
                }
                var T = Object.freeze({
                    tensionFromOrigamiValue: x,
                    origamiValueFromTension: v,
                    frictionFromOrigamiValue: _,
                    origamiFromFriction: b
                })
                  , E = function(e, t) {
                    if (!(e instanceof t))
                        throw new TypeError("Cannot call a class as a function")
                }
                  , I = Object.assign || function(e) {
                    for (var t = 1; t < arguments.length; t++) {
                        var n = arguments[t];
                        for (var s in n)
                            Object.prototype.hasOwnProperty.call(n, s) && (e[s] = n[s])
                    }
                    return e
                }
                  , S = function() {
                    function e() {
                        E(this, e),
                        this.springSystem = null
                    }
                    return e.prototype.run = function() {
                        var e = C.call(this);
                        o((function() {
                            e.loop(Date.now())
                        }
                        ))
                    }
                    ,
                    e
                }()
                  , y = function() {
                    function e(t) {
                        E(this, e),
                        this.springSystem = null,
                        this.time = 0,
                        this.running = !1,
                        this.timestep = t || 16.667
                    }
                    return e.prototype.run = function() {
                        var e = C.call(this);
                        if (!this.running) {
                            for (this.running = !0; !e.getIsIdle(); )
                                e.loop(this.time += this.timestep);
                            this.running = !1
                        }
                    }
                    ,
                    e
                }()
                  , j = function() {
                    function e() {
                        E(this, e),
                        this.springSystem = null,
                        this.time = 0,
                        this.running = !1
                    }
                    return e.prototype.run = function() {}
                    ,
                    e.prototype.step = function(e) {
                        C.call(this).loop(this.time += e)
                    }
                    ,
                    e
                }();
                function C() {
                    if (null == this.springSystem)
                        throw new Error("cannot run looper without a springSystem");
                    return this.springSystem
                }
                var N = Object.freeze({
                    AnimationLooper: S,
                    SimulationLooper: y,
                    SteppingSimulationLooper: j
                })
                  , w = function() {
                    function e(t, n) {
                        E(this, e),
                        this.bounciness = t,
                        this.speed = n;
                        var s = this.normalize(t / 1.7, 0, 20);
                        s = this.projectNormal(s, 0, .8);
                        var i = this.normalize(n / 1.7, 0, 20);
                        this.bouncyTension = this.projectNormal(i, .5, 200),
                        this.bouncyFriction = this.quadraticOutInterpolation(s, this.b3Nobounce(this.bouncyTension), .01)
                    }
                    return e.prototype.normalize = function(e, t, n) {
                        return (e - t) / (n - t)
                    }
                    ,
                    e.prototype.projectNormal = function(e, t, n) {
                        return t + e * (n - t)
                    }
                    ,
                    e.prototype.linearInterpolation = function(e, t, n) {
                        return e * n + (1 - e) * t
                    }
                    ,
                    e.prototype.quadraticOutInterpolation = function(e, t, n) {
                        return this.linearInterpolation(2 * e - e * e, t, n)
                    }
                    ,
                    e.prototype.b3Friction1 = function(e) {
                        return 7e-4 * Math.pow(e, 3) - .031 * Math.pow(e, 2) + .64 * e + 1.28
                    }
                    ,
                    e.prototype.b3Friction2 = function(e) {
                        return 44e-6 * Math.pow(e, 3) - .006 * Math.pow(e, 2) + .36 * e + 2
                    }
                    ,
                    e.prototype.b3Friction3 = function(e) {
                        return 45e-8 * Math.pow(e, 3) - 332e-6 * Math.pow(e, 2) + .1078 * e + 5.84
                    }
                    ,
                    e.prototype.b3Nobounce = function(e) {
                        return e <= 18 ? this.b3Friction1(e) : e > 18 && e <= 44 ? this.b3Friction2(e) : this.b3Friction3(e)
                    }
                    ,
                    e
                }()
                  , O = function() {
                    function e(t, n) {
                        E(this, e),
                        this.tension = t,
                        this.friction = n
                    }
                    return e.fromOrigamiTensionAndFriction = function(t, n) {
                        return new e(x(t),_(n))
                    }
                    ,
                    e.fromBouncinessAndSpeed = function(t, n) {
                        var s = new w(t,n);
                        return e.fromOrigamiTensionAndFriction(s.bouncyTension, s.bouncyFriction)
                    }
                    ,
                    e.coastingConfigWithOrigamiFriction = function(t) {
                        return new e(0,_(t))
                    }
                    ,
                    e
                }();
                O.DEFAULT_ORIGAMI_SPRING_CONFIG = O.fromOrigamiTensionAndFriction(40, 7);
                var P = function e() {
                    E(this, e),
                    this.position = 0,
                    this.velocity = 0
                }
                  , L = function() {
                    function e(t) {
                        E(this, e),
                        this.listeners = [],
                        this._startValue = 0,
                        this._currentState = new P,
                        this._displacementFromRestThreshold = .001,
                        this._endValue = 0,
                        this._overshootClampingEnabled = !1,
                        this._previousState = new P,
                        this._restSpeedThreshold = .001,
                        this._tempState = new P,
                        this._timeAccumulator = 0,
                        this._wasAtRest = !0,
                        this._id = "s" + e._ID++,
                        this._springSystem = t
                    }
                    return e.prototype.destroy = function() {
                        this.listeners = [],
                        this._springSystem.deregisterSpring(this)
                    }
                    ,
                    e.prototype.getId = function() {
                        return this._id
                    }
                    ,
                    e.prototype.setSpringConfig = function(e) {
                        return this._springConfig = e,
                        this
                    }
                    ,
                    e.prototype.getSpringConfig = function() {
                        return this._springConfig
                    }
                    ,
                    e.prototype.setCurrentValue = function(e, t) {
                        return this._startValue = e,
                        this._currentState.position = e,
                        t || this.setAtRest(),
                        this.notifyPositionUpdated(!1, !1),
                        this
                    }
                    ,
                    e.prototype.getStartValue = function() {
                        return this._startValue
                    }
                    ,
                    e.prototype.getCurrentValue = function() {
                        return this._currentState.position
                    }
                    ,
                    e.prototype.getCurrentDisplacementDistance = function() {
                        return this.getDisplacementDistanceForState(this._currentState)
                    }
                    ,
                    e.prototype.getDisplacementDistanceForState = function(e) {
                        return Math.abs(this._endValue - e.position)
                    }
                    ,
                    e.prototype.setEndValue = function(e) {
                        if (this._endValue === e && this.isAtRest())
                            return this;
                        this._startValue = this.getCurrentValue(),
                        this._endValue = e,
                        this._springSystem.activateSpring(this.getId());
                        for (var t = 0, n = this.listeners.length; t < n; t++) {
                            var s = this.listeners[t].onSpringEndStateChange;
                            s && s(this)
                        }
                        return this
                    }
                    ,
                    e.prototype.getEndValue = function() {
                        return this._endValue
                    }
                    ,
                    e.prototype.setVelocity = function(e) {
                        return e === this._currentState.velocity || (this._currentState.velocity = e,
                        this._springSystem.activateSpring(this.getId())),
                        this
                    }
                    ,
                    e.prototype.getVelocity = function() {
                        return this._currentState.velocity
                    }
                    ,
                    e.prototype.setRestSpeedThreshold = function(e) {
                        return this._restSpeedThreshold = e,
                        this
                    }
                    ,
                    e.prototype.getRestSpeedThreshold = function() {
                        return this._restSpeedThreshold
                    }
                    ,
                    e.prototype.setRestDisplacementThreshold = function(e) {
                        this._displacementFromRestThreshold = e
                    }
                    ,
                    e.prototype.getRestDisplacementThreshold = function() {
                        return this._displacementFromRestThreshold
                    }
                    ,
                    e.prototype.setOvershootClampingEnabled = function(e) {
                        return this._overshootClampingEnabled = e,
                        this
                    }
                    ,
                    e.prototype.isOvershootClampingEnabled = function() {
                        return this._overshootClampingEnabled
                    }
                    ,
                    e.prototype.isOvershooting = function() {
                        var e = this._startValue
                          , t = this._endValue;
                        return this._springConfig.tension > 0 && (e < t && this.getCurrentValue() > t || e > t && this.getCurrentValue() < t)
                    }
                    ,
                    e.prototype.advance = function(t, n) {
                        var s = this.isAtRest();
                        if (!s || !this._wasAtRest) {
                            var i = n;
                            n > e.MAX_DELTA_TIME_SEC && (i = e.MAX_DELTA_TIME_SEC),
                            this._timeAccumulator += i;
                            for (var a = this._springConfig.tension, o = this._springConfig.friction, r = this._currentState.position, l = this._currentState.velocity, c = this._tempState.position, u = this._tempState.velocity, d = void 0, m = void 0, h = void 0, g = void 0, p = void 0, f = void 0, x = void 0, v = void 0; this._timeAccumulator >= e.SOLVER_TIMESTEP_SEC; )
                                this._timeAccumulator -= e.SOLVER_TIMESTEP_SEC,
                                this._timeAccumulator < e.SOLVER_TIMESTEP_SEC && (this._previousState.position = r,
                                this._previousState.velocity = l),
                                d = l,
                                m = a * (this._endValue - c) - o * l,
                                c = r + d * e.SOLVER_TIMESTEP_SEC * .5,
                                h = u = l + m * e.SOLVER_TIMESTEP_SEC * .5,
                                g = a * (this._endValue - c) - o * u,
                                c = r + h * e.SOLVER_TIMESTEP_SEC * .5,
                                p = u = l + g * e.SOLVER_TIMESTEP_SEC * .5,
                                f = a * (this._endValue - c) - o * u,
                                c = r + p * e.SOLVER_TIMESTEP_SEC,
                                x = u = l + f * e.SOLVER_TIMESTEP_SEC,
                                v = 1 / 6 * (m + 2 * (g + f) + (a * (this._endValue - c) - o * u)),
                                r += 1 / 6 * (d + 2 * (h + p) + x) * e.SOLVER_TIMESTEP_SEC,
                                l += v * e.SOLVER_TIMESTEP_SEC;
                            this._tempState.position = c,
                            this._tempState.velocity = u,
                            this._currentState.position = r,
                            this._currentState.velocity = l,
                            this._timeAccumulator > 0 && this._interpolate(this._timeAccumulator / e.SOLVER_TIMESTEP_SEC),
                            (this.isAtRest() || this._overshootClampingEnabled && this.isOvershooting()) && (this._springConfig.tension > 0 ? (this._startValue = this._endValue,
                            this._currentState.position = this._endValue) : (this._endValue = this._currentState.position,
                            this._startValue = this._endValue),
                            this.setVelocity(0),
                            s = !0);
                            var _ = !1;
                            this._wasAtRest && (this._wasAtRest = !1,
                            _ = !0);
                            var b = !1;
                            s && (this._wasAtRest = !0,
                            b = !0),
                            this.notifyPositionUpdated(_, b)
                        }
                    }
                    ,
                    e.prototype.notifyPositionUpdated = function(e, t) {
                        for (var n = 0, s = this.listeners.length; n < s; n++) {
                            var i = this.listeners[n];
                            e && i.onSpringActivate && i.onSpringActivate(this),
                            i.onSpringUpdate && i.onSpringUpdate(this),
                            t && i.onSpringAtRest && i.onSpringAtRest(this)
                        }
                    }
                    ,
                    e.prototype.systemShouldAdvance = function() {
                        return !this.isAtRest() || !this.wasAtRest()
                    }
                    ,
                    e.prototype.wasAtRest = function() {
                        return this._wasAtRest
                    }
                    ,
                    e.prototype.isAtRest = function() {
                        return Math.abs(this._currentState.velocity) < this._restSpeedThreshold && (this.getDisplacementDistanceForState(this._currentState) <= this._displacementFromRestThreshold || 0 === this._springConfig.tension)
                    }
                    ,
                    e.prototype.setAtRest = function() {
                        return this._endValue = this._currentState.position,
                        this._tempState.position = this._currentState.position,
                        this._currentState.velocity = 0,
                        this
                    }
                    ,
                    e.prototype._interpolate = function(e) {
                        this._currentState.position = this._currentState.position * e + this._previousState.position * (1 - e),
                        this._currentState.velocity = this._currentState.velocity * e + this._previousState.velocity * (1 - e)
                    }
                    ,
                    e.prototype.getListeners = function() {
                        return this.listeners
                    }
                    ,
                    e.prototype.addListener = function(e) {
                        return this.listeners.push(e),
                        this
                    }
                    ,
                    e.prototype.removeListener = function(e) {
                        return r(this.listeners, e),
                        this
                    }
                    ,
                    e.prototype.removeAllListeners = function() {
                        return this.listeners = [],
                        this
                    }
                    ,
                    e.prototype.currentValueIsApproximately = function(e) {
                        return Math.abs(this.getCurrentValue() - e) <= this.getRestDisplacementThreshold()
                    }
                    ,
                    e
                }();
                L._ID = 0,
                L.MAX_DELTA_TIME_SEC = .064,
                L.SOLVER_TIMESTEP_SEC = .001;
                var A = function() {
                    function e(t) {
                        E(this, e),
                        this.listeners = [],
                        this._activeSprings = [],
                        this._idleSpringIndices = [],
                        this._isIdle = !0,
                        this._lastTimeMillis = -1,
                        this._springRegistry = {},
                        this.looper = t || new S,
                        this.looper.springSystem = this
                    }
                    return e.prototype.setLooper = function(e) {
                        this.looper = e,
                        e.springSystem = this
                    }
                    ,
                    e.prototype.createSpring = function(e, t) {
                        var n = void 0;
                        return n = void 0 === e || void 0 === t ? O.DEFAULT_ORIGAMI_SPRING_CONFIG : O.fromOrigamiTensionAndFriction(e, t),
                        this.createSpringWithConfig(n)
                    }
                    ,
                    e.prototype.createSpringWithBouncinessAndSpeed = function(e, t) {
                        var n = void 0;
                        return n = void 0 === e || void 0 === t ? O.DEFAULT_ORIGAMI_SPRING_CONFIG : O.fromBouncinessAndSpeed(e, t),
                        this.createSpringWithConfig(n)
                    }
                    ,
                    e.prototype.createSpringWithConfig = function(e) {
                        var t = new L(this);
                        return this.registerSpring(t),
                        t.setSpringConfig(e),
                        t
                    }
                    ,
                    e.prototype.getIsIdle = function() {
                        return this._isIdle
                    }
                    ,
                    e.prototype.getSpringById = function(e) {
                        return this._springRegistry[e]
                    }
                    ,
                    e.prototype.getAllSprings = function() {
                        var e = [];
                        for (var t in this._springRegistry)
                            this._springRegistry.hasOwnProperty(t) && e.push(this._springRegistry[t]);
                        return e
                    }
                    ,
                    e.prototype.registerSpring = function(e) {
                        this._springRegistry[e.getId()] = e
                    }
                    ,
                    e.prototype.deregisterSpring = function(e) {
                        r(this._activeSprings, e),
                        delete this._springRegistry[e.getId()]
                    }
                    ,
                    e.prototype.advance = function(e, t) {
                        for (; this._idleSpringIndices.length > 0; )
                            this._idleSpringIndices.pop();
                        for (var n = 0, s = this._activeSprings.length; n < s; n++) {
                            var i = this._activeSprings[n];
                            i.systemShouldAdvance() ? i.advance(e / 1e3, t / 1e3) : this._idleSpringIndices.push(this._activeSprings.indexOf(i))
                        }
                        for (; this._idleSpringIndices.length > 0; ) {
                            var a = this._idleSpringIndices.pop();
                            a >= 0 && this._activeSprings.splice(a, 1)
                        }
                    }
                    ,
                    e.prototype.loop = function(e) {
                        var t = void 0;
                        -1 === this._lastTimeMillis && (this._lastTimeMillis = e - 1);
                        var n = e - this._lastTimeMillis;
                        this._lastTimeMillis = e;
                        var s = 0
                          , i = this.listeners.length;
                        for (s = 0; s < i; s++)
                            (t = this.listeners[s]).onBeforeIntegrate && t.onBeforeIntegrate(this);
                        for (this.advance(e, n),
                        0 === this._activeSprings.length && (this._isIdle = !0,
                        this._lastTimeMillis = -1),
                        s = 0; s < i; s++)
                            (t = this.listeners[s]).onAfterIntegrate && t.onAfterIntegrate(this);
                        this._isIdle || this.looper.run()
                    }
                    ,
                    e.prototype.activateSpring = function(e) {
                        var t = this._springRegistry[e];
                        -1 === this._activeSprings.indexOf(t) && this._activeSprings.push(t),
                        this.getIsIdle() && (this._isIdle = !1,
                        this.looper.run())
                    }
                    ,
                    e.prototype.addListener = function(e) {
                        this.listeners.push(e)
                    }
                    ,
                    e.prototype.removeListener = function(e) {
                        r(this.listeners, e)
                    }
                    ,
                    e.prototype.removeAllListeners = function() {
                        this.listeners = []
                    }
                    ,
                    e
                }();
                return I({}, N, {
                    OrigamiValueConverter: T,
                    MathUtil: f,
                    Spring: L,
                    SpringConfig: O,
                    SpringSystem: A,
                    util: I({}, d, f)
                })
            }()
        },
        463: (e,t)=>{
            "use strict";
            function n(e, t) {
                var n = e.length;
                e.push(t);
                e: for (; 0 < n; ) {
                    var s = n - 1 >>> 1
                      , i = e[s];
                    if (!(0 < a(i, t)))
                        break e;
                    e[s] = t,
                    e[n] = i,
                    n = s
                }
            }
            function s(e) {
                return 0 === e.length ? null : e[0]
            }
            function i(e) {
                if (0 === e.length)
                    return null;
                var t = e[0]
                  , n = e.pop();
                if (n !== t) {
                    e[0] = n;
                    e: for (var s = 0, i = e.length, o = i >>> 1; s < o; ) {
                        var r = 2 * (s + 1) - 1
                          , l = e[r]
                          , c = r + 1
                          , u = e[c];
                        if (0 > a(l, n))
                            c < i && 0 > a(u, l) ? (e[s] = u,
                            e[c] = n,
                            s = c) : (e[s] = l,
                            e[r] = n,
                            s = r);
                        else {
                            if (!(c < i && 0 > a(u, n)))
                                break e;
                            e[s] = u,
                            e[c] = n,
                            s = c
                        }
                    }
                }
                return t
            }
            function a(e, t) {
                var n = e.sortIndex - t.sortIndex;
                return 0 !== n ? n : e.id - t.id
            }
            if ("object" == typeof performance && "function" == typeof performance.now) {
                var o = performance;
                t.unstable_now = function() {
                    return o.now()
                }
            } else {
                var r = Date
                  , l = r.now();
                t.unstable_now = function() {
                    return r.now() - l
                }
            }
            var c = []
              , u = []
              , d = 1
              , m = null
              , h = 3
              , g = !1
              , p = !1
              , f = !1
              , x = "function" == typeof setTimeout ? setTimeout : null
              , v = "function" == typeof clearTimeout ? clearTimeout : null
              , _ = "undefined" != typeof setImmediate ? setImmediate : null;
            function b(e) {
                for (var t = s(u); null !== t; ) {
                    if (null === t.callback)
                        i(u);
                    else {
                        if (!(t.startTime <= e))
                            break;
                        i(u),
                        t.sortIndex = t.expirationTime,
                        n(c, t)
                    }
                    t = s(u)
                }
            }
            function T(e) {
                if (f = !1,
                b(e),
                !p)
                    if (null !== s(c))
                        p = !0,
                        A(E);
                    else {
                        var t = s(u);
                        null !== t && M(T, t.startTime - e)
                    }
            }
            function E(e, n) {
                p = !1,
                f && (f = !1,
                v(j),
                j = -1),
                g = !0;
                var a = h;
                try {
                    for (b(n),
                    m = s(c); null !== m && (!(m.expirationTime > n) || e && !w()); ) {
                        var o = m.callback;
                        if ("function" == typeof o) {
                            m.callback = null,
                            h = m.priorityLevel;
                            var r = o(m.expirationTime <= n);
                            n = t.unstable_now(),
                            "function" == typeof r ? m.callback = r : m === s(c) && i(c),
                            b(n)
                        } else
                            i(c);
                        m = s(c)
                    }
                    if (null !== m)
                        var l = !0;
                    else {
                        var d = s(u);
                        null !== d && M(T, d.startTime - n),
                        l = !1
                    }
                    return l
                } finally {
                    m = null,
                    h = a,
                    g = !1
                }
            }
            "undefined" != typeof navigator && void 0 !== navigator.scheduling && void 0 !== navigator.scheduling.isInputPending && navigator.scheduling.isInputPending.bind(navigator.scheduling);
            var I, S = !1, y = null, j = -1, C = 5, N = -1;
            function w() {
                return !(t.unstable_now() - N < C)
            }
            function O() {
                if (null !== y) {
                    var e = t.unstable_now();
                    N = e;
                    var n = !0;
                    try {
                        n = y(!0, e)
                    } finally {
                        n ? I() : (S = !1,
                        y = null)
                    }
                } else
                    S = !1
            }
            if ("function" == typeof _)
                I = function() {
                    _(O)
                }
                ;
            else if ("undefined" != typeof MessageChannel) {
                var P = new MessageChannel
                  , L = P.port2;
                P.port1.onmessage = O,
                I = function() {
                    L.postMessage(null)
                }
            } else
                I = function() {
                    x(O, 0)
                }
                ;
            function A(e) {
                y = e,
                S || (S = !0,
                I())
            }
            function M(e, n) {
                j = x((function() {
                    e(t.unstable_now())
                }
                ), n)
            }
            t.unstable_IdlePriority = 5,
            t.unstable_ImmediatePriority = 1,
            t.unstable_LowPriority = 4,
            t.unstable_NormalPriority = 3,
            t.unstable_Profiling = null,
            t.unstable_UserBlockingPriority = 2,
            t.unstable_cancelCallback = function(e) {
                e.callback = null
            }
            ,
            t.unstable_continueExecution = function() {
                p || g || (p = !0,
                A(E))
            }
            ,
            t.unstable_forceFrameRate = function(e) {
                0 > e || 125 < e ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : C = 0 < e ? Math.floor(1e3 / e) : 5
            }
            ,
            t.unstable_getCurrentPriorityLevel = function() {
                return h
            }
            ,
            t.unstable_getFirstCallbackNode = function() {
                return s(c)
            }
            ,
            t.unstable_next = function(e) {
                switch (h) {
                case 1:
                case 2:
                case 3:
                    var t = 3;
                    break;
                default:
                    t = h
                }
                var n = h;
                h = t;
                try {
                    return e()
                } finally {
                    h = n
                }
            }
            ,
            t.unstable_pauseExecution = function() {}
            ,
            t.unstable_requestPaint = function() {}
            ,
            t.unstable_runWithPriority = function(e, t) {
                switch (e) {
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                    break;
                default:
                    e = 3
                }
                var n = h;
                h = e;
                try {
                    return t()
                } finally {
                    h = n
                }
            }
            ,
            t.unstable_scheduleCallback = function(e, i, a) {
                var o = t.unstable_now();
                switch ("object" == typeof a && null !== a ? a = "number" == typeof (a = a.delay) && 0 < a ? o + a : o : a = o,
                e) {
                case 1:
                    var r = -1;
                    break;
                case 2:
                    r = 250;
                    break;
                case 5:
                    r = 1073741823;
                    break;
                case 4:
                    r = 1e4;
                    break;
                default:
                    r = 5e3
                }
                return e = {
                    id: d++,
                    callback: i,
                    priorityLevel: e,
                    startTime: a,
                    expirationTime: r = a + r,
                    sortIndex: -1
                },
                a > o ? (e.sortIndex = a,
                n(u, e),
                null === s(c) && e === s(u) && (f ? (v(j),
                j = -1) : f = !0,
                M(T, a - o))) : (e.sortIndex = r,
                n(c, e),
                p || g || (p = !0,
                A(E))),
                e
            }
            ,
            t.unstable_shouldYield = w,
            t.unstable_wrapCallback = function(e) {
                var t = h;
                return function() {
                    var n = h;
                    h = t;
                    try {
                        return e.apply(this, arguments)
                    } finally {
                        h = n
                    }
                }
            }
        }
        ,
        982: (e,t,n)=>{
            "use strict";
            e.exports = n(463)
        }
    }
      , t = {};
    function n(s) {
        var i = t[s];
        if (void 0 !== i)
            return i.exports;
        var a = t[s] = {
            exports: {}
        };
        return e[s].call(a.exports, a, a.exports, n),
        a.exports
    }
    n.n = e=>{
        var t = e && e.__esModule ? ()=>e.default : ()=>e;
        return n.d(t, {
            a: t
        }),
        t
    }
    ,
    n.d = (e,t)=>{
        for (var s in t)
            n.o(t, s) && !n.o(e, s) && Object.defineProperty(e, s, {
                enumerable: !0,
                get: t[s]
            })
    }
    ,
    n.g = function() {
        if ("object" == typeof globalThis)
            return globalThis;
        try {
            return this || new Function("return this")()
        } catch (e) {
            if ("object" == typeof window)
                return window
        }
    }(),
    n.o = (e,t)=>Object.prototype.hasOwnProperty.call(e, t),
    n.r = e=>{
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
            value: "Module"
        }),
        Object.defineProperty(e, "__esModule", {
            value: !0
        })
    }
    ,
    (()=>{
        "use strict";
        var e = {};
        n.r(e),
        n.d(e, {
            Animation: ()=>ws,
            Animations: ()=>Os,
            ArcElement: ()=>ka,
            BarController: ()=>Qs,
            BarElement: ()=>eo,
            BasePlatform: ()=>wi,
            BasicPlatform: ()=>Oi,
            BubbleController: ()=>Zs,
            CategoryScale: ()=>nr,
            Chart: ()=>Pa,
            Colors: ()=>lo,
            DatasetController: ()=>Vs,
            Decimation: ()=>mo,
            DomPlatform: ()=>Wi,
            DoughnutController: ()=>Js,
            Element: ()=>Yi,
            Filler: ()=>wo,
            Interaction: ()=>pi,
            Legend: ()=>Ao,
            LineController: ()=>ei,
            LineElement: ()=>Wa,
            LinearScale: ()=>or,
            LogarithmicScale: ()=>mr,
            PieController: ()=>ni,
            PointElement: ()=>Ya,
            PolarAreaController: ()=>ti,
            RadarController: ()=>si,
            RadialLinearScale: ()=>Tr,
            Scale: ()=>na,
            ScatterController: ()=>ii,
            SubTitle: ()=>Do,
            Ticks: ()=>Zt,
            TimeScale: ()=>wr,
            TimeSeriesScale: ()=>Pr,
            Title: ()=>Ro,
            Tooltip: ()=>Zo,
            _adapters: ()=>li,
            _detectPlatform: ()=>zi,
            animator: ()=>js,
            controllers: ()=>ai,
            defaults: ()=>an,
            elements: ()=>to,
            layouts: ()=>Ni,
            plugins: ()=>Jo,
            registerables: ()=>Ar,
            registry: ()=>aa,
            scales: ()=>Lr
        });
        var t = {};
        n.r(t),
        n.d(t, {
            bindEvent: ()=>Zr,
            bindLocalValue: ()=>qr,
            bindMap: ()=>Xr,
            bindTrigger: ()=>Jr,
            bindTriggerWithArgs: ()=>el,
            bindValue: ()=>$r,
            call: ()=>nl,
            trigger: ()=>tl,
            useMapValue: ()=>ll,
            useMapValueOnChange: ()=>rl,
            useMapValues: ()=>cl,
            useReducedValue: ()=>il,
            useValue: ()=>sl,
            useValueOnChange: ()=>ol,
            useValueRef: ()=>al
        });
        var s = {};
        n.r(s),
        n.d(s, {
            Localized: ()=>gu,
            LocalizedBounds: ()=>ou,
            LocalizedDate: ()=>ju,
            LocalizedDuration: ()=>Uu,
            LocalizedEntityName: ()=>Ku,
            LocalizedFraction: ()=>uu,
            LocalizedNumber: ()=>Oc,
            LocalizedPercentage: ()=>$u,
            LocalizedString: ()=>cc,
            Unit: ()=>vc,
            useLocalization: ()=>sc
        });
        var i = {};
        n.r(i),
        n.d(i, {
            AdvisorItemType: ()=>ug,
            TutorialControlScheme: ()=>dg,
            TutorialPhaseType: ()=>mg,
            activateTutorial: ()=>qh,
            activateTutorialPhase: ()=>Xh,
            activateTutorialTag: ()=>ig,
            activeTutorial$: ()=>Wh,
            activeTutorialList$: ()=>Dh,
            activeTutorialPhase$: ()=>zh,
            advisorPanelVisible$: ()=>hg,
            completeActiveTutorial: ()=>eg,
            completeActiveTutorialPhase: ()=>Jh,
            completeIntro: ()=>tg,
            completeListIntro: ()=>ng,
            completeListOutro: ()=>sg,
            forceTutorial: ()=>Qh,
            listIntroActive$: ()=>Yh,
            listOutroActive$: ()=>$h,
            nextTutorial$: ()=>Fh,
            setTutorialListFocused: ()=>Hh,
            toggleAdvisorPanel: ()=>gg,
            toggleTutorialListFocus: ()=>Zh,
            triggerTutorialTag: ()=>ag,
            tutorialCategories$: ()=>Bh,
            tutorialGroups$: ()=>Gh,
            tutorialIntroActive$: ()=>kh,
            tutorialListFocused$: ()=>Vh,
            tutorialPending$: ()=>Uh,
            tutorials$: ()=>Kh,
            tutorialsEnabled$: ()=>Rh,
            untriggerTutorialTag: ()=>og,
            useTutorialTag: ()=>cg,
            useTutorialTagActivation: ()=>rg,
            useTutorialTagTrigger: ()=>lg
        });
        var a = {};
        n.r(a),
        n.d(a, {
            activeInfoview$: ()=>ef,
            ageData$: ()=>tv,
            arrestedCriminals$: ()=>Ex,
            attractiveness$: ()=>Fx,
            availableFertility$: ()=>gv,
            availableFish$: ()=>Tv,
            availableForest$: ()=>hv,
            availableOil$: ()=>dv,
            availableOre$: ()=>mv,
            averageAirPollution$: ()=>mx,
            averageCrimeProbability$: ()=>fx,
            averageFireHazard$: ()=>px,
            averageGroundPollution$: ()=>dx,
            averageHealth$: ()=>Hf,
            averageHotelPrice$: ()=>Ux,
            averageLandValue$: ()=>Ox,
            averageNoisePollution$: ()=>gx,
            averageWaterPollution$: ()=>hx,
            batteryCharge$: ()=>gf,
            birthRate$: ()=>Xx,
            cemeteryAvailability$: ()=>Jf,
            cemeteryCapacity$: ()=>Wf,
            cemeteryUse$: ()=>Kf,
            clearActiveInfoview: ()=>sf,
            closeInfoviewMenu: ()=>tf,
            collectedMail$: ()=>Hx,
            collegeAvailability$: ()=>Bf,
            collegeCapacity$: ()=>Pf,
            collegeEligible$: ()=>Cf,
            collegeStudents$: ()=>kf,
            commercialLevels$: ()=>Lx,
            commercialProfitability$: ()=>nv,
            crimePerMonth$: ()=>Nx,
            crimeProbability$: ()=>bx,
            crimeProducers$: ()=>_x,
            criminals$: ()=>Cx,
            deathRate$: ()=>zf,
            deathcareAvailability$: ()=>Zf,
            deliveredMail$: ()=>Kx,
            educationData$: ()=>Af,
            electricityAvailability$: ()=>df,
            electricityConsumption$: ()=>of,
            electricityExport$: ()=>cf,
            electricityImport$: ()=>uf,
            electricityProduction$: ()=>rf,
            electricityTrade$: ()=>hf,
            electricityTransmission$: ()=>mf,
            electricityTransmitted$: ()=>lf,
            elementaryAvailability$: ()=>Ff,
            elementaryCapacity$: ()=>wf,
            elementaryEligible$: ()=>yf,
            elementaryStudents$: ()=>Mf,
            employed$: ()=>Yx,
            employeesData$: ()=>yv,
            escapedRate$: ()=>wx,
            fertilityExtractionRate$: ()=>vv,
            fertilityRenewalRate$: ()=>bv,
            fishExtractionRate$: ()=>Ev,
            fishRenewalRate$: ()=>Iv,
            forestExtractionRate$: ()=>xv,
            forestRenewalRate$: ()=>_v,
            garbageProcessingRate$: ()=>ex,
            garbageProductionRate$: ()=>ix,
            healthcareAvailability$: ()=>Qf,
            highSchoolAvailability$: ()=>Uf,
            highSchoolCapacity$: ()=>Of,
            highSchoolEligible$: ()=>jf,
            highSchoolStudents$: ()=>Rf,
            homeless$: ()=>Qx,
            homelessness$: ()=>Zx,
            inJail$: ()=>Ix,
            inPrison$: ()=>jx,
            industrialLevels$: ()=>Ax,
            industrialProfitability$: ()=>sv,
            infoviews$: ()=>Jp,
            jailAvailability$: ()=>xx,
            jailCapacity$: ()=>Tx,
            jobs$: ()=>$x,
            landfillAvailability$: ()=>sx,
            landfillCapacity$: ()=>tx,
            mailProductionRate$: ()=>Vx,
            movedAway$: ()=>ev,
            movedIn$: ()=>Jx,
            officeLevels$: ()=>Mx,
            officeProfitability$: ()=>iv,
            oilExtractionRate$: ()=>pv,
            oreExtractionRate$: ()=>fv,
            parkedCars$: ()=>lx,
            parkingAvailability$: ()=>cx,
            parkingCapacity$: ()=>ox,
            parkingIncome$: ()=>rx,
            patientCapacity$: ()=>Xf,
            patientCount$: ()=>qf,
            population$: ()=>zx,
            postServiceAvailability$: ()=>Wx,
            prisonAvailability$: ()=>vx,
            prisonCapacity$: ()=>Sx,
            prisoners$: ()=>yx,
            processingAvailability$: ()=>nx,
            processingRate$: ()=>Yf,
            residentialLevels$: ()=>Px,
            setActiveInfoview: ()=>nf,
            setInfomodeActive: ()=>af,
            sewageAvailability$: ()=>Ef,
            sewageCapacity$: ()=>xf,
            sewageConsumption$: ()=>vf,
            sewageExport$: ()=>Tf,
            shelterAvailability$: ()=>Dx,
            shelterCapacity$: ()=>kx,
            shelteredCount$: ()=>Rx,
            sickCount$: ()=>$f,
            storedGarbage$: ()=>ax,
            topExportColors$: ()=>cv,
            topExportData$: ()=>uv,
            topExportNames$: ()=>lv,
            topImportColors$: ()=>ov,
            topImportData$: ()=>rv,
            topImportNames$: ()=>av,
            tourismRate$: ()=>Bx,
            trafficFlow$: ()=>ux,
            transportSummaries$: ()=>Vf,
            unemployment$: ()=>qx,
            universityAvailability$: ()=>Gf,
            universityCapacity$: ()=>Lf,
            universityEligible$: ()=>Nf,
            universityStudents$: ()=>Df,
            useInfoviewToggle: ()=>Nv,
            waterAvailability$: ()=>If,
            waterCapacity$: ()=>pf,
            waterConsumption$: ()=>ff,
            waterExport$: ()=>_f,
            waterImport$: ()=>bf,
            waterTrade$: ()=>Sf,
            weatherEffect$: ()=>Gx,
            workers$: ()=>Cv,
            workplacesData$: ()=>Sv,
            worksplaces$: ()=>jv
        });
        var o = {};
        n.r(o),
        n.d(o, {
            CityInfoPanelTab: ()=>Xv,
            EconomyPanelTab: ()=>$v,
            GamePanelType: ()=>Fv,
            GameScreen: ()=>Ov,
            LayoutPosition: ()=>Pv,
            ProgressionPanelTab: ()=>Uv,
            TransportationOverviewPanelTab: ()=>Zv,
            activeGamePanel$: ()=>Bv,
            activeGameScreen$: ()=>Lv,
            activePanelPosition$: ()=>Vv,
            blockingPanelActive$: ()=>Gv,
            canUseSaveSystem$: ()=>Mv,
            closeActiveGamePanel: ()=>zv,
            closeGamePanel: ()=>Wv,
            setActiveGameScreen: ()=>Av,
            showCityInfoPanel: ()=>Jv,
            showEconomyPanel: ()=>Qv,
            showFreeCameraScreen: ()=>Dv,
            showGamePanel: ()=>Kv,
            showLifePathDetail: ()=>s_,
            showLifePathList: ()=>n_,
            showMainScreen: ()=>Rv,
            showPauseScreen: ()=>kv,
            showProgressionPanel: ()=>qv,
            showTransportationOverviewPanel: ()=>e_,
            toggleGamePanel: ()=>Hv,
            toggleInfoviewMenu: ()=>Yv,
            toggleLifePathPanel: ()=>t_,
            toggleRadioPanel: ()=>i_,
            toggleTransportationOverviewPanel: ()=>a_
        });
        var r = {};
        n.r(r),
        n.d(r, {
            emptyPrefabDetails: ()=>_T,
            manualUITags$: ()=>vT,
            prefabDetails$: ()=>xT,
            themes$: ()=>fT
        });
        var l = {};
        n.r(l),
        n.d(l, {
            Button: ()=>sS,
            ConfirmationDialog: ()=>zI,
            DialogContext: ()=>vE,
            DialogRenderer: ()=>bE,
            DialogStack: ()=>xE,
            Dropdown: ()=>fS,
            DropdownItem: ()=>bS,
            DropdownToggle: ()=>xS,
            FloatingButton: ()=>aS,
            FormattedParagraphs: ()=>Cb,
            FormattedText: ()=>Eb,
            Icon: ()=>ZS,
            MarkdownRenderer: ()=>sy,
            MarkupRenderer: ()=>pb,
            MenuButton: ()=>iS,
            Panel: ()=>zS,
            PanelFoldout: ()=>GS,
            PanelSection: ()=>yS,
            PanelSectionRow: ()=>KS,
            Portal: ()=>JS,
            Scrollable: ()=>mb,
            Tooltip: ()=>Eg
        });
        var c = {};
        n.r(c);
        var u = {};
        n.r(u),
        n.d(u, {
            focusEntity: ()=>ry,
            focusedEntity$: ()=>oy
        });
        var d = {};
        n.r(d),
        n.d(d, {
            addLike: ()=>dy,
            chirpAdded$: ()=>uy,
            chirps$: ()=>cy,
            removeLike: ()=>my,
            selectLink: ()=>hy
        });
        var m = {};
        n.r(m),
        n.d(m, {
            addKeyFrame: ()=>Oy,
            availableCloudTargets$: ()=>Gy,
            captureKey: ()=>jy,
            cinematicCameraSequenceAssets$: ()=>By,
            deleteCinematicCameraSequence: ()=>Fy,
            getControllerDelta: ()=>Ly,
            getControllerPanDelta: ()=>My,
            getControllerZoomDelta: ()=>Ay,
            group: ()=>gy,
            lastLoadedCinematicCameraSequence$: ()=>Uy,
            loadCinematicCameraSequence: ()=>Dy,
            loop$: ()=>vy,
            modifierAnimationCurveData$: ()=>Wy,
            moveKeyFrame: ()=>Ny,
            onAfterPlaybackDurationChange: ()=>Ey,
            playbackDuration$: ()=>py,
            playing$: ()=>by,
            removeCameraTransformKey: ()=>Cy,
            removeKeyFrame: ()=>wy,
            resetCinematicCameraSequence: ()=>Py,
            saveCinematicCameraSequence: ()=>ky,
            selectCloudTarget: ()=>Hy,
            selectedCloudTarget$: ()=>Vy,
            setPlaybackDuration: ()=>Ty,
            setTimelinePosition: ()=>Iy,
            stopPlayback: ()=>Sy,
            timelineLength$: ()=>xy,
            timelinePosition$: ()=>fy,
            toggleCurveEditorFocus: ()=>Ry,
            toggleLoop: ()=>_y,
            togglePlayback: ()=>yy,
            transformAnimationCurveData$: ()=>Ky,
            useCinematicCameraBindings: ()=>zy
        });
        var h = {};
        n.r(h),
        n.d(h, {
            commercialDemand$: ()=>Qy,
            commercialFactors$: ()=>sj,
            happiness$: ()=>oj,
            happinessFactors$: ()=>rj,
            industrialDemand$: ()=>Zy,
            industrialFactors$: ()=>ij,
            officeDemand$: ()=>Jy,
            officeFactors$: ()=>aj,
            residentialHighDemand$: ()=>Xy,
            residentialHighFactors$: ()=>nj,
            residentialLowDemand$: ()=>$y,
            residentialLowFactors$: ()=>ej,
            residentialMediumDemand$: ()=>qy,
            residentialMediumFactors$: ()=>tj
        });
        var g = {};
        n.r(g),
        n.d(g, {
            WeatherType: ()=>cj,
            seasonNameId$: ()=>uj,
            temperature$: ()=>mj,
            weather$: ()=>dj
        });
        var p = {};
        n.r(p),
        n.d(p, {
            expenseItems$: ()=>vj,
            expenseValues$: ()=>_j,
            getItemValue: ()=>bj,
            incomeItems$: ()=>fj,
            incomeValues$: ()=>xj,
            totalExpenses$: ()=>pj,
            totalIncome$: ()=>gj
        });
        var f = {};
        n.r(f),
        n.d(f, {
            acceptLoanOffer: ()=>jj,
            currentLoan$: ()=>Ij,
            loanLimit$: ()=>Ej,
            loanOffer$: ()=>Sj,
            requestLoanOffer: ()=>yj,
            resetLoanOffer: ()=>Cj
        });
        var x = {};
        n.r(x),
        n.d(x, {
            maxProgress$: ()=>wj,
            resourceCategories$: ()=>Oj,
            resourceData$: ()=>Mj,
            resourceDetails$: ()=>Pj,
            resources$: ()=>Lj,
            services$: ()=>Aj
        });
        var v = {};
        n.r(v),
        n.d(v, {
            resetService: ()=>Bj,
            serviceDetails$: ()=>Dj,
            services$: ()=>kj,
            setServiceBudget: ()=>Fj,
            setServiceFee: ()=>Uj
        });
        var _ = {};
        n.r(_),
        n.d(_, {
            eventMap$: ()=>Vj,
            events$: ()=>Hj,
            onCloseJournal: ()=>Wj,
            onOpenJournal: ()=>Kj
        });
        var b = {};
        n.r(b);
        var T = {};
        n.r(T),
        n.d(T, {
            LifePathItemType: ()=>Yj,
            followCitizen: ()=>Zj,
            followedCitizens$: ()=>$j,
            lifePathDetails$: ()=>qj,
            lifePathItems$: ()=>Xj,
            maxFollowedCitizens$: ()=>Qj,
            unfollowCitizen: ()=>Jj
        });
        var E = {};
        n.r(E),
        n.d(E, {
            PhotoWidgetType: ()=>cC,
            adjustments$: ()=>gC,
            cinematicCameraVisible$: ()=>uC,
            group: ()=>eC,
            orbitCameraActive$: ()=>iC,
            overlayHidden$: ()=>nC,
            resetCamera: ()=>tC,
            root: ()=>hC,
            selectTab: ()=>rC,
            selectedTab$: ()=>mC,
            setOverlayHidden: ()=>sC,
            tabs$: ()=>dC,
            takeScreenshot: ()=>oC,
            toggleCinematicCamera: ()=>lC,
            toggleOrbitCameraActive: ()=>aC
        });
        var I = {};
        n.r(I),
        n.d(I, {
            MapTileStatus: ()=>fC,
            availableWater$: ()=>bC,
            buildableLand$: ()=>_C,
            disableMapTileView: ()=>NC,
            mapTilePanelVisible$: ()=>xC,
            mapTileViewActive$: ()=>vC,
            permitCost$: ()=>jC,
            permits$: ()=>yC,
            purchaseFlags$: ()=>SC,
            purchaseMapTiles: ()=>wC,
            purchasePrice$: ()=>EC,
            purchaseUpkeep$: ()=>IC,
            resources$: ()=>TC,
            setMapTileViewActive: ()=>CC
        });
        var S = {};
        n.r(S),
        n.d(S, {
            cityPolicies$: ()=>PC,
            setCityPolicy: ()=>AC,
            setPolicy: ()=>UC
        });
        var y = {};
        n.r(y),
        n.d(y, {
            CityModifierType: ()=>RC,
            LeisureType: ()=>DC,
            LocalModifierType: ()=>kC,
            PrefabEffectType: ()=>MC
        });
        var j = {};
        n.r(j),
        n.d(j, {
            CONSUMPTION_PROPERTY: ()=>GC,
            ELECTRICITY_PROPERTY: ()=>KC,
            POLLUTION_PROPERTY: ()=>VC,
            Pollution: ()=>BC,
            TRANSPORT_STOP_PROPERTY: ()=>YC,
            UPKEEPNUMBER2_PROPERTY: ()=>qC,
            UPKEEPNUMBER_PROPERTY: ()=>$C,
            Voltage: ()=>HC
        });
        var C = {};
        n.r(C),
        n.d(C, {
            AreaType: ()=>WC,
            PrefabRequirementType: ()=>zC
        });
        var N = {};
        n.r(N),
        n.d(N, {
            devPoints$: ()=>QC,
            nodeDetails$: ()=>tN,
            nodes$: ()=>eN,
            purchaseNode: ()=>iN,
            selectedDevTree$: ()=>nN,
            selectedNode$: ()=>sN,
            serviceDetails$: ()=>JC,
            services$: ()=>ZC
        });
        var w = {};
        n.r(w),
        n.d(w, {
            isFeatureLocked: ()=>lN,
            lockedFeatures$: ()=>aN,
            useFeatureLocked: ()=>rN,
            useFeatureUnlocking: ()=>oN
        });
        var O = {};
        n.r(O),
        n.d(O, {
            MilestoneUnlockType: ()=>NN,
            achievedMilestone$: ()=>ON,
            achievedMilestoneXP$: ()=>PN,
            clearUnlockedMilestone: ()=>FN,
            defaultMilestoneDetails: ()=>wN,
            maxMilestoneReached$: ()=>RN,
            milestoneDetails$: ()=>UN,
            milestoneUnlocks$: ()=>BN,
            milestones$: ()=>kN,
            nextMilestoneXP$: ()=>LN,
            totalXP$: ()=>AN,
            unlockDetails$: ()=>GN,
            unlockedMilestone$: ()=>DN,
            xpMessageAdded$: ()=>MN
        });
        var P = {};
        n.r(P),
        n.d(P, {
            removeUnlockedSignature: ()=>KN,
            unlockedSignatures$: ()=>HN
        });
        var L = {};
        n.r(L),
        n.d(L, {
            currentSegment$: ()=>iw,
            emergencyFocusable$: ()=>ZN,
            emergencyMessage$: ()=>JN,
            emergencyMode$: ()=>QN,
            focusEmergency: ()=>pw,
            muted$: ()=>qN,
            networks$: ()=>nw,
            paused$: ()=>$N,
            playNext: ()=>gw,
            playPrevious: ()=>hw,
            radioEnabled$: ()=>zN,
            segmentChanged$: ()=>aw,
            selectNetwork: ()=>fw,
            selectStation: ()=>xw,
            selectedNetwork$: ()=>ew,
            selectedStation$: ()=>tw,
            setMuted: ()=>cw,
            setPaused: ()=>rw,
            setSkipAds: ()=>dw,
            setVolume: ()=>ow,
            skipAds$: ()=>XN,
            stations$: ()=>sw,
            toggleMuted: ()=>uw,
            togglePaused: ()=>lw,
            toggleSkipAds: ()=>mw,
            volume$: ()=>YN
        });
        var A = {};
        n.r(A),
        n.d(A, {
            DeveloperSubsectionType: ()=>Pw,
            HouseholdSidebarVariant: ()=>Xw,
            LINE_STOP: ()=>Qw,
            LINE_VEHICLE: ()=>Zw,
            MailSectionType: ()=>Ow,
            Pollution: ()=>ww,
            SectionType: ()=>Nw,
            UpgradeType: ()=>Lw,
            activeSelection$: ()=>kw,
            bottomSections$: ()=>Bw,
            clearSelection: ()=>qw,
            developerSection$: ()=>Vw,
            householdSidebarSection$: ()=>Kw,
            lineVisualizerSection$: ()=>Hw,
            middleSections$: ()=>Uw,
            selectEntity: ()=>Yw,
            selectedEntity$: ()=>Aw,
            selectedInfoPosition$: ()=>Dw,
            selectedRoute$: ()=>zw,
            selectedTrailerController$: ()=>Mw,
            selectedUITag$: ()=>Rw,
            setSelectedRoute: ()=>$w,
            titleSection$: ()=>Gw,
            tooltipTags$: ()=>Ww,
            topSections$: ()=>Fw,
            useGeneratedTooltipParagraphs: ()=>tO,
            useTooltipParagraph: ()=>Jw,
            useTooltipParagraphs: ()=>eO
        });
        var M = {};
        n.r(M),
        n.d(M, {
            activeCategory$: ()=>rO,
            activeGroup$: ()=>oO,
            addStat: ()=>fO,
            addStatChildren: ()=>xO,
            clearStats: ()=>_O,
            removeStat: ()=>vO,
            sampleCount$: ()=>aO,
            sampleRange$: ()=>iO,
            selectedStatistics$: ()=>hO,
            setSampleRange: ()=>bO,
            stacked$: ()=>lO,
            statGroupsMap$: ()=>dO,
            statLabels$: ()=>uO,
            statUnlockingRequirements$: ()=>gO,
            statisticsCategories$: ()=>cO,
            statsData$: ()=>mO,
            updatesPerDay$: ()=>pO
        });
        var R = {};
        n.r(R),
        n.d(R, {
            areaResourceTaxRanges$: ()=>PO,
            areaResources$: ()=>LO,
            areaTaxEffects$: ()=>OO,
            areaTaxIncomes$: ()=>wO,
            areaTaxRates$: ()=>NO,
            areaTypes$: ()=>CO,
            maxTaxRate: ()=>jO,
            minTaxRate: ()=>yO,
            resourceTaxIncomes: ()=>MO,
            resourceTaxRates: ()=>AO,
            setAreaTaxRate: ()=>DO,
            setResourceTaxRate: ()=>FO,
            setTaxRate: ()=>kO,
            taxEffect: ()=>IO,
            taxIncome: ()=>SO,
            taxRate: ()=>EO,
            taxResourceInfos: ()=>RO
        });
        var k = {};
        n.r(k),
        n.d(k, {
            LightingState: ()=>BO,
            calculateDateFromDays: ()=>ZO,
            calculateDateFromTicks: ()=>JO,
            calculateDateTimeFromTicks: ()=>eP,
            calculateMinutesSinceMidnightFromTicks: ()=>tP,
            calculateTimeFromMinutesSinceMidnight: ()=>QO,
            dateEquals: ()=>XO,
            day$: ()=>HO,
            lightingState$: ()=>KO,
            setSimulationPaused: ()=>$O,
            setSimulationSpeed: ()=>qO,
            simulationPaused$: ()=>WO,
            simulationPausedBarrier$: ()=>YO,
            simulationSpeed$: ()=>zO,
            ticks$: ()=>VO,
            timeSettings$: ()=>GO
        });
        var D = {};
        n.r(D),
        n.d(D, {
            AREA_TOOL: ()=>HP,
            BULLDOZE_TOOL: ()=>BP,
            DEFAULT_TOOL: ()=>GP,
            NET_TOOL: ()=>KP,
            OBJECT_TOOL: ()=>WP,
            ROUTE_TOOL: ()=>qP,
            SELECTION_TOOL: ()=>$P,
            TERRAIN_TOOL: ()=>YP,
            UPGRADE_TOOL: ()=>zP,
            ZONE_TOOL: ()=>VP,
            activeTool$: ()=>iP,
            allSnapMask$: ()=>lP,
            allowBrush$: ()=>XP,
            availableSnapMask$: ()=>oP,
            brushAngle$: ()=>iL,
            brushHeight$: ()=>tL,
            brushHeightMax$: ()=>sL,
            brushHeightMin$: ()=>nL,
            brushSize$: ()=>JP,
            brushSizeMax$: ()=>oL,
            brushSizeMin$: ()=>aL,
            brushStrength$: ()=>eL,
            brushes$: ()=>ZP,
            bulldozeConfirmationRequested$: ()=>aP,
            changeElevation: ()=>OP,
            color$: ()=>TP,
            colorSupported$: ()=>bP,
            confirmBulldoze: ()=>wP,
            distance$: ()=>SP,
            distanceScale$: ()=>yP,
            elevation$: ()=>dP,
            elevationDown: ()=>LP,
            elevationDownDisabled$: ()=>vP,
            elevationRange$: ()=>uP,
            elevationScroll: ()=>AP,
            elevationStep$: ()=>mP,
            elevationUp: ()=>PP,
            elevationUpDisabled$: ()=>_P,
            isEditor$: ()=>EP,
            parallelMode$: ()=>gP,
            parallelModeSupported$: ()=>hP,
            parallelOffset$: ()=>pP,
            replacingTrees$: ()=>IP,
            selectBrush: ()=>rL,
            selectTool: ()=>CP,
            selectToolMode: ()=>NP,
            selectedBrush$: ()=>QP,
            selectedSnapMask$: ()=>rP,
            setBrushAngle: ()=>uL,
            setBrushHeight: ()=>dL,
            setBrushSize: ()=>lL,
            setBrushStrength: ()=>cL,
            setColor: ()=>jP,
            setDistance: ()=>UP,
            setElevationStep: ()=>MP,
            setParallelOffset: ()=>DP,
            setSelectedSnapMask: ()=>RP,
            setUndergroundMode: ()=>FP,
            snapOptionNames$: ()=>cP,
            toggleParallelMode: ()=>kP,
            undergroundMode$: ()=>xP,
            undergroundModeSupported$: ()=>fP
        });
        var F = {};
        n.r(F),
        n.d(F, {
            AgeMask: ()=>gL,
            CompareAssetsByPriority: ()=>RL,
            ToolbarItemType: ()=>hL,
            ageMask$: ()=>jL,
            assetCategories$: ()=>fL,
            assetPacks$: ()=>TL,
            assets$: ()=>xL,
            clearAssetSelection: ()=>AL,
            selectAsset: ()=>LL,
            selectAssetCategory: ()=>PL,
            selectAssetMenu: ()=>OL,
            selectedAsset$: ()=>yL,
            selectedAssetCategory$: ()=>SL,
            selectedAssetMenu$: ()=>IL,
            selectedAssetPacks$: ()=>EL,
            selectedThemes$: ()=>_L,
            setAgeMask: ()=>CL,
            setSelectedAssetPacks: ()=>wL,
            setSelectedThemes: ()=>NL,
            themes$: ()=>vL,
            toggleToolOptions: ()=>ML,
            toolbarGroups$: ()=>pL,
            vegetationAges$: ()=>bL
        });
        var U = {};
        n.r(U),
        n.d(U, {
            cityName$: ()=>BL,
            money$: ()=>FL,
            moneyDelta$: ()=>UL,
            moneyTrendThresholds$: ()=>HL,
            population$: ()=>kL,
            populationDelta$: ()=>DL,
            populationTrendThresholds$: ()=>VL,
            setCityName: ()=>KL,
            unlimitedMoney$: ()=>GL
        });
        var B = {};
        n.r(B),
        n.d(B, {
            cargoTypes$: ()=>YL,
            deleteLine: ()=>ZL,
            hideLine: ()=>sA,
            passengerTypes$: ()=>zL,
            renameLine: ()=>JL,
            resetVisibility: ()=>aA,
            selectLine: ()=>QL,
            selectedCargoType$: ()=>XL,
            selectedPassengerType$: ()=>qL,
            setLineActive: ()=>tA,
            setLineColor: ()=>eA,
            setLineSchedule: ()=>iA,
            setSelectedCargoType: ()=>lA,
            setSelectedPassengerType: ()=>rA,
            showLine: ()=>nA,
            toggleHighlight: ()=>oA,
            transportLines$: ()=>$L
        });
        var G = {};
        n.r(G),
        n.d(G, {
            clearUpgradeSelection: ()=>pA,
            selectUpgrade: ()=>gA,
            selectedUpgrade$: ()=>mA,
            upgradeDetails$: ()=>dA,
            upgrades$: ()=>uA,
            upgrading$: ()=>hA
        });
        var V = {};
        n.r(V),
        n.d(V, {
            budget: ()=>c,
            camera: ()=>u,
            chirper: ()=>d,
            cinematic: ()=>m,
            cityInfo: ()=>h,
            climate: ()=>g,
            devTree: ()=>N,
            economyBudget: ()=>p,
            event: ()=>_,
            feature: ()=>w,
            game: ()=>o,
            infoview: ()=>a,
            infoviewTypes: ()=>b,
            life: ()=>T,
            loan: ()=>f,
            map: ()=>I,
            milestone: ()=>O,
            photo: ()=>E,
            policy: ()=>S,
            prefab: ()=>r,
            prefabEffects: ()=>y,
            prefabProperties: ()=>j,
            prefabRequirements: ()=>C,
            production: ()=>x,
            radio: ()=>L,
            selectedInfo: ()=>A,
            service: ()=>v,
            signatureBuilding: ()=>P,
            statistics: ()=>M,
            taxation: ()=>R,
            time: ()=>k,
            tool: ()=>D,
            toolbar: ()=>F,
            toolbarBottom: ()=>U,
            transport: ()=>B,
            tutorial: ()=>i,
            upgrade: ()=>G
        });
        var H = {};
        n.r(H),
        n.d(H, {
            entityEquals: ()=>Ur,
            entityKey: ()=>Dr,
            formatLargeNumber: ()=>Su,
            isNullOrEmpty: ()=>Vr,
            parseEntityKey: ()=>Fr,
            preloadImages: ()=>YT,
            shallowEqual: ()=>Kr,
            useCssLength: ()=>Vm,
            useFormattedLargeNumber: ()=>yu,
            useMemoizedValue: ()=>Yr,
            useRem: ()=>Gm
        });
        var K = {};
        n.r(K),
        n.d(K, {
            ActionHintLayout: ()=>yT,
            ActiveControlSchemeInputHint: ()=>BT,
            ActiveFocusDiv: ()=>Sp,
            AutoNavigationScope: ()=>np,
            BackConsumer: ()=>Fg,
            ControlIcon: ()=>AT,
            ControlIcons: ()=>PT,
            EventInputProvider: ()=>j_,
            ExpandConsumer: ()=>Bg,
            FOCUS_AUTO: ()=>yg,
            FOCUS_DISABLED: ()=>Sg,
            FocusActivation: ()=>qu,
            FocusBoundary: ()=>Ah,
            FocusContext: ()=>Ju,
            FocusControllerBase: ()=>jh,
            FocusDisabled: ()=>Ep,
            FocusKeyOverride: ()=>ap,
            FocusNode: ()=>Lh,
            FocusRoot: ()=>yp,
            FocusScope: ()=>op,
            FocusSymbol: ()=>Ig,
            FocusedInputHint: ()=>GT,
            GamepadAxis: ()=>Fp,
            GamepadButton: ()=>Dp,
            GamepadPointerEventProvider: ()=>N_,
            InputActionBarrier: ()=>Np,
            InputActionConsumer: ()=>Mg,
            InputActionHints: ()=>IT,
            InputContext: ()=>wg,
            InputControllerImpl: ()=>Lg,
            InputHint: ()=>UT,
            InputStack: ()=>S_,
            MultiChildFocusController: ()=>Vg,
            NativeInputProvider: ()=>O_,
            NavigationDirection: ()=>kg,
            NavigationScope: ()=>Zg,
            PassiveFocusDiv: ()=>Ip,
            PointerBarrier: ()=>h_,
            RootInputControllerImpl: ()=>Ag,
            SelectConsumer: ()=>Dg,
            SelectableFocusBoundary: ()=>Op,
            defaultInputController: ()=>Ng,
            disabledFocusController: ()=>ed,
            focusAnchorBottom: ()=>qg,
            focusAnchorCenter: ()=>zg,
            focusAnchorLeft: ()=>$g,
            focusAnchorRight: ()=>Xg,
            focusAnchorTop: ()=>Yg,
            gamepadButtonFromString: ()=>Kp,
            getClosestKey: ()=>Kg,
            getClosestKeyInDirection: ()=>Wg,
            getElementFocusPosition: ()=>Qg,
            inputActionNames$: ()=>v_,
            navActions: ()=>Cp,
            onInputActionPerformed$: ()=>__,
            onInputActionReleased$: ()=>b_,
            refocusClosestKey: ()=>ep,
            refocusClosestKeyIfNoFocus: ()=>Jg,
            setInputActionPriority: ()=>I_,
            transformNavigationInput: ()=>Hg,
            useElementFocusController: ()=>gp,
            useEntityFocusChangeListener: ()=>_p,
            useFocusCallback: ()=>Ph,
            useFocusChangeListener: ()=>vp,
            useFocused: ()=>wh,
            useFocusedRef: ()=>Oh,
            useGamepadType: ()=>jT,
            useInputControlIcon: ()=>DT,
            useInputController: ()=>Pg,
            useKeyFocusController: ()=>sp,
            useKeyboardLayout: ()=>CT,
            useLayoutMap: ()=>NT,
            useMultiChildFocusController: ()=>Gg,
            usePassThroughFocusController: ()=>Ch,
            useRootFocusController: ()=>fp,
            useStringFocusChangeListener: ()=>bp,
            useUniqueFocusKey: ()=>jg
        });
        var W = {};
        n.r(W),
        n.d(W, {
            findModule: ()=>fA,
            getModule: ()=>xA
        });
        var z = n(848)
          , Y = n(540);
        const $ = new Map;
        let q = {};
        const X = {
            get(e, t) {
                const n = $.get(e);
                if (n && n[t])
                    return n[t];
                throw `Module ${e}@${t} was not found.`
            },
            add(e, t) {
                if ($.has(e))
                    throw `Module ${e} was already registered. If you want to override the exports of this module use the override API`;
                $.set(e, t)
            },
            override(e, t, n) {
                const s = $.get(e);
                if (!s)
                    throw `Module ${e} was not found.`;
                q[e] || (q[e] = {}),
                q[e][t] || (q[e][t] = s[t]),
                s[t] = n
            },
            extend(e, t, n) {
                const s = $.get(e);
                if (!s)
                    throw `Module ${e} was not found.`;
                if (e.includes(".scss")) {
                    if (!n && "object" != typeof t)
                        throw `Extending ${e} SCSS without callback requires passing single argument with scss module classes.`;
                    if (n)
                        this.override(e, "classes", n(s.classes));
                    else {
                        const n = {
                            ...s.classes
                        };
                        for (const s of Object.keys(t))
                            n[s] || (n[s] = ""),
                            n[s] += ` ${t[s]}`,
                            this.override(e, "classes", n)
                    }
                } else {
                    if (!n || "function" != typeof n || "string" != typeof t)
                        throw `Extending ${e} requires 2 arguments, name of extended export and extend callback taking current value and returning new`;
                    this.override(e, t, n(s[t]))
                }
            },
            append(e, t, n, s=void 0) {
                const i = "function" == typeof t
                  , a = "function" == typeof n;
                let o, r = i ? "game-ui/modding/modding-hook.tsx" : e, l = i ? "ModdingHook" : t, c = i ? e : void 0, u = a ? s : n;
                i ? o = t : a && (o = n),
                this.extend(r, l, (e=>{
                    const t = t=>{
                        if (c && c !== t.name)
                            return (0,
                            z.jsx)(e, {
                                ...t
                            });
                        const {children: n, ...i} = t || {};
                        if ("number" == typeof s && -1 !== u) {
                            const t = Y.Children.count(n);
                            let a = s < 0 ? t + (s + 1) : s;
                            return (0,
                            z.jsxs)(e, {
                                ...i,
                                children: [Y.Children.map(n, ((e,t)=>a === t || 0 === t && a < 0 ? (0,
                                z.jsxs)(z.Fragment, {
                                    children: [(0,
                                    z.jsx)(o, {}), e]
                                }) : e)), a >= t && (0,
                                z.jsx)(z.Fragment, {
                                    children: (0,
                                    z.jsx)(o, {})
                                })]
                            })
                        }
                        return (0,
                        z.jsxs)(e, {
                            ...i,
                            children: [n, (0,
                            z.jsx)(z.Fragment, {
                                children: (0,
                                z.jsx)(o, {})
                            })]
                        })
                    }
                    ;
                    return t.displayName = `Extended ${l}${i ? `:${c}` : ""}+`,
                    t
                }
                ))
            },
            registry: $,
            find(e) {
                const t = [];
                for (const [n,s] of $) {
                    const i = [];
                    for (const t in s)
                        (e instanceof RegExp ? e.test(t) : t.includes(e)) && i.push(t);
                    i.length ? t.push([n, ...i]) : (e instanceof RegExp ? e.test(n) : n.includes(e)) && t.push([n, ...Object.keys(s)])
                }
                return t
            },
            reset() {
                for (const e of Object.keys(q))
                    for (const t of Object.keys(q[e]))
                        this.override(e, t, q[e][t])
            }
        };
        n(810);
        var Q = n(338)
          , Z = n(961);
        function J() {}
        const ee = (()=>{
            let e = 0;
            return ()=>e++
        }
        )();
        function te(e) {
            return null == e
        }
        function ne(e) {
            if (Array.isArray && Array.isArray(e))
                return !0;
            const t = Object.prototype.toString.call(e);
            return "[object" === t.slice(0, 7) && "Array]" === t.slice(-6)
        }
        function se(e) {
            return null !== e && "[object Object]" === Object.prototype.toString.call(e)
        }
        function ie(e) {
            return ("number" == typeof e || e instanceof Number) && isFinite(+e)
        }
        function ae(e, t) {
            return ie(e) ? e : t
        }
        function oe(e, t) {
            return void 0 === e ? t : e
        }
        const re = (e,t)=>"string" == typeof e && e.endsWith("%") ? parseFloat(e) / 100 * t : +e;
        function le(e, t, n) {
            if (e && "function" == typeof e.call)
                return e.apply(n, t)
        }
        function ce(e, t, n, s) {
            let i, a, o;
            if (ne(e))
                if (a = e.length,
                s)
                    for (i = a - 1; i >= 0; i--)
                        t.call(n, e[i], i);
                else
                    for (i = 0; i < a; i++)
                        t.call(n, e[i], i);
            else if (se(e))
                for (o = Object.keys(e),
                a = o.length,
                i = 0; i < a; i++)
                    t.call(n, e[o[i]], o[i])
        }
        function ue(e, t) {
            let n, s, i, a;
            if (!e || !t || e.length !== t.length)
                return !1;
            for (n = 0,
            s = e.length; n < s; ++n)
                if (i = e[n],
                a = t[n],
                i.datasetIndex !== a.datasetIndex || i.index !== a.index)
                    return !1;
            return !0
        }
        function de(e) {
            if (ne(e))
                return e.map(de);
            if (se(e)) {
                const t = Object.create(null)
                  , n = Object.keys(e)
                  , s = n.length;
                let i = 0;
                for (; i < s; ++i)
                    t[n[i]] = de(e[n[i]]);
                return t
            }
            return e
        }
        function me(e) {
            return -1 === ["__proto__", "prototype", "constructor"].indexOf(e)
        }
        function he(e, t, n, s) {
            if (!me(e))
                return;
            const i = t[e]
              , a = n[e];
            se(i) && se(a) ? ge(i, a, s) : t[e] = de(a)
        }
        function ge(e, t, n) {
            const s = ne(t) ? t : [t]
              , i = s.length;
            if (!se(e))
                return e;
            const a = (n = n || {}).merger || he;
            let o;
            for (let t = 0; t < i; ++t) {
                if (o = s[t],
                !se(o))
                    continue;
                const i = Object.keys(o);
                for (let t = 0, s = i.length; t < s; ++t)
                    a(i[t], e, o, n)
            }
            return e
        }
        function pe(e, t) {
            return ge(e, t, {
                merger: fe
            })
        }
        function fe(e, t, n) {
            if (!me(e))
                return;
            const s = t[e]
              , i = n[e];
            se(s) && se(i) ? pe(s, i) : Object.prototype.hasOwnProperty.call(t, e) || (t[e] = de(i))
        }
        const xe = {
            "": e=>e,
            x: e=>e.x,
            y: e=>e.y
        };
        function ve(e, t) {
            const n = xe[t] || (xe[t] = function(e) {
                const t = function(e) {
                    const t = e.split(".")
                      , n = [];
                    let s = "";
                    for (const e of t)
                        s += e,
                        s.endsWith("\\") ? s = s.slice(0, -1) + "." : (n.push(s),
                        s = "");
                    return n
                }(e);
                return e=>{
                    for (const n of t) {
                        if ("" === n)
                            break;
                        e = e && e[n]
                    }
                    return e
                }
            }(t));
            return n(e)
        }
        function _e(e) {
            return e.charAt(0).toUpperCase() + e.slice(1)
        }
        const be = e=>void 0 !== e
          , Te = e=>"function" == typeof e
          , Ee = (e,t)=>{
            if (e.size !== t.size)
                return !1;
            for (const n of e)
                if (!t.has(n))
                    return !1;
            return !0
        }
        ;
        const Ie = Math.PI
          , Se = 2 * Ie
          , ye = Se + Ie
          , je = Number.POSITIVE_INFINITY
          , Ce = Ie / 180
          , Ne = Ie / 2
          , we = Ie / 4
          , Oe = 2 * Ie / 3
          , Pe = Math.log10
          , Le = Math.sign;
        function Ae(e, t, n) {
            return Math.abs(e - t) < n
        }
        function Me(e) {
            const t = Math.round(e);
            e = Ae(e, t, e / 1e3) ? t : e;
            const n = Math.pow(10, Math.floor(Pe(e)))
              , s = e / n;
            return (s <= 1 ? 1 : s <= 2 ? 2 : s <= 5 ? 5 : 10) * n
        }
        function Re(e) {
            return !isNaN(parseFloat(e)) && isFinite(e)
        }
        function ke(e, t, n) {
            let s, i, a;
            for (s = 0,
            i = e.length; s < i; s++)
                a = e[s][n],
                isNaN(a) || (t.min = Math.min(t.min, a),
                t.max = Math.max(t.max, a))
        }
        function De(e) {
            return e * (Ie / 180)
        }
        function Fe(e) {
            return e * (180 / Ie)
        }
        function Ue(e) {
            if (!ie(e))
                return;
            let t = 1
              , n = 0;
            for (; Math.round(e * t) / t !== e; )
                t *= 10,
                n++;
            return n
        }
        function Be(e, t) {
            const n = t.x - e.x
              , s = t.y - e.y
              , i = Math.sqrt(n * n + s * s);
            let a = Math.atan2(s, n);
            return a < -.5 * Ie && (a += Se),
            {
                angle: a,
                distance: i
            }
        }
        function Ge(e, t) {
            return Math.sqrt(Math.pow(t.x - e.x, 2) + Math.pow(t.y - e.y, 2))
        }
        function Ve(e, t) {
            return (e - t + ye) % Se - Ie
        }
        function He(e) {
            return (e % Se + Se) % Se
        }
        function Ke(e, t, n, s) {
            const i = He(e)
              , a = He(t)
              , o = He(n)
              , r = He(a - i)
              , l = He(o - i)
              , c = He(i - a)
              , u = He(i - o);
            return i === a || i === o || s && a === o || r > l && c < u
        }
        function We(e, t, n) {
            return Math.max(t, Math.min(n, e))
        }
        function ze(e, t, n, s=1e-6) {
            return e >= Math.min(t, n) - s && e <= Math.max(t, n) + s
        }
        function Ye(e, t, n) {
            n = n || (n=>e[n] < t);
            let s, i = e.length - 1, a = 0;
            for (; i - a > 1; )
                s = a + i >> 1,
                n(s) ? a = s : i = s;
            return {
                lo: a,
                hi: i
            }
        }
        const $e = (e,t,n,s)=>Ye(e, n, s ? s=>{
            const i = e[s][t];
            return i < n || i === n && e[s + 1][t] === n
        }
        : s=>e[s][t] < n)
          , qe = (e,t,n)=>Ye(e, n, (s=>e[s][t] >= n));
        const Xe = ["push", "pop", "shift", "splice", "unshift"];
        function Qe(e, t) {
            const n = e._chartjs;
            if (!n)
                return;
            const s = n.listeners
              , i = s.indexOf(t);
            -1 !== i && s.splice(i, 1),
            s.length > 0 || (Xe.forEach((t=>{
                delete e[t]
            }
            )),
            delete e._chartjs)
        }
        function Ze(e) {
            const t = new Set;
            let n, s;
            for (n = 0,
            s = e.length; n < s; ++n)
                t.add(e[n]);
            return t.size === s ? e : Array.from(t)
        }
        const Je = "undefined" == typeof window ? function(e) {
            return e()
        }
        : window.requestAnimationFrame;
        function et(e, t) {
            let n = !1;
            return function(...s) {
                n || (n = !0,
                Je.call(window, (()=>{
                    n = !1,
                    e.apply(t, s)
                }
                )))
            }
        }
        const tt = e=>"start" === e ? "left" : "end" === e ? "right" : "center"
          , nt = (e,t,n)=>"start" === e ? t : "end" === e ? n : (t + n) / 2;
        function st(e, t, n) {
            const s = t.length;
            let i = 0
              , a = s;
            if (e._sorted) {
                const {iScale: o, _parsed: r} = e
                  , l = o.axis
                  , {min: c, max: u, minDefined: d, maxDefined: m} = o.getUserBounds();
                d && (i = We(Math.min($e(r, o.axis, c).lo, n ? s : $e(t, l, o.getPixelForValue(c)).lo), 0, s - 1)),
                a = m ? We(Math.max($e(r, o.axis, u, !0).hi + 1, n ? 0 : $e(t, l, o.getPixelForValue(u), !0).hi + 1), i, s) - i : s - i
            }
            return {
                start: i,
                count: a
            }
        }
        function it(e) {
            const {xScale: t, yScale: n, _scaleRanges: s} = e
              , i = {
                xmin: t.min,
                xmax: t.max,
                ymin: n.min,
                ymax: n.max
            };
            if (!s)
                return e._scaleRanges = i,
                !0;
            const a = s.xmin !== t.min || s.xmax !== t.max || s.ymin !== n.min || s.ymax !== n.max;
            return Object.assign(s, i),
            a
        }
        const at = e=>0 === e || 1 === e
          , ot = (e,t,n)=>-Math.pow(2, 10 * (e -= 1)) * Math.sin((e - t) * Se / n)
          , rt = (e,t,n)=>Math.pow(2, -10 * e) * Math.sin((e - t) * Se / n) + 1
          , lt = {
            linear: e=>e,
            easeInQuad: e=>e * e,
            easeOutQuad: e=>-e * (e - 2),
            easeInOutQuad: e=>(e /= .5) < 1 ? .5 * e * e : -.5 * (--e * (e - 2) - 1),
            easeInCubic: e=>e * e * e,
            easeOutCubic: e=>(e -= 1) * e * e + 1,
            easeInOutCubic: e=>(e /= .5) < 1 ? .5 * e * e * e : .5 * ((e -= 2) * e * e + 2),
            easeInQuart: e=>e * e * e * e,
            easeOutQuart: e=>-((e -= 1) * e * e * e - 1),
            easeInOutQuart: e=>(e /= .5) < 1 ? .5 * e * e * e * e : -.5 * ((e -= 2) * e * e * e - 2),
            easeInQuint: e=>e * e * e * e * e,
            easeOutQuint: e=>(e -= 1) * e * e * e * e + 1,
            easeInOutQuint: e=>(e /= .5) < 1 ? .5 * e * e * e * e * e : .5 * ((e -= 2) * e * e * e * e + 2),
            easeInSine: e=>1 - Math.cos(e * Ne),
            easeOutSine: e=>Math.sin(e * Ne),
            easeInOutSine: e=>-.5 * (Math.cos(Ie * e) - 1),
            easeInExpo: e=>0 === e ? 0 : Math.pow(2, 10 * (e - 1)),
            easeOutExpo: e=>1 === e ? 1 : 1 - Math.pow(2, -10 * e),
            easeInOutExpo: e=>at(e) ? e : e < .5 ? .5 * Math.pow(2, 10 * (2 * e - 1)) : .5 * (2 - Math.pow(2, -10 * (2 * e - 1))),
            easeInCirc: e=>e >= 1 ? e : -(Math.sqrt(1 - e * e) - 1),
            easeOutCirc: e=>Math.sqrt(1 - (e -= 1) * e),
            easeInOutCirc: e=>(e /= .5) < 1 ? -.5 * (Math.sqrt(1 - e * e) - 1) : .5 * (Math.sqrt(1 - (e -= 2) * e) + 1),
            easeInElastic: e=>at(e) ? e : ot(e, .075, .3),
            easeOutElastic: e=>at(e) ? e : rt(e, .075, .3),
            easeInOutElastic(e) {
                const t = .1125;
                return at(e) ? e : e < .5 ? .5 * ot(2 * e, t, .45) : .5 + .5 * rt(2 * e - 1, t, .45)
            },
            easeInBack(e) {
                const t = 1.70158;
                return e * e * ((t + 1) * e - t)
            },
            easeOutBack(e) {
                const t = 1.70158;
                return (e -= 1) * e * ((t + 1) * e + t) + 1
            },
            easeInOutBack(e) {
                let t = 1.70158;
                return (e /= .5) < 1 ? e * e * ((1 + (t *= 1.525)) * e - t) * .5 : .5 * ((e -= 2) * e * ((1 + (t *= 1.525)) * e + t) + 2)
            },
            easeInBounce: e=>1 - lt.easeOutBounce(1 - e),
            easeOutBounce(e) {
                const t = 7.5625
                  , n = 2.75;
                return e < 1 / n ? t * e * e : e < 2 / n ? t * (e -= 1.5 / n) * e + .75 : e < 2.5 / n ? t * (e -= 2.25 / n) * e + .9375 : t * (e -= 2.625 / n) * e + .984375
            },
            easeInOutBounce: e=>e < .5 ? .5 * lt.easeInBounce(2 * e) : .5 * lt.easeOutBounce(2 * e - 1) + .5
        };
        var ct = lt;
        function ut(e) {
            return e + .5 | 0
        }
        const dt = (e,t,n)=>Math.max(Math.min(e, n), t);
        function mt(e) {
            return dt(ut(2.55 * e), 0, 255)
        }
        function ht(e) {
            return dt(ut(255 * e), 0, 255)
        }
        function gt(e) {
            return dt(ut(e / 2.55) / 100, 0, 1)
        }
        function pt(e) {
            return dt(ut(100 * e), 0, 100)
        }
        const ft = {
            0: 0,
            1: 1,
            2: 2,
            3: 3,
            4: 4,
            5: 5,
            6: 6,
            7: 7,
            8: 8,
            9: 9,
            A: 10,
            B: 11,
            C: 12,
            D: 13,
            E: 14,
            F: 15,
            a: 10,
            b: 11,
            c: 12,
            d: 13,
            e: 14,
            f: 15
        }
          , xt = [..."0123456789ABCDEF"]
          , vt = e=>xt[15 & e]
          , _t = e=>xt[(240 & e) >> 4] + xt[15 & e]
          , bt = e=>(240 & e) >> 4 == (15 & e);
        function Tt(e) {
            var t = (e=>bt(e.r) && bt(e.g) && bt(e.b) && bt(e.a))(e) ? vt : _t;
            return e ? "#" + t(e.r) + t(e.g) + t(e.b) + ((e,t)=>e < 255 ? t(e) : "")(e.a, t) : void 0
        }
        const Et = /^(hsla?|hwb|hsv)\(\s*([-+.e\d]+)(?:deg)?[\s,]+([-+.e\d]+)%[\s,]+([-+.e\d]+)%(?:[\s,]+([-+.e\d]+)(%)?)?\s*\)$/;
        function It(e, t, n) {
            const s = t * Math.min(n, 1 - n)
              , i = (t,i=(t + e / 30) % 12)=>n - s * Math.max(Math.min(i - 3, 9 - i, 1), -1);
            return [i(0), i(8), i(4)]
        }
        function St(e, t, n) {
            const s = (s,i=(s + e / 60) % 6)=>n - n * t * Math.max(Math.min(i, 4 - i, 1), 0);
            return [s(5), s(3), s(1)]
        }
        function yt(e, t, n) {
            const s = It(e, 1, .5);
            let i;
            for (t + n > 1 && (i = 1 / (t + n),
            t *= i,
            n *= i),
            i = 0; i < 3; i++)
                s[i] *= 1 - t - n,
                s[i] += t;
            return s
        }
        function jt(e) {
            const t = e.r / 255
              , n = e.g / 255
              , s = e.b / 255
              , i = Math.max(t, n, s)
              , a = Math.min(t, n, s)
              , o = (i + a) / 2;
            let r, l, c;
            return i !== a && (c = i - a,
            l = o > .5 ? c / (2 - i - a) : c / (i + a),
            r = function(e, t, n, s, i) {
                return e === i ? (t - n) / s + (t < n ? 6 : 0) : t === i ? (n - e) / s + 2 : (e - t) / s + 4
            }(t, n, s, c, i),
            r = 60 * r + .5),
            [0 | r, l || 0, o]
        }
        function Ct(e, t, n, s) {
            return (Array.isArray(t) ? e(t[0], t[1], t[2]) : e(t, n, s)).map(ht)
        }
        function Nt(e, t, n) {
            return Ct(It, e, t, n)
        }
        function wt(e) {
            return (e % 360 + 360) % 360
        }
        function Ot(e) {
            const t = Et.exec(e);
            let n, s = 255;
            if (!t)
                return;
            t[5] !== n && (s = t[6] ? mt(+t[5]) : ht(+t[5]));
            const i = wt(+t[2])
              , a = +t[3] / 100
              , o = +t[4] / 100;
            return n = "hwb" === t[1] ? function(e, t, n) {
                return Ct(yt, e, t, n)
            }(i, a, o) : "hsv" === t[1] ? function(e, t, n) {
                return Ct(St, e, t, n)
            }(i, a, o) : Nt(i, a, o),
            {
                r: n[0],
                g: n[1],
                b: n[2],
                a: s
            }
        }
        const Pt = {
            x: "dark",
            Z: "light",
            Y: "re",
            X: "blu",
            W: "gr",
            V: "medium",
            U: "slate",
            A: "ee",
            T: "ol",
            S: "or",
            B: "ra",
            C: "lateg",
            D: "ights",
            R: "in",
            Q: "turquois",
            E: "hi",
            P: "ro",
            O: "al",
            N: "le",
            M: "de",
            L: "yello",
            F: "en",
            K: "ch",
            G: "arks",
            H: "ea",
            I: "ightg",
            J: "wh"
        }
          , Lt = {
            OiceXe: "f0f8ff",
            antiquewEte: "faebd7",
            aqua: "ffff",
            aquamarRe: "7fffd4",
            azuY: "f0ffff",
            beige: "f5f5dc",
            bisque: "ffe4c4",
            black: "0",
            blanKedOmond: "ffebcd",
            Xe: "ff",
            XeviTet: "8a2be2",
            bPwn: "a52a2a",
            burlywood: "deb887",
            caMtXe: "5f9ea0",
            KartYuse: "7fff00",
            KocTate: "d2691e",
            cSO: "ff7f50",
            cSnflowerXe: "6495ed",
            cSnsilk: "fff8dc",
            crimson: "dc143c",
            cyan: "ffff",
            xXe: "8b",
            xcyan: "8b8b",
            xgTMnPd: "b8860b",
            xWay: "a9a9a9",
            xgYF: "6400",
            xgYy: "a9a9a9",
            xkhaki: "bdb76b",
            xmagFta: "8b008b",
            xTivegYF: "556b2f",
            xSange: "ff8c00",
            xScEd: "9932cc",
            xYd: "8b0000",
            xsOmon: "e9967a",
            xsHgYF: "8fbc8f",
            xUXe: "483d8b",
            xUWay: "2f4f4f",
            xUgYy: "2f4f4f",
            xQe: "ced1",
            xviTet: "9400d3",
            dAppRk: "ff1493",
            dApskyXe: "bfff",
            dimWay: "696969",
            dimgYy: "696969",
            dodgerXe: "1e90ff",
            fiYbrick: "b22222",
            flSOwEte: "fffaf0",
            foYstWAn: "228b22",
            fuKsia: "ff00ff",
            gaRsbSo: "dcdcdc",
            ghostwEte: "f8f8ff",
            gTd: "ffd700",
            gTMnPd: "daa520",
            Way: "808080",
            gYF: "8000",
            gYFLw: "adff2f",
            gYy: "808080",
            honeyMw: "f0fff0",
            hotpRk: "ff69b4",
            RdianYd: "cd5c5c",
            Rdigo: "4b0082",
            ivSy: "fffff0",
            khaki: "f0e68c",
            lavFMr: "e6e6fa",
            lavFMrXsh: "fff0f5",
            lawngYF: "7cfc00",
            NmoncEffon: "fffacd",
            ZXe: "add8e6",
            ZcSO: "f08080",
            Zcyan: "e0ffff",
            ZgTMnPdLw: "fafad2",
            ZWay: "d3d3d3",
            ZgYF: "90ee90",
            ZgYy: "d3d3d3",
            ZpRk: "ffb6c1",
            ZsOmon: "ffa07a",
            ZsHgYF: "20b2aa",
            ZskyXe: "87cefa",
            ZUWay: "778899",
            ZUgYy: "778899",
            ZstAlXe: "b0c4de",
            ZLw: "ffffe0",
            lime: "ff00",
            limegYF: "32cd32",
            lRF: "faf0e6",
            magFta: "ff00ff",
            maPon: "800000",
            VaquamarRe: "66cdaa",
            VXe: "cd",
            VScEd: "ba55d3",
            VpurpN: "9370db",
            VsHgYF: "3cb371",
            VUXe: "7b68ee",
            VsprRggYF: "fa9a",
            VQe: "48d1cc",
            VviTetYd: "c71585",
            midnightXe: "191970",
            mRtcYam: "f5fffa",
            mistyPse: "ffe4e1",
            moccasR: "ffe4b5",
            navajowEte: "ffdead",
            navy: "80",
            Tdlace: "fdf5e6",
            Tive: "808000",
            TivedBb: "6b8e23",
            Sange: "ffa500",
            SangeYd: "ff4500",
            ScEd: "da70d6",
            pOegTMnPd: "eee8aa",
            pOegYF: "98fb98",
            pOeQe: "afeeee",
            pOeviTetYd: "db7093",
            papayawEp: "ffefd5",
            pHKpuff: "ffdab9",
            peru: "cd853f",
            pRk: "ffc0cb",
            plum: "dda0dd",
            powMrXe: "b0e0e6",
            purpN: "800080",
            YbeccapurpN: "663399",
            Yd: "ff0000",
            Psybrown: "bc8f8f",
            PyOXe: "4169e1",
            saddNbPwn: "8b4513",
            sOmon: "fa8072",
            sandybPwn: "f4a460",
            sHgYF: "2e8b57",
            sHshell: "fff5ee",
            siFna: "a0522d",
            silver: "c0c0c0",
            skyXe: "87ceeb",
            UXe: "6a5acd",
            UWay: "708090",
            UgYy: "708090",
            snow: "fffafa",
            sprRggYF: "ff7f",
            stAlXe: "4682b4",
            tan: "d2b48c",
            teO: "8080",
            tEstN: "d8bfd8",
            tomato: "ff6347",
            Qe: "40e0d0",
            viTet: "ee82ee",
            JHt: "f5deb3",
            wEte: "ffffff",
            wEtesmoke: "f5f5f5",
            Lw: "ffff00",
            LwgYF: "9acd32"
        };
        let At;
        function Mt(e) {
            At || (At = function() {
                const e = {}
                  , t = Object.keys(Lt)
                  , n = Object.keys(Pt);
                let s, i, a, o, r;
                for (s = 0; s < t.length; s++) {
                    for (o = r = t[s],
                    i = 0; i < n.length; i++)
                        a = n[i],
                        r = r.replace(a, Pt[a]);
                    a = parseInt(Lt[o], 16),
                    e[r] = [a >> 16 & 255, a >> 8 & 255, 255 & a]
                }
                return e
            }(),
            At.transparent = [0, 0, 0, 0]);
            const t = At[e.toLowerCase()];
            return t && {
                r: t[0],
                g: t[1],
                b: t[2],
                a: 4 === t.length ? t[3] : 255
            }
        }
        const Rt = /^rgba?\(\s*([-+.\d]+)(%)?[\s,]+([-+.e\d]+)(%)?[\s,]+([-+.e\d]+)(%)?(?:[\s,/]+([-+.e\d]+)(%)?)?\s*\)$/;
        const kt = e=>e <= .0031308 ? 12.92 * e : 1.055 * Math.pow(e, 1 / 2.4) - .055
          , Dt = e=>e <= .04045 ? e / 12.92 : Math.pow((e + .055) / 1.055, 2.4);
        function Ft(e, t, n) {
            if (e) {
                let s = jt(e);
                s[t] = Math.max(0, Math.min(s[t] + s[t] * n, 0 === t ? 360 : 1)),
                s = Nt(s),
                e.r = s[0],
                e.g = s[1],
                e.b = s[2]
            }
        }
        function Ut(e, t) {
            return e ? Object.assign(t || {}, e) : e
        }
        function Bt(e) {
            var t = {
                r: 0,
                g: 0,
                b: 0,
                a: 255
            };
            return Array.isArray(e) ? e.length >= 3 && (t = {
                r: e[0],
                g: e[1],
                b: e[2],
                a: 255
            },
            e.length > 3 && (t.a = ht(e[3]))) : (t = Ut(e, {
                r: 0,
                g: 0,
                b: 0,
                a: 1
            })).a = ht(t.a),
            t
        }
        function Gt(e) {
            return "r" === e.charAt(0) ? function(e) {
                const t = Rt.exec(e);
                let n, s, i, a = 255;
                if (t) {
                    if (t[7] !== n) {
                        const e = +t[7];
                        a = t[8] ? mt(e) : dt(255 * e, 0, 255)
                    }
                    return n = +t[1],
                    s = +t[3],
                    i = +t[5],
                    n = 255 & (t[2] ? mt(n) : dt(n, 0, 255)),
                    s = 255 & (t[4] ? mt(s) : dt(s, 0, 255)),
                    i = 255 & (t[6] ? mt(i) : dt(i, 0, 255)),
                    {
                        r: n,
                        g: s,
                        b: i,
                        a
                    }
                }
            }(e) : Ot(e)
        }
        class Vt {
            constructor(e) {
                if (e instanceof Vt)
                    return e;
                const t = typeof e;
                let n;
                var s, i, a;
                "object" === t ? n = Bt(e) : "string" === t && (a = (s = e).length,
                "#" === s[0] && (4 === a || 5 === a ? i = {
                    r: 255 & 17 * ft[s[1]],
                    g: 255 & 17 * ft[s[2]],
                    b: 255 & 17 * ft[s[3]],
                    a: 5 === a ? 17 * ft[s[4]] : 255
                } : 7 !== a && 9 !== a || (i = {
                    r: ft[s[1]] << 4 | ft[s[2]],
                    g: ft[s[3]] << 4 | ft[s[4]],
                    b: ft[s[5]] << 4 | ft[s[6]],
                    a: 9 === a ? ft[s[7]] << 4 | ft[s[8]] : 255
                })),
                n = i || Mt(e) || Gt(e)),
                this._rgb = n,
                this._valid = !!n
            }
            get valid() {
                return this._valid
            }
            get rgb() {
                var e = Ut(this._rgb);
                return e && (e.a = gt(e.a)),
                e
            }
            set rgb(e) {
                this._rgb = Bt(e)
            }
            rgbString() {
                return this._valid ? (e = this._rgb) && (e.a < 255 ? `rgba(${e.r}, ${e.g}, ${e.b}, ${gt(e.a)})` : `rgb(${e.r}, ${e.g}, ${e.b})`) : void 0;
                var e
            }
            hexString() {
                return this._valid ? Tt(this._rgb) : void 0
            }
            hslString() {
                return this._valid ? function(e) {
                    if (!e)
                        return;
                    const t = jt(e)
                      , n = t[0]
                      , s = pt(t[1])
                      , i = pt(t[2]);
                    return e.a < 255 ? `hsla(${n}, ${s}%, ${i}%, ${gt(e.a)})` : `hsl(${n}, ${s}%, ${i}%)`
                }(this._rgb) : void 0
            }
            mix(e, t) {
                if (e) {
                    const n = this.rgb
                      , s = e.rgb;
                    let i;
                    const a = t === i ? .5 : t
                      , o = 2 * a - 1
                      , r = n.a - s.a
                      , l = ((o * r == -1 ? o : (o + r) / (1 + o * r)) + 1) / 2;
                    i = 1 - l,
                    n.r = 255 & l * n.r + i * s.r + .5,
                    n.g = 255 & l * n.g + i * s.g + .5,
                    n.b = 255 & l * n.b + i * s.b + .5,
                    n.a = a * n.a + (1 - a) * s.a,
                    this.rgb = n
                }
                return this
            }
            interpolate(e, t) {
                return e && (this._rgb = function(e, t, n) {
                    const s = Dt(gt(e.r))
                      , i = Dt(gt(e.g))
                      , a = Dt(gt(e.b));
                    return {
                        r: ht(kt(s + n * (Dt(gt(t.r)) - s))),
                        g: ht(kt(i + n * (Dt(gt(t.g)) - i))),
                        b: ht(kt(a + n * (Dt(gt(t.b)) - a))),
                        a: e.a + n * (t.a - e.a)
                    }
                }(this._rgb, e._rgb, t)),
                this
            }
            clone() {
                return new Vt(this.rgb)
            }
            alpha(e) {
                return this._rgb.a = ht(e),
                this
            }
            clearer(e) {
                return this._rgb.a *= 1 - e,
                this
            }
            greyscale() {
                const e = this._rgb
                  , t = ut(.3 * e.r + .59 * e.g + .11 * e.b);
                return e.r = e.g = e.b = t,
                this
            }
            opaquer(e) {
                return this._rgb.a *= 1 + e,
                this
            }
            negate() {
                const e = this._rgb;
                return e.r = 255 - e.r,
                e.g = 255 - e.g,
                e.b = 255 - e.b,
                this
            }
            lighten(e) {
                return Ft(this._rgb, 2, e),
                this
            }
            darken(e) {
                return Ft(this._rgb, 2, -e),
                this
            }
            saturate(e) {
                return Ft(this._rgb, 1, e),
                this
            }
            desaturate(e) {
                return Ft(this._rgb, 1, -e),
                this
            }
            rotate(e) {
                return function(e, t) {
                    var n = jt(e);
                    n[0] = wt(n[0] + t),
                    n = Nt(n),
                    e.r = n[0],
                    e.g = n[1],
                    e.b = n[2]
                }(this._rgb, e),
                this
            }
        }
        function Ht(e) {
            return new Vt(e)
        }
        function Kt(e) {
            if (e && "object" == typeof e) {
                const t = e.toString();
                return "[object CanvasPattern]" === t || "[object CanvasGradient]" === t
            }
            return !1
        }
        function Wt(e) {
            return Kt(e) ? e : Ht(e)
        }
        function zt(e) {
            return Kt(e) ? e : Ht(e).saturate(.5).darken(.1).hexString()
        }
        const Yt = ["x", "y", "borderWidth", "radius", "tension"]
          , $t = ["color", "borderColor", "backgroundColor"];
        const qt = new Map;
        function Xt(e, t, n) {
            return function(e, t) {
                t = t || {};
                const n = e + JSON.stringify(t);
                let s = qt.get(n);
                return s || (s = new Intl.NumberFormat(e,t),
                qt.set(n, s)),
                s
            }(t, n).format(e)
        }
        const Qt = {
            values: e=>ne(e) ? e : "" + e,
            numeric(e, t, n) {
                if (0 === e)
                    return "0";
                const s = this.chart.options.locale;
                let i, a = e;
                if (n.length > 1) {
                    const t = Math.max(Math.abs(n[0].value), Math.abs(n[n.length - 1].value));
                    (t < 1e-4 || t > 1e15) && (i = "scientific"),
                    a = function(e, t) {
                        let n = t.length > 3 ? t[2].value - t[1].value : t[1].value - t[0].value;
                        Math.abs(n) >= 1 && e !== Math.floor(e) && (n = e - Math.floor(e));
                        return n
                    }(e, n)
                }
                const o = Pe(Math.abs(a))
                  , r = Math.max(Math.min(-1 * Math.floor(o), 20), 0)
                  , l = {
                    notation: i,
                    minimumFractionDigits: r,
                    maximumFractionDigits: r
                };
                return Object.assign(l, this.options.ticks.format),
                Xt(e, s, l)
            },
            logarithmic(e, t, n) {
                if (0 === e)
                    return "0";
                const s = n[t].significand || e / Math.pow(10, Math.floor(Pe(e)));
                return [1, 2, 3, 5, 10, 15].includes(s) || t > .8 * n.length ? Qt.numeric.call(this, e, t, n) : ""
            }
        };
        var Zt = {
            formatters: Qt
        };
        const Jt = Object.create(null)
          , en = Object.create(null);
        function tn(e, t) {
            if (!t)
                return e;
            const n = t.split(".");
            for (let t = 0, s = n.length; t < s; ++t) {
                const s = n[t];
                e = e[s] || (e[s] = Object.create(null))
            }
            return e
        }
        function nn(e, t, n) {
            return "string" == typeof t ? ge(tn(e, t), n) : ge(tn(e, ""), t)
        }
        class sn {
            constructor(e, t) {
                this.animation = void 0,
                this.backgroundColor = "rgba(0,0,0,0.1)",
                this.borderColor = "rgba(0,0,0,0.1)",
                this.color = "#666",
                this.datasets = {},
                this.devicePixelRatio = e=>e.chart.platform.getDevicePixelRatio(),
                this.elements = {},
                this.events = ["mousemove", "mouseout", "click", "touchstart", "touchmove"],
                this.font = {
                    family: "'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",
                    size: 12,
                    style: "normal",
                    lineHeight: 1.2,
                    weight: null
                },
                this.hover = {},
                this.hoverBackgroundColor = (e,t)=>zt(t.backgroundColor),
                this.hoverBorderColor = (e,t)=>zt(t.borderColor),
                this.hoverColor = (e,t)=>zt(t.color),
                this.indexAxis = "x",
                this.interaction = {
                    mode: "nearest",
                    intersect: !0,
                    includeInvisible: !1
                },
                this.maintainAspectRatio = !0,
                this.onHover = null,
                this.onClick = null,
                this.parsing = !0,
                this.plugins = {},
                this.responsive = !0,
                this.scale = void 0,
                this.scales = {},
                this.showLine = !0,
                this.drawActiveElementsOnTop = !0,
                this.describe(e),
                this.apply(t)
            }
            set(e, t) {
                return nn(this, e, t)
            }
            get(e) {
                return tn(this, e)
            }
            describe(e, t) {
                return nn(en, e, t)
            }
            override(e, t) {
                return nn(Jt, e, t)
            }
            route(e, t, n, s) {
                const i = tn(this, e)
                  , a = tn(this, n)
                  , o = "_" + t;
                Object.defineProperties(i, {
                    [o]: {
                        value: i[t],
                        writable: !0
                    },
                    [t]: {
                        enumerable: !0,
                        get() {
                            const e = this[o]
                              , t = a[s];
                            return se(e) ? Object.assign({}, t, e) : oe(e, t)
                        },
                        set(e) {
                            this[o] = e
                        }
                    }
                })
            }
            apply(e) {
                e.forEach((e=>e(this)))
            }
        }
        var an = new sn({
            _scriptable: e=>!e.startsWith("on"),
            _indexable: e=>"events" !== e,
            hover: {
                _fallback: "interaction"
            },
            interaction: {
                _scriptable: !1,
                _indexable: !1
            }
        },[function(e) {
            e.set("animation", {
                delay: void 0,
                duration: 1e3,
                easing: "easeOutQuart",
                fn: void 0,
                from: void 0,
                loop: void 0,
                to: void 0,
                type: void 0
            }),
            e.describe("animation", {
                _fallback: !1,
                _indexable: !1,
                _scriptable: e=>"onProgress" !== e && "onComplete" !== e && "fn" !== e
            }),
            e.set("animations", {
                colors: {
                    type: "color",
                    properties: $t
                },
                numbers: {
                    type: "number",
                    properties: Yt
                }
            }),
            e.describe("animations", {
                _fallback: "animation"
            }),
            e.set("transitions", {
                active: {
                    animation: {
                        duration: 400
                    }
                },
                resize: {
                    animation: {
                        duration: 0
                    }
                },
                show: {
                    animations: {
                        colors: {
                            from: "transparent"
                        },
                        visible: {
                            type: "boolean",
                            duration: 0
                        }
                    }
                },
                hide: {
                    animations: {
                        colors: {
                            to: "transparent"
                        },
                        visible: {
                            type: "boolean",
                            easing: "linear",
                            fn: e=>0 | e
                        }
                    }
                }
            })
        }
        , function(e) {
            e.set("layout", {
                autoPadding: !0,
                padding: {
                    top: 0,
                    right: 0,
                    bottom: 0,
                    left: 0
                }
            })
        }
        , function(e) {
            e.set("scale", {
                display: !0,
                offset: !1,
                reverse: !1,
                beginAtZero: !1,
                bounds: "ticks",
                grace: 0,
                grid: {
                    display: !0,
                    lineWidth: 1,
                    drawOnChartArea: !0,
                    drawTicks: !0,
                    tickLength: 8,
                    tickWidth: (e,t)=>t.lineWidth,
                    tickColor: (e,t)=>t.color,
                    offset: !1
                },
                border: {
                    display: !0,
                    dash: [],
                    dashOffset: 0,
                    width: 1
                },
                title: {
                    display: !1,
                    text: "",
                    padding: {
                        top: 4,
                        bottom: 4
                    }
                },
                ticks: {
                    minRotation: 0,
                    maxRotation: 50,
                    mirror: !1,
                    textStrokeWidth: 0,
                    textStrokeColor: "",
                    padding: 3,
                    display: !0,
                    autoSkip: !0,
                    autoSkipPadding: 3,
                    labelOffset: 0,
                    callback: Zt.formatters.values,
                    minor: {},
                    major: {},
                    align: "center",
                    crossAlign: "near",
                    showLabelBackdrop: !1,
                    backdropColor: "rgba(255, 255, 255, 0.75)",
                    backdropPadding: 2
                }
            }),
            e.route("scale.ticks", "color", "", "color"),
            e.route("scale.grid", "color", "", "borderColor"),
            e.route("scale.border", "color", "", "borderColor"),
            e.route("scale.title", "color", "", "color"),
            e.describe("scale", {
                _fallback: !1,
                _scriptable: e=>!e.startsWith("before") && !e.startsWith("after") && "callback" !== e && "parser" !== e,
                _indexable: e=>"borderDash" !== e && "tickBorderDash" !== e && "dash" !== e
            }),
            e.describe("scales", {
                _fallback: "scale"
            }),
            e.describe("scale.ticks", {
                _scriptable: e=>"backdropPadding" !== e && "callback" !== e,
                _indexable: e=>"backdropPadding" !== e
            })
        }
        ]);
        function on(e, t, n, s, i) {
            let a = t[i];
            return a || (a = t[i] = e.measureText(i).width,
            n.push(i)),
            a > s && (s = a),
            s
        }
        function rn(e, t, n, s) {
            let i = (s = s || {}).data = s.data || {}
              , a = s.garbageCollect = s.garbageCollect || [];
            s.font !== t && (i = s.data = {},
            a = s.garbageCollect = [],
            s.font = t),
            e.save(),
            e.font = t;
            let o = 0;
            const r = n.length;
            let l, c, u, d, m;
            for (l = 0; l < r; l++)
                if (d = n[l],
                null != d && !0 !== ne(d))
                    o = on(e, i, a, o, d);
                else if (ne(d))
                    for (c = 0,
                    u = d.length; c < u; c++)
                        m = d[c],
                        null == m || ne(m) || (o = on(e, i, a, o, m));
            e.restore();
            const h = a.length / 2;
            if (h > n.length) {
                for (l = 0; l < h; l++)
                    delete i[a[l]];
                a.splice(0, h)
            }
            return o
        }
        function ln(e, t, n) {
            const s = e.currentDevicePixelRatio
              , i = 0 !== n ? Math.max(n / 2, .5) : 0;
            return Math.round((t - i) * s) / s + i
        }
        function cn(e, t) {
            (t = t || e.getContext("2d")).save(),
            t.resetTransform(),
            t.clearRect(0, 0, e.width, e.height),
            t.restore()
        }
        function un(e, t, n, s) {
            dn(e, t, n, s, null)
        }
        function dn(e, t, n, s, i) {
            let a, o, r, l, c, u, d, m;
            const h = t.pointStyle
              , g = t.rotation
              , p = t.radius;
            let f = (g || 0) * Ce;
            if (h && "object" == typeof h && (a = h.toString(),
            "[object HTMLImageElement]" === a || "[object HTMLCanvasElement]" === a))
                return e.save(),
                e.translate(n, s),
                e.rotate(f),
                e.drawImage(h, -h.width / 2, -h.height / 2, h.width, h.height),
                void e.restore();
            if (!(isNaN(p) || p <= 0)) {
                switch (e.beginPath(),
                h) {
                default:
                    i ? e.ellipse(n, s, i / 2, p, 0, 0, Se) : e.arc(n, s, p, 0, Se),
                    e.closePath();
                    break;
                case "triangle":
                    u = i ? i / 2 : p,
                    e.moveTo(n + Math.sin(f) * u, s - Math.cos(f) * p),
                    f += Oe,
                    e.lineTo(n + Math.sin(f) * u, s - Math.cos(f) * p),
                    f += Oe,
                    e.lineTo(n + Math.sin(f) * u, s - Math.cos(f) * p),
                    e.closePath();
                    break;
                case "rectRounded":
                    c = .516 * p,
                    l = p - c,
                    o = Math.cos(f + we) * l,
                    d = Math.cos(f + we) * (i ? i / 2 - c : l),
                    r = Math.sin(f + we) * l,
                    m = Math.sin(f + we) * (i ? i / 2 - c : l),
                    e.arc(n - d, s - r, c, f - Ie, f - Ne),
                    e.arc(n + m, s - o, c, f - Ne, f),
                    e.arc(n + d, s + r, c, f, f + Ne),
                    e.arc(n - m, s + o, c, f + Ne, f + Ie),
                    e.closePath();
                    break;
                case "rect":
                    if (!g) {
                        l = Math.SQRT1_2 * p,
                        u = i ? i / 2 : l,
                        e.rect(n - u, s - l, 2 * u, 2 * l);
                        break
                    }
                    f += we;
                case "rectRot":
                    d = Math.cos(f) * (i ? i / 2 : p),
                    o = Math.cos(f) * p,
                    r = Math.sin(f) * p,
                    m = Math.sin(f) * (i ? i / 2 : p),
                    e.moveTo(n - d, s - r),
                    e.lineTo(n + m, s - o),
                    e.lineTo(n + d, s + r),
                    e.lineTo(n - m, s + o),
                    e.closePath();
                    break;
                case "crossRot":
                    f += we;
                case "cross":
                    d = Math.cos(f) * (i ? i / 2 : p),
                    o = Math.cos(f) * p,
                    r = Math.sin(f) * p,
                    m = Math.sin(f) * (i ? i / 2 : p),
                    e.moveTo(n - d, s - r),
                    e.lineTo(n + d, s + r),
                    e.moveTo(n + m, s - o),
                    e.lineTo(n - m, s + o);
                    break;
                case "star":
                    d = Math.cos(f) * (i ? i / 2 : p),
                    o = Math.cos(f) * p,
                    r = Math.sin(f) * p,
                    m = Math.sin(f) * (i ? i / 2 : p),
                    e.moveTo(n - d, s - r),
                    e.lineTo(n + d, s + r),
                    e.moveTo(n + m, s - o),
                    e.lineTo(n - m, s + o),
                    f += we,
                    d = Math.cos(f) * (i ? i / 2 : p),
                    o = Math.cos(f) * p,
                    r = Math.sin(f) * p,
                    m = Math.sin(f) * (i ? i / 2 : p),
                    e.moveTo(n - d, s - r),
                    e.lineTo(n + d, s + r),
                    e.moveTo(n + m, s - o),
                    e.lineTo(n - m, s + o);
                    break;
                case "line":
                    o = i ? i / 2 : Math.cos(f) * p,
                    r = Math.sin(f) * p,
                    e.moveTo(n - o, s - r),
                    e.lineTo(n + o, s + r);
                    break;
                case "dash":
                    e.moveTo(n, s),
                    e.lineTo(n + Math.cos(f) * (i ? i / 2 : p), s + Math.sin(f) * p)
                }
                e.fill(),
                t.borderWidth > 0 && e.stroke()
            }
        }
        function mn(e, t, n) {
            return n = n || .5,
            !t || e && e.x > t.left - n && e.x < t.right + n && e.y > t.top - n && e.y < t.bottom + n
        }
        function hn(e, t) {
            e.save(),
            e.beginPath(),
            e.rect(t.left, t.top, t.right - t.left, t.bottom - t.top),
            e.clip()
        }
        function gn(e) {
            e.restore()
        }
        function pn(e, t, n, s, i) {
            if (!t)
                return e.lineTo(n.x, n.y);
            if ("middle" === i) {
                const s = (t.x + n.x) / 2;
                e.lineTo(s, t.y),
                e.lineTo(s, n.y)
            } else
                "after" === i != !!s ? e.lineTo(t.x, n.y) : e.lineTo(n.x, t.y);
            e.lineTo(n.x, n.y)
        }
        function fn(e, t, n, s) {
            if (!t)
                return e.lineTo(n.x, n.y);
            e.bezierCurveTo(s ? t.cp1x : t.cp2x, s ? t.cp1y : t.cp2y, s ? n.cp2x : n.cp1x, s ? n.cp2y : n.cp1y, n.x, n.y)
        }
        function xn(e, t, n, s, i, a={}) {
            const o = ne(t) ? t : [t]
              , r = a.strokeWidth > 0 && "" !== a.strokeColor;
            let l, c;
            for (e.save(),
            e.font = i.string,
            function(e, t) {
                t.translation && e.translate(t.translation[0], t.translation[1]);
                te(t.rotation) || e.rotate(t.rotation);
                t.color && (e.fillStyle = t.color);
                t.textAlign && (e.textAlign = t.textAlign);
                t.textBaseline && (e.textBaseline = t.textBaseline)
            }(e, a),
            l = 0; l < o.length; ++l)
                c = o[l],
                a.backdrop && _n(e, a.backdrop),
                r && (a.strokeColor && (e.strokeStyle = a.strokeColor),
                te(a.strokeWidth) || (e.lineWidth = a.strokeWidth),
                e.strokeText(c, n, s, a.maxWidth)),
                e.fillText(c, n, s, a.maxWidth),
                vn(e, n, s, c, a),
                s += i.lineHeight;
            e.restore()
        }
        function vn(e, t, n, s, i) {
            if (i.strikethrough || i.underline) {
                const a = e.measureText(s)
                  , o = t - a.actualBoundingBoxLeft
                  , r = t + a.actualBoundingBoxRight
                  , l = n - a.actualBoundingBoxAscent
                  , c = n + a.actualBoundingBoxDescent
                  , u = i.strikethrough ? (l + c) / 2 : c;
                e.strokeStyle = e.fillStyle,
                e.beginPath(),
                e.lineWidth = i.decorationWidth || 2,
                e.moveTo(o, u),
                e.lineTo(r, u),
                e.stroke()
            }
        }
        function _n(e, t) {
            const n = e.fillStyle;
            e.fillStyle = t.color,
            e.fillRect(t.left, t.top, t.width, t.height),
            e.fillStyle = n
        }
        function bn(e, t) {
            const {x: n, y: s, w: i, h: a, radius: o} = t;
            e.arc(n + o.topLeft, s + o.topLeft, o.topLeft, -Ne, Ie, !0),
            e.lineTo(n, s + a - o.bottomLeft),
            e.arc(n + o.bottomLeft, s + a - o.bottomLeft, o.bottomLeft, Ie, Ne, !0),
            e.lineTo(n + i - o.bottomRight, s + a),
            e.arc(n + i - o.bottomRight, s + a - o.bottomRight, o.bottomRight, Ne, 0, !0),
            e.lineTo(n + i, s + o.topRight),
            e.arc(n + i - o.topRight, s + o.topRight, o.topRight, 0, -Ne, !0),
            e.lineTo(n + o.topLeft, s)
        }
        const Tn = /^(normal|(\d+(?:\.\d+)?)(px|em|%)?)$/
          , En = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;
        function In(e, t) {
            const n = ("" + e).match(Tn);
            if (!n || "normal" === n[1])
                return 1.2 * t;
            switch (e = +n[2],
            n[3]) {
            case "px":
                return e;
            case "%":
                e /= 100
            }
            return t * e
        }
        const Sn = e=>+e || 0;
        function yn(e, t) {
            const n = {}
              , s = se(t)
              , i = s ? Object.keys(t) : t
              , a = se(e) ? s ? n=>oe(e[n], e[t[n]]) : t=>e[t] : ()=>e;
            for (const e of i)
                n[e] = Sn(a(e));
            return n
        }
        function jn(e) {
            return yn(e, {
                top: "y",
                right: "x",
                bottom: "y",
                left: "x"
            })
        }
        function Cn(e) {
            return yn(e, ["topLeft", "topRight", "bottomLeft", "bottomRight"])
        }
        function Nn(e) {
            const t = jn(e);
            return t.width = t.left + t.right,
            t.height = t.top + t.bottom,
            t
        }
        function wn(e, t) {
            e = e || {},
            t = t || an.font;
            let n = oe(e.size, t.size);
            "string" == typeof n && (n = parseInt(n, 10));
            let s = oe(e.style, t.style);
            s && !("" + s).match(En) && (console.warn('Invalid font style specified: "' + s + '"'),
            s = void 0);
            const i = {
                family: oe(e.family, t.family),
                lineHeight: In(oe(e.lineHeight, t.lineHeight), n),
                size: n,
                style: s,
                weight: oe(e.weight, t.weight),
                string: ""
            };
            return i.string = function(e) {
                return !e || te(e.size) || te(e.family) ? null : (e.style ? e.style + " " : "") + (e.weight ? e.weight + " " : "") + e.size + "px " + e.family
            }(i),
            i
        }
        function On(e, t, n, s) {
            let i, a, o, r = !0;
            for (i = 0,
            a = e.length; i < a; ++i)
                if (o = e[i],
                void 0 !== o && (void 0 !== t && "function" == typeof o && (o = o(t),
                r = !1),
                void 0 !== n && ne(o) && (o = o[n % o.length],
                r = !1),
                void 0 !== o))
                    return s && !r && (s.cacheable = !1),
                    o
        }
        function Pn(e, t) {
            return Object.assign(Object.create(e), t)
        }
        function Ln(e, t=[""], n=e, s, i=(()=>e[0])) {
            be(s) || (s = Hn("_fallback", e));
            const a = {
                [Symbol.toStringTag]: "Object",
                _cacheable: !0,
                _scopes: e,
                _rootScopes: n,
                _fallback: s,
                _getTarget: i,
                override: i=>Ln([i, ...e], t, n, s)
            };
            return new Proxy(a,{
                deleteProperty: (t,n)=>(delete t[n],
                delete t._keys,
                delete e[0][n],
                !0),
                get: (n,s)=>Dn(n, s, (()=>function(e, t, n, s) {
                    let i;
                    for (const a of t)
                        if (i = Hn(Rn(a, e), n),
                        be(i))
                            return kn(e, i) ? Gn(n, s, e, i) : i
                }(s, t, e, n))),
                getOwnPropertyDescriptor: (e,t)=>Reflect.getOwnPropertyDescriptor(e._scopes[0], t),
                getPrototypeOf: ()=>Reflect.getPrototypeOf(e[0]),
                has: (e,t)=>Kn(e).includes(t),
                ownKeys: e=>Kn(e),
                set(e, t, n) {
                    const s = e._storage || (e._storage = i());
                    return e[t] = s[t] = n,
                    delete e._keys,
                    !0
                }
            })
        }
        function An(e, t, n, s) {
            const i = {
                _cacheable: !1,
                _proxy: e,
                _context: t,
                _subProxy: n,
                _stack: new Set,
                _descriptors: Mn(e, s),
                setContext: t=>An(e, t, n, s),
                override: i=>An(e.override(i), t, n, s)
            };
            return new Proxy(i,{
                deleteProperty: (t,n)=>(delete t[n],
                delete e[n],
                !0),
                get: (e,t,n)=>Dn(e, t, (()=>function(e, t, n) {
                    const {_proxy: s, _context: i, _subProxy: a, _descriptors: o} = e;
                    let r = s[t];
                    Te(r) && o.isScriptable(t) && (r = function(e, t, n, s) {
                        const {_proxy: i, _context: a, _subProxy: o, _stack: r} = n;
                        if (r.has(e))
                            throw new Error("Recursion detected: " + Array.from(r).join("->") + "->" + e);
                        r.add(e),
                        t = t(a, o || s),
                        r.delete(e),
                        kn(e, t) && (t = Gn(i._scopes, i, e, t));
                        return t
                    }(t, r, e, n));
                    ne(r) && r.length && (r = function(e, t, n, s) {
                        const {_proxy: i, _context: a, _subProxy: o, _descriptors: r} = n;
                        if (be(a.index) && s(e))
                            t = t[a.index % t.length];
                        else if (se(t[0])) {
                            const n = t
                              , s = i._scopes.filter((e=>e !== n));
                            t = [];
                            for (const l of n) {
                                const n = Gn(s, i, e, l);
                                t.push(An(n, a, o && o[e], r))
                            }
                        }
                        return t
                    }(t, r, e, o.isIndexable));
                    kn(t, r) && (r = An(r, i, a && a[t], o));
                    return r
                }(e, t, n))),
                getOwnPropertyDescriptor: (t,n)=>t._descriptors.allKeys ? Reflect.has(e, n) ? {
                    enumerable: !0,
                    configurable: !0
                } : void 0 : Reflect.getOwnPropertyDescriptor(e, n),
                getPrototypeOf: ()=>Reflect.getPrototypeOf(e),
                has: (t,n)=>Reflect.has(e, n),
                ownKeys: ()=>Reflect.ownKeys(e),
                set: (t,n,s)=>(e[n] = s,
                delete t[n],
                !0)
            })
        }
        function Mn(e, t={
            scriptable: !0,
            indexable: !0
        }) {
            const {_scriptable: n=t.scriptable, _indexable: s=t.indexable, _allKeys: i=t.allKeys} = e;
            return {
                allKeys: i,
                scriptable: n,
                indexable: s,
                isScriptable: Te(n) ? n : ()=>n,
                isIndexable: Te(s) ? s : ()=>s
            }
        }
        const Rn = (e,t)=>e ? e + _e(t) : t
          , kn = (e,t)=>se(t) && "adapters" !== e && (null === Object.getPrototypeOf(t) || t.constructor === Object);
        function Dn(e, t, n) {
            if (Object.prototype.hasOwnProperty.call(e, t))
                return e[t];
            const s = n();
            return e[t] = s,
            s
        }
        function Fn(e, t, n) {
            return Te(e) ? e(t, n) : e
        }
        const Un = (e,t)=>!0 === e ? t : "string" == typeof e ? ve(t, e) : void 0;
        function Bn(e, t, n, s, i) {
            for (const a of t) {
                const t = Un(n, a);
                if (t) {
                    e.add(t);
                    const a = Fn(t._fallback, n, i);
                    if (be(a) && a !== n && a !== s)
                        return a
                } else if (!1 === t && be(s) && n !== s)
                    return null
            }
            return !1
        }
        function Gn(e, t, n, s) {
            const i = t._rootScopes
              , a = Fn(t._fallback, n, s)
              , o = [...e, ...i]
              , r = new Set;
            r.add(s);
            let l = Vn(r, o, n, a || n, s);
            return null !== l && ((!be(a) || a === n || (l = Vn(r, o, a, l, s),
            null !== l)) && Ln(Array.from(r), [""], i, a, (()=>function(e, t, n) {
                const s = e._getTarget();
                t in s || (s[t] = {});
                const i = s[t];
                if (ne(i) && se(n))
                    return n;
                return i || {}
            }(t, n, s))))
        }
        function Vn(e, t, n, s, i) {
            for (; n; )
                n = Bn(e, t, n, s, i);
            return n
        }
        function Hn(e, t) {
            for (const n of t) {
                if (!n)
                    continue;
                const t = n[e];
                if (be(t))
                    return t
            }
        }
        function Kn(e) {
            let t = e._keys;
            return t || (t = e._keys = function(e) {
                const t = new Set;
                for (const n of e)
                    for (const e of Object.keys(n).filter((e=>!e.startsWith("_"))))
                        t.add(e);
                return Array.from(t)
            }(e._scopes)),
            t
        }
        function Wn(e, t, n, s) {
            const {iScale: i} = e
              , {key: a="r"} = this._parsing
              , o = new Array(s);
            let r, l, c, u;
            for (r = 0,
            l = s; r < l; ++r)
                c = r + n,
                u = t[c],
                o[r] = {
                    r: i.parse(ve(u, a), c)
                };
            return o
        }
        const zn = Number.EPSILON || 1e-14
          , Yn = (e,t)=>t < e.length && !e[t].skip && e[t]
          , $n = e=>"x" === e ? "y" : "x";
        function qn(e, t, n, s) {
            const i = e.skip ? t : e
              , a = t
              , o = n.skip ? t : n
              , r = Ge(a, i)
              , l = Ge(o, a);
            let c = r / (r + l)
              , u = l / (r + l);
            c = isNaN(c) ? 0 : c,
            u = isNaN(u) ? 0 : u;
            const d = s * c
              , m = s * u;
            return {
                previous: {
                    x: a.x - d * (o.x - i.x),
                    y: a.y - d * (o.y - i.y)
                },
                next: {
                    x: a.x + m * (o.x - i.x),
                    y: a.y + m * (o.y - i.y)
                }
            }
        }
        function Xn(e, t="x") {
            const n = $n(t)
              , s = e.length
              , i = Array(s).fill(0)
              , a = Array(s);
            let o, r, l, c = Yn(e, 0);
            for (o = 0; o < s; ++o)
                if (r = l,
                l = c,
                c = Yn(e, o + 1),
                l) {
                    if (c) {
                        const e = c[t] - l[t];
                        i[o] = 0 !== e ? (c[n] - l[n]) / e : 0
                    }
                    a[o] = r ? c ? Le(i[o - 1]) !== Le(i[o]) ? 0 : (i[o - 1] + i[o]) / 2 : i[o - 1] : i[o]
                }
            !function(e, t, n) {
                const s = e.length;
                let i, a, o, r, l, c = Yn(e, 0);
                for (let u = 0; u < s - 1; ++u)
                    l = c,
                    c = Yn(e, u + 1),
                    l && c && (Ae(t[u], 0, zn) ? n[u] = n[u + 1] = 0 : (i = n[u] / t[u],
                    a = n[u + 1] / t[u],
                    r = Math.pow(i, 2) + Math.pow(a, 2),
                    r <= 9 || (o = 3 / Math.sqrt(r),
                    n[u] = i * o * t[u],
                    n[u + 1] = a * o * t[u])))
            }(e, i, a),
            function(e, t, n="x") {
                const s = $n(n)
                  , i = e.length;
                let a, o, r, l = Yn(e, 0);
                for (let c = 0; c < i; ++c) {
                    if (o = r,
                    r = l,
                    l = Yn(e, c + 1),
                    !r)
                        continue;
                    const i = r[n]
                      , u = r[s];
                    o && (a = (i - o[n]) / 3,
                    r[`cp1${n}`] = i - a,
                    r[`cp1${s}`] = u - a * t[c]),
                    l && (a = (l[n] - i) / 3,
                    r[`cp2${n}`] = i + a,
                    r[`cp2${s}`] = u + a * t[c])
                }
            }(e, a, t)
        }
        function Qn(e, t, n) {
            return Math.max(Math.min(e, n), t)
        }
        function Zn(e, t, n, s, i) {
            let a, o, r, l;
            if (t.spanGaps && (e = e.filter((e=>!e.skip))),
            "monotone" === t.cubicInterpolationMode)
                Xn(e, i);
            else {
                let n = s ? e[e.length - 1] : e[0];
                for (a = 0,
                o = e.length; a < o; ++a)
                    r = e[a],
                    l = qn(n, r, e[Math.min(a + 1, o - (s ? 0 : 1)) % o], t.tension),
                    r.cp1x = l.previous.x,
                    r.cp1y = l.previous.y,
                    r.cp2x = l.next.x,
                    r.cp2y = l.next.y,
                    n = r
            }
            t.capBezierPoints && function(e, t) {
                let n, s, i, a, o, r = mn(e[0], t);
                for (n = 0,
                s = e.length; n < s; ++n)
                    o = a,
                    a = r,
                    r = n < s - 1 && mn(e[n + 1], t),
                    a && (i = e[n],
                    o && (i.cp1x = Qn(i.cp1x, t.left, t.right),
                    i.cp1y = Qn(i.cp1y, t.top, t.bottom)),
                    r && (i.cp2x = Qn(i.cp2x, t.left, t.right),
                    i.cp2y = Qn(i.cp2y, t.top, t.bottom)))
            }(e, n)
        }
        function Jn() {
            return "undefined" != typeof window && "undefined" != typeof document
        }
        function es(e) {
            let t = e.parentNode;
            return t && "[object ShadowRoot]" === t.toString() && (t = t.host),
            t
        }
        function ts(e, t, n) {
            let s;
            return "string" == typeof e ? (s = parseInt(e, 10),
            -1 !== e.indexOf("%") && (s = s / 100 * t.parentNode[n])) : s = e,
            s
        }
        const ns = e=>e.ownerDocument.defaultView.getComputedStyle(e, null);
        const ss = ["top", "right", "bottom", "left"];
        function is(e, t, n) {
            const s = {};
            n = n ? "-" + n : "";
            for (let i = 0; i < 4; i++) {
                const a = ss[i];
                s[a] = parseFloat(e[t + "-" + a + n]) || 0
            }
            return s.width = s.left + s.right,
            s.height = s.top + s.bottom,
            s
        }
        const as = (e,t,n)=>(e > 0 || t > 0) && (!n || !n.shadowRoot);
        function os(e, t) {
            if ("native"in e)
                return e;
            const {canvas: n, currentDevicePixelRatio: s} = t
              , i = ns(n)
              , a = "border-box" === i.boxSizing
              , o = is(i, "padding")
              , r = is(i, "border", "width")
              , {x: l, y: c, box: u} = function(e, t) {
                const n = e.touches
                  , s = n && n.length ? n[0] : e
                  , {offsetX: i, offsetY: a} = s;
                let o, r, l = !1;
                if (as(i, a, e.target))
                    o = i,
                    r = a;
                else {
                    const e = t.getBoundingClientRect();
                    o = s.clientX - e.left,
                    r = s.clientY - e.top,
                    l = !0
                }
                return {
                    x: o,
                    y: r,
                    box: l
                }
            }(e, n)
              , d = o.left + (u && r.left)
              , m = o.top + (u && r.top);
            let {width: h, height: g} = t;
            return a && (h -= o.width + r.width,
            g -= o.height + r.height),
            {
                x: Math.round((l - d) / h * n.width / s),
                y: Math.round((c - m) / g * n.height / s)
            }
        }
        const rs = e=>Math.round(10 * e) / 10;
        function ls(e, t, n, s) {
            const i = ns(e)
              , a = is(i, "margin")
              , o = ts(i.maxWidth, e, "clientWidth") || je
              , r = ts(i.maxHeight, e, "clientHeight") || je
              , l = function(e, t, n) {
                let s, i;
                if (void 0 === t || void 0 === n) {
                    const a = es(e);
                    if (a) {
                        const e = a.getBoundingClientRect()
                          , o = ns(a)
                          , r = is(o, "border", "width")
                          , l = is(o, "padding");
                        t = e.width - l.width - r.width,
                        n = e.height - l.height - r.height,
                        s = ts(o.maxWidth, a, "clientWidth"),
                        i = ts(o.maxHeight, a, "clientHeight")
                    } else
                        t = e.clientWidth,
                        n = e.clientHeight
                }
                return {
                    width: t,
                    height: n,
                    maxWidth: s || je,
                    maxHeight: i || je
                }
            }(e, t, n);
            let {width: c, height: u} = l;
            if ("content-box" === i.boxSizing) {
                const e = is(i, "border", "width")
                  , t = is(i, "padding");
                c -= t.width + e.width,
                u -= t.height + e.height
            }
            c = Math.max(0, c - a.width),
            u = Math.max(0, s ? Math.floor(c / s) : u - a.height),
            c = rs(Math.min(c, o, l.maxWidth)),
            u = rs(Math.min(u, r, l.maxHeight)),
            c && !u && (u = rs(c / 2));
            return (void 0 !== t || void 0 !== n) && s && l.height && u > l.height && (u = l.height,
            c = rs(Math.floor(u * s))),
            {
                width: c,
                height: u
            }
        }
        function cs(e, t, n) {
            const s = t || 1
              , i = Math.floor(e.height * s)
              , a = Math.floor(e.width * s);
            e.height = i / s,
            e.width = a / s;
            const o = e.canvas;
            return o.style && (n || !o.style.height && !o.style.width) && (o.style.height = `${e.height}px`,
            o.style.width = `${e.width}px`),
            (e.currentDevicePixelRatio !== s || o.height !== i || o.width !== a) && (e.currentDevicePixelRatio = s,
            o.height = i,
            o.width = a,
            e.ctx.setTransform(s, 0, 0, s, 0, 0),
            !0)
        }
        const us = function() {
            let e = !1;
            try {
                const t = {
                    get passive() {
                        return e = !0,
                        !1
                    }
                };
                window.addEventListener("test", null, t),
                window.removeEventListener("test", null, t)
            } catch (e) {}
            return e
        }();
        function ds(e, t) {
            const n = function(e, t) {
                return ns(e).getPropertyValue(t)
            }(e, t)
              , s = n && n.match(/^(\d+)(\.\d+)?px$/);
            return s ? +s[1] : void 0
        }
        function ms(e, t, n, s) {
            return {
                x: e.x + n * (t.x - e.x),
                y: e.y + n * (t.y - e.y)
            }
        }
        function hs(e, t, n, s) {
            return {
                x: e.x + n * (t.x - e.x),
                y: "middle" === s ? n < .5 ? e.y : t.y : "after" === s ? n < 1 ? e.y : t.y : n > 0 ? t.y : e.y
            }
        }
        function gs(e, t, n, s) {
            const i = {
                x: e.cp2x,
                y: e.cp2y
            }
              , a = {
                x: t.cp1x,
                y: t.cp1y
            }
              , o = ms(e, i, n)
              , r = ms(i, a, n)
              , l = ms(a, t, n)
              , c = ms(o, r, n)
              , u = ms(r, l, n);
            return ms(c, u, n)
        }
        function ps(e, t, n) {
            return e ? function(e, t) {
                return {
                    x: n=>e + e + t - n,
                    setWidth(e) {
                        t = e
                    },
                    textAlign: e=>"center" === e ? e : "right" === e ? "left" : "right",
                    xPlus: (e,t)=>e - t,
                    leftForLtr: (e,t)=>e - t
                }
            }(t, n) : {
                x: e=>e,
                setWidth(e) {},
                textAlign: e=>e,
                xPlus: (e,t)=>e + t,
                leftForLtr: (e,t)=>e
            }
        }
        function fs(e, t) {
            let n, s;
            "ltr" !== t && "rtl" !== t || (n = e.canvas.style,
            s = [n.getPropertyValue("direction"), n.getPropertyPriority("direction")],
            n.setProperty("direction", t, "important"),
            e.prevTextDirection = s)
        }
        function xs(e, t) {
            void 0 !== t && (delete e.prevTextDirection,
            e.canvas.style.setProperty("direction", t[0], t[1]))
        }
        function vs(e) {
            return "angle" === e ? {
                between: Ke,
                compare: Ve,
                normalize: He
            } : {
                between: ze,
                compare: (e,t)=>e - t,
                normalize: e=>e
            }
        }
        function _s({start: e, end: t, count: n, loop: s, style: i}) {
            return {
                start: e % n,
                end: t % n,
                loop: s && (t - e + 1) % n == 0,
                style: i
            }
        }
        function bs(e, t, n) {
            if (!n)
                return [e];
            const {property: s, start: i, end: a} = n
              , o = t.length
              , {compare: r, between: l, normalize: c} = vs(s)
              , {start: u, end: d, loop: m, style: h} = function(e, t, n) {
                const {property: s, start: i, end: a} = n
                  , {between: o, normalize: r} = vs(s)
                  , l = t.length;
                let c, u, {start: d, end: m, loop: h} = e;
                if (h) {
                    for (d += l,
                    m += l,
                    c = 0,
                    u = l; c < u && o(r(t[d % l][s]), i, a); ++c)
                        d--,
                        m--;
                    d %= l,
                    m %= l
                }
                return m < d && (m += l),
                {
                    start: d,
                    end: m,
                    loop: h,
                    style: e.style
                }
            }(e, t, n)
              , g = [];
            let p, f, x, v = !1, _ = null;
            const b = ()=>v || l(i, x, p) && 0 !== r(i, x)
              , T = ()=>!v || 0 === r(a, p) || l(a, x, p);
            for (let e = u, n = u; e <= d; ++e)
                f = t[e % o],
                f.skip || (p = c(f[s]),
                p !== x && (v = l(p, i, a),
                null === _ && b() && (_ = 0 === r(p, i) ? e : n),
                null !== _ && T() && (g.push(_s({
                    start: _,
                    end: e,
                    loop: m,
                    count: o,
                    style: h
                })),
                _ = null),
                n = e,
                x = p));
            return null !== _ && g.push(_s({
                start: _,
                end: d,
                loop: m,
                count: o,
                style: h
            })),
            g
        }
        function Ts(e, t) {
            const n = []
              , s = e.segments;
            for (let i = 0; i < s.length; i++) {
                const a = bs(s[i], e.points, t);
                a.length && n.push(...a)
            }
            return n
        }
        function Es(e, t, n, s) {
            return s && s.setContext && n ? function(e, t, n, s) {
                const i = e._chart.getContext()
                  , a = Is(e.options)
                  , {_datasetIndex: o, options: {spanGaps: r}} = e
                  , l = n.length
                  , c = [];
                let u = a
                  , d = t[0].start
                  , m = d;
                function h(e, t, s, i) {
                    const a = r ? -1 : 1;
                    if (e !== t) {
                        for (e += l; n[e % l].skip; )
                            e -= a;
                        for (; n[t % l].skip; )
                            t += a;
                        e % l != t % l && (c.push({
                            start: e % l,
                            end: t % l,
                            loop: s,
                            style: i
                        }),
                        u = i,
                        d = t % l)
                    }
                }
                for (const e of t) {
                    d = r ? d : e.start;
                    let t, a = n[d % l];
                    for (m = d + 1; m <= e.end; m++) {
                        const r = n[m % l];
                        t = Is(s.setContext(Pn(i, {
                            type: "segment",
                            p0: a,
                            p1: r,
                            p0DataIndex: (m - 1) % l,
                            p1DataIndex: m % l,
                            datasetIndex: o
                        }))),
                        Ss(t, u) && h(d, m - 1, e.loop, u),
                        a = r,
                        u = t
                    }
                    d < m - 1 && h(d, m - 1, e.loop, u)
                }
                return c
            }(e, t, n, s) : t
        }
        function Is(e) {
            return {
                backgroundColor: e.backgroundColor,
                borderCapStyle: e.borderCapStyle,
                borderDash: e.borderDash,
                borderDashOffset: e.borderDashOffset,
                borderJoinStyle: e.borderJoinStyle,
                borderWidth: e.borderWidth,
                borderColor: e.borderColor
            }
        }
        function Ss(e, t) {
            return t && JSON.stringify(e) !== JSON.stringify(t)
        }
        class ys {
            constructor() {
                this._request = null,
                this._charts = new Map,
                this._running = !1,
                this._lastDate = void 0
            }
            _notify(e, t, n, s) {
                const i = t.listeners[s]
                  , a = t.duration;
                i.forEach((s=>s({
                    chart: e,
                    initial: t.initial,
                    numSteps: a,
                    currentStep: Math.min(n - t.start, a)
                })))
            }
            _refresh() {
                this._request || (this._running = !0,
                this._request = Je.call(window, (()=>{
                    this._update(),
                    this._request = null,
                    this._running && this._refresh()
                }
                )))
            }
            _update(e=Date.now()) {
                let t = 0;
                this._charts.forEach(((n,s)=>{
                    if (!n.running || !n.items.length)
                        return;
                    const i = n.items;
                    let a, o = i.length - 1, r = !1;
                    for (; o >= 0; --o)
                        a = i[o],
                        a._active ? (a._total > n.duration && (n.duration = a._total),
                        a.tick(e),
                        r = !0) : (i[o] = i[i.length - 1],
                        i.pop());
                    r && (s.draw(),
                    this._notify(s, n, e, "progress")),
                    i.length || (n.running = !1,
                    this._notify(s, n, e, "complete"),
                    n.initial = !1),
                    t += i.length
                }
                )),
                this._lastDate = e,
                0 === t && (this._running = !1)
            }
            _getAnims(e) {
                const t = this._charts;
                let n = t.get(e);
                return n || (n = {
                    running: !1,
                    initial: !0,
                    items: [],
                    listeners: {
                        complete: [],
                        progress: []
                    }
                },
                t.set(e, n)),
                n
            }
            listen(e, t, n) {
                this._getAnims(e).listeners[t].push(n)
            }
            add(e, t) {
                t && t.length && this._getAnims(e).items.push(...t)
            }
            has(e) {
                return this._getAnims(e).items.length > 0
            }
            start(e) {
                const t = this._charts.get(e);
                t && (t.running = !0,
                t.start = Date.now(),
                t.duration = t.items.reduce(((e,t)=>Math.max(e, t._duration)), 0),
                this._refresh())
            }
            running(e) {
                if (!this._running)
                    return !1;
                const t = this._charts.get(e);
                return !!(t && t.running && t.items.length)
            }
            stop(e) {
                const t = this._charts.get(e);
                if (!t || !t.items.length)
                    return;
                const n = t.items;
                let s = n.length - 1;
                for (; s >= 0; --s)
                    n[s].cancel();
                t.items = [],
                this._notify(e, t, Date.now(), "complete")
            }
            remove(e) {
                return this._charts.delete(e)
            }
        }
        var js = new ys;
        const Cs = "transparent"
          , Ns = {
            boolean: (e,t,n)=>n > .5 ? t : e,
            color(e, t, n) {
                const s = Wt(e || Cs)
                  , i = s.valid && Wt(t || Cs);
                return i && i.valid ? i.mix(s, n).hexString() : t
            },
            number: (e,t,n)=>e + (t - e) * n
        };
        class ws {
            constructor(e, t, n, s) {
                const i = t[n];
                s = On([e.to, s, i, e.from]);
                const a = On([e.from, i, s]);
                this._active = !0,
                this._fn = e.fn || Ns[e.type || typeof a],
                this._easing = ct[e.easing] || ct.linear,
                this._start = Math.floor(Date.now() + (e.delay || 0)),
                this._duration = this._total = Math.floor(e.duration),
                this._loop = !!e.loop,
                this._target = t,
                this._prop = n,
                this._from = a,
                this._to = s,
                this._promises = void 0
            }
            active() {
                return this._active
            }
            update(e, t, n) {
                if (this._active) {
                    this._notify(!1);
                    const s = this._target[this._prop]
                      , i = n - this._start
                      , a = this._duration - i;
                    this._start = n,
                    this._duration = Math.floor(Math.max(a, e.duration)),
                    this._total += i,
                    this._loop = !!e.loop,
                    this._to = On([e.to, t, s, e.from]),
                    this._from = On([e.from, s, t])
                }
            }
            cancel() {
                this._active && (this.tick(Date.now()),
                this._active = !1,
                this._notify(!1))
            }
            tick(e) {
                const t = e - this._start
                  , n = this._duration
                  , s = this._prop
                  , i = this._from
                  , a = this._loop
                  , o = this._to;
                let r;
                if (this._active = i !== o && (a || t < n),
                !this._active)
                    return this._target[s] = o,
                    void this._notify(!0);
                t < 0 ? this._target[s] = i : (r = t / n % 2,
                r = a && r > 1 ? 2 - r : r,
                r = this._easing(Math.min(1, Math.max(0, r))),
                this._target[s] = this._fn(i, o, r))
            }
            wait() {
                const e = this._promises || (this._promises = []);
                return new Promise(((t,n)=>{
                    e.push({
                        res: t,
                        rej: n
                    })
                }
                ))
            }
            _notify(e) {
                const t = e ? "res" : "rej"
                  , n = this._promises || [];
                for (let e = 0; e < n.length; e++)
                    n[e][t]()
            }
        }
        class Os {
            constructor(e, t) {
                this._chart = e,
                this._properties = new Map,
                this.configure(t)
            }
            configure(e) {
                if (!se(e))
                    return;
                const t = Object.keys(an.animation)
                  , n = this._properties;
                Object.getOwnPropertyNames(e).forEach((s=>{
                    const i = e[s];
                    if (!se(i))
                        return;
                    const a = {};
                    for (const e of t)
                        a[e] = i[e];
                    (ne(i.properties) && i.properties || [s]).forEach((e=>{
                        e !== s && n.has(e) || n.set(e, a)
                    }
                    ))
                }
                ))
            }
            _animateOptions(e, t) {
                const n = t.options
                  , s = function(e, t) {
                    if (!t)
                        return;
                    let n = e.options;
                    if (!n)
                        return void (e.options = t);
                    n.$shared && (e.options = n = Object.assign({}, n, {
                        $shared: !1,
                        $animations: {}
                    }));
                    return n
                }(e, n);
                if (!s)
                    return [];
                const i = this._createAnimations(s, n);
                return n.$shared && function(e, t) {
                    const n = []
                      , s = Object.keys(t);
                    for (let t = 0; t < s.length; t++) {
                        const i = e[s[t]];
                        i && i.active() && n.push(i.wait())
                    }
                    return Promise.all(n)
                }(e.options.$animations, n).then((()=>{
                    e.options = n
                }
                ), (()=>{}
                )),
                i
            }
            _createAnimations(e, t) {
                const n = this._properties
                  , s = []
                  , i = e.$animations || (e.$animations = {})
                  , a = Object.keys(t)
                  , o = Date.now();
                let r;
                for (r = a.length - 1; r >= 0; --r) {
                    const l = a[r];
                    if ("$" === l.charAt(0))
                        continue;
                    if ("options" === l) {
                        s.push(...this._animateOptions(e, t));
                        continue
                    }
                    const c = t[l];
                    let u = i[l];
                    const d = n.get(l);
                    if (u) {
                        if (d && u.active()) {
                            u.update(d, c, o);
                            continue
                        }
                        u.cancel()
                    }
                    d && d.duration ? (i[l] = u = new ws(d,e,l,c),
                    s.push(u)) : e[l] = c
                }
                return s
            }
            update(e, t) {
                if (0 === this._properties.size)
                    return void Object.assign(e, t);
                const n = this._createAnimations(e, t);
                return n.length ? (js.add(this._chart, n),
                !0) : void 0
            }
        }
        function Ps(e, t) {
            const n = e && e.options || {}
              , s = n.reverse
              , i = void 0 === n.min ? t : 0
              , a = void 0 === n.max ? t : 0;
            return {
                start: s ? a : i,
                end: s ? i : a
            }
        }
        function Ls(e, t) {
            const n = []
              , s = e._getSortedDatasetMetas(t);
            let i, a;
            for (i = 0,
            a = s.length; i < a; ++i)
                n.push(s[i].index);
            return n
        }
        function As(e, t, n, s={}) {
            const i = e.keys
              , a = "single" === s.mode;
            let o, r, l, c;
            if (null !== t) {
                for (o = 0,
                r = i.length; o < r; ++o) {
                    if (l = +i[o],
                    l === n) {
                        if (s.all)
                            continue;
                        break
                    }
                    c = e.values[l],
                    ie(c) && (a || 0 === t || Le(t) === Le(c)) && (t += c)
                }
                return t
            }
        }
        function Ms(e, t) {
            const n = e && e.options.stacked;
            return n || void 0 === n && void 0 !== t.stack
        }
        function Rs(e, t, n) {
            const s = e[t] || (e[t] = {});
            return s[n] || (s[n] = {})
        }
        function ks(e, t, n, s) {
            for (const i of t.getMatchingVisibleMetas(s).reverse()) {
                const t = e[i.index];
                if (n && t > 0 || !n && t < 0)
                    return i.index
            }
            return null
        }
        function Ds(e, t) {
            const {chart: n, _cachedMeta: s} = e
              , i = n._stacks || (n._stacks = {})
              , {iScale: a, vScale: o, index: r} = s
              , l = a.axis
              , c = o.axis
              , u = function(e, t, n) {
                return `${e.id}.${t.id}.${n.stack || n.type}`
            }(a, o, s)
              , d = t.length;
            let m;
            for (let e = 0; e < d; ++e) {
                const n = t[e]
                  , {[l]: a, [c]: d} = n;
                m = (n._stacks || (n._stacks = {}))[c] = Rs(i, u, a),
                m[r] = d,
                m._top = ks(m, o, !0, s.type),
                m._bottom = ks(m, o, !1, s.type)
            }
        }
        function Fs(e, t) {
            const n = e.scales;
            return Object.keys(n).filter((e=>n[e].axis === t)).shift()
        }
        function Us(e, t) {
            const n = e.controller.index
              , s = e.vScale && e.vScale.axis;
            if (s) {
                t = t || e._parsed;
                for (const e of t) {
                    const t = e._stacks;
                    if (!t || void 0 === t[s] || void 0 === t[s][n])
                        return;
                    delete t[s][n]
                }
            }
        }
        const Bs = e=>"reset" === e || "none" === e
          , Gs = (e,t)=>t ? e : Object.assign({}, e);
        class Vs {
            static defaults = {};
            static datasetElementType = null;
            static dataElementType = null;
            constructor(e, t) {
                this.chart = e,
                this._ctx = e.ctx,
                this.index = t,
                this._cachedDataOpts = {},
                this._cachedMeta = this.getMeta(),
                this._type = this._cachedMeta.type,
                this.options = void 0,
                this._parsing = !1,
                this._data = void 0,
                this._objectData = void 0,
                this._sharedOptions = void 0,
                this._drawStart = void 0,
                this._drawCount = void 0,
                this.enableOptionSharing = !1,
                this.supportsDecimation = !1,
                this.$context = void 0,
                this._syncList = [],
                this.datasetElementType = new.target.datasetElementType,
                this.dataElementType = new.target.dataElementType,
                this.initialize()
            }
            initialize() {
                const e = this._cachedMeta;
                this.configure(),
                this.linkScales(),
                e._stacked = Ms(e.vScale, e),
                this.addElements(),
                this.options.fill && !this.chart.isPluginEnabled("filler") && console.warn("Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options")
            }
            updateIndex(e) {
                this.index !== e && Us(this._cachedMeta),
                this.index = e
            }
            linkScales() {
                const e = this.chart
                  , t = this._cachedMeta
                  , n = this.getDataset()
                  , s = (e,t,n,s)=>"x" === e ? t : "r" === e ? s : n
                  , i = t.xAxisID = oe(n.xAxisID, Fs(e, "x"))
                  , a = t.yAxisID = oe(n.yAxisID, Fs(e, "y"))
                  , o = t.rAxisID = oe(n.rAxisID, Fs(e, "r"))
                  , r = t.indexAxis
                  , l = t.iAxisID = s(r, i, a, o)
                  , c = t.vAxisID = s(r, a, i, o);
                t.xScale = this.getScaleForId(i),
                t.yScale = this.getScaleForId(a),
                t.rScale = this.getScaleForId(o),
                t.iScale = this.getScaleForId(l),
                t.vScale = this.getScaleForId(c)
            }
            getDataset() {
                return this.chart.data.datasets[this.index]
            }
            getMeta() {
                return this.chart.getDatasetMeta(this.index)
            }
            getScaleForId(e) {
                return this.chart.scales[e]
            }
            _getOtherScale(e) {
                const t = this._cachedMeta;
                return e === t.iScale ? t.vScale : t.iScale
            }
            reset() {
                this._update("reset")
            }
            _destroy() {
                const e = this._cachedMeta;
                this._data && Qe(this._data, this),
                e._stacked && Us(e)
            }
            _dataCheck() {
                const e = this.getDataset()
                  , t = e.data || (e.data = [])
                  , n = this._data;
                if (se(t))
                    this._data = function(e) {
                        const t = Object.keys(e)
                          , n = new Array(t.length);
                        let s, i, a;
                        for (s = 0,
                        i = t.length; s < i; ++s)
                            a = t[s],
                            n[s] = {
                                x: a,
                                y: e[a]
                            };
                        return n
                    }(t);
                else if (n !== t) {
                    if (n) {
                        Qe(n, this);
                        const e = this._cachedMeta;
                        Us(e),
                        e._parsed = []
                    }
                    t && Object.isExtensible(t) && function(e, t) {
                        e._chartjs ? e._chartjs.listeners.push(t) : (Object.defineProperty(e, "_chartjs", {
                            configurable: !0,
                            enumerable: !1,
                            value: {
                                listeners: [t]
                            }
                        }),
                        Xe.forEach((t=>{
                            const n = "_onData" + _e(t)
                              , s = e[t];
                            Object.defineProperty(e, t, {
                                configurable: !0,
                                enumerable: !1,
                                value(...t) {
                                    const i = s.apply(this, t);
                                    return e._chartjs.listeners.forEach((e=>{
                                        "function" == typeof e[n] && e[n](...t)
                                    }
                                    )),
                                    i
                                }
                            })
                        }
                        )))
                    }(t, this),
                    this._syncList = [],
                    this._data = t
                }
            }
            addElements() {
                const e = this._cachedMeta;
                this._dataCheck(),
                this.datasetElementType && (e.dataset = new this.datasetElementType)
            }
            buildOrUpdateElements(e) {
                const t = this._cachedMeta
                  , n = this.getDataset();
                let s = !1;
                this._dataCheck();
                const i = t._stacked;
                t._stacked = Ms(t.vScale, t),
                t.stack !== n.stack && (s = !0,
                Us(t),
                t.stack = n.stack),
                this._resyncElements(e),
                (s || i !== t._stacked) && Ds(this, t._parsed)
            }
            configure() {
                const e = this.chart.config
                  , t = e.datasetScopeKeys(this._type)
                  , n = e.getOptionScopes(this.getDataset(), t, !0);
                this.options = e.createResolver(n, this.getContext()),
                this._parsing = this.options.parsing,
                this._cachedDataOpts = {}
            }
            parse(e, t) {
                const {_cachedMeta: n, _data: s} = this
                  , {iScale: i, _stacked: a} = n
                  , o = i.axis;
                let r, l, c, u = 0 === e && t === s.length || n._sorted, d = e > 0 && n._parsed[e - 1];
                if (!1 === this._parsing)
                    n._parsed = s,
                    n._sorted = !0,
                    c = s;
                else {
                    c = ne(s[e]) ? this.parseArrayData(n, s, e, t) : se(s[e]) ? this.parseObjectData(n, s, e, t) : this.parsePrimitiveData(n, s, e, t);
                    const i = ()=>null === l[o] || d && l[o] < d[o];
                    for (r = 0; r < t; ++r)
                        n._parsed[r + e] = l = c[r],
                        u && (i() && (u = !1),
                        d = l);
                    n._sorted = u
                }
                a && Ds(this, c)
            }
            parsePrimitiveData(e, t, n, s) {
                const {iScale: i, vScale: a} = e
                  , o = i.axis
                  , r = a.axis
                  , l = i.getLabels()
                  , c = i === a
                  , u = new Array(s);
                let d, m, h;
                for (d = 0,
                m = s; d < m; ++d)
                    h = d + n,
                    u[d] = {
                        [o]: c || i.parse(l[h], h),
                        [r]: a.parse(t[h], h)
                    };
                return u
            }
            parseArrayData(e, t, n, s) {
                const {xScale: i, yScale: a} = e
                  , o = new Array(s);
                let r, l, c, u;
                for (r = 0,
                l = s; r < l; ++r)
                    c = r + n,
                    u = t[c],
                    o[r] = {
                        x: i.parse(u[0], c),
                        y: a.parse(u[1], c)
                    };
                return o
            }
            parseObjectData(e, t, n, s) {
                const {xScale: i, yScale: a} = e
                  , {xAxisKey: o="x", yAxisKey: r="y"} = this._parsing
                  , l = new Array(s);
                let c, u, d, m;
                for (c = 0,
                u = s; c < u; ++c)
                    d = c + n,
                    m = t[d],
                    l[c] = {
                        x: i.parse(ve(m, o), d),
                        y: a.parse(ve(m, r), d)
                    };
                return l
            }
            getParsed(e) {
                return this._cachedMeta._parsed[e]
            }
            getDataElement(e) {
                return this._cachedMeta.data[e]
            }
            applyStack(e, t, n) {
                const s = this.chart
                  , i = this._cachedMeta
                  , a = t[e.axis];
                return As({
                    keys: Ls(s, !0),
                    values: t._stacks[e.axis]
                }, a, i.index, {
                    mode: n
                })
            }
            updateRangeFromParsed(e, t, n, s) {
                const i = n[t.axis];
                let a = null === i ? NaN : i;
                const o = s && n._stacks[t.axis];
                s && o && (s.values = o,
                a = As(s, i, this._cachedMeta.index)),
                e.min = Math.min(e.min, a),
                e.max = Math.max(e.max, a)
            }
            getMinMax(e, t) {
                const n = this._cachedMeta
                  , s = n._parsed
                  , i = n._sorted && e === n.iScale
                  , a = s.length
                  , o = this._getOtherScale(e)
                  , r = ((e,t,n)=>e && !t.hidden && t._stacked && {
                    keys: Ls(n, !0),
                    values: null
                })(t, n, this.chart)
                  , l = {
                    min: Number.POSITIVE_INFINITY,
                    max: Number.NEGATIVE_INFINITY
                }
                  , {min: c, max: u} = function(e) {
                    const {min: t, max: n, minDefined: s, maxDefined: i} = e.getUserBounds();
                    return {
                        min: s ? t : Number.NEGATIVE_INFINITY,
                        max: i ? n : Number.POSITIVE_INFINITY
                    }
                }(o);
                let d, m;
                function h() {
                    m = s[d];
                    const t = m[o.axis];
                    return !ie(m[e.axis]) || c > t || u < t
                }
                for (d = 0; d < a && (h() || (this.updateRangeFromParsed(l, e, m, r),
                !i)); ++d)
                    ;
                if (i)
                    for (d = a - 1; d >= 0; --d)
                        if (!h()) {
                            this.updateRangeFromParsed(l, e, m, r);
                            break
                        }
                return l
            }
            getAllParsedValues(e) {
                const t = this._cachedMeta._parsed
                  , n = [];
                let s, i, a;
                for (s = 0,
                i = t.length; s < i; ++s)
                    a = t[s][e.axis],
                    ie(a) && n.push(a);
                return n
            }
            getMaxOverflow() {
                return !1
            }
            getLabelAndValue(e) {
                const t = this._cachedMeta
                  , n = t.iScale
                  , s = t.vScale
                  , i = this.getParsed(e);
                return {
                    label: n ? "" + n.getLabelForValue(i[n.axis]) : "",
                    value: s ? "" + s.getLabelForValue(i[s.axis]) : ""
                }
            }
            _update(e) {
                const t = this._cachedMeta;
                this.update(e || "default"),
                t._clip = function(e) {
                    let t, n, s, i;
                    return se(e) ? (t = e.top,
                    n = e.right,
                    s = e.bottom,
                    i = e.left) : t = n = s = i = e,
                    {
                        top: t,
                        right: n,
                        bottom: s,
                        left: i,
                        disabled: !1 === e
                    }
                }(oe(this.options.clip, function(e, t, n) {
                    if (!1 === n)
                        return !1;
                    const s = Ps(e, n)
                      , i = Ps(t, n);
                    return {
                        top: i.end,
                        right: s.end,
                        bottom: i.start,
                        left: s.start
                    }
                }(t.xScale, t.yScale, this.getMaxOverflow())))
            }
            update(e) {}
            draw() {
                const e = this._ctx
                  , t = this.chart
                  , n = this._cachedMeta
                  , s = n.data || []
                  , i = t.chartArea
                  , a = []
                  , o = this._drawStart || 0
                  , r = this._drawCount || s.length - o
                  , l = this.options.drawActiveElementsOnTop;
                let c;
                for (n.dataset && n.dataset.draw(e, i, o, r),
                c = o; c < o + r; ++c) {
                    const t = s[c];
                    t.hidden || (t.active && l ? a.push(t) : t.draw(e, i))
                }
                for (c = 0; c < a.length; ++c)
                    a[c].draw(e, i)
            }
            getStyle(e, t) {
                const n = t ? "active" : "default";
                return void 0 === e && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(n) : this.resolveDataElementOptions(e || 0, n)
            }
            getContext(e, t, n) {
                const s = this.getDataset();
                let i;
                if (e >= 0 && e < this._cachedMeta.data.length) {
                    const t = this._cachedMeta.data[e];
                    i = t.$context || (t.$context = function(e, t, n) {
                        return Pn(e, {
                            active: !1,
                            dataIndex: t,
                            parsed: void 0,
                            raw: void 0,
                            element: n,
                            index: t,
                            mode: "default",
                            type: "data"
                        })
                    }(this.getContext(), e, t)),
                    i.parsed = this.getParsed(e),
                    i.raw = s.data[e],
                    i.index = i.dataIndex = e
                } else
                    i = this.$context || (this.$context = function(e, t) {
                        return Pn(e, {
                            active: !1,
                            dataset: void 0,
                            datasetIndex: t,
                            index: t,
                            mode: "default",
                            type: "dataset"
                        })
                    }(this.chart.getContext(), this.index)),
                    i.dataset = s,
                    i.index = i.datasetIndex = this.index;
                return i.active = !!t,
                i.mode = n,
                i
            }
            resolveDatasetElementOptions(e) {
                return this._resolveElementOptions(this.datasetElementType.id, e)
            }
            resolveDataElementOptions(e, t) {
                return this._resolveElementOptions(this.dataElementType.id, t, e)
            }
            _resolveElementOptions(e, t="default", n) {
                const s = "active" === t
                  , i = this._cachedDataOpts
                  , a = e + "-" + t
                  , o = i[a]
                  , r = this.enableOptionSharing && be(n);
                if (o)
                    return Gs(o, r);
                const l = this.chart.config
                  , c = l.datasetElementScopeKeys(this._type, e)
                  , u = s ? [`${e}Hover`, "hover", e, ""] : [e, ""]
                  , d = l.getOptionScopes(this.getDataset(), c)
                  , m = Object.keys(an.elements[e])
                  , h = l.resolveNamedOptions(d, m, (()=>this.getContext(n, s)), u);
                return h.$shared && (h.$shared = r,
                i[a] = Object.freeze(Gs(h, r))),
                h
            }
            _resolveAnimations(e, t, n) {
                const s = this.chart
                  , i = this._cachedDataOpts
                  , a = `animation-${t}`
                  , o = i[a];
                if (o)
                    return o;
                let r;
                if (!1 !== s.options.animation) {
                    const s = this.chart.config
                      , i = s.datasetAnimationScopeKeys(this._type, t)
                      , a = s.getOptionScopes(this.getDataset(), i);
                    r = s.createResolver(a, this.getContext(e, n, t))
                }
                const l = new Os(s,r && r.animations);
                return r && r._cacheable && (i[a] = Object.freeze(l)),
                l
            }
            getSharedOptions(e) {
                if (e.$shared)
                    return this._sharedOptions || (this._sharedOptions = Object.assign({}, e))
            }
            includeOptions(e, t) {
                return !t || Bs(e) || this.chart._animationsDisabled
            }
            _getSharedOptions(e, t) {
                const n = this.resolveDataElementOptions(e, t)
                  , s = this._sharedOptions
                  , i = this.getSharedOptions(n)
                  , a = this.includeOptions(t, i) || i !== s;
                return this.updateSharedOptions(i, t, n),
                {
                    sharedOptions: i,
                    includeOptions: a
                }
            }
            updateElement(e, t, n, s) {
                Bs(s) ? Object.assign(e, n) : this._resolveAnimations(t, s).update(e, n)
            }
            updateSharedOptions(e, t, n) {
                e && !Bs(t) && this._resolveAnimations(void 0, t).update(e, n)
            }
            _setStyle(e, t, n, s) {
                e.active = s;
                const i = this.getStyle(t, s);
                this._resolveAnimations(t, n, s).update(e, {
                    options: !s && this.getSharedOptions(i) || i
                })
            }
            removeHoverStyle(e, t, n) {
                this._setStyle(e, n, "active", !1)
            }
            setHoverStyle(e, t, n) {
                this._setStyle(e, n, "active", !0)
            }
            _removeDatasetHoverStyle() {
                const e = this._cachedMeta.dataset;
                e && this._setStyle(e, void 0, "active", !1)
            }
            _setDatasetHoverStyle() {
                const e = this._cachedMeta.dataset;
                e && this._setStyle(e, void 0, "active", !0)
            }
            _resyncElements(e) {
                const t = this._data
                  , n = this._cachedMeta.data;
                for (const [e,t,n] of this._syncList)
                    this[e](t, n);
                this._syncList = [];
                const s = n.length
                  , i = t.length
                  , a = Math.min(i, s);
                a && this.parse(0, a),
                i > s ? this._insertElements(s, i - s, e) : i < s && this._removeElements(i, s - i)
            }
            _insertElements(e, t, n=!0) {
                const s = this._cachedMeta
                  , i = s.data
                  , a = e + t;
                let o;
                const r = e=>{
                    for (e.length += t,
                    o = e.length - 1; o >= a; o--)
                        e[o] = e[o - t]
                }
                ;
                for (r(i),
                o = e; o < a; ++o)
                    i[o] = new this.dataElementType;
                this._parsing && r(s._parsed),
                this.parse(e, t),
                n && this.updateElements(i, e, t, "reset")
            }
            updateElements(e, t, n, s) {}
            _removeElements(e, t) {
                const n = this._cachedMeta;
                if (this._parsing) {
                    const s = n._parsed.splice(e, t);
                    n._stacked && Us(n, s)
                }
                n.data.splice(e, t)
            }
            _sync(e) {
                if (this._parsing)
                    this._syncList.push(e);
                else {
                    const [t,n,s] = e;
                    this[t](n, s)
                }
                this.chart._dataChanges.push([this.index, ...e])
            }
            _onDataPush() {
                const e = arguments.length;
                this._sync(["_insertElements", this.getDataset().data.length - e, e])
            }
            _onDataPop() {
                this._sync(["_removeElements", this._cachedMeta.data.length - 1, 1])
            }
            _onDataShift() {
                this._sync(["_removeElements", 0, 1])
            }
            _onDataSplice(e, t) {
                t && this._sync(["_removeElements", e, t]);
                const n = arguments.length - 2;
                n && this._sync(["_insertElements", e, n])
            }
            _onDataUnshift() {
                this._sync(["_insertElements", 0, arguments.length])
            }
        }
        function Hs(e) {
            const t = e.iScale
              , n = function(e, t) {
                if (!e._cache.$bar) {
                    const n = e.getMatchingVisibleMetas(t);
                    let s = [];
                    for (let t = 0, i = n.length; t < i; t++)
                        s = s.concat(n[t].controller.getAllParsedValues(e));
                    e._cache.$bar = Ze(s.sort(((e,t)=>e - t)))
                }
                return e._cache.$bar
            }(t, e.type);
            let s, i, a, o, r = t._length;
            const l = ()=>{
                32767 !== a && -32768 !== a && (be(o) && (r = Math.min(r, Math.abs(a - o) || r)),
                o = a)
            }
            ;
            for (s = 0,
            i = n.length; s < i; ++s)
                a = t.getPixelForValue(n[s]),
                l();
            for (o = void 0,
            s = 0,
            i = t.ticks.length; s < i; ++s)
                a = t.getPixelForTick(s),
                l();
            return r
        }
        function Ks(e, t, n, s) {
            return ne(e) ? function(e, t, n, s) {
                const i = n.parse(e[0], s)
                  , a = n.parse(e[1], s)
                  , o = Math.min(i, a)
                  , r = Math.max(i, a);
                let l = o
                  , c = r;
                Math.abs(o) > Math.abs(r) && (l = r,
                c = o),
                t[n.axis] = c,
                t._custom = {
                    barStart: l,
                    barEnd: c,
                    start: i,
                    end: a,
                    min: o,
                    max: r
                }
            }(e, t, n, s) : t[n.axis] = n.parse(e, s),
            t
        }
        function Ws(e, t, n, s) {
            const i = e.iScale
              , a = e.vScale
              , o = i.getLabels()
              , r = i === a
              , l = [];
            let c, u, d, m;
            for (c = n,
            u = n + s; c < u; ++c)
                m = t[c],
                d = {},
                d[i.axis] = r || i.parse(o[c], c),
                l.push(Ks(m, d, a, c));
            return l
        }
        function zs(e) {
            return e && void 0 !== e.barStart && void 0 !== e.barEnd
        }
        function Ys(e, t, n, s) {
            let i = t.borderSkipped;
            const a = {};
            if (!i)
                return void (e.borderSkipped = a);
            if (!0 === i)
                return void (e.borderSkipped = {
                    top: !0,
                    right: !0,
                    bottom: !0,
                    left: !0
                });
            const {start: o, end: r, reverse: l, top: c, bottom: u} = function(e) {
                let t, n, s, i, a;
                return e.horizontal ? (t = e.base > e.x,
                n = "left",
                s = "right") : (t = e.base < e.y,
                n = "bottom",
                s = "top"),
                t ? (i = "end",
                a = "start") : (i = "start",
                a = "end"),
                {
                    start: n,
                    end: s,
                    reverse: t,
                    top: i,
                    bottom: a
                }
            }(e);
            "middle" === i && n && (e.enableBorderRadius = !0,
            (n._top || 0) === s ? i = c : (n._bottom || 0) === s ? i = u : (a[$s(u, o, r, l)] = !0,
            i = c)),
            a[$s(i, o, r, l)] = !0,
            e.borderSkipped = a
        }
        function $s(e, t, n, s) {
            var i, a, o;
            return s ? (o = n,
            e = qs(e = (i = e) === (a = t) ? o : i === o ? a : i, n, t)) : e = qs(e, t, n),
            e
        }
        function qs(e, t, n) {
            return "start" === e ? t : "end" === e ? n : e
        }
        function Xs(e, {inflateAmount: t}, n) {
            e.inflateAmount = "auto" === t ? 1 === n ? .33 : 0 : t
        }
        class Qs extends Vs {
            static id = "bar";
            static defaults = {
                datasetElementType: !1,
                dataElementType: "bar",
                categoryPercentage: .8,
                barPercentage: .9,
                grouped: !0,
                animations: {
                    numbers: {
                        type: "number",
                        properties: ["x", "y", "base", "width", "height"]
                    }
                }
            };
            static overrides = {
                scales: {
                    _index_: {
                        type: "category",
                        offset: !0,
                        grid: {
                            offset: !0
                        }
                    },
                    _value_: {
                        type: "linear",
                        beginAtZero: !0
                    }
                }
            };
            parsePrimitiveData(e, t, n, s) {
                return Ws(e, t, n, s)
            }
            parseArrayData(e, t, n, s) {
                return Ws(e, t, n, s)
            }
            parseObjectData(e, t, n, s) {
                const {iScale: i, vScale: a} = e
                  , {xAxisKey: o="x", yAxisKey: r="y"} = this._parsing
                  , l = "x" === i.axis ? o : r
                  , c = "x" === a.axis ? o : r
                  , u = [];
                let d, m, h, g;
                for (d = n,
                m = n + s; d < m; ++d)
                    g = t[d],
                    h = {},
                    h[i.axis] = i.parse(ve(g, l), d),
                    u.push(Ks(ve(g, c), h, a, d));
                return u
            }
            updateRangeFromParsed(e, t, n, s) {
                super.updateRangeFromParsed(e, t, n, s);
                const i = n._custom;
                i && t === this._cachedMeta.vScale && (e.min = Math.min(e.min, i.min),
                e.max = Math.max(e.max, i.max))
            }
            getMaxOverflow() {
                return 0
            }
            getLabelAndValue(e) {
                const t = this._cachedMeta
                  , {iScale: n, vScale: s} = t
                  , i = this.getParsed(e)
                  , a = i._custom
                  , o = zs(a) ? "[" + a.start + ", " + a.end + "]" : "" + s.getLabelForValue(i[s.axis]);
                return {
                    label: "" + n.getLabelForValue(i[n.axis]),
                    value: o
                }
            }
            initialize() {
                this.enableOptionSharing = !0,
                super.initialize();
                this._cachedMeta.stack = this.getDataset().stack
            }
            update(e) {
                const t = this._cachedMeta;
                this.updateElements(t.data, 0, t.data.length, e)
            }
            updateElements(e, t, n, s) {
                const i = "reset" === s
                  , {index: a, _cachedMeta: {vScale: o}} = this
                  , r = o.getBasePixel()
                  , l = o.isHorizontal()
                  , c = this._getRuler()
                  , {sharedOptions: u, includeOptions: d} = this._getSharedOptions(t, s);
                for (let m = t; m < t + n; m++) {
                    const t = this.getParsed(m)
                      , n = i || te(t[o.axis]) ? {
                        base: r,
                        head: r
                    } : this._calculateBarValuePixels(m)
                      , h = this._calculateBarIndexPixels(m, c)
                      , g = (t._stacks || {})[o.axis]
                      , p = {
                        horizontal: l,
                        base: n.base,
                        enableBorderRadius: !g || zs(t._custom) || a === g._top || a === g._bottom,
                        x: l ? n.head : h.center,
                        y: l ? h.center : n.head,
                        height: l ? h.size : Math.abs(n.size),
                        width: l ? Math.abs(n.size) : h.size
                    };
                    d && (p.options = u || this.resolveDataElementOptions(m, e[m].active ? "active" : s));
                    const f = p.options || e[m].options;
                    Ys(p, f, g, a),
                    Xs(p, f, c.ratio),
                    this.updateElement(e[m], m, p, s)
                }
            }
            _getStacks(e, t) {
                const {iScale: n} = this._cachedMeta
                  , s = n.getMatchingVisibleMetas(this._type).filter((e=>e.controller.options.grouped))
                  , i = n.options.stacked
                  , a = []
                  , o = e=>{
                    const n = e.controller.getParsed(t)
                      , s = n && n[e.vScale.axis];
                    if (te(s) || isNaN(s))
                        return !0
                }
                ;
                for (const n of s)
                    if ((void 0 === t || !o(n)) && ((!1 === i || -1 === a.indexOf(n.stack) || void 0 === i && void 0 === n.stack) && a.push(n.stack),
                    n.index === e))
                        break;
                return a.length || a.push(void 0),
                a
            }
            _getStackCount(e) {
                return this._getStacks(void 0, e).length
            }
            _getStackIndex(e, t, n) {
                const s = this._getStacks(e, n)
                  , i = void 0 !== t ? s.indexOf(t) : -1;
                return -1 === i ? s.length - 1 : i
            }
            _getRuler() {
                const e = this.options
                  , t = this._cachedMeta
                  , n = t.iScale
                  , s = [];
                let i, a;
                for (i = 0,
                a = t.data.length; i < a; ++i)
                    s.push(n.getPixelForValue(this.getParsed(i)[n.axis], i));
                const o = e.barThickness;
                return {
                    min: o || Hs(t),
                    pixels: s,
                    start: n._startPixel,
                    end: n._endPixel,
                    stackCount: this._getStackCount(),
                    scale: n,
                    grouped: e.grouped,
                    ratio: o ? 1 : e.categoryPercentage * e.barPercentage
                }
            }
            _calculateBarValuePixels(e) {
                const {_cachedMeta: {vScale: t, _stacked: n}, options: {base: s, minBarLength: i}} = this
                  , a = s || 0
                  , o = this.getParsed(e)
                  , r = o._custom
                  , l = zs(r);
                let c, u, d = o[t.axis], m = 0, h = n ? this.applyStack(t, o, n) : d;
                h !== d && (m = h - d,
                h = d),
                l && (d = r.barStart,
                h = r.barEnd - r.barStart,
                0 !== d && Le(d) !== Le(r.barEnd) && (m = 0),
                m += d);
                const g = te(s) || l ? m : s;
                let p = t.getPixelForValue(g);
                if (c = this.chart.getDataVisibility(e) ? t.getPixelForValue(m + h) : p,
                u = c - p,
                Math.abs(u) < i) {
                    u = function(e, t, n) {
                        return 0 !== e ? Le(e) : (t.isHorizontal() ? 1 : -1) * (t.min >= n ? 1 : -1)
                    }(u, t, a) * i,
                    d === a && (p -= u / 2);
                    const e = t.getPixelForDecimal(0)
                      , n = t.getPixelForDecimal(1)
                      , s = Math.min(e, n)
                      , o = Math.max(e, n);
                    p = Math.max(Math.min(p, o), s),
                    c = p + u
                }
                if (p === t.getPixelForValue(a)) {
                    const e = Le(u) * t.getLineWidthForValue(a) / 2;
                    p += e,
                    u -= e
                }
                return {
                    size: u,
                    base: p,
                    head: c,
                    center: c + u / 2
                }
            }
            _calculateBarIndexPixels(e, t) {
                const n = t.scale
                  , s = this.options
                  , i = s.skipNull
                  , a = oe(s.maxBarThickness, 1 / 0);
                let o, r;
                if (t.grouped) {
                    const n = i ? this._getStackCount(e) : t.stackCount
                      , l = "flex" === s.barThickness ? function(e, t, n, s) {
                        const i = t.pixels
                          , a = i[e];
                        let o = e > 0 ? i[e - 1] : null
                          , r = e < i.length - 1 ? i[e + 1] : null;
                        const l = n.categoryPercentage;
                        null === o && (o = a - (null === r ? t.end - t.start : r - a)),
                        null === r && (r = a + a - o);
                        const c = a - (a - Math.min(o, r)) / 2 * l;
                        return {
                            chunk: Math.abs(r - o) / 2 * l / s,
                            ratio: n.barPercentage,
                            start: c
                        }
                    }(e, t, s, n) : function(e, t, n, s) {
                        const i = n.barThickness;
                        let a, o;
                        return te(i) ? (a = t.min * n.categoryPercentage,
                        o = n.barPercentage) : (a = i * s,
                        o = 1),
                        {
                            chunk: a / s,
                            ratio: o,
                            start: t.pixels[e] - a / 2
                        }
                    }(e, t, s, n)
                      , c = this._getStackIndex(this.index, this._cachedMeta.stack, i ? e : void 0);
                    o = l.start + l.chunk * c + l.chunk / 2,
                    r = Math.min(a, l.chunk * l.ratio)
                } else
                    o = n.getPixelForValue(this.getParsed(e)[n.axis], e),
                    r = Math.min(a, t.min * t.ratio);
                return {
                    base: o - r / 2,
                    head: o + r / 2,
                    center: o,
                    size: r
                }
            }
            draw() {
                const e = this._cachedMeta
                  , t = e.vScale
                  , n = e.data
                  , s = n.length;
                let i = 0;
                for (; i < s; ++i)
                    null !== this.getParsed(i)[t.axis] && n[i].draw(this._ctx)
            }
        }
        class Zs extends Vs {
            static id = "bubble";
            static defaults = {
                datasetElementType: !1,
                dataElementType: "point",
                animations: {
                    numbers: {
                        type: "number",
                        properties: ["x", "y", "borderWidth", "radius"]
                    }
                }
            };
            static overrides = {
                scales: {
                    x: {
                        type: "linear"
                    },
                    y: {
                        type: "linear"
                    }
                }
            };
            initialize() {
                this.enableOptionSharing = !0,
                super.initialize()
            }
            parsePrimitiveData(e, t, n, s) {
                const i = super.parsePrimitiveData(e, t, n, s);
                for (let e = 0; e < i.length; e++)
                    i[e]._custom = this.resolveDataElementOptions(e + n).radius;
                return i
            }
            parseArrayData(e, t, n, s) {
                const i = super.parseArrayData(e, t, n, s);
                for (let e = 0; e < i.length; e++) {
                    const s = t[n + e];
                    i[e]._custom = oe(s[2], this.resolveDataElementOptions(e + n).radius)
                }
                return i
            }
            parseObjectData(e, t, n, s) {
                const i = super.parseObjectData(e, t, n, s);
                for (let e = 0; e < i.length; e++) {
                    const s = t[n + e];
                    i[e]._custom = oe(s && s.r && +s.r, this.resolveDataElementOptions(e + n).radius)
                }
                return i
            }
            getMaxOverflow() {
                const e = this._cachedMeta.data;
                let t = 0;
                for (let n = e.length - 1; n >= 0; --n)
                    t = Math.max(t, e[n].size(this.resolveDataElementOptions(n)) / 2);
                return t > 0 && t
            }
            getLabelAndValue(e) {
                const t = this._cachedMeta
                  , n = this.chart.data.labels || []
                  , {xScale: s, yScale: i} = t
                  , a = this.getParsed(e)
                  , o = s.getLabelForValue(a.x)
                  , r = i.getLabelForValue(a.y)
                  , l = a._custom;
                return {
                    label: n[e] || "",
                    value: "(" + o + ", " + r + (l ? ", " + l : "") + ")"
                }
            }
            update(e) {
                const t = this._cachedMeta.data;
                this.updateElements(t, 0, t.length, e)
            }
            updateElements(e, t, n, s) {
                const i = "reset" === s
                  , {iScale: a, vScale: o} = this._cachedMeta
                  , {sharedOptions: r, includeOptions: l} = this._getSharedOptions(t, s)
                  , c = a.axis
                  , u = o.axis;
                for (let d = t; d < t + n; d++) {
                    const t = e[d]
                      , n = !i && this.getParsed(d)
                      , m = {}
                      , h = m[c] = i ? a.getPixelForDecimal(.5) : a.getPixelForValue(n[c])
                      , g = m[u] = i ? o.getBasePixel() : o.getPixelForValue(n[u]);
                    m.skip = isNaN(h) || isNaN(g),
                    l && (m.options = r || this.resolveDataElementOptions(d, t.active ? "active" : s),
                    i && (m.options.radius = 0)),
                    this.updateElement(t, d, m, s)
                }
            }
            resolveDataElementOptions(e, t) {
                const n = this.getParsed(e);
                let s = super.resolveDataElementOptions(e, t);
                s.$shared && (s = Object.assign({}, s, {
                    $shared: !1
                }));
                const i = s.radius;
                return "active" !== t && (s.radius = 0),
                s.radius += oe(n && n._custom, i),
                s
            }
        }
        class Js extends Vs {
            static id = "doughnut";
            static defaults = {
                datasetElementType: !1,
                dataElementType: "arc",
                animation: {
                    animateRotate: !0,
                    animateScale: !1
                },
                animations: {
                    numbers: {
                        type: "number",
                        properties: ["circumference", "endAngle", "innerRadius", "outerRadius", "startAngle", "x", "y", "offset", "borderWidth", "spacing"]
                    }
                },
                cutout: "50%",
                rotation: 0,
                circumference: 360,
                radius: "100%",
                spacing: 0,
                indexAxis: "r"
            };
            static descriptors = {
                _scriptable: e=>"spacing" !== e,
                _indexable: e=>"spacing" !== e
            };
            static overrides = {
                aspectRatio: 1,
                plugins: {
                    legend: {
                        labels: {
                            generateLabels(e) {
                                const t = e.data;
                                if (t.labels.length && t.datasets.length) {
                                    const {labels: {pointStyle: n, color: s}} = e.legend.options;
                                    return t.labels.map(((t,i)=>{
                                        const a = e.getDatasetMeta(0).controller.getStyle(i);
                                        return {
                                            text: t,
                                            fillStyle: a.backgroundColor,
                                            strokeStyle: a.borderColor,
                                            fontColor: s,
                                            lineWidth: a.borderWidth,
                                            pointStyle: n,
                                            hidden: !e.getDataVisibility(i),
                                            index: i
                                        }
                                    }
                                    ))
                                }
                                return []
                            }
                        },
                        onClick(e, t, n) {
                            n.chart.toggleDataVisibility(t.index),
                            n.chart.update()
                        }
                    }
                }
            };
            constructor(e, t) {
                super(e, t),
                this.enableOptionSharing = !0,
                this.innerRadius = void 0,
                this.outerRadius = void 0,
                this.offsetX = void 0,
                this.offsetY = void 0
            }
            linkScales() {}
            parse(e, t) {
                const n = this.getDataset().data
                  , s = this._cachedMeta;
                if (!1 === this._parsing)
                    s._parsed = n;
                else {
                    let i, a, o = e=>+n[e];
                    if (se(n[e])) {
                        const {key: e="value"} = this._parsing;
                        o = t=>+ve(n[t], e)
                    }
                    for (i = e,
                    a = e + t; i < a; ++i)
                        s._parsed[i] = o(i)
                }
            }
            _getRotation() {
                return De(this.options.rotation - 90)
            }
            _getCircumference() {
                return De(this.options.circumference)
            }
            _getRotationExtents() {
                let e = Se
                  , t = -Se;
                for (let n = 0; n < this.chart.data.datasets.length; ++n)
                    if (this.chart.isDatasetVisible(n) && this.chart.getDatasetMeta(n).type === this._type) {
                        const s = this.chart.getDatasetMeta(n).controller
                          , i = s._getRotation()
                          , a = s._getCircumference();
                        e = Math.min(e, i),
                        t = Math.max(t, i + a)
                    }
                return {
                    rotation: e,
                    circumference: t - e
                }
            }
            update(e) {
                const t = this.chart
                  , {chartArea: n} = t
                  , s = this._cachedMeta
                  , i = s.data
                  , a = this.getMaxBorderWidth() + this.getMaxOffset(i) + this.options.spacing
                  , o = Math.max((Math.min(n.width, n.height) - a) / 2, 0)
                  , r = Math.min(((e,t)=>"string" == typeof e && e.endsWith("%") ? parseFloat(e) / 100 : +e / t)(this.options.cutout, o), 1)
                  , l = this._getRingWeight(this.index)
                  , {circumference: c, rotation: u} = this._getRotationExtents()
                  , {ratioX: d, ratioY: m, offsetX: h, offsetY: g} = function(e, t, n) {
                    let s = 1
                      , i = 1
                      , a = 0
                      , o = 0;
                    if (t < Se) {
                        const r = e
                          , l = r + t
                          , c = Math.cos(r)
                          , u = Math.sin(r)
                          , d = Math.cos(l)
                          , m = Math.sin(l)
                          , h = (e,t,s)=>Ke(e, r, l, !0) ? 1 : Math.max(t, t * n, s, s * n)
                          , g = (e,t,s)=>Ke(e, r, l, !0) ? -1 : Math.min(t, t * n, s, s * n)
                          , p = h(0, c, d)
                          , f = h(Ne, u, m)
                          , x = g(Ie, c, d)
                          , v = g(Ie + Ne, u, m);
                        s = (p - x) / 2,
                        i = (f - v) / 2,
                        a = -(p + x) / 2,
                        o = -(f + v) / 2
                    }
                    return {
                        ratioX: s,
                        ratioY: i,
                        offsetX: a,
                        offsetY: o
                    }
                }(u, c, r)
                  , p = (n.width - a) / d
                  , f = (n.height - a) / m
                  , x = Math.max(Math.min(p, f) / 2, 0)
                  , v = re(this.options.radius, x)
                  , _ = (v - Math.max(v * r, 0)) / this._getVisibleDatasetWeightTotal();
                this.offsetX = h * v,
                this.offsetY = g * v,
                s.total = this.calculateTotal(),
                this.outerRadius = v - _ * this._getRingWeightOffset(this.index),
                this.innerRadius = Math.max(this.outerRadius - _ * l, 0),
                this.updateElements(i, 0, i.length, e)
            }
            _circumference(e, t) {
                const n = this.options
                  , s = this._cachedMeta
                  , i = this._getCircumference();
                return t && n.animation.animateRotate || !this.chart.getDataVisibility(e) || null === s._parsed[e] || s.data[e].hidden ? 0 : this.calculateCircumference(s._parsed[e] * i / Se)
            }
            updateElements(e, t, n, s) {
                const i = "reset" === s
                  , a = this.chart
                  , o = a.chartArea
                  , r = a.options.animation
                  , l = (o.left + o.right) / 2
                  , c = (o.top + o.bottom) / 2
                  , u = i && r.animateScale
                  , d = u ? 0 : this.innerRadius
                  , m = u ? 0 : this.outerRadius
                  , {sharedOptions: h, includeOptions: g} = this._getSharedOptions(t, s);
                let p, f = this._getRotation();
                for (p = 0; p < t; ++p)
                    f += this._circumference(p, i);
                for (p = t; p < t + n; ++p) {
                    const t = this._circumference(p, i)
                      , n = e[p]
                      , a = {
                        x: l + this.offsetX,
                        y: c + this.offsetY,
                        startAngle: f,
                        endAngle: f + t,
                        circumference: t,
                        outerRadius: m,
                        innerRadius: d
                    };
                    g && (a.options = h || this.resolveDataElementOptions(p, n.active ? "active" : s)),
                    f += t,
                    this.updateElement(n, p, a, s)
                }
            }
            calculateTotal() {
                const e = this._cachedMeta
                  , t = e.data;
                let n, s = 0;
                for (n = 0; n < t.length; n++) {
                    const i = e._parsed[n];
                    null === i || isNaN(i) || !this.chart.getDataVisibility(n) || t[n].hidden || (s += Math.abs(i))
                }
                return s
            }
            calculateCircumference(e) {
                const t = this._cachedMeta.total;
                return t > 0 && !isNaN(e) ? Se * (Math.abs(e) / t) : 0
            }
            getLabelAndValue(e) {
                const t = this._cachedMeta
                  , n = this.chart
                  , s = n.data.labels || []
                  , i = Xt(t._parsed[e], n.options.locale);
                return {
                    label: s[e] || "",
                    value: i
                }
            }
            getMaxBorderWidth(e) {
                let t = 0;
                const n = this.chart;
                let s, i, a, o, r;
                if (!e)
                    for (s = 0,
                    i = n.data.datasets.length; s < i; ++s)
                        if (n.isDatasetVisible(s)) {
                            a = n.getDatasetMeta(s),
                            e = a.data,
                            o = a.controller;
                            break
                        }
                if (!e)
                    return 0;
                for (s = 0,
                i = e.length; s < i; ++s)
                    r = o.resolveDataElementOptions(s),
                    "inner" !== r.borderAlign && (t = Math.max(t, r.borderWidth || 0, r.hoverBorderWidth || 0));
                return t
            }
            getMaxOffset(e) {
                let t = 0;
                for (let n = 0, s = e.length; n < s; ++n) {
                    const e = this.resolveDataElementOptions(n);
                    t = Math.max(t, e.offset || 0, e.hoverOffset || 0)
                }
                return t
            }
            _getRingWeightOffset(e) {
                let t = 0;
                for (let n = 0; n < e; ++n)
                    this.chart.isDatasetVisible(n) && (t += this._getRingWeight(n));
                return t
            }
            _getRingWeight(e) {
                return Math.max(oe(this.chart.data.datasets[e].weight, 1), 0)
            }
            _getVisibleDatasetWeightTotal() {
                return this._getRingWeightOffset(this.chart.data.datasets.length) || 1
            }
        }
        class ei extends Vs {
            static id = "line";
            static defaults = {
                datasetElementType: "line",
                dataElementType: "point",
                showLine: !0,
                spanGaps: !1
            };
            static overrides = {
                scales: {
                    _index_: {
                        type: "category"
                    },
                    _value_: {
                        type: "linear"
                    }
                }
            };
            initialize() {
                this.enableOptionSharing = !0,
                this.supportsDecimation = !0,
                super.initialize()
            }
            update(e) {
                const t = this._cachedMeta
                  , {dataset: n, data: s=[], _dataset: i} = t
                  , a = this.chart._animationsDisabled;
                let {start: o, count: r} = st(t, s, a);
                this._drawStart = o,
                this._drawCount = r,
                it(t) && (o = 0,
                r = s.length),
                n._chart = this.chart,
                n._datasetIndex = this.index,
                n._decimated = !!i._decimated,
                n.points = s;
                const l = this.resolveDatasetElementOptions(e);
                this.options.showLine || (l.borderWidth = 0),
                l.segment = this.options.segment,
                this.updateElement(n, void 0, {
                    animated: !a,
                    options: l
                }, e),
                this.updateElements(s, o, r, e)
            }
            updateElements(e, t, n, s) {
                const i = "reset" === s
                  , {iScale: a, vScale: o, _stacked: r, _dataset: l} = this._cachedMeta
                  , {sharedOptions: c, includeOptions: u} = this._getSharedOptions(t, s)
                  , d = a.axis
                  , m = o.axis
                  , {spanGaps: h, segment: g} = this.options
                  , p = Re(h) ? h : Number.POSITIVE_INFINITY
                  , f = this.chart._animationsDisabled || i || "none" === s
                  , x = t + n
                  , v = e.length;
                let _ = t > 0 && this.getParsed(t - 1);
                for (let n = 0; n < v; ++n) {
                    const h = e[n]
                      , v = f ? h : {};
                    if (n < t || n >= x) {
                        v.skip = !0;
                        continue
                    }
                    const b = this.getParsed(n)
                      , T = te(b[m])
                      , E = v[d] = a.getPixelForValue(b[d], n)
                      , I = v[m] = i || T ? o.getBasePixel() : o.getPixelForValue(r ? this.applyStack(o, b, r) : b[m], n);
                    v.skip = isNaN(E) || isNaN(I) || T,
                    v.stop = n > 0 && Math.abs(b[d] - _[d]) > p,
                    g && (v.parsed = b,
                    v.raw = l.data[n]),
                    u && (v.options = c || this.resolveDataElementOptions(n, h.active ? "active" : s)),
                    f || this.updateElement(h, n, v, s),
                    _ = b
                }
            }
            getMaxOverflow() {
                const e = this._cachedMeta
                  , t = e.dataset
                  , n = t.options && t.options.borderWidth || 0
                  , s = e.data || [];
                if (!s.length)
                    return n;
                const i = s[0].size(this.resolveDataElementOptions(0))
                  , a = s[s.length - 1].size(this.resolveDataElementOptions(s.length - 1));
                return Math.max(n, i, a) / 2
            }
            draw() {
                const e = this._cachedMeta;
                e.dataset.updateControlPoints(this.chart.chartArea, e.iScale.axis),
                super.draw()
            }
        }
        class ti extends Vs {
            static id = "polarArea";
            static defaults = {
                dataElementType: "arc",
                animation: {
                    animateRotate: !0,
                    animateScale: !0
                },
                animations: {
                    numbers: {
                        type: "number",
                        properties: ["x", "y", "startAngle", "endAngle", "innerRadius", "outerRadius"]
                    }
                },
                indexAxis: "r",
                startAngle: 0
            };
            static overrides = {
                aspectRatio: 1,
                plugins: {
                    legend: {
                        labels: {
                            generateLabels(e) {
                                const t = e.data;
                                if (t.labels.length && t.datasets.length) {
                                    const {labels: {pointStyle: n, color: s}} = e.legend.options;
                                    return t.labels.map(((t,i)=>{
                                        const a = e.getDatasetMeta(0).controller.getStyle(i);
                                        return {
                                            text: t,
                                            fillStyle: a.backgroundColor,
                                            strokeStyle: a.borderColor,
                                            fontColor: s,
                                            lineWidth: a.borderWidth,
                                            pointStyle: n,
                                            hidden: !e.getDataVisibility(i),
                                            index: i
                                        }
                                    }
                                    ))
                                }
                                return []
                            }
                        },
                        onClick(e, t, n) {
                            n.chart.toggleDataVisibility(t.index),
                            n.chart.update()
                        }
                    }
                },
                scales: {
                    r: {
                        type: "radialLinear",
                        angleLines: {
                            display: !1
                        },
                        beginAtZero: !0,
                        grid: {
                            circular: !0
                        },
                        pointLabels: {
                            display: !1
                        },
                        startAngle: 0
                    }
                }
            };
            constructor(e, t) {
                super(e, t),
                this.innerRadius = void 0,
                this.outerRadius = void 0
            }
            getLabelAndValue(e) {
                const t = this._cachedMeta
                  , n = this.chart
                  , s = n.data.labels || []
                  , i = Xt(t._parsed[e].r, n.options.locale);
                return {
                    label: s[e] || "",
                    value: i
                }
            }
            parseObjectData(e, t, n, s) {
                return Wn.bind(this)(e, t, n, s)
            }
            update(e) {
                const t = this._cachedMeta.data;
                this._updateRadius(),
                this.updateElements(t, 0, t.length, e)
            }
            getMinMax() {
                const e = this._cachedMeta
                  , t = {
                    min: Number.POSITIVE_INFINITY,
                    max: Number.NEGATIVE_INFINITY
                };
                return e.data.forEach(((e,n)=>{
                    const s = this.getParsed(n).r;
                    !isNaN(s) && this.chart.getDataVisibility(n) && (s < t.min && (t.min = s),
                    s > t.max && (t.max = s))
                }
                )),
                t
            }
            _updateRadius() {
                const e = this.chart
                  , t = e.chartArea
                  , n = e.options
                  , s = Math.min(t.right - t.left, t.bottom - t.top)
                  , i = Math.max(s / 2, 0)
                  , a = (i - Math.max(n.cutoutPercentage ? i / 100 * n.cutoutPercentage : 1, 0)) / e.getVisibleDatasetCount();
                this.outerRadius = i - a * this.index,
                this.innerRadius = this.outerRadius - a
            }
            updateElements(e, t, n, s) {
                const i = "reset" === s
                  , a = this.chart
                  , o = a.options.animation
                  , r = this._cachedMeta.rScale
                  , l = r.xCenter
                  , c = r.yCenter
                  , u = r.getIndexAngle(0) - .5 * Ie;
                let d, m = u;
                const h = 360 / this.countVisibleElements();
                for (d = 0; d < t; ++d)
                    m += this._computeAngle(d, s, h);
                for (d = t; d < t + n; d++) {
                    const t = e[d];
                    let n = m
                      , g = m + this._computeAngle(d, s, h)
                      , p = a.getDataVisibility(d) ? r.getDistanceFromCenterForValue(this.getParsed(d).r) : 0;
                    m = g,
                    i && (o.animateScale && (p = 0),
                    o.animateRotate && (n = g = u));
                    const f = {
                        x: l,
                        y: c,
                        innerRadius: 0,
                        outerRadius: p,
                        startAngle: n,
                        endAngle: g,
                        options: this.resolveDataElementOptions(d, t.active ? "active" : s)
                    };
                    this.updateElement(t, d, f, s)
                }
            }
            countVisibleElements() {
                const e = this._cachedMeta;
                let t = 0;
                return e.data.forEach(((e,n)=>{
                    !isNaN(this.getParsed(n).r) && this.chart.getDataVisibility(n) && t++
                }
                )),
                t
            }
            _computeAngle(e, t, n) {
                return this.chart.getDataVisibility(e) ? De(this.resolveDataElementOptions(e, t).angle || n) : 0
            }
        }
        class ni extends Js {
            static id = "pie";
            static defaults = {
                cutout: 0,
                rotation: 0,
                circumference: 360,
                radius: "100%"
            }
        }
        class si extends Vs {
            static id = "radar";
            static defaults = {
                datasetElementType: "line",
                dataElementType: "point",
                indexAxis: "r",
                showLine: !0,
                elements: {
                    line: {
                        fill: "start"
                    }
                }
            };
            static overrides = {
                aspectRatio: 1,
                scales: {
                    r: {
                        type: "radialLinear"
                    }
                }
            };
            getLabelAndValue(e) {
                const t = this._cachedMeta.vScale
                  , n = this.getParsed(e);
                return {
                    label: t.getLabels()[e],
                    value: "" + t.getLabelForValue(n[t.axis])
                }
            }
            parseObjectData(e, t, n, s) {
                return Wn.bind(this)(e, t, n, s)
            }
            update(e) {
                const t = this._cachedMeta
                  , n = t.dataset
                  , s = t.data || []
                  , i = t.iScale.getLabels();
                if (n.points = s,
                "resize" !== e) {
                    const t = this.resolveDatasetElementOptions(e);
                    this.options.showLine || (t.borderWidth = 0);
                    const a = {
                        _loop: !0,
                        _fullLoop: i.length === s.length,
                        options: t
                    };
                    this.updateElement(n, void 0, a, e)
                }
                this.updateElements(s, 0, s.length, e)
            }
            updateElements(e, t, n, s) {
                const i = this._cachedMeta.rScale
                  , a = "reset" === s;
                for (let o = t; o < t + n; o++) {
                    const t = e[o]
                      , n = this.resolveDataElementOptions(o, t.active ? "active" : s)
                      , r = i.getPointPositionForValue(o, this.getParsed(o).r)
                      , l = a ? i.xCenter : r.x
                      , c = a ? i.yCenter : r.y
                      , u = {
                        x: l,
                        y: c,
                        angle: r.angle,
                        skip: isNaN(l) || isNaN(c),
                        options: n
                    };
                    this.updateElement(t, o, u, s)
                }
            }
        }
        class ii extends Vs {
            static id = "scatter";
            static defaults = {
                datasetElementType: !1,
                dataElementType: "point",
                showLine: !1,
                fill: !1
            };
            static overrides = {
                interaction: {
                    mode: "point"
                },
                scales: {
                    x: {
                        type: "linear"
                    },
                    y: {
                        type: "linear"
                    }
                }
            };
            getLabelAndValue(e) {
                const t = this._cachedMeta
                  , n = this.chart.data.labels || []
                  , {xScale: s, yScale: i} = t
                  , a = this.getParsed(e)
                  , o = s.getLabelForValue(a.x)
                  , r = i.getLabelForValue(a.y);
                return {
                    label: n[e] || "",
                    value: "(" + o + ", " + r + ")"
                }
            }
            update(e) {
                const t = this._cachedMeta
                  , {data: n=[]} = t
                  , s = this.chart._animationsDisabled;
                let {start: i, count: a} = st(t, n, s);
                if (this._drawStart = i,
                this._drawCount = a,
                it(t) && (i = 0,
                a = n.length),
                this.options.showLine) {
                    const {dataset: i, _dataset: a} = t;
                    i._chart = this.chart,
                    i._datasetIndex = this.index,
                    i._decimated = !!a._decimated,
                    i.points = n;
                    const o = this.resolveDatasetElementOptions(e);
                    o.segment = this.options.segment,
                    this.updateElement(i, void 0, {
                        animated: !s,
                        options: o
                    }, e)
                }
                this.updateElements(n, i, a, e)
            }
            addElements() {
                const {showLine: e} = this.options;
                !this.datasetElementType && e && (this.datasetElementType = this.chart.registry.getElement("line")),
                super.addElements()
            }
            updateElements(e, t, n, s) {
                const i = "reset" === s
                  , {iScale: a, vScale: o, _stacked: r, _dataset: l} = this._cachedMeta
                  , c = this.resolveDataElementOptions(t, s)
                  , u = this.getSharedOptions(c)
                  , d = this.includeOptions(s, u)
                  , m = a.axis
                  , h = o.axis
                  , {spanGaps: g, segment: p} = this.options
                  , f = Re(g) ? g : Number.POSITIVE_INFINITY
                  , x = this.chart._animationsDisabled || i || "none" === s;
                let v = t > 0 && this.getParsed(t - 1);
                for (let c = t; c < t + n; ++c) {
                    const t = e[c]
                      , n = this.getParsed(c)
                      , g = x ? t : {}
                      , _ = te(n[h])
                      , b = g[m] = a.getPixelForValue(n[m], c)
                      , T = g[h] = i || _ ? o.getBasePixel() : o.getPixelForValue(r ? this.applyStack(o, n, r) : n[h], c);
                    g.skip = isNaN(b) || isNaN(T) || _,
                    g.stop = c > 0 && Math.abs(n[m] - v[m]) > f,
                    p && (g.parsed = n,
                    g.raw = l.data[c]),
                    d && (g.options = u || this.resolveDataElementOptions(c, t.active ? "active" : s)),
                    x || this.updateElement(t, c, g, s),
                    v = n
                }
                this.updateSharedOptions(u, s, c)
            }
            getMaxOverflow() {
                const e = this._cachedMeta
                  , t = e.data || [];
                if (!this.options.showLine) {
                    let e = 0;
                    for (let n = t.length - 1; n >= 0; --n)
                        e = Math.max(e, t[n].size(this.resolveDataElementOptions(n)) / 2);
                    return e > 0 && e
                }
                const n = e.dataset
                  , s = n.options && n.options.borderWidth || 0;
                if (!t.length)
                    return s;
                const i = t[0].size(this.resolveDataElementOptions(0))
                  , a = t[t.length - 1].size(this.resolveDataElementOptions(t.length - 1));
                return Math.max(s, i, a) / 2
            }
        }
        var ai = Object.freeze({
            __proto__: null,
            BarController: Qs,
            BubbleController: Zs,
            DoughnutController: Js,
            LineController: ei,
            PolarAreaController: ti,
            PieController: ni,
            RadarController: si,
            ScatterController: ii
        });
        function oi() {
            throw new Error("This method is not implemented: Check that a complete date adapter is provided.")
        }
        class ri {
            static override(e) {
                Object.assign(ri.prototype, e)
            }
            constructor(e) {
                this.options = e || {}
            }
            init() {}
            formats() {
                return oi()
            }
            parse() {
                return oi()
            }
            format() {
                return oi()
            }
            add() {
                return oi()
            }
            diff() {
                return oi()
            }
            startOf() {
                return oi()
            }
            endOf() {
                return oi()
            }
        }
        var li = {
            _date: ri
        };
        function ci(e, t, n, s) {
            const {controller: i, data: a, _sorted: o} = e
              , r = i._cachedMeta.iScale;
            if (r && t === r.axis && "r" !== t && o && a.length) {
                const e = r._reversePixels ? qe : $e;
                if (!s)
                    return e(a, t, n);
                if (i._sharedOptions) {
                    const s = a[0]
                      , i = "function" == typeof s.getRange && s.getRange(t);
                    if (i) {
                        const s = e(a, t, n - i)
                          , o = e(a, t, n + i);
                        return {
                            lo: s.lo,
                            hi: o.hi
                        }
                    }
                }
            }
            return {
                lo: 0,
                hi: a.length - 1
            }
        }
        function ui(e, t, n, s, i) {
            const a = e.getSortedVisibleDatasetMetas()
              , o = n[t];
            for (let e = 0, n = a.length; e < n; ++e) {
                const {index: n, data: r} = a[e]
                  , {lo: l, hi: c} = ci(a[e], t, o, i);
                for (let e = l; e <= c; ++e) {
                    const t = r[e];
                    t.skip || s(t, n, e)
                }
            }
        }
        function di(e, t, n, s, i) {
            const a = [];
            if (!i && !e.isPointInArea(t))
                return a;
            return ui(e, n, t, (function(n, o, r) {
                (i || mn(n, e.chartArea, 0)) && n.inRange(t.x, t.y, s) && a.push({
                    element: n,
                    datasetIndex: o,
                    index: r
                })
            }
            ), !0),
            a
        }
        function mi(e, t, n, s, i, a) {
            let o = [];
            const r = function(e) {
                const t = -1 !== e.indexOf("x")
                  , n = -1 !== e.indexOf("y");
                return function(e, s) {
                    const i = t ? Math.abs(e.x - s.x) : 0
                      , a = n ? Math.abs(e.y - s.y) : 0;
                    return Math.sqrt(Math.pow(i, 2) + Math.pow(a, 2))
                }
            }(n);
            let l = Number.POSITIVE_INFINITY;
            return ui(e, n, t, (function(n, c, u) {
                const d = n.inRange(t.x, t.y, i);
                if (s && !d)
                    return;
                const m = n.getCenterPoint(i);
                if (!(!!a || e.isPointInArea(m)) && !d)
                    return;
                const h = r(t, m);
                h < l ? (o = [{
                    element: n,
                    datasetIndex: c,
                    index: u
                }],
                l = h) : h === l && o.push({
                    element: n,
                    datasetIndex: c,
                    index: u
                })
            }
            )),
            o
        }
        function hi(e, t, n, s, i, a) {
            return a || e.isPointInArea(t) ? "r" !== n || s ? mi(e, t, n, s, i, a) : function(e, t, n, s) {
                let i = [];
                return ui(e, n, t, (function(e, n, a) {
                    const {startAngle: o, endAngle: r} = e.getProps(["startAngle", "endAngle"], s)
                      , {angle: l} = Be(e, {
                        x: t.x,
                        y: t.y
                    });
                    Ke(l, o, r) && i.push({
                        element: e,
                        datasetIndex: n,
                        index: a
                    })
                }
                )),
                i
            }(e, t, n, i) : []
        }
        function gi(e, t, n, s, i) {
            const a = []
              , o = "x" === n ? "inXRange" : "inYRange";
            let r = !1;
            return ui(e, n, t, ((e,s,l)=>{
                e[o](t[n], i) && (a.push({
                    element: e,
                    datasetIndex: s,
                    index: l
                }),
                r = r || e.inRange(t.x, t.y, i))
            }
            )),
            s && !r ? [] : a
        }
        var pi = {
            evaluateInteractionItems: ui,
            modes: {
                index(e, t, n, s) {
                    const i = os(t, e)
                      , a = n.axis || "x"
                      , o = n.includeInvisible || !1
                      , r = n.intersect ? di(e, i, a, s, o) : hi(e, i, a, !1, s, o)
                      , l = [];
                    return r.length ? (e.getSortedVisibleDatasetMetas().forEach((e=>{
                        const t = r[0].index
                          , n = e.data[t];
                        n && !n.skip && l.push({
                            element: n,
                            datasetIndex: e.index,
                            index: t
                        })
                    }
                    )),
                    l) : []
                },
                dataset(e, t, n, s) {
                    const i = os(t, e)
                      , a = n.axis || "xy"
                      , o = n.includeInvisible || !1;
                    let r = n.intersect ? di(e, i, a, s, o) : hi(e, i, a, !1, s, o);
                    if (r.length > 0) {
                        const t = r[0].datasetIndex
                          , n = e.getDatasetMeta(t).data;
                        r = [];
                        for (let e = 0; e < n.length; ++e)
                            r.push({
                                element: n[e],
                                datasetIndex: t,
                                index: e
                            })
                    }
                    return r
                },
                point: (e,t,n,s)=>di(e, os(t, e), n.axis || "xy", s, n.includeInvisible || !1),
                nearest(e, t, n, s) {
                    const i = os(t, e)
                      , a = n.axis || "xy"
                      , o = n.includeInvisible || !1;
                    return hi(e, i, a, n.intersect, s, o)
                },
                x: (e,t,n,s)=>gi(e, os(t, e), "x", n.intersect, s),
                y: (e,t,n,s)=>gi(e, os(t, e), "y", n.intersect, s)
            }
        };
        const fi = ["left", "top", "right", "bottom"];
        function xi(e, t) {
            return e.filter((e=>e.pos === t))
        }
        function vi(e, t) {
            return e.filter((e=>-1 === fi.indexOf(e.pos) && e.box.axis === t))
        }
        function _i(e, t) {
            return e.sort(((e,n)=>{
                const s = t ? n : e
                  , i = t ? e : n;
                return s.weight === i.weight ? s.index - i.index : s.weight - i.weight
            }
            ))
        }
        function bi(e, t) {
            const n = function(e) {
                const t = {};
                for (const n of e) {
                    const {stack: e, pos: s, stackWeight: i} = n;
                    if (!e || !fi.includes(s))
                        continue;
                    const a = t[e] || (t[e] = {
                        count: 0,
                        placed: 0,
                        weight: 0,
                        size: 0
                    });
                    a.count++,
                    a.weight += i
                }
                return t
            }(e)
              , {vBoxMaxWidth: s, hBoxMaxHeight: i} = t;
            let a, o, r;
            for (a = 0,
            o = e.length; a < o; ++a) {
                r = e[a];
                const {fullSize: o} = r.box
                  , l = n[r.stack]
                  , c = l && r.stackWeight / l.weight;
                r.horizontal ? (r.width = c ? c * s : o && t.availableWidth,
                r.height = i) : (r.width = s,
                r.height = c ? c * i : o && t.availableHeight)
            }
            return n
        }
        function Ti(e, t, n, s) {
            return Math.max(e[n], t[n]) + Math.max(e[s], t[s])
        }
        function Ei(e, t) {
            e.top = Math.max(e.top, t.top),
            e.left = Math.max(e.left, t.left),
            e.bottom = Math.max(e.bottom, t.bottom),
            e.right = Math.max(e.right, t.right)
        }
        function Ii(e, t, n, s) {
            const {pos: i, box: a} = n
              , o = e.maxPadding;
            if (!se(i)) {
                n.size && (e[i] -= n.size);
                const t = s[n.stack] || {
                    size: 0,
                    count: 1
                };
                t.size = Math.max(t.size, n.horizontal ? a.height : a.width),
                n.size = t.size / t.count,
                e[i] += n.size
            }
            a.getPadding && Ei(o, a.getPadding());
            const r = Math.max(0, t.outerWidth - Ti(o, e, "left", "right"))
              , l = Math.max(0, t.outerHeight - Ti(o, e, "top", "bottom"))
              , c = r !== e.w
              , u = l !== e.h;
            return e.w = r,
            e.h = l,
            n.horizontal ? {
                same: c,
                other: u
            } : {
                same: u,
                other: c
            }
        }
        function Si(e, t) {
            const n = t.maxPadding;
            function s(e) {
                const s = {
                    left: 0,
                    top: 0,
                    right: 0,
                    bottom: 0
                };
                return e.forEach((e=>{
                    s[e] = Math.max(t[e], n[e])
                }
                )),
                s
            }
            return s(e ? ["left", "right"] : ["top", "bottom"])
        }
        function yi(e, t, n, s) {
            const i = [];
            let a, o, r, l, c, u;
            for (a = 0,
            o = e.length,
            c = 0; a < o; ++a) {
                r = e[a],
                l = r.box,
                l.update(r.width || t.w, r.height || t.h, Si(r.horizontal, t));
                const {same: o, other: d} = Ii(t, n, r, s);
                c |= o && i.length,
                u = u || d,
                l.fullSize || i.push(r)
            }
            return c && yi(i, t, n, s) || u
        }
        function ji(e, t, n, s, i) {
            e.top = n,
            e.left = t,
            e.right = t + s,
            e.bottom = n + i,
            e.width = s,
            e.height = i
        }
        function Ci(e, t, n, s) {
            const i = n.padding;
            let {x: a, y: o} = t;
            for (const r of e) {
                const e = r.box
                  , l = s[r.stack] || {
                    count: 1,
                    placed: 0,
                    weight: 1
                }
                  , c = r.stackWeight / l.weight || 1;
                if (r.horizontal) {
                    const s = t.w * c
                      , a = l.size || e.height;
                    be(l.start) && (o = l.start),
                    e.fullSize ? ji(e, i.left, o, n.outerWidth - i.right - i.left, a) : ji(e, t.left + l.placed, o, s, a),
                    l.start = o,
                    l.placed += s,
                    o = e.bottom
                } else {
                    const s = t.h * c
                      , o = l.size || e.width;
                    be(l.start) && (a = l.start),
                    e.fullSize ? ji(e, a, i.top, o, n.outerHeight - i.bottom - i.top) : ji(e, a, t.top + l.placed, o, s),
                    l.start = a,
                    l.placed += s,
                    a = e.right
                }
            }
            t.x = a,
            t.y = o
        }
        var Ni = {
            addBox(e, t) {
                e.boxes || (e.boxes = []),
                t.fullSize = t.fullSize || !1,
                t.position = t.position || "top",
                t.weight = t.weight || 0,
                t._layers = t._layers || function() {
                    return [{
                        z: 0,
                        draw(e) {
                            t.draw(e)
                        }
                    }]
                }
                ,
                e.boxes.push(t)
            },
            removeBox(e, t) {
                const n = e.boxes ? e.boxes.indexOf(t) : -1;
                -1 !== n && e.boxes.splice(n, 1)
            },
            configure(e, t, n) {
                t.fullSize = n.fullSize,
                t.position = n.position,
                t.weight = n.weight
            },
            update(e, t, n, s) {
                if (!e)
                    return;
                const i = Nn(e.options.layout.padding)
                  , a = Math.max(t - i.width, 0)
                  , o = Math.max(n - i.height, 0)
                  , r = function(e) {
                    const t = function(e) {
                        const t = [];
                        let n, s, i, a, o, r;
                        for (n = 0,
                        s = (e || []).length; n < s; ++n)
                            i = e[n],
                            ({position: a, options: {stack: o, stackWeight: r=1}} = i),
                            t.push({
                                index: n,
                                box: i,
                                pos: a,
                                horizontal: i.isHorizontal(),
                                weight: i.weight,
                                stack: o && a + o,
                                stackWeight: r
                            });
                        return t
                    }(e)
                      , n = _i(t.filter((e=>e.box.fullSize)), !0)
                      , s = _i(xi(t, "left"), !0)
                      , i = _i(xi(t, "right"))
                      , a = _i(xi(t, "top"), !0)
                      , o = _i(xi(t, "bottom"))
                      , r = vi(t, "x")
                      , l = vi(t, "y");
                    return {
                        fullSize: n,
                        leftAndTop: s.concat(a),
                        rightAndBottom: i.concat(l).concat(o).concat(r),
                        chartArea: xi(t, "chartArea"),
                        vertical: s.concat(i).concat(l),
                        horizontal: a.concat(o).concat(r)
                    }
                }(e.boxes)
                  , l = r.vertical
                  , c = r.horizontal;
                ce(e.boxes, (e=>{
                    "function" == typeof e.beforeLayout && e.beforeLayout()
                }
                ));
                const u = l.reduce(((e,t)=>t.box.options && !1 === t.box.options.display ? e : e + 1), 0) || 1
                  , d = Object.freeze({
                    outerWidth: t,
                    outerHeight: n,
                    padding: i,
                    availableWidth: a,
                    availableHeight: o,
                    vBoxMaxWidth: a / 2 / u,
                    hBoxMaxHeight: o / 2
                })
                  , m = Object.assign({}, i);
                Ei(m, Nn(s));
                const h = Object.assign({
                    maxPadding: m,
                    w: a,
                    h: o,
                    x: i.left,
                    y: i.top
                }, i)
                  , g = bi(l.concat(c), d);
                yi(r.fullSize, h, d, g),
                yi(l, h, d, g),
                yi(c, h, d, g) && yi(l, h, d, g),
                function(e) {
                    const t = e.maxPadding;
                    function n(n) {
                        const s = Math.max(t[n] - e[n], 0);
                        return e[n] += s,
                        s
                    }
                    e.y += n("top"),
                    e.x += n("left"),
                    n("right"),
                    n("bottom")
                }(h),
                Ci(r.leftAndTop, h, d, g),
                h.x += h.w,
                h.y += h.h,
                Ci(r.rightAndBottom, h, d, g),
                e.chartArea = {
                    left: h.left,
                    top: h.top,
                    right: h.left + h.w,
                    bottom: h.top + h.h,
                    height: h.h,
                    width: h.w
                },
                ce(r.chartArea, (t=>{
                    const n = t.box;
                    Object.assign(n, e.chartArea),
                    n.update(h.w, h.h, {
                        left: 0,
                        top: 0,
                        right: 0,
                        bottom: 0
                    })
                }
                ))
            }
        };
        class wi {
            acquireContext(e, t) {}
            releaseContext(e) {
                return !1
            }
            addEventListener(e, t, n) {}
            removeEventListener(e, t, n) {}
            getDevicePixelRatio() {
                return 1
            }
            getMaximumSize(e, t, n, s) {
                return t = Math.max(0, t || e.width),
                n = n || e.height,
                {
                    width: t,
                    height: Math.max(0, s ? Math.floor(t / s) : n)
                }
            }
            isAttached(e) {
                return !0
            }
            updateConfig(e) {}
        }
        class Oi extends wi {
            acquireContext(e) {
                return e && e.getContext && e.getContext("2d") || null
            }
            updateConfig(e) {
                e.options.animation = !1
            }
        }
        const Pi = "$chartjs"
          , Li = {
            touchstart: "mousedown",
            touchmove: "mousemove",
            touchend: "mouseup",
            pointerenter: "mouseenter",
            pointerdown: "mousedown",
            pointermove: "mousemove",
            pointerup: "mouseup",
            pointerleave: "mouseout",
            pointerout: "mouseout"
        }
          , Ai = e=>null === e || "" === e;
        const Mi = !!us && {
            passive: !0
        };
        function Ri(e, t, n) {
            e.canvas.removeEventListener(t, n, Mi)
        }
        function ki(e, t) {
            for (const n of e)
                if (n === t || n.contains(t))
                    return !0
        }
        function Di(e, t, n) {
            const s = e.canvas
              , i = new MutationObserver((e=>{
                let t = !1;
                for (const n of e)
                    t = t || ki(n.addedNodes, s),
                    t = t && !ki(n.removedNodes, s);
                t && n()
            }
            ));
            return i.observe(document, {
                childList: !0,
                subtree: !0
            }),
            i
        }
        function Fi(e, t, n) {
            const s = e.canvas
              , i = new MutationObserver((e=>{
                let t = !1;
                for (const n of e)
                    t = t || ki(n.removedNodes, s),
                    t = t && !ki(n.addedNodes, s);
                t && n()
            }
            ));
            return i.observe(document, {
                childList: !0,
                subtree: !0
            }),
            i
        }
        const Ui = new Map;
        let Bi = 0;
        function Gi() {
            const e = window.devicePixelRatio;
            e !== Bi && (Bi = e,
            Ui.forEach(((t,n)=>{
                n.currentDevicePixelRatio !== e && t()
            }
            )))
        }
        function Vi(e, t, n) {
            const s = e.canvas
              , i = s && es(s);
            if (!i)
                return;
            const a = et(((e,t)=>{
                const s = i.clientWidth;
                n(e, t),
                s < i.clientWidth && n()
            }
            ), window)
              , o = new ResizeObserver((e=>{
                const t = e[0]
                  , n = t.contentRect.width
                  , s = t.contentRect.height;
                0 === n && 0 === s || a(n, s)
            }
            ));
            return o.observe(i),
            function(e, t) {
                Ui.size || window.addEventListener("resize", Gi),
                Ui.set(e, t)
            }(e, a),
            o
        }
        function Hi(e, t, n) {
            n && n.disconnect(),
            "resize" === t && function(e) {
                Ui.delete(e),
                Ui.size || window.removeEventListener("resize", Gi)
            }(e)
        }
        function Ki(e, t, n) {
            const s = e.canvas
              , i = et((t=>{
                null !== e.ctx && n(function(e, t) {
                    const n = Li[e.type] || e.type
                      , {x: s, y: i} = os(e, t);
                    return {
                        type: n,
                        chart: t,
                        native: e,
                        x: void 0 !== s ? s : null,
                        y: void 0 !== i ? i : null
                    }
                }(t, e))
            }
            ), e);
            return function(e, t, n) {
                e.addEventListener(t, n, Mi)
            }(s, t, i),
            i
        }
        class Wi extends wi {
            acquireContext(e, t) {
                const n = e && e.getContext && e.getContext("2d");
                return n && n.canvas === e ? (function(e, t) {
                    const n = e.style
                      , s = e.getAttribute("height")
                      , i = e.getAttribute("width");
                    if (e[Pi] = {
                        initial: {
                            height: s,
                            width: i,
                            style: {
                                display: n.display,
                                height: n.height,
                                width: n.width
                            }
                        }
                    },
                    n.display = n.display || "block",
                    n.boxSizing = n.boxSizing || "border-box",
                    Ai(i)) {
                        const t = ds(e, "width");
                        void 0 !== t && (e.width = t)
                    }
                    if (Ai(s))
                        if ("" === e.style.height)
                            e.height = e.width / (t || 2);
                        else {
                            const t = ds(e, "height");
                            void 0 !== t && (e.height = t)
                        }
                }(e, t),
                n) : null
            }
            releaseContext(e) {
                const t = e.canvas;
                if (!t[Pi])
                    return !1;
                const n = t[Pi].initial;
                ["height", "width"].forEach((e=>{
                    const s = n[e];
                    te(s) ? t.removeAttribute(e) : t.setAttribute(e, s)
                }
                ));
                const s = n.style || {};
                return Object.keys(s).forEach((e=>{
                    t.style[e] = s[e]
                }
                )),
                t.width = t.width,
                delete t[Pi],
                !0
            }
            addEventListener(e, t, n) {
                this.removeEventListener(e, t);
                const s = e.$proxies || (e.$proxies = {})
                  , i = {
                    attach: Di,
                    detach: Fi,
                    resize: Vi
                }[t] || Ki;
                s[t] = i(e, t, n)
            }
            removeEventListener(e, t) {
                const n = e.$proxies || (e.$proxies = {})
                  , s = n[t];
                if (!s)
                    return;
                ({
                    attach: Hi,
                    detach: Hi,
                    resize: Hi
                }[t] || Ri)(e, t, s),
                n[t] = void 0
            }
            getDevicePixelRatio() {
                return window.devicePixelRatio
            }
            getMaximumSize(e, t, n, s) {
                return ls(e, t, n, s)
            }
            isAttached(e) {
                const t = es(e);
                return !(!t || !t.isConnected)
            }
        }
        function zi(e) {
            return !Jn() || "undefined" != typeof OffscreenCanvas && e instanceof OffscreenCanvas ? Oi : Wi
        }
        class Yi {
            static defaults = {};
            static defaultRoutes = void 0;
            active = !1;
            tooltipPosition(e) {
                const {x: t, y: n} = this.getProps(["x", "y"], e);
                return {
                    x: t,
                    y: n
                }
            }
            hasValue() {
                return Re(this.x) && Re(this.y)
            }
            getProps(e, t) {
                const n = this.$animations;
                if (!t || !n)
                    return this;
                const s = {};
                return e.forEach((e=>{
                    s[e] = n[e] && n[e].active() ? n[e]._to : this[e]
                }
                )),
                s
            }
        }
        function $i(e, t) {
            const n = e.options.ticks
              , s = function(e) {
                const t = e.options.offset
                  , n = e._tickSize()
                  , s = e._length / n + (t ? 0 : 1)
                  , i = e._maxLength / n;
                return Math.floor(Math.min(s, i))
            }(e)
              , i = Math.min(n.maxTicksLimit || s, s)
              , a = n.major.enabled ? function(e) {
                const t = [];
                let n, s;
                for (n = 0,
                s = e.length; n < s; n++)
                    e[n].major && t.push(n);
                return t
            }(t) : []
              , o = a.length
              , r = a[0]
              , l = a[o - 1]
              , c = [];
            if (o > i)
                return function(e, t, n, s) {
                    let i, a = 0, o = n[0];
                    for (s = Math.ceil(s),
                    i = 0; i < e.length; i++)
                        i === o && (t.push(e[i]),
                        a++,
                        o = n[a * s])
                }(t, c, a, o / i),
                c;
            const u = function(e, t, n) {
                const s = function(e) {
                    const t = e.length;
                    let n, s;
                    if (t < 2)
                        return !1;
                    for (s = e[0],
                    n = 1; n < t; ++n)
                        if (e[n] - e[n - 1] !== s)
                            return !1;
                    return s
                }(e)
                  , i = t.length / n;
                if (!s)
                    return Math.max(i, 1);
                const a = function(e) {
                    const t = []
                      , n = Math.sqrt(e);
                    let s;
                    for (s = 1; s < n; s++)
                        e % s == 0 && (t.push(s),
                        t.push(e / s));
                    return n === (0 | n) && t.push(n),
                    t.sort(((e,t)=>e - t)).pop(),
                    t
                }(s);
                for (let e = 0, t = a.length - 1; e < t; e++) {
                    const t = a[e];
                    if (t > i)
                        return t
                }
                return Math.max(i, 1)
            }(a, t, i);
            if (o > 0) {
                let e, n;
                const s = o > 1 ? Math.round((l - r) / (o - 1)) : null;
                for (qi(t, c, u, te(s) ? 0 : r - s, r),
                e = 0,
                n = o - 1; e < n; e++)
                    qi(t, c, u, a[e], a[e + 1]);
                return qi(t, c, u, l, te(s) ? t.length : l + s),
                c
            }
            return qi(t, c, u),
            c
        }
        function qi(e, t, n, s, i) {
            const a = oe(s, 0)
              , o = Math.min(oe(i, e.length), e.length);
            let r, l, c, u = 0;
            for (n = Math.ceil(n),
            i && (r = i - s,
            n = r / Math.floor(r / n)),
            c = a; c < 0; )
                u++,
                c = Math.round(a + u * n);
            for (l = Math.max(a, 0); l < o; l++)
                l === c && (t.push(e[l]),
                u++,
                c = Math.round(a + u * n))
        }
        const Xi = (e,t,n)=>"top" === t || "left" === t ? e[t] + n : e[t] - n;
        function Qi(e, t) {
            const n = []
              , s = e.length / t
              , i = e.length;
            let a = 0;
            for (; a < i; a += s)
                n.push(e[Math.floor(a)]);
            return n
        }
        function Zi(e, t, n) {
            const s = e.ticks.length
              , i = Math.min(t, s - 1)
              , a = e._startPixel
              , o = e._endPixel
              , r = 1e-6;
            let l, c = e.getPixelForTick(i);
            if (!(n && (l = 1 === s ? Math.max(c - a, o - c) : 0 === t ? (e.getPixelForTick(1) - c) / 2 : (c - e.getPixelForTick(i - 1)) / 2,
            c += i < t ? l : -l,
            c < a - r || c > o + r)))
                return c
        }
        function Ji(e) {
            return e.drawTicks ? e.tickLength : 0
        }
        function ea(e, t) {
            if (!e.display)
                return 0;
            const n = wn(e.font, t)
              , s = Nn(e.padding);
            return (ne(e.text) ? e.text.length : 1) * n.lineHeight + s.height
        }
        function ta(e, t, n) {
            let s = tt(e);
            return (n && "right" !== t || !n && "right" === t) && (s = (e=>"left" === e ? "right" : "right" === e ? "left" : e)(s)),
            s
        }
        class na extends Yi {
            constructor(e) {
                super(),
                this.id = e.id,
                this.type = e.type,
                this.options = void 0,
                this.ctx = e.ctx,
                this.chart = e.chart,
                this.top = void 0,
                this.bottom = void 0,
                this.left = void 0,
                this.right = void 0,
                this.width = void 0,
                this.height = void 0,
                this._margins = {
                    left: 0,
                    right: 0,
                    top: 0,
                    bottom: 0
                },
                this.maxWidth = void 0,
                this.maxHeight = void 0,
                this.paddingTop = void 0,
                this.paddingBottom = void 0,
                this.paddingLeft = void 0,
                this.paddingRight = void 0,
                this.axis = void 0,
                this.labelRotation = void 0,
                this.min = void 0,
                this.max = void 0,
                this._range = void 0,
                this.ticks = [],
                this._gridLineItems = null,
                this._labelItems = null,
                this._labelSizes = null,
                this._length = 0,
                this._maxLength = 0,
                this._longestTextCache = {},
                this._startPixel = void 0,
                this._endPixel = void 0,
                this._reversePixels = !1,
                this._userMax = void 0,
                this._userMin = void 0,
                this._suggestedMax = void 0,
                this._suggestedMin = void 0,
                this._ticksLength = 0,
                this._borderValue = 0,
                this._cache = {},
                this._dataLimitsCached = !1,
                this.$context = void 0
            }
            init(e) {
                this.options = e.setContext(this.getContext()),
                this.axis = e.axis,
                this._userMin = this.parse(e.min),
                this._userMax = this.parse(e.max),
                this._suggestedMin = this.parse(e.suggestedMin),
                this._suggestedMax = this.parse(e.suggestedMax)
            }
            parse(e, t) {
                return e
            }
            getUserBounds() {
                let {_userMin: e, _userMax: t, _suggestedMin: n, _suggestedMax: s} = this;
                return e = ae(e, Number.POSITIVE_INFINITY),
                t = ae(t, Number.NEGATIVE_INFINITY),
                n = ae(n, Number.POSITIVE_INFINITY),
                s = ae(s, Number.NEGATIVE_INFINITY),
                {
                    min: ae(e, n),
                    max: ae(t, s),
                    minDefined: ie(e),
                    maxDefined: ie(t)
                }
            }
            getMinMax(e) {
                let t, {min: n, max: s, minDefined: i, maxDefined: a} = this.getUserBounds();
                if (i && a)
                    return {
                        min: n,
                        max: s
                    };
                const o = this.getMatchingVisibleMetas();
                for (let r = 0, l = o.length; r < l; ++r)
                    t = o[r].controller.getMinMax(this, e),
                    i || (n = Math.min(n, t.min)),
                    a || (s = Math.max(s, t.max));
                return n = a && n > s ? s : n,
                s = i && n > s ? n : s,
                {
                    min: ae(n, ae(s, n)),
                    max: ae(s, ae(n, s))
                }
            }
            getPadding() {
                return {
                    left: this.paddingLeft || 0,
                    top: this.paddingTop || 0,
                    right: this.paddingRight || 0,
                    bottom: this.paddingBottom || 0
                }
            }
            getTicks() {
                return this.ticks
            }
            getLabels() {
                const e = this.chart.data;
                return this.options.labels || (this.isHorizontal() ? e.xLabels : e.yLabels) || e.labels || []
            }
            beforeLayout() {
                this._cache = {},
                this._dataLimitsCached = !1
            }
            beforeUpdate() {
                le(this.options.beforeUpdate, [this])
            }
            update(e, t, n) {
                const {beginAtZero: s, grace: i, ticks: a} = this.options
                  , o = a.sampleSize;
                this.beforeUpdate(),
                this.maxWidth = e,
                this.maxHeight = t,
                this._margins = n = Object.assign({
                    left: 0,
                    right: 0,
                    top: 0,
                    bottom: 0
                }, n),
                this.ticks = null,
                this._labelSizes = null,
                this._gridLineItems = null,
                this._labelItems = null,
                this.beforeSetDimensions(),
                this.setDimensions(),
                this.afterSetDimensions(),
                this._maxLength = this.isHorizontal() ? this.width + n.left + n.right : this.height + n.top + n.bottom,
                this._dataLimitsCached || (this.beforeDataLimits(),
                this.determineDataLimits(),
                this.afterDataLimits(),
                this._range = function(e, t, n) {
                    const {min: s, max: i} = e
                      , a = re(t, (i - s) / 2)
                      , o = (e,t)=>n && 0 === e ? 0 : e + t;
                    return {
                        min: o(s, -Math.abs(a)),
                        max: o(i, a)
                    }
                }(this, i, s),
                this._dataLimitsCached = !0),
                this.beforeBuildTicks(),
                this.ticks = this.buildTicks() || [],
                this.afterBuildTicks();
                const r = o < this.ticks.length;
                this._convertTicksToLabels(r ? Qi(this.ticks, o) : this.ticks),
                this.configure(),
                this.beforeCalculateLabelRotation(),
                this.calculateLabelRotation(),
                this.afterCalculateLabelRotation(),
                a.display && (a.autoSkip || "auto" === a.source) && (this.ticks = $i(this, this.ticks),
                this._labelSizes = null,
                this.afterAutoSkip()),
                r && this._convertTicksToLabels(this.ticks),
                this.beforeFit(),
                this.fit(),
                this.afterFit(),
                this.afterUpdate()
            }
            configure() {
                let e, t, n = this.options.reverse;
                this.isHorizontal() ? (e = this.left,
                t = this.right) : (e = this.top,
                t = this.bottom,
                n = !n),
                this._startPixel = e,
                this._endPixel = t,
                this._reversePixels = n,
                this._length = t - e,
                this._alignToPixels = this.options.alignToPixels
            }
            afterUpdate() {
                le(this.options.afterUpdate, [this])
            }
            beforeSetDimensions() {
                le(this.options.beforeSetDimensions, [this])
            }
            setDimensions() {
                this.isHorizontal() ? (this.width = this.maxWidth,
                this.left = 0,
                this.right = this.width) : (this.height = this.maxHeight,
                this.top = 0,
                this.bottom = this.height),
                this.paddingLeft = 0,
                this.paddingTop = 0,
                this.paddingRight = 0,
                this.paddingBottom = 0
            }
            afterSetDimensions() {
                le(this.options.afterSetDimensions, [this])
            }
            _callHooks(e) {
                this.chart.notifyPlugins(e, this.getContext()),
                le(this.options[e], [this])
            }
            beforeDataLimits() {
                this._callHooks("beforeDataLimits")
            }
            determineDataLimits() {}
            afterDataLimits() {
                this._callHooks("afterDataLimits")
            }
            beforeBuildTicks() {
                this._callHooks("beforeBuildTicks")
            }
            buildTicks() {
                return []
            }
            afterBuildTicks() {
                this._callHooks("afterBuildTicks")
            }
            beforeTickToLabelConversion() {
                le(this.options.beforeTickToLabelConversion, [this])
            }
            generateTickLabels(e) {
                const t = this.options.ticks;
                let n, s, i;
                for (n = 0,
                s = e.length; n < s; n++)
                    i = e[n],
                    i.label = le(t.callback, [i.value, n, e], this)
            }
            afterTickToLabelConversion() {
                le(this.options.afterTickToLabelConversion, [this])
            }
            beforeCalculateLabelRotation() {
                le(this.options.beforeCalculateLabelRotation, [this])
            }
            calculateLabelRotation() {
                const e = this.options
                  , t = e.ticks
                  , n = this.ticks.length
                  , s = t.minRotation || 0
                  , i = t.maxRotation;
                let a, o, r, l = s;
                if (!this._isVisible() || !t.display || s >= i || n <= 1 || !this.isHorizontal())
                    return void (this.labelRotation = s);
                const c = this._getLabelSizes()
                  , u = c.widest.width
                  , d = c.highest.height
                  , m = We(this.chart.width - u, 0, this.maxWidth);
                a = e.offset ? this.maxWidth / n : m / (n - 1),
                u + 6 > a && (a = m / (n - (e.offset ? .5 : 1)),
                o = this.maxHeight - Ji(e.grid) - t.padding - ea(e.title, this.chart.options.font),
                r = Math.sqrt(u * u + d * d),
                l = Fe(Math.min(Math.asin(We((c.highest.height + 6) / a, -1, 1)), Math.asin(We(o / r, -1, 1)) - Math.asin(We(d / r, -1, 1)))),
                l = Math.max(s, Math.min(i, l))),
                this.labelRotation = l
            }
            afterCalculateLabelRotation() {
                le(this.options.afterCalculateLabelRotation, [this])
            }
            afterAutoSkip() {}
            beforeFit() {
                le(this.options.beforeFit, [this])
            }
            fit() {
                const e = {
                    width: 0,
                    height: 0
                }
                  , {chart: t, options: {ticks: n, title: s, grid: i}} = this
                  , a = this._isVisible()
                  , o = this.isHorizontal();
                if (a) {
                    const a = ea(s, t.options.font);
                    if (o ? (e.width = this.maxWidth,
                    e.height = Ji(i) + a) : (e.height = this.maxHeight,
                    e.width = Ji(i) + a),
                    n.display && this.ticks.length) {
                        const {first: t, last: s, widest: i, highest: a} = this._getLabelSizes()
                          , r = 2 * n.padding
                          , l = De(this.labelRotation)
                          , c = Math.cos(l)
                          , u = Math.sin(l);
                        if (o) {
                            const t = n.mirror ? 0 : u * i.width + c * a.height;
                            e.height = Math.min(this.maxHeight, e.height + t + r)
                        } else {
                            const t = n.mirror ? 0 : c * i.width + u * a.height;
                            e.width = Math.min(this.maxWidth, e.width + t + r)
                        }
                        this._calculatePadding(t, s, u, c)
                    }
                }
                this._handleMargins(),
                o ? (this.width = this._length = t.width - this._margins.left - this._margins.right,
                this.height = e.height) : (this.width = e.width,
                this.height = this._length = t.height - this._margins.top - this._margins.bottom)
            }
            _calculatePadding(e, t, n, s) {
                const {ticks: {align: i, padding: a}, position: o} = this.options
                  , r = 0 !== this.labelRotation
                  , l = "top" !== o && "x" === this.axis;
                if (this.isHorizontal()) {
                    const o = this.getPixelForTick(0) - this.left
                      , c = this.right - this.getPixelForTick(this.ticks.length - 1);
                    let u = 0
                      , d = 0;
                    r ? l ? (u = s * e.width,
                    d = n * t.height) : (u = n * e.height,
                    d = s * t.width) : "start" === i ? d = t.width : "end" === i ? u = e.width : "inner" !== i && (u = e.width / 2,
                    d = t.width / 2),
                    this.paddingLeft = Math.max((u - o + a) * this.width / (this.width - o), 0),
                    this.paddingRight = Math.max((d - c + a) * this.width / (this.width - c), 0)
                } else {
                    let n = t.height / 2
                      , s = e.height / 2;
                    "start" === i ? (n = 0,
                    s = e.height) : "end" === i && (n = t.height,
                    s = 0),
                    this.paddingTop = n + a,
                    this.paddingBottom = s + a
                }
            }
            _handleMargins() {
                this._margins && (this._margins.left = Math.max(this.paddingLeft, this._margins.left),
                this._margins.top = Math.max(this.paddingTop, this._margins.top),
                this._margins.right = Math.max(this.paddingRight, this._margins.right),
                this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom))
            }
            afterFit() {
                le(this.options.afterFit, [this])
            }
            isHorizontal() {
                const {axis: e, position: t} = this.options;
                return "top" === t || "bottom" === t || "x" === e
            }
            isFullSize() {
                return this.options.fullSize
            }
            _convertTicksToLabels(e) {
                let t, n;
                for (this.beforeTickToLabelConversion(),
                this.generateTickLabels(e),
                t = 0,
                n = e.length; t < n; t++)
                    te(e[t].label) && (e.splice(t, 1),
                    n--,
                    t--);
                this.afterTickToLabelConversion()
            }
            _getLabelSizes() {
                let e = this._labelSizes;
                if (!e) {
                    const t = this.options.ticks.sampleSize;
                    let n = this.ticks;
                    t < n.length && (n = Qi(n, t)),
                    this._labelSizes = e = this._computeLabelSizes(n, n.length)
                }
                return e
            }
            _computeLabelSizes(e, t) {
                const {ctx: n, _longestTextCache: s} = this
                  , i = []
                  , a = [];
                let o, r, l, c, u, d, m, h, g, p, f, x = 0, v = 0;
                for (o = 0; o < t; ++o) {
                    if (c = e[o].label,
                    u = this._resolveTickFontOptions(o),
                    n.font = d = u.string,
                    m = s[d] = s[d] || {
                        data: {},
                        gc: []
                    },
                    h = u.lineHeight,
                    g = p = 0,
                    te(c) || ne(c)) {
                        if (ne(c))
                            for (r = 0,
                            l = c.length; r < l; ++r)
                                f = c[r],
                                te(f) || ne(f) || (g = on(n, m.data, m.gc, g, f),
                                p += h)
                    } else
                        g = on(n, m.data, m.gc, g, c),
                        p = h;
                    i.push(g),
                    a.push(p),
                    x = Math.max(g, x),
                    v = Math.max(p, v)
                }
                !function(e, t) {
                    ce(e, (e=>{
                        const n = e.gc
                          , s = n.length / 2;
                        let i;
                        if (s > t) {
                            for (i = 0; i < s; ++i)
                                delete e.data[n[i]];
                            n.splice(0, s)
                        }
                    }
                    ))
                }(s, t);
                const _ = i.indexOf(x)
                  , b = a.indexOf(v)
                  , T = e=>({
                    width: i[e] || 0,
                    height: a[e] || 0
                });
                return {
                    first: T(0),
                    last: T(t - 1),
                    widest: T(_),
                    highest: T(b),
                    widths: i,
                    heights: a
                }
            }
            getLabelForValue(e) {
                return e
            }
            getPixelForValue(e, t) {
                return NaN
            }
            getValueForPixel(e) {}
            getPixelForTick(e) {
                const t = this.ticks;
                return e < 0 || e > t.length - 1 ? null : this.getPixelForValue(t[e].value)
            }
            getPixelForDecimal(e) {
                this._reversePixels && (e = 1 - e);
                const t = this._startPixel + e * this._length;
                return function(e) {
                    return We(e, -32768, 32767)
                }(this._alignToPixels ? ln(this.chart, t, 0) : t)
            }
            getDecimalForPixel(e) {
                const t = (e - this._startPixel) / this._length;
                return this._reversePixels ? 1 - t : t
            }
            getBasePixel() {
                return this.getPixelForValue(this.getBaseValue())
            }
            getBaseValue() {
                const {min: e, max: t} = this;
                return e < 0 && t < 0 ? t : e > 0 && t > 0 ? e : 0
            }
            getContext(e) {
                const t = this.ticks || [];
                if (e >= 0 && e < t.length) {
                    const n = t[e];
                    return n.$context || (n.$context = function(e, t, n) {
                        return Pn(e, {
                            tick: n,
                            index: t,
                            type: "tick"
                        })
                    }(this.getContext(), e, n))
                }
                return this.$context || (this.$context = Pn(this.chart.getContext(), {
                    scale: this,
                    type: "scale"
                }))
            }
            _tickSize() {
                const e = this.options.ticks
                  , t = De(this.labelRotation)
                  , n = Math.abs(Math.cos(t))
                  , s = Math.abs(Math.sin(t))
                  , i = this._getLabelSizes()
                  , a = e.autoSkipPadding || 0
                  , o = i ? i.widest.width + a : 0
                  , r = i ? i.highest.height + a : 0;
                return this.isHorizontal() ? r * n > o * s ? o / n : r / s : r * s < o * n ? r / n : o / s
            }
            _isVisible() {
                const e = this.options.display;
                return "auto" !== e ? !!e : this.getMatchingVisibleMetas().length > 0
            }
            _computeGridLineItems(e) {
                const t = this.axis
                  , n = this.chart
                  , s = this.options
                  , {grid: i, position: a, border: o} = s
                  , r = i.offset
                  , l = this.isHorizontal()
                  , c = this.ticks.length + (r ? 1 : 0)
                  , u = Ji(i)
                  , d = []
                  , m = o.setContext(this.getContext())
                  , h = m.display ? m.width : 0
                  , g = h / 2
                  , p = function(e) {
                    return ln(n, e, h)
                };
                let f, x, v, _, b, T, E, I, S, y, j, C;
                if ("top" === a)
                    f = p(this.bottom),
                    T = this.bottom - u,
                    I = f - g,
                    y = p(e.top) + g,
                    C = e.bottom;
                else if ("bottom" === a)
                    f = p(this.top),
                    y = e.top,
                    C = p(e.bottom) - g,
                    T = f + g,
                    I = this.top + u;
                else if ("left" === a)
                    f = p(this.right),
                    b = this.right - u,
                    E = f - g,
                    S = p(e.left) + g,
                    j = e.right;
                else if ("right" === a)
                    f = p(this.left),
                    S = e.left,
                    j = p(e.right) - g,
                    b = f + g,
                    E = this.left + u;
                else if ("x" === t) {
                    if ("center" === a)
                        f = p((e.top + e.bottom) / 2 + .5);
                    else if (se(a)) {
                        const e = Object.keys(a)[0]
                          , t = a[e];
                        f = p(this.chart.scales[e].getPixelForValue(t))
                    }
                    y = e.top,
                    C = e.bottom,
                    T = f + g,
                    I = T + u
                } else if ("y" === t) {
                    if ("center" === a)
                        f = p((e.left + e.right) / 2);
                    else if (se(a)) {
                        const e = Object.keys(a)[0]
                          , t = a[e];
                        f = p(this.chart.scales[e].getPixelForValue(t))
                    }
                    b = f - g,
                    E = b - u,
                    S = e.left,
                    j = e.right
                }
                const N = oe(s.ticks.maxTicksLimit, c)
                  , w = Math.max(1, Math.ceil(c / N));
                for (x = 0; x < c; x += w) {
                    const e = this.getContext(x)
                      , t = i.setContext(e)
                      , s = o.setContext(e)
                      , a = t.lineWidth
                      , c = t.color
                      , u = s.dash || []
                      , m = s.dashOffset
                      , h = t.tickWidth
                      , g = t.tickColor
                      , p = t.tickBorderDash || []
                      , f = t.tickBorderDashOffset;
                    v = Zi(this, x, r),
                    void 0 !== v && (_ = ln(n, v, a),
                    l ? b = E = S = j = _ : T = I = y = C = _,
                    d.push({
                        tx1: b,
                        ty1: T,
                        tx2: E,
                        ty2: I,
                        x1: S,
                        y1: y,
                        x2: j,
                        y2: C,
                        width: a,
                        color: c,
                        borderDash: u,
                        borderDashOffset: m,
                        tickWidth: h,
                        tickColor: g,
                        tickBorderDash: p,
                        tickBorderDashOffset: f
                    }))
                }
                return this._ticksLength = c,
                this._borderValue = f,
                d
            }
            _computeLabelItems(e) {
                const t = this.axis
                  , n = this.options
                  , {position: s, ticks: i} = n
                  , a = this.isHorizontal()
                  , o = this.ticks
                  , {align: r, crossAlign: l, padding: c, mirror: u} = i
                  , d = Ji(n.grid)
                  , m = d + c
                  , h = u ? -c : m
                  , g = -De(this.labelRotation)
                  , p = [];
                let f, x, v, _, b, T, E, I, S, y, j, C, N = "middle";
                if ("top" === s)
                    T = this.bottom - h,
                    E = this._getXAxisLabelAlignment();
                else if ("bottom" === s)
                    T = this.top + h,
                    E = this._getXAxisLabelAlignment();
                else if ("left" === s) {
                    const e = this._getYAxisLabelAlignment(d);
                    E = e.textAlign,
                    b = e.x
                } else if ("right" === s) {
                    const e = this._getYAxisLabelAlignment(d);
                    E = e.textAlign,
                    b = e.x
                } else if ("x" === t) {
                    if ("center" === s)
                        T = (e.top + e.bottom) / 2 + m;
                    else if (se(s)) {
                        const e = Object.keys(s)[0]
                          , t = s[e];
                        T = this.chart.scales[e].getPixelForValue(t) + m
                    }
                    E = this._getXAxisLabelAlignment()
                } else if ("y" === t) {
                    if ("center" === s)
                        b = (e.left + e.right) / 2 - m;
                    else if (se(s)) {
                        const e = Object.keys(s)[0]
                          , t = s[e];
                        b = this.chart.scales[e].getPixelForValue(t)
                    }
                    E = this._getYAxisLabelAlignment(d).textAlign
                }
                "y" === t && ("start" === r ? N = "top" : "end" === r && (N = "bottom"));
                const w = this._getLabelSizes();
                for (f = 0,
                x = o.length; f < x; ++f) {
                    v = o[f],
                    _ = v.label;
                    const e = i.setContext(this.getContext(f));
                    I = this.getPixelForTick(f) + i.labelOffset,
                    S = this._resolveTickFontOptions(f),
                    y = S.lineHeight,
                    j = ne(_) ? _.length : 1;
                    const t = j / 2
                      , n = e.color
                      , r = e.textStrokeColor
                      , c = e.textStrokeWidth;
                    let d, m = E;
                    if (a ? (b = I,
                    "inner" === E && (m = f === x - 1 ? this.options.reverse ? "left" : "right" : 0 === f ? this.options.reverse ? "right" : "left" : "center"),
                    C = "top" === s ? "near" === l || 0 !== g ? -j * y + y / 2 : "center" === l ? -w.highest.height / 2 - t * y + y : -w.highest.height + y / 2 : "near" === l || 0 !== g ? y / 2 : "center" === l ? w.highest.height / 2 - t * y : w.highest.height - j * y,
                    u && (C *= -1),
                    0 === g || e.showLabelBackdrop || (b += y / 2 * Math.sin(g))) : (T = I,
                    C = (1 - j) * y / 2),
                    e.showLabelBackdrop) {
                        const t = Nn(e.backdropPadding)
                          , n = w.heights[f]
                          , s = w.widths[f];
                        let i = C - t.top
                          , a = 0 - t.left;
                        switch (N) {
                        case "middle":
                            i -= n / 2;
                            break;
                        case "bottom":
                            i -= n
                        }
                        switch (E) {
                        case "center":
                            a -= s / 2;
                            break;
                        case "right":
                            a -= s
                        }
                        d = {
                            left: a,
                            top: i,
                            width: s + t.width,
                            height: n + t.height,
                            color: e.backdropColor
                        }
                    }
                    p.push({
                        rotation: g,
                        label: _,
                        font: S,
                        color: n,
                        strokeColor: r,
                        strokeWidth: c,
                        textOffset: C,
                        textAlign: m,
                        textBaseline: N,
                        translation: [b, T],
                        backdrop: d
                    })
                }
                return p
            }
            _getXAxisLabelAlignment() {
                const {position: e, ticks: t} = this.options;
                if (-De(this.labelRotation))
                    return "top" === e ? "left" : "right";
                let n = "center";
                return "start" === t.align ? n = "left" : "end" === t.align ? n = "right" : "inner" === t.align && (n = "inner"),
                n
            }
            _getYAxisLabelAlignment(e) {
                const {position: t, ticks: {crossAlign: n, mirror: s, padding: i}} = this.options
                  , a = e + i
                  , o = this._getLabelSizes().widest.width;
                let r, l;
                return "left" === t ? s ? (l = this.right + i,
                "near" === n ? r = "left" : "center" === n ? (r = "center",
                l += o / 2) : (r = "right",
                l += o)) : (l = this.right - a,
                "near" === n ? r = "right" : "center" === n ? (r = "center",
                l -= o / 2) : (r = "left",
                l = this.left)) : "right" === t ? s ? (l = this.left + i,
                "near" === n ? r = "right" : "center" === n ? (r = "center",
                l -= o / 2) : (r = "left",
                l -= o)) : (l = this.left + a,
                "near" === n ? r = "left" : "center" === n ? (r = "center",
                l += o / 2) : (r = "right",
                l = this.right)) : r = "right",
                {
                    textAlign: r,
                    x: l
                }
            }
            _computeLabelArea() {
                if (this.options.ticks.mirror)
                    return;
                const e = this.chart
                  , t = this.options.position;
                return "left" === t || "right" === t ? {
                    top: 0,
                    left: this.left,
                    bottom: e.height,
                    right: this.right
                } : "top" === t || "bottom" === t ? {
                    top: this.top,
                    left: 0,
                    bottom: this.bottom,
                    right: e.width
                } : void 0
            }
            drawBackground() {
                const {ctx: e, options: {backgroundColor: t}, left: n, top: s, width: i, height: a} = this;
                t && (e.save(),
                e.fillStyle = t,
                e.fillRect(n, s, i, a),
                e.restore())
            }
            getLineWidthForValue(e) {
                const t = this.options.grid;
                if (!this._isVisible() || !t.display)
                    return 0;
                const n = this.ticks.findIndex((t=>t.value === e));
                if (n >= 0) {
                    return t.setContext(this.getContext(n)).lineWidth
                }
                return 0
            }
            drawGrid(e) {
                const t = this.options.grid
                  , n = this.ctx
                  , s = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(e));
                let i, a;
                const o = (e,t,s)=>{
                    s.width && s.color && (n.save(),
                    n.lineWidth = s.width,
                    n.strokeStyle = s.color,
                    n.setLineDash(s.borderDash || []),
                    n.lineDashOffset = s.borderDashOffset,
                    n.beginPath(),
                    n.moveTo(e.x, e.y),
                    n.lineTo(t.x, t.y),
                    n.stroke(),
                    n.restore())
                }
                ;
                if (t.display)
                    for (i = 0,
                    a = s.length; i < a; ++i) {
                        const e = s[i];
                        t.drawOnChartArea && o({
                            x: e.x1,
                            y: e.y1
                        }, {
                            x: e.x2,
                            y: e.y2
                        }, e),
                        t.drawTicks && o({
                            x: e.tx1,
                            y: e.ty1
                        }, {
                            x: e.tx2,
                            y: e.ty2
                        }, {
                            color: e.tickColor,
                            width: e.tickWidth,
                            borderDash: e.tickBorderDash,
                            borderDashOffset: e.tickBorderDashOffset
                        })
                    }
            }
            drawBorder() {
                const {chart: e, ctx: t, options: {border: n, grid: s}} = this
                  , i = n.setContext(this.getContext())
                  , a = n.display ? i.width : 0;
                if (!a)
                    return;
                const o = s.setContext(this.getContext(0)).lineWidth
                  , r = this._borderValue;
                let l, c, u, d;
                this.isHorizontal() ? (l = ln(e, this.left, a) - a / 2,
                c = ln(e, this.right, o) + o / 2,
                u = d = r) : (u = ln(e, this.top, a) - a / 2,
                d = ln(e, this.bottom, o) + o / 2,
                l = c = r),
                t.save(),
                t.lineWidth = i.width,
                t.strokeStyle = i.color,
                t.beginPath(),
                t.moveTo(l, u),
                t.lineTo(c, d),
                t.stroke(),
                t.restore()
            }
            drawLabels(e) {
                if (!this.options.ticks.display)
                    return;
                const t = this.ctx
                  , n = this._computeLabelArea();
                n && hn(t, n);
                const s = this._labelItems || (this._labelItems = this._computeLabelItems(e));
                let i, a;
                for (i = 0,
                a = s.length; i < a; ++i) {
                    const e = s[i]
                      , n = e.font;
                    xn(t, e.label, 0, e.textOffset, n, e)
                }
                n && gn(t)
            }
            drawTitle() {
                const {ctx: e, options: {position: t, title: n, reverse: s}} = this;
                if (!n.display)
                    return;
                const i = wn(n.font)
                  , a = Nn(n.padding)
                  , o = n.align;
                let r = i.lineHeight / 2;
                "bottom" === t || "center" === t || se(t) ? (r += a.bottom,
                ne(n.text) && (r += i.lineHeight * (n.text.length - 1))) : r += a.top;
                const {titleX: l, titleY: c, maxWidth: u, rotation: d} = function(e, t, n, s) {
                    const {top: i, left: a, bottom: o, right: r, chart: l} = e
                      , {chartArea: c, scales: u} = l;
                    let d, m, h, g = 0;
                    const p = o - i
                      , f = r - a;
                    if (e.isHorizontal()) {
                        if (m = nt(s, a, r),
                        se(n)) {
                            const e = Object.keys(n)[0]
                              , s = n[e];
                            h = u[e].getPixelForValue(s) + p - t
                        } else
                            h = "center" === n ? (c.bottom + c.top) / 2 + p - t : Xi(e, n, t);
                        d = r - a
                    } else {
                        if (se(n)) {
                            const e = Object.keys(n)[0]
                              , s = n[e];
                            m = u[e].getPixelForValue(s) - f + t
                        } else
                            m = "center" === n ? (c.left + c.right) / 2 - f + t : Xi(e, n, t);
                        h = nt(s, o, i),
                        g = "left" === n ? -Ne : Ne
                    }
                    return {
                        titleX: m,
                        titleY: h,
                        maxWidth: d,
                        rotation: g
                    }
                }(this, r, t, o);
                xn(e, n.text, 0, 0, i, {
                    color: n.color,
                    maxWidth: u,
                    rotation: d,
                    textAlign: ta(o, t, s),
                    textBaseline: "middle",
                    translation: [l, c]
                })
            }
            draw(e) {
                this._isVisible() && (this.drawBackground(),
                this.drawGrid(e),
                this.drawBorder(),
                this.drawTitle(),
                this.drawLabels(e))
            }
            _layers() {
                const e = this.options
                  , t = e.ticks && e.ticks.z || 0
                  , n = oe(e.grid && e.grid.z, -1)
                  , s = oe(e.border && e.border.z, 0);
                return this._isVisible() && this.draw === na.prototype.draw ? [{
                    z: n,
                    draw: e=>{
                        this.drawBackground(),
                        this.drawGrid(e),
                        this.drawTitle()
                    }
                }, {
                    z: s,
                    draw: ()=>{
                        this.drawBorder()
                    }
                }, {
                    z: t,
                    draw: e=>{
                        this.drawLabels(e)
                    }
                }] : [{
                    z: t,
                    draw: e=>{
                        this.draw(e)
                    }
                }]
            }
            getMatchingVisibleMetas(e) {
                const t = this.chart.getSortedVisibleDatasetMetas()
                  , n = this.axis + "AxisID"
                  , s = [];
                let i, a;
                for (i = 0,
                a = t.length; i < a; ++i) {
                    const a = t[i];
                    a[n] !== this.id || e && a.type !== e || s.push(a)
                }
                return s
            }
            _resolveTickFontOptions(e) {
                return wn(this.options.ticks.setContext(this.getContext(e)).font)
            }
            _maxDigits() {
                const e = this._resolveTickFontOptions(0).lineHeight;
                return (this.isHorizontal() ? this.width : this.height) / e
            }
        }
        class sa {
            constructor(e, t, n) {
                this.type = e,
                this.scope = t,
                this.override = n,
                this.items = Object.create(null)
            }
            isForType(e) {
                return Object.prototype.isPrototypeOf.call(this.type.prototype, e.prototype)
            }
            register(e) {
                const t = Object.getPrototypeOf(e);
                let n;
                (function(e) {
                    return "id"in e && "defaults"in e
                }
                )(t) && (n = this.register(t));
                const s = this.items
                  , i = e.id
                  , a = this.scope + "." + i;
                if (!i)
                    throw new Error("class does not have id: " + e);
                return i in s || (s[i] = e,
                function(e, t, n) {
                    const s = ge(Object.create(null), [n ? an.get(n) : {}, an.get(t), e.defaults]);
                    an.set(t, s),
                    e.defaultRoutes && function(e, t) {
                        Object.keys(t).forEach((n=>{
                            const s = n.split(".")
                              , i = s.pop()
                              , a = [e].concat(s).join(".")
                              , o = t[n].split(".")
                              , r = o.pop()
                              , l = o.join(".");
                            an.route(a, i, l, r)
                        }
                        ))
                    }(t, e.defaultRoutes);
                    e.descriptors && an.describe(t, e.descriptors)
                }(e, a, n),
                this.override && an.override(e.id, e.overrides)),
                a
            }
            get(e) {
                return this.items[e]
            }
            unregister(e) {
                const t = this.items
                  , n = e.id
                  , s = this.scope;
                n in t && delete t[n],
                s && n in an[s] && (delete an[s][n],
                this.override && delete Jt[n])
            }
        }
        class ia {
            constructor() {
                this.controllers = new sa(Vs,"datasets",!0),
                this.elements = new sa(Yi,"elements"),
                this.plugins = new sa(Object,"plugins"),
                this.scales = new sa(na,"scales"),
                this._typedRegistries = [this.controllers, this.scales, this.elements]
            }
            add(...e) {
                this._each("register", e)
            }
            remove(...e) {
                this._each("unregister", e)
            }
            addControllers(...e) {
                this._each("register", e, this.controllers)
            }
            addElements(...e) {
                this._each("register", e, this.elements)
            }
            addPlugins(...e) {
                this._each("register", e, this.plugins)
            }
            addScales(...e) {
                this._each("register", e, this.scales)
            }
            getController(e) {
                return this._get(e, this.controllers, "controller")
            }
            getElement(e) {
                return this._get(e, this.elements, "element")
            }
            getPlugin(e) {
                return this._get(e, this.plugins, "plugin")
            }
            getScale(e) {
                return this._get(e, this.scales, "scale")
            }
            removeControllers(...e) {
                this._each("unregister", e, this.controllers)
            }
            removeElements(...e) {
                this._each("unregister", e, this.elements)
            }
            removePlugins(...e) {
                this._each("unregister", e, this.plugins)
            }
            removeScales(...e) {
                this._each("unregister", e, this.scales)
            }
            _each(e, t, n) {
                [...t].forEach((t=>{
                    const s = n || this._getRegistryForType(t);
                    n || s.isForType(t) || s === this.plugins && t.id ? this._exec(e, s, t) : ce(t, (t=>{
                        const s = n || this._getRegistryForType(t);
                        this._exec(e, s, t)
                    }
                    ))
                }
                ))
            }
            _exec(e, t, n) {
                const s = _e(e);
                le(n["before" + s], [], n),
                t[e](n),
                le(n["after" + s], [], n)
            }
            _getRegistryForType(e) {
                for (let t = 0; t < this._typedRegistries.length; t++) {
                    const n = this._typedRegistries[t];
                    if (n.isForType(e))
                        return n
                }
                return this.plugins
            }
            _get(e, t, n) {
                const s = t.get(e);
                if (void 0 === s)
                    throw new Error('"' + e + '" is not a registered ' + n + ".");
                return s
            }
        }
        var aa = new ia;
        class oa {
            constructor() {
                this._init = []
            }
            notify(e, t, n, s) {
                "beforeInit" === t && (this._init = this._createDescriptors(e, !0),
                this._notify(this._init, e, "install"));
                const i = s ? this._descriptors(e).filter(s) : this._descriptors(e)
                  , a = this._notify(i, e, t, n);
                return "afterDestroy" === t && (this._notify(i, e, "stop"),
                this._notify(this._init, e, "uninstall")),
                a
            }
            _notify(e, t, n, s) {
                s = s || {};
                for (const i of e) {
                    const e = i.plugin;
                    if (!1 === le(e[n], [t, s, i.options], e) && s.cancelable)
                        return !1
                }
                return !0
            }
            invalidate() {
                te(this._cache) || (this._oldCache = this._cache,
                this._cache = void 0)
            }
            _descriptors(e) {
                if (this._cache)
                    return this._cache;
                const t = this._cache = this._createDescriptors(e);
                return this._notifyStateChanges(e),
                t
            }
            _createDescriptors(e, t) {
                const n = e && e.config
                  , s = oe(n.options && n.options.plugins, {})
                  , i = function(e) {
                    const t = {}
                      , n = []
                      , s = Object.keys(aa.plugins.items);
                    for (let e = 0; e < s.length; e++)
                        n.push(aa.getPlugin(s[e]));
                    const i = e.plugins || [];
                    for (let e = 0; e < i.length; e++) {
                        const s = i[e];
                        -1 === n.indexOf(s) && (n.push(s),
                        t[s.id] = !0)
                    }
                    return {
                        plugins: n,
                        localIds: t
                    }
                }(n);
                return !1 !== s || t ? function(e, {plugins: t, localIds: n}, s, i) {
                    const a = []
                      , o = e.getContext();
                    for (const r of t) {
                        const t = r.id
                          , l = ra(s[t], i);
                        null !== l && a.push({
                            plugin: r,
                            options: la(e.config, {
                                plugin: r,
                                local: n[t]
                            }, l, o)
                        })
                    }
                    return a
                }(e, i, s, t) : []
            }
            _notifyStateChanges(e) {
                const t = this._oldCache || []
                  , n = this._cache
                  , s = (e,t)=>e.filter((e=>!t.some((t=>e.plugin.id === t.plugin.id))));
                this._notify(s(t, n), e, "stop"),
                this._notify(s(n, t), e, "start")
            }
        }
        function ra(e, t) {
            return t || !1 !== e ? !0 === e ? {} : e : null
        }
        function la(e, {plugin: t, local: n}, s, i) {
            const a = e.pluginScopeKeys(t)
              , o = e.getOptionScopes(s, a);
            return n && t.defaults && o.push(t.defaults),
            e.createResolver(o, i, [""], {
                scriptable: !1,
                indexable: !1,
                allKeys: !0
            })
        }
        function ca(e, t) {
            const n = an.datasets[e] || {};
            return ((t.datasets || {})[e] || {}).indexAxis || t.indexAxis || n.indexAxis || "x"
        }
        function ua(e, t) {
            if ("x" === e || "y" === e || "r" === e)
                return e;
            var n;
            if (e = t.axis || ("top" === (n = t.position) || "bottom" === n ? "x" : "left" === n || "right" === n ? "y" : void 0) || e.length > 1 && ua(e[0].toLowerCase(), t))
                return e;
            throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`)
        }
        function da(e) {
            const t = e.options || (e.options = {});
            t.plugins = oe(t.plugins, {}),
            t.scales = function(e, t) {
                const n = Jt[e.type] || {
                    scales: {}
                }
                  , s = t.scales || {}
                  , i = ca(e.type, t)
                  , a = Object.create(null);
                return Object.keys(s).forEach((e=>{
                    const t = s[e];
                    if (!se(t))
                        return console.error(`Invalid scale configuration for scale: ${e}`);
                    if (t._proxy)
                        return console.warn(`Ignoring resolver passed as options for scale: ${e}`);
                    const o = ua(e, t)
                      , r = function(e, t) {
                        return e === t ? "_index_" : "_value_"
                    }(o, i)
                      , l = n.scales || {};
                    a[e] = pe(Object.create(null), [{
                        axis: o
                    }, t, l[o], l[r]])
                }
                )),
                e.data.datasets.forEach((n=>{
                    const i = n.type || e.type
                      , o = n.indexAxis || ca(i, t)
                      , r = (Jt[i] || {}).scales || {};
                    Object.keys(r).forEach((e=>{
                        const t = function(e, t) {
                            let n = e;
                            return "_index_" === e ? n = t : "_value_" === e && (n = "x" === t ? "y" : "x"),
                            n
                        }(e, o)
                          , i = n[t + "AxisID"] || t;
                        a[i] = a[i] || Object.create(null),
                        pe(a[i], [{
                            axis: t
                        }, s[i], r[e]])
                    }
                    ))
                }
                )),
                Object.keys(a).forEach((e=>{
                    const t = a[e];
                    pe(t, [an.scales[t.type], an.scale])
                }
                )),
                a
            }(e, t)
        }
        function ma(e) {
            return (e = e || {}).datasets = e.datasets || [],
            e.labels = e.labels || [],
            e
        }
        const ha = new Map
          , ga = new Set;
        function pa(e, t) {
            let n = ha.get(e);
            return n || (n = t(),
            ha.set(e, n),
            ga.add(n)),
            n
        }
        const fa = (e,t,n)=>{
            const s = ve(t, n);
            void 0 !== s && e.add(s)
        }
        ;
        class xa {
            constructor(e) {
                this._config = function(e) {
                    return (e = e || {}).data = ma(e.data),
                    da(e),
                    e
                }(e),
                this._scopeCache = new Map,
                this._resolverCache = new Map
            }
            get platform() {
                return this._config.platform
            }
            get type() {
                return this._config.type
            }
            set type(e) {
                this._config.type = e
            }
            get data() {
                return this._config.data
            }
            set data(e) {
                this._config.data = ma(e)
            }
            get options() {
                return this._config.options
            }
            set options(e) {
                this._config.options = e
            }
            get plugins() {
                return this._config.plugins
            }
            update() {
                const e = this._config;
                this.clearCache(),
                da(e)
            }
            clearCache() {
                this._scopeCache.clear(),
                this._resolverCache.clear()
            }
            datasetScopeKeys(e) {
                return pa(e, (()=>[[`datasets.${e}`, ""]]))
            }
            datasetAnimationScopeKeys(e, t) {
                return pa(`${e}.transition.${t}`, (()=>[[`datasets.${e}.transitions.${t}`, `transitions.${t}`], [`datasets.${e}`, ""]]))
            }
            datasetElementScopeKeys(e, t) {
                return pa(`${e}-${t}`, (()=>[[`datasets.${e}.elements.${t}`, `datasets.${e}`, `elements.${t}`, ""]]))
            }
            pluginScopeKeys(e) {
                const t = e.id;
                return pa(`${this.type}-plugin-${t}`, (()=>[[`plugins.${t}`, ...e.additionalOptionScopes || []]]))
            }
            _cachedScopes(e, t) {
                const n = this._scopeCache;
                let s = n.get(e);
                return s && !t || (s = new Map,
                n.set(e, s)),
                s
            }
            getOptionScopes(e, t, n) {
                const {options: s, type: i} = this
                  , a = this._cachedScopes(e, n)
                  , o = a.get(t);
                if (o)
                    return o;
                const r = new Set;
                t.forEach((t=>{
                    e && (r.add(e),
                    t.forEach((t=>fa(r, e, t)))),
                    t.forEach((e=>fa(r, s, e))),
                    t.forEach((e=>fa(r, Jt[i] || {}, e))),
                    t.forEach((e=>fa(r, an, e))),
                    t.forEach((e=>fa(r, en, e)))
                }
                ));
                const l = Array.from(r);
                return 0 === l.length && l.push(Object.create(null)),
                ga.has(t) && a.set(t, l),
                l
            }
            chartOptionScopes() {
                const {options: e, type: t} = this;
                return [e, Jt[t] || {}, an.datasets[t] || {}, {
                    type: t
                }, an, en]
            }
            resolveNamedOptions(e, t, n, s=[""]) {
                const i = {
                    $shared: !0
                }
                  , {resolver: a, subPrefixes: o} = va(this._resolverCache, e, s);
                let r = a;
                if (function(e, t) {
                    const {isScriptable: n, isIndexable: s} = Mn(e);
                    for (const i of t) {
                        const t = n(i)
                          , a = s(i)
                          , o = (a || t) && e[i];
                        if (t && (Te(o) || _a(o)) || a && ne(o))
                            return !0
                    }
                    return !1
                }(a, t)) {
                    i.$shared = !1;
                    r = An(a, n = Te(n) ? n() : n, this.createResolver(e, n, o))
                }
                for (const e of t)
                    i[e] = r[e];
                return i
            }
            createResolver(e, t, n=[""], s) {
                const {resolver: i} = va(this._resolverCache, e, n);
                return se(t) ? An(i, t, void 0, s) : i
            }
        }
        function va(e, t, n) {
            let s = e.get(t);
            s || (s = new Map,
            e.set(t, s));
            const i = n.join();
            let a = s.get(i);
            if (!a) {
                a = {
                    resolver: Ln(t, n),
                    subPrefixes: n.filter((e=>!e.toLowerCase().includes("hover")))
                },
                s.set(i, a)
            }
            return a
        }
        const _a = e=>se(e) && Object.getOwnPropertyNames(e).reduce(((t,n)=>t || Te(e[n])), !1);
        const ba = ["top", "bottom", "left", "right", "chartArea"];
        function Ta(e, t) {
            return "top" === e || "bottom" === e || -1 === ba.indexOf(e) && "x" === t
        }
        function Ea(e, t) {
            return function(n, s) {
                return n[e] === s[e] ? n[t] - s[t] : n[e] - s[e]
            }
        }
        function Ia(e) {
            const t = e.chart
              , n = t.options.animation;
            t.notifyPlugins("afterRender"),
            le(n && n.onComplete, [e], t)
        }
        function Sa(e) {
            const t = e.chart
              , n = t.options.animation;
            le(n && n.onProgress, [e], t)
        }
        function ya(e) {
            return Jn() && "string" == typeof e ? e = document.getElementById(e) : e && e.length && (e = e[0]),
            e && e.canvas && (e = e.canvas),
            e
        }
        const ja = {}
          , Ca = e=>{
            const t = ya(e);
            return Object.values(ja).filter((e=>e.canvas === t)).pop()
        }
        ;
        function Na(e, t, n) {
            const s = Object.keys(e);
            for (const i of s) {
                const s = +i;
                if (s >= t) {
                    const a = e[i];
                    delete e[i],
                    (n > 0 || s > t) && (e[s + n] = a)
                }
            }
        }
        class wa {
            static defaults = an;
            static instances = ja;
            static overrides = Jt;
            static registry = aa;
            static version = "4.0.1";
            static getChart = Ca;
            static register(...e) {
                aa.add(...e),
                Oa()
            }
            static unregister(...e) {
                aa.remove(...e),
                Oa()
            }
            constructor(e, t) {
                const n = this.config = new xa(t)
                  , s = ya(e)
                  , i = Ca(s);
                if (i)
                    throw new Error("Canvas is already in use. Chart with ID '" + i.id + "' must be destroyed before the canvas with ID '" + i.canvas.id + "' can be reused.");
                const a = n.createResolver(n.chartOptionScopes(), this.getContext());
                this.platform = new (n.platform || zi(s)),
                this.platform.updateConfig(n);
                const o = this.platform.acquireContext(s, a.aspectRatio)
                  , r = o && o.canvas
                  , l = r && r.height
                  , c = r && r.width;
                this.id = ee(),
                this.ctx = o,
                this.canvas = r,
                this.width = c,
                this.height = l,
                this._options = a,
                this._aspectRatio = this.aspectRatio,
                this._layers = [],
                this._metasets = [],
                this._stacks = void 0,
                this.boxes = [],
                this.currentDevicePixelRatio = void 0,
                this.chartArea = void 0,
                this._active = [],
                this._lastEvent = void 0,
                this._listeners = {},
                this._responsiveListeners = void 0,
                this._sortedMetasets = [],
                this.scales = {},
                this._plugins = new oa,
                this.$proxies = {},
                this._hiddenIndices = {},
                this.attached = !1,
                this._animationsDisabled = void 0,
                this.$context = void 0,
                this._doResize = function(e, t) {
                    let n;
                    return function(...s) {
                        return t ? (clearTimeout(n),
                        n = setTimeout(e, t, s)) : e.apply(this, s),
                        t
                    }
                }((e=>this.update(e)), a.resizeDelay || 0),
                this._dataChanges = [],
                ja[this.id] = this,
                o && r ? (js.listen(this, "complete", Ia),
                js.listen(this, "progress", Sa),
                this._initialize(),
                this.attached && this.update()) : console.error("Failed to create chart: can't acquire context from the given item")
            }
            get aspectRatio() {
                const {options: {aspectRatio: e, maintainAspectRatio: t}, width: n, height: s, _aspectRatio: i} = this;
                return te(e) ? t && i ? i : s ? n / s : null : e
            }
            get data() {
                return this.config.data
            }
            set data(e) {
                this.config.data = e
            }
            get options() {
                return this._options
            }
            set options(e) {
                this.config.options = e
            }
            get registry() {
                return aa
            }
            _initialize() {
                return this.notifyPlugins("beforeInit"),
                this.options.responsive ? this.resize() : cs(this, this.options.devicePixelRatio),
                this.bindEvents(),
                this.notifyPlugins("afterInit"),
                this
            }
            clear() {
                return cn(this.canvas, this.ctx),
                this
            }
            stop() {
                return js.stop(this),
                this
            }
            resize(e, t) {
                js.running(this) ? this._resizeBeforeDraw = {
                    width: e,
                    height: t
                } : this._resize(e, t)
            }
            _resize(e, t) {
                const n = this.options
                  , s = this.canvas
                  , i = n.maintainAspectRatio && this.aspectRatio
                  , a = this.platform.getMaximumSize(s, e, t, i)
                  , o = n.devicePixelRatio || this.platform.getDevicePixelRatio()
                  , r = this.width ? "resize" : "attach";
                this.width = a.width,
                this.height = a.height,
                this._aspectRatio = this.aspectRatio,
                cs(this, o, !0) && (this.notifyPlugins("resize", {
                    size: a
                }),
                le(n.onResize, [this, a], this),
                this.attached && this._doResize(r) && this.render())
            }
            ensureScalesHaveIDs() {
                ce(this.options.scales || {}, ((e,t)=>{
                    e.id = t
                }
                ))
            }
            buildOrUpdateScales() {
                const e = this.options
                  , t = e.scales
                  , n = this.scales
                  , s = Object.keys(n).reduce(((e,t)=>(e[t] = !1,
                e)), {});
                let i = [];
                t && (i = i.concat(Object.keys(t).map((e=>{
                    const n = t[e]
                      , s = ua(e, n)
                      , i = "r" === s
                      , a = "x" === s;
                    return {
                        options: n,
                        dposition: i ? "chartArea" : a ? "bottom" : "left",
                        dtype: i ? "radialLinear" : a ? "category" : "linear"
                    }
                }
                )))),
                ce(i, (t=>{
                    const i = t.options
                      , a = i.id
                      , o = ua(a, i)
                      , r = oe(i.type, t.dtype);
                    void 0 !== i.position && Ta(i.position, o) === Ta(t.dposition) || (i.position = t.dposition),
                    s[a] = !0;
                    let l = null;
                    if (a in n && n[a].type === r)
                        l = n[a];
                    else {
                        l = new (aa.getScale(r))({
                            id: a,
                            type: r,
                            ctx: this.ctx,
                            chart: this
                        }),
                        n[l.id] = l
                    }
                    l.init(i, e)
                }
                )),
                ce(s, ((e,t)=>{
                    e || delete n[t]
                }
                )),
                ce(n, (e=>{
                    Ni.configure(this, e, e.options),
                    Ni.addBox(this, e)
                }
                ))
            }
            _updateMetasets() {
                const e = this._metasets
                  , t = this.data.datasets.length
                  , n = e.length;
                if (e.sort(((e,t)=>e.index - t.index)),
                n > t) {
                    for (let e = t; e < n; ++e)
                        this._destroyDatasetMeta(e);
                    e.splice(t, n - t)
                }
                this._sortedMetasets = e.slice(0).sort(Ea("order", "index"))
            }
            _removeUnreferencedMetasets() {
                const {_metasets: e, data: {datasets: t}} = this;
                e.length > t.length && delete this._stacks,
                e.forEach(((e,n)=>{
                    0 === t.filter((t=>t === e._dataset)).length && this._destroyDatasetMeta(n)
                }
                ))
            }
            buildOrUpdateControllers() {
                const e = []
                  , t = this.data.datasets;
                let n, s;
                for (this._removeUnreferencedMetasets(),
                n = 0,
                s = t.length; n < s; n++) {
                    const s = t[n];
                    let i = this.getDatasetMeta(n);
                    const a = s.type || this.config.type;
                    if (i.type && i.type !== a && (this._destroyDatasetMeta(n),
                    i = this.getDatasetMeta(n)),
                    i.type = a,
                    i.indexAxis = s.indexAxis || ca(a, this.options),
                    i.order = s.order || 0,
                    i.index = n,
                    i.label = "" + s.label,
                    i.visible = this.isDatasetVisible(n),
                    i.controller)
                        i.controller.updateIndex(n),
                        i.controller.linkScales();
                    else {
                        const t = aa.getController(a)
                          , {datasetElementType: s, dataElementType: o} = an.datasets[a];
                        Object.assign(t, {
                            dataElementType: aa.getElement(o),
                            datasetElementType: s && aa.getElement(s)
                        }),
                        i.controller = new t(this,n),
                        e.push(i.controller)
                    }
                }
                return this._updateMetasets(),
                e
            }
            _resetElements() {
                ce(this.data.datasets, ((e,t)=>{
                    this.getDatasetMeta(t).controller.reset()
                }
                ), this)
            }
            reset() {
                this._resetElements(),
                this.notifyPlugins("reset")
            }
            update(e) {
                const t = this.config;
                t.update();
                const n = this._options = t.createResolver(t.chartOptionScopes(), this.getContext())
                  , s = this._animationsDisabled = !n.animation;
                if (this._updateScales(),
                this._checkEventBindings(),
                this._updateHiddenIndices(),
                this._plugins.invalidate(),
                !1 === this.notifyPlugins("beforeUpdate", {
                    mode: e,
                    cancelable: !0
                }))
                    return;
                const i = this.buildOrUpdateControllers();
                this.notifyPlugins("beforeElementsUpdate");
                let a = 0;
                for (let e = 0, t = this.data.datasets.length; e < t; e++) {
                    const {controller: t} = this.getDatasetMeta(e)
                      , n = !s && -1 === i.indexOf(t);
                    t.buildOrUpdateElements(n),
                    a = Math.max(+t.getMaxOverflow(), a)
                }
                a = this._minPadding = n.layout.autoPadding ? a : 0,
                this._updateLayout(a),
                s || ce(i, (e=>{
                    e.reset()
                }
                )),
                this._updateDatasets(e),
                this.notifyPlugins("afterUpdate", {
                    mode: e
                }),
                this._layers.sort(Ea("z", "_idx"));
                const {_active: o, _lastEvent: r} = this;
                r ? this._eventHandler(r, !0) : o.length && this._updateHoverStyles(o, o, !0),
                this.render()
            }
            _updateScales() {
                ce(this.scales, (e=>{
                    Ni.removeBox(this, e)
                }
                )),
                this.ensureScalesHaveIDs(),
                this.buildOrUpdateScales()
            }
            _checkEventBindings() {
                const e = this.options
                  , t = new Set(Object.keys(this._listeners))
                  , n = new Set(e.events);
                Ee(t, n) && !!this._responsiveListeners === e.responsive || (this.unbindEvents(),
                this.bindEvents())
            }
            _updateHiddenIndices() {
                const {_hiddenIndices: e} = this
                  , t = this._getUniformDataChanges() || [];
                for (const {method: n, start: s, count: i} of t) {
                    Na(e, s, "_removeElements" === n ? -i : i)
                }
            }
            _getUniformDataChanges() {
                const e = this._dataChanges;
                if (!e || !e.length)
                    return;
                this._dataChanges = [];
                const t = this.data.datasets.length
                  , n = t=>new Set(e.filter((e=>e[0] === t)).map(((e,t)=>t + "," + e.splice(1).join(","))))
                  , s = n(0);
                for (let e = 1; e < t; e++)
                    if (!Ee(s, n(e)))
                        return;
                return Array.from(s).map((e=>e.split(","))).map((e=>({
                    method: e[1],
                    start: +e[2],
                    count: +e[3]
                })))
            }
            _updateLayout(e) {
                if (!1 === this.notifyPlugins("beforeLayout", {
                    cancelable: !0
                }))
                    return;
                Ni.update(this, this.width, this.height, e);
                const t = this.chartArea
                  , n = t.width <= 0 || t.height <= 0;
                this._layers = [],
                ce(this.boxes, (e=>{
                    n && "chartArea" === e.position || (e.configure && e.configure(),
                    this._layers.push(...e._layers()))
                }
                ), this),
                this._layers.forEach(((e,t)=>{
                    e._idx = t
                }
                )),
                this.notifyPlugins("afterLayout")
            }
            _updateDatasets(e) {
                if (!1 !== this.notifyPlugins("beforeDatasetsUpdate", {
                    mode: e,
                    cancelable: !0
                })) {
                    for (let e = 0, t = this.data.datasets.length; e < t; ++e)
                        this.getDatasetMeta(e).controller.configure();
                    for (let t = 0, n = this.data.datasets.length; t < n; ++t)
                        this._updateDataset(t, Te(e) ? e({
                            datasetIndex: t
                        }) : e);
                    this.notifyPlugins("afterDatasetsUpdate", {
                        mode: e
                    })
                }
            }
            _updateDataset(e, t) {
                const n = this.getDatasetMeta(e)
                  , s = {
                    meta: n,
                    index: e,
                    mode: t,
                    cancelable: !0
                };
                !1 !== this.notifyPlugins("beforeDatasetUpdate", s) && (n.controller._update(t),
                s.cancelable = !1,
                this.notifyPlugins("afterDatasetUpdate", s))
            }
            render() {
                !1 !== this.notifyPlugins("beforeRender", {
                    cancelable: !0
                }) && (js.has(this) ? this.attached && !js.running(this) && js.start(this) : (this.draw(),
                Ia({
                    chart: this
                })))
            }
            draw() {
                let e;
                if (this._resizeBeforeDraw) {
                    const {width: e, height: t} = this._resizeBeforeDraw;
                    this._resize(e, t),
                    this._resizeBeforeDraw = null
                }
                if (this.clear(),
                this.width <= 0 || this.height <= 0)
                    return;
                if (!1 === this.notifyPlugins("beforeDraw", {
                    cancelable: !0
                }))
                    return;
                const t = this._layers;
                for (e = 0; e < t.length && t[e].z <= 0; ++e)
                    t[e].draw(this.chartArea);
                for (this._drawDatasets(); e < t.length; ++e)
                    t[e].draw(this.chartArea);
                this.notifyPlugins("afterDraw")
            }
            _getSortedDatasetMetas(e) {
                const t = this._sortedMetasets
                  , n = [];
                let s, i;
                for (s = 0,
                i = t.length; s < i; ++s) {
                    const i = t[s];
                    e && !i.visible || n.push(i)
                }
                return n
            }
            getSortedVisibleDatasetMetas() {
                return this._getSortedDatasetMetas(!0)
            }
            _drawDatasets() {
                if (!1 === this.notifyPlugins("beforeDatasetsDraw", {
                    cancelable: !0
                }))
                    return;
                const e = this.getSortedVisibleDatasetMetas();
                for (let t = e.length - 1; t >= 0; --t)
                    this._drawDataset(e[t]);
                this.notifyPlugins("afterDatasetsDraw")
            }
            _drawDataset(e) {
                const t = this.ctx
                  , n = e._clip
                  , s = !n.disabled
                  , i = function(e) {
                    const {xScale: t, yScale: n} = e;
                    if (t && n)
                        return {
                            left: t.left,
                            right: t.right,
                            top: n.top,
                            bottom: n.bottom
                        }
                }(e) || this.chartArea
                  , a = {
                    meta: e,
                    index: e.index,
                    cancelable: !0
                };
                !1 !== this.notifyPlugins("beforeDatasetDraw", a) && (s && hn(t, {
                    left: !1 === n.left ? 0 : i.left - n.left,
                    right: !1 === n.right ? this.width : i.right + n.right,
                    top: !1 === n.top ? 0 : i.top - n.top,
                    bottom: !1 === n.bottom ? this.height : i.bottom + n.bottom
                }),
                e.controller.draw(),
                s && gn(t),
                a.cancelable = !1,
                this.notifyPlugins("afterDatasetDraw", a))
            }
            isPointInArea(e) {
                return mn(e, this.chartArea, this._minPadding)
            }
            getElementsAtEventForMode(e, t, n, s) {
                const i = pi.modes[t];
                return "function" == typeof i ? i(this, e, n, s) : []
            }
            getDatasetMeta(e) {
                const t = this.data.datasets[e]
                  , n = this._metasets;
                let s = n.filter((e=>e && e._dataset === t)).pop();
                return s || (s = {
                    type: null,
                    data: [],
                    dataset: null,
                    controller: null,
                    hidden: null,
                    xAxisID: null,
                    yAxisID: null,
                    order: t && t.order || 0,
                    index: e,
                    _dataset: t,
                    _parsed: [],
                    _sorted: !1
                },
                n.push(s)),
                s
            }
            getContext() {
                return this.$context || (this.$context = Pn(null, {
                    chart: this,
                    type: "chart"
                }))
            }
            getVisibleDatasetCount() {
                return this.getSortedVisibleDatasetMetas().length
            }
            isDatasetVisible(e) {
                const t = this.data.datasets[e];
                if (!t)
                    return !1;
                const n = this.getDatasetMeta(e);
                return "boolean" == typeof n.hidden ? !n.hidden : !t.hidden
            }
            setDatasetVisibility(e, t) {
                this.getDatasetMeta(e).hidden = !t
            }
            toggleDataVisibility(e) {
                this._hiddenIndices[e] = !this._hiddenIndices[e]
            }
            getDataVisibility(e) {
                return !this._hiddenIndices[e]
            }
            _updateVisibility(e, t, n) {
                const s = n ? "show" : "hide"
                  , i = this.getDatasetMeta(e)
                  , a = i.controller._resolveAnimations(void 0, s);
                be(t) ? (i.data[t].hidden = !n,
                this.update()) : (this.setDatasetVisibility(e, n),
                a.update(i, {
                    visible: n
                }),
                this.update((t=>t.datasetIndex === e ? s : void 0)))
            }
            hide(e, t) {
                this._updateVisibility(e, t, !1)
            }
            show(e, t) {
                this._updateVisibility(e, t, !0)
            }
            _destroyDatasetMeta(e) {
                const t = this._metasets[e];
                t && t.controller && t.controller._destroy(),
                delete this._metasets[e]
            }
            _stop() {
                let e, t;
                for (this.stop(),
                js.remove(this),
                e = 0,
                t = this.data.datasets.length; e < t; ++e)
                    this._destroyDatasetMeta(e)
            }
            destroy() {
                this.notifyPlugins("beforeDestroy");
                const {canvas: e, ctx: t} = this;
                this._stop(),
                this.config.clearCache(),
                e && (this.unbindEvents(),
                cn(e, t),
                this.platform.releaseContext(t),
                this.canvas = null,
                this.ctx = null),
                delete ja[this.id],
                this.notifyPlugins("afterDestroy")
            }
            toBase64Image(...e) {
                return this.canvas.toDataURL(...e)
            }
            bindEvents() {
                this.bindUserEvents(),
                this.options.responsive ? this.bindResponsiveEvents() : this.attached = !0
            }
            bindUserEvents() {
                const e = this._listeners
                  , t = this.platform
                  , n = (n,s)=>{
                    t.addEventListener(this, n, s),
                    e[n] = s
                }
                  , s = (e,t,n)=>{
                    e.offsetX = t,
                    e.offsetY = n,
                    this._eventHandler(e)
                }
                ;
                ce(this.options.events, (e=>n(e, s)))
            }
            bindResponsiveEvents() {
                this._responsiveListeners || (this._responsiveListeners = {});
                const e = this._responsiveListeners
                  , t = this.platform
                  , n = (n,s)=>{
                    t.addEventListener(this, n, s),
                    e[n] = s
                }
                  , s = (n,s)=>{
                    e[n] && (t.removeEventListener(this, n, s),
                    delete e[n])
                }
                  , i = (e,t)=>{
                    this.canvas && this.resize(e, t)
                }
                ;
                let a;
                const o = ()=>{
                    s("attach", o),
                    this.attached = !0,
                    this.resize(),
                    n("resize", i),
                    n("detach", a)
                }
                ;
                a = ()=>{
                    this.attached = !1,
                    s("resize", i),
                    this._stop(),
                    this._resize(0, 0),
                    n("attach", o)
                }
                ,
                t.isAttached(this.canvas) ? o() : a()
            }
            unbindEvents() {
                ce(this._listeners, ((e,t)=>{
                    this.platform.removeEventListener(this, t, e)
                }
                )),
                this._listeners = {},
                ce(this._responsiveListeners, ((e,t)=>{
                    this.platform.removeEventListener(this, t, e)
                }
                )),
                this._responsiveListeners = void 0
            }
            updateHoverStyle(e, t, n) {
                const s = n ? "set" : "remove";
                let i, a, o, r;
                for ("dataset" === t && (i = this.getDatasetMeta(e[0].datasetIndex),
                i.controller["_" + s + "DatasetHoverStyle"]()),
                o = 0,
                r = e.length; o < r; ++o) {
                    a = e[o];
                    const t = a && this.getDatasetMeta(a.datasetIndex).controller;
                    t && t[s + "HoverStyle"](a.element, a.datasetIndex, a.index)
                }
            }
            getActiveElements() {
                return this._active || []
            }
            setActiveElements(e) {
                const t = this._active || []
                  , n = e.map((({datasetIndex: e, index: t})=>{
                    const n = this.getDatasetMeta(e);
                    if (!n)
                        throw new Error("No dataset found at index " + e);
                    return {
                        datasetIndex: e,
                        element: n.data[t],
                        index: t
                    }
                }
                ));
                !ue(n, t) && (this._active = n,
                this._lastEvent = null,
                this._updateHoverStyles(n, t))
            }
            notifyPlugins(e, t, n) {
                return this._plugins.notify(this, e, t, n)
            }
            isPluginEnabled(e) {
                return 1 === this._plugins._cache.filter((t=>t.plugin.id === e)).length
            }
            _updateHoverStyles(e, t, n) {
                const s = this.options.hover
                  , i = (e,t)=>e.filter((e=>!t.some((t=>e.datasetIndex === t.datasetIndex && e.index === t.index))))
                  , a = i(t, e)
                  , o = n ? e : i(e, t);
                a.length && this.updateHoverStyle(a, s.mode, !1),
                o.length && s.mode && this.updateHoverStyle(o, s.mode, !0)
            }
            _eventHandler(e, t) {
                const n = {
                    event: e,
                    replay: t,
                    cancelable: !0,
                    inChartArea: this.isPointInArea(e)
                }
                  , s = t=>(t.options.events || this.options.events).includes(e.native.type);
                if (!1 === this.notifyPlugins("beforeEvent", n, s))
                    return;
                const i = this._handleEvent(e, t, n.inChartArea);
                return n.cancelable = !1,
                this.notifyPlugins("afterEvent", n, s),
                (i || n.changed) && this.render(),
                this
            }
            _handleEvent(e, t, n) {
                const {_active: s=[], options: i} = this
                  , a = t
                  , o = this._getActiveElements(e, s, n, a)
                  , r = function(e) {
                    return "mouseup" === e.type || "click" === e.type || "contextmenu" === e.type
                }(e)
                  , l = function(e, t, n, s) {
                    return n && "mouseout" !== e.type ? s ? t : e : null
                }(e, this._lastEvent, n, r);
                n && (this._lastEvent = null,
                le(i.onHover, [e, o, this], this),
                r && le(i.onClick, [e, o, this], this));
                const c = !ue(o, s);
                return (c || t) && (this._active = o,
                this._updateHoverStyles(o, s, t)),
                this._lastEvent = l,
                c
            }
            _getActiveElements(e, t, n, s) {
                if ("mouseout" === e.type)
                    return [];
                if (!n)
                    return t;
                const i = this.options.hover;
                return this.getElementsAtEventForMode(e, i.mode, i, s)
            }
        }
        function Oa() {
            return ce(wa.instances, (e=>e._plugins.invalidate()))
        }
        var Pa = wa;
        function La(e, t, n, s) {
            const i = function(e) {
                return yn(e, ["outerStart", "outerEnd", "innerStart", "innerEnd"])
            }(e.options.borderRadius)
              , a = (n - t) / 2
              , o = Math.min(a, s * t / 2)
              , r = e=>{
                const t = (n - Math.min(a, e)) * s / 2;
                return We(e, 0, Math.min(a, t))
            }
            ;
            return {
                outerStart: r(i.outerStart),
                outerEnd: r(i.outerEnd),
                innerStart: We(i.innerStart, 0, o),
                innerEnd: We(i.innerEnd, 0, o)
            }
        }
        function Aa(e, t, n, s) {
            return {
                x: n + e * Math.cos(t),
                y: s + e * Math.sin(t)
            }
        }
        function Ma(e, t, n, s, i, a) {
            const {x: o, y: r, startAngle: l, pixelMargin: c, innerRadius: u} = t
              , d = Math.max(t.outerRadius + s + n - c, 0)
              , m = u > 0 ? u + s + n + c : 0;
            let h = 0;
            const g = i - l;
            if (s) {
                const e = ((u > 0 ? u - s : 0) + (d > 0 ? d - s : 0)) / 2;
                h = (g - (0 !== e ? g * e / (e + s) : g)) / 2
            }
            const p = (g - Math.max(.001, g * d - n / Ie) / d) / 2
              , f = l + p + h
              , x = i - p - h
              , {outerStart: v, outerEnd: _, innerStart: b, innerEnd: T} = La(t, m, d, x - f)
              , E = d - v
              , I = d - _
              , S = f + v / E
              , y = x - _ / I
              , j = m + b
              , C = m + T
              , N = f + b / j
              , w = x - T / C;
            if (e.beginPath(),
            a) {
                const t = (S + y) / 2;
                if (e.arc(o, r, d, S, t),
                e.arc(o, r, d, t, y),
                _ > 0) {
                    const t = Aa(I, y, o, r);
                    e.arc(t.x, t.y, _, y, x + Ne)
                }
                const n = Aa(C, x, o, r);
                if (e.lineTo(n.x, n.y),
                T > 0) {
                    const t = Aa(C, w, o, r);
                    e.arc(t.x, t.y, T, x + Ne, w + Math.PI)
                }
                const s = (x - T / m + (f + b / m)) / 2;
                if (e.arc(o, r, m, x - T / m, s, !0),
                e.arc(o, r, m, s, f + b / m, !0),
                b > 0) {
                    const t = Aa(j, N, o, r);
                    e.arc(t.x, t.y, b, N + Math.PI, f - Ne)
                }
                const i = Aa(E, f, o, r);
                if (e.lineTo(i.x, i.y),
                v > 0) {
                    const t = Aa(E, S, o, r);
                    e.arc(t.x, t.y, v, f - Ne, S)
                }
            } else {
                e.moveTo(o, r);
                const t = Math.cos(S) * d + o
                  , n = Math.sin(S) * d + r;
                e.lineTo(t, n);
                const s = Math.cos(y) * d + o
                  , i = Math.sin(y) * d + r;
                e.lineTo(s, i)
            }
            e.closePath()
        }
        function Ra(e, t, n, s, i) {
            const {fullCircles: a, startAngle: o, circumference: r, options: l} = t
              , {borderWidth: c, borderJoinStyle: u} = l
              , d = "inner" === l.borderAlign;
            if (!c)
                return;
            d ? (e.lineWidth = 2 * c,
            e.lineJoin = u || "round") : (e.lineWidth = c,
            e.lineJoin = u || "bevel");
            let m = t.endAngle;
            if (a) {
                Ma(e, t, n, s, m, i);
                for (let t = 0; t < a; ++t)
                    e.stroke();
                isNaN(r) || (m = o + (r % Se || Se))
            }
            d && function(e, t, n) {
                const {startAngle: s, pixelMargin: i, x: a, y: o, outerRadius: r, innerRadius: l} = t;
                let c = i / r;
                e.beginPath(),
                e.arc(a, o, r, s - c, n + c),
                l > i ? (c = i / l,
                e.arc(a, o, l, n + c, s - c, !0)) : e.arc(a, o, i, n + Ne, s - Ne),
                e.closePath(),
                e.clip()
            }(e, t, m),
            a || (Ma(e, t, n, s, m, i),
            e.stroke())
        }
        class ka extends Yi {
            static id = "arc";
            static defaults = {
                borderAlign: "center",
                borderColor: "#fff",
                borderJoinStyle: void 0,
                borderRadius: 0,
                borderWidth: 2,
                offset: 0,
                spacing: 0,
                angle: void 0,
                circular: !0
            };
            static defaultRoutes = {
                backgroundColor: "backgroundColor"
            };
            constructor(e) {
                super(),
                this.options = void 0,
                this.circumference = void 0,
                this.startAngle = void 0,
                this.endAngle = void 0,
                this.innerRadius = void 0,
                this.outerRadius = void 0,
                this.pixelMargin = 0,
                this.fullCircles = 0,
                e && Object.assign(this, e)
            }
            inRange(e, t, n) {
                const s = this.getProps(["x", "y"], n)
                  , {angle: i, distance: a} = Be(s, {
                    x: e,
                    y: t
                })
                  , {startAngle: o, endAngle: r, innerRadius: l, outerRadius: c, circumference: u} = this.getProps(["startAngle", "endAngle", "innerRadius", "outerRadius", "circumference"], n)
                  , d = this.options.spacing / 2
                  , m = oe(u, r - o) >= Se || Ke(i, o, r)
                  , h = ze(a, l + d, c + d);
                return m && h
            }
            getCenterPoint(e) {
                const {x: t, y: n, startAngle: s, endAngle: i, innerRadius: a, outerRadius: o} = this.getProps(["x", "y", "startAngle", "endAngle", "innerRadius", "outerRadius", "circumference"], e)
                  , {offset: r, spacing: l} = this.options
                  , c = (s + i) / 2
                  , u = (a + o + l + r) / 2;
                return {
                    x: t + Math.cos(c) * u,
                    y: n + Math.sin(c) * u
                }
            }
            tooltipPosition(e) {
                return this.getCenterPoint(e)
            }
            draw(e) {
                const {options: t, circumference: n} = this
                  , s = (t.offset || 0) / 4
                  , i = (t.spacing || 0) / 2
                  , a = t.circular;
                if (this.pixelMargin = "inner" === t.borderAlign ? .33 : 0,
                this.fullCircles = n > Se ? Math.floor(n / Se) : 0,
                0 === n || this.innerRadius < 0 || this.outerRadius < 0)
                    return;
                e.save();
                const o = (this.startAngle + this.endAngle) / 2;
                e.translate(Math.cos(o) * s, Math.sin(o) * s);
                const r = s * (1 - Math.sin(Math.min(Ie, n || 0)));
                e.fillStyle = t.backgroundColor,
                e.strokeStyle = t.borderColor,
                function(e, t, n, s, i) {
                    const {fullCircles: a, startAngle: o, circumference: r} = t;
                    let l = t.endAngle;
                    if (a) {
                        Ma(e, t, n, s, l, i);
                        for (let t = 0; t < a; ++t)
                            e.fill();
                        isNaN(r) || (l = o + (r % Se || Se))
                    }
                    Ma(e, t, n, s, l, i),
                    e.fill()
                }(e, this, r, i, a),
                Ra(e, this, r, i, a),
                e.restore()
            }
        }
        function Da(e, t, n=t) {
            e.lineCap = oe(n.borderCapStyle, t.borderCapStyle),
            e.setLineDash(oe(n.borderDash, t.borderDash)),
            e.lineDashOffset = oe(n.borderDashOffset, t.borderDashOffset),
            e.lineJoin = oe(n.borderJoinStyle, t.borderJoinStyle),
            e.lineWidth = oe(n.borderWidth, t.borderWidth),
            e.strokeStyle = oe(n.borderColor, t.borderColor)
        }
        function Fa(e, t, n) {
            e.lineTo(n.x, n.y)
        }
        function Ua(e, t, n={}) {
            const s = e.length
              , {start: i=0, end: a=s - 1} = n
              , {start: o, end: r} = t
              , l = Math.max(i, o)
              , c = Math.min(a, r)
              , u = i < o && a < o || i > r && a > r;
            return {
                count: s,
                start: l,
                loop: t.loop,
                ilen: c < l && !u ? s + c - l : c - l
            }
        }
        function Ba(e, t, n, s) {
            const {points: i, options: a} = t
              , {count: o, start: r, loop: l, ilen: c} = Ua(i, n, s)
              , u = function(e) {
                return e.stepped ? pn : e.tension || "monotone" === e.cubicInterpolationMode ? fn : Fa
            }(a);
            let d, m, h, {move: g=!0, reverse: p} = s || {};
            for (d = 0; d <= c; ++d)
                m = i[(r + (p ? c - d : d)) % o],
                m.skip || (g ? (e.moveTo(m.x, m.y),
                g = !1) : u(e, h, m, p, a.stepped),
                h = m);
            return l && (m = i[(r + (p ? c : 0)) % o],
            u(e, h, m, p, a.stepped)),
            !!l
        }
        function Ga(e, t, n, s) {
            const i = t.points
              , {count: a, start: o, ilen: r} = Ua(i, n, s)
              , {move: l=!0, reverse: c} = s || {};
            let u, d, m, h, g, p, f = 0, x = 0;
            const v = e=>(o + (c ? r - e : e)) % a
              , _ = ()=>{
                h !== g && (e.lineTo(f, g),
                e.lineTo(f, h),
                e.lineTo(f, p))
            }
            ;
            for (l && (d = i[v(0)],
            e.moveTo(d.x, d.y)),
            u = 0; u <= r; ++u) {
                if (d = i[v(u)],
                d.skip)
                    continue;
                const t = d.x
                  , n = d.y
                  , s = 0 | t;
                s === m ? (n < h ? h = n : n > g && (g = n),
                f = (x * f + t) / ++x) : (_(),
                e.lineTo(t, n),
                m = s,
                x = 0,
                h = g = n),
                p = n
            }
            _()
        }
        function Va(e) {
            const t = e.options
              , n = t.borderDash && t.borderDash.length;
            return !(e._decimated || e._loop || t.tension || "monotone" === t.cubicInterpolationMode || t.stepped || n) ? Ga : Ba
        }
        const Ha = "function" == typeof Path2D;
        function Ka(e, t, n, s) {
            Ha && !t.options.segment ? function(e, t, n, s) {
                let i = t._path;
                i || (i = t._path = new Path2D,
                t.path(i, n, s) && i.closePath()),
                Da(e, t.options),
                e.stroke(i)
            }(e, t, n, s) : function(e, t, n, s) {
                const {segments: i, options: a} = t
                  , o = Va(t);
                for (const r of i)
                    Da(e, a, r.style),
                    e.beginPath(),
                    o(e, t, r, {
                        start: n,
                        end: n + s - 1
                    }) && e.closePath(),
                    e.stroke()
            }(e, t, n, s)
        }
        class Wa extends Yi {
            static id = "line";
            static defaults = {
                borderCapStyle: "butt",
                borderDash: [],
                borderDashOffset: 0,
                borderJoinStyle: "miter",
                borderWidth: 3,
                capBezierPoints: !0,
                cubicInterpolationMode: "default",
                fill: !1,
                spanGaps: !1,
                stepped: !1,
                tension: 0
            };
            static defaultRoutes = {
                backgroundColor: "backgroundColor",
                borderColor: "borderColor"
            };
            static descriptors = {
                _scriptable: !0,
                _indexable: e=>"borderDash" !== e && "fill" !== e
            };
            constructor(e) {
                super(),
                this.animated = !0,
                this.options = void 0,
                this._chart = void 0,
                this._loop = void 0,
                this._fullLoop = void 0,
                this._path = void 0,
                this._points = void 0,
                this._segments = void 0,
                this._decimated = !1,
                this._pointsUpdated = !1,
                this._datasetIndex = void 0,
                e && Object.assign(this, e)
            }
            updateControlPoints(e, t) {
                const n = this.options;
                if ((n.tension || "monotone" === n.cubicInterpolationMode) && !n.stepped && !this._pointsUpdated) {
                    const s = n.spanGaps ? this._loop : this._fullLoop;
                    Zn(this._points, n, e, s, t),
                    this._pointsUpdated = !0
                }
            }
            set points(e) {
                this._points = e,
                delete this._segments,
                delete this._path,
                this._pointsUpdated = !1
            }
            get points() {
                return this._points
            }
            get segments() {
                return this._segments || (this._segments = function(e, t) {
                    const n = e.points
                      , s = e.options.spanGaps
                      , i = n.length;
                    if (!i)
                        return [];
                    const a = !!e._loop
                      , {start: o, end: r} = function(e, t, n, s) {
                        let i = 0
                          , a = t - 1;
                        if (n && !s)
                            for (; i < t && !e[i].skip; )
                                i++;
                        for (; i < t && e[i].skip; )
                            i++;
                        for (i %= t,
                        n && (a += i); a > i && e[a % t].skip; )
                            a--;
                        return a %= t,
                        {
                            start: i,
                            end: a
                        }
                    }(n, i, a, s);
                    return Es(e, !0 === s ? [{
                        start: o,
                        end: r,
                        loop: a
                    }] : function(e, t, n, s) {
                        const i = e.length
                          , a = [];
                        let o, r = t, l = e[t];
                        for (o = t + 1; o <= n; ++o) {
                            const n = e[o % i];
                            n.skip || n.stop ? l.skip || (s = !1,
                            a.push({
                                start: t % i,
                                end: (o - 1) % i,
                                loop: s
                            }),
                            t = r = n.stop ? o : null) : (r = o,
                            l.skip && (t = o)),
                            l = n
                        }
                        return null !== r && a.push({
                            start: t % i,
                            end: r % i,
                            loop: s
                        }),
                        a
                    }(n, o, r < o ? r + i : r, !!e._fullLoop && 0 === o && r === i - 1), n, t)
                }(this, this.options.segment))
            }
            first() {
                const e = this.segments
                  , t = this.points;
                return e.length && t[e[0].start]
            }
            last() {
                const e = this.segments
                  , t = this.points
                  , n = e.length;
                return n && t[e[n - 1].end]
            }
            interpolate(e, t) {
                const n = this.options
                  , s = e[t]
                  , i = this.points
                  , a = Ts(this, {
                    property: t,
                    start: s,
                    end: s
                });
                if (!a.length)
                    return;
                const o = []
                  , r = function(e) {
                    return e.stepped ? hs : e.tension || "monotone" === e.cubicInterpolationMode ? gs : ms
                }(n);
                let l, c;
                for (l = 0,
                c = a.length; l < c; ++l) {
                    const {start: c, end: u} = a[l]
                      , d = i[c]
                      , m = i[u];
                    if (d === m) {
                        o.push(d);
                        continue
                    }
                    const h = r(d, m, Math.abs((s - d[t]) / (m[t] - d[t])), n.stepped);
                    h[t] = e[t],
                    o.push(h)
                }
                return 1 === o.length ? o[0] : o
            }
            pathSegment(e, t, n) {
                return Va(this)(e, this, t, n)
            }
            path(e, t, n) {
                const s = this.segments
                  , i = Va(this);
                let a = this._loop;
                t = t || 0,
                n = n || this.points.length - t;
                for (const o of s)
                    a &= i(e, this, o, {
                        start: t,
                        end: t + n - 1
                    });
                return !!a
            }
            draw(e, t, n, s) {
                const i = this.options || {};
                (this.points || []).length && i.borderWidth && (e.save(),
                Ka(e, this, n, s),
                e.restore()),
                this.animated && (this._pointsUpdated = !1,
                this._path = void 0)
            }
        }
        function za(e, t, n, s) {
            const i = e.options
              , {[n]: a} = e.getProps([n], s);
            return Math.abs(t - a) < i.radius + i.hitRadius
        }
        class Ya extends Yi {
            static id = "point";
            static defaults = {
                borderWidth: 1,
                hitRadius: 1,
                hoverBorderWidth: 1,
                hoverRadius: 4,
                pointStyle: "circle",
                radius: 3,
                rotation: 0
            };
            static defaultRoutes = {
                backgroundColor: "backgroundColor",
                borderColor: "borderColor"
            };
            constructor(e) {
                super(),
                this.options = void 0,
                this.parsed = void 0,
                this.skip = void 0,
                this.stop = void 0,
                e && Object.assign(this, e)
            }
            inRange(e, t, n) {
                const s = this.options
                  , {x: i, y: a} = this.getProps(["x", "y"], n);
                return Math.pow(e - i, 2) + Math.pow(t - a, 2) < Math.pow(s.hitRadius + s.radius, 2)
            }
            inXRange(e, t) {
                return za(this, e, "x", t)
            }
            inYRange(e, t) {
                return za(this, e, "y", t)
            }
            getCenterPoint(e) {
                const {x: t, y: n} = this.getProps(["x", "y"], e);
                return {
                    x: t,
                    y: n
                }
            }
            size(e) {
                let t = (e = e || this.options || {}).radius || 0;
                t = Math.max(t, t && e.hoverRadius || 0);
                return 2 * (t + (t && e.borderWidth || 0))
            }
            draw(e, t) {
                const n = this.options;
                this.skip || n.radius < .1 || !mn(this, t, this.size(n) / 2) || (e.strokeStyle = n.borderColor,
                e.lineWidth = n.borderWidth,
                e.fillStyle = n.backgroundColor,
                un(e, n, this.x, this.y))
            }
            getRange() {
                const e = this.options || {};
                return e.radius + e.hitRadius
            }
        }
        function $a(e, t) {
            const {x: n, y: s, base: i, width: a, height: o} = e.getProps(["x", "y", "base", "width", "height"], t);
            let r, l, c, u, d;
            return e.horizontal ? (d = o / 2,
            r = Math.min(n, i),
            l = Math.max(n, i),
            c = s - d,
            u = s + d) : (d = a / 2,
            r = n - d,
            l = n + d,
            c = Math.min(s, i),
            u = Math.max(s, i)),
            {
                left: r,
                top: c,
                right: l,
                bottom: u
            }
        }
        function qa(e, t, n, s) {
            return e ? 0 : We(t, n, s)
        }
        function Xa(e) {
            const t = $a(e)
              , n = t.right - t.left
              , s = t.bottom - t.top
              , i = function(e, t, n) {
                const s = e.options.borderWidth
                  , i = e.borderSkipped
                  , a = jn(s);
                return {
                    t: qa(i.top, a.top, 0, n),
                    r: qa(i.right, a.right, 0, t),
                    b: qa(i.bottom, a.bottom, 0, n),
                    l: qa(i.left, a.left, 0, t)
                }
            }(e, n / 2, s / 2)
              , a = function(e, t, n) {
                const {enableBorderRadius: s} = e.getProps(["enableBorderRadius"])
                  , i = e.options.borderRadius
                  , a = Cn(i)
                  , o = Math.min(t, n)
                  , r = e.borderSkipped
                  , l = s || se(i);
                return {
                    topLeft: qa(!l || r.top || r.left, a.topLeft, 0, o),
                    topRight: qa(!l || r.top || r.right, a.topRight, 0, o),
                    bottomLeft: qa(!l || r.bottom || r.left, a.bottomLeft, 0, o),
                    bottomRight: qa(!l || r.bottom || r.right, a.bottomRight, 0, o)
                }
            }(e, n / 2, s / 2);
            return {
                outer: {
                    x: t.left,
                    y: t.top,
                    w: n,
                    h: s,
                    radius: a
                },
                inner: {
                    x: t.left + i.l,
                    y: t.top + i.t,
                    w: n - i.l - i.r,
                    h: s - i.t - i.b,
                    radius: {
                        topLeft: Math.max(0, a.topLeft - Math.max(i.t, i.l)),
                        topRight: Math.max(0, a.topRight - Math.max(i.t, i.r)),
                        bottomLeft: Math.max(0, a.bottomLeft - Math.max(i.b, i.l)),
                        bottomRight: Math.max(0, a.bottomRight - Math.max(i.b, i.r))
                    }
                }
            }
        }
        function Qa(e, t, n, s) {
            const i = null === t
              , a = null === n
              , o = e && !(i && a) && $a(e, s);
            return o && (i || ze(t, o.left, o.right)) && (a || ze(n, o.top, o.bottom))
        }
        function Za(e, t) {
            e.rect(t.x, t.y, t.w, t.h)
        }
        function Ja(e, t, n={}) {
            const s = e.x !== n.x ? -t : 0
              , i = e.y !== n.y ? -t : 0
              , a = (e.x + e.w !== n.x + n.w ? t : 0) - s
              , o = (e.y + e.h !== n.y + n.h ? t : 0) - i;
            return {
                x: e.x + s,
                y: e.y + i,
                w: e.w + a,
                h: e.h + o,
                radius: e.radius
            }
        }
        class eo extends Yi {
            static id = "bar";
            static defaults = {
                borderSkipped: "start",
                borderWidth: 0,
                borderRadius: 0,
                inflateAmount: "auto",
                pointStyle: void 0
            };
            static defaultRoutes = {
                backgroundColor: "backgroundColor",
                borderColor: "borderColor"
            };
            constructor(e) {
                super(),
                this.options = void 0,
                this.horizontal = void 0,
                this.base = void 0,
                this.width = void 0,
                this.height = void 0,
                this.inflateAmount = void 0,
                e && Object.assign(this, e)
            }
            draw(e) {
                const {inflateAmount: t, options: {borderColor: n, backgroundColor: s}} = this
                  , {inner: i, outer: a} = Xa(this)
                  , o = (r = a.radius).topLeft || r.topRight || r.bottomLeft || r.bottomRight ? bn : Za;
                var r;
                e.save(),
                a.w === i.w && a.h === i.h || (e.beginPath(),
                o(e, Ja(a, t, i)),
                e.clip(),
                o(e, Ja(i, -t, a)),
                e.fillStyle = n,
                e.fill("evenodd")),
                e.beginPath(),
                o(e, Ja(i, t)),
                e.fillStyle = s,
                e.fill(),
                e.restore()
            }
            inRange(e, t, n) {
                return Qa(this, e, t, n)
            }
            inXRange(e, t) {
                return Qa(this, e, null, t)
            }
            inYRange(e, t) {
                return Qa(this, null, e, t)
            }
            getCenterPoint(e) {
                const {x: t, y: n, base: s, horizontal: i} = this.getProps(["x", "y", "base", "horizontal"], e);
                return {
                    x: i ? (t + s) / 2 : t,
                    y: i ? n : (n + s) / 2
                }
            }
            getRange(e) {
                return "x" === e ? this.width / 2 : this.height / 2
            }
        }
        var to = Object.freeze({
            __proto__: null,
            ArcElement: ka,
            LineElement: Wa,
            PointElement: Ya,
            BarElement: eo
        });
        const no = ["rgb(54, 162, 235)", "rgb(255, 99, 132)", "rgb(255, 159, 64)", "rgb(255, 205, 86)", "rgb(75, 192, 192)", "rgb(153, 102, 255)", "rgb(201, 203, 207)"]
          , so = no.map((e=>e.replace("rgb(", "rgba(").replace(")", ", 0.5)")));
        function io(e) {
            return no[e % no.length]
        }
        function ao(e) {
            return so[e % so.length]
        }
        function oo(e) {
            return "doughnut" === e || "pie" === e ? function() {
                let e = 0;
                return t=>{
                    t.backgroundColor = t.data.map((()=>io(e++)))
                }
            }() : "polarArea" === e ? function() {
                let e = 0;
                return t=>{
                    t.backgroundColor = t.data.map((()=>ao(e++)))
                }
            }() : (e,t)=>{
                e.borderColor = io(t),
                e.backgroundColor = ao(t)
            }
        }
        function ro(e) {
            let t;
            for (t in e)
                if (e[t].borderColor || e[t].backgroundColor)
                    return !0;
            return !1
        }
        var lo = {
            id: "colors",
            defaults: {
                enabled: !0
            },
            beforeLayout(e, t, n) {
                if (!n.enabled)
                    return;
                const {type: s, options: {elements: i}, data: {datasets: a}} = e.config;
                if (ro(a) || i && ro(i))
                    return;
                const o = oo(s);
                a.forEach(o)
            }
        };
        function co(e) {
            if (e._decimated) {
                const t = e._data;
                delete e._decimated,
                delete e._data,
                Object.defineProperty(e, "data", {
                    value: t
                })
            }
        }
        function uo(e) {
            e.data.datasets.forEach((e=>{
                co(e)
            }
            ))
        }
        var mo = {
            id: "decimation",
            defaults: {
                algorithm: "min-max",
                enabled: !1
            },
            beforeElementsUpdate: (e,t,n)=>{
                if (!n.enabled)
                    return void uo(e);
                const s = e.width;
                e.data.datasets.forEach(((t,i)=>{
                    const {_data: a, indexAxis: o} = t
                      , r = e.getDatasetMeta(i)
                      , l = a || t.data;
                    if ("y" === On([o, e.options.indexAxis]))
                        return;
                    if (!r.controller.supportsDecimation)
                        return;
                    const c = e.scales[r.xAxisID];
                    if ("linear" !== c.type && "time" !== c.type)
                        return;
                    if (e.options.parsing)
                        return;
                    let {start: u, count: d} = function(e, t) {
                        const n = t.length;
                        let s, i = 0;
                        const {iScale: a} = e
                          , {min: o, max: r, minDefined: l, maxDefined: c} = a.getUserBounds();
                        return l && (i = We($e(t, a.axis, o).lo, 0, n - 1)),
                        s = c ? We($e(t, a.axis, r).hi + 1, i, n) - i : n - i,
                        {
                            start: i,
                            count: s
                        }
                    }(r, l);
                    if (d <= (n.threshold || 4 * s))
                        return void co(t);
                    let m;
                    switch (te(a) && (t._data = l,
                    delete t.data,
                    Object.defineProperty(t, "data", {
                        configurable: !0,
                        enumerable: !0,
                        get: function() {
                            return this._decimated
                        },
                        set: function(e) {
                            this._data = e
                        }
                    })),
                    n.algorithm) {
                    case "lttb":
                        m = function(e, t, n, s, i) {
                            const a = i.samples || s;
                            if (a >= n)
                                return e.slice(t, t + n);
                            const o = []
                              , r = (n - 2) / (a - 2);
                            let l = 0;
                            const c = t + n - 1;
                            let u, d, m, h, g, p = t;
                            for (o[l++] = e[p],
                            u = 0; u < a - 2; u++) {
                                let s, i = 0, a = 0;
                                const c = Math.floor((u + 1) * r) + 1 + t
                                  , f = Math.min(Math.floor((u + 2) * r) + 1, n) + t
                                  , x = f - c;
                                for (s = c; s < f; s++)
                                    i += e[s].x,
                                    a += e[s].y;
                                i /= x,
                                a /= x;
                                const v = Math.floor(u * r) + 1 + t
                                  , _ = Math.min(Math.floor((u + 1) * r) + 1, n) + t
                                  , {x: b, y: T} = e[p];
                                for (m = h = -1,
                                s = v; s < _; s++)
                                    h = .5 * Math.abs((b - i) * (e[s].y - T) - (b - e[s].x) * (a - T)),
                                    h > m && (m = h,
                                    d = e[s],
                                    g = s);
                                o[l++] = d,
                                p = g
                            }
                            return o[l++] = e[c],
                            o
                        }(l, u, d, s, n);
                        break;
                    case "min-max":
                        m = function(e, t, n, s) {
                            let i, a, o, r, l, c, u, d, m, h, g = 0, p = 0;
                            const f = []
                              , x = t + n - 1
                              , v = e[t].x
                              , _ = e[x].x - v;
                            for (i = t; i < t + n; ++i) {
                                a = e[i],
                                o = (a.x - v) / _ * s,
                                r = a.y;
                                const t = 0 | o;
                                if (t === l)
                                    r < m ? (m = r,
                                    c = i) : r > h && (h = r,
                                    u = i),
                                    g = (p * g + a.x) / ++p;
                                else {
                                    const n = i - 1;
                                    if (!te(c) && !te(u)) {
                                        const t = Math.min(c, u)
                                          , s = Math.max(c, u);
                                        t !== d && t !== n && f.push({
                                            ...e[t],
                                            x: g
                                        }),
                                        s !== d && s !== n && f.push({
                                            ...e[s],
                                            x: g
                                        })
                                    }
                                    i > 0 && n !== d && f.push(e[n]),
                                    f.push(a),
                                    l = t,
                                    p = 0,
                                    m = h = r,
                                    c = u = d = i
                                }
                            }
                            return f
                        }(l, u, d, s);
                        break;
                    default:
                        throw new Error(`Unsupported decimation algorithm '${n.algorithm}'`)
                    }
                    t._decimated = m
                }
                ))
            }
            ,
            destroy(e) {
                uo(e)
            }
        };
        function ho(e, t, n, s) {
            if (s)
                return;
            let i = t[e]
              , a = n[e];
            return "angle" === e && (i = He(i),
            a = He(a)),
            {
                property: e,
                start: i,
                end: a
            }
        }
        function go(e, t, n) {
            for (; t > e; t--) {
                const e = n[t];
                if (!isNaN(e.x) && !isNaN(e.y))
                    break
            }
            return t
        }
        function po(e, t, n, s) {
            return e && t ? s(e[n], t[n]) : e ? e[n] : t ? t[n] : 0
        }
        function fo(e, t) {
            let n = []
              , s = !1;
            return ne(e) ? (s = !0,
            n = e) : n = function(e, t) {
                const {x: n=null, y: s=null} = e || {}
                  , i = t.points
                  , a = [];
                return t.segments.forEach((({start: e, end: t})=>{
                    t = go(e, t, i);
                    const o = i[e]
                      , r = i[t];
                    null !== s ? (a.push({
                        x: o.x,
                        y: s
                    }),
                    a.push({
                        x: r.x,
                        y: s
                    })) : null !== n && (a.push({
                        x: n,
                        y: o.y
                    }),
                    a.push({
                        x: n,
                        y: r.y
                    }))
                }
                )),
                a
            }(e, t),
            n.length ? new Wa({
                points: n,
                options: {
                    tension: 0
                },
                _loop: s,
                _fullLoop: s
            }) : null
        }
        function xo(e) {
            return e && !1 !== e.fill
        }
        function vo(e, t, n) {
            let s = e[t].fill;
            const i = [t];
            let a;
            if (!n)
                return s;
            for (; !1 !== s && -1 === i.indexOf(s); ) {
                if (!ie(s))
                    return s;
                if (a = e[s],
                !a)
                    return !1;
                if (a.visible)
                    return s;
                i.push(s),
                s = a.fill
            }
            return !1
        }
        function _o(e, t, n) {
            const s = function(e) {
                const t = e.options
                  , n = t.fill;
                let s = oe(n && n.target, n);
                void 0 === s && (s = !!t.backgroundColor);
                if (!1 === s || null === s)
                    return !1;
                if (!0 === s)
                    return "origin";
                return s
            }(e);
            if (se(s))
                return !isNaN(s.value) && s;
            let i = parseFloat(s);
            return ie(i) && Math.floor(i) === i ? function(e, t, n, s) {
                "-" !== e && "+" !== e || (n = t + n);
                if (n === t || n < 0 || n >= s)
                    return !1;
                return n
            }(s[0], t, i, n) : ["origin", "start", "end", "stack", "shape"].indexOf(s) >= 0 && s
        }
        function bo(e, t, n) {
            const s = [];
            for (let i = 0; i < n.length; i++) {
                const a = n[i]
                  , {first: o, last: r, point: l} = To(a, t, "x");
                if (!(!l || o && r))
                    if (o)
                        s.unshift(l);
                    else if (e.push(l),
                    !r)
                        break
            }
            e.push(...s)
        }
        function To(e, t, n) {
            const s = e.interpolate(t, n);
            if (!s)
                return {};
            const i = s[n]
              , a = e.segments
              , o = e.points;
            let r = !1
              , l = !1;
            for (let e = 0; e < a.length; e++) {
                const t = a[e]
                  , s = o[t.start][n]
                  , c = o[t.end][n];
                if (ze(i, s, c)) {
                    r = i === s,
                    l = i === c;
                    break
                }
            }
            return {
                first: r,
                last: l,
                point: s
            }
        }
        class Eo {
            constructor(e) {
                this.x = e.x,
                this.y = e.y,
                this.radius = e.radius
            }
            pathSegment(e, t, n) {
                const {x: s, y: i, radius: a} = this;
                return t = t || {
                    start: 0,
                    end: Se
                },
                e.arc(s, i, a, t.end, t.start, !0),
                !n.bounds
            }
            interpolate(e) {
                const {x: t, y: n, radius: s} = this
                  , i = e.angle;
                return {
                    x: t + Math.cos(i) * s,
                    y: n + Math.sin(i) * s,
                    angle: i
                }
            }
        }
        function Io(e) {
            const {chart: t, fill: n, line: s} = e;
            if (ie(n))
                return function(e, t) {
                    const n = e.getDatasetMeta(t)
                      , s = n && e.isDatasetVisible(t);
                    return s ? n.dataset : null
                }(t, n);
            if ("stack" === n)
                return function(e) {
                    const {scale: t, index: n, line: s} = e
                      , i = []
                      , a = s.segments
                      , o = s.points
                      , r = function(e, t) {
                        const n = []
                          , s = e.getMatchingVisibleMetas("line");
                        for (let e = 0; e < s.length; e++) {
                            const i = s[e];
                            if (i.index === t)
                                break;
                            i.hidden || n.unshift(i.dataset)
                        }
                        return n
                    }(t, n);
                    r.push(fo({
                        x: null,
                        y: t.bottom
                    }, s));
                    for (let e = 0; e < a.length; e++) {
                        const t = a[e];
                        for (let e = t.start; e <= t.end; e++)
                            bo(i, o[e], r)
                    }
                    return new Wa({
                        points: i,
                        options: {}
                    })
                }(e);
            if ("shape" === n)
                return !0;
            const i = function(e) {
                const t = e.scale || {};
                if (t.getPointPositionForValue)
                    return function(e) {
                        const {scale: t, fill: n} = e
                          , s = t.options
                          , i = t.getLabels().length
                          , a = s.reverse ? t.max : t.min
                          , o = function(e, t, n) {
                            let s;
                            return s = "start" === e ? n : "end" === e ? t.options.reverse ? t.min : t.max : se(e) ? e.value : t.getBaseValue(),
                            s
                        }(n, t, a)
                          , r = [];
                        if (s.grid.circular) {
                            const e = t.getPointPositionForValue(0, a);
                            return new Eo({
                                x: e.x,
                                y: e.y,
                                radius: t.getDistanceFromCenterForValue(o)
                            })
                        }
                        for (let e = 0; e < i; ++e)
                            r.push(t.getPointPositionForValue(e, o));
                        return r
                    }(e);
                return function(e) {
                    const {scale: t={}, fill: n} = e
                      , s = function(e, t) {
                        let n = null;
                        return "start" === e ? n = t.bottom : "end" === e ? n = t.top : se(e) ? n = t.getPixelForValue(e.value) : t.getBasePixel && (n = t.getBasePixel()),
                        n
                    }(n, t);
                    if (ie(s)) {
                        const e = t.isHorizontal();
                        return {
                            x: e ? s : null,
                            y: e ? null : s
                        }
                    }
                    return null
                }(e)
            }(e);
            return i instanceof Eo ? i : fo(i, s)
        }
        function So(e, t, n) {
            const s = Io(t)
              , {line: i, scale: a, axis: o} = t
              , r = i.options
              , l = r.fill
              , c = r.backgroundColor
              , {above: u=c, below: d=c} = l || {};
            s && i.points.length && (hn(e, n),
            function(e, t) {
                const {line: n, target: s, above: i, below: a, area: o, scale: r} = t
                  , l = n._loop ? "angle" : t.axis;
                e.save(),
                "x" === l && a !== i && (yo(e, s, o.top),
                jo(e, {
                    line: n,
                    target: s,
                    color: i,
                    scale: r,
                    property: l
                }),
                e.restore(),
                e.save(),
                yo(e, s, o.bottom));
                jo(e, {
                    line: n,
                    target: s,
                    color: a,
                    scale: r,
                    property: l
                }),
                e.restore()
            }(e, {
                line: i,
                target: s,
                above: u,
                below: d,
                area: n,
                scale: a,
                axis: o
            }),
            gn(e))
        }
        function yo(e, t, n) {
            const {segments: s, points: i} = t;
            let a = !0
              , o = !1;
            e.beginPath();
            for (const r of s) {
                const {start: s, end: l} = r
                  , c = i[s]
                  , u = i[go(s, l, i)];
                a ? (e.moveTo(c.x, c.y),
                a = !1) : (e.lineTo(c.x, n),
                e.lineTo(c.x, c.y)),
                o = !!t.pathSegment(e, r, {
                    move: o
                }),
                o ? e.closePath() : e.lineTo(u.x, n)
            }
            e.lineTo(t.first().x, n),
            e.closePath(),
            e.clip()
        }
        function jo(e, t) {
            const {line: n, target: s, property: i, color: a, scale: o} = t
              , r = function(e, t, n) {
                const s = e.segments
                  , i = e.points
                  , a = t.points
                  , o = [];
                for (const e of s) {
                    let {start: s, end: r} = e;
                    r = go(s, r, i);
                    const l = ho(n, i[s], i[r], e.loop);
                    if (!t.segments) {
                        o.push({
                            source: e,
                            target: l,
                            start: i[s],
                            end: i[r]
                        });
                        continue
                    }
                    const c = Ts(t, l);
                    for (const t of c) {
                        const s = ho(n, a[t.start], a[t.end], t.loop)
                          , r = bs(e, i, s);
                        for (const e of r)
                            o.push({
                                source: e,
                                target: t,
                                start: {
                                    [n]: po(l, s, "start", Math.max)
                                },
                                end: {
                                    [n]: po(l, s, "end", Math.min)
                                }
                            })
                    }
                }
                return o
            }(n, s, i);
            for (const {source: t, target: l, start: c, end: u} of r) {
                const {style: {backgroundColor: r=a}={}} = t
                  , d = !0 !== s;
                e.save(),
                e.fillStyle = r,
                Co(e, o, d && ho(i, c, u)),
                e.beginPath();
                const m = !!n.pathSegment(e, t);
                let h;
                if (d) {
                    m ? e.closePath() : No(e, s, u, i);
                    const t = !!s.pathSegment(e, l, {
                        move: m,
                        reverse: !0
                    });
                    h = m && t,
                    h || No(e, s, c, i)
                }
                e.closePath(),
                e.fill(h ? "evenodd" : "nonzero"),
                e.restore()
            }
        }
        function Co(e, t, n) {
            const {top: s, bottom: i} = t.chart.chartArea
              , {property: a, start: o, end: r} = n || {};
            "x" === a && (e.beginPath(),
            e.rect(o, s, r - o, i - s),
            e.clip())
        }
        function No(e, t, n, s) {
            const i = t.interpolate(n, s);
            i && e.lineTo(i.x, i.y)
        }
        var wo = {
            id: "filler",
            afterDatasetsUpdate(e, t, n) {
                const s = (e.data.datasets || []).length
                  , i = [];
                let a, o, r, l;
                for (o = 0; o < s; ++o)
                    a = e.getDatasetMeta(o),
                    r = a.dataset,
                    l = null,
                    r && r.options && r instanceof Wa && (l = {
                        visible: e.isDatasetVisible(o),
                        index: o,
                        fill: _o(r, o, s),
                        chart: e,
                        axis: a.controller.options.indexAxis,
                        scale: a.vScale,
                        line: r
                    }),
                    a.$filler = l,
                    i.push(l);
                for (o = 0; o < s; ++o)
                    l = i[o],
                    l && !1 !== l.fill && (l.fill = vo(i, o, n.propagate))
            },
            beforeDraw(e, t, n) {
                const s = "beforeDraw" === n.drawTime
                  , i = e.getSortedVisibleDatasetMetas()
                  , a = e.chartArea;
                for (let t = i.length - 1; t >= 0; --t) {
                    const n = i[t].$filler;
                    n && (n.line.updateControlPoints(a, n.axis),
                    s && n.fill && So(e.ctx, n, a))
                }
            },
            beforeDatasetsDraw(e, t, n) {
                if ("beforeDatasetsDraw" !== n.drawTime)
                    return;
                const s = e.getSortedVisibleDatasetMetas();
                for (let t = s.length - 1; t >= 0; --t) {
                    const n = s[t].$filler;
                    xo(n) && So(e.ctx, n, e.chartArea)
                }
            },
            beforeDatasetDraw(e, t, n) {
                const s = t.meta.$filler;
                xo(s) && "beforeDatasetDraw" === n.drawTime && So(e.ctx, s, e.chartArea)
            },
            defaults: {
                propagate: !0,
                drawTime: "beforeDatasetDraw"
            }
        };
        const Oo = (e,t)=>{
            let {boxHeight: n=t, boxWidth: s=t} = e;
            return e.usePointStyle && (n = Math.min(n, t),
            s = e.pointStyleWidth || Math.min(s, t)),
            {
                boxWidth: s,
                boxHeight: n,
                itemHeight: Math.max(t, n)
            }
        }
        ;
        class Po extends Yi {
            constructor(e) {
                super(),
                this._added = !1,
                this.legendHitBoxes = [],
                this._hoveredItem = null,
                this.doughnutMode = !1,
                this.chart = e.chart,
                this.options = e.options,
                this.ctx = e.ctx,
                this.legendItems = void 0,
                this.columnSizes = void 0,
                this.lineWidths = void 0,
                this.maxHeight = void 0,
                this.maxWidth = void 0,
                this.top = void 0,
                this.bottom = void 0,
                this.left = void 0,
                this.right = void 0,
                this.height = void 0,
                this.width = void 0,
                this._margins = void 0,
                this.position = void 0,
                this.weight = void 0,
                this.fullSize = void 0
            }
            update(e, t, n) {
                this.maxWidth = e,
                this.maxHeight = t,
                this._margins = n,
                this.setDimensions(),
                this.buildLabels(),
                this.fit()
            }
            setDimensions() {
                this.isHorizontal() ? (this.width = this.maxWidth,
                this.left = this._margins.left,
                this.right = this.width) : (this.height = this.maxHeight,
                this.top = this._margins.top,
                this.bottom = this.height)
            }
            buildLabels() {
                const e = this.options.labels || {};
                let t = le(e.generateLabels, [this.chart], this) || [];
                e.filter && (t = t.filter((t=>e.filter(t, this.chart.data)))),
                e.sort && (t = t.sort(((t,n)=>e.sort(t, n, this.chart.data)))),
                this.options.reverse && t.reverse(),
                this.legendItems = t
            }
            fit() {
                const {options: e, ctx: t} = this;
                if (!e.display)
                    return void (this.width = this.height = 0);
                const n = e.labels
                  , s = wn(n.font)
                  , i = s.size
                  , a = this._computeTitleHeight()
                  , {boxWidth: o, itemHeight: r} = Oo(n, i);
                let l, c;
                t.font = s.string,
                this.isHorizontal() ? (l = this.maxWidth,
                c = this._fitRows(a, i, o, r) + 10) : (c = this.maxHeight,
                l = this._fitCols(a, s, o, r) + 10),
                this.width = Math.min(l, e.maxWidth || this.maxWidth),
                this.height = Math.min(c, e.maxHeight || this.maxHeight)
            }
            _fitRows(e, t, n, s) {
                const {ctx: i, maxWidth: a, options: {labels: {padding: o}}} = this
                  , r = this.legendHitBoxes = []
                  , l = this.lineWidths = [0]
                  , c = s + o;
                let u = e;
                i.textAlign = "left",
                i.textBaseline = "middle";
                let d = -1
                  , m = -c;
                return this.legendItems.forEach(((e,h)=>{
                    const g = n + t / 2 + i.measureText(e.text).width;
                    (0 === h || l[l.length - 1] + g + 2 * o > a) && (u += c,
                    l[l.length - (h > 0 ? 0 : 1)] = 0,
                    m += c,
                    d++),
                    r[h] = {
                        left: 0,
                        top: m,
                        row: d,
                        width: g,
                        height: s
                    },
                    l[l.length - 1] += g + o
                }
                )),
                u
            }
            _fitCols(e, t, n, s) {
                const {ctx: i, maxHeight: a, options: {labels: {padding: o}}} = this
                  , r = this.legendHitBoxes = []
                  , l = this.columnSizes = []
                  , c = a - e;
                let u = o
                  , d = 0
                  , m = 0
                  , h = 0
                  , g = 0;
                return this.legendItems.forEach(((e,a)=>{
                    const {itemWidth: p, itemHeight: f} = function(e, t, n, s, i) {
                        const a = function(e, t, n, s) {
                            let i = e.text;
                            i && "string" != typeof i && (i = i.reduce(((e,t)=>e.length > t.length ? e : t)));
                            return t + n.size / 2 + s.measureText(i).width
                        }(s, e, t, n)
                          , o = function(e, t, n) {
                            let s = e;
                            "string" != typeof t.text && (s = Lo(t, n));
                            return s
                        }(i, s, t.lineHeight);
                        return {
                            itemWidth: a,
                            itemHeight: o
                        }
                    }(n, t, i, e, s);
                    a > 0 && m + f + 2 * o > c && (u += d + o,
                    l.push({
                        width: d,
                        height: m
                    }),
                    h += d + o,
                    g++,
                    d = m = 0),
                    r[a] = {
                        left: h,
                        top: m,
                        col: g,
                        width: p,
                        height: f
                    },
                    d = Math.max(d, p),
                    m += f + o
                }
                )),
                u += d,
                l.push({
                    width: d,
                    height: m
                }),
                u
            }
            adjustHitBoxes() {
                if (!this.options.display)
                    return;
                const e = this._computeTitleHeight()
                  , {legendHitBoxes: t, options: {align: n, labels: {padding: s}, rtl: i}} = this
                  , a = ps(i, this.left, this.width);
                if (this.isHorizontal()) {
                    let i = 0
                      , o = nt(n, this.left + s, this.right - this.lineWidths[i]);
                    for (const r of t)
                        i !== r.row && (i = r.row,
                        o = nt(n, this.left + s, this.right - this.lineWidths[i])),
                        r.top += this.top + e + s,
                        r.left = a.leftForLtr(a.x(o), r.width),
                        o += r.width + s
                } else {
                    let i = 0
                      , o = nt(n, this.top + e + s, this.bottom - this.columnSizes[i].height);
                    for (const r of t)
                        r.col !== i && (i = r.col,
                        o = nt(n, this.top + e + s, this.bottom - this.columnSizes[i].height)),
                        r.top = o,
                        r.left += this.left + s,
                        r.left = a.leftForLtr(a.x(r.left), r.width),
                        o += r.height + s
                }
            }
            isHorizontal() {
                return "top" === this.options.position || "bottom" === this.options.position
            }
            draw() {
                if (this.options.display) {
                    const e = this.ctx;
                    hn(e, this),
                    this._draw(),
                    gn(e)
                }
            }
            _draw() {
                const {options: e, columnSizes: t, lineWidths: n, ctx: s} = this
                  , {align: i, labels: a} = e
                  , o = an.color
                  , r = ps(e.rtl, this.left, this.width)
                  , l = wn(a.font)
                  , {padding: c} = a
                  , u = l.size
                  , d = u / 2;
                let m;
                this.drawTitle(),
                s.textAlign = r.textAlign("left"),
                s.textBaseline = "middle",
                s.lineWidth = .5,
                s.font = l.string;
                const {boxWidth: h, boxHeight: g, itemHeight: p} = Oo(a, u)
                  , f = this.isHorizontal()
                  , x = this._computeTitleHeight();
                m = f ? {
                    x: nt(i, this.left + c, this.right - n[0]),
                    y: this.top + c + x,
                    line: 0
                } : {
                    x: this.left + c,
                    y: nt(i, this.top + x + c, this.bottom - t[0].height),
                    line: 0
                },
                fs(this.ctx, e.textDirection);
                const v = p + c;
                this.legendItems.forEach(((_,b)=>{
                    s.strokeStyle = _.fontColor,
                    s.fillStyle = _.fontColor;
                    const T = s.measureText(_.text).width
                      , E = r.textAlign(_.textAlign || (_.textAlign = a.textAlign))
                      , I = h + d + T;
                    let S = m.x
                      , y = m.y;
                    r.setWidth(this.width),
                    f ? b > 0 && S + I + c > this.right && (y = m.y += v,
                    m.line++,
                    S = m.x = nt(i, this.left + c, this.right - n[m.line])) : b > 0 && y + v > this.bottom && (S = m.x = S + t[m.line].width + c,
                    m.line++,
                    y = m.y = nt(i, this.top + x + c, this.bottom - t[m.line].height));
                    if (function(e, t, n) {
                        if (isNaN(h) || h <= 0 || isNaN(g) || g < 0)
                            return;
                        s.save();
                        const i = oe(n.lineWidth, 1);
                        if (s.fillStyle = oe(n.fillStyle, o),
                        s.lineCap = oe(n.lineCap, "butt"),
                        s.lineDashOffset = oe(n.lineDashOffset, 0),
                        s.lineJoin = oe(n.lineJoin, "miter"),
                        s.lineWidth = i,
                        s.strokeStyle = oe(n.strokeStyle, o),
                        s.setLineDash(oe(n.lineDash, [])),
                        a.usePointStyle) {
                            const o = {
                                radius: g * Math.SQRT2 / 2,
                                pointStyle: n.pointStyle,
                                rotation: n.rotation,
                                borderWidth: i
                            }
                              , l = r.xPlus(e, h / 2);
                            dn(s, o, l, t + d, a.pointStyleWidth && h)
                        } else {
                            const a = t + Math.max((u - g) / 2, 0)
                              , o = r.leftForLtr(e, h)
                              , l = Cn(n.borderRadius);
                            s.beginPath(),
                            Object.values(l).some((e=>0 !== e)) ? bn(s, {
                                x: o,
                                y: a,
                                w: h,
                                h: g,
                                radius: l
                            }) : s.rect(o, a, h, g),
                            s.fill(),
                            0 !== i && s.stroke()
                        }
                        s.restore()
                    }(r.x(S), y, _),
                    S = ((e,t,n,s)=>e === (s ? "left" : "right") ? n : "center" === e ? (t + n) / 2 : t)(E, S + h + d, f ? S + I : this.right, e.rtl),
                    function(e, t, n) {
                        xn(s, n.text, e, t + p / 2, l, {
                            strikethrough: n.hidden,
                            textAlign: r.textAlign(n.textAlign)
                        })
                    }(r.x(S), y, _),
                    f)
                        m.x += I + c;
                    else if ("string" != typeof _.text) {
                        const e = l.lineHeight;
                        m.y += Lo(_, e)
                    } else
                        m.y += v
                }
                )),
                xs(this.ctx, e.textDirection)
            }
            drawTitle() {
                const e = this.options
                  , t = e.title
                  , n = wn(t.font)
                  , s = Nn(t.padding);
                if (!t.display)
                    return;
                const i = ps(e.rtl, this.left, this.width)
                  , a = this.ctx
                  , o = t.position
                  , r = n.size / 2
                  , l = s.top + r;
                let c, u = this.left, d = this.width;
                if (this.isHorizontal())
                    d = Math.max(...this.lineWidths),
                    c = this.top + l,
                    u = nt(e.align, u, this.right - d);
                else {
                    const t = this.columnSizes.reduce(((e,t)=>Math.max(e, t.height)), 0);
                    c = l + nt(e.align, this.top, this.bottom - t - e.labels.padding - this._computeTitleHeight())
                }
                const m = nt(o, u, u + d);
                a.textAlign = i.textAlign(tt(o)),
                a.textBaseline = "middle",
                a.strokeStyle = t.color,
                a.fillStyle = t.color,
                a.font = n.string,
                xn(a, t.text, m, c, n)
            }
            _computeTitleHeight() {
                const e = this.options.title
                  , t = wn(e.font)
                  , n = Nn(e.padding);
                return e.display ? t.lineHeight + n.height : 0
            }
            _getLegendItemAt(e, t) {
                let n, s, i;
                if (ze(e, this.left, this.right) && ze(t, this.top, this.bottom))
                    for (i = this.legendHitBoxes,
                    n = 0; n < i.length; ++n)
                        if (s = i[n],
                        ze(e, s.left, s.left + s.width) && ze(t, s.top, s.top + s.height))
                            return this.legendItems[n];
                return null
            }
            handleEvent(e) {
                const t = this.options;
                if (!function(e, t) {
                    if (("mousemove" === e || "mouseout" === e) && (t.onHover || t.onLeave))
                        return !0;
                    if (t.onClick && ("click" === e || "mouseup" === e))
                        return !0;
                    return !1
                }(e.type, t))
                    return;
                const n = this._getLegendItemAt(e.x, e.y);
                if ("mousemove" === e.type || "mouseout" === e.type) {
                    const a = this._hoveredItem
                      , o = (i = n,
                    null !== (s = a) && null !== i && s.datasetIndex === i.datasetIndex && s.index === i.index);
                    a && !o && le(t.onLeave, [e, a, this], this),
                    this._hoveredItem = n,
                    n && !o && le(t.onHover, [e, n, this], this)
                } else
                    n && le(t.onClick, [e, n, this], this);
                var s, i
            }
        }
        function Lo(e, t) {
            return t * (e.text ? e.text.length + .5 : 0)
        }
        var Ao = {
            id: "legend",
            _element: Po,
            start(e, t, n) {
                const s = e.legend = new Po({
                    ctx: e.ctx,
                    options: n,
                    chart: e
                });
                Ni.configure(e, s, n),
                Ni.addBox(e, s)
            },
            stop(e) {
                Ni.removeBox(e, e.legend),
                delete e.legend
            },
            beforeUpdate(e, t, n) {
                const s = e.legend;
                Ni.configure(e, s, n),
                s.options = n
            },
            afterUpdate(e) {
                const t = e.legend;
                t.buildLabels(),
                t.adjustHitBoxes()
            },
            afterEvent(e, t) {
                t.replay || e.legend.handleEvent(t.event)
            },
            defaults: {
                display: !0,
                position: "top",
                align: "center",
                fullSize: !0,
                reverse: !1,
                weight: 1e3,
                onClick(e, t, n) {
                    const s = t.datasetIndex
                      , i = n.chart;
                    i.isDatasetVisible(s) ? (i.hide(s),
                    t.hidden = !0) : (i.show(s),
                    t.hidden = !1)
                },
                onHover: null,
                onLeave: null,
                labels: {
                    color: e=>e.chart.options.color,
                    boxWidth: 40,
                    padding: 10,
                    generateLabels(e) {
                        const t = e.data.datasets
                          , {labels: {usePointStyle: n, pointStyle: s, textAlign: i, color: a, useBorderRadius: o, borderRadius: r}} = e.legend.options;
                        return e._getSortedDatasetMetas().map((e=>{
                            const l = e.controller.getStyle(n ? 0 : void 0)
                              , c = Nn(l.borderWidth);
                            return {
                                text: t[e.index].label,
                                fillStyle: l.backgroundColor,
                                fontColor: a,
                                hidden: !e.visible,
                                lineCap: l.borderCapStyle,
                                lineDash: l.borderDash,
                                lineDashOffset: l.borderDashOffset,
                                lineJoin: l.borderJoinStyle,
                                lineWidth: (c.width + c.height) / 4,
                                strokeStyle: l.borderColor,
                                pointStyle: s || l.pointStyle,
                                rotation: l.rotation,
                                textAlign: i || l.textAlign,
                                borderRadius: o && (r || l.borderRadius),
                                datasetIndex: e.index
                            }
                        }
                        ), this)
                    }
                },
                title: {
                    color: e=>e.chart.options.color,
                    display: !1,
                    position: "center",
                    text: ""
                }
            },
            descriptors: {
                _scriptable: e=>!e.startsWith("on"),
                labels: {
                    _scriptable: e=>!["generateLabels", "filter", "sort"].includes(e)
                }
            }
        };
        class Mo extends Yi {
            constructor(e) {
                super(),
                this.chart = e.chart,
                this.options = e.options,
                this.ctx = e.ctx,
                this._padding = void 0,
                this.top = void 0,
                this.bottom = void 0,
                this.left = void 0,
                this.right = void 0,
                this.width = void 0,
                this.height = void 0,
                this.position = void 0,
                this.weight = void 0,
                this.fullSize = void 0
            }
            update(e, t) {
                const n = this.options;
                if (this.left = 0,
                this.top = 0,
                !n.display)
                    return void (this.width = this.height = this.right = this.bottom = 0);
                this.width = this.right = e,
                this.height = this.bottom = t;
                const s = ne(n.text) ? n.text.length : 1;
                this._padding = Nn(n.padding);
                const i = s * wn(n.font).lineHeight + this._padding.height;
                this.isHorizontal() ? this.height = i : this.width = i
            }
            isHorizontal() {
                const e = this.options.position;
                return "top" === e || "bottom" === e
            }
            _drawArgs(e) {
                const {top: t, left: n, bottom: s, right: i, options: a} = this
                  , o = a.align;
                let r, l, c, u = 0;
                return this.isHorizontal() ? (l = nt(o, n, i),
                c = t + e,
                r = i - n) : ("left" === a.position ? (l = n + e,
                c = nt(o, s, t),
                u = -.5 * Ie) : (l = i - e,
                c = nt(o, t, s),
                u = .5 * Ie),
                r = s - t),
                {
                    titleX: l,
                    titleY: c,
                    maxWidth: r,
                    rotation: u
                }
            }
            draw() {
                const e = this.ctx
                  , t = this.options;
                if (!t.display)
                    return;
                const n = wn(t.font)
                  , s = n.lineHeight / 2 + this._padding.top
                  , {titleX: i, titleY: a, maxWidth: o, rotation: r} = this._drawArgs(s);
                xn(e, t.text, 0, 0, n, {
                    color: t.color,
                    maxWidth: o,
                    rotation: r,
                    textAlign: tt(t.align),
                    textBaseline: "middle",
                    translation: [i, a]
                })
            }
        }
        var Ro = {
            id: "title",
            _element: Mo,
            start(e, t, n) {
                !function(e, t) {
                    const n = new Mo({
                        ctx: e.ctx,
                        options: t,
                        chart: e
                    });
                    Ni.configure(e, n, t),
                    Ni.addBox(e, n),
                    e.titleBlock = n
                }(e, n)
            },
            stop(e) {
                const t = e.titleBlock;
                Ni.removeBox(e, t),
                delete e.titleBlock
            },
            beforeUpdate(e, t, n) {
                const s = e.titleBlock;
                Ni.configure(e, s, n),
                s.options = n
            },
            defaults: {
                align: "center",
                display: !1,
                font: {
                    weight: "bold"
                },
                fullSize: !0,
                padding: 10,
                position: "top",
                text: "",
                weight: 2e3
            },
            defaultRoutes: {
                color: "color"
            },
            descriptors: {
                _scriptable: !0,
                _indexable: !1
            }
        };
        const ko = new WeakMap;
        var Do = {
            id: "subtitle",
            start(e, t, n) {
                const s = new Mo({
                    ctx: e.ctx,
                    options: n,
                    chart: e
                });
                Ni.configure(e, s, n),
                Ni.addBox(e, s),
                ko.set(e, s)
            },
            stop(e) {
                Ni.removeBox(e, ko.get(e)),
                ko.delete(e)
            },
            beforeUpdate(e, t, n) {
                const s = ko.get(e);
                Ni.configure(e, s, n),
                s.options = n
            },
            defaults: {
                align: "center",
                display: !1,
                font: {
                    weight: "normal"
                },
                fullSize: !0,
                padding: 0,
                position: "top",
                text: "",
                weight: 1500
            },
            defaultRoutes: {
                color: "color"
            },
            descriptors: {
                _scriptable: !0,
                _indexable: !1
            }
        };
        const Fo = {
            average(e) {
                if (!e.length)
                    return !1;
                let t, n, s = 0, i = 0, a = 0;
                for (t = 0,
                n = e.length; t < n; ++t) {
                    const n = e[t].element;
                    if (n && n.hasValue()) {
                        const e = n.tooltipPosition();
                        s += e.x,
                        i += e.y,
                        ++a
                    }
                }
                return {
                    x: s / a,
                    y: i / a
                }
            },
            nearest(e, t) {
                if (!e.length)
                    return !1;
                let n, s, i, a = t.x, o = t.y, r = Number.POSITIVE_INFINITY;
                for (n = 0,
                s = e.length; n < s; ++n) {
                    const s = e[n].element;
                    if (s && s.hasValue()) {
                        const e = Ge(t, s.getCenterPoint());
                        e < r && (r = e,
                        i = s)
                    }
                }
                if (i) {
                    const e = i.tooltipPosition();
                    a = e.x,
                    o = e.y
                }
                return {
                    x: a,
                    y: o
                }
            }
        };
        function Uo(e, t) {
            return t && (ne(t) ? Array.prototype.push.apply(e, t) : e.push(t)),
            e
        }
        function Bo(e) {
            return ("string" == typeof e || e instanceof String) && e.indexOf("\n") > -1 ? e.split("\n") : e
        }
        function Go(e, t) {
            const {element: n, datasetIndex: s, index: i} = t
              , a = e.getDatasetMeta(s).controller
              , {label: o, value: r} = a.getLabelAndValue(i);
            return {
                chart: e,
                label: o,
                parsed: a.getParsed(i),
                raw: e.data.datasets[s].data[i],
                formattedValue: r,
                dataset: a.getDataset(),
                dataIndex: i,
                datasetIndex: s,
                element: n
            }
        }
        function Vo(e, t) {
            const n = e.chart.ctx
              , {body: s, footer: i, title: a} = e
              , {boxWidth: o, boxHeight: r} = t
              , l = wn(t.bodyFont)
              , c = wn(t.titleFont)
              , u = wn(t.footerFont)
              , d = a.length
              , m = i.length
              , h = s.length
              , g = Nn(t.padding);
            let p = g.height
              , f = 0
              , x = s.reduce(((e,t)=>e + t.before.length + t.lines.length + t.after.length), 0);
            if (x += e.beforeBody.length + e.afterBody.length,
            d && (p += d * c.lineHeight + (d - 1) * t.titleSpacing + t.titleMarginBottom),
            x) {
                p += h * (t.displayColors ? Math.max(r, l.lineHeight) : l.lineHeight) + (x - h) * l.lineHeight + (x - 1) * t.bodySpacing
            }
            m && (p += t.footerMarginTop + m * u.lineHeight + (m - 1) * t.footerSpacing);
            let v = 0;
            const _ = function(e) {
                f = Math.max(f, n.measureText(e).width + v)
            };
            return n.save(),
            n.font = c.string,
            ce(e.title, _),
            n.font = l.string,
            ce(e.beforeBody.concat(e.afterBody), _),
            v = t.displayColors ? o + 2 + t.boxPadding : 0,
            ce(s, (e=>{
                ce(e.before, _),
                ce(e.lines, _),
                ce(e.after, _)
            }
            )),
            v = 0,
            n.font = u.string,
            ce(e.footer, _),
            n.restore(),
            f += g.width,
            {
                width: f,
                height: p
            }
        }
        function Ho(e, t, n, s) {
            const {x: i, width: a} = n
              , {width: o, chartArea: {left: r, right: l}} = e;
            let c = "center";
            return "center" === s ? c = i <= (r + l) / 2 ? "left" : "right" : i <= a / 2 ? c = "left" : i >= o - a / 2 && (c = "right"),
            function(e, t, n, s) {
                const {x: i, width: a} = s
                  , o = n.caretSize + n.caretPadding;
                return "left" === e && i + a + o > t.width || "right" === e && i - a - o < 0 || void 0
            }(c, e, t, n) && (c = "center"),
            c
        }
        function Ko(e, t, n) {
            const s = n.yAlign || t.yAlign || function(e, t) {
                const {y: n, height: s} = t;
                return n < s / 2 ? "top" : n > e.height - s / 2 ? "bottom" : "center"
            }(e, n);
            return {
                xAlign: n.xAlign || t.xAlign || Ho(e, t, n, s),
                yAlign: s
            }
        }
        function Wo(e, t, n, s) {
            const {caretSize: i, caretPadding: a, cornerRadius: o} = e
              , {xAlign: r, yAlign: l} = n
              , c = i + a
              , {topLeft: u, topRight: d, bottomLeft: m, bottomRight: h} = Cn(o);
            let g = function(e, t) {
                let {x: n, width: s} = e;
                return "right" === t ? n -= s : "center" === t && (n -= s / 2),
                n
            }(t, r);
            const p = function(e, t, n) {
                let {y: s, height: i} = e;
                return "top" === t ? s += n : s -= "bottom" === t ? i + n : i / 2,
                s
            }(t, l, c);
            return "center" === l ? "left" === r ? g += c : "right" === r && (g -= c) : "left" === r ? g -= Math.max(u, m) + i : "right" === r && (g += Math.max(d, h) + i),
            {
                x: We(g, 0, s.width - t.width),
                y: We(p, 0, s.height - t.height)
            }
        }
        function zo(e, t, n) {
            const s = Nn(n.padding);
            return "center" === t ? e.x + e.width / 2 : "right" === t ? e.x + e.width - s.right : e.x + s.left
        }
        function Yo(e) {
            return Uo([], Bo(e))
        }
        function $o(e, t) {
            const n = t && t.dataset && t.dataset.tooltip && t.dataset.tooltip.callbacks;
            return n ? e.override(n) : e
        }
        const qo = {
            beforeTitle: J,
            title(e) {
                if (e.length > 0) {
                    const t = e[0]
                      , n = t.chart.data.labels
                      , s = n ? n.length : 0;
                    if (this && this.options && "dataset" === this.options.mode)
                        return t.dataset.label || "";
                    if (t.label)
                        return t.label;
                    if (s > 0 && t.dataIndex < s)
                        return n[t.dataIndex]
                }
                return ""
            },
            afterTitle: J,
            beforeBody: J,
            beforeLabel: J,
            label(e) {
                if (this && this.options && "dataset" === this.options.mode)
                    return e.label + ": " + e.formattedValue || e.formattedValue;
                let t = e.dataset.label || "";
                t && (t += ": ");
                const n = e.formattedValue;
                return te(n) || (t += n),
                t
            },
            labelColor(e) {
                const t = e.chart.getDatasetMeta(e.datasetIndex).controller.getStyle(e.dataIndex);
                return {
                    borderColor: t.borderColor,
                    backgroundColor: t.backgroundColor,
                    borderWidth: t.borderWidth,
                    borderDash: t.borderDash,
                    borderDashOffset: t.borderDashOffset,
                    borderRadius: 0
                }
            },
            labelTextColor() {
                return this.options.bodyColor
            },
            labelPointStyle(e) {
                const t = e.chart.getDatasetMeta(e.datasetIndex).controller.getStyle(e.dataIndex);
                return {
                    pointStyle: t.pointStyle,
                    rotation: t.rotation
                }
            },
            afterLabel: J,
            afterBody: J,
            beforeFooter: J,
            footer: J,
            afterFooter: J
        };
        function Xo(e, t, n, s) {
            const i = e[t].call(n, s);
            return void 0 === i ? qo[t].call(n, s) : i
        }
        class Qo extends Yi {
            static positioners = Fo;
            constructor(e) {
                super(),
                this.opacity = 0,
                this._active = [],
                this._eventPosition = void 0,
                this._size = void 0,
                this._cachedAnimations = void 0,
                this._tooltipItems = [],
                this.$animations = void 0,
                this.$context = void 0,
                this.chart = e.chart,
                this.options = e.options,
                this.dataPoints = void 0,
                this.title = void 0,
                this.beforeBody = void 0,
                this.body = void 0,
                this.afterBody = void 0,
                this.footer = void 0,
                this.xAlign = void 0,
                this.yAlign = void 0,
                this.x = void 0,
                this.y = void 0,
                this.height = void 0,
                this.width = void 0,
                this.caretX = void 0,
                this.caretY = void 0,
                this.labelColors = void 0,
                this.labelPointStyles = void 0,
                this.labelTextColors = void 0
            }
            initialize(e) {
                this.options = e,
                this._cachedAnimations = void 0,
                this.$context = void 0
            }
            _resolveAnimations() {
                const e = this._cachedAnimations;
                if (e)
                    return e;
                const t = this.chart
                  , n = this.options.setContext(this.getContext())
                  , s = n.enabled && t.options.animation && n.animations
                  , i = new Os(this.chart,s);
                return s._cacheable && (this._cachedAnimations = Object.freeze(i)),
                i
            }
            getContext() {
                return this.$context || (this.$context = (e = this.chart.getContext(),
                t = this,
                n = this._tooltipItems,
                Pn(e, {
                    tooltip: t,
                    tooltipItems: n,
                    type: "tooltip"
                })));
                var e, t, n
            }
            getTitle(e, t) {
                const {callbacks: n} = t
                  , s = Xo(n, "beforeTitle", this, e)
                  , i = Xo(n, "title", this, e)
                  , a = Xo(n, "afterTitle", this, e);
                let o = [];
                return o = Uo(o, Bo(s)),
                o = Uo(o, Bo(i)),
                o = Uo(o, Bo(a)),
                o
            }
            getBeforeBody(e, t) {
                return Yo(Xo(t.callbacks, "beforeBody", this, e))
            }
            getBody(e, t) {
                const {callbacks: n} = t
                  , s = [];
                return ce(e, (e=>{
                    const t = {
                        before: [],
                        lines: [],
                        after: []
                    }
                      , i = $o(n, e);
                    Uo(t.before, Bo(Xo(i, "beforeLabel", this, e))),
                    Uo(t.lines, Xo(i, "label", this, e)),
                    Uo(t.after, Bo(Xo(i, "afterLabel", this, e))),
                    s.push(t)
                }
                )),
                s
            }
            getAfterBody(e, t) {
                return Yo(Xo(t.callbacks, "afterBody", this, e))
            }
            getFooter(e, t) {
                const {callbacks: n} = t
                  , s = Xo(n, "beforeFooter", this, e)
                  , i = Xo(n, "footer", this, e)
                  , a = Xo(n, "afterFooter", this, e);
                let o = [];
                return o = Uo(o, Bo(s)),
                o = Uo(o, Bo(i)),
                o = Uo(o, Bo(a)),
                o
            }
            _createItems(e) {
                const t = this._active
                  , n = this.chart.data
                  , s = []
                  , i = []
                  , a = [];
                let o, r, l = [];
                for (o = 0,
                r = t.length; o < r; ++o)
                    l.push(Go(this.chart, t[o]));
                return e.filter && (l = l.filter(((t,s,i)=>e.filter(t, s, i, n)))),
                e.itemSort && (l = l.sort(((t,s)=>e.itemSort(t, s, n)))),
                ce(l, (t=>{
                    const n = $o(e.callbacks, t);
                    s.push(Xo(n, "labelColor", this, t)),
                    i.push(Xo(n, "labelPointStyle", this, t)),
                    a.push(Xo(n, "labelTextColor", this, t))
                }
                )),
                this.labelColors = s,
                this.labelPointStyles = i,
                this.labelTextColors = a,
                this.dataPoints = l,
                l
            }
            update(e, t) {
                const n = this.options.setContext(this.getContext())
                  , s = this._active;
                let i, a = [];
                if (s.length) {
                    const e = Fo[n.position].call(this, s, this._eventPosition);
                    a = this._createItems(n),
                    this.title = this.getTitle(a, n),
                    this.beforeBody = this.getBeforeBody(a, n),
                    this.body = this.getBody(a, n),
                    this.afterBody = this.getAfterBody(a, n),
                    this.footer = this.getFooter(a, n);
                    const t = this._size = Vo(this, n)
                      , o = Object.assign({}, e, t)
                      , r = Ko(this.chart, n, o)
                      , l = Wo(n, o, r, this.chart);
                    this.xAlign = r.xAlign,
                    this.yAlign = r.yAlign,
                    i = {
                        opacity: 1,
                        x: l.x,
                        y: l.y,
                        width: t.width,
                        height: t.height,
                        caretX: e.x,
                        caretY: e.y
                    }
                } else
                    0 !== this.opacity && (i = {
                        opacity: 0
                    });
                this._tooltipItems = a,
                this.$context = void 0,
                i && this._resolveAnimations().update(this, i),
                e && n.external && n.external.call(this, {
                    chart: this.chart,
                    tooltip: this,
                    replay: t
                })
            }
            drawCaret(e, t, n, s) {
                const i = this.getCaretPosition(e, n, s);
                t.lineTo(i.x1, i.y1),
                t.lineTo(i.x2, i.y2),
                t.lineTo(i.x3, i.y3)
            }
            getCaretPosition(e, t, n) {
                const {xAlign: s, yAlign: i} = this
                  , {caretSize: a, cornerRadius: o} = n
                  , {topLeft: r, topRight: l, bottomLeft: c, bottomRight: u} = Cn(o)
                  , {x: d, y: m} = e
                  , {width: h, height: g} = t;
                let p, f, x, v, _, b;
                return "center" === i ? (_ = m + g / 2,
                "left" === s ? (p = d,
                f = p - a,
                v = _ + a,
                b = _ - a) : (p = d + h,
                f = p + a,
                v = _ - a,
                b = _ + a),
                x = p) : (f = "left" === s ? d + Math.max(r, c) + a : "right" === s ? d + h - Math.max(l, u) - a : this.caretX,
                "top" === i ? (v = m,
                _ = v - a,
                p = f - a,
                x = f + a) : (v = m + g,
                _ = v + a,
                p = f + a,
                x = f - a),
                b = v),
                {
                    x1: p,
                    x2: f,
                    x3: x,
                    y1: v,
                    y2: _,
                    y3: b
                }
            }
            drawTitle(e, t, n) {
                const s = this.title
                  , i = s.length;
                let a, o, r;
                if (i) {
                    const l = ps(n.rtl, this.x, this.width);
                    for (e.x = zo(this, n.titleAlign, n),
                    t.textAlign = l.textAlign(n.titleAlign),
                    t.textBaseline = "middle",
                    a = wn(n.titleFont),
                    o = n.titleSpacing,
                    t.fillStyle = n.titleColor,
                    t.font = a.string,
                    r = 0; r < i; ++r)
                        t.fillText(s[r], l.x(e.x), e.y + a.lineHeight / 2),
                        e.y += a.lineHeight + o,
                        r + 1 === i && (e.y += n.titleMarginBottom - o)
                }
            }
            _drawColorBox(e, t, n, s, i) {
                const a = this.labelColors[n]
                  , o = this.labelPointStyles[n]
                  , {boxHeight: r, boxWidth: l, boxPadding: c} = i
                  , u = wn(i.bodyFont)
                  , d = zo(this, "left", i)
                  , m = s.x(d)
                  , h = r < u.lineHeight ? (u.lineHeight - r) / 2 : 0
                  , g = t.y + h;
                if (i.usePointStyle) {
                    const t = {
                        radius: Math.min(l, r) / 2,
                        pointStyle: o.pointStyle,
                        rotation: o.rotation,
                        borderWidth: 1
                    }
                      , n = s.leftForLtr(m, l) + l / 2
                      , c = g + r / 2;
                    e.strokeStyle = i.multiKeyBackground,
                    e.fillStyle = i.multiKeyBackground,
                    un(e, t, n, c),
                    e.strokeStyle = a.borderColor,
                    e.fillStyle = a.backgroundColor,
                    un(e, t, n, c)
                } else {
                    e.lineWidth = se(a.borderWidth) ? Math.max(...Object.values(a.borderWidth)) : a.borderWidth || 1,
                    e.strokeStyle = a.borderColor,
                    e.setLineDash(a.borderDash || []),
                    e.lineDashOffset = a.borderDashOffset || 0;
                    const t = s.leftForLtr(m, l - c)
                      , n = s.leftForLtr(s.xPlus(m, 1), l - c - 2)
                      , o = Cn(a.borderRadius);
                    Object.values(o).some((e=>0 !== e)) ? (e.beginPath(),
                    e.fillStyle = i.multiKeyBackground,
                    bn(e, {
                        x: t,
                        y: g,
                        w: l,
                        h: r,
                        radius: o
                    }),
                    e.fill(),
                    e.stroke(),
                    e.fillStyle = a.backgroundColor,
                    e.beginPath(),
                    bn(e, {
                        x: n,
                        y: g + 1,
                        w: l - 2,
                        h: r - 2,
                        radius: o
                    }),
                    e.fill()) : (e.fillStyle = i.multiKeyBackground,
                    e.fillRect(t, g, l, r),
                    e.strokeRect(t, g, l, r),
                    e.fillStyle = a.backgroundColor,
                    e.fillRect(n, g + 1, l - 2, r - 2))
                }
                e.fillStyle = this.labelTextColors[n]
            }
            drawBody(e, t, n) {
                const {body: s} = this
                  , {bodySpacing: i, bodyAlign: a, displayColors: o, boxHeight: r, boxWidth: l, boxPadding: c} = n
                  , u = wn(n.bodyFont);
                let d = u.lineHeight
                  , m = 0;
                const h = ps(n.rtl, this.x, this.width)
                  , g = function(n) {
                    t.fillText(n, h.x(e.x + m), e.y + d / 2),
                    e.y += d + i
                }
                  , p = h.textAlign(a);
                let f, x, v, _, b, T, E;
                for (t.textAlign = a,
                t.textBaseline = "middle",
                t.font = u.string,
                e.x = zo(this, p, n),
                t.fillStyle = n.bodyColor,
                ce(this.beforeBody, g),
                m = o && "right" !== p ? "center" === a ? l / 2 + c : l + 2 + c : 0,
                _ = 0,
                T = s.length; _ < T; ++_) {
                    for (f = s[_],
                    x = this.labelTextColors[_],
                    t.fillStyle = x,
                    ce(f.before, g),
                    v = f.lines,
                    o && v.length && (this._drawColorBox(t, e, _, h, n),
                    d = Math.max(u.lineHeight, r)),
                    b = 0,
                    E = v.length; b < E; ++b)
                        g(v[b]),
                        d = u.lineHeight;
                    ce(f.after, g)
                }
                m = 0,
                d = u.lineHeight,
                ce(this.afterBody, g),
                e.y -= i
            }
            drawFooter(e, t, n) {
                const s = this.footer
                  , i = s.length;
                let a, o;
                if (i) {
                    const r = ps(n.rtl, this.x, this.width);
                    for (e.x = zo(this, n.footerAlign, n),
                    e.y += n.footerMarginTop,
                    t.textAlign = r.textAlign(n.footerAlign),
                    t.textBaseline = "middle",
                    a = wn(n.footerFont),
                    t.fillStyle = n.footerColor,
                    t.font = a.string,
                    o = 0; o < i; ++o)
                        t.fillText(s[o], r.x(e.x), e.y + a.lineHeight / 2),
                        e.y += a.lineHeight + n.footerSpacing
                }
            }
            drawBackground(e, t, n, s) {
                const {xAlign: i, yAlign: a} = this
                  , {x: o, y: r} = e
                  , {width: l, height: c} = n
                  , {topLeft: u, topRight: d, bottomLeft: m, bottomRight: h} = Cn(s.cornerRadius);
                t.fillStyle = s.backgroundColor,
                t.strokeStyle = s.borderColor,
                t.lineWidth = s.borderWidth,
                t.beginPath(),
                t.moveTo(o + u, r),
                "top" === a && this.drawCaret(e, t, n, s),
                t.lineTo(o + l - d, r),
                t.quadraticCurveTo(o + l, r, o + l, r + d),
                "center" === a && "right" === i && this.drawCaret(e, t, n, s),
                t.lineTo(o + l, r + c - h),
                t.quadraticCurveTo(o + l, r + c, o + l - h, r + c),
                "bottom" === a && this.drawCaret(e, t, n, s),
                t.lineTo(o + m, r + c),
                t.quadraticCurveTo(o, r + c, o, r + c - m),
                "center" === a && "left" === i && this.drawCaret(e, t, n, s),
                t.lineTo(o, r + u),
                t.quadraticCurveTo(o, r, o + u, r),
                t.closePath(),
                t.fill(),
                s.borderWidth > 0 && t.stroke()
            }
            _updateAnimationTarget(e) {
                const t = this.chart
                  , n = this.$animations
                  , s = n && n.x
                  , i = n && n.y;
                if (s || i) {
                    const n = Fo[e.position].call(this, this._active, this._eventPosition);
                    if (!n)
                        return;
                    const a = this._size = Vo(this, e)
                      , o = Object.assign({}, n, this._size)
                      , r = Ko(t, e, o)
                      , l = Wo(e, o, r, t);
                    s._to === l.x && i._to === l.y || (this.xAlign = r.xAlign,
                    this.yAlign = r.yAlign,
                    this.width = a.width,
                    this.height = a.height,
                    this.caretX = n.x,
                    this.caretY = n.y,
                    this._resolveAnimations().update(this, l))
                }
            }
            _willRender() {
                return !!this.opacity
            }
            draw(e) {
                const t = this.options.setContext(this.getContext());
                let n = this.opacity;
                if (!n)
                    return;
                this._updateAnimationTarget(t);
                const s = {
                    width: this.width,
                    height: this.height
                }
                  , i = {
                    x: this.x,
                    y: this.y
                };
                n = Math.abs(n) < .001 ? 0 : n;
                const a = Nn(t.padding)
                  , o = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;
                t.enabled && o && (e.save(),
                e.globalAlpha = n,
                this.drawBackground(i, e, s, t),
                fs(e, t.textDirection),
                i.y += a.top,
                this.drawTitle(i, e, t),
                this.drawBody(i, e, t),
                this.drawFooter(i, e, t),
                xs(e, t.textDirection),
                e.restore())
            }
            getActiveElements() {
                return this._active || []
            }
            setActiveElements(e, t) {
                const n = this._active
                  , s = e.map((({datasetIndex: e, index: t})=>{
                    const n = this.chart.getDatasetMeta(e);
                    if (!n)
                        throw new Error("Cannot find a dataset at index " + e);
                    return {
                        datasetIndex: e,
                        element: n.data[t],
                        index: t
                    }
                }
                ))
                  , i = !ue(n, s)
                  , a = this._positionChanged(s, t);
                (i || a) && (this._active = s,
                this._eventPosition = t,
                this._ignoreReplayEvents = !0,
                this.update(!0))
            }
            handleEvent(e, t, n=!0) {
                if (t && this._ignoreReplayEvents)
                    return !1;
                this._ignoreReplayEvents = !1;
                const s = this.options
                  , i = this._active || []
                  , a = this._getActiveElements(e, i, t, n)
                  , o = this._positionChanged(a, e)
                  , r = t || !ue(a, i) || o;
                return r && (this._active = a,
                (s.enabled || s.external) && (this._eventPosition = {
                    x: e.x,
                    y: e.y
                },
                this.update(!0, t))),
                r
            }
            _getActiveElements(e, t, n, s) {
                const i = this.options;
                if ("mouseout" === e.type)
                    return [];
                if (!s)
                    return t;
                const a = this.chart.getElementsAtEventForMode(e, i.mode, i, n);
                return i.reverse && a.reverse(),
                a
            }
            _positionChanged(e, t) {
                const {caretX: n, caretY: s, options: i} = this
                  , a = Fo[i.position].call(this, e, t);
                return !1 !== a && (n !== a.x || s !== a.y)
            }
        }
        var Zo = {
            id: "tooltip",
            _element: Qo,
            positioners: Fo,
            afterInit(e, t, n) {
                n && (e.tooltip = new Qo({
                    chart: e,
                    options: n
                }))
            },
            beforeUpdate(e, t, n) {
                e.tooltip && e.tooltip.initialize(n)
            },
            reset(e, t, n) {
                e.tooltip && e.tooltip.initialize(n)
            },
            afterDraw(e) {
                const t = e.tooltip;
                if (t && t._willRender()) {
                    const n = {
                        tooltip: t
                    };
                    if (!1 === e.notifyPlugins("beforeTooltipDraw", {
                        ...n,
                        cancelable: !0
                    }))
                        return;
                    t.draw(e.ctx),
                    e.notifyPlugins("afterTooltipDraw", n)
                }
            },
            afterEvent(e, t) {
                if (e.tooltip) {
                    const n = t.replay;
                    e.tooltip.handleEvent(t.event, n, t.inChartArea) && (t.changed = !0)
                }
            },
            defaults: {
                enabled: !0,
                external: null,
                position: "average",
                backgroundColor: "rgba(0,0,0,0.8)",
                titleColor: "#fff",
                titleFont: {
                    weight: "bold"
                },
                titleSpacing: 2,
                titleMarginBottom: 6,
                titleAlign: "left",
                bodyColor: "#fff",
                bodySpacing: 2,
                bodyFont: {},
                bodyAlign: "left",
                footerColor: "#fff",
                footerSpacing: 2,
                footerMarginTop: 6,
                footerFont: {
                    weight: "bold"
                },
                footerAlign: "left",
                padding: 6,
                caretPadding: 2,
                caretSize: 5,
                cornerRadius: 6,
                boxHeight: (e,t)=>t.bodyFont.size,
                boxWidth: (e,t)=>t.bodyFont.size,
                multiKeyBackground: "#fff",
                displayColors: !0,
                boxPadding: 0,
                borderColor: "rgba(0,0,0,0)",
                borderWidth: 0,
                animation: {
                    duration: 400,
                    easing: "easeOutQuart"
                },
                animations: {
                    numbers: {
                        type: "number",
                        properties: ["x", "y", "width", "height", "caretX", "caretY"]
                    },
                    opacity: {
                        easing: "linear",
                        duration: 200
                    }
                },
                callbacks: qo
            },
            defaultRoutes: {
                bodyFont: "font",
                footerFont: "font",
                titleFont: "font"
            },
            descriptors: {
                _scriptable: e=>"filter" !== e && "itemSort" !== e && "external" !== e,
                _indexable: !1,
                callbacks: {
                    _scriptable: !1,
                    _indexable: !1
                },
                animation: {
                    _fallback: !1
                },
                animations: {
                    _fallback: "animation"
                }
            },
            additionalOptionScopes: ["interaction"]
        }
          , Jo = Object.freeze({
            __proto__: null,
            Colors: lo,
            Decimation: mo,
            Filler: wo,
            Legend: Ao,
            SubTitle: Do,
            Title: Ro,
            Tooltip: Zo
        });
        function er(e, t, n, s) {
            const i = e.indexOf(t);
            if (-1 === i)
                return ((e,t,n,s)=>("string" == typeof t ? (n = e.push(t) - 1,
                s.unshift({
                    index: n,
                    label: t
                })) : isNaN(t) && (n = null),
                n))(e, t, n, s);
            return i !== e.lastIndexOf(t) ? n : i
        }
        function tr(e) {
            const t = this.getLabels();
            return e >= 0 && e < t.length ? t[e] : e
        }
        class nr extends na {
            static id = "category";
            static defaults = {
                ticks: {
                    callback: tr
                }
            };
            constructor(e) {
                super(e),
                this._startValue = void 0,
                this._valueRange = 0,
                this._addedLabels = []
            }
            init(e) {
                const t = this._addedLabels;
                if (t.length) {
                    const e = this.getLabels();
                    for (const {index: n, label: s} of t)
                        e[n] === s && e.splice(n, 1);
                    this._addedLabels = []
                }
                super.init(e)
            }
            parse(e, t) {
                if (te(e))
                    return null;
                const n = this.getLabels();
                return ((e,t)=>null === e ? null : We(Math.round(e), 0, t))(t = isFinite(t) && n[t] === e ? t : er(n, e, oe(t, e), this._addedLabels), n.length - 1)
            }
            determineDataLimits() {
                const {minDefined: e, maxDefined: t} = this.getUserBounds();
                let {min: n, max: s} = this.getMinMax(!0);
                "ticks" === this.options.bounds && (e || (n = 0),
                t || (s = this.getLabels().length - 1)),
                this.min = n,
                this.max = s
            }
            buildTicks() {
                const e = this.min
                  , t = this.max
                  , n = this.options.offset
                  , s = [];
                let i = this.getLabels();
                i = 0 === e && t === i.length - 1 ? i : i.slice(e, t + 1),
                this._valueRange = Math.max(i.length - (n ? 0 : 1), 1),
                this._startValue = this.min - (n ? .5 : 0);
                for (let n = e; n <= t; n++)
                    s.push({
                        value: n
                    });
                return s
            }
            getLabelForValue(e) {
                return tr.call(this, e)
            }
            configure() {
                super.configure(),
                this.isHorizontal() || (this._reversePixels = !this._reversePixels)
            }
            getPixelForValue(e) {
                return "number" != typeof e && (e = this.parse(e)),
                null === e ? NaN : this.getPixelForDecimal((e - this._startValue) / this._valueRange)
            }
            getPixelForTick(e) {
                const t = this.ticks;
                return e < 0 || e > t.length - 1 ? null : this.getPixelForValue(t[e].value)
            }
            getValueForPixel(e) {
                return Math.round(this._startValue + this.getDecimalForPixel(e) * this._valueRange)
            }
            getBasePixel() {
                return this.bottom
            }
        }
        function sr(e, t) {
            const n = []
              , {bounds: s, step: i, min: a, max: o, precision: r, count: l, maxTicks: c, maxDigits: u, includeBounds: d} = e
              , m = i || 1
              , h = c - 1
              , {min: g, max: p} = t
              , f = !te(a)
              , x = !te(o)
              , v = !te(l)
              , _ = (p - g) / (u + 1);
            let b, T, E, I, S = Me((p - g) / h / m) * m;
            if (S < 1e-14 && !f && !x)
                return [{
                    value: g
                }, {
                    value: p
                }];
            I = Math.ceil(p / S) - Math.floor(g / S),
            I > h && (S = Me(I * S / h / m) * m),
            te(r) || (b = Math.pow(10, r),
            S = Math.ceil(S * b) / b),
            "ticks" === s ? (T = Math.floor(g / S) * S,
            E = Math.ceil(p / S) * S) : (T = g,
            E = p),
            f && x && i && function(e, t) {
                const n = Math.round(e);
                return n - t <= e && n + t >= e
            }((o - a) / i, S / 1e3) ? (I = Math.round(Math.min((o - a) / S, c)),
            S = (o - a) / I,
            T = a,
            E = o) : v ? (T = f ? a : T,
            E = x ? o : E,
            I = l - 1,
            S = (E - T) / I) : (I = (E - T) / S,
            I = Ae(I, Math.round(I), S / 1e3) ? Math.round(I) : Math.ceil(I));
            const y = Math.max(Ue(S), Ue(T));
            b = Math.pow(10, te(r) ? y : r),
            T = Math.round(T * b) / b,
            E = Math.round(E * b) / b;
            let j = 0;
            for (f && (d && T !== a ? (n.push({
                value: a
            }),
            T < a && j++,
            Ae(Math.round((T + j * S) * b) / b, a, ir(a, _, e)) && j++) : T < a && j++); j < I; ++j)
                n.push({
                    value: Math.round((T + j * S) * b) / b
                });
            return x && d && E !== o ? n.length && Ae(n[n.length - 1].value, o, ir(o, _, e)) ? n[n.length - 1].value = o : n.push({
                value: o
            }) : x && E !== o || n.push({
                value: E
            }),
            n
        }
        function ir(e, t, {horizontal: n, minRotation: s}) {
            const i = De(s)
              , a = (n ? Math.sin(i) : Math.cos(i)) || .001
              , o = .75 * t * ("" + e).length;
            return Math.min(t / a, o)
        }
        class ar extends na {
            constructor(e) {
                super(e),
                this.start = void 0,
                this.end = void 0,
                this._startValue = void 0,
                this._endValue = void 0,
                this._valueRange = 0
            }
            parse(e, t) {
                return te(e) || ("number" == typeof e || e instanceof Number) && !isFinite(+e) ? null : +e
            }
            handleTickRangeOptions() {
                const {beginAtZero: e} = this.options
                  , {minDefined: t, maxDefined: n} = this.getUserBounds();
                let {min: s, max: i} = this;
                const a = e=>s = t ? s : e
                  , o = e=>i = n ? i : e;
                if (e) {
                    const e = Le(s)
                      , t = Le(i);
                    e < 0 && t < 0 ? o(0) : e > 0 && t > 0 && a(0)
                }
                if (s === i) {
                    let t = 0 === i ? 1 : Math.abs(.05 * i);
                    o(i + t),
                    e || a(s - t)
                }
                this.min = s,
                this.max = i
            }
            getTickLimit() {
                const e = this.options.ticks;
                let t, {maxTicksLimit: n, stepSize: s} = e;
                return s ? (t = Math.ceil(this.max / s) - Math.floor(this.min / s) + 1,
                t > 1e3 && (console.warn(`scales.${this.id}.ticks.stepSize: ${s} would result generating up to ${t} ticks. Limiting to 1000.`),
                t = 1e3)) : (t = this.computeTickLimit(),
                n = n || 11),
                n && (t = Math.min(n, t)),
                t
            }
            computeTickLimit() {
                return Number.POSITIVE_INFINITY
            }
            buildTicks() {
                const e = this.options
                  , t = e.ticks;
                let n = this.getTickLimit();
                n = Math.max(2, n);
                const s = sr({
                    maxTicks: n,
                    bounds: e.bounds,
                    min: e.min,
                    max: e.max,
                    precision: t.precision,
                    step: t.stepSize,
                    count: t.count,
                    maxDigits: this._maxDigits(),
                    horizontal: this.isHorizontal(),
                    minRotation: t.minRotation || 0,
                    includeBounds: !1 !== t.includeBounds
                }, this._range || this);
                return "ticks" === e.bounds && ke(s, this, "value"),
                e.reverse ? (s.reverse(),
                this.start = this.max,
                this.end = this.min) : (this.start = this.min,
                this.end = this.max),
                s
            }
            configure() {
                const e = this.ticks;
                let t = this.min
                  , n = this.max;
                if (super.configure(),
                this.options.offset && e.length) {
                    const s = (n - t) / Math.max(e.length - 1, 1) / 2;
                    t -= s,
                    n += s
                }
                this._startValue = t,
                this._endValue = n,
                this._valueRange = n - t
            }
            getLabelForValue(e) {
                return Xt(e, this.chart.options.locale, this.options.ticks.format)
            }
        }
        class or extends ar {
            static id = "linear";
            static defaults = {
                ticks: {
                    callback: Zt.formatters.numeric
                }
            };
            determineDataLimits() {
                const {min: e, max: t} = this.getMinMax(!0);
                this.min = ie(e) ? e : 0,
                this.max = ie(t) ? t : 1,
                this.handleTickRangeOptions()
            }
            computeTickLimit() {
                const e = this.isHorizontal()
                  , t = e ? this.width : this.height
                  , n = De(this.options.ticks.minRotation)
                  , s = (e ? Math.sin(n) : Math.cos(n)) || .001
                  , i = this._resolveTickFontOptions(0);
                return Math.ceil(t / Math.min(40, i.lineHeight / s))
            }
            getPixelForValue(e) {
                return null === e ? NaN : this.getPixelForDecimal((e - this._startValue) / this._valueRange)
            }
            getValueForPixel(e) {
                return this._startValue + this.getDecimalForPixel(e) * this._valueRange
            }
        }
        const rr = e=>Math.floor(Pe(e))
          , lr = (e,t)=>Math.pow(10, rr(e) + t);
        function cr(e) {
            return 1 === e / Math.pow(10, rr(e))
        }
        function ur(e, t, n) {
            const s = Math.pow(10, n)
              , i = Math.floor(e / s);
            return Math.ceil(t / s) - i
        }
        function dr(e, {min: t, max: n}) {
            t = ae(e.min, t);
            const s = []
              , i = rr(t);
            let a = function(e, t) {
                let n = rr(t - e);
                for (; ur(e, t, n) > 10; )
                    n++;
                for (; ur(e, t, n) < 10; )
                    n--;
                return Math.min(n, rr(e))
            }(t, n)
              , o = a < 0 ? Math.pow(10, Math.abs(a)) : 1;
            const r = Math.pow(10, a)
              , l = i > a ? Math.pow(10, i) : 0
              , c = Math.round((t - l) * o) / o
              , u = Math.floor((t - l) / r / 10) * r * 10;
            let d = Math.floor((c - u) / Math.pow(10, a))
              , m = ae(e.min, Math.round((l + u + d * Math.pow(10, a)) * o) / o);
            for (; m < n; )
                s.push({
                    value: m,
                    major: cr(m),
                    significand: d
                }),
                d >= 10 ? d = d < 15 ? 15 : 20 : d++,
                d >= 20 && (a++,
                d = 2,
                o = a >= 0 ? 1 : o),
                m = Math.round((l + u + d * Math.pow(10, a)) * o) / o;
            const h = ae(e.max, m);
            return s.push({
                value: h,
                major: cr(h),
                significand: d
            }),
            s
        }
        class mr extends na {
            static id = "logarithmic";
            static defaults = {
                ticks: {
                    callback: Zt.formatters.logarithmic,
                    major: {
                        enabled: !0
                    }
                }
            };
            constructor(e) {
                super(e),
                this.start = void 0,
                this.end = void 0,
                this._startValue = void 0,
                this._valueRange = 0
            }
            parse(e, t) {
                const n = ar.prototype.parse.apply(this, [e, t]);
                if (0 !== n)
                    return ie(n) && n > 0 ? n : null;
                this._zero = !0
            }
            determineDataLimits() {
                const {min: e, max: t} = this.getMinMax(!0);
                this.min = ie(e) ? Math.max(0, e) : null,
                this.max = ie(t) ? Math.max(0, t) : null,
                this.options.beginAtZero && (this._zero = !0),
                this._zero && this.min !== this._suggestedMin && !ie(this._userMin) && (this.min = e === lr(this.min, 0) ? lr(this.min, -1) : lr(this.min, 0)),
                this.handleTickRangeOptions()
            }
            handleTickRangeOptions() {
                const {minDefined: e, maxDefined: t} = this.getUserBounds();
                let n = this.min
                  , s = this.max;
                const i = t=>n = e ? n : t
                  , a = e=>s = t ? s : e;
                n === s && (n <= 0 ? (i(1),
                a(10)) : (i(lr(n, -1)),
                a(lr(s, 1)))),
                n <= 0 && i(lr(s, -1)),
                s <= 0 && a(lr(n, 1)),
                this.min = n,
                this.max = s
            }
            buildTicks() {
                const e = this.options
                  , t = dr({
                    min: this._userMin,
                    max: this._userMax
                }, this);
                return "ticks" === e.bounds && ke(t, this, "value"),
                e.reverse ? (t.reverse(),
                this.start = this.max,
                this.end = this.min) : (this.start = this.min,
                this.end = this.max),
                t
            }
            getLabelForValue(e) {
                return void 0 === e ? "0" : Xt(e, this.chart.options.locale, this.options.ticks.format)
            }
            configure() {
                const e = this.min;
                super.configure(),
                this._startValue = Pe(e),
                this._valueRange = Pe(this.max) - Pe(e)
            }
            getPixelForValue(e) {
                return void 0 !== e && 0 !== e || (e = this.min),
                null === e || isNaN(e) ? NaN : this.getPixelForDecimal(e === this.min ? 0 : (Pe(e) - this._startValue) / this._valueRange)
            }
            getValueForPixel(e) {
                const t = this.getDecimalForPixel(e);
                return Math.pow(10, this._startValue + t * this._valueRange)
            }
        }
        function hr(e) {
            const t = e.ticks;
            if (t.display && e.display) {
                const e = Nn(t.backdropPadding);
                return oe(t.font && t.font.size, an.font.size) + e.height
            }
            return 0
        }
        function gr(e, t, n, s, i) {
            return e === s || e === i ? {
                start: t - n / 2,
                end: t + n / 2
            } : e < s || e > i ? {
                start: t - n,
                end: t
            } : {
                start: t,
                end: t + n
            }
        }
        function pr(e) {
            const t = {
                l: e.left + e._padding.left,
                r: e.right - e._padding.right,
                t: e.top + e._padding.top,
                b: e.bottom - e._padding.bottom
            }
              , n = Object.assign({}, t)
              , s = []
              , i = []
              , a = e._pointLabels.length
              , o = e.options.pointLabels
              , r = o.centerPointLabels ? Ie / a : 0;
            for (let d = 0; d < a; d++) {
                const a = o.setContext(e.getPointLabelContext(d));
                i[d] = a.padding;
                const m = e.getPointPosition(d, e.drawingArea + i[d], r)
                  , h = wn(a.font)
                  , g = (l = e.ctx,
                c = h,
                u = ne(u = e._pointLabels[d]) ? u : [u],
                {
                    w: rn(l, c.string, u),
                    h: u.length * c.lineHeight
                });
                s[d] = g;
                const p = He(e.getIndexAngle(d) + r)
                  , f = Math.round(Fe(p));
                fr(n, t, p, gr(f, m.x, g.w, 0, 180), gr(f, m.y, g.h, 90, 270))
            }
            var l, c, u;
            e.setCenterPoint(t.l - n.l, n.r - t.r, t.t - n.t, n.b - t.b),
            e._pointLabelItems = function(e, t, n) {
                const s = []
                  , i = e._pointLabels.length
                  , a = e.options
                  , o = hr(a) / 2
                  , r = e.drawingArea
                  , l = a.pointLabels.centerPointLabels ? Ie / i : 0;
                for (let a = 0; a < i; a++) {
                    const i = e.getPointPosition(a, r + o + n[a], l)
                      , c = Math.round(Fe(He(i.angle + Ne)))
                      , u = t[a]
                      , d = _r(i.y, u.h, c)
                      , m = xr(c)
                      , h = vr(i.x, u.w, m);
                    s.push({
                        x: i.x,
                        y: d,
                        textAlign: m,
                        left: h,
                        top: d,
                        right: h + u.w,
                        bottom: d + u.h
                    })
                }
                return s
            }(e, s, i)
        }
        function fr(e, t, n, s, i) {
            const a = Math.abs(Math.sin(n))
              , o = Math.abs(Math.cos(n));
            let r = 0
              , l = 0;
            s.start < t.l ? (r = (t.l - s.start) / a,
            e.l = Math.min(e.l, t.l - r)) : s.end > t.r && (r = (s.end - t.r) / a,
            e.r = Math.max(e.r, t.r + r)),
            i.start < t.t ? (l = (t.t - i.start) / o,
            e.t = Math.min(e.t, t.t - l)) : i.end > t.b && (l = (i.end - t.b) / o,
            e.b = Math.max(e.b, t.b + l))
        }
        function xr(e) {
            return 0 === e || 180 === e ? "center" : e < 180 ? "left" : "right"
        }
        function vr(e, t, n) {
            return "right" === n ? e -= t : "center" === n && (e -= t / 2),
            e
        }
        function _r(e, t, n) {
            return 90 === n || 270 === n ? e -= t / 2 : (n > 270 || n < 90) && (e -= t),
            e
        }
        function br(e, t, n, s) {
            const {ctx: i} = e;
            if (n)
                i.arc(e.xCenter, e.yCenter, t, 0, Se);
            else {
                let n = e.getPointPosition(0, t);
                i.moveTo(n.x, n.y);
                for (let a = 1; a < s; a++)
                    n = e.getPointPosition(a, t),
                    i.lineTo(n.x, n.y)
            }
        }
        class Tr extends ar {
            static id = "radialLinear";
            static defaults = {
                display: !0,
                animate: !0,
                position: "chartArea",
                angleLines: {
                    display: !0,
                    lineWidth: 1,
                    borderDash: [],
                    borderDashOffset: 0
                },
                grid: {
                    circular: !1
                },
                startAngle: 0,
                ticks: {
                    showLabelBackdrop: !0,
                    callback: Zt.formatters.numeric
                },
                pointLabels: {
                    backdropColor: void 0,
                    backdropPadding: 2,
                    display: !0,
                    font: {
                        size: 10
                    },
                    callback: e=>e,
                    padding: 5,
                    centerPointLabels: !1
                }
            };
            static defaultRoutes = {
                "angleLines.color": "borderColor",
                "pointLabels.color": "color",
                "ticks.color": "color"
            };
            static descriptors = {
                angleLines: {
                    _fallback: "grid"
                }
            };
            constructor(e) {
                super(e),
                this.xCenter = void 0,
                this.yCenter = void 0,
                this.drawingArea = void 0,
                this._pointLabels = [],
                this._pointLabelItems = []
            }
            setDimensions() {
                const e = this._padding = Nn(hr(this.options) / 2)
                  , t = this.width = this.maxWidth - e.width
                  , n = this.height = this.maxHeight - e.height;
                this.xCenter = Math.floor(this.left + t / 2 + e.left),
                this.yCenter = Math.floor(this.top + n / 2 + e.top),
                this.drawingArea = Math.floor(Math.min(t, n) / 2)
            }
            determineDataLimits() {
                const {min: e, max: t} = this.getMinMax(!1);
                this.min = ie(e) && !isNaN(e) ? e : 0,
                this.max = ie(t) && !isNaN(t) ? t : 0,
                this.handleTickRangeOptions()
            }
            computeTickLimit() {
                return Math.ceil(this.drawingArea / hr(this.options))
            }
            generateTickLabels(e) {
                ar.prototype.generateTickLabels.call(this, e),
                this._pointLabels = this.getLabels().map(((e,t)=>{
                    const n = le(this.options.pointLabels.callback, [e, t], this);
                    return n || 0 === n ? n : ""
                }
                )).filter(((e,t)=>this.chart.getDataVisibility(t)))
            }
            fit() {
                const e = this.options;
                e.display && e.pointLabels.display ? pr(this) : this.setCenterPoint(0, 0, 0, 0)
            }
            setCenterPoint(e, t, n, s) {
                this.xCenter += Math.floor((e - t) / 2),
                this.yCenter += Math.floor((n - s) / 2),
                this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(e, t, n, s))
            }
            getIndexAngle(e) {
                return He(e * (Se / (this._pointLabels.length || 1)) + De(this.options.startAngle || 0))
            }
            getDistanceFromCenterForValue(e) {
                if (te(e))
                    return NaN;
                const t = this.drawingArea / (this.max - this.min);
                return this.options.reverse ? (this.max - e) * t : (e - this.min) * t
            }
            getValueForDistanceFromCenter(e) {
                if (te(e))
                    return NaN;
                const t = e / (this.drawingArea / (this.max - this.min));
                return this.options.reverse ? this.max - t : this.min + t
            }
            getPointLabelContext(e) {
                const t = this._pointLabels || [];
                if (e >= 0 && e < t.length) {
                    const n = t[e];
                    return function(e, t, n) {
                        return Pn(e, {
                            label: n,
                            index: t,
                            type: "pointLabel"
                        })
                    }(this.getContext(), e, n)
                }
            }
            getPointPosition(e, t, n=0) {
                const s = this.getIndexAngle(e) - Ne + n;
                return {
                    x: Math.cos(s) * t + this.xCenter,
                    y: Math.sin(s) * t + this.yCenter,
                    angle: s
                }
            }
            getPointPositionForValue(e, t) {
                return this.getPointPosition(e, this.getDistanceFromCenterForValue(t))
            }
            getBasePosition(e) {
                return this.getPointPositionForValue(e || 0, this.getBaseValue())
            }
            getPointLabelPosition(e) {
                const {left: t, top: n, right: s, bottom: i} = this._pointLabelItems[e];
                return {
                    left: t,
                    top: n,
                    right: s,
                    bottom: i
                }
            }
            drawBackground() {
                const {backgroundColor: e, grid: {circular: t}} = this.options;
                if (e) {
                    const n = this.ctx;
                    n.save(),
                    n.beginPath(),
                    br(this, this.getDistanceFromCenterForValue(this._endValue), t, this._pointLabels.length),
                    n.closePath(),
                    n.fillStyle = e,
                    n.fill(),
                    n.restore()
                }
            }
            drawGrid() {
                const e = this.ctx
                  , t = this.options
                  , {angleLines: n, grid: s, border: i} = t
                  , a = this._pointLabels.length;
                let o, r, l;
                if (t.pointLabels.display && function(e, t) {
                    const {ctx: n, options: {pointLabels: s}} = e;
                    for (let i = t - 1; i >= 0; i--) {
                        const t = s.setContext(e.getPointLabelContext(i))
                          , a = wn(t.font)
                          , {x: o, y: r, textAlign: l, left: c, top: u, right: d, bottom: m} = e._pointLabelItems[i]
                          , {backdropColor: h} = t;
                        if (!te(h)) {
                            const e = Cn(t.borderRadius)
                              , s = Nn(t.backdropPadding);
                            n.fillStyle = h;
                            const i = c - s.left
                              , a = u - s.top
                              , o = d - c + s.width
                              , r = m - u + s.height;
                            Object.values(e).some((e=>0 !== e)) ? (n.beginPath(),
                            bn(n, {
                                x: i,
                                y: a,
                                w: o,
                                h: r,
                                radius: e
                            }),
                            n.fill()) : n.fillRect(i, a, o, r)
                        }
                        xn(n, e._pointLabels[i], o, r + a.lineHeight / 2, a, {
                            color: t.color,
                            textAlign: l,
                            textBaseline: "middle"
                        })
                    }
                }(this, a),
                s.display && this.ticks.forEach(((e,t)=>{
                    if (0 !== t) {
                        r = this.getDistanceFromCenterForValue(e.value);
                        const n = this.getContext(t)
                          , o = s.setContext(n)
                          , l = i.setContext(n);
                        !function(e, t, n, s, i) {
                            const a = e.ctx
                              , o = t.circular
                              , {color: r, lineWidth: l} = t;
                            !o && !s || !r || !l || n < 0 || (a.save(),
                            a.strokeStyle = r,
                            a.lineWidth = l,
                            a.setLineDash(i.dash),
                            a.lineDashOffset = i.dashOffset,
                            a.beginPath(),
                            br(e, n, o, s),
                            a.closePath(),
                            a.stroke(),
                            a.restore())
                        }(this, o, r, a, l)
                    }
                }
                )),
                n.display) {
                    for (e.save(),
                    o = a - 1; o >= 0; o--) {
                        const s = n.setContext(this.getPointLabelContext(o))
                          , {color: i, lineWidth: a} = s;
                        a && i && (e.lineWidth = a,
                        e.strokeStyle = i,
                        e.setLineDash(s.borderDash),
                        e.lineDashOffset = s.borderDashOffset,
                        r = this.getDistanceFromCenterForValue(t.ticks.reverse ? this.min : this.max),
                        l = this.getPointPosition(o, r),
                        e.beginPath(),
                        e.moveTo(this.xCenter, this.yCenter),
                        e.lineTo(l.x, l.y),
                        e.stroke())
                    }
                    e.restore()
                }
            }
            drawBorder() {}
            drawLabels() {
                const e = this.ctx
                  , t = this.options
                  , n = t.ticks;
                if (!n.display)
                    return;
                const s = this.getIndexAngle(0);
                let i, a;
                e.save(),
                e.translate(this.xCenter, this.yCenter),
                e.rotate(s),
                e.textAlign = "center",
                e.textBaseline = "middle",
                this.ticks.forEach(((s,o)=>{
                    if (0 === o && !t.reverse)
                        return;
                    const r = n.setContext(this.getContext(o))
                      , l = wn(r.font);
                    if (i = this.getDistanceFromCenterForValue(this.ticks[o].value),
                    r.showLabelBackdrop) {
                        e.font = l.string,
                        a = e.measureText(s.label).width,
                        e.fillStyle = r.backdropColor;
                        const t = Nn(r.backdropPadding);
                        e.fillRect(-a / 2 - t.left, -i - l.size / 2 - t.top, a + t.width, l.size + t.height)
                    }
                    xn(e, s.label, 0, -i, l, {
                        color: r.color
                    })
                }
                )),
                e.restore()
            }
            drawTitle() {}
        }
        const Er = {
            millisecond: {
                common: !0,
                size: 1,
                steps: 1e3
            },
            second: {
                common: !0,
                size: 1e3,
                steps: 60
            },
            minute: {
                common: !0,
                size: 6e4,
                steps: 60
            },
            hour: {
                common: !0,
                size: 36e5,
                steps: 24
            },
            day: {
                common: !0,
                size: 864e5,
                steps: 30
            },
            week: {
                common: !1,
                size: 6048e5,
                steps: 4
            },
            month: {
                common: !0,
                size: 2628e6,
                steps: 12
            },
            quarter: {
                common: !1,
                size: 7884e6,
                steps: 4
            },
            year: {
                common: !0,
                size: 3154e7
            }
        }
          , Ir = Object.keys(Er);
        function Sr(e, t) {
            return e - t
        }
        function yr(e, t) {
            if (te(t))
                return null;
            const n = e._adapter
              , {parser: s, round: i, isoWeekday: a} = e._parseOpts;
            let o = t;
            return "function" == typeof s && (o = s(o)),
            ie(o) || (o = "string" == typeof s ? n.parse(o, s) : n.parse(o)),
            null === o ? null : (i && (o = "week" !== i || !Re(a) && !0 !== a ? n.startOf(o, i) : n.startOf(o, "isoWeek", a)),
            +o)
        }
        function jr(e, t, n, s) {
            const i = Ir.length;
            for (let a = Ir.indexOf(e); a < i - 1; ++a) {
                const e = Er[Ir[a]]
                  , i = e.steps ? e.steps : Number.MAX_SAFE_INTEGER;
                if (e.common && Math.ceil((n - t) / (i * e.size)) <= s)
                    return Ir[a]
            }
            return Ir[i - 1]
        }
        function Cr(e, t, n) {
            if (n) {
                if (n.length) {
                    const {lo: s, hi: i} = Ye(n, t);
                    e[n[s] >= t ? n[s] : n[i]] = !0
                }
            } else
                e[t] = !0
        }
        function Nr(e, t, n) {
            const s = []
              , i = {}
              , a = t.length;
            let o, r;
            for (o = 0; o < a; ++o)
                r = t[o],
                i[r] = o,
                s.push({
                    value: r,
                    major: !1
                });
            return 0 !== a && n ? function(e, t, n, s) {
                const i = e._adapter
                  , a = +i.startOf(t[0].value, s)
                  , o = t[t.length - 1].value;
                let r, l;
                for (r = a; r <= o; r = +i.add(r, 1, s))
                    l = n[r],
                    l >= 0 && (t[l].major = !0);
                return t
            }(e, s, i, n) : s
        }
        class wr extends na {
            static id = "time";
            static defaults = {
                bounds: "data",
                adapters: {},
                time: {
                    parser: !1,
                    unit: !1,
                    round: !1,
                    isoWeekday: !1,
                    minUnit: "millisecond",
                    displayFormats: {}
                },
                ticks: {
                    source: "auto",
                    callback: !1,
                    major: {
                        enabled: !1
                    }
                }
            };
            constructor(e) {
                super(e),
                this._cache = {
                    data: [],
                    labels: [],
                    all: []
                },
                this._unit = "day",
                this._majorUnit = void 0,
                this._offsets = {},
                this._normalized = !1,
                this._parseOpts = void 0
            }
            init(e, t={}) {
                const n = e.time || (e.time = {})
                  , s = this._adapter = new li._date(e.adapters.date);
                s.init(t),
                pe(n.displayFormats, s.formats()),
                this._parseOpts = {
                    parser: n.parser,
                    round: n.round,
                    isoWeekday: n.isoWeekday
                },
                super.init(e),
                this._normalized = t.normalized
            }
            parse(e, t) {
                return void 0 === e ? null : yr(this, e)
            }
            beforeLayout() {
                super.beforeLayout(),
                this._cache = {
                    data: [],
                    labels: [],
                    all: []
                }
            }
            determineDataLimits() {
                const e = this.options
                  , t = this._adapter
                  , n = e.time.unit || "day";
                let {min: s, max: i, minDefined: a, maxDefined: o} = this.getUserBounds();
                function r(e) {
                    a || isNaN(e.min) || (s = Math.min(s, e.min)),
                    o || isNaN(e.max) || (i = Math.max(i, e.max))
                }
                a && o || (r(this._getLabelBounds()),
                "ticks" === e.bounds && "labels" === e.ticks.source || r(this.getMinMax(!1))),
                s = ie(s) && !isNaN(s) ? s : +t.startOf(Date.now(), n),
                i = ie(i) && !isNaN(i) ? i : +t.endOf(Date.now(), n) + 1,
                this.min = Math.min(s, i - 1),
                this.max = Math.max(s + 1, i)
            }
            _getLabelBounds() {
                const e = this.getLabelTimestamps();
                let t = Number.POSITIVE_INFINITY
                  , n = Number.NEGATIVE_INFINITY;
                return e.length && (t = e[0],
                n = e[e.length - 1]),
                {
                    min: t,
                    max: n
                }
            }
            buildTicks() {
                const e = this.options
                  , t = e.time
                  , n = e.ticks
                  , s = "labels" === n.source ? this.getLabelTimestamps() : this._generate();
                "ticks" === e.bounds && s.length && (this.min = this._userMin || s[0],
                this.max = this._userMax || s[s.length - 1]);
                const i = this.min
                  , a = function(e, t, n) {
                    let s = 0
                      , i = e.length;
                    for (; s < i && e[s] < t; )
                        s++;
                    for (; i > s && e[i - 1] > n; )
                        i--;
                    return s > 0 || i < e.length ? e.slice(s, i) : e
                }(s, i, this.max);
                return this._unit = t.unit || (n.autoSkip ? jr(t.minUnit, this.min, this.max, this._getLabelCapacity(i)) : function(e, t, n, s, i) {
                    for (let a = Ir.length - 1; a >= Ir.indexOf(n); a--) {
                        const n = Ir[a];
                        if (Er[n].common && e._adapter.diff(i, s, n) >= t - 1)
                            return n
                    }
                    return Ir[n ? Ir.indexOf(n) : 0]
                }(this, a.length, t.minUnit, this.min, this.max)),
                this._majorUnit = n.major.enabled && "year" !== this._unit ? function(e) {
                    for (let t = Ir.indexOf(e) + 1, n = Ir.length; t < n; ++t)
                        if (Er[Ir[t]].common)
                            return Ir[t]
                }(this._unit) : void 0,
                this.initOffsets(s),
                e.reverse && a.reverse(),
                Nr(this, a, this._majorUnit)
            }
            afterAutoSkip() {
                this.options.offsetAfterAutoskip && this.initOffsets(this.ticks.map((e=>+e.value)))
            }
            initOffsets(e=[]) {
                let t, n, s = 0, i = 0;
                this.options.offset && e.length && (t = this.getDecimalForValue(e[0]),
                s = 1 === e.length ? 1 - t : (this.getDecimalForValue(e[1]) - t) / 2,
                n = this.getDecimalForValue(e[e.length - 1]),
                i = 1 === e.length ? n : (n - this.getDecimalForValue(e[e.length - 2])) / 2);
                const a = e.length < 3 ? .5 : .25;
                s = We(s, 0, a),
                i = We(i, 0, a),
                this._offsets = {
                    start: s,
                    end: i,
                    factor: 1 / (s + 1 + i)
                }
            }
            _generate() {
                const e = this._adapter
                  , t = this.min
                  , n = this.max
                  , s = this.options
                  , i = s.time
                  , a = i.unit || jr(i.minUnit, t, n, this._getLabelCapacity(t))
                  , o = oe(s.ticks.stepSize, 1)
                  , r = "week" === a && i.isoWeekday
                  , l = Re(r) || !0 === r
                  , c = {};
                let u, d, m = t;
                if (l && (m = +e.startOf(m, "isoWeek", r)),
                m = +e.startOf(m, l ? "day" : a),
                e.diff(n, t, a) > 1e5 * o)
                    throw new Error(t + " and " + n + " are too far apart with stepSize of " + o + " " + a);
                const h = "data" === s.ticks.source && this.getDataTimestamps();
                for (u = m,
                d = 0; u < n; u = +e.add(u, o, a),
                d++)
                    Cr(c, u, h);
                return u !== n && "ticks" !== s.bounds && 1 !== d || Cr(c, u, h),
                Object.keys(c).sort(((e,t)=>e - t)).map((e=>+e))
            }
            getLabelForValue(e) {
                const t = this._adapter
                  , n = this.options.time;
                return n.tooltipFormat ? t.format(e, n.tooltipFormat) : t.format(e, n.displayFormats.datetime)
            }
            _tickFormatFunction(e, t, n, s) {
                const i = this.options
                  , a = i.ticks.callback;
                if (a)
                    return le(a, [e, t, n], this);
                const o = i.time.displayFormats
                  , r = this._unit
                  , l = this._majorUnit
                  , c = r && o[r]
                  , u = l && o[l]
                  , d = n[t]
                  , m = l && u && d && d.major;
                return this._adapter.format(e, s || (m ? u : c))
            }
            generateTickLabels(e) {
                let t, n, s;
                for (t = 0,
                n = e.length; t < n; ++t)
                    s = e[t],
                    s.label = this._tickFormatFunction(s.value, t, e)
            }
            getDecimalForValue(e) {
                return null === e ? NaN : (e - this.min) / (this.max - this.min)
            }
            getPixelForValue(e) {
                const t = this._offsets
                  , n = this.getDecimalForValue(e);
                return this.getPixelForDecimal((t.start + n) * t.factor)
            }
            getValueForPixel(e) {
                const t = this._offsets
                  , n = this.getDecimalForPixel(e) / t.factor - t.end;
                return this.min + n * (this.max - this.min)
            }
            _getLabelSize(e) {
                const t = this.options.ticks
                  , n = this.ctx.measureText(e).width
                  , s = De(this.isHorizontal() ? t.maxRotation : t.minRotation)
                  , i = Math.cos(s)
                  , a = Math.sin(s)
                  , o = this._resolveTickFontOptions(0).size;
                return {
                    w: n * i + o * a,
                    h: n * a + o * i
                }
            }
            _getLabelCapacity(e) {
                const t = this.options.time
                  , n = t.displayFormats
                  , s = n[t.unit] || n.millisecond
                  , i = this._tickFormatFunction(e, 0, Nr(this, [e], this._majorUnit), s)
                  , a = this._getLabelSize(i)
                  , o = Math.floor(this.isHorizontal() ? this.width / a.w : this.height / a.h) - 1;
                return o > 0 ? o : 1
            }
            getDataTimestamps() {
                let e, t, n = this._cache.data || [];
                if (n.length)
                    return n;
                const s = this.getMatchingVisibleMetas();
                if (this._normalized && s.length)
                    return this._cache.data = s[0].controller.getAllParsedValues(this);
                for (e = 0,
                t = s.length; e < t; ++e)
                    n = n.concat(s[e].controller.getAllParsedValues(this));
                return this._cache.data = this.normalize(n)
            }
            getLabelTimestamps() {
                const e = this._cache.labels || [];
                let t, n;
                if (e.length)
                    return e;
                const s = this.getLabels();
                for (t = 0,
                n = s.length; t < n; ++t)
                    e.push(yr(this, s[t]));
                return this._cache.labels = this._normalized ? e : this.normalize(e)
            }
            normalize(e) {
                return Ze(e.sort(Sr))
            }
        }
        function Or(e, t, n) {
            let s, i, a, o, r = 0, l = e.length - 1;
            n ? (t >= e[r].pos && t <= e[l].pos && ({lo: r, hi: l} = $e(e, "pos", t)),
            ({pos: s, time: a} = e[r]),
            ({pos: i, time: o} = e[l])) : (t >= e[r].time && t <= e[l].time && ({lo: r, hi: l} = $e(e, "time", t)),
            ({time: s, pos: a} = e[r]),
            ({time: i, pos: o} = e[l]));
            const c = i - s;
            return c ? a + (o - a) * (t - s) / c : a
        }
        var Pr = class extends wr {
            static id = "timeseries";
            static defaults = wr.defaults;
            constructor(e) {
                super(e),
                this._table = [],
                this._minPos = void 0,
                this._tableRange = void 0
            }
            initOffsets() {
                const e = this._getTimestampsForTable()
                  , t = this._table = this.buildLookupTable(e);
                this._minPos = Or(t, this.min),
                this._tableRange = Or(t, this.max) - this._minPos,
                super.initOffsets(e)
            }
            buildLookupTable(e) {
                const {min: t, max: n} = this
                  , s = []
                  , i = [];
                let a, o, r, l, c;
                for (a = 0,
                o = e.length; a < o; ++a)
                    l = e[a],
                    l >= t && l <= n && s.push(l);
                if (s.length < 2)
                    return [{
                        time: t,
                        pos: 0
                    }, {
                        time: n,
                        pos: 1
                    }];
                for (a = 0,
                o = s.length; a < o; ++a)
                    c = s[a + 1],
                    r = s[a - 1],
                    l = s[a],
                    Math.round((c + r) / 2) !== l && i.push({
                        time: l,
                        pos: a / (o - 1)
                    });
                return i
            }
            _getTimestampsForTable() {
                let e = this._cache.all || [];
                if (e.length)
                    return e;
                const t = this.getDataTimestamps()
                  , n = this.getLabelTimestamps();
                return e = t.length && n.length ? this.normalize(t.concat(n)) : t.length ? t : n,
                e = this._cache.all = e,
                e
            }
            getDecimalForValue(e) {
                return (Or(this._table, e) - this._minPos) / this._tableRange
            }
            getValueForPixel(e) {
                const t = this._offsets
                  , n = this.getDecimalForPixel(e) / t.factor - t.end;
                return Or(this._table, n * this._tableRange + this._minPos, !0)
            }
        }
          , Lr = Object.freeze({
            __proto__: null,
            CategoryScale: nr,
            LinearScale: or,
            LogarithmicScale: mr,
            RadialLinearScale: Tr,
            TimeScale: wr,
            TimeSeriesScale: Pr
        });
        const Ar = [ai, to, Jo, Lr];
        var Mr = n(639)
          , Rr = n.n(Mr);
        function kr(e, t) {
            return e === t
        }
        function Dr({index: e, version: t}) {
            return `${e.toFixed(0)}:${t.toFixed(0)}`
        }
        function Fr(e) {
            if ("string" != typeof e)
                return;
            const t = e.split(":");
            if (2 !== t.length)
                return;
            const n = parseInt(t[0])
              , s = parseInt(t[1]);
            return isNaN(n) || isNaN(s) ? void 0 : {
                index: n,
                version: s
            }
        }
        function Ur(e, t) {
            return e === t || null != e && null != t && e.index === t.index && e.version === t.version
        }
        function Br(e, t) {
            if (e === t)
                return !0;
            if (null == e || null == t || e.length !== t.length)
                return !1;
            for (let n = 0; n < e.length; n++)
                if (!Ur(e[n], t[n]))
                    return !1;
            return !0
        }
        function Gr(e, t) {
            if (e === t)
                return !0;
            if (null == e || null == t || e.length !== t.length)
                return !1;
            for (let n = 0; n < e.length; n++) {
                let s = !1;
                for (let i = 0; i < t.length; i++)
                    if (Ur(e[n], t[i])) {
                        s = !0;
                        break
                    }
                if (!s)
                    return !1
            }
            return !0
        }
        function Vr(e) {
            return null == e || 0 === e.trim().length
        }
        const Hr = Object.prototype.hasOwnProperty;
        function Kr(e, t, n=1) {
            if (Object.is(e, t))
                return !0;
            if (n <= 0 || "object" != typeof e && !Array.isArray(e) || null === e || "object" != typeof t && !Array.isArray(t) || null === t)
                return !1;
            if (Array.isArray(e)) {
                if (!Array.isArray(t))
                    return !1;
                if (e.length !== t.length)
                    return !1;
                for (let s = 0; s < e.length; s++)
                    if (!Kr(e[s], t[s], n - 1))
                        return !1;
                return !0
            }
            const s = Object.keys(e)
              , i = Object.keys(t);
            if (s.length !== i.length)
                return !1;
            for (let i = 0; i < s.length; i++)
                if (!Hr.call(t, s[i]) || !Kr(e[s[i]], t[s[i]], n - 1))
                    return !1;
            return !0
        }
        function Wr(e) {
            if ("object" == typeof e && null != e) {
                const t = e.length || 0 === e.length ? [] : {};
                for (const n of Object.keys(e).sort(((e,t)=>e.localeCompare(t))))
                    t[n] = Wr(e[n]);
                return JSON.stringify(t)
            }
            return e
        }
        function zr(e) {
            if ("object" == typeof e && null != e) {
                const t = e.length || 0 === e.length ? [] : {};
                for (const n of Object.keys(e).sort(((e,t)=>e.localeCompare(t))))
                    "__Type" !== n && (t[n] = Wr(e[n]));
                return JSON.stringify(t)
            }
            return e
        }
        function Yr(e, t) {
            const n = (0,
            Y.useRef)(e);
            return t(e, n.current) || (n.current = e),
            n.current
        }
        function $r(e, t, n) {
            return new ul(`${e}.${t}`,n)
        }
        function qr(e) {
            return new dl(e)
        }
        function Xr(e, t, n=zr) {
            return new ml(`${e}.${t}`,n,!1)
        }
        function Qr(e, t, n=zr) {
            return new ml(`${e}.${t}`,n,!0)
        }
        function Zr(e, t) {
            return new fl(`${e}.${t}`)
        }
        function Jr(e, t) {
            const n = `${e}.${t}`;
            return ()=>Rr().trigger(n)
        }
        function el(e, t) {
            const n = `${e}.${t}`;
            return (...e)=>Rr().trigger(n, ...e)
        }
        function tl(e, t, ...n) {
            Rr().trigger(`${e}.${t}`, ...n)
        }
        function nl(e, t, ...n) {
            return Rr().call(`${e}.${t}`, ...n)
        }
        function sl(e) {
            const t = (0,
            Y.useMemo)((()=>e.subscribe()), [e])
              , [n,s] = (0,
            Y.useState)(t.value)
              , i = (0,
            Y.useRef)(n);
            return (0,
            Y.useEffect)((()=>{
                const e = e=>{
                    if (Array.isArray(e) && Array.isArray(i.current) && !i.current.length && !e.length)
                        return;
                    let t = e;
                    "number" == typeof e && e && (t = Math.floor(1e6 * e) / 1e6);
                    let n = !1;
                    n = "object" == typeof t && "object" == typeof i.current ? !Kr(i.current, t, 10) : t !== i.current,
                    n && (i.current = t,
                    s(t))
                }
                ;
                return e(t.value),
                t.setChangeListener(e),
                ()=>t.dispose()
            }
            ), [t]),
            n
        }
        function il(e, t, n) {
            const s = (0,
            Y.useMemo)((()=>e.subscribe()), [e])
              , [i,a] = (0,
            Y.useReducer)(t, t(n, s.value))
              , o = (0,
            Y.useRef)(s.value)
              , r = (0,
            Y.useRef)(i);
            return (0,
            Y.useEffect)((()=>{
                const e = e=>{
                    if (Array.isArray(e) && Array.isArray(o.current) && !o.current.length && !e.length)
                        return;
                    let n = !1;
                    if (n = "object" == typeof e && "object" == typeof o.current ? !Kr(o.current, e, 10) : e !== o.current,
                    n) {
                        const n = t(r.current, e);
                        o.current = e,
                        r.current = n,
                        a(e)
                    }
                }
                ;
                return e(s.value),
                s.setChangeListener(e),
                ()=>s.dispose()
            }
            ), [s, t]),
            i
        }
        function al(e) {
            const t = (0,
            Y.useRef)(e.value);
            return (0,
            Y.useEffect)((()=>{
                const n = e.subscribe((e=>t.current = e));
                return n.dispose
            }
            )),
            t
        }
        function ol(e, t, n=1) {
            return (0,
            Y.useEffect)((()=>{
                let s = e.value;
                return e.subscribe((e=>{
                    Kr(e, s, n) || (t(e, s),
                    s = e)
                }
                )).dispose
            }
            ), [e, n, t]),
            e.value
        }
        function rl(e, t, n) {
            const s = (0,
            Y.useMemo)((()=>e.subscribe(t)), [e, t]);
            return (0,
            Y.useEffect)((()=>{
                s.setChangeListener(n)
            }
            ), [n, s]),
            (0,
            Y.useEffect)((()=>s.dispose), [s]),
            s.value
        }
        function ll(e, t) {
            const n = (0,
            Y.useMemo)((()=>null != t ? e.subscribe(t) : void 0), [e, t])
              , [s,i] = (0,
            Y.useState)(n?.value)
              , a = (0,
            Y.useRef)(s);
            return (0,
            Y.useEffect)((()=>{
                if (n) {
                    const e = e=>{
                        if (Array.isArray(e) && Array.isArray(a.current) && !a.current.length && !e.length)
                            return;
                        let t = e;
                        "number" == typeof e && e && (t = Math.floor(1e6 * e) / 1e6);
                        let n = !1;
                        n = "object" == typeof t && "object" == typeof a.current ? !Kr(a.current, t, 10) : t !== a.current,
                        n && (a.current = t,
                        i(t))
                    }
                    ;
                    return i(n.value),
                    n.setChangeListener(e),
                    ()=>n.dispose()
                }
            }
            ), [n]),
            s
        }
        function cl(e, t) {
            const n = (0,
            Y.useMemo)((()=>t.map((t=>e.subscribe(t)))), [e, t])
              , [s,i] = (0,
            Y.useState)([...n.map((e=>e.value))])
              , a = (0,
            Y.useCallback)((()=>{
                i([...n.map((e=>e.value))])
            }
            ), [n]);
            return (0,
            Y.useEffect)((()=>(i([...n.map((e=>e.value))]),
            n.map((e=>e.setChangeListener(a))),
            ()=>{
                n.map((e=>e.dispose()))
            }
            )), [n, a]),
            s
        }
        X.add("game-ui/common/utils/equality.ts", {
            get defaultEqualityComparer() {
                return kr
            },
            set defaultEqualityComparer(e) {
                kr = e
            },
            get entityKey() {
                return Dr
            },
            set entityKey(e) {
                Dr = e
            },
            get parseEntityKey() {
                return Fr
            },
            set parseEntityKey(e) {
                Fr = e
            },
            get entityEquals() {
                return Ur
            },
            set entityEquals(e) {
                Ur = e
            },
            get entityArrayEquals() {
                return Br
            },
            set entityArrayEquals(e) {
                Br = e
            },
            get entityArrayUnorderedEquals() {
                return Gr
            },
            set entityArrayUnorderedEquals(e) {
                Gr = e
            },
            get isNullOrEmpty() {
                return Vr
            },
            set isNullOrEmpty(e) {
                Vr = e
            },
            get shallowEqual() {
                return Kr
            },
            set shallowEqual(e) {
                Kr = e
            },
            get stringifySorted() {
                return Wr
            },
            set stringifySorted(e) {
                Wr = e
            },
            get stringifySortedIgnoreBindingType() {
                return zr
            },
            set stringifySortedIgnoreBindingType(e) {
                zr = e
            },
            get useMemoizedValue() {
                return Yr
            },
            set useMemoizedValue(e) {
                Yr = e
            }
        });
        class ul {
            constructor(e, t) {
                this.fallbackValue = t,
                this.listeners = [],
                this.connections = null,
                this.disposed = !1,
                this._value = void 0,
                this.subscribe = e=>{
                    if (this.disposed)
                        throw new Error("cannot subscribe to a disposed binding!");
                    this.connect();
                    const t = new hl(e);
                    this.listeners.push(t);
                    const n = this;
                    return {
                        get value() {
                            return n.getValueUnsafe()
                        },
                        setChangeListener: t.set,
                        dispose() {
                            const e = n.listeners.indexOf(t);
                            -1 !== e && (n.listeners.splice(e, 1),
                            0 === n.listeners.length && n.disconnect())
                        }
                    }
                }
                ,
                this.dispose = ()=>{
                    this.disposed = !0,
                    this.listeners.splice(0, this.listeners.length),
                    this.disconnect()
                }
                ,
                this.onUpdate = e=>{
                    if (e !== this._value) {
                        this._value = e;
                        for (const t of this.listeners)
                            t.call(e)
                    }
                }
                ,
                this.onPatch = (e,t)=>{
                    if (0 === e.length)
                        this.onUpdate(t);
                    else {
                        if (!pl(this._value))
                            throw new Error(`cannot patch object of type ${null != this._value ? typeof this._value : this._value}!`);
                        {
                            const n = gl(this._value);
                            let s = n;
                            for (let t = 0; t < e.length - 1; t++) {
                                const n = e[t]
                                  , i = s[n];
                                if (!pl(i))
                                    throw new Error(`'${e.slice(0, t + 1).join("->")}' is not a container`);
                                s[n] = gl(i),
                                s = s[n]
                            }
                            s[e[e.length - 1]] = t,
                            this.onUpdate(n)
                        }
                    }
                }
                ,
                this.subscribeTrigger = `${e}.subscribe`,
                this.unsubscribeTrigger = `${e}.unsubscribe`,
                this.updateTrigger = `${e}.update`,
                this.patchTrigger = `${e}.patch`,
                this._value = t
            }
            get value() {
                if (null != this.connections)
                    return this.getValueUnsafe();
                {
                    this.connect();
                    const e = this.getValueUnsafe();
                    return this.disconnect(),
                    e
                }
            }
            connect() {
                if (null == this.connections && (this.connections = [Rr().on(this.updateTrigger, this.onUpdate), Rr().on(this.patchTrigger, this.onPatch)],
                Rr().trigger(this.subscribeTrigger),
                void 0 === this._value))
                    throw new Error(`'${this.updateTrigger}' was not called after subscribe!\nDid you forget to add the binding on the C# side?`)
            }
            disconnect() {
                if (null != this.connections) {
                    for (const e of this.connections)
                        e.clear();
                    this.connections = null,
                    Rr().trigger(this.unsubscribeTrigger),
                    this._value = this.fallbackValue
                }
            }
            getValueUnsafe() {
                if (void 0 === this._value)
                    throw new Error(`'${this.updateTrigger}' was not called before getValueUnsafe!`);
                return this._value
            }
        }
        class dl {
            listeners = [];
            disposed = !1;
            constructor(e) {
                this._value = e
            }
            get registered() {
                return !0
            }
            get value() {
                return this._value
            }
            subscribe = e=>{
                if (this.disposed)
                    throw new Error("cannot subscribe to a disposed binding!");
                const t = new hl(e);
                this.listeners.push(t);
                const n = this;
                return {
                    get value() {
                        return n._value
                    },
                    setChangeListener: t.set,
                    dispose() {
                        const e = n.listeners.indexOf(t);
                        -1 !== e && n.listeners.splice(e, 1)
                    }
                }
            }
            ;
            dispose = ()=>{
                this.disposed = !0,
                this.listeners.splice(0, this.listeners.length)
            }
            ;
            update = e=>{
                if (e !== this._value) {
                    this._value = e;
                    for (const t of this.listeners)
                        t.call(e)
                }
            }
        }
        class ml {
            constructor(e, t, n=!1) {
                this.keyStringifier = t,
                this.keepAlive = n,
                this.entries = new Map,
                this.updateConnection = null,
                this.disposed = !1,
                this.getValue = e=>{
                    const t = this.getConnection(e);
                    if (null != t)
                        return this.getValueUnsafe(t);
                    const n = this.connect(e)
                      , s = this.getValueUnsafe(n);
                    return this.disconnect(e),
                    s
                }
                ,
                this.subscribe = (e,t)=>{
                    if (this.disposed)
                        throw new Error("cannot subscribe to a disposed binding!");
                    const n = this.connect(e)
                      , s = new hl(t);
                    n.listeners.push(s);
                    const i = this;
                    return {
                        get value() {
                            return i.getValueUnsafe(n)
                        },
                        setChangeListener: s.set,
                        dispose() {
                            const t = n.listeners.indexOf(s);
                            -1 !== t && (n.listeners.splice(t, 1),
                            0 !== n.listeners.length || i.keepAlive || i.disconnect(e))
                        }
                    }
                }
                ,
                this.dispose = ()=>{
                    this.disposed = !0,
                    this.disconnectAll()
                }
                ,
                this.onUpdate = (e,t)=>{
                    const n = this.getConnection(e);
                    if (null != n) {
                        if (t !== n.value) {
                            n.value = t;
                            for (const e of n.listeners)
                                e.call(t)
                        }
                    } else
                        console.warn(`'${this.updateTrigger}' was called on already unsubscribed key!`)
                }
                ,
                this.subscribeTrigger = `${e}.subscribeMapEntry`,
                this.unsubscribeTrigger = `${e}.unsubscribeMapEntry`,
                this.updateTrigger = `${e}.updateMapEntry`
            }
            getConnection(e) {
                const t = this.keyStringifier(e);
                return this.entries.get(t)
            }
            connect(e) {
                const t = this.keyStringifier(e);
                let n = this.entries.get(t);
                if (null != n)
                    return n;
                if (null == this.updateConnection && (this.updateConnection = Rr().on(this.updateTrigger, this.onUpdate)),
                n = {
                    key: e,
                    value: void 0,
                    listeners: []
                },
                this.entries.set(t, n),
                Rr().trigger(this.subscribeTrigger, e),
                void 0 === n.value)
                    throw new Error(`'${this.updateTrigger}' was not called after subscribing the key '${t}'!\nDid you forget to add the binding on the C# side?`);
                return n
            }
            disconnectAll() {
                for (const e of this.entries.values())
                    Rr().trigger(this.unsubscribeTrigger, e.key, !1);
                this.entries.clear(),
                null != this.updateConnection && (this.updateConnection.clear(),
                this.updateConnection = null)
            }
            disconnect(e) {
                const t = this.keyStringifier(e);
                null != this.entries.get(t) && (this.entries.delete(t),
                0 === this.entries.size && null != this.updateConnection && (this.updateConnection.clear(),
                this.updateConnection = null),
                Rr().trigger(this.unsubscribeTrigger, e, this.keepAlive))
            }
            getValueUnsafe(e) {
                if (void 0 === e.value)
                    throw new Error(`'${this.updateTrigger}' was not called before getValueUnsafe!`);
                return e.value
            }
        }
        class hl {
            constructor(e) {
                this.listener = e,
                this.set = e=>{
                    this.listener = e
                }
                ,
                this.call = e=>{
                    null != this.listener && this.listener(e)
                }
            }
        }
        function gl(e) {
            return Array.isArray(e) ? [...e] : {
                ...e
            }
        }
        function pl(e) {
            return null != e && "object" == typeof e
        }
        class fl {
            listeners = [];
            updateConnection = null;
            disposed = !1;
            constructor(e) {
                this.subscribeTrigger = `${e}.subscribe`,
                this.unsubscribeTrigger = `${e}.unsubscribe`,
                this.updateTrigger = `${e}.update`
            }
            subscribe = e=>{
                if (this.disposed)
                    throw new Error("cannot subscribe to a disposed binding!");
                return this.listeners.includes(e) || this.listeners.push(e),
                this.subscribeValue(),
                {
                    dispose: ()=>{
                        const t = this.listeners.indexOf(e);
                        -1 !== t && (this.listeners.splice(t, 1),
                        0 === this.listeners.length && this.unsubscribeValue())
                    }
                }
            }
            ;
            dispose = ()=>{
                this.disposed = !0,
                this.listeners.splice(0, this.listeners.length),
                this.unsubscribeValue()
            }
            ;
            subscribeValue() {
                null == this.updateConnection && (this.updateConnection = Rr().on(this.updateTrigger, this.onUpdate),
                Rr().trigger(this.subscribeTrigger))
            }
            unsubscribeValue() {
                null != this.updateConnection && (this.updateConnection.clear(),
                this.updateConnection = null,
                Rr().trigger(this.unsubscribeTrigger))
            }
            onUpdate = e=>{
                for (const t of this.listeners)
                    t(e)
            }
        }
        var xl;
        X.add("game-ui/common/data-binding/binding.ts", {
            get bindValue() {
                return $r
            },
            set bindValue(e) {
                $r = e
            },
            get bindLocalValue() {
                return qr
            },
            set bindLocalValue(e) {
                qr = e
            },
            get bindMap() {
                return Xr
            },
            set bindMap(e) {
                Xr = e
            },
            get bindMapPersistent() {
                return Qr
            },
            set bindMapPersistent(e) {
                Qr = e
            },
            get bindEvent() {
                return Zr
            },
            set bindEvent(e) {
                Zr = e
            },
            get bindTrigger() {
                return Jr
            },
            set bindTrigger(e) {
                Jr = e
            },
            get bindTriggerWithArgs() {
                return el
            },
            set bindTriggerWithArgs(e) {
                el = e
            },
            get trigger() {
                return tl
            },
            set trigger(e) {
                tl = e
            },
            get call() {
                return nl
            },
            set call(e) {
                nl = e
            },
            get useValue() {
                return sl
            },
            set useValue(e) {
                sl = e
            },
            get useReducedValue() {
                return il
            },
            set useReducedValue(e) {
                il = e
            },
            get useValueRef() {
                return al
            },
            set useValueRef(e) {
                al = e
            },
            get useValueOnChange() {
                return ol
            },
            set useValueOnChange(e) {
                ol = e
            },
            get useMapValueOnChange() {
                return rl
            },
            set useMapValueOnChange(e) {
                rl = e
            },
            get useMapValue() {
                return ll
            },
            set useMapValue(e) {
                ll = e
            },
            get useMapValues() {
                return cl
            },
            set useMapValues(e) {
                cl = e
            }
        }),
        X.add("game-ui/api/index.ts", {}),
        function(e) {
            e.ButtonWithConfirmation = "Game.UI.Menu.ButtonWithConfirmation",
            e.InputBindingField = "Game.UI.Menu.InputBindingField",
            e.ScreenResolutionDropdownField = "Game.UI.Menu.ScreenResolutionDropdownField",
            e.DropdownField = "Game.UI.Widgets.DropdownField",
            e.ModdingToolchainDependency = "Game.UI.Menu.ModdingToolchainDependency",
            e.DirectoryPickerField = "Game.UI.Widgets.DirectoryPickerField"
        }(xl || (xl = {}));
        const vl = "options";
        var _l, bl, Tl, El, Il = $r(vl, "pages"), Sl = $r(vl, "children"), yl = $r(vl, "activePage"), jl = $r(vl, "activeSection"), Cl = $r(vl, "displayConfirmationVisible"), Nl = $r(vl, "displayConfirmationTime"), wl = $r(vl, "interfaceStyle"), Ol = $r(vl, "interfaceTransparency"), Pl = $r(vl, "interfaceScaling", !0), Ll = $r(vl, "textScale"), Al = $r(vl, "unlockHighlightsEnabled"), Ml = $r(vl, "chirperPopupsEnabled"), Rl = $r(vl, "inputHintsType"), kl = $r(vl, "keyboardLayout"), Dl = $r(vl, "shortcutHints"), Fl = $r(vl, "layoutMap"), Ul = ($r(vl, "radioVolume"),
        $r(vl, "unitSettings"));
        function Bl({group: e, path: t}) {
            tl(e, "rebindInput", t)
        }
        function Gl({group: e, path: t}) {
            tl(e, "unsetInputBinding", t)
        }
        function Vl({group: e, path: t}) {
            tl(e, "resetInputBinding", t)
        }
        function Hl(e, t, n=!1) {
            tl(vl, "selectPage", e, t, n)
        }
        function Kl(e, t) {
            tl(vl, "filteredWidgets", e, t || null)
        }
        !function(e) {
            e[e.AutoDetect = 0] = "AutoDetect",
            e[e.International = 1] = "International"
        }(_l || (_l = {})),
        function(e) {
            e[e.Idle = 0] = "Idle",
            e[e.Downloading = 1] = "Downloading",
            e[e.Installing = 2] = "Installing",
            e[e.WaitingForLicense = 3] = "WaitingForLicense",
            e[e.WaitingForClose = 4] = "WaitingForClose",
            e[e.Updating = 5] = "Updating",
            e[e.Uninstalling = 6] = "Uninstalling",
            e[e.NotEnoughSpaceError = 7] = "NotEnoughSpaceError",
            e[e.DownloadError = 8] = "DownloadError",
            e[e.InstallError = 9] = "InstallError",
            e[e.GetLicenseError = 10] = "GetLicenseError",
            e[e.CloseError = 11] = "CloseError",
            e[e.DeployError = 12] = "DeployError",
            e[e.UnistallError = 13] = "UnistallError"
        }(bl || (bl = {})),
        function(e) {
            e[e.Install = 0] = "Install",
            e[e.Uninstall = 1] = "Uninstall",
            e[e.Update = 2] = "Update",
            e[e.Repair = 3] = "Repair",
            e[e.Cancel = 4] = "Cancel"
        }(Tl || (Tl = {})),
        function(e) {
            e[e.Unknown = -1] = "Unknown",
            e[e.Installed = 0] = "Installed",
            e[e.NotInstalled = 1] = "NotInstalled",
            e[e.Outdated = 2] = "Outdated",
            e[e.Installing = 3] = "Installing",
            e[e.Downloading = 4] = "Downloading",
            e[e.Removing = 5] = "Removing",
            e[e.Queued = 6] = "Queued"
        }(El || (El = {}));
        var Wl, zl, Yl, $l, ql = Jr(vl, "confirmDisplay"), Xl = Jr(vl, "revertDisplay"), Ql = $r(vl, "directoryBrowser", []), Zl = $r(vl, "directoryBrowserActive", !1), Jl = Jr(vl, "cancelDirectoryBrowser"), ec = el(vl, "onOptionsPageClosed");
        !function(e) {
            e[e.TwentyFourHours = 0] = "TwentyFourHours",
            e[e.TwelveHours = 1] = "TwelveHours"
        }(Wl || (Wl = {})),
        function(e) {
            e[e.Celsius = 0] = "Celsius",
            e[e.Fahrenheit = 1] = "Fahrenheit",
            e[e.Kelvin = 2] = "Kelvin"
        }(zl || (zl = {})),
        function(e) {
            e[e.Metric = 0] = "Metric",
            e[e.Freedom = 1] = "Freedom"
        }(Yl || (Yl = {})),
        function(e) {
            e[e.None = 0] = "None",
            e[e.WithBuiltIn = 1] = "WithBuiltIn",
            e[e.WithNotBuiltIn = 2] = "WithNotBuiltIn"
        }($l || ($l = {}));
        var tc = {
            timeFormat: Wl.TwentyFourHours,
            temperatureUnit: zl.Celsius,
            unitSystem: Yl.Metric
        };
        X.add("game-ui/menu/data-binding/options-bindings.ts", {
            get OptionsWidgetType() {
                return xl
            },
            set OptionsWidgetType(e) {
                xl = e
            },
            get pages() {
                return pages
            },
            set pages(e) {
                pages = e
            },
            get optionsWidgets() {
                return optionsWidgets
            },
            set optionsWidgets(e) {
                optionsWidgets = e
            },
            get selectedPage() {
                return selectedPage
            },
            set selectedPage(e) {
                selectedPage = e
            },
            get selectedSection() {
                return selectedSection
            },
            set selectedSection(e) {
                selectedSection = e
            },
            get displayConfirmationVisible() {
                return displayConfirmationVisible
            },
            set displayConfirmationVisible(e) {
                displayConfirmationVisible = e
            },
            get displayConfirmationTime() {
                return displayConfirmationTime
            },
            set displayConfirmationTime(e) {
                displayConfirmationTime = e
            },
            get interfaceStyle() {
                return interfaceStyle
            },
            set interfaceStyle(e) {
                interfaceStyle = e
            },
            get interfaceTransparency() {
                return interfaceTransparency
            },
            set interfaceTransparency(e) {
                interfaceTransparency = e
            },
            get interfaceScaling() {
                return interfaceScaling
            },
            set interfaceScaling(e) {
                interfaceScaling = e
            },
            get textScale() {
                return textScale
            },
            set textScale(e) {
                textScale = e
            },
            get unlockHighlightsEnabled() {
                return unlockHighlightsEnabled
            },
            set unlockHighlightsEnabled(e) {
                unlockHighlightsEnabled = e
            },
            get chirperPopupsEnabled() {
                return chirperPopupsEnabled
            },
            set chirperPopupsEnabled(e) {
                chirperPopupsEnabled = e
            },
            get inputHintsType() {
                return inputHintsType
            },
            set inputHintsType(e) {
                inputHintsType = e
            },
            get keyboardLayout() {
                return keyboardLayout
            },
            set keyboardLayout(e) {
                keyboardLayout = e
            },
            get shortcutHints() {
                return shortcutHints
            },
            set shortcutHints(e) {
                shortcutHints = e
            },
            get layoutMap() {
                return layoutMap
            },
            set layoutMap(e) {
                layoutMap = e
            },
            get radioVolume() {
                return radioVolume
            },
            set radioVolume(e) {
                radioVolume = e
            },
            get unitSettings() {
                return unitSettings
            },
            set unitSettings(e) {
                unitSettings = e
            },
            get rebindInput() {
                return Bl
            },
            set rebindInput(e) {
                Bl = e
            },
            get unsetInputBinding() {
                return Gl
            },
            set unsetInputBinding(e) {
                Gl = e
            },
            get resetInputBinding() {
                return Vl
            },
            set resetInputBinding(e) {
                Vl = e
            },
            get selectPage() {
                return Hl
            },
            set selectPage(e) {
                Hl = e
            },
            get filteredWidgets() {
                return Kl
            },
            set filteredWidgets(e) {
                Kl = e
            },
            get KeyboardLayout() {
                return _l
            },
            set KeyboardLayout(e) {
                _l = e
            },
            get ModdingToolchainStatus() {
                return bl
            },
            set ModdingToolchainStatus(e) {
                bl = e
            },
            get ModdingToolchainButtonState() {
                return Tl
            },
            set ModdingToolchainButtonState(e) {
                Tl = e
            },
            get ModdingToolchainDependencyState() {
                return El
            },
            set ModdingToolchainDependencyState(e) {
                El = e
            },
            get confirmDisplay() {
                return ql
            },
            set confirmDisplay(e) {
                ql = e
            },
            get revertDisplay() {
                return Xl
            },
            set revertDisplay(e) {
                Xl = e
            },
            get directoryBrowser() {
                return directoryBrowser
            },
            set directoryBrowser(e) {
                directoryBrowser = e
            },
            get directoryBrowserActive() {
                return directoryBrowserActive
            },
            set directoryBrowserActive(e) {
                directoryBrowserActive = e
            },
            get cancelDirectoryBrowser() {
                return Jl
            },
            set cancelDirectoryBrowser(e) {
                Jl = e
            },
            get onOptionsPageClosed() {
                return ec
            },
            set onOptionsPageClosed(e) {
                ec = e
            },
            get TimeFormat() {
                return Wl
            },
            set TimeFormat(e) {
                Wl = e
            },
            get TemperatureUnit() {
                return zl
            },
            set TemperatureUnit(e) {
                zl = e
            },
            get UnitSystem() {
                return Yl
            },
            set UnitSystem(e) {
                Yl = e
            },
            get BindingConflict() {
                return $l
            },
            set BindingConflict(e) {
                $l = e
            },
            get defaultUnitSettings() {
                return tc
            },
            set defaultUnitSettings(e) {
                tc = e
            }
        });
        var nc = (0,
        Y.createContext)({
            translate: ()=>null,
            unitSettings: tc
        });
        function sc() {
            const e = (0,
            Y.useContext)(nc)
              , t = (0,
            Y.useRef)(!0);
            return t.current = !0,
            (0,
            Y.useMemo)((()=>{
                const n = new Map;
                return {
                    translate: (s,i)=>{
                        let a = n.get(s);
                        return void 0 === a && (t.current && (t.current = !1,
                        n.clear()),
                        a = e.translate(s, i),
                        n.set(s, a)),
                        a
                    }
                    ,
                    unitSettings: e.unitSettings
                }
            }
            ), [e])
        }
        function ic(e) {
            const t = sc()
              , n = Yr(e, oc);
            return (0,
            Y.useMemo)((()=>ac(t, n)), [t, n])
        }
        function ac(e, t, n) {
            return null == t ? "" : (0,
            Y.isValidElement)(t) ? rc(t.type) ? t.type.renderString(e, t.props) : function(e) {
                return e.type === Y.Fragment
            }(t) ? Y.Children.toArray(t.props.children).map((t=>ac(e, t, n))).join(n) : `[${s = t.type,
            s.displayName ?? s.name ?? String(s)}/]` : String(t);
            var s
        }
        function oc(e, t) {
            return (0,
            Y.isValidElement)(e) && (0,
            Y.isValidElement)(t) && rc(e.type) && rc(t.type) ? e.type.propsAreEqual(e.props, t.props) : Object.is(e, t)
        }
        function rc(e) {
            return "function" == typeof e.renderString && "function" == typeof e.propsAreEqual
        }
        function lc(e, t, n) {
            const s = e=>{
                const n = sc()
                  , s = (0,
                Y.useMemo)((()=>t(n, e)), [n, e]);
                return (0,
                z.jsx)(z.Fragment, {
                    children: s
                })
            }
            ;
            return Object.assign((0,
            Y.memo)(s, n), {
                displayName: e,
                renderString: t,
                propsAreEqual: n
            })
        }
        X.add("game-ui/common/localization/localization.tsx", {
            get LocalizationContext() {
                return nc
            },
            set LocalizationContext(e) {
                nc = e
            },
            get useCachedLocalization() {
                return sc
            },
            set useCachedLocalization(e) {
                sc = e
            }
        }),
        X.add("game-ui/common/localization/loc-component.tsx", {
            get useTranslation() {
                return ic
            },
            set useTranslation(e) {
                ic = e
            },
            get renderLocElement() {
                return ac
            },
            set renderLocElement(e) {
                ac = e
            },
            get areLocElementsEqual() {
                return oc
            },
            set areLocElementsEqual(e) {
                oc = e
            },
            get createLocComponent() {
                return lc
            },
            set createLocComponent(e) {
                lc = e
            }
        });
        var cc = lc("LocalizedString", ((e,{id: t, fallback: n, showIdOnFail: s, args: i})=>uc(e, t, n, i, s)), ((e,t)=>e.id === t.id && e.fallback === t.fallback && function(e, t) {
            if (Object.is(e, t))
                return !0;
            if (null == e || null == t)
                return e === t;
            const n = Object.keys(e)
              , s = Object.keys(t);
            if (n.length !== s.length)
                return !1;
            return n.every((n=>Object.prototype.hasOwnProperty.call(t, n) && oc(e[n], t[n])))
        }(e.args, t.args)));
        function uc(e, t, n, s, i) {
            const a = (null != t ? e.translate(t, n) : n) || (i && t ? t : "");
            if (null != s || a.match($c)) {
                const t = s ? function(e, t) {
                    return Object.fromEntries(Object.entries(t).map((([t,n])=>[t, ac(e, n)])))
                }(e, s) : {};
                return qc(a, t, e)
            }
            return a
        }
        function dc(e, t, n) {
            return !!Object.is(t, n) || e.every((e=>oc(t[e], n[e])))
        }
        function mc(e) {
            const t = Object.entries(e).map((([e,t])=>[e, hc(e, t)]));
            return Object.fromEntries(t)
        }
        function hc(e, t) {
            const n = Object.entries(t).map((([t,n])=>{
                const s = `${e}.${t}`;
                return [t, lc(s, n.create(s), n.propsAreEqual.bind(n))]
            }
            ));
            return Object.fromEntries(n)
        }
        X.add("game-ui/common/localization/localized-string.tsx", {
            get LocalizedString() {
                return cc
            },
            set LocalizedString(e) {
                cc = e
            },
            get renderLocalizedString() {
                return uc
            },
            set renderLocalizedString(e) {
                uc = e
            },
            get areArgsEqual() {
                return dc
            },
            set areArgsEqual(e) {
                dc = e
            }
        });
        class gc {
            constructor(...e) {
                this.argNames = e
            }
            create(e) {
                return (t,{fallback: n, showIdOnFail: s, ...i})=>uc(t, e, n, i, s)
            }
            propsAreEqual(e, t) {
                return void 0 !== e && void 0 !== t ? dc(this.argNames, e, t) : e === t
            }
        }
        class pc {
            constructor(...e) {
                this.argNames = e
            }
            create(e) {
                return (t,{hash: n, fallback: s, showIdOnFail: i, ...a})=>uc(t, `${e}[${n}]`, s, a, i)
            }
            propsAreEqual(e, t) {
                return e.hash === t.hash && dc(this.argNames, e, t)
            }
        }
        class fc {
            constructor(...e) {
                this.argNames = e
            }
            create(e) {
                return (t,{index: n, fallback: s, showIdOnFail: i, ...a})=>uc(t, `${e}:${n}`, s, a, i)
            }
            propsAreEqual(e, t) {
                return e.index === t.index && dc(this.argNames, e, t)
            }
        }
        class xc {
            constructor(...e) {
                this.argNames = e
            }
            create(e) {
                return (t,{hash: n, index: s, fallback: i, showIdOnFail: a, ...o})=>uc(t, `${e}[${n}]:${s}`, i, o, a)
            }
            propsAreEqual(e, t) {
                return e.hash === t.hash && e.index === t.index && dc(this.argNames, e, t)
            }
        }
        X.add("game-ui/common/localization/loc-dictionary.tsx", {
            get createLocDictionary() {
                return mc
            },
            set createLocDictionary(e) {
                mc = e
            }
        });
        var vc, _c = mc({
            Achievements: {
                DESCRIPTION: new pc,
                TITLE: new pc
            },
            AirPollutionInfoPanel: {
                AVERAGE_AIR_POLLUTION: new gc
            },
            AnimationCurve: {
                TIME_LABEL: new gc,
                VALUE_LABEL: new gc
            },
            Assets: {
                ADDRESS_NAME_FORMAT: new gc("NUMBER","ROAD"),
                ALLEY_NAME: new fc,
                ANIMAL_NAME_DOG: new fc,
                BIOME: new pc,
                BRIDGE_NAME: new fc,
                CITIZEN_NAME_FEMALE: new fc,
                CITIZEN_NAME_FORMAT: new gc("FIRST_NAME","LAST_NAME"),
                CITIZEN_NAME_MALE: new fc,
                CITIZEN_SURNAME_FEMALE: new fc,
                CITIZEN_SURNAME_HOUSEHOLD: new fc,
                CITIZEN_SURNAME_MALE: new fc,
                CITY_NAME: new fc,
                CLIMATE: new pc,
                DAM_NAME: new fc,
                DESCRIPTION: new pc,
                DISTRICT_NAME: new fc,
                DISTRICT_NAME_NEW: new gc,
                HIGHWAY_NAME: new fc,
                MISSING_PREFAB_DESCRIPTION: new gc,
                NAME: new pc,
                NAMED_ADDRESS_NAME_FORMAT: new gc("NAME","NUMBER","ROAD"),
                ROUTE_NAME: new pc("NUMBER"),
                STREET_NAME: new fc,
                SUB_SERVICE_DESCRIPTION: new pc,
                THEME: new pc,
                UNIQUE: new gc,
                UPGRADE_DESCRIPTION: new pc,
                UPGRADE_NAME: new pc
            },
            Budget: {
                TOOLTIP_DESCRIPTION: new pc,
                TOOLTIP_DESCRIPTION_TAX: new pc,
                TOOLTIP_DESCRIPTION_TAX_RATE: new gc,
                TOOLTIP_TITLE: new pc,
                TOOLTIP_TITLE_TAX: new pc,
                TOOLTIP_TITLE_TAX_RATE: new gc,
                TOOLTIP_UPKEEPS_PIECHART: new gc
            },
            Chirper: {
                AIR_POLLUTION_HIGH: new fc,
                AIR_POLLUTION_NEGATIVE: new fc,
                AURORA_BOREALIS: new fc,
                BIRTH_RATE_DOWN: new fc,
                BIRTH_RATE_UP: new fc,
                BRAND: new xc,
                BRAND_RENTED_AGRICULTURE: new fc("LINK_1"),
                BRAND_RENTED_BANK: new fc("LINK_1"),
                BRAND_RENTED_BAR: new fc("LINK_1"),
                BRAND_RENTED_FACTORY: new fc("LINK_1"),
                BRAND_RENTED_FORESTRY: new fc("LINK_1"),
                BRAND_RENTED_GAS_STATION: new fc("LINK_1"),
                BRAND_RENTED_HOTEL: new fc("LINK_1"),
                BRAND_RENTED_MINE: new fc("LINK_1"),
                BRAND_RENTED_OFFICE: new fc("LINK_1"),
                BRAND_RENTED_OIL: new fc("LINK_1"),
                BRAND_RENTED_RESTAURANT: new fc("LINK_1"),
                BRAND_RENTED_STORE: new fc("LINK_1"),
                BRAND_RENTED_WAREHOUSE: new fc("LINK_1"),
                CITY_SERVICE_EDUCATION_EXPORT: new fc,
                CITY_SERVICE_EDUCATION_IMPORT: new fc,
                CITY_SERVICE_ELECTRICITY_EXPORT: new fc,
                CITY_SERVICE_ELECTRICITY_IMPORT: new fc,
                CITY_SERVICE_FIRE_RESCUE_EXPORT: new fc,
                CITY_SERVICE_FIRE_RESCUE_IMPORT: new fc,
                CITY_SERVICE_GARBAGE_IMPORT: new fc,
                CITY_SERVICE_HEALTHCARE_EXPORT: new fc,
                CITY_SERVICE_HEALTHCARE_IMPORT: new fc,
                CITY_SERVICE_POLICE_EXPORT: new fc,
                CITY_SERVICE_POLICE_IMPORT: new fc,
                CITY_SERVICE_POST_EXPORT: new fc,
                CITY_SERVICE_POST_IMPORT: new fc,
                CITY_SERVICE_WATER_SEWAGE_EXPORT: new fc,
                CITY_SERVICE_WATER_SEWAGE_IMPORT: new fc,
                COMMERCIAL_LEVEL_DOWN: new fc,
                COMMERCIAL_LEVEL_UP: new fc,
                CRIME_NEGATIVE: new fc,
                CRIME_RATE_HIGH: new fc,
                DIRTY_WATER: new fc,
                ELECTRICITY_BLACKOUTS: new fc,
                FIRST_POWER_PLANT: new fc("LINK_TARGET_0"),
                GARBAGE_PILING_UP: new fc,
                GOOD_EDUCATION_SERVICE: new fc,
                GOOD_WELFARE_SERVICE_COVERAGE: new fc,
                GROUND_POLLUTION_NEGATIVE: new fc,
                HIGHEST_TEMP_15: new fc,
                HIGHEST_TEMP_NEG_15: new fc,
                HIGH_DEATH_RATE: new fc,
                HOUSING_SHORTAGE: new fc,
                INDUSTRIAL_LEVEL_DOWN: new fc,
                INDUSTRIAL_LEVEL_UP: new fc,
                LEISURE_TIME_NEGATIVE: new fc,
                LEISURE_TIME_POSITIVE: new fc,
                LOWEST_TEMP_15: new fc,
                LOWEST_TEMP_20: new fc,
                LOW_DEATH_RATE: new fc,
                LOW_HEALTH: new fc,
                LOW_NUMBER_OF_WORKERS: new fc,
                LOW_WELLBEING: new fc,
                MOSTLY_CLOUDY_WEATHER: new fc,
                MOSTLY_RAINY_WEATHER: new fc,
                MOSTLY_SNOWY_WEATHER: new fc,
                MOSTLY_STORMY_WEATHER: new fc,
                MOSTLY_SUNNY_WEATHER: new fc,
                NOISE_POLLUTION: new fc,
                NOISE_POLLUTION_NEGATIVE: new fc,
                NO_ELECTRICITY: new fc,
                NO_WATER: new fc,
                NO_WATER_SERVICE: new fc,
                OFFICE_LEVEL_DOWN: new fc,
                OFFICE_LEVEL_UP: new fc,
                OPENING_MESSAGE: new gc,
                PANEL_TITLE: new gc,
                PARK_COVERAGE: new fc,
                POLICE_CRIME_RATE_HIGH: new fc,
                POLICIES: new xc,
                POLICIES_SERVICE: new xc,
                POOR_EDUCATION_SERVICE: new fc,
                RELIABLE_ELECTRICITY_SUPPLY: new fc,
                RELIABLE_HEALTHCARE: new fc,
                RELIABLE_INTERNET_SERVICE: new fc,
                RELIABLE_POST_SERVICE: new fc,
                RESIDENTIAL_LEVEL_DOWN: new fc,
                RESIDENTIAL_LEVEL_UP: new fc,
                SERVICES_CITIZEN: new xc,
                SERVICES_COMMUNICATIONS: new xc,
                SERVICES_ELECTRICITY: new xc,
                SERVICES_GARBAGE: new xc,
                SERVICES_ROADS: new xc,
                SERVICES_TRANSPORTATION: new xc,
                SERVICES_WATER: new xc,
                SEWAGE_NEGATIVE: new fc,
                SMALL_HOME: new fc,
                STORAGES_FILLING_UP: new fc,
                TEMPERATURE_COLDER: new fc,
                TOURISM_DOWN_20: new fc,
                TOURISM_UP_20: new fc,
                TRAFFIC_ACCIDENT_NEARBY: new fc,
                TRAFFIC_JAMS: new fc,
                UNCONNECTED_CITY: new fc,
                UNEMPLOYMENT_RATE_HIGH: new fc,
                UNPAID_LOAN: new fc,
                UNRELIABLE_ELECTRICITY_SUPPLY: new fc,
                UNRELIABLE_HEALTHCARE: new fc,
                UNRELIABLE_INTERNET_SERVICE: new fc,
                UNRELIABLE_POST_SERVICE: new fc,
                VALENTINE_DAY: new fc,
                WATER_NEGATIVE_SERVICE_COVERAGE: new fc,
                WATER_POLLUTION_NEGATIVE: new fc
            },
            CinematicCamera: {
                CAPTURE: new gc,
                DELETE_DISCLAIMER: new gc("NAME"),
                DELETE_KEY: new gc,
                DELETE_TOOLTIP: new gc,
                FOCAL_LENGTH: new gc,
                HIDE_UI: new gc,
                KEY_FORMAT: new gc("KEY"),
                LOAD: new gc,
                LOAD_TOOLTIP: new gc,
                LOOP: new gc,
                NEW_SEQUENCE_PLACEHOLDER: new gc,
                OVERRIDE_DISCLAIMER: new gc("NAME"),
                PLAYBACK_DURATION: new gc,
                RESET_TOOLTIP: new gc,
                SAVE: new gc,
                SAVE_LOAD_TOOLTIP: new gc,
                SAVE_TOOLTIP: new gc,
                SEGMENT_DURATION: new gc,
                SIMULATION_SPEED: new gc,
                TITLE: new gc,
                UNSAVED_DISCLAIMER: new gc
            },
            CityInfoPanel: {
                DEMAND_DESCRIPTION: new pc,
                DEMAND_FACTOR: new pc,
                DEMAND_FACTOR_NEGATIVE: new pc,
                DEMAND_FACTOR_POSITIVE: new pc,
                DEMAND_TITLE: new pc,
                HAPPINESS: new gc,
                TAB: new pc,
                TITLE: new gc,
                TOOLTIP_DESCRIPTION_DEMAND: new pc,
                TOOLTIP_HAPPINESS_DESCRIPTION: new gc,
                TOOLTIP_HAPPINESS_TITLE: new gc,
                TOOLTIP_POLICIES_DESCRIPTION: new gc,
                TOOLTIP_POLICIES_TITLE: new gc,
                TOOLTIP_TITLE_DEMAND: new pc
            },
            Climate: {
                SEASON: new pc
            },
            Common: {
                ACTION: new pc,
                BOUNDS_CELSIUS: new gc("MIN","MAX"),
                BOUNDS_FAHRENHEIT: new gc("MIN","MAX"),
                BOUNDS_KELVIN: new gc("MIN","MAX"),
                BOUNDS_KILOWATT: new gc("MIN","MAX"),
                BOUNDS_MEGAWATT: new gc("MIN","MAX"),
                BOUNDS_PERCENT: new gc("MIN","MAX"),
                BOUNDS_TEMPERATURE: new gc("MIN","MAX"),
                CANCEL: new gc,
                CLEAR_SEARCH_TOOLTIP: new gc,
                CLOSE: new gc,
                CONFIRMATION: new gc,
                CONTINUE: new gc,
                DATE_TIME_FORMAT: new gc("MONTH","YEAR","HOUR","MINUTE"),
                DECIMAL_SEPARATOR: new gc,
                DELETE_TOOLTIP: new gc,
                DIALOG_ACTION: new pc,
                DIALOG_ACTION_INPUT: new pc,
                DIALOG_MESSAGE: new pc,
                DIALOG_MESSAGE_INPUT: new gc,
                DIALOG_MESSAGE_MODDING: new pc("MODNAME"),
                DIALOG_TITLE: new pc,
                DIALOG_TITLE_INPUT: new gc,
                DIALOG_TITLE_MODDING: new pc,
                DISABLE: new gc,
                DLC_TITLE: new pc,
                DONT_SHOW_AGAIN: new gc,
                ENABLE: new gc,
                ERROR: new gc,
                ERROR_DIALOG_CONTINUE: new gc,
                ERROR_DIALOG_COPY_DETAILS: new gc,
                ERROR_DIALOG_QUIT_GAME: new gc,
                ERROR_DIALOG_SAVE_CONTINUE: new gc,
                ERROR_DIALOG_SAVE_QUIT_GAME: new gc,
                ERROR_DIALOG_TITLE: new gc,
                EXIT_DIALOG_TEXT: new gc,
                EXIT_DIALOG_TITLE: new gc,
                EXIT_TO_DESKTOP: new gc,
                EXIT_TO_MENU: new gc,
                FOCUS: new gc,
                FRACTION_BODIES_PER_MONTH: new gc("VALUE","TOTAL"),
                FRACTION_CUBIC_METER: new gc("VALUE","TOTAL"),
                FRACTION_CUBIC_METER_PER_MONTH: new gc("VALUE","TOTAL"),
                FRACTION_GALLON: new gc("VALUE","TOTAL"),
                FRACTION_GALLON_PER_MONTH: new gc("VALUE","TOTAL"),
                FRACTION_INTEGER: new gc("VALUE","TOTAL"),
                FRACTION_INTEGER_PER_MONTH: new gc("VALUE","TOTAL"),
                FRACTION_KG: new gc("VALUE","TOTAL"),
                FRACTION_KG_PER_MONTH: new gc("VALUE","TOTAL"),
                FRACTION_KILOWATT: new gc("VALUE","TOTAL"),
                FRACTION_KILOWATT_HOURS: new gc("VALUE","TOTAL"),
                FRACTION_MEGAWATT: new gc("VALUE","TOTAL"),
                FRACTION_MEGAWATT_HOURS: new gc("VALUE","TOTAL"),
                FRACTION_POUND: new gc("VALUE","TOTAL"),
                FRACTION_POUND_PER_MONTH: new gc("VALUE","TOTAL"),
                FRACTION_SHORT_TON: new gc("VALUE","TOTAL"),
                FRACTION_SHORT_TON_PER_MONTH: new gc("VALUE","TOTAL"),
                FRACTION_TON: new gc("VALUE","TOTAL"),
                FRACTION_TON_PER_MONTH: new gc("VALUE","TOTAL"),
                FRACTION_XP: new gc("VALUE","TOTAL"),
                GO_BACK_TOOLTIP: new gc,
                HAPPINESS_FACTORS: new gc,
                HAPPINESS_FACTOR_NEGATIVE: new pc,
                HAPPINESS_FACTOR_POSITIVE: new pc,
                INFORMATION: new gc,
                INFOVIEW_MENU_TOGGLE_TOOLTIP: new gc,
                LANGUAGE_NAME: new gc,
                LOCKED: new gc,
                MEDIUM_DATE_FORMAT: new gc("MONTH","YEAR"),
                MONTH: new fc,
                MONTH_SHORT: new fc,
                NO: new gc,
                NONE: new gc,
                OK: new gc,
                PAUSE_MENU_TOGGLE_TOOLTIP: new gc,
                SAVEABILITY_REASON: new pc,
                SELECT: new gc,
                SUBMIT: new gc,
                THOUSANDS_SEPARATOR: new gc,
                TIMESTAMP_FORMAT: new gc,
                TIMESTAMP_FORMAT_12: new gc,
                TIME_FORMAT: new gc("HOUR","MINUTE"),
                TIME_FORMAT_12: new gc("HOUR","MINUTE","PERIOD"),
                TIME_PERIOD_AM: new gc,
                TIME_PERIOD_PM: new gc,
                UNLOCKED: new gc,
                VALUE_ACRE: new gc("SIGN","VALUE"),
                VALUE_ANGLE: new gc("SIGN","VALUE"),
                VALUE_BYTE: new gc("SIGN","VALUE"),
                VALUE_CELSIUS: new gc("SIGN","VALUE"),
                VALUE_CUBIC_METER: new gc("SIGN","VALUE"),
                VALUE_CUBIC_METER_PER_MONTH: new gc("SIGN","VALUE"),
                VALUE_FAHRENHEIT: new gc("SIGN","VALUE"),
                VALUE_FOOT: new gc("SIGN","VALUE"),
                VALUE_GALLON: new gc("SIGN","VALUE"),
                VALUE_GALLON_PER_MONTH: new gc("SIGN","VALUE"),
                VALUE_GIGABIT_PER_SECOND: new gc("SIGN","VALUE"),
                VALUE_GIGABYTE: new gc("SIGN","VALUE"),
                VALUE_KELVIN: new gc("SIGN","VALUE"),
                VALUE_KG_PER_MONTH: new gc("SIGN","VALUE"),
                VALUE_KILOBYTE: new gc("SIGN","VALUE"),
                VALUE_KILOGRAM: new gc("SIGN","VALUE"),
                VALUE_KILOMETER: new gc("SIGN","VALUE"),
                VALUE_KILOTON: new gc("SIGN","VALUE"),
                VALUE_KILOWATT: new gc("SIGN","VALUE"),
                VALUE_MEGABYTE: new gc("SIGN","VALUE"),
                VALUE_MEGAWATT: new gc("SIGN","VALUE"),
                VALUE_MEGAWATT_HOURS: new gc("SIGN","VALUE"),
                VALUE_METER: new gc("SIGN","VALUE"),
                VALUE_MILE: new gc("SIGN","VALUE"),
                VALUE_MILLION: new gc("SIGN","VALUE"),
                VALUE_MONEY: new gc("SIGN","VALUE"),
                VALUE_MONEY_PER_CELL: new gc("SIGN","VALUE"),
                VALUE_MONEY_PER_HOUR: new gc("SIGN","VALUE"),
                VALUE_MONEY_PER_KILOMETER: new gc("SIGN","VALUE"),
                VALUE_MONEY_PER_KILOMETER_PER_MONTH: new gc("SIGN","VALUE"),
                VALUE_MONEY_PER_MILE: new gc("SIGN","VALUE"),
                VALUE_MONEY_PER_MILE_PER_MONTH: new gc("SIGN","VALUE"),
                VALUE_MONEY_PER_MONTH: new gc("SIGN","VALUE"),
                VALUE_MONTH: new gc("VALUE"),
                VALUE_MONTHS: new gc("VALUE"),
                VALUE_PERCENT: new gc("SIGN","VALUE"),
                VALUE_PER_HOUR: new gc("SIGN","VALUE"),
                VALUE_PER_MONTH: new gc("SIGN","VALUE"),
                VALUE_PER_SQUARE_METER: new gc("SIGN","VALUE"),
                VALUE_POUND: new gc("SIGN","VALUE"),
                VALUE_POUND_PER_MONTH: new gc("SIGN","VALUE"),
                VALUE_SHORT_KILOTON: new gc("SIGN","VALUE"),
                VALUE_SHORT_TON: new gc("SIGN","VALUE"),
                VALUE_SHORT_TON_PER_CELL: new gc("SIGN","VALUE"),
                VALUE_SHORT_TON_PER_MONTH: new gc("SIGN","VALUE"),
                VALUE_SQUARE_FOOT: new gc("SIGN","VALUE"),
                VALUE_SQUARE_KILOMETER: new gc("SIGN","VALUE"),
                VALUE_SQUARE_METER: new gc("SIGN","VALUE"),
                VALUE_TEMPERATURE: new gc("SIGN","VALUE"),
                VALUE_TERABYTE: new gc("SIGN","VALUE"),
                VALUE_THOUSAND: new gc("SIGN","VALUE"),
                VALUE_TON: new gc("SIGN","VALUE"),
                VALUE_TON_PER_CELL: new gc("SIGN","VALUE"),
                VALUE_TON_PER_MONTH: new gc("SIGN","VALUE"),
                VALUE_XP: new gc("SIGN","VALUE"),
                VALUE_YARD: new gc("SIGN","VALUE"),
                VALUE_YEAR: new gc("VALUE"),
                VALUE_YEARS: new gc("VALUE"),
                WARNING: new gc,
                YES: new gc
            },
            CompanyInfoPanel: {
                COMMERCIAL_PROFITABILITY: new gc,
                INDUSTRIAL_PROFITABILITY: new gc,
                OFFICE_PROFITABILITY: new gc
            },
            Content: {
                NAME: new pc,
                PREREQUISITE: new gc
            },
            DefaultTool: {
                INFOMODE_TOOLTIP: new pc
            },
            DisasterInfoPanel: {
                CAPACITY: new gc,
                EVACUATED: new gc,
                SHELTER_AVAILABILITY: new gc
            },
            EconomyPanel: {
                BUDGET_BALANCE_LABEL: new pc,
                BUDGET_ITEM: new pc,
                BUDGET_ITEM_DESCRIPTION: new pc,
                BUDGET_LOANS_BUTTON_ACCEPT: new gc,
                BUDGET_LOANS_LABEL_AMOUNT: new gc,
                BUDGET_LOANS_LABEL_CURRENT_INTEREST: new gc,
                BUDGET_LOANS_LABEL_DAILY_INTEREST: new gc,
                BUDGET_LOANS_LABEL_DAILY_PAYMENT: new gc,
                BUDGET_LOANS_LABEL_DAYS_REMAINING: new gc,
                BUDGET_LOANS_LABEL_GET_MORE: new gc,
                BUDGET_LOANS_LABEL_NEW_LOAN: new gc,
                BUDGET_LOANS_LABEL_PAY_BACK: new gc,
                BUDGET_SUB_ITEM: new pc,
                BUDGET_TITLE_LOANS: new gc,
                EXPENSES_SECTION_TITLE: new gc,
                INCOME_SECTION_TITLE: new gc,
                LOAN_CHART_BUDGET_WARNING: new gc,
                LOAN_CHART_BUDGET_WARNING_MODIFIED: new gc,
                LOAN_CHART_DEFICIT: new gc("TOTAL"),
                LOAN_CHART_LEGEND_EXPENSES: new gc,
                LOAN_CHART_LEGEND_INCOME: new gc,
                LOAN_CHART_LEGEND_LOAN_INTEREST: new gc,
                LOAN_CHART_RELATIVE_COST: new gc("RELATIVE_LOAN_COST"),
                LOAN_CHART_REMAINING_SURPLUS: new gc("TOTAL"),
                LOAN_CHART_SURPLUS: new gc("TOTAL"),
                LOAN_FORM_ACCEPT: new gc,
                LOAN_FORM_LESS_LABEL: new gc,
                LOAN_FORM_LIMIT: new gc("LOAN_LIMIT"),
                LOAN_FORM_MORE_LABEL: new gc,
                LOAN_FORM_RESET: new gc,
                LOAN_PAGE_DESCRIPTION: new gc,
                LOAN_PAGE_TITLE: new gc,
                LOAN_TABLE_AMOUNT: new gc,
                LOAN_TABLE_INTEREST_RATE: new gc,
                LOAN_TABLE_MONTHLY_COST: new gc,
                MONTHLY_BALANCE: new gc,
                PRODUCTION_CHAIN_DIAGRAM: new gc,
                PRODUCTION_CHAIN_ITEM: new pc,
                PRODUCTION_DATA: new gc,
                PRODUCTION_LABEL_EXPORT: new gc,
                PRODUCTION_LABEL_IMPORT: new gc,
                PRODUCTION_LABEL_INTERNAL: new gc,
                PRODUCTION_LABEL_TOTAL: new gc,
                PRODUCTION_PAGE_CONSUMPTION: new gc,
                PRODUCTION_PAGE_DEFICIT: new gc,
                PRODUCTION_PAGE_EXPORT: new gc,
                PRODUCTION_PAGE_IMPORT: new gc,
                PRODUCTION_PAGE_PRODUCTION: new gc,
                PRODUCTION_PAGE_PRODUCTIONLINK: new pc,
                PRODUCTION_PAGE_SURPLUS: new gc,
                PRODUCTION_TAB_IMMATERIAL: new gc,
                PRODUCTION_TAB_MATERIAL: new gc,
                PRODUCTION_TOOLTIP_COMMERCIAL_CONSUMPTION: new gc,
                PRODUCTION_TOOLTIP_COMMERCIAL_WEALTH: new gc,
                PRODUCTION_TOOLTIP_INDUSTRIAL_CONSUMPTION: new gc,
                PRODUCTION_TOOLTIP_INDUSTRIAL_PRODUCTION: new gc,
                PRODUCTION_TOOLTIP_INDUSTRIAL_WEALTH: new gc,
                PRODUCTION_TOOLTIP_OFFICE_CONSUMPTION: new gc,
                PRODUCTION_TOOLTIP_OFFICE_WEALTH: new gc,
                RESOURCE_CATEGORY: new pc,
                SERVICES_BUILDING_EMPLOYMENT_LABEL: new gc,
                SERVICES_FEES_LABEL_DAILY_EXPENSES: new gc,
                SERVICES_FEES_LABEL_DAILY_INCOME: new gc,
                SERVICES_FEES_LABEL_EXPORT: new gc,
                SERVICES_FEES_LABEL_FEES: new gc,
                SERVICES_FEES_LABEL_IMPORT: new gc,
                SERVICES_FEES_LABEL_SERVICE_FEE: new gc,
                SERVICES_LABEL_TOTAL: new gc,
                SERVICES_LABEL_UPKEEP: new gc,
                SERVICES_LABEL_WAGES: new gc,
                SERVICES_RESOURCE_FEE_CONSUMPTION: new pc,
                SERVICES_RESOURCE_FEE_DESCRIPTION: new pc,
                SERVICES_RESOURCE_FEE_EFFICIENCY: new gc,
                SERVICES_RESOURCE_FEE_HAPPINESS: new gc,
                SERVICES_RESOURCE_FEE_LABEL: new pc,
                SERVICES_RESOURCE_LABEL: new pc,
                SERVICES_TITLE_BUDGET: new gc,
                SERVICES_TITLE_BUDGETS: new gc,
                SERVICES_TITLE_BUILDINGS: new gc,
                SERVICES_TITLE_EXPENSES: new gc,
                SERVICES_TITLE_IMPORT_BUDGET: new gc,
                SERVICES_TITLE_INCOME: new gc,
                SERVICES_TITLE_INFO: new gc,
                SERVICES_TITLE_QUALITY: new gc,
                SERVICE_BUDGET_EFFICIENCY: new gc,
                SERVICE_BUDGET_SLIDER_DESCRIPTION: new pc,
                SERVICE_BUDGET_SLIDER_TITLE: new pc,
                SERVICE_DESCRIPTION: new pc,
                SERVICE_EXPORT_REVENUE_DESCRIPTION: new gc,
                SERVICE_FEES_REVENUE_DESCRIPTION: new gc,
                SERVICE_IMPORT_EXPENSE_DESCRIPTION: new gc,
                SERVICE_UPKEEP_EXPENSE_DESCRIPTION: new gc,
                TAB: new pc,
                TAXATION_COMMERCIAL_TITLE: new gc,
                TAXATION_INDUSTRIAL_TITLE: new gc,
                TAXATION_OFFICE_TITLE: new gc,
                TAXATION_RESIDENTIAL_LABEL_JOBLEVEL: new gc,
                TAXATION_RESIDENTIAL_SLIDER_JOBLEVEL: new fc,
                TAXATION_RESIDENTIAL_TITLE: new gc,
                TAXATION_TAX_GROUP: new pc,
                TAX_AREA_COLUMN_TITLE: new gc,
                TAX_AREA_DESCRIPTION: new pc,
                TAX_AREA_TITLE: new pc,
                TAX_INCOME_ESTIMATE_TITLE: new gc,
                TAX_INCOME_TOTAL_TITLE: new gc,
                TAX_RANGE: new gc("MIN","MAX"),
                TAX_RATE_TITLE: new gc,
                TITLE: new gc
            },
            Editor: {
                ACTIVE_TOOLTIP: new gc,
                ADD_COMPONENT: new gc,
                ADD_COMPONENT_NAMED: new gc("NAME"),
                ADD_FAVORITE: new gc,
                ADD_TRANSLATION: new gc,
                ASSETS: new gc,
                ASSET_CATEGORY_TITLE: new pc,
                ASSET_DESCRIPTION: new gc,
                ASSET_NAME: new gc,
                BACK_TO_EDITOR: new gc,
                BETA_BANNER: new gc,
                BORDER_RIVER_WATER_SOURCES: new gc,
                BORDER_SEA_WATER_SOURCES: new gc,
                CAMERA_ANGLE: new gc,
                CAMERA_ANGLE_TOOLTIP: new gc,
                CAMERA_PIVOT: new gc,
                CAMERA_PIVOT_TOOLTIP: new gc,
                CAMERA_STARTING_POSITION: new gc,
                CAMERA_STARTING_POSITION_TOOLTIP: new gc,
                CAMERA_ZOOM: new gc,
                CAMERA_ZOOM_TOOLTIP: new gc,
                CAPTURE_CAMERA_POSITION: new gc,
                CAPTURE_CAMERA_POSITION_TOOLTIP: new gc,
                CHANGE_PREFAB_TYPE: new gc,
                CHECKLIST: new gc,
                CHECKLIST_AIR_CONNECTION: new gc,
                CHECKLIST_AIR_CONNECTION_TOOLTIP: new gc,
                CHECKLIST_ELECTRICITY_CONNECTION: new gc,
                CHECKLIST_ELECTRICITY_CONNECTION_TOOLTIP: new gc,
                CHECKLIST_FERTILE: new gc,
                CHECKLIST_FERTILE_TOOLTIP: new gc,
                CHECKLIST_FOREST: new gc,
                CHECKLIST_FOREST_TOOLTIP: new gc,
                CHECKLIST_NAME: new gc,
                CHECKLIST_NAME_TOOLTIP: new gc,
                CHECKLIST_OIL: new gc,
                CHECKLIST_OIL_TOOLTIP: new gc,
                CHECKLIST_OPTIONAL: new gc,
                CHECKLIST_OPTIONAL_TOOLTIP: new gc,
                CHECKLIST_ORE: new gc,
                CHECKLIST_ORE_TOOLTIP: new gc,
                CHECKLIST_REQUIRED: new gc,
                CHECKLIST_REQUIRED_TOOLTIP: new gc,
                CHECKLIST_ROAD_CONNECTION: new gc,
                CHECKLIST_ROAD_CONNECTION_TOOLTIP: new gc,
                CHECKLIST_STARTING_TILES: new gc,
                CHECKLIST_STARTING_TILES_TOOLTIP: new gc,
                CHECKLIST_TOOLTIP: new gc,
                CHECKLIST_TRAIN_CONNECTION: new gc,
                CHECKLIST_TRAIN_CONNECTION_TOOLTIP: new gc,
                CHECKLIST_WATER: new gc,
                CHECKLIST_WATER_TOOLTIP: new gc,
                CLEAR: new gc,
                CLEAR_ALL: new gc,
                CLEAR_RESOURCE: new pc,
                CLEAR_RESOURCE_TOOLTIP: new pc,
                CLIMATE: new gc,
                CLIMATE_DEFAULT_WEATHER: new gc,
                CLIMATE_DEFAULT_WEATHERS: new gc,
                CLIMATE_FREEZING_TEMPERATURE: new gc,
                CLIMATE_LATITUDE: new gc,
                CLIMATE_LOAD_PREFAB: new gc,
                CLIMATE_LOAD_PREFAB_TOOLTIP: new gc,
                CLIMATE_LONGITUDE: new gc,
                CLIMATE_SEASONS: new gc,
                CLIMATE_SETTINGS: new gc,
                CLIMATE_SETTINGS_TOOLTIP: new gc,
                CLIMATE_TOOLTIP: new gc,
                CLIMATE_WIND_DIRECTION: new gc,
                CLIMATE_WIND_DIRECTION_TOOLTIP: new gc,
                CLIMATE_WIND_SETTINGS: new gc,
                CLIMATE_WIND_SETTINGS_TOOLTIP: new gc,
                CLOUDINESS: new gc,
                COMPONENT_TYPES: new gc,
                CONSTANT_LEVEL_WATER_SOURCES: new gc,
                CONSTANT_RATE_WATER_SOURCES: new gc,
                CONTENT_PREREQUISITES: new gc,
                CONTENT_PREREQUISITES_TOOLTIP: new gc,
                CREATE_CUSTOM_CLIMATE: new gc,
                CREATE_CUSTOM_CLIMATE_PROMPT: new gc,
                CREATE_NEW_PREFAB: new gc,
                CURRENT_YEAR_AS_DEFAULT: new gc,
                CURRENT_YEAR_AS_DEFAULT_TOOLTIP: new gc,
                DELETE_COMPONENT: new gc,
                DELETE_MAP: new gc,
                DELETE_MAP_CONFIRM: new gc,
                DRIVES: new gc,
                DUPLICATE_TEMPLATE: new gc,
                DUPLICATE_TEMPLATE_TOOLTIP: new gc,
                ELEMENT_COUNT: new gc("COUNT"),
                EXPORT_HEIGHTMAP: new gc,
                EXPORT_HEIGHTMAP_TOOLTIP: new gc,
                EXPORT_WORLDMAP: new gc,
                EXPORT_WORLDMAP_TOOLTIP: new gc,
                FILE_NAME: new gc,
                FILTERS: new gc,
                FLOOD_HEIGHT: new gc,
                FLOOD_HEIGHT_TOOLTIP: new gc,
                HEIGHT: new gc,
                HEIGHTMAPS: new gc,
                HEIGHTMAPS_TOOLTIP: new gc,
                HEIGHT_OFFSET: new gc,
                HEIGHT_SCALE: new gc,
                HEIGHT_SCALE_TOOLTIP: new gc,
                HEIGHT_TOOLTIP: new gc,
                IMPORT: new gc,
                IMPORTING: new gc,
                IMPORT_HEIGHTMAP: new gc,
                IMPORT_HEIGHTMAP_TOOLTIP: new gc,
                IMPORT_RESOURCE: new pc,
                IMPORT_RESOURCE_TOOLTIP: new pc,
                IMPORT_WORLDMAP: new gc,
                IMPORT_WORLDMAP_TOOLTIP: new gc,
                INCORRECT_HEIGHTMAP_MESSAGE: new gc("WIDTH","HEIGHT"),
                INCORRECT_HEIGHTMAP_TITLE: new gc,
                INSTALOD_LABEL: new gc,
                LIST_ADD_ITEM: new gc,
                LIST_COUNT: new gc("COUNT"),
                LIST_ITEM_COLLAPSE: new gc,
                LIST_ITEM_DELETE: new gc,
                LIST_ITEM_DUPLICATE: new gc,
                LIST_ITEM_EXPAND: new gc,
                LIST_ITEM_MOVE_DOWN: new gc,
                LIST_ITEM_MOVE_UP: new gc,
                LIST_PAGE_COUNT: new gc("PAGE","PAGE_COUNT","COUNT"),
                LOAD: new gc,
                LOAD_MAP: new gc,
                LOAD_MAP_TOOLTIP: new gc,
                LOCALIZED_DESCRIPTION: new gc,
                LOCALIZED_NAME: new gc,
                LOCATE: new gc,
                LOCATE_TOOLTIP: new gc,
                MAP: new gc,
                MAP_DESCRIPTION: new gc,
                MAP_DESCRIPTION_TOOLTIP: new gc,
                MAP_NAME: new gc,
                MAP_NAME_AS_DEFAULT: new gc,
                MAP_NAME_AS_DEFAULT_TOOLTIP: new gc,
                MAP_NAME_TOOLTIP: new gc,
                MAP_OFFSET: new gc,
                MAP_SETTINGS: new gc,
                MAP_SIZE: new gc,
                MAP_TOOLTIP: new gc,
                MATERIALS: new gc,
                NEW_MAP: new gc,
                NEXT_PAGE: new gc,
                NONE_VALUE: new gc,
                OBJECTCONTAINER: new gc,
                OBJECTCONTAINER_TOOLTIP: new gc,
                OBJECT_TOOLTIP: new gc,
                OPEN_DIRECTORY: new gc,
                PAGE_FORMAT: new gc("CURRENT","TOTAL"),
                POLLUTION: new gc,
                POLLUTION_TOOLTIP: new gc,
                POSITION: new gc,
                POSITION_TOOLTIP: new gc,
                PREFAB_TYPES: new gc,
                PREVIEW: new gc,
                PREVIEW_TOOLTIP: new gc,
                PREVIOUS_PAGE: new gc,
                PROCESSING: new gc,
                PROJECT_ROOT: new gc,
                PROJECT_ROOT_TOOLTIP: new gc,
                RADIUS: new gc,
                RADIUS_TOOLTIP: new gc,
                REMOVE_FAVORITE: new gc,
                REMOVE_WORLDMAP: new gc,
                REMOVE_WORLDMAP_TOOLTIP: new gc,
                REQUIREMENTS: new gc,
                REQUIREMENTS_TOOLTIP: new gc,
                RESET_CLOUDINESS: new gc,
                RESET_TIME_OF_DAY: new gc,
                RESET_TIME_OF_YEAR: new gc,
                RESOURCES: new gc,
                RESOURCES_TOOLTIP: new gc,
                RESOURCE_TEXTURE_LABEL: new gc,
                RESOURCE_TOOLS: new gc,
                SAVE: new gc,
                SAVE_ASSET: new gc,
                SAVE_MAP: new gc,
                SAVE_MAP_SHARE: new gc,
                SAVE_MAP_TOOLTIP: new gc,
                SAVE_SHARE: new gc,
                SEARCH_PLACEHOLDER: new gc,
                SELECTED_ASSETS: new gc,
                SELECTED_ASSETS_TOOLTIP: new gc,
                SELECT_DIRECTORY: new gc,
                SELECT_NOTHING_EVERYTHING: new gc,
                SELECT_STARTING_TILES: new gc,
                SELECT_TEMPLATE: new gc,
                SHARE_ASSET: new gc,
                STARTING_MONTH: new gc,
                STARTING_TIME: new gc,
                STARTING_YEAR: new gc,
                STARTING_YEAR_TOOLTIP: new gc,
                STOP_SELECTING_STARTING_TILES: new gc,
                SUBMESH_TOOLTIP: new gc,
                TERRAIN_TOOLS: new gc,
                TERRAIN_TOOLS_TOOLTIP: new gc,
                THEME: new gc,
                THEME_TOOLTIP: new gc,
                THUMBNAIL: new gc,
                THUMBNAIL_TOOLTIP: new gc,
                TIME_OF_DAY: new gc,
                TIME_OF_YEAR: new gc,
                TOOL: new pc,
                TOOLTIP: new pc,
                UNIQUE_MAP_ID: new gc,
                WATER: new gc,
                WATER_RATE: new gc,
                WATER_RATE_TOOLTIP: new gc,
                WATER_SETTINGS: new gc,
                WATER_SETTINGS_TOOLTIP: new gc,
                WATER_SIMULATION_SPEED: new gc,
                WATER_SIMULATION_SPEED_TOOLTIP: new gc,
                WATER_TOOLTIP: new gc,
                WIDGETS: new pc,
                WORKSPACE: new gc,
                WORLD_OFFSET: new gc,
                WORLD_SIZE: new gc
            },
            EditorTutorials: {
                DESCRIPTION: new pc,
                TITLE: new pc,
                TODO_INTRO: new gc
            },
            EducationInfoPanel: {
                AVAILABILITY: new pc,
                EDUCATION_DISTRIBUTION: new gc,
                EDUCATION_LEVEL: new pc,
                ELIGIBLE: new gc,
                LEVEL: new pc,
                STUDENTS: new pc,
                STUDENT_COUNT: new gc
            },
            ElectricityInfoPanel: {
                BATTERY_CHARGE: new gc,
                ELECTRICITY_AVAILABILITY: new gc,
                ELECTRICITY_EXPORT: new gc,
                ELECTRICITY_IMPORT: new gc,
                ELECTRICITY_TRADE: new gc,
                ELECTRICITY_TRANSMISSION: new gc,
                ELECTRICITY_TRANSMITTED: new gc,
                TEMPERATURE_EFFECT: new gc
            },
            EventJournal: {
                EFFECT: new pc,
                EVENT_TITLE: new pc,
                OPENING_MESSAGE: new gc,
                PANEL_TITLE: new gc
            },
            FireAndRescueInfoPanel: {
                AVERAGE_FIRE_HAZARD: new gc
            },
            GameListScreen: {
                BIOME_LABEL: new gc,
                BUILDABLE_AREA_LABEL: new gc,
                CITY_DETAILS_SECTION: new gc,
                CLIMATE_LABEL: new gc,
                CONFIRM_MISSING_REQUIRED_CONTENT: new gc,
                CONFIRM_OVERWRITE_MESSAGE: new gc,
                CONFIRM_UNSAVED_MESSAGE: new gc,
                CONNECTIONS_LABEL: new gc,
                EQUATOR: new gc,
                GAME_OPTION: new pc,
                GAME_OPTIONS_SECTION: new gc,
                GAME_OPTION_DESCRIPTION: new pc,
                HEMISPHERE_N: new gc,
                HEMISPHERE_S: new gc,
                INVALID_NAME_MESSAGE: new gc,
                LAST_MODIFIED_LABEL: new gc,
                LATITUDE_LABEL: new gc,
                LOAD_GAME_BUTTON: new gc,
                LOAD_GAME_SCREEN_TITLE: new gc,
                MAP_DETAILS_SECTION: new gc,
                MAP_FILTER: new pc,
                MAP_LABEL: new gc,
                MAP_MISSING_REQUIRED_CONTENT: new gc,
                MONEY_LABEL: new gc,
                NEW_GAME_SCREEN_TITLE: new gc,
                NEW_SAVE: new gc,
                OVERWRITE_SAVE_GAME_BUTTON: new gc,
                POPULATION_LABEL: new gc,
                RESOURCES_LABEL: new gc,
                SAVEGAME_MISSING_REQUIRED_CONTENT: new gc,
                SAVE_GAME_BUTTON: new gc,
                SAVE_GAME_SCREEN_TITLE: new gc,
                SAVE_NAME_LABEL: new gc,
                START_GAME_BUTTON: new gc,
                THEME_LABEL: new gc,
                TOOLTIP_MISSING_REQUIRED_CONTENT: new gc,
                TUTORIAL_OPTIONS: new gc,
                WATER_AVAILABILITY_LABEL: new gc,
                XP_LABEL: new gc
            },
            GarbageInfoPanel: {
                GARBAGE_RATE: new gc,
                LANDFILL_AVAILABILITY: new gc,
                PROCESSING_STATUS: new gc,
                STORED_GARBAGE: new gc
            },
            GroundPollutionInfoPanel: {
                AVERAGE_GROUND_POLLUTION: new gc
            },
            HealthcareInfoPanel: {
                AVERAGE_HEALTH: new gc,
                CEMETERY_AVAILABILITY: new gc,
                CREMATORIUM_AVAILABILITY: new gc,
                DEATH_RATE: new gc,
                HEALTHCARE_AVAILABILITY: new gc,
                N_A: new gc,
                OCCUPIED: new gc,
                PATIENTS: new gc,
                PROCESSING_RATE: new gc,
                SICK_OR_INJURED: new gc
            },
            ISO: {
                COUNTRY: new pc
            },
            InfoPanels: {
                CAPACITY: new gc,
                CONSUMPTION: new gc,
                OUTPUT: new gc,
                PROCESSING: new gc,
                PRODUCTION: new gc,
                STORED: new gc
            },
            Infoviews: {
                AVAILABILITY: new gc,
                AVERAGE_AIR_POLLUTION_TOOLTIP: new gc,
                AVERAGE_COMMERCIAL_PROFIT_TOOLTIP: new gc,
                AVERAGE_FIRE_HAZARD_TOOLTIP: new gc,
                AVERAGE_GROUND_POLLUTION_TOOLTIP: new gc,
                AVERAGE_INDUSTRIAL_PROFIT_TOOLTIP: new gc,
                AVERAGE_LAND_VALUE_TOOLTIP: new gc,
                AVERAGE_NOISE_POLLUTION_TOOLTIP: new gc,
                AVERAGE_OFFICE_PROFIT_TOOLTIP: new gc,
                AVERAGE_WATER_POLLUTION_TOOLTIP: new gc,
                BATTERY_CHARGE_TOOLTIP: new gc,
                CEMETERY_AVAILABILITY_TOOLTIP: new gc,
                CITY_ATTRACTIVENESS_TOOLTIP: new gc,
                CLOSE_INFO_VIEW: new gc,
                COLLEGE_AVAILABILITY_TOOLTIP: new gc,
                COMMERCIAL_LEVEL_TOOLTIP: new gc,
                CREMATORIUM_AVAILABILITY_TOOLTIP: new gc,
                CRIME_PROBABILITY_TOOLTIP: new gc,
                EDUCATION_DISTRIBUTION_TOOLTIP: new gc,
                ELECTRICITY_AVAILABILITY_TOOLTIP: new gc,
                ELECTRICITY_TRADE_TOOLTIP: new gc,
                ELECTRICITY_TRANSMISSION_TOOLTIP: new gc,
                ELEMENTARY_SCHOOL_AVAILABILITY_TOOLTIP: new gc,
                EXPORT_DISTRIBUTION_TOOLTIP: new gc,
                FERTILE_LAND_RESOURCE_TOOLTIP: new gc,
                FISH_RESOURCE_TOOLTIP: new gc,
                GARBAGE_PROCESSING_STATUS_TOOLTIP: new gc,
                HAPPINESS_FACTORS_TOOLTIP: new gc,
                HEALTHCARE_AVAILABILITY_TOOLTIP: new gc,
                HIGH_SCHOOL_AVAILABILITY_TOOLTIP: new gc,
                IMPORT_DISTRIBUTION_TOOLTIP: new gc,
                INDUSTRIAL_LEVEL_TOOLTIP: new gc,
                INFOMODE: new pc,
                INFOMODE_TOOLTIP: new pc,
                INFOMODE_TYPE: new pc,
                INFOVIEW: new pc,
                JAIL_AVAILABILITY_TOOLTIP: new gc,
                LABEL: new pc,
                LABEL_VALUE_FORMAT: new gc("LABEL","VALUE"),
                LANDFILL_AVAILABILITY_TOOLTIP: new gc,
                MAIL_SERVICE_AVAILABILITY_TOOLTIP: new gc,
                MAP_LEGEND: new gc,
                OFFICE_LEVEL_TOOLTIP: new gc,
                OIL_RESOURCE_TOOLTIP: new gc,
                ORE_RESOURCE_TOOLTIP: new gc,
                PARKING_AVAILABILITY_TOOLTIP: new gc,
                POPULATION_DISTRIBUTION_TOOLTIP: new gc,
                POPULATION_STATISTICS_TOOLTIP: new gc,
                PRISON_AVAILABILITY_TOOLTIP: new gc,
                REMOVE_USER_INFOVIEW_BUTTON_TOOLTIP: new gc,
                RESIDENTIAL_LEVEL_TOOLTIP: new gc,
                SEWAGE_TRADE_TOOLTIP: new gc,
                SEWAGE_TREATMENT_TOOLTIP: new gc,
                SHELTER_AVAILABILITY_TOOLTIP: new gc,
                TITLE_INFOVIEWS: new gc,
                TRAFFIC_FLOW: new gc,
                UNIVERSITY_AVAILABILITY_TOOLTIP: new gc,
                USER_INFOMODE_SELECTOR_TOOLTIP: new gc,
                WATER_AVAILABILITY_TOOLTIP: new gc,
                WATER_STORAGE_TOOLTIP: new gc,
                WATER_TRADE_TOOLTIP: new gc,
                WOOD_RESOURCE_TOOLTIP: new gc,
                WORKPLACE_DISTRIBUTION_TOOLTIP: new gc
            },
            LandValueInfoPanel: {
                AVERAGE_LAND_VALUE: new gc
            },
            LevelInfoPanel: {
                COMMERCIAL: new gc,
                INDUSTRIAL: new gc,
                LEVEL1: new gc,
                LEVEL2: new gc,
                LEVEL3: new gc,
                LEVEL4: new gc,
                LEVEL5: new gc,
                OFFICE: new gc,
                RESIDENTIAL: new gc
            },
            LifePath: {
                BACK_BUTTON_TOOLTIP: new gc,
                CITIZEN_BECAME_UNEMPLOYED: new fc("LINK_1"),
                CITIZEN_BIRTH: new gc,
                CITIZEN_COMMITED_ROBBERY: new fc,
                CITIZEN_DIED: new fc,
                CITIZEN_FAILED_SCHOOL: new fc("LINK_1"),
                CITIZEN_GOT_ARRESTED: new fc,
                CITIZEN_GOT_INJURED: new fc,
                CITIZEN_GOT_INJURED_BY_EVENT: new fc("LINK_1"),
                CITIZEN_GOT_IN_DANGER_BY_EVENT: new fc("LINK_1"),
                CITIZEN_GOT_SICK: new fc,
                CITIZEN_GOT_SICK_BY_EVENT: new fc("LINK_1"),
                CITIZEN_GOT_TRAPPED: new fc,
                CITIZEN_GOT_TRAPPED_BY_EVENT: new fc("LINK_1"),
                CITIZEN_GRADUATED: new fc("LINK_1"),
                CITIZEN_IN_DANGER: new fc,
                CITIZEN_LOST_FAMILY_MEMBER: new fc("LINK_1"),
                CITIZEN_MADE_BABY_COUPLE: new fc("LINK_1","LINK_2"),
                CITIZEN_MADE_BABY_SINGLE: new fc("LINK_1"),
                CITIZEN_MOVED_HOUSE: new fc("LINK_1"),
                CITIZEN_MOVED_OUT_OF_CITY: new fc("LINK_1"),
                CITIZEN_PARTNERED_UP: new fc("LINK_1"),
                CITIZEN_SENTENCED_TO_PRISON: new fc,
                CITIZEN_SEPARATED: new fc("LINK_1"),
                CITIZEN_STARTED_SCHOOL: new fc("LINK_1"),
                CITIZEN_STARTED_WORKING: new fc("LINK_1"),
                DETAIL_PANEL_TITLE: new gc("NAME"),
                LIST_PANEL_TITLE: new gc,
                MAX_EXCEEDED_WARNING: new gc,
                OCCUPATION: new gc("OCCUPATION","WORKPLACE_LINK","WORKPLACE_NAME"),
                OPENING_MESSAGE: new gc,
                TOURIST_LEFT_CITY: new fc("LINK_1"),
                UNFOLLOW_BUTTON_TOOLTIP: new gc
            },
            Loading: {
                HINTMESSAGE: new fc,
                LOADING_TITLE: new gc
            },
            Main: {
                TOOLTIP_DESCRIPTION_ADVISOR: new gc,
                TOOLTIP_DESCRIPTION_CAMERA_MODES: new gc,
                TOOLTIP_DESCRIPTION_CHIRPER: new gc,
                TOOLTIP_DESCRIPTION_CINEMATIC_CAMERA: new gc,
                TOOLTIP_DESCRIPTION_CITY_ECONOMY: new gc,
                TOOLTIP_DESCRIPTION_CITY_INFO: new gc,
                TOOLTIP_DESCRIPTION_CITY_NAME: new gc,
                TOOLTIP_DESCRIPTION_CITY_STATISTICS: new gc,
                TOOLTIP_DESCRIPTION_CURRENT_MILESTONE: new gc,
                TOOLTIP_DESCRIPTION_DATE: new gc,
                TOOLTIP_DESCRIPTION_DEMAND: new gc,
                TOOLTIP_DESCRIPTION_ELEVATION_LOWER: new gc,
                TOOLTIP_DESCRIPTION_ELEVATION_RAISE: new gc,
                TOOLTIP_DESCRIPTION_EVENT_JOURNAL: new gc,
                TOOLTIP_DESCRIPTION_FOLLOWED_CITIZENS: new gc,
                TOOLTIP_DESCRIPTION_FREE_CAMERA: new gc,
                TOOLTIP_DESCRIPTION_GAME_SPEED: new gc,
                TOOLTIP_DESCRIPTION_INFO_VIEWS: new gc,
                TOOLTIP_DESCRIPTION_LINES_OVERVIEW: new gc,
                TOOLTIP_DESCRIPTION_MAP_TILES: new gc,
                TOOLTIP_DESCRIPTION_MAX_MILESTONE: new gc,
                TOOLTIP_DESCRIPTION_MONEY: new gc,
                TOOLTIP_DESCRIPTION_NOTIFICATIONS: new gc,
                TOOLTIP_DESCRIPTION_PAUSE: new gc,
                TOOLTIP_DESCRIPTION_PAUSE_MENU: new gc,
                TOOLTIP_DESCRIPTION_PHOTO_MODE: new gc,
                TOOLTIP_DESCRIPTION_PLAY: new gc,
                TOOLTIP_DESCRIPTION_POPULATION: new gc,
                TOOLTIP_DESCRIPTION_PROGRESSION: new gc,
                TOOLTIP_DESCRIPTION_RADIO: new gc,
                TOOLTIP_DESCRIPTION_UNDERGROUND: new gc,
                TOOLTIP_DESCRIPTION_UNLIMITED_MONEY: new gc,
                TOOLTIP_DESCRIPTION_WEATHER: new gc,
                TOOLTIP_DESCRIPTION_XP: new gc,
                TOOLTIP_TITLE_ADVISOR: new gc,
                TOOLTIP_TITLE_CAMERA_MODES: new gc,
                TOOLTIP_TITLE_CHIRPER: new gc,
                TOOLTIP_TITLE_CINEMATIC_CAMERA: new gc,
                TOOLTIP_TITLE_CITY_ECONOMY: new gc,
                TOOLTIP_TITLE_CITY_INFO: new gc,
                TOOLTIP_TITLE_CITY_NAME: new gc,
                TOOLTIP_TITLE_CITY_STATISTICS: new gc,
                TOOLTIP_TITLE_CURRENT_MILESTONE: new gc,
                TOOLTIP_TITLE_DATE: new gc,
                TOOLTIP_TITLE_DEMAND: new gc,
                TOOLTIP_TITLE_ELEVATION_LOWER: new gc,
                TOOLTIP_TITLE_ELEVATION_RAISE: new gc,
                TOOLTIP_TITLE_EVENT_JOURNAL: new gc,
                TOOLTIP_TITLE_FOLLOWED_CITIZENS: new gc,
                TOOLTIP_TITLE_FREE_CAMERA: new gc,
                TOOLTIP_TITLE_GAME_SPEED: new gc,
                TOOLTIP_TITLE_INFO_VIEWS: new gc,
                TOOLTIP_TITLE_LINES_OVERVIEW: new gc,
                TOOLTIP_TITLE_MAP_TILES: new gc,
                TOOLTIP_TITLE_MONEY: new gc,
                TOOLTIP_TITLE_NOTIFICATIONS: new gc,
                TOOLTIP_TITLE_PAUSE: new gc,
                TOOLTIP_TITLE_PAUSE_MENU: new gc,
                TOOLTIP_TITLE_PHOTO_MODE: new gc,
                TOOLTIP_TITLE_PLAY: new gc,
                TOOLTIP_TITLE_POPULATION: new gc,
                TOOLTIP_TITLE_PROGRESSION: new gc,
                TOOLTIP_TITLE_RADIO: new gc,
                TOOLTIP_TITLE_UNDERGROUND: new gc,
                TOOLTIP_TITLE_WEATHER: new gc,
                TOOLTIP_TITLE_XP: new gc
            },
            MapTilePurchase: {
                AVAILABLE_EXPANSION_PERMITS: new gc("VALUE"),
                AVAILABLE_WATER: new gc,
                BUILDABLE_AREA: new gc,
                COST: new gc,
                PERMITS_USED: new gc,
                PURCHASE_STATUS: new pc,
                PURCHASE_STATUS_TOOLTIP: new pc,
                RESOURCE: new pc,
                RESOURCES: new gc,
                TILE_UPKEEP: new gc,
                TITLE: new gc,
                TOOLTIP_COST: new gc,
                TOOLTIP_RESOURCE: new pc,
                TOOLTIP_TILES: new gc,
                TOOLTIP_TITLE_COST: new gc,
                TOOLTIP_TITLE_RESOURCE: new pc,
                TOOLTIP_TITLE_TILES: new gc
            },
            Maps: {
                MAP_DESCRIPTION: new pc,
                MAP_TITLE: new pc,
                OUTSIDE_CONNECTIONS: new pc,
                RESOURCE: new pc
            },
            Menu: {
                ACHIEVEMENTS_WARNING_DEBUGMENU: new gc,
                ACHIEVEMENTS_WARNING_GAME_OPTIONS: new gc,
                ACHIEVEMENTS_WARNING_GAME_OPTIONS_PS: new gc,
                ACHIEVEMENTS_WARNING_MODS: new gc,
                ACHIEVEMENTS_WARNING_MODS_PS: new gc,
                ACHIEVEMENTS_WARNING_PAST_DEBUGMENU: new gc,
                ACHIEVEMENTS_WARNING_PAST_MODS: new gc,
                ACHIEVEMENTS_WARNING_PAST_MODS_PS: new gc,
                ACHIEVEMENTS_WARNING_PAST_OPTIONS: new gc,
                ACHIEVEMENTS_WARNING_PAST_OPTIONS_PS: new gc,
                ACHIEVEMENTS_WARNING_READONLY: new gc,
                APPLICATION_QUIT_MESSAGE: new gc,
                ASSET_ADD_EXTERNAL_LINK: new gc,
                ASSET_ADD_LINK: new gc,
                ASSET_ADD_PREVIEW_SCREENSHOT: new gc,
                ASSET_CHANGELOG: new gc,
                ASSET_COMPLETE: new gc,
                ASSET_COPY_ID: new gc,
                ASSET_ERROR_DESCRIPTION: new gc,
                ASSET_ERROR_EMPTY_CHANGELOG: new gc,
                ASSET_ERROR_LINK: new gc,
                ASSET_ERROR_NAME: new gc,
                ASSET_ERROR_VERSION: new gc,
                ASSET_EXISTING: new gc,
                ASSET_EXISTING_ID: new gc,
                ASSET_EXTERNAL_LINKS: new gc,
                ASSET_EXTERNAL_LINK_TYPE: new pc,
                ASSET_EXTERNAL_LINK_URL: new gc,
                ASSET_FAILURE: new gc,
                ASSET_FORUM_LINK: new gc("INDEX"),
                ASSET_FORUM_LINKS: new gc,
                ASSET_FORUM_LINK_LABEL: new gc,
                ASSET_LONG_DESCRIPTION: new gc,
                ASSET_NAME: new gc,
                ASSET_PREPARING: new gc,
                ASSET_PREVIEW_SCREENSHOTS: new gc,
                ASSET_REMOVE_PREVIEW_SCREENSHOT: new gc,
                ASSET_SCREENSHOT_EMPTY_SUBTITLE: new gc,
                ASSET_SCREENSHOT_EMPTY_TITLE: new gc,
                ASSET_SHORT_DESCRIPTION: new gc,
                ASSET_SUBMITTING: new gc,
                ASSET_TYPE: new pc,
                ASSET_UPDATE_EXISTING: new gc,
                ASSET_UPLOAD: new gc,
                ASSET_UPLOAD_ID: new gc("ID"),
                ASSET_VERSION: new gc,
                BACK: new gc,
                BETA_LABEL: new gc,
                BINARY_PACK_ASSETS: new gc,
                BINARY_PACK_ASSETS_TOOLTIP: new gc,
                CITY_NAME_LABEL: new gc,
                CLOUD_TARGET: new pc,
                CLOUD_TARGET_LABEL: new gc,
                CONFIRM_DELETE_SAVE_WARNING: new gc,
                CONTINUE_GAME: new gc,
                CREDITS: new gc,
                DLC_TAB: new gc,
                EDITOR: new gc,
                EMPTY_SLOT: new gc,
                EXIT_APPLICATION: new gc,
                EXIT_GAME: new gc,
                GAME_MODE: new gc,
                GAME_MODE_DESCRIPTION: new pc,
                GAME_MODE_NAME: new pc,
                GAME_MODE_RULES: new pc("AMOUNT","MULTIPLIER"),
                GDKCLOUD_SAVE: new gc,
                LOAD_GAME: new gc,
                LOAD_GAME_BUTTON: new gc,
                MAP_OPTIONS: new gc,
                MODS_TAB: new gc,
                NAME_FIELD_PLACEHOLDER: new gc,
                NEWS_PANEL_TITLE: new gc,
                NEW_GAME: new gc,
                NOTIFICATIONS_OPENING_MESSAGE: new gc,
                NOTIFICATIONS_TITLE: new gc,
                NOTIFICATION_DESCRIPTION: new pc("LOADED","TOTAL"),
                NOTIFICATION_TITLE: new pc,
                OPTIONS: new gc,
                PARADOXCLOUD_SAVE: new gc,
                PARADOXMODS_SAVE: new gc,
                PDX_MODS: new gc,
                RANDOM_CITY_NAME_BUTTON_TOOLTIP: new gc,
                READONLY_SAVE: new gc,
                RESUME_GAME: new gc,
                SAVE_CITY_SIZE_WARNING: new gc,
                SAVE_GAME: new gc,
                SAVE_LIST: new gc,
                SAVE_OPTIONS: new gc,
                SAVE_ORDERING: new pc,
                SAVE_ORDERING_LABEL: new gc,
                SELECT_MAP: new gc,
                SELECT_MAP_BUTTON: new gc,
                SELECT_MODE_BUTTON: new gc,
                SIMULATION_DATE_LABEL: new gc,
                START_GAME_BUTTON: new gc,
                STEAMCLOUD_SAVE: new gc,
                SWITCH_USER: new gc,
                UNLIMITED_MONEY_LABEL: new gc
            },
            NaturalResourcesInfoPanel: {
                AVAILABLE: new gc,
                FERTILITY: new gc,
                FISH: new gc,
                FOREST: new gc,
                OIL: new gc,
                ORE: new gc,
                RATE: new gc,
                RENEWAL_RATE: new gc
            },
            NoisePollutionInfoPanel: {
                AVERAGE_NOISE_POLLUTION: new gc
            },
            Notifications: {
                DESCRIPTION: new pc,
                TITLE: new pc
            },
            Options: {
                ANTIALIASINGMETHOD: new pc,
                AUTORELOADMODE: new pc,
                AUTOSAVE: new gc,
                AUTOSAVECOUNT: new pc,
                AUTOSAVEINTERVAL: new pc,
                BATCH_SWAP_BINDINGS: new gc,
                BATCH_SWAP_GROUP_BLOCK_RESOLUTION: new gc("CONTROL"),
                BATCH_SWAP_GROUP_NO_RESOLUTION: new gc("CONTROL"),
                BATCH_SWAP_GROUP_PROMT: new gc,
                BATCH_SWAP_GROUP_RESET_PROMT: new gc,
                BATCH_SWAP_GROUP_RESOLUTION: new gc("CONTROL"),
                BINDING_CONFLICT_BUILTIN_WITH_BUILTIN_TOOLTIP: new gc,
                BINDING_CONFLICT_MOD_WITH_BUILTIN_TOOLTIP: new gc,
                BINDING_CONFLICT_MOD_WITH_MOD_TOOLTIP: new gc,
                CANNOT_BE_REBOUND: new gc,
                CONFLICT_BUILTIN_BINDING_TOOLTIP: new gc,
                CONFLICT_MODS_BINDING_TOOLTIP: new gc,
                CURSORMODE: new pc,
                DEPTHOFFIELDMODE: new pc,
                DEPTHOFFIELDRESOLUTION: new pc,
                DESCRIPTION_BOX_TITLE: new gc,
                DISPLAYMODE: new pc,
                DISPLAY_INDEX_FORMAT: new gc("INDEX"),
                DISPLAY_MODE: new pc,
                DISPLAY_SETTINGS_CONFIRM: new gc,
                DISPLAY_SETTINGS_PROMPT: new gc,
                DISPLAY_SETTINGS_REVERT: new gc("TIME"),
                DLSSQUALITY: new pc,
                DYNRESUPSCALEFILTER: new pc,
                ERROR_TOOLCHAIN: new gc,
                ERROR_TOOLCHAIN_DEPENDENCY_DOWNLOAD: new gc("DEPENDENCY_NAME"),
                ERROR_TOOLCHAIN_DEPENDENCY_DOWNLOAD_DETAILS: new gc("DEPENDENCY_NAME","DETAILS"),
                ERROR_TOOLCHAIN_DEPENDENCY_INSTALL: new gc("DEPENDENCY_NAME"),
                ERROR_TOOLCHAIN_DEPENDENCY_INSTALL_DETAILS: new gc("DEPENDENCY_NAME","DETAILS"),
                ERROR_TOOLCHAIN_DEPENDENCY_UNINSTALL: new gc("DEPENDENCY_NAME"),
                ERROR_TOOLCHAIN_DEPENDENCY_UNINSTALL_DETAILS: new gc("DEPENDENCY_NAME","DETAILS"),
                ERROR_TOOLCHAIN_INSTALL_UNKNOWN: new gc,
                ERROR_TOOLCHAIN_NO_SPACE: new gc,
                ERROR_TOOLCHAIN_NO_SPACE_DETAILS: new gc("DETAILS"),
                ERROR_TOOLCHAIN_UNINSTALL_UNKNOWN: new gc,
                FILTERMODE: new pc,
                FORMAT: new pc("SIGN","VALUE"),
                FPSMODE: new pc,
                FSR2QUALITY: new pc,
                GROUP: new pc,
                INPUTHINTSTYPE: new pc,
                INPUT_CONFLICT_BATCH_NO_RESOLUTION: new gc("CONTROL","BINDING"),
                INPUT_CONFLICT_BATCH_RESOLUTION: new gc("CONTROL","BINDING"),
                INPUT_CONFLICT_FORMAT: new gc("MAP","TITLE"),
                INPUT_CONFLICT_NO_RESOLUTION: new gc("CONTROL","BINDING"),
                INPUT_CONFLICT_PROMPT: new gc("CONTROL","BINDING"),
                INPUT_CONFLICT_TITLE: new gc,
                INPUT_CONTROL: new pc,
                INPUT_CONTROL_NA: new gc,
                INPUT_CONTROL_PS: new pc,
                INPUT_CONTROL_SHORT: new pc,
                INPUT_CONTROL_SHORT_PS: new pc,
                INPUT_CONTROL_SHORT_XBOX: new pc,
                INPUT_CONTROL_UNSET: new gc,
                INPUT_CONTROL_XBOX: new pc,
                INPUT_MAP: new pc,
                INPUT_MODIFIER_SEPARATOR: new gc,
                INPUT_REBIND_PROMPT: new pc,
                INPUT_REBIND_PROMPT_KEY_ONLY: new pc("MODIFIERS"),
                INPUT_REBIND_PROMPT_KEY_ONLY_PS: new pc("MODIFIERS"),
                INPUT_REBIND_PROMPT_KEY_ONLY_XBOX: new pc("MODIFIERS"),
                INPUT_REBIND_PROMPT_MODIFIERS_ONLY: new pc("CONTROL","SHIFT","CTRL","ALT","LSP","RSP"),
                INPUT_REBIND_PROMPT_MODIFIERS_ONLY_PS: new pc("CONTROL","LSP","RSP"),
                INPUT_REBIND_PROMPT_MODIFIERS_ONLY_XBOX: new pc("CONTROL","LSP","RSP"),
                INPUT_REBIND_PROMPT_NEW: new pc("SHIFT","CTRL","ALT","LSP","RSP"),
                INPUT_REBIND_PROMPT_NEW_PS: new pc("LSP","RSP"),
                INPUT_REBIND_PROMPT_NEW_XBOX: new pc("LSP","RSP"),
                INPUT_REBIND_PROMPT_NO_MODIFIERS: new pc,
                INPUT_REBIND_PROMPT_NO_MODIFIERS_PS: new pc,
                INPUT_REBIND_PROMPT_NO_MODIFIERS_XBOX: new pc,
                INPUT_REBIND_PROMPT_PS: new pc,
                INPUT_REBIND_PROMPT_XBOX: new pc,
                INPUT_REBIND_TITLE: new gc("BINDING"),
                INTERFACE_STYLE: new pc,
                KEYBOARDLAYOUT: new pc,
                LEVEL: new pc,
                MOD_TOOLCHAIN_STATUS: new pc,
                MSAASAMPLES: new pc,
                OPTION: new pc,
                OPTION_DESCRIPTION: new pc,
                PERFORMANCEPREFERENCE: new pc,
                REBIND_OPTIONS_TOOLTIP: new pc,
                RESET_BINDING_TOOLTIP: new gc,
                SCREEN_RESOLUTION_FORMAT: new gc("WIDTH","HEIGHT","REFRESH_RATE"),
                SCREEN_TITLE: new gc,
                SEARCH: new pc,
                SECTION: new pc,
                SKINNING: new pc,
                SMAAQUALITYLEVEL: new pc,
                STATE_TOOLCHAIN: new pc("VERSION"),
                SWAP_BINDINGS: new gc,
                TAB: new pc,
                TAB_PS: new pc,
                TEMPERATUREUNIT: new pc,
                TIMEFORMAT: new pc,
                UNITSYSTEM: new pc,
                UNSET_BINDINGS: new gc,
                UNSET_BINDING_TOOLTIP: new gc,
                WARNING: new pc,
                WARN_TOOLCHAIN_DEPENDENCY_UNINSTALL: new gc("DEPENDENCY_NAME"),
                WARN_TOOLCHAIN_DOTNET_UNINSTALL: new gc("DOTNET_VERSION"),
                WARN_TOOLCHAIN_INSTALL: new gc("UNITY_VERSION","HOST"),
                WARN_TOOLCHAIN_INSTALL_DOTNET: new gc("DOTNET_VERSION","HOST"),
                WARN_TOOLCHAIN_INSTALL_MOD_PROJECT: new gc,
                WARN_TOOLCHAIN_INSTALL_NEW: new gc,
                WARN_TOOLCHAIN_INSTALL_NODEJS: new gc("NODEJS_VERSION","HOST"),
                WARN_TOOLCHAIN_INSTALL_PROJECT_TEMPLATE: new gc,
                WARN_TOOLCHAIN_INSTALL_UNITY: new gc("UNITY_VERSION","HOST"),
                WARN_TOOLCHAIN_INSTALL_UNITY_LICENSE: new gc,
                WARN_TOOLCHAIN_MIN_VERSION: new gc("MIN_VERSION"),
                WARN_TOOLCHAIN_NODEJS_UNINSTALL: new gc("NODEJS_VERSION"),
                WARN_TOOLCHAIN_UNINSTALL: new gc("UNITY_VERSION"),
                WARN_TOOLCHAIN_UNINSTALL_NEW: new gc,
                WARN_TOOLCHAIN_UNITY_LICENSE_RETURN: new gc,
                WARN_TOOLCHAIN_UNITY_UNINSTALL: new gc("UNITY_VERSION")
            },
            OutsideConnectionsInfoPanel: {
                TOP_EXPORTS: new gc,
                TOP_IMPORTS: new gc
            },
            Overlay: {
                BACK_ACTION: new gc,
                CHANGE_USER_ACTION: new gc,
                CONTROLLER_DISCONNECTED: new gc,
                CONTROLLER_DISCONNECTED_PS: new gc,
                CONTROLLER_PAIRING_CHANGED: new gc,
                CONTROLLER_PAIRING_CHANGED_PS: new gc,
                CORRUPT_SAVE_DATA: new gc,
                DELETED_ITEMS: new gc,
                ENGAGEMENT_PROMPT_GAMEPAD: new gc,
                ENGAGEMENT_PROMPT_KEYBOARD: new gc,
                PLEASE_LOG_IN: new gc,
                PLEASE_WAIT: new gc,
                PRESS_ANY_KEY_ACTION: new gc,
                PROCEED_ACTION: new gc,
                QUIT_ACTION: new gc,
                START_GAME_ACTION: new gc,
                SWITCH_USER: new gc,
                USER_LOGGED_OUT: new gc,
                VALIDATION: new gc
            },
            Paradox: {
                ACCOUNT_LINK_CONFIRMATION_TEXT: new pc,
                ACCOUNT_LINK_OVERWRITE_TITLE: new gc,
                ACCOUNT_LINK_PROMPT: new gc,
                ACCOUNT_LINK_PROMPT_SHORT: new pc,
                ACCOUNT_LINK_PROMPT_TEXT: new pc,
                ACCOUNT_LINK_PROMPT_TITLE: new gc,
                ADDITIONAL_ASSETS: new gc,
                ADDITIONAL_TAGS: new gc,
                ADD_ASSET: new gc,
                ADD_TAG: new gc,
                BIRTH_DATE_DAY_FIELD_LABEL: new gc,
                BIRTH_DATE_FIELD_LABEL: new gc,
                BIRTH_DATE_MONTH_FIELD_LABEL: new gc,
                BIRTH_DATE_YEAR_FIELD_LABEL: new gc,
                CONSENT: new gc,
                COUNTRY_FIELD_LABEL: new gc,
                DLC_LIST_LABEL: new gc,
                EMAIL_FIELD_LABEL: new gc,
                ERROR: new pc,
                EXISTING_PREVIEWS_ERROR: new gc,
                FORGOT_PASSWORD_LINK: new gc,
                LINK_ACCOUNT_BUTTON: new gc,
                LOADING: new gc,
                LOGIN_BUTTON: new gc,
                LOGIN_FORM_TITLE: new gc,
                LOGIN_FROM_REGISTRATION_LINK: new gc,
                LOGIN_INCENTIVE: new gc,
                LOGOUT_BUTTON: new gc,
                MARKETING_PERMISSION_TOGGLE_LABEL: new gc,
                MODS_NEED_INTERNET: new gc,
                NOT_LOGGED_IN: new gc,
                NO_INTERNET_CONNECTION: new gc,
                NO_SOCIAL_PROFILE: new gc,
                OPEN_PROFILE_PAGE: new gc,
                PARADOX_ACCOUNT: new gc,
                PASSWORD_FIELD_LABEL: new gc,
                PASSWORD_RESET_CONFIRMATION_TEXT: new gc("EMAIL"),
                PDX_ACCOUNT_LINK_OVERWRITE_PROMPT_TEXT: new pc,
                PDX_MODS_BUTTON: new gc,
                PDX_PLATFORM_ACCOUNT_LINK_OVERWRITE_PROMPT_TEXT: new pc,
                PLATFORM_ACCOUNT_LINK_OVERWRITE_PROMPT_TEXT: new pc,
                PRIVACY_POLICY: new gc,
                PS_MODS_DISCLAIMER: new gc,
                PS_MODS_EXIT_DISABLE_MODS: new gc,
                PS_MODS_EXIT_DISCLAIMER: new gc,
                PS_MODS_EXIT_GO_BACK: new gc,
                PS_MODS_EXIT_KEEP_MODS: new gc,
                PS_NOT_SIGNED_INTO_PSN: new gc,
                REGISTRATION_CONFIRMATION_TEXT: new gc,
                REGISTRATION_CONFIRMATION_TITLE: new gc,
                REGISTRATION_FORM_TITLE: new gc,
                REGISTRATION_FROM_LOGIN_LINK: new gc,
                REGISTRATION_HINT: new gc,
                REMEMBER_ME_TOGGLE_LABEL: new gc,
                RETRIEVING_DATA: new gc,
                SDK_DISABLED: new gc,
                SKIP_BUTTON: new gc,
                SUBMIT_REGISTRATION_BUTTON: new gc,
                TELEMETRY_CONSENT_ERROR_DESCRIPTION: new gc,
                TELEMETRY_CONSENT_ERROR_TITLE: new gc,
                TERMS_OF_USE: new gc,
                TERMS_PRIVACY_NOTICE: new gc,
                UGC_DISABLED: new gc,
                UNKNOWN_ERROR: new gc,
                UNLINK_ACCOUNT_BUTTON: new gc
            },
            PhotoMode: {
                CAPTURE_PROPERTY_TOOLTIP: new gc,
                CLOUDEROSIONNOISE: new pc,
                DEPTHOFFIELDMODE: new pc,
                ENABLE_PROPERTY_TOOLTIP: new gc,
                ENVIRONMENT_DISCLAIMER: new gc,
                FILMGRAINLOOKUP: new pc,
                GATEFITMODE: new pc,
                HIDE_UI: new gc,
                PROPERTY_LIMIT_MAX: new gc,
                PROPERTY_LIMIT_MIN: new gc,
                PROPERTY_TITLE: new pc,
                PROPERTY_TOOLTIP: new pc,
                RESET_PROPERTY_TOOLTIP: new gc,
                SENSORTYPE: new pc,
                TAB: new pc,
                TAKE_PHOTO: new gc,
                TITLE: new gc,
                TOGGLE_FIRST_PERSON_MODE: new gc,
                TOGGLE_ORBIT_MODE: new gc
            },
            PoliceInfoPanel: {
                ARRESTED_CRIMINALS: new gc,
                AVERAGE_CRIME_PROBABILITY: new gc,
                CRIME_SUCCESS_RATE: new gc,
                CURRENT_NUMBER_OF_CRIMINALS: new gc,
                IN_JAIL: new gc,
                IN_PRISON: new gc,
                JAIL_AVAILABILITY: new gc,
                NUMBER_OF_CRIMES_PER_MONTH: new gc,
                PRISONERS: new gc,
                PRISON_AVAILABILITY: new gc
            },
            Policy: {
                DESCRIPTION: new pc,
                TITLE: new pc
            },
            PopulationInfoPanel: {
                ADULTS: new gc,
                AGE_DISTRIBUTION: new gc,
                BIRTH_RATE: new gc,
                CHILDREN: new gc,
                DEATH_RATE: new gc,
                EMPLOYED: new gc,
                HOMELESS_NUMBER: new gc,
                HOMELESS_RATE: new gc,
                JOBS: new gc,
                MOVED_AWAY: new gc,
                MOVED_IN: new gc,
                POPULATION: new gc,
                SENIORS: new gc,
                TEENS: new gc,
                UNEMPLOYMENT: new gc
            },
            PostInfoPanel: {
                COLLECTED_MAIL: new gc,
                DELIVERED_MAIL: new gc,
                MAIL_RATE: new gc,
                MAIL_SERVICE_AVAILABILITY: new gc
            },
            Progression: {
                AVAILABLE_DEV_POINTS: new gc("VALUE"),
                BUILDING_UNLOCK_EVENT_PANEL_TITLE: new gc,
                BUILD_LATER_BUTTON: new gc,
                BUILD_NOW_BUTTON: new gc,
                DEVELOPMENT_POINTS_FIELD_LABEL: new gc,
                DEV_TREE_UNLOCK_BADGE: new gc,
                HAPPINESS_REQUIREMENT: new gc("VALUE"),
                INCLUDES_LABEL: new gc,
                LOAN_LIMIT: new gc,
                MAP_TILES_FIELD_LABEL: new gc,
                MAX_MILESTONE_FIELD_LABEL: new gc,
                MILESTONE_DESCRIPTION: new fc,
                MILESTONE_DETAIL_SUBTITLE: new gc("INDEX"),
                MILESTONE_NAME: new fc,
                MILESTONE_PROGRESS: new gc("CURRENT","TARGET"),
                MILESTONE_REWARDS_LABEL: new gc,
                MILESTONE_UNLOCK_PANEL_TITLE_PRIMARY: new gc("INDEX"),
                MILESTONE_UNLOCK_PANEL_TITLE_SECONDARY: new gc,
                MILESTONE_UNLOCK_REQUIREMENT: new gc("INDEX","NAME"),
                MILESTONE_VICTORY_CONFIRM_NEW_GAME: new gc,
                MILESTONE_VICTORY_CONTINUE: new gc,
                MILESTONE_VICTORY_DESCRIPTION_LONG: new gc,
                MILESTONE_VICTORY_DESCRIPTION_SHORT: new gc,
                MILESTONE_VICTORY_START_NEW: new gc,
                MILESTONE_VICTORY_TITLE: new gc,
                NODE_DESCRIPTION: new pc,
                NODE_DEV_POINTS_REQUIREMENT: new gc,
                NODE_LOCKED: new gc,
                NODE_MILESTONE_REQUIREMENT: new gc("INDEX"),
                NODE_NAME: new pc,
                NODE_PARENT_REQUIREMENT: new gc,
                NODE_UNLOCKED: new gc,
                NODE_UNLOCK_REQUIREMENT: new gc("NAME"),
                OBJECT_BUILT_REQUIREMENT: new pc("CURRENT","TARGET"),
                PANEL_TITLE: new gc,
                POINTS_LABEL: new gc("POINTS"),
                POPULATION_REQUIREMENT: new gc("VALUE"),
                PROCESSING_REQUIREMENT: new gc("RESOURCE","CURRENT","TARGET"),
                PROGRESSION_PANEL_BUTTON: new gc,
                PURCHASE_BUTTON_AVAILABLE: new gc,
                PURCHASE_BUTTON_LOCKED: new gc,
                PURCHASE_BUTTON_MILESTONE: new gc("MILESTONE"),
                PURCHASE_BUTTON_POINTS: new gc,
                PURCHASE_BUTTON_UNLOCKED: new gc,
                PURCHASE_COST: new gc("COST"),
                RADIO_MAST_REQUIREMENT: new gc("CURRENT","TARGET"),
                REQUIREMENT: new gc,
                REQUIREMENTS: new gc,
                REQUIRES_ALL: new gc,
                REQUIRES_ANY: new gc,
                REWARD_FIELD_LABEL: new gc,
                SIGNATURE_REQUIREMENT: new gc,
                SIGNATURE_UNLOCKED_REQUIREMENT: new gc,
                STRICT_OBJECT_BUILT_REQUIREMENT: new gc("NAME","CURRENT","TARGET"),
                TAB_TITLE: new pc,
                TOOLTIP_DESCRIPTION_EXPANSION_PERMITS: new gc,
                TOOLTIP_DESCRIPTION_MONEY: new gc,
                TOOLTIP_DESCRIPTION_POINTS: new gc,
                TOOLTIP_DESCRIPTION_POINTS_COST: new gc,
                TOOLTIP_DESCRIPTION_TAB: new pc,
                TOOLTIP_TITLE_EXPANSION_PERMITS: new gc,
                TOOLTIP_TITLE_MONEY: new gc,
                TOOLTIP_TITLE_POINTS: new gc,
                TOOLTIP_TITLE_POINTS_COST: new gc,
                TOOLTIP_TITLE_TAB: new pc,
                TUTORIAL_REQUIREMENT: new gc,
                UNLOCK_NODE_BUTTON: new gc,
                XP_REASON: new pc,
                ZONE_BUILT_REQUIREMENT_CELLS: new gc("ZONE","CURRENT","TARGET"),
                ZONE_BUILT_REQUIREMENT_CELLS_LEVEL: new gc("LEVEL","ZONE","CURRENT","TARGET"),
                ZONE_BUILT_REQUIREMENT_COUNT: new gc("ZONE","CURRENT","TARGET"),
                ZONE_BUILT_REQUIREMENT_COUNT_LEVEL: new gc("LEVEL","ZONE","CURRENT","TARGET")
            },
            Properties: {
                ADJUST_HAPPINESS_MODIFIER_EFFECT: new gc("DELTA","TYPE","TARGET"),
                ADJUST_HAPPINESS_MODIFIER_TARGET: new pc,
                ADJUST_HAPPINESS_MODIFIER_TYPE: new pc,
                AMBULANCE_COUNT: new gc,
                ATTRACTION_EFFECT: new gc("VALUE"),
                ATTRACTIVENESS: new gc,
                BATTERY_CAPACITY: new gc,
                BATTERY_POWER_OUTPUT: new gc,
                CARGO_CAPACITY: new gc,
                CITY_MODIFIER: new pc,
                CITY_MODIFIER_EFFECT: new gc("DELTA","TYPE"),
                COMFORT: new gc,
                CONSTRUCTION_COST: new gc,
                DECEASED_PROCESSING_CAPACITY: new gc,
                DECEASED_STORAGE: new gc,
                ELECTRICITY_CONSUMPTION: new gc,
                EVACUATION_BUS_COUNT: new gc,
                FIRE_ENGINE_COUNT: new gc,
                FIRE_HELICOPTER_COUNT: new gc,
                GARBAGE_ACCUMULATION: new gc,
                GARBAGE_PROCESSING_CAPACITY: new gc,
                GARBAGE_STORAGE: new gc,
                GARBAGE_TRUCK_COUNT: new gc,
                HEARSE_COUNT: new gc,
                JAIL_CAPACITY: new gc,
                LEISURE_PROVIDER_EFFECT: new gc("EFFICIENCY","TYPE"),
                LEISURE_TYPE: new pc,
                LOCAL_MODIFIER: new pc,
                LOCAL_MODIFIER_EFFECT: new gc("DELTA","TYPE","RADIUS"),
                MAIL_BOX_CAPACITY: new gc,
                MAIL_SORTING_RATE: new gc,
                MAIL_STORAGE_CAPACITY: new gc,
                MAINTENANCE_VEHICLES: new gc,
                MAP_RESOURCE: new pc,
                MAX_UPKEEP: new gc,
                MEDICAL_HELICOPTER_COUNT: new gc,
                NETWORK_CAPACITY: new gc,
                NETWORK_RANGE: new gc,
                PATIENT_CAPACITY: new gc,
                PATROL_CAR_COUNT: new gc,
                POLICE_HELICOPTER_COUNT: new gc,
                POST_TRUCK_COUNT: new gc,
                POST_VAN_COUNT: new gc,
                POWER_LINE_CAPACITY: new gc,
                POWER_PLANT_OUTPUT: new gc,
                POWER_VOLTAGE_FORMAT: new gc("VALUE","VOLTAGE"),
                PRISON_VAN_COUNT: new gc,
                REQUIRED_RESOURCE: new gc,
                RESOURCE_CONSUMPTION: new gc,
                SEWAGE_CAPACITY: new gc,
                SEWAGE_PIPE_CAPACITY: new gc,
                SEWAGE_PURIFICATION_RATE: new gc,
                SHELTER_CAPACITY: new gc,
                STUDENT_CAPACITY: new gc,
                TRANSFORMER_CAPACITY: new gc,
                TRANSFORMER_INPUT: new gc,
                TRANSFORMER_OUTPUT: new gc,
                TRANSPORT_STOP_COUNT: new pc,
                TRANSPORT_VEHICLE_COUNT: new gc,
                UPKEEP: new gc,
                VOLTAGE: new fc,
                WATER_CAPACITY: new gc,
                WATER_CONSUMPTION: new gc,
                WATER_PIPES: new gc,
                WATER_PIPE_CAPACITY: new gc,
                WATER_PIPE_TYPE: new pc,
                WATER_PURIFICATION_RATE: new gc,
                WATER_STORAGE: new gc
            },
            Radio: {
                ADS_BUTTON_TOOLTIP: new gc,
                EMERGENCY_MESSAGE: new pc,
                FOCUS_EMERGENCY: new gc,
                MUTE: new gc,
                NETWORK_DESCRIPTION: new pc,
                NETWORK_TITLE: new pc,
                NEXT_BUTTON_TOOLTIP: new gc,
                PANEL_TITLE: new gc,
                PAUSE_BUTTON_TOOLTIP: new gc,
                PLAY_BUTTON_TOOLTIP: new gc,
                PREVIOUS_BUTTON_TOOLTIP: new gc,
                PROGRAM_TITLE: new gc,
                UNMUTE: new gc,
                VOLUME_BUTTON_TOOLTIP: new gc
            },
            Resources: {
                TITLE: new pc
            },
            RoadsInfoPanel: {
                PARKED_CARS: new gc,
                PARKING_AVAILABILITY: new gc,
                PARKING_INCOME: new gc,
                TRAFFIC_FLOW: new gc
            },
            SelectedInfoPanel: {
                ACTIVE_VEHICLES: new gc,
                ADVISER: new gc,
                AIR_POLLUTION: new gc,
                ALL_IS_WELL: new gc,
                ANIMAL_TITLE: new pc,
                ANIMAL_TYPE: new pc,
                ATTRACTIVENESS: new gc,
                ATTRACTIVENESS_BASE: new gc,
                ATTRACTIVENESS_FACTORS: new pc,
                AVERAGE_HOUSEHOLD_WEALTH: new gc,
                BATTERY_STATE_CHARGING: new gc,
                BATTERY_STATE_DISCHARGING: new gc,
                BATTERY_STATE_IDLE: new gc,
                BEGIN_EMPTYING: new gc,
                BUILDING_FOR_RENT: new gc,
                CARGO_TITLE: new pc,
                CARGO_TOOLTIP: new gc,
                CARGO_TRANSPORT_ROUTE: new gc,
                CARGO_TRANSPORT_VEHICLE_TITLE: new gc,
                CITIZEN_AGE: new pc,
                CITIZEN_AGE_FEMALE: new pc,
                CITIZEN_AGE_MALE: new pc,
                CITIZEN_AGE_TITLE: new gc,
                CITIZEN_CONDITION: new gc,
                CITIZEN_CONDITION_DESCRIPTION: new pc,
                CITIZEN_CONDITION_TITLE: new pc,
                CITIZEN_CONDITION_TITLE_FEMALE: new pc,
                CITIZEN_CONDITION_TITLE_MALE: new pc,
                CITIZEN_DESTINATION: new pc,
                CITIZEN_EDUCATION: new pc,
                CITIZEN_EDUCATION_FEMALE: new pc,
                CITIZEN_EDUCATION_MALE: new pc,
                CITIZEN_EDUCATION_TITLE: new gc,
                CITIZEN_HAPPINESS: new gc,
                CITIZEN_HAPPINESS_DESCRIPTION: new pc,
                CITIZEN_HAPPINESS_TITLE: new pc,
                CITIZEN_HAPPINESS_TITLE_FEMALE: new pc,
                CITIZEN_HAPPINESS_TITLE_MALE: new pc,
                CITIZEN_HOUSEHOLD: new gc,
                CITIZEN_JOB_LEVEL: new pc,
                CITIZEN_JOB_TITLE: new gc,
                CITIZEN_OCCUPATION: new pc,
                CITIZEN_OCCUPATION_FEMALE: new pc,
                CITIZEN_OCCUPATION_MALE: new pc,
                CITIZEN_OCCUPATION_TITLE: new gc,
                CITIZEN_RESIDENCE: new pc,
                CITIZEN_SCHOOL_TITLE: new fc,
                CITIZEN_STATE: new pc,
                CITIZEN_STATE_FEMALE: new pc,
                CITIZEN_STATE_MALE: new pc,
                CITIZEN_TYPE: new pc,
                CITIZEN_TYPE_FEMALE: new pc,
                CITIZEN_TYPE_MALE: new pc,
                CITIZEN_WEALTH: new pc,
                CITIZEN_WEALTH_FEMALE: new pc,
                CITIZEN_WEALTH_MALE: new pc,
                CITIZEN_WEALTH_TITLE: new gc,
                CITIZEN_WORKPLACE: new pc,
                CLOSE: new gc,
                COLOR: new gc,
                COMPANY: new gc,
                COMPANY_EXTRACTED: new pc,
                COMPANY_PRODUCES: new gc,
                COMPANY_PROFITABILITY_TITLE: new pc,
                COMPANY_REQUIRES: new gc,
                COMPANY_ROOMS: new gc,
                COMPANY_SELLS: new gc,
                COMPANY_STORES: new gc,
                CONFIRM_DELETE_WARNING: new gc,
                CREATE_DISTRICT: new gc,
                DEACTIVATE_UPGRADE: new gc,
                DEATHCARE_BODIES: new gc,
                DEATHCARE_PROCESSING_SPEED: new gc,
                DEATHCARE_TITLE: new gc,
                DEATHCARE_VEHICLES: new pc,
                DEATHCARE_VEHICLE_DEAD: new gc,
                DEATHCARE_VEHICLE_TITLE: new gc,
                DELETE: new gc,
                DELIVERY_VEHICLE_TITLE: new pc,
                DESTINATION: new gc,
                DESTROYED: new gc,
                DESTROYED_DESCRIPTION: new pc,
                DESTROYED_STATUS: new pc,
                DESTROYED_TREE: new gc,
                DESTROYED_TREE_DESCRIPTION: new pc,
                DETAILS: new gc,
                DEVELOPER_INFO_TITLE: new gc,
                DISPATCHED_VEHICLES: new gc,
                DRIVER: new gc,
                DURATION_GREATER_YEAR: new gc,
                EDUCATED: new gc,
                EDUCATION: new gc,
                EDUCATION_DROPOUT_RATE: new gc,
                EDUCATION_GRADUATION_TIME: new gc,
                EDUCATION_LEVELS: new pc,
                EDUCATION_NO_GRADUATIONS: new gc,
                EDUCATION_STUDENTS: new gc,
                EFFICIENCY: new gc,
                EFFICIENCY_FACTORS: new pc,
                ELECTRICITY_BATTERY_CAPACITY: new gc,
                ELECTRICITY_BATTERY_CHARGE: new gc,
                ELECTRICITY_BATTERY_FLOW: new gc,
                ELECTRICITY_BATTERY_STATE: new gc,
                ELECTRICITY_POWER_PRODUCTION: new gc,
                ELECTRICITY_POWER_USAGE: new gc,
                ELECTRICITY_TITLE: new gc,
                ELECTRICITY_TRANSFORMER_CAPACITY: new gc,
                EMPLOYEES: new gc,
                EMPLOYEE_COUNT: new gc("AMOUNT"),
                EMPTY_IN: new gc("DURATION"),
                EXPENSES: new gc,
                EXTENSIONS: new gc,
                EXTRACTOR_VEHICLE_TITLE: new pc,
                FIRE_TITLE: new gc,
                FIRE_VEHICLES: new pc,
                FIRE_VEHICLE_TITLE: new pc,
                FOCUS: new gc,
                FOCUS_UPGRADE: new gc,
                FOLLOW_CITIZEN: new gc,
                FULL_IN: new gc("DURATION"),
                GARBAGE_MANAGEMENT_PROCESSING_SPEED: new gc,
                GARBAGE_MANAGEMENT_STORAGE_LABEL: new pc,
                GARBAGE_MANAGEMENT_STORED_GARBAGE: new gc,
                GARBAGE_MANAGEMENT_TITLE: new gc,
                GARBAGE_MANAGEMENT_VEHICLES: new pc,
                GARBAGE_VEHICLE_TITLE: new pc,
                GRAVES_IN_USE: new gc,
                GROUND_POLLUTION: new gc,
                HEALTHCARE_PATIENTS: new gc,
                HEALTHCARE_TITLE: new gc,
                HEALTHCARE_VEHICLES: new pc,
                HEALTHCARE_VEHICLE_PATIENT: new gc,
                HEALTHCARE_VEHICLE_TITLE: new pc,
                HIGHTLY_EDUCATED: new gc,
                HOMELESS: new gc,
                HOMELESS_HOUSEHOLDS: new gc,
                HOUSEHOLDS: new gc,
                HOUSEHOLD_MEMBERS: new gc,
                LEVEL: new gc,
                LEVEL_MAX: new gc,
                LEVEL_PROGRESS: new gc,
                LINE: new gc,
                LINES: new gc,
                LINE_USAGE: new gc,
                LINE_VISUALIZER_LENGTH: new gc,
                LINE_VISUALIZER_STOPS: new gc,
                LINE_VISUALIZER_TITLE: new gc,
                LINE_VISUALIZER_VEHICLES: new gc,
                LOAD_TITLE: new pc,
                LOCAL_SERVICES_NONE_ASSIGNED: new gc,
                LOCAL_SERVICES_TITLE: new gc,
                LOT_TOOL_TOOLTIP: new gc,
                MAIL: new gc,
                MAIL_PROCESSING_SPEED: new gc,
                MAIL_SORTING_SPEED: new gc,
                MAIL_STORED_MAIL: new pc,
                MAIL_TITLE: new gc,
                MAIL_VEHICLES: new pc,
                MAINTENANCED_VEHICLES: new gc,
                MAINTENANCE_VEHICLE_TITLE: new gc,
                MAIN_BUILDING: new gc,
                MAX_FOLLOWED_CITIZENS_REACHED: new gc,
                NEXT_STOP: new gc,
                NOISE_POLLUTION: new gc,
                NOTIFICATIONS: new gc,
                NO_ACTIVE_POLICIES: new gc,
                OPEN_POSITIONS: new gc,
                OPERATING_DISTRICTS: new gc,
                ORIGIN: new gc,
                OUTSIDE_CONNECTION: new gc,
                OUT_OF_SERVICE: new gc,
                OWNED_BY: new gc,
                PARKING_FEE: new gc,
                PARKING_PARKED: new gc,
                PARKING_TITLE: new gc,
                PARK_MAINTENANCE: new gc,
                PARK_TITLE: new gc,
                PASSENGERS: new pc,
                PASSENGERS_TITLE: new gc,
                PASSENGERS_TOOLTIP: new gc,
                POLICE_PRISONERS: new gc,
                POLICE_TITLE: new gc,
                POLICE_VEHICLES: new pc,
                POLICE_VEHICLE_CRIMINAL: new gc,
                POLICE_VEHICLE_TITLE: new pc,
                POLICIES: new gc,
                POLLUTION: new gc,
                POLLUTION_LEVELS: new fc,
                POLLUTION_LEVELS_AIR: new gc,
                POLLUTION_LEVELS_GROUND: new gc,
                POLLUTION_LEVELS_NOISE: new gc,
                POORLY_EDUCATED: new gc,
                POST_VEHICLE_TITLE: new gc,
                PRISON_PRISONERS: new gc,
                PRISON_TITLE: new gc,
                PRISON_VEHICLES: new pc,
                PRIVATE_VEHICLE_TITLE: new pc,
                PROCESSED_GOODS: new gc,
                PRODUCTION: new gc,
                PUBLIC_TRANSPORT_LINE: new gc,
                PUBLIC_TRANSPORT_VEHICLE_TITLE: new pc,
                RAW_MATERIALS: new gc,
                REACTIVATE_UPGRADE: new gc,
                REBUILD: new gc,
                RELOCATE: new gc,
                RELOCATE_UPGRADE: new gc,
                REMOVE_OPERATING_DISTRICT: new gc,
                REMOVE_UPGRADE: new gc,
                RESIDENTS: new gc,
                RESOURCE: new pc,
                RESOURCE_STATUS: new pc,
                ROAD_CONDITION: new gc,
                ROAD_CONDITION_FORMAT: new gc("WORST","BEST","AVG"),
                ROAD_LENGTH: new gc,
                ROAD_TRAFFIC_FLOW: new gc,
                ROAD_TRAFFIC_VOLUME: new gc,
                ROAD_UPKEEP: new gc,
                ROUTE: new gc,
                SCHEDULE: new gc,
                SCHEDULE_CONTINUOUS_TOOLTIP: new pc,
                SCHEDULE_DAY_TOOLTIP: new pc,
                SCHEDULE_NIGHT_TOOLTIP: new pc,
                SELECT_OPERATING_DISTRICT: new gc,
                SELECT_UPGRADE: new gc,
                SELECT_VEHICLE: new gc,
                SELECT_VEHICLE_SECONDARY: new pc,
                SEWAGE_OUTLET_USAGE: new gc,
                SEWAGE_PROCESSING_CAPACITY: new gc,
                SEWAGE_PURIFICATION_RATE: new gc,
                SEWAGE_STORAGE: new gc,
                SEWAGE_TITLE: new gc,
                SHELTER_OCCUPANTS: new gc,
                SHELTER_TITLE: new gc,
                SHELTER_VEHICLES: new pc,
                STOP_EMPTYING: new gc,
                STORAGE_STATUS: new pc,
                STORED_RESOURCES: new gc,
                SUB_BUILDINGS: new gc,
                TICKET_PRICE: new gc,
                TICKET_PRICE_FREE: new gc,
                TOOLTIP: new pc,
                TOOLTIP_TITLE: new pc,
                TRADED_RESOURCES: new gc,
                TRADED_RESOURCES_TOOLTIP: new gc,
                TRAFFIC_ACCIDENT: new gc,
                TRAFFIC_ROUTES: new fc,
                UNDER_CONSTRUCTION: new gc,
                UNEDUCATED: new gc,
                UNFOCUS: new gc,
                UNFOCUS_UPGRADE: new gc,
                UNFOLLOW_CITIZEN: new gc,
                UPGRADE: new gc,
                UPGRADES: new gc,
                UPGRADE_ALREADY_BUILT: new gc,
                UPGRADE_LOCKED: new gc,
                UPGRADE_LOCKED_LABEL: new gc,
                UPGRADE_NO_MONEY_LABEL: new gc,
                UPGRADE_PURCHASED_LABEL: new gc,
                UPGRADE_TYPE: new pc,
                UPGRADE_TYPE_LABEL: new pc,
                UPKEEP: new gc,
                UPKEEPFORMAT: new gc("RESOURCE","AMOUNT"),
                UPKEEP_MAINTENANCE: new gc("BUILDING"),
                UPKEEP_MAINTENANCE_COMBINED: new gc("BUILDING","AMOUNT"),
                UPKEEP_MAINTENANCE_INACTIVE: new gc("BUILDING"),
                UPKEEP_MAINTENANCE_INACTIVE_COMBINED: new gc("BUILDING","AMOUNT"),
                UPKEEP_TOTAL: new gc,
                VEHICLES: new pc,
                VEHICLE_COUNT: new gc,
                VEHICLE_STATE: new gc,
                VEHICLE_STATES: new pc,
                WAGES: new gc,
                WAITING_PASSENGERS: new gc,
                WAREHOUSE_STORAGE: new gc,
                WATER_OUTPUT: new gc,
                WATER_PUMPING_CAPACITY: new gc,
                WATER_PUMP_POLLUTION: new gc,
                WATER_PUMP_USAGE: new gc,
                WATER_STORAGE: new gc,
                WATER_STORAGE_CHANGE: new gc("TIME","CHANGE"),
                WATER_STORAGE_FULL_IN: new gc,
                WATER_STORAGE_LASTS: new gc,
                WATER_TITLE: new gc,
                WELL_EDUCATED: new gc,
                WORKPLACES: new gc,
                WORKPLACE_COUNT: new gc("AMOUNT"),
                WORK_SHIFT: new gc,
                ZONE: new gc
            },
            Services: {
                DESCRIPTION: new pc,
                NAME: new pc
            },
            Statistics: {
                PANEL_TITLE: new gc,
                STATISTIC: new pc
            },
            StatisticsPanel: {
                STAT_TITLE: new pc,
                TIME_SCALE: new fc,
                TIME_SCALE_NOW: new gc,
                TIME_SCALE_TITLE: new gc
            },
            SubServices: {
                NAME: new pc
            },
            ToolOptions: {
                COLOR_TITLE: new pc,
                COLOR_TOOLTIP: new pc,
                TOOLTIP: new pc,
                TOOLTIP_CHANGE_BRUSH: new gc,
                TOOLTIP_DECREASE_BRUSH_HEIGHT: new gc,
                TOOLTIP_DECREASE_BRUSH_SIZE: new gc,
                TOOLTIP_DECREASE_BRUSH_STRENGTH: new gc,
                TOOLTIP_DECREASE_ELEVATION: new gc,
                TOOLTIP_DESCRIPTION: new pc,
                TOOLTIP_DESCRIPTION_DISTANCE: new gc,
                TOOLTIP_ELEVATION_STEP: new gc,
                TOOLTIP_INCREASE_BRUSH_HEIGHT: new gc,
                TOOLTIP_INCREASE_BRUSH_SIZE: new gc,
                TOOLTIP_INCREASE_BRUSH_STRENGTH: new gc,
                TOOLTIP_INCREASE_ELEVATION: new gc,
                TOOLTIP_ROTATE_BRUSH_CLOCKWISE: new gc,
                TOOLTIP_ROTATE_BRUSH_COUNTER_CLOCKWISE: new gc,
                TOOLTIP_SNAP_ALL: new gc,
                TOOLTIP_TITLE: new pc,
                TOOLTIP_TITLE_DISTANCE: new gc
            },
            Toolbar: {
                ASSET_ALREADY_BUILT: new gc,
                ASSET_PACKS_PANEL_TITLE: new gc,
                BRUSH: new gc,
                BRUSH_ANGLE: new gc,
                BRUSH_HEIGHT: new gc,
                BRUSH_SIZE: new gc,
                BRUSH_STRENGTH: new gc,
                CALENDAR_PANEL_TOGGLE_TOOLTIP: new gc,
                CHIRPER_PANEL_TOGGLE_TOOLTIP: new gc,
                CITY_INFO_PANEL_TOGGLE_TOOLTIP: new gc,
                CITY_NAME_FIELD_TOOLTIP: new gc,
                CONTOUR_LINES_TITLE: new gc,
                CURRENT_TREND: new gc,
                DECREASE_PARALLEL_OFFSET: new gc,
                ECONOMY_PANEL_TOGGLE_TOOLTIP: new gc,
                ELEVATION_TITLE: new gc,
                INCREASE_PARALLEL_OFFSET: new gc,
                JOURNAL_PANEL_TOGGLE_TOOLTIP: new gc,
                LIFEPATH_PANEL_TOGGLE_TOOLTIP: new gc,
                MAP_TILE_PURCHASE_TOGGLE_TOOLTIP: new gc,
                MONEY_FIELD_TOOLTIP: new gc,
                PARALLEL_MODE_TITLE: new gc,
                PARALLEL_OFFSET_TITLE: new gc,
                PARALLEL_ROAD_TITLE: new gc,
                PAUSE_BUTTON_TOOLTIP: new gc,
                PHOTO_MODE_TOGGLE_TOOLTIP: new gc,
                PLAY_BUTTON_TOOLTIP: new gc,
                POPULATION_FIELD_TOOLTIP: new gc,
                PROGRESSION_PANEL_TOGGLE_TOOLTIP: new gc,
                SIMULATION_PAUSED: new gc,
                SNAPPING_TITLE: new gc,
                SPEED_BUTTON_TOOLTIP: new gc,
                STATISTICS_PANEL_TOGGLE_TOOLTIP: new gc,
                THEME_PANEL_TITLE: new gc,
                TOGGLE_PARALLEL_MODE: new gc,
                TOGGLE_UNDERGROUND_MODE: new gc,
                TOOL_MODE_DISTANCE: new gc,
                TOOL_MODE_TITLE: new gc,
                TOOL_OPTIONS_PANEL_TITLE: new gc,
                UNDERGROUND_MODE_TITLE: new gc,
                VEGETATION_AGE_PANEL_TITLE: new gc,
                XP_MESSAGE: new gc("XP","REASON"),
                XP_PROGRESS: new gc("CURRENT","NEXT")
            },
            Tools: {
                AREASIZE_LABEL: new gc,
                BATTERY_CHARGE: new gc,
                BATTERY_FLOW: new gc,
                CONFIRM_BULLDOZE_WARNING: new gc,
                CONSTRUCTION_COST_LABEL: new gc,
                ELECTRICITY_CONSUMPTION_LABEL: new gc,
                ELECTRICITY_FLOW_LABEL: new gc,
                ELECTRICITY_PRODUCTION_LABEL: new gc,
                EXTRACTOR_CLIMATE_REQUIRED_AVAILABLE: new gc,
                EXTRACTOR_CLIMATE_REQUIRED_UNAVAILABLE: new gc,
                EXTRACTOR_MAP_FEATURE_REQUIRED_AVAILABLE: new gc,
                EXTRACTOR_MAP_FEATURE_REQUIRED_MISSING: new gc,
                EXTRACTOR_PRODUCTION_DEFICIT: new gc,
                EXTRACTOR_PRODUCTION_SURPLUS: new gc,
                GROUNDWATER_VOLUME: new gc,
                GROUND_WATER_RESERVOIR_USAGE: new gc,
                INFO: new pc,
                MOVING_OBJECT: new gc("OBJECT"),
                REFUND_AMOUNT_LABEL: new gc,
                RESOURCES_LABEL: new gc,
                SELECTING_DISTRICTS: new gc,
                SEWAGE_CONSUMPTION_LABEL: new gc,
                SEWAGE_FLOW_LABEL: new gc,
                STORAGECAPACITY_LABEL: new gc,
                TOOL_MODE: new pc,
                WARNING: new pc,
                WATER_CONSUMPTION_LABEL: new gc,
                WATER_FLOW_LABEL: new gc,
                WATER_OUTPUT_LABEL: new gc,
                WATER_REFRESH_RATE_LABEL: new gc
            },
            TourismInfoPanel: {
                ATTRACTIVENESS: new gc,
                AVERAGE_HOTEL_PRICE: new gc,
                TOURISM_RATE: new gc,
                WEATHER_EFFECT: new gc
            },
            Transport: {
                LEGEND_ACTIVE: new gc,
                LEGEND_ACTIVITY: new gc,
                LEGEND_CARGO: new gc,
                LEGEND_COLOR: new gc,
                LEGEND_DELETE: new gc,
                LEGEND_FOCUS: new gc,
                LEGEND_LENGTH: new gc,
                LEGEND_NAME: new gc,
                LEGEND_PASSENGERS: new pc,
                LEGEND_SHOW: new gc,
                LEGEND_STOPS: new pc,
                LEGEND_USAGE: new gc,
                LEGEND_VEHICLES: new pc,
                LEGEND_VISIBLE: new gc,
                LINES: new pc,
                LINES_OVERVIEW_BUTTON: new gc,
                LINES_OVERVIEW_TITLE: new gc,
                NO_LINES: new gc,
                NO_ROUTES: new gc,
                ROUTES: new pc,
                TAB: new pc,
                TOOLTIP_ACTIVE: new pc,
                TOOLTIP_COLOR: new pc,
                TOOLTIP_DELETE: new pc,
                TOOLTIP_DETAILS: new pc,
                TOOLTIP_SCHEDULE: new pc,
                TOOLTIP_VISIBLE: new pc
            },
            TransportInfoPanel: {
                CARGO_LABEL: new gc,
                CARGO_TRANSPORT_TITLE: new gc,
                CITIZENS: new gc,
                LINES: new gc,
                PUBLIC_TRANSPORT_TITLE: new gc,
                ROUTES_LABEL: new gc,
                SUMMARY_TOOLTIP_CARGO: new pc,
                SUMMARY_TOOLTIP_PUBLICTRANSPORT: new pc,
                TOTAL: new gc,
                TOURISTS: new gc
            },
            Tutorials: {
                ADVISOR_TITLE: new gc,
                BEFORE_STARTING: new gc,
                BEFORE_STARTING_CONFIRM: new gc,
                BEGIN_WITH_TUTORIALS: new gc,
                BUTTON_TOOLTIP_DONE: new gc,
                BUTTON_TOOLTIP_NEXT: new gc,
                BUTTON_TOOLTIP_PREVIOUS: new gc,
                DESCRIPTION: new pc,
                DISABLE_CONFIRMATION_TEXT: new gc,
                DISABLE_CONFIRMATION_TEXT_GAMEPAD: new gc,
                ENABLE_TUTORIALS_CONFIRM: new gc,
                HINTS_TITLE: new gc,
                INTRO: new gc,
                INTRO_SUBTITLE: new gc,
                INTRO_TITLE: new gc,
                LIST_REMINDER_DESCRIPTION: new gc,
                LIST_REMINDER_TITLE: new gc,
                TASKS: new gc,
                TITLE: new pc,
                TODO_INTRO: new gc,
                TODO_INTRO_CONFIRM: new gc,
                TODO_OUTRO: new gc,
                TODO_OUTRO_CONTINUE: new gc,
                TODO_OUTRO_GAMEPAD: new gc,
                TODO_OUTRO_NEW_CITY: new gc,
                TRIGGER: new pc
            },
            UpgradesMenu: {
                TITLE: new gc
            },
            VirtualKeyboard: {
                TITLE: new pc
            },
            WaterInfoPanel: {
                SEWAGE_TRADE: new gc,
                SEWAGE_TREATMENT: new gc,
                STORMWATER_TREATMENT: new gc,
                WATER_AVAILABILITY: new gc,
                WATER_EXPORT: new gc,
                WATER_IMPORT: new gc,
                WATER_STORAGE: new gc,
                WATER_TRADE: new gc
            },
            WaterPollutionInfoPanel: {
                AVERAGE_WATER_POLLUTION: new gc
            },
            WhatsNew: {
                BEACH_PROPERTIES_P1_DESCRIPTION: new gc,
                BEACH_PROPERTIES_P1_HEADER: new gc,
                BEACH_PROPERTIES_P1_TITLE: new gc,
                BEACH_PROPERTIES_P2_DESCRIPTION: new gc,
                BEACH_PROPERTIES_P2_HEADER: new gc,
                BEACH_PROPERTIES_P2_TITLE: new gc,
                BEACH_PROPERTIES_P3_DESCRIPTION: new gc,
                BEACH_PROPERTIES_P3_HEADER: new gc,
                BEACH_PROPERTIES_P3_TITLE: new gc,
                WHATS_NEW: new gc
            },
            WorkplacesInfoPanel: {
                AVAILABILITY: new gc,
                WORKERS: new gc,
                WORKPLACES: new gc,
                WORKPLACE_DISTRIBUTION: new gc
            },
            ZoningFactors: {
                NEGATIVE: new pc,
                PANEL_TITLE: new gc,
                POSITIVE: new pc
            }
        });
        function bc(e) {
            return 9 * e / 5 + 32
        }
        function Tc(e) {
            return e + 273.16
        }
        function Ec(e) {
            return 264.172 * e
        }
        function Ic(e) {
            return e / .45359237
        }
        function Sc(e) {
            return e / 907.18474
        }
        function yc(e) {
            return e / .9144
        }
        function jc(e) {
            return e / 1.609344
        }
        function Cc(e) {
            return e / .092903
        }
        function Nc(e) {
            return e / 4046.873
        }
        function wc(e) {
            return 3.28084 * e
        }
        X.add("game-ui/common/localization/loc.generated.ts", {
            get Loc() {
                return _c
            },
            set Loc(e) {
                _c = e
            }
        }),
        function(e) {
            e.Integer = "integer",
            e.IntegerRounded = "integerRounded",
            e.IntegerPerMonth = "integerPerMonth",
            e.IntegerPerHour = "integerPerHour",
            e.FloatSingleFraction = "floatSingleFraction",
            e.FloatTwoFractions = "floatTwoFractions",
            e.FloatThreeFractions = "floatThreeFractions",
            e.Percentage = "percentage",
            e.PercentageSingleFraction = "percentageSingleFraction",
            e.Angle = "angle",
            e.Length = "length",
            e.Area = "area",
            e.Volume = "volume",
            e.VolumePerMonth = "volumePerMonth",
            e.Weight = "weight",
            e.WeightPerCell = "weightPerCell",
            e.WeightPerMonth = "weightPerMonth",
            e.Power = "power",
            e.Energy = "energy",
            e.DataRate = "dataRate",
            e.DataBytes = "dataBytes",
            e.DataMegabytes = "dataMegabytes",
            e.Money = "money",
            e.MoneyPerCell = "moneyPerCell",
            e.MoneyPerMonth = "moneyPerMonth",
            e.MoneyPerHour = "moneyPerHour",
            e.MoneyPerDistance = "moneyPerDistance",
            e.MoneyPerDistancePerMonth = "moneyPerDistancePerMonth",
            e.BodiesPerMonth = "bodiesPerMonth",
            e.XP = "xp",
            e.Temperature = "temperature",
            e.NetElevation = "netElevation",
            e.ScreenFrequency = "screenFrequency",
            e.Height = "height",
            e.Custom = "custom"
        }(vc || (vc = {})),
        X.add("game-ui/common/localization/unit.ts", {
            get Unit() {
                return vc
            },
            set Unit(e) {
                vc = e
            }
        }),
        X.add("game-ui/common/localization/units-us-customary.ts", {
            get fahrenheit() {
                return bc
            },
            set fahrenheit(e) {
                bc = e
            },
            get kelvin() {
                return Tc
            },
            set kelvin(e) {
                Tc = e
            },
            get gallons() {
                return Ec
            },
            set gallons(e) {
                Ec = e
            },
            get pounds() {
                return Ic
            },
            set pounds(e) {
                Ic = e
            },
            get shortTons() {
                return Sc
            },
            set shortTons(e) {
                Sc = e
            },
            get yards() {
                return yc
            },
            set yards(e) {
                yc = e
            },
            get miles() {
                return jc
            },
            set miles(e) {
                jc = e
            },
            get squareFeet() {
                return Cc
            },
            set squareFeet(e) {
                Cc = e
            },
            get acres() {
                return Nc
            },
            set acres(e) {
                Nc = e
            },
            get feet() {
                return wc
            },
            set feet(e) {
                wc = e
            }
        });
        var Oc = lc("LocalizedNumber", ((e,{value: t, unit: n=vc.Integer, signed: s=!1})=>Mc(n)(e, t, s).replace(/(\d)\s(\d)/, "$1 $2").replace(/(\d)\//, "$1​/")), ((e,t)=>e.value === t.value && e.unit === t.unit && e.signed === t.signed))
          , Pc = lc("LocalizedNumber", ((e,{value: t, unit: n=vc.Integer, signed: s=!1, unitFormat: i, fractionDigits: a, separateThousands: o, maxValueWithFraction: r})=>Mc(n)(e, t, s, i, a, o, r)), ((e,t)=>e.value === t.value && e.unit === t.unit && e.signed === t.signed));
        const Lc = lc("DefaultFormat", ((e,t)=>ac(e, t.SIGN) + ac(e, t.VALUE)), (()=>!0));
        function Ac(e, t) {
            const n = sc();
            return (0,
            Y.useMemo)((()=>{
                const s = Mc(e);
                return e=>s(n, e, t)
            }
            ), [n, t, e])
        }
        function Mc(e) {
            return Rc[e] ?? ((t,n)=>`${n} <${e}>`)
        }
        const Rc = {
            [vc.Custom]: (e,t,n,s,i,a,o)=>0 === i ? void 0 !== s ? Fc(e, t, s, n, a) : kc(e, t, n, a) : void 0 !== s ? Vc(e, t, s, n, i, a, !0, o) : Uc(e, t, n, i, a, !0, o),
            [vc.Integer]: (e,t,n)=>kc(e, t, n, !0),
            [vc.IntegerRounded]: (e,t,n)=>Math.abs(t) < 1e3 ? kc(e, t, n, !0) : Math.abs(t) < 1e6 ? Vc(e, t / 1e3, _c.Common.VALUE_THOUSAND, n, 1) : Vc(e, t / 1e6, _c.Common.VALUE_MILLION, n, 1),
            [vc.IntegerPerMonth]: (e,t,n)=>Fc(e, t, _c.Common.VALUE_PER_MONTH, n),
            [vc.IntegerPerHour]: (e,t,n)=>Fc(e, t, _c.Common.VALUE_PER_HOUR, n),
            [vc.FloatSingleFraction]: (e,t,n)=>Uc(e, t, n, 1),
            [vc.FloatTwoFractions]: (e,t,n)=>Uc(e, t, n, 2),
            [vc.FloatThreeFractions]: (e,t,n)=>Uc(e, t, n, 3),
            [vc.ScreenFrequency]: (e,t,n)=>Uc(e, t, n, 3, !1, !0, 1e3),
            [vc.Percentage]: (e,t,n)=>Fc(e, t, _c.Common.VALUE_PERCENT, n, !1),
            [vc.PercentageSingleFraction]: (e,t,n)=>Vc(e, t, _c.Common.VALUE_PERCENT, n, 1, !1),
            [vc.Length]: (e,t,n)=>e.unitSettings.unitSystem === Yl.Metric ? Math.abs(t) < 1e3 ? Vc(e, t, _c.Common.VALUE_METER, n) : Vc(e, t / 1e3, _c.Common.VALUE_KILOMETER, n, 1) : Math.abs(t) < 1609 ? Vc(e, yc(t), _c.Common.VALUE_YARD, n) : Vc(e, jc(t / 1e3), _c.Common.VALUE_MILE, n, 1),
            [vc.Height]: (e,t,n)=>e.unitSettings.unitSystem === Yl.Metric ? Fc(e, t, _c.Common.VALUE_METER, n) : Fc(e, wc(t), _c.Common.VALUE_FOOT, n),
            [vc.NetElevation]: (e,t,n)=>e.unitSettings.unitSystem === Yl.Metric ? Vc(e, t, _c.Common.VALUE_METER, n, 2) : Vc(e, 3 * t, _c.Common.VALUE_FOOT, n, 2),
            [vc.Area]: (e,t,n)=>e.unitSettings.unitSystem === Yl.Metric ? Math.abs(t) < 1e5 ? Fc(e, t, _c.Common.VALUE_SQUARE_METER, n) : Vc(e, t / 1e6, _c.Common.VALUE_SQUARE_KILOMETER, n, 1) : Math.abs(t) < 1e5 ? Fc(e, Cc(t), _c.Common.VALUE_SQUARE_FOOT, n) : Vc(e, Nc(t), _c.Common.VALUE_ACRE, n, 1),
            [vc.Volume]: (e,t,n)=>e.unitSettings.unitSystem === Yl.Metric ? Vc(e, t, _c.Common.VALUE_CUBIC_METER, n, 1) : Fc(e, Ec(t), _c.Common.VALUE_GALLON, n),
            [vc.VolumePerMonth]: (e,t,n)=>e.unitSettings.unitSystem === Yl.Metric ? Vc(e, t, _c.Common.VALUE_CUBIC_METER_PER_MONTH, n, 1) : Vc(e, Ec(t), _c.Common.VALUE_GALLON_PER_MONTH, n, 1),
            [vc.Weight]: (e,t,n)=>e.unitSettings.unitSystem === Yl.Metric ? Math.abs(t) < 100 ? Fc(e, t, _c.Common.VALUE_KILOGRAM, n) : Math.abs(t) < 1e6 ? Vc(e, t / 1e3, _c.Common.VALUE_TON, n, 1) : Vc(e, t / 1e6, _c.Common.VALUE_KILOTON, n, 1) : Math.abs(t) < 100 ? Fc(e, Ic(t), _c.Common.VALUE_POUND, n) : Math.abs(t) < 9071847.4 ? Vc(e, Sc(t), _c.Common.VALUE_SHORT_TON, n, 1) : Vc(e, Sc(t) / 1e6, _c.Common.VALUE_SHORT_KILOTON, n, 1),
            [vc.WeightPerCell]: (e,t,n)=>e.unitSettings.unitSystem === Yl.Metric ? Vc(e, t / 1e3, _c.Common.VALUE_TON_PER_CELL, n, 1) : Vc(e, Sc(t), _c.Common.VALUE_SHORT_TON_PER_CELL, n, 1),
            [vc.WeightPerMonth]: (e,t,n)=>e.unitSettings.unitSystem === Yl.Metric ? Math.abs(t) < 100 ? Vc(e, t, _c.Common.VALUE_KG_PER_MONTH, n, 1) : Vc(e, t / 1e3, _c.Common.VALUE_TON_PER_MONTH, n, 1) : Math.abs(t) < 100 ? Vc(e, Ic(t), _c.Common.VALUE_POUND_PER_MONTH, n, 1) : Vc(e, Sc(t), _c.Common.VALUE_SHORT_TON_PER_MONTH, n, 1),
            [vc.Power]: (e,t,n)=>Math.abs(t) < 1e4 ? Vc(e, t / 10, _c.Common.VALUE_KILOWATT, n, 1) : Vc(e, t / 1e4, _c.Common.VALUE_MEGAWATT, n, 2),
            [vc.Energy]: (e,t,n)=>Vc(e, t / 1e4, _c.Common.VALUE_MEGAWATT_HOURS, n, 1),
            [vc.DataRate]: (e,t,n)=>Vc(e, t, _c.Common.VALUE_GIGABIT_PER_SECOND, n, 1),
            [vc.DataBytes]: (e,t,n)=>Wc(e, t, Hc, n, 1),
            [vc.DataMegabytes]: (e,t,n)=>Wc(e, 1024 * t * 1024, Kc, n, 1),
            [vc.Money]: (e,t,n)=>Fc(e, t, _c.Common.VALUE_MONEY, n),
            [vc.MoneyPerCell]: (e,t,n)=>Vc(e, t, _c.Common.VALUE_MONEY_PER_CELL, n, 1),
            [vc.MoneyPerMonth]: (e,t,n)=>Fc(e, t, _c.Common.VALUE_MONEY_PER_MONTH, n),
            [vc.MoneyPerHour]: (e,t,n)=>Fc(e, t, _c.Common.VALUE_MONEY_PER_HOUR, n),
            [vc.MoneyPerDistance]: (e,t,n)=>e.unitSettings.unitSystem === Yl.Metric ? Fc(e, t, _c.Common.VALUE_MONEY_PER_KILOMETER, n) : Fc(e, t / 1.6, _c.Common.VALUE_MONEY_PER_MILE, n),
            [vc.MoneyPerDistancePerMonth]: (e,t,n)=>e.unitSettings.unitSystem === Yl.Metric ? Fc(e, t, _c.Common.VALUE_MONEY_PER_KILOMETER_PER_MONTH, n) : Fc(e, t / 1.6, _c.Common.VALUE_MONEY_PER_MILE_PER_MONTH, n),
            [vc.XP]: (e,t,n)=>Fc(e, t, _c.Common.VALUE_XP, n),
            [vc.Temperature]: (e,t,n)=>{
                switch (e.unitSettings.temperatureUnit) {
                case zl.Celsius:
                    return Fc(e, t, _c.Common.VALUE_CELSIUS, n);
                case zl.Fahrenheit:
                    return Fc(e, bc(t), _c.Common.VALUE_FAHRENHEIT, n);
                case zl.Kelvin:
                    return Fc(e, Tc(t), _c.Common.VALUE_KELVIN, n)
                }
            }
            ,
            [vc.Angle]: (e,t,n)=>Vc(e, t, _c.Common.VALUE_ANGLE, n, 1)
        };
        function kc(e, t, n=!1, s=!0) {
            return Fc(e, t, Lc, n, s)
        }
        const Dc = /\B(?=(\d{3})+(?!\d))/g;
        function Fc(e, t, n, s=!1, i=!0) {
            let a = Math.abs(t).toFixed(0);
            var o = zc(Math.sign(t) * Number.parseInt(a), s);
            if (i) {
                const t = _c.Common.THOUSANDS_SEPARATOR.renderString(e, {});
                a = a.replace(Dc, t)
            }
            return n.renderString(e, {
                SIGN: o,
                VALUE: a
            })
        }
        function Uc(e, t, n=!1, s=1, i=!0, a=!0, o=100) {
            return Vc(e, t, Lc, n, s, i, a, o)
        }
        const Bc = /\.0+$|(\.\d*?[1-9])0+$/g
          , Gc = /\B(?=(?<!\.\d*)(\d{3})+(?!\d))/g;
        function Vc(e, t, n, s=!1, i=1, a=!0, o=!0, r=100) {
            let l, c = Math.abs(t);
            if (c < r) {
                const e = Math.pow(10, -i);
                0 !== c && c < e && (c = e),
                l = c.toFixed(i),
                o && (l = l.replace(Bc, "$1"))
            } else
                l = c.toFixed(0);
            const u = zc(Math.sign(t) * Number.parseFloat(l), s);
            if (a) {
                const t = _c.Common.THOUSANDS_SEPARATOR.renderString(e, {});
                l = l.replace(Gc, t)
            }
            const d = _c.Common.DECIMAL_SEPARATOR.renderString(e, {});
            return l = l.replace(".", d),
            n.renderString(e, {
                SIGN: u,
                VALUE: l
            })
        }
        const Hc = [[0, _c.Common.VALUE_BYTE], [1, _c.Common.VALUE_KILOBYTE], [2, _c.Common.VALUE_MEGABYTE], [3, _c.Common.VALUE_GIGABYTE], [4, _c.Common.VALUE_TERABYTE]]
          , Kc = [[2, _c.Common.VALUE_MEGABYTE], [3, _c.Common.VALUE_GIGABYTE], [4, _c.Common.VALUE_TERABYTE]];
        function Wc(e, t, n, s=!1, i=1, a=!0, o=!0) {
            let r = n[n.length - 1][1]
              , l = t / Math.pow(1024, n[n.length - 1][0]);
            for (let e = 0; e < n.length; ++e) {
                const s = Math.pow(1024, n[e][0]);
                if (Math.abs(t) < 512 * s) {
                    r = n[e][1],
                    l = t / s;
                    break
                }
            }
            return Vc(e, l, r, s, i, a, o)
        }
        function zc(e, t) {
            return e < 0 ? "-" : e > 0 ? t ? "+" : "" : t ? "±" : ""
        }
        var Yc = (e,t,n=vc.Integer,s)=>Mc(n)(e, t, s);
        X.add("game-ui/common/localization/localized-number.tsx", {
            get LocalizedNumber() {
                return Oc
            },
            set LocalizedNumber(e) {
                Oc = e
            },
            get CustomLocalizedNumber() {
                return Pc
            },
            set CustomLocalizedNumber(e) {
                Pc = e
            },
            get useNumberFormat() {
                return Ac
            },
            set useNumberFormat(e) {
                Ac = e
            },
            get formatInteger() {
                return kc
            },
            set formatInteger(e) {
                kc = e
            },
            get formatFloat() {
                return Uc
            },
            set formatFloat(e) {
                Uc = e
            },
            get sign() {
                return zc
            },
            set sign(e) {
                zc = e
            },
            get renderFormattedNumber() {
                return Yc
            },
            set renderFormattedNumber(e) {
                Yc = e
            }
        });
        var $c = /{([^{}]+)}/g;
        function qc(e, t, n) {
            return e.replace($c, ((e,s)=>{
                const [i,a] = s.split(":");
                let o = t[i];
                if (a && n) {
                    const e = Number(o ?? i);
                    if (!Number.isNaN(e)) {
                        const [t,...s] = a.split(" ")
                          , i = vc[t];
                        o = Yc(n, e, i, s.includes("signed"))
                    }
                }
                return void 0 !== o ? o : e
            }
            ))
        }
        X.add("game-ui/common/utils/substitute.ts", {
            get PLACEHOLDER_REGEX() {
                return $c
            },
            set PLACEHOLDER_REGEX(e) {
                $c = e
            },
            get substitute() {
                return qc
            },
            set substitute(e) {
                qc = e
            }
        });
        const Xc = "l10n";
        var Qc;
        !function(e) {
            e[e.None = 0] = "None",
            e[e.Id = 1] = "Id",
            e[e.Fallback = 2] = "Fallback"
        }(Qc || (Qc = {}));
        var Zc, Jc = $r(Xc, "locales"), eu = $r(Xc, "debugMode", Qc.None), tu = Zr(Xc, "activeDictionaryChanged"), nu = Xr(Xc, "indexCounts");
        function su(e) {
            tl(Xc, "selectLocale", e)
        }
        function iu(e) {
            return {
                __Type: Zc.String,
                id: e,
                value: null,
                args: null
            }
        }
        function au(e) {
            return {
                __Type: Zc.String,
                id: null,
                value: e,
                args: null
            }
        }
        !function(e) {
            e.Bounds = "Game.UI.Localization.LocalizedBounds",
            e.Fraction = "Game.UI.Localization.LocalizedFraction",
            e.Number = "Game.UI.Localization.LocalizedNumber",
            e.String = "Game.UI.Localization.LocalizedString"
        }(Zc || (Zc = {})),
        X.add("game-ui/common/localization/localization-bindings.ts", {
            get LocalizationDebugMode() {
                return Qc
            },
            set LocalizationDebugMode(e) {
                Qc = e
            },
            get locales() {
                return locales
            },
            set locales(e) {
                locales = e
            },
            get debugMode() {
                return debugMode
            },
            set debugMode(e) {
                debugMode = e
            },
            get activeDictionaryChanged() {
                return activeDictionaryChanged
            },
            set activeDictionaryChanged(e) {
                activeDictionaryChanged = e
            },
            get indexCounts() {
                return indexCounts
            },
            set indexCounts(e) {
                indexCounts = e
            },
            get selectLocale() {
                return su
            },
            set selectLocale(e) {
                su = e
            },
            get LocElementType() {
                return Zc
            },
            set LocElementType(e) {
                Zc = e
            },
            get locStrId() {
                return iu
            },
            set locStrId(e) {
                iu = e
            },
            get locStrValue() {
                return au
            },
            set locStrValue(e) {
                au = e
            }
        });
        var ou = lc("LocalizedBounds", ((e,{min: t, max: n, unit: s=vc.Integer})=>t !== n ? function(e) {
            return ru[e] ?? ((t,n,s)=>`${n}–${s} <${e}>`)
        }(s)(e, t, n) : Oc.renderString(e, {
            value: n,
            unit: s
        })), ((e,t)=>e.min === t.min && e.max === t.max && e.unit === t.unit));
        const ru = {
            [vc.Power]: (e,t,n)=>Math.abs(n) < 1e4 ? cu(e, t / 10, n / 10, _c.Common.BOUNDS_KILOWATT, 1) : cu(e, t / 1e4, n / 1e4, _c.Common.BOUNDS_MEGAWATT, 1),
            [vc.PercentageSingleFraction]: (e,t,n)=>cu(e, t, n, _c.Common.BOUNDS_PERCENT, 1),
            [vc.Temperature]: (e,t,n)=>{
                switch (e.unitSettings.temperatureUnit) {
                case zl.Celsius:
                    return lu(e, t, n, _c.Common.BOUNDS_CELSIUS);
                case zl.Fahrenheit:
                    return lu(e, bc(t), bc(n), _c.Common.BOUNDS_FAHRENHEIT);
                case zl.Kelvin:
                    return lu(e, Tc(t), Tc(n), _c.Common.BOUNDS_KELVIN)
                }
            }
        };
        function lu(e, t, n, s, i=!0) {
            return s.renderString(e, {
                MIN: kc(e, t, !1, i),
                MAX: kc(e, n, !1, i)
            })
        }
        function cu(e, t, n, s, i=1, a=!0, o=!0) {
            return s.renderString(e, {
                MIN: Uc(e, t, !1, i, a, o),
                MAX: Uc(e, n, !1, i, a, o)
            })
        }
        X.add("game-ui/common/localization/localized-bounds.tsx", {
            get LocalizedBounds() {
                return ou
            },
            set LocalizedBounds(e) {
                ou = e
            }
        });
        var uu = lc("LocalizedFraction", ((e,{value: t, total: n, unit: s=vc.Integer})=>function(e) {
            return du[e] ?? ((t,n,s)=>`${n} / ${s} <${e}>`)
        }(s)(e, t, n)), ((e,t)=>e.value === t.value && e.total === t.total && e.unit === t.unit));
        const du = {
            [vc.Volume]: (e,t,n)=>e.unitSettings.unitSystem === Yl.Metric ? hu(e, t, n, _c.Common.FRACTION_CUBIC_METER, 1) : hu(e, Ec(t), Ec(n), _c.Common.FRACTION_GALLON, 1),
            [vc.VolumePerMonth]: (e,t,n)=>e.unitSettings.unitSystem === Yl.Metric ? hu(e, t, n, _c.Common.FRACTION_CUBIC_METER_PER_MONTH, 1) : hu(e, Ec(t), Ec(n), _c.Common.FRACTION_GALLON_PER_MONTH, 1),
            [vc.Weight]: (e,t,n)=>e.unitSettings.unitSystem === Yl.Metric ? Math.abs(n) < 100 ? mu(e, t, n, _c.Common.FRACTION_KG) : hu(e, t / 1e3, n / 1e3, _c.Common.FRACTION_TON, 2) : Math.abs(n) < 100 ? mu(e, Ic(t), Ic(n), _c.Common.FRACTION_POUND) : hu(e, Sc(t), Sc(n), _c.Common.FRACTION_SHORT_TON, 2),
            [vc.WeightPerMonth]: (e,t,n)=>e.unitSettings.unitSystem === Yl.Metric ? Math.abs(n) < 100 ? mu(e, t, n, _c.Common.FRACTION_KG_PER_MONTH) : hu(e, t / 1e3, n / 1e3, _c.Common.FRACTION_TON_PER_MONTH, 2) : Math.abs(n) < 100 ? mu(e, Ic(t), Ic(n), _c.Common.FRACTION_POUND_PER_MONTH) : hu(e, Sc(t), Sc(n), _c.Common.FRACTION_SHORT_TON_PER_MONTH, 2),
            [vc.Power]: (e,t,n)=>Math.abs(n) < 1e4 ? hu(e, t / 10, n / 10, _c.Common.FRACTION_KILOWATT, 1) : hu(e, t / 1e4, n / 1e4, _c.Common.FRACTION_MEGAWATT, 2),
            [vc.Energy]: (e,t,n)=>Math.abs(n) < 1e4 ? hu(e, t / 10, n / 10, _c.Common.FRACTION_KILOWATT_HOURS, 1) : hu(e, t / 1e4, n / 1e4, _c.Common.FRACTION_MEGAWATT_HOURS, 2),
            [vc.BodiesPerMonth]: (e,t,n)=>mu(e, t, n, _c.Common.FRACTION_BODIES_PER_MONTH),
            [vc.XP]: (e,t,n)=>mu(e, t, n, _c.Common.FRACTION_XP),
            [vc.Integer]: (e,t,n)=>mu(e, t, n, _c.Common.FRACTION_INTEGER),
            [vc.IntegerPerMonth]: (e,t,n)=>mu(e, t, n, _c.Common.FRACTION_INTEGER_PER_MONTH)
        };
        function mu(e, t, n, s, i=!0) {
            return s.renderString(e, {
                VALUE: kc(e, t, !1, i),
                TOTAL: kc(e, n, !1, i)
            })
        }
        function hu(e, t, n, s, i=1, a=!0, o=!0) {
            return s.renderString(e, {
                VALUE: Uc(e, t, !1, i, a, o),
                TOTAL: Uc(e, n, !1, i, a, o)
            })
        }
        X.add("game-ui/common/localization/localized-fraction.tsx", {
            get LocalizedFraction() {
                return uu
            },
            set LocalizedFraction(e) {
                uu = e
            }
        });
        var gu = lc("Localized", ((e,{value: t, transformer: n})=>{
            const s = pu(e, t);
            return n ? n(s) : s
        }
        ), ((e,t)=>fu(e.value, t.value) && e.transformer === t.transformer));
        function pu(e, t) {
            switch (t.__Type) {
            case Zc.Bounds:
                return ou.renderString(e, t);
            case Zc.Fraction:
                return uu.renderString(e, t);
            case Zc.Number:
                return Oc.renderString(e, t);
            case Zc.String:
                return xu(e, t.id, t.value, t.args);
            default:
                return "<INVALID TYPE>"
            }
        }
        function fu(e, t) {
            if (e.__Type !== t.__Type)
                return !1;
            switch (e.__Type) {
            case Zc.Bounds:
                return ou.propsAreEqual(e, t);
            case Zc.Fraction:
                return uu.propsAreEqual(e, t);
            case Zc.Number:
                return Oc.propsAreEqual(e, t);
            case Zc.String:
                return function(e, t) {
                    return e.id === t.id && e.value === t.value && function(e, t) {
                        if (Object.is(e, t))
                            return !0;
                        if (null == e || null == t)
                            return e === t;
                        const n = Object.keys(e)
                          , s = Object.keys(t);
                        if (n.length !== s.length)
                            return !1;
                        return n.every((n=>Object.prototype.hasOwnProperty.call(t, n) && fu(e[n], t[n])))
                    }(e.args, t.args)
                }(e, t);
            default:
                return !0
            }
        }
        function xu(e, t, n, s) {
            const i = null != t ? e.translate(t, n) ?? t : n ?? "";
            if (null != s || i.match($c)) {
                const t = s ? function(e, t) {
                    return Object.fromEntries(Object.entries(t).map((([t,n])=>[t, pu(e, n)])))
                }(e, s) : {};
                return qc(i, t, e)
            }
            return i
        }
        function vu(e) {
            return null == e ? "" : e.replace(/\B([A-Z])/g, " $1").replace(/^([a-z])/g, ((e,t)=>t.toUpperCase()))
        }
        function _u(e) {
            return null == e ? "" : e.replace(/\B([A-Z])/g, " $1").toUpperCase()
        }
        function bu(e) {
            return e.toFixed(0)
        }
        function Tu(e, t) {
            return e.toFixed(0).padStart(t, "0").substr(0, t)
        }
        function Eu(e) {
            return null == e || 0 === e.length ? "" : 1 === e.length ? e.toUpperCase() : e.charAt(0).toUpperCase() + e.slice(1)
        }
        X.add("game-ui/common/localization/localized.tsx", {
            get Localized() {
                return gu
            },
            set Localized(e) {
                gu = e
            },
            get renderLocalized() {
                return pu
            },
            set renderLocalized(e) {
                pu = e
            },
            get renderStringElement() {
                return xu
            },
            set renderStringElement(e) {
                xu = e
            }
        });
        const Iu = ["{VALUE}k", "{VALUE}m", "{VALUE}b"];
        function Su(e) {
            if (Math.abs(Math.round(e)) < 1e3)
                return e.toFixed(0);
            for (let t = 0; t < Iu.length; ++t) {
                const n = 1e3 * Math.pow(10, 3 * t);
                if (Math.round(Math.abs(e) / n) < 1e3)
                    return qc(Iu[t], {
                        VALUE: (e / n).toFixed(0)
                    })
            }
            const t = Math.pow(10, 3 * Iu.length);
            return qc(Iu[Iu.length - 1], {
                VALUE: (e / t).toFixed(0)
            })
        }
        function yu(e) {
            return (0,
            Y.useMemo)((()=>Su(e)), [e])
        }
        X.add("game-ui/common/utils/format.ts", {
            get makePretty() {
                return vu
            },
            set makePretty(e) {
                vu = e
            },
            get makePrettyUppercase() {
                return _u
            },
            set makePrettyUppercase(e) {
                _u = e
            },
            get formatInteger() {
                return bu
            },
            set formatInteger(e) {
                bu = e
            },
            get formatFixedLengthInt() {
                return Tu
            },
            set formatFixedLengthInt(e) {
                Tu = e
            },
            get capitalize() {
                return Eu
            },
            set capitalize(e) {
                Eu = e
            },
            get formatLargeNumber() {
                return Su
            },
            set formatLargeNumber(e) {
                Su = e
            },
            get useFormattedLargeNumber() {
                return yu
            },
            set useFormattedLargeNumber(e) {
                yu = e
            }
        });
        var ju = lc("LocalizedDate", ((e,{value: t})=>Nu(e, t)), ((e,t)=>e.value.month === t.value.month && e.value.year === t.value.year));
        function Cu() {
            const e = sc();
            return (0,
            Y.useCallback)((t=>Nu(e, t)), [e])
        }
        function Nu(e, {year: t, month: n}) {
            return _c.Common.MEDIUM_DATE_FORMAT.renderString(e, {
                MONTH: Mu(e, n),
                YEAR: t.toFixed()
            })
        }
        var wu = lc("LocalizedTime", ((e,{value: t})=>Pu(e, t)), ((e,t)=>e.value.hour === t.value.hour && e.value.minute === t.value.minute));
        function Ou() {
            const e = sc();
            return (0,
            Y.useCallback)((t=>Pu(e, t)), [e])
        }
        function Pu(e, {hour: t, minute: n}) {
            return e.unitSettings.timeFormat === Wl.TwentyFourHours ? _c.Common.TIME_FORMAT.renderString(e, {
                HOUR: Tu(t, 2),
                MINUTE: Tu(n, 2)
            }) : _c.Common.TIME_FORMAT_12.renderString(e, {
                HOUR: Tu(t % 12 || 12, 2),
                MINUTE: Tu(n, 2),
                PERIOD: Du(e, t)
            })
        }
        var Lu = lc("LocalizedDateTime", ((e,{value: t})=>Au(e, t)), ((e,t)=>e.value.month === t.value.month && e.value.year === t.value.year && e.value.hour === t.value.hour && e.value.minute === t.value.minute));
        function Au(e, t) {
            return `${Nu(e, t)} ${Pu(e, t)}`
        }
        function Mu(e, t) {
            return _c.Common.MONTH_SHORT.renderString(e, {
                index: t
            })
        }
        var Ru = lc("LocalizedTimestamp", ((e,{value: t})=>function(e, t) {
            const n = e.unitSettings.timeFormat === Wl.TwentyFourHours ? _c.Common.TIMESTAMP_FORMAT.renderString(e, {}) : _c.Common.TIMESTAMP_FORMAT_12.renderString(e, {});
            return n.replace(ku, (n=>{
                const s = new Date(t);
                switch (n) {
                case "yyyy":
                    return bu(s.getFullYear());
                case "MM":
                    return Tu(s.getMonth() + 1, 2);
                case "M":
                    return bu(s.getMonth() + 1);
                case "dd":
                    return Tu(s.getDate(), 2);
                case "d":
                    return bu(s.getDate());
                case "HH":
                    return Tu(s.getHours(), 2);
                case "H":
                    return bu(s.getHours());
                case "hh":
                    return Tu(s.getHours() % 12 || 12, 2);
                case "h":
                    return bu(s.getHours() % 12 || 12);
                case "mm":
                    return Tu(s.getMinutes(), 2);
                case "aa":
                    return Du(e, s.getHours());
                default:
                    return n
                }
            }
            ))
        }(e, t)), ((e,t)=>e.value === t.value));
        const ku = /(yyyy|MM|M|dd|d|HH|H|hh|h|mm|aa)/g;
        function Du(e, t) {
            return t < 12 ? _c.Common.TIME_PERIOD_AM.renderString(e, {}) : _c.Common.TIME_PERIOD_PM.renderString(e, {})
        }
        X.add("game-ui/common/localization/localized-date.tsx", {
            get LocalizedDate() {
                return ju
            },
            set LocalizedDate(e) {
                ju = e
            },
            get useDateFormat() {
                return Cu
            },
            set useDateFormat(e) {
                Cu = e
            },
            get formatDate() {
                return Nu
            },
            set formatDate(e) {
                Nu = e
            },
            get LocalizedTime() {
                return wu
            },
            set LocalizedTime(e) {
                wu = e
            },
            get useTimeFormat() {
                return Ou
            },
            set useTimeFormat(e) {
                Ou = e
            },
            get LocalizedDateTime() {
                return Lu
            },
            set LocalizedDateTime(e) {
                Lu = e
            },
            get formatDateTime() {
                return Au
            },
            set formatDateTime(e) {
                Au = e
            },
            get LocalizedTimestamp() {
                return Ru
            },
            set LocalizedTimestamp(e) {
                Ru = e
            }
        });
        var Fu, Uu = lc("LocalizedDuration", ((e,{value: t, daysPerYear: n, maxMonths: s=n})=>{
            const i = Math.round(t);
            if (i >= s) {
                const s = Math.round(t / n);
                return 1 !== s ? _c.Common.VALUE_YEARS.renderString(e, {
                    VALUE: (0,
                    z.jsx)(Oc, {
                        value: s,
                        unit: vc.Integer
                    })
                }) : _c.Common.VALUE_YEAR.renderString(e, {
                    VALUE: (0,
                    z.jsx)(Oc, {
                        value: s,
                        unit: vc.Integer
                    })
                })
            }
            if (i > 1)
                return _c.Common.VALUE_MONTHS.renderString(e, {
                    VALUE: (0,
                    z.jsx)(Oc, {
                        value: t,
                        unit: vc.Integer
                    })
                });
            if (t > 23.5 / 24)
                return _c.Common.VALUE_MONTH.renderString(e, {
                    VALUE: (0,
                    z.jsx)(Oc, {
                        value: t,
                        unit: vc.Integer
                    })
                });
            {
                const n = Math.floor(24 * t)
                  , s = Math.floor(60 * (24 * t - n));
                return _c.Common.TIME_FORMAT.renderString(e, {
                    HOUR: Tu(n, 2),
                    MINUTE: Tu(s, 2)
                })
            }
        }
        ), ((e,t)=>e.value === t.value && e.daysPerYear === t.daysPerYear));
        function Bu(e) {
            return e.__Type
        }
        function Gu(e, t) {
            return null != e && ("string" == typeof e.__Type && !!e.__Type.match(new RegExp("^" + t + ",?")))
        }
        function Vu(e, t) {
            return {
                ...e,
                __Type: t
            }
        }
        function Hu(e) {
            return Gu(e, Fu.Formatted)
        }
        X.add("game-ui/common/localization/localized-duration.tsx", {
            get LocalizedDuration() {
                return Uu
            },
            set LocalizedDuration(e) {
                Uu = e
            }
        }),
        X.add("game-ui/common/data-binding/binding-utils.ts", {
            get getType() {
                return Bu
            },
            set getType(e) {
                Bu = e
            },
            get isBindingType() {
                return Gu
            },
            set isBindingType(e) {
                Gu = e
            },
            get typed() {
                return Vu
            },
            set typed(e) {
                Vu = e
            }
        }),
        function(e) {
            e.Custom = "names.CustomName",
            e.Localized = "names.LocalizedName",
            e.Formatted = "names.FormattedName"
        }(Fu || (Fu = {}));
        var Ku = (0,
        Y.memo)((function({value: e}) {
            const t = Wu(e);
            return (0,
            z.jsx)(z.Fragment, {
                children: t
            })
        }
        ), ((e,t)=>Kr(e, t, 3)));
        function Wu(e) {
            const t = zu();
            return (0,
            Y.useMemo)((()=>t(e)), [e, t])
        }
        function zu() {
            const e = sc();
            return (0,
            Y.useCallback)((t=>{
                if (null != t) {
                    if (function(e) {
                        return Gu(e, Fu.Custom)
                    }(t))
                        return t.name;
                    if (Hu(t) || function(e) {
                        return Gu(e, Fu.Localized)
                    }(t)) {
                        const n = e.translate(t.nameId);
                        if (null != n) {
                            if (Hu(t)) {
                                const s = null != t.nameArgs ? function(e, t) {
                                    return Object.entries(t).reduce(((t,[n,s])=>(t[n] = e.translate(s) ?? s,
                                    t)), {})
                                }(e, t.nameArgs) : null;
                                if (null != s)
                                    return qc(n, s)
                            }
                            return n
                        }
                        return t.nameId
                    }
                }
                return ""
            }
            ), [e])
        }
        function Yu(e, t) {
            return Kr(e, t, 2)
        }
        X.add("game-ui/common/localization/localized-entity-name.tsx", {
            get LocalizedEntityName() {
                return Ku
            },
            set LocalizedEntityName(e) {
                Ku = e
            },
            get useLocalizedName() {
                return Wu
            },
            set useLocalizedName(e) {
                Wu = e
            },
            get useNameFormat() {
                return zu
            },
            set useNameFormat(e) {
                zu = e
            },
            get nameEquals() {
                return Yu
            },
            set nameEquals(e) {
                Yu = e
            }
        });
        var $u = lc("LocalizedPercentage", ((e,{value: t, max: n})=>Oc.renderString(e, {
            value: t > 0 && n > 0 ? Math.max(1, 100 * t / n) : 0,
            unit: vc.Percentage
        })), ((e,t)=>e.value === t.value && e.max === t.max));
        X.add("game-ui/common/localization/localized-percentage.tsx", {
            get LocalizedPercentage() {
                return $u
            },
            set LocalizedPercentage(e) {
                $u = e
            }
        }),
        X.add("game-ui/common/localization/index.ts", {});
        var qu, Xu, Qu = n(485), Zu = n.n(Qu);
        !function(e) {
            e.Always = "always",
            e.AnyChildren = "anyChildren",
            e.FocusedChild = "focusedChild"
        }(qu || (qu = {})),
        function(e) {
            e.Center = "center",
            e.Bounds = "bounds"
        }(Xu || (Xu = {}));
        var Ju = (0,
        Y.createContext)({
            isChildFocused: ()=>!0,
            registerChild: ()=>{}
            ,
            unregisterChild: ()=>{}
            ,
            attachCallback: e=>e(!0, null),
            detachCallback: e=>e(!1, null),
            attachTo: ()=>{}
            ,
            detach: ()=>{}
            ,
            getBounds: ()=>null,
            getFocusedBounds: ()=>null,
            debugTrace: ()=>"<-- ROOT",
            deepDebugTrace: ()=>"ROOT"
        })
          , ed = {
            isChildFocused: ()=>!1,
            registerChild: ()=>{}
            ,
            unregisterChild: ()=>{}
            ,
            attachCallback: ()=>{}
            ,
            detachCallback: ()=>{}
            ,
            attachTo: ()=>{}
            ,
            detach: ()=>{}
            ,
            getBounds: ()=>null,
            getFocusedBounds: ()=>null,
            debugTrace: ()=>"<-- DISABLED",
            deepDebugTrace: ()=>"ROOT"
        };
        X.add("game-ui/common/focus/controller/focus-controller.ts", {
            get FocusActivation() {
                return qu
            },
            set FocusActivation(e) {
                qu = e
            },
            get FocusLimits() {
                return Xu
            },
            set FocusLimits(e) {
                Xu = e
            },
            get FocusContext() {
                return Ju
            },
            set FocusContext(e) {
                Ju = e
            },
            get disabledFocusController() {
                return ed
            },
            set disabledFocusController(e) {
                ed = e
            }
        });
        var td, nd = {
            entries: ()=>[],
            has: ()=>!1,
            get: ()=>{}
            ,
            register: ()=>{}
            ,
            unregister: ()=>{}
            ,
            attachCallback: ()=>{}
            ,
            detachCallback: ()=>{}
        };
        function sd() {
            return Y.createContext(nd)
        }
        function id(e, t) {
            const n = (0,
            Y.useContext)(e)
              , s = (0,
            Y.useRef)(null);
            return (0,
            Y.useCallback)((e=>{
                e !== s.current && (null != s.current && n.unregister(t, s.current),
                null != e && n.register(t, e),
                s.current = e)
            }
            ), [t, n])
        }
        function ad(e, t) {
            const n = (0,
            Y.useContext)(e)
              , [s,i] = (0,
            Y.useState)(n.get(t));
            return (0,
            Y.useEffect)((()=>{
                i(n.get(t));
                const e = {
                    onRegister: (e,n)=>{
                        e === t && i(n)
                    }
                    ,
                    onUnregister: (e,n)=>{
                        e === t && i(void 0)
                    }
                };
                return n.attachCallback(e),
                ()=>n.detachCallback(e)
            }
            ), [t, n]),
            s
        }
        class od {
            _elements = new Map;
            _callbacks = [];
            has(e) {
                return this._elements.has(e)
            }
            get(e) {
                return this._elements.get(e)
            }
            entries() {
                return this._elements
            }
            register(e, t) {
                if (this._elements.has(e))
                    console.warn(`Duplicate element '${String(e)}' registered!`);
                else {
                    this._elements.set(e, t);
                    for (const n of this._callbacks)
                        n.onRegister(e, t)
                }
            }
            unregister(e, t) {
                if (this._elements.get(e) === t) {
                    this._elements.delete(e);
                    for (const n of this._callbacks)
                        n.onUnregister(e, t)
                }
            }
            attachCallback(e) {
                this._callbacks.includes(e) ? console.warn("Element registry callback already attached!") : this._callbacks.push(e)
            }
            detachCallback(e) {
                const t = this._callbacks.indexOf(e);
                -1 !== t ? this._callbacks.splice(t, 1) : console.warn("Element registry callback not attached!")
            }
        }
        X.add("game-ui/common/utils/element-registry.tsx", {
            get defaultRegistry() {
                return nd
            },
            set defaultRegistry(e) {
                nd = e
            },
            get createElementRegistryContext() {
                return sd
            },
            set createElementRegistryContext(e) {
                sd = e
            },
            get useRegisteredElementRef() {
                return id
            },
            set useRegisteredElementRef(e) {
                id = e
            },
            get useRegisteredElement() {
                return ad
            },
            set useRegisteredElement(e) {
                ad = e
            }
        }),
        function(e) {
            e[e.in = 0] = "in",
            e[e.enter = 1] = "enter",
            e[e.exit = 2] = "exit"
        }(td || (td = {}));
        var rd = {
            state: td.in,
            onMount: ()=>{}
            ,
            onUnmount: ()=>{}
        }
          , ld = Y.createContext(rd)
          , cd = Y.createContext(!1);
        X.add("game-ui/common/animations/transition-context.tsx", {
            get TransitionState() {
                return td
            },
            set TransitionState(e) {
                td = e
            },
            get defaultContext() {
                return rd
            },
            set defaultContext(e) {
                rd = e
            },
            get TransitionContext() {
                return ld
            },
            set TransitionContext(e) {
                ld = e
            },
            get ExitTransitionActive() {
                return cd
            },
            set ExitTransitionActive(e) {
                cd = e
            }
        });
        var ud = ({skipInitial: e=!0, children: t})=>{
            const n = (0,
            Y.useRef)(e);
            (0,
            Y.useEffect)((()=>()=>{
                n.current = !1
            }
            ), [t]);
            const s = (0,
            Y.useMemo)((()=>{
                const e = new od;
                return e.attachCallback({
                    onRegister: ()=>{}
                    ,
                    onUnregister: e=>{
                        o((t=>{
                            const n = md(t, e);
                            return Kr(n, t) ? t : n
                        }
                        ))
                    }
                }),
                e
            }
            ), [])
              , i = (0,
            Y.useRef)(null)
              , [a,o] = (0,
            Y.useState)((()=>function(e) {
                const t = new Array(Y.Children.count(e));
                return Y.Children.forEach(e, ((e,n)=>{
                    t[n] = e
                }
                )),
                t
            }(t)));
            (0,
            Y.useEffect)((()=>{
                const e = function(e) {
                    const t = new Set;
                    return Y.Children.forEach(e, (e=>{
                        const n = hd(e);
                        null != n && t.add(n)
                    }
                    )),
                    t
                }(t);
                if (null != i.current) {
                    o((n=>function(e, t, n) {
                        const s = new Map;
                        let i = [];
                        Y.Children.forEach(e, (e=>{
                            const t = hd(e);
                            null != t && (n.has(t) ? (s.set(t, i),
                            i = []) : i.push(e))
                        }
                        ));
                        const a = [];
                        return Y.Children.forEach(t, (e=>{
                            const t = hd(e);
                            if (null != t) {
                                const e = s.get(t);
                                e && a.push(...e)
                            }
                            a.push(e)
                        }
                        )),
                        a.push(...i),
                        a
                    }(n, t, e)));
                    for (const t of i.current.values())
                        if (!e.has(t)) {
                            const e = s.get(t);
                            e ? e(td.exit) : o((e=>md(e, t)))
                        }
                    for (const t of e.values())
                        if (!i.current.has(t)) {
                            const e = s.get(t);
                            e && e(td.enter)
                        }
                }
                i.current = e
            }
            ), [t, s]);
            const r = (0,
            Y.useContext)(cd);
            return (0,
            z.jsx)(ld.Provider, {
                value: rd,
                children: a.map((e=>{
                    const t = hd(e);
                    if (null != t) {
                        const a = !i.current || i.current.has(t);
                        return (0,
                        z.jsx)(dd, {
                            transitionKey: t,
                            exiting: r || !a,
                            transitionRegistry: s,
                            skipInitialRef: n,
                            children: e
                        }, t)
                    }
                    return e
                }
                ))
            })
        }
        ;
        const dd = ({transitionKey: e, transitionRegistry: t, skipInitialRef: n, exiting: s, children: i})=>{
            const [a,o] = (0,
            Y.useState)(null == e || n.current ? td.in : td.enter)
              , r = (0,
            Y.useCallback)((()=>{
                null != e && t.register(e, o)
            }
            ), [e, t])
              , l = (0,
            Y.useCallback)((()=>{
                null != e && t.unregister(e, o)
            }
            ), [e, t])
              , c = (0,
            Y.useMemo)((()=>({
                state: a,
                onMount: r,
                onUnmount: l
            })), [r, l, a])
              , u = (0,
            Y.useContext)(Ju);
            return (0,
            z.jsx)(ld.Provider, {
                value: c,
                children: (0,
                z.jsx)(cd.Provider, {
                    value: s,
                    children: (0,
                    z.jsx)(Ju.Provider, {
                        value: s ? ed : u,
                        children: i
                    })
                })
            })
        }
        ;
        function md(e, t) {
            return e.filter((e=>hd(e) !== t))
        }
        function hd(e) {
            return null !== e && "object" == typeof e ? e.key : null
        }
        function gd(e, t) {
            return (0,
            Y.useCallback)((n=>{
                pd(e, n),
                pd(t, n)
            }
            ), [e, t])
        }
        function pd(e, t) {
            "function" == typeof e ? e(t) : null != e && (e.current = t)
        }
        X.add("game-ui/common/animations/transition-group-coordinator.tsx", {
            get TransitionGroupCoordinator() {
                return ud
            },
            set TransitionGroupCoordinator(e) {
                ud = e
            }
        }),
        X.add("game-ui/common/hooks/use-merged-ref.tsx", {
            get useMergedRef() {
                return gd
            },
            set useMergedRef(e) {
                gd = e
            },
            get setRef() {
                return pd
            },
            set setRef(e) {
                pd = e
            }
        });
        var fd = (0,
        Y.createContext)(null)
          , xd = ({children: e})=>{
            const t = (0,
            Y.useContext)(fd);
            let n = !1;
            const s = gd(e.ref, t?.ref)
              , i = t?.ref ? (n = !0) && s : e.ref;
            let a;
            (t?.style || e.props.style) && (t?.style && e.props.style ? (n = !0,
            a = {
                ...t?.style,
                ...e.props.style
            }) : e.props.style ? a = e.props.style : (n = !0,
            a = t?.style));
            const o = t?.className ? (n = !0) && Zu()(e.props.className, t?.className) : e.props.className
              , r = n ? {
                ...e.props,
                className: o,
                style: a,
                ref: i
            } : void 0;
            return (0,
            z.jsx)(fd.Provider, {
                value: null,
                children: n ? (0,
                Y.cloneElement)(e, r) : e
            })
        }
          , vd = (0,
        Y.memo)((0,
        Y.forwardRef)((function({style: e, className: t, children: n}, s) {
            const i = (0,
            Y.useContext)(fd)
              , a = (0,
            Y.useMemo)((()=>{
                let a;
                return (i?.style || e) && (a = i?.style && e ? {
                    ...i?.style,
                    ...e
                } : e || i?.style),
                {
                    ref: e=>{
                        pd(n.ref, e),
                        pd(s, e),
                        null != i?.ref && i.ref(e)
                    }
                    ,
                    style: a,
                    className: Zu()(i?.className, t)
                }
            }
            ), [n.ref, t, i, s, e]);
            return (0,
            z.jsx)(fd.Provider, {
                value: a,
                children: (o = n,
                "object" != typeof o || "function" != typeof o.type ? (0,
                z.jsx)(xd, {
                    children: n
                }) : n)
            });
            var o
        }
        )), (({style: e, ...t},{style: n, ...s})=>Kr(t, s) && Kr(e, n)));
        X.add("game-ui/common/dom-node/dom-node.tsx", {
            get DOMNodeContext() {
                return fd
            },
            set DOMNodeContext(e) {
                fd = e
            },
            get DOMNodeProvider() {
                return xd
            },
            set DOMNodeProvider(e) {
                xd = e
            },
            get DOMNodeModifier() {
                return vd
            },
            set DOMNodeModifier(e) {
                vd = e
            }
        });
        var _d = -2147483648
          , bd = 2147483647
          , Td = 4294967295
          , Ed = -3402823e32
          , Id = 3402823e32
          , Sd = {
            x: Ed,
            y: Ed
        }
          , yd = {
            x: Id,
            y: Id
        }
          , jd = {
            x: Ed,
            y: Ed,
            z: Ed
        }
          , Cd = {
            x: Id,
            y: Id,
            z: Id
        }
          , Nd = {
            x: Ed,
            y: Ed,
            z: Ed,
            w: Ed
        }
          , wd = {
            x: Id,
            y: Id,
            z: Id,
            w: Id
        };
        function Od(e, t, n) {
            return e <= t ? t : e >= n ? n : e
        }
        function Pd(e, t, n) {
            return e + (t - e) * n
        }
        function Ld(e, t) {
            const n = Math.pow(10, t);
            return Math.round((e + Number.EPSILON) * n) / n
        }
        var Ad = {
            x: 0,
            y: 0
        }
          , Md = {
            x: -1,
            y: 0
        }
          , Rd = {
            x: 0,
            y: 1
        }
          , kd = {
            x: 1,
            y: 0
        }
          , Dd = {
            x: 0,
            y: -1
        };
        function Fd(e, t) {
            return e.x === t.x && e.y === t.y
        }
        function Ud(e, t, n) {
            return {
                x: Od(e.x, t, n),
                y: Od(e.y, t, n)
            }
        }
        function Bd(e) {
            const t = Kd(e);
            return 0 === t ? Ad : {
                x: e.x / t,
                y: e.y / t
            }
        }
        function Gd(e, t) {
            return {
                x: e.x - t.x,
                y: e.y - t.y
            }
        }
        function Vd(e, t, n) {
            return {
                x: e.x + (t.x - e.x) * n,
                y: e.y + (t.y - e.y) * n
            }
        }
        function Hd(e) {
            return {
                x: Math.trunc(e.x),
                y: Math.trunc(e.y)
            }
        }
        function Kd(e) {
            return Math.sqrt(Wd(e))
        }
        function Wd(e) {
            return e.x * e.x + e.y * e.y
        }
        function zd({x: e, y: t}, n) {
            return `(${Ld(e, n)}, ${Ld(t, n)})`
        }
        function Yd({clientX: e, clientY: t}) {
            return {
                x: e,
                y: t
            }
        }
        var $d = {
            x: 0,
            y: 0,
            z: 0
        };
        function qd(e, t) {
            return e.x === t.x && e.y === t.y && e.z === t.z
        }
        function Xd({x: e, y: t, z: n}, s) {
            return `(${Ld(e, s)}, ${Ld(t, s)}, ${Ld(n, s)})`
        }
        var Qd = {
            x: 0,
            y: 0,
            z: 0,
            w: 0
        };
        function Zd(e, t) {
            return e.x === t.x && e.y === t.y && e.z === t.z && e.w === t.w
        }
        function Jd({x: e, y: t, z: n, w: s}, i) {
            return `(${Ld(e, i)}, ${Ld(t, i)}, ${Ld(n, i)}, ${Ld(s, i)})`
        }
        var em = {
            min: 0,
            max: 0
        };
        function tm(e, t) {
            return e.min === t.min && e.max === t.max
        }
        var nm = {
            min: Ad,
            max: Ad
        };
        function sm(e, t) {
            return Fd(e.min, t.min) && Fd(e.max, t.max)
        }
        var im = {
            min: $d,
            max: $d
        };
        function am(e, t) {
            return qd(e.min, t.min) && qd(e.max, t.max)
        }
        var om = [0, 0];
        function rm(e, t) {
            return e[0] === t[0] && e[1] === t[1]
        }
        function lm(e) {
            return BigInt(e[1]) << 32n | BigInt(e[0])
        }
        function cm(e) {
            return [Number(0xffffffffn & e), Number(e >> 32n & 0xffffffffn)]
        }
        function um(e) {
            return {
                x: e.offsetWidth,
                y: e.offsetHeight
            }
        }
        function dm(e) {
            return {
                x: e.clientWidth,
                y: e.clientHeight
            }
        }
        function mm(e) {
            return {
                x: e.scrollWidth,
                y: e.scrollHeight
            }
        }
        function hm(e, t=um, n=!0) {
            const [s,i] = (0,
            Y.useState)(null)
              , a = (0,
            Y.useCallback)((()=>{
                if (null != e.current) {
                    const n = t(e.current);
                    i((e=>null != e && Fd(n, e) ? e : n))
                } else
                    i(null)
            }
            ), [e, t]);
            return fm(a, n),
            (0,
            Y.useEffect)((()=>{
                if (n) {
                    let e = window.requestAnimationFrame((()=>{
                        e = window.requestAnimationFrame((()=>{
                            e = 0,
                            a()
                        }
                        )),
                        a()
                    }
                    ));
                    return ()=>window.cancelAnimationFrame(e)
                }
                i(null)
            }
            ), [n, a]),
            s
        }
        function gm(e, t=!0) {
            const [n,s] = (0,
            Y.useState)(null)
              , i = (0,
            Y.useCallback)((()=>{
                if (null != e.current) {
                    const t = e.current.getBoundingClientRect();
                    s((e=>{
                        return null != e && (n = t,
                        s = e,
                        Math.abs(n.top - s.top) < .1 && Math.abs(n.bottom - s.bottom) < .1 && Math.abs(n.left - s.left) < .1 && Math.abs(n.right - s.right) < .1 && Math.abs(n.width - s.width) < .1 && Math.abs(n.height - s.height) < .1) ? e : t;
                        var n, s
                    }
                    ))
                } else
                    s(null)
            }
            ), [e]);
            return fm(i, t),
            (0,
            Y.useEffect)((()=>{
                if (t) {
                    let e = window.requestAnimationFrame((()=>{
                        e = window.requestAnimationFrame((()=>{
                            e = 0,
                            i()
                        }
                        )),
                        i()
                    }
                    ));
                    return ()=>{
                        window.cancelAnimationFrame(e)
                    }
                }
                s(null)
            }
            ), [t, i]),
            n
        }
        X.add("game-ui/common/math.ts", {
            get INT_MIN_VALUE() {
                return _d
            },
            set INT_MIN_VALUE(e) {
                _d = e
            },
            get INT_MAX_VALUE() {
                return bd
            },
            set INT_MAX_VALUE(e) {
                bd = e
            },
            get UINT_MAX_VALUE() {
                return Td
            },
            set UINT_MAX_VALUE(e) {
                Td = e
            },
            get FLOAT_MIN_VALUE() {
                return Ed
            },
            set FLOAT_MIN_VALUE(e) {
                Ed = e
            },
            get FLOAT_MAX_VALUE() {
                return Id
            },
            set FLOAT_MAX_VALUE(e) {
                Id = e
            },
            get FLOAT2_MIN_VALUE() {
                return Sd
            },
            set FLOAT2_MIN_VALUE(e) {
                Sd = e
            },
            get FLOAT2_MAX_VALUE() {
                return yd
            },
            set FLOAT2_MAX_VALUE(e) {
                yd = e
            },
            get FLOAT3_MIN_VALUE() {
                return jd
            },
            set FLOAT3_MIN_VALUE(e) {
                jd = e
            },
            get FLOAT3_MAX_VALUE() {
                return Cd
            },
            set FLOAT3_MAX_VALUE(e) {
                Cd = e
            },
            get FLOAT4_MIN_VALUE() {
                return Nd
            },
            set FLOAT4_MIN_VALUE(e) {
                Nd = e
            },
            get FLOAT4_MAX_VALUE() {
                return wd
            },
            set FLOAT4_MAX_VALUE(e) {
                wd = e
            },
            get clamp() {
                return Od
            },
            set clamp(e) {
                Od = e
            },
            get lerp() {
                return Pd
            },
            set lerp(e) {
                Pd = e
            },
            get roundDecimal() {
                return Ld
            },
            set roundDecimal(e) {
                Ld = e
            },
            get zero2() {
                return Ad
            },
            set zero2(e) {
                Ad = e
            },
            get left() {
                return Md
            },
            set left(e) {
                Md = e
            },
            get up() {
                return Rd
            },
            set up(e) {
                Rd = e
            },
            get right() {
                return kd
            },
            set right(e) {
                kd = e
            },
            get down() {
                return Dd
            },
            set down(e) {
                Dd = e
            },
            get number2Equals() {
                return Fd
            },
            set number2Equals(e) {
                Fd = e
            },
            get clamp2() {
                return Ud
            },
            set clamp2(e) {
                Ud = e
            },
            get normalize2() {
                return Bd
            },
            set normalize2(e) {
                Bd = e
            },
            get difference2() {
                return Gd
            },
            set difference2(e) {
                Gd = e
            },
            get lerp2() {
                return Vd
            },
            set lerp2(e) {
                Vd = e
            },
            get trunc2() {
                return Hd
            },
            set trunc2(e) {
                Hd = e
            },
            get distance2() {
                return Kd
            },
            set distance2(e) {
                Kd = e
            },
            get distanceSqr2() {
                return Wd
            },
            set distanceSqr2(e) {
                Wd = e
            },
            get formatNumber2() {
                return zd
            },
            set formatNumber2(e) {
                zd = e
            },
            get fromMouseEvent() {
                return Yd
            },
            set fromMouseEvent(e) {
                Yd = e
            },
            get zero3() {
                return $d
            },
            set zero3(e) {
                $d = e
            },
            get number3Equals() {
                return qd
            },
            set number3Equals(e) {
                qd = e
            },
            get formatNumber3() {
                return Xd
            },
            set formatNumber3(e) {
                Xd = e
            },
            get zero4() {
                return Qd
            },
            set zero4(e) {
                Qd = e
            },
            get number4Equals() {
                return Zd
            },
            set number4Equals(e) {
                Zd = e
            },
            get formatNumber4() {
                return Jd
            },
            set formatNumber4(e) {
                Jd = e
            },
            get zeroBounds1() {
                return em
            },
            set zeroBounds1(e) {
                em = e
            },
            get bounds1Equals() {
                return tm
            },
            set bounds1Equals(e) {
                tm = e
            },
            get zeroBounds2() {
                return nm
            },
            set zeroBounds2(e) {
                nm = e
            },
            get bounds2Equals() {
                return sm
            },
            set bounds2Equals(e) {
                sm = e
            },
            get zeroBounds3() {
                return im
            },
            set zeroBounds3(e) {
                im = e
            },
            get bounds3Equals() {
                return am
            },
            set bounds3Equals(e) {
                am = e
            },
            get zeroLong() {
                return om
            },
            set zeroLong(e) {
                om = e
            },
            get longEquals() {
                return rm
            },
            set longEquals(e) {
                rm = e
            },
            get longToBigInt() {
                return lm
            },
            set longToBigInt(e) {
                lm = e
            },
            get bigIntToLong() {
                return cm
            },
            set bigIntToLong(e) {
                cm = e
            }
        });
        const pm = ["top", "right", "bottom", "left", "width", "height", "size", "weight"];
        function fm(e, t=!0) {
            const n = (0,
            Y.useRef)(!1);
            (0,
            Y.useEffect)((()=>{
                if (t) {
                    n.current = !0;
                    let t = 0;
                    const s = ()=>{
                        n.current && 0 === t && (t = window.requestAnimationFrame((()=>{
                            t = window.requestAnimationFrame((()=>{
                                t = 0,
                                e()
                            }
                            ))
                        }
                        )))
                    }
                      , i = new MutationObserver(s);
                    i.observe(document, {
                        attributes: !0,
                        childList: !0,
                        characterData: !0,
                        subtree: !0
                    });
                    const a = e=>{
                        if (!(e.target instanceof HTMLElement))
                            return;
                        const t = window.getComputedStyle(e.target).transitionProperty;
                        pm.some((e=>t.includes(e))) && s()
                    }
                    ;
                    document.addEventListener("transitionend", a);
                    const o = ()=>{
                        n.current && (window.cancelAnimationFrame(t),
                        t = window.requestAnimationFrame((()=>{
                            t = window.requestAnimationFrame((()=>{
                                t = 0,
                                e()
                            }
                            ))
                        }
                        )))
                    }
                    ;
                    return window.addEventListener("resize", o),
                    ()=>{
                        n.current = !1,
                        i.disconnect(),
                        document.removeEventListener("transitionend", a),
                        window.removeEventListener("resize", o),
                        window.cancelAnimationFrame(t)
                    }
                }
            }
            ), [t, e])
        }
        X.add("game-ui/common/hooks/resize-events.tsx", {
            get OFFSET_SIZE() {
                return um
            },
            set OFFSET_SIZE(e) {
                um = e
            },
            get CLIENT_SIZE() {
                return dm
            },
            set CLIENT_SIZE(e) {
                dm = e
            },
            get SCROLL_SIZE() {
                return mm
            },
            set SCROLL_SIZE(e) {
                mm = e
            },
            get useElementSize() {
                return hm
            },
            set useElementSize(e) {
                hm = e
            },
            get useElementRect() {
                return gm
            },
            set useElementRect(e) {
                gm = e
            },
            get useResizeEventListener() {
                return fm
            },
            set useResizeEventListener(e) {
                fm = e
            }
        });
        const xm = "input";
        var vm, _m;
        !function(e) {
            e[e.keyboardAndMouse = 0] = "keyboardAndMouse",
            e[e.gamepad = 1] = "gamepad"
        }(vm || (vm = {})),
        function(e) {
            e[e.Xbox = 0] = "Xbox",
            e[e.PS = 1] = "PS"
        }(_m || (_m = {}));
        var bm = $r(xm, "mouseOverUI", !0)
          , Tm = $r(xm, "hideCursor", !0)
          , Em = $r(xm, "controlScheme", vm.gamepad)
          , Im = $r(xm, "scrollSensitivity", 1)
          , Sm = $r(xm, "gamepadPointerPosition")
          , ym = $r(xm, "cameraMoving", !1)
          , jm = Zr(xm, "toolActionPerformed")
          , Cm = Zr(xm, "cameraBarrier")
          , Nm = Zr(xm, "toolBarrier")
          , wm = $r(xm, "activeHints")
          , Om = Qr(xm, "hints")
          , Pm = el(xm, "onInputHintPerformed")
          , Lm = Xr(xm, "tutorialHints")
          , Am = ($r(xm, "gamepadType"),
        el(xm, "setActiveTextFieldRect"))
          , Mm = $r(xm, "useTextFieldInputBarrier");
        function Rm(e) {
            tl(xm, "onGamepadPointerEvent", e)
        }
        function km() {
            return sl(Em) === vm.keyboardAndMouse
        }
        function Dm() {
            return sl(Em) === vm.gamepad
        }
        let Fm;
        X.add("game-ui/common/data-binding/input-bindings.ts", {
            get ControlScheme() {
                return vm
            },
            set ControlScheme(e) {
                vm = e
            },
            get GamepadType() {
                return _m
            },
            set GamepadType(e) {
                _m = e
            },
            get mouseOverUI() {
                return mouseOverUI
            },
            set mouseOverUI(e) {
                mouseOverUI = e
            },
            get hideCursor() {
                return hideCursor
            },
            set hideCursor(e) {
                hideCursor = e
            },
            get controlScheme() {
                return controlScheme
            },
            set controlScheme(e) {
                controlScheme = e
            },
            get scrollSensitivity() {
                return scrollSensitivity
            },
            set scrollSensitivity(e) {
                scrollSensitivity = e
            },
            get gamepadPointerPosition() {
                return gamepadPointerPosition
            },
            set gamepadPointerPosition(e) {
                gamepadPointerPosition = e
            },
            get cameraMoving() {
                return cameraMoving
            },
            set cameraMoving(e) {
                cameraMoving = e
            },
            get toolActionPerformed() {
                return toolActionPerformed
            },
            set toolActionPerformed(e) {
                toolActionPerformed = e
            },
            get cameraBarrier() {
                return cameraBarrier
            },
            set cameraBarrier(e) {
                cameraBarrier = e
            },
            get toolBarrier() {
                return toolBarrier
            },
            set toolBarrier(e) {
                toolBarrier = e
            },
            get activeInputHints() {
                return activeInputHints
            },
            set activeInputHints(e) {
                activeInputHints = e
            },
            get inputHints() {
                return inputHints
            },
            set inputHints(e) {
                inputHints = e
            },
            get onInputHintPerformed() {
                return Pm
            },
            set onInputHintPerformed(e) {
                Pm = e
            },
            get tutorialHints() {
                return tutorialHints
            },
            set tutorialHints(e) {
                tutorialHints = e
            },
            get gamepadType() {
                return gamepadType
            },
            set gamepadType(e) {
                gamepadType = e
            },
            get setActiveTextFieldRect() {
                return Am
            },
            set setActiveTextFieldRect(e) {
                Am = e
            },
            get requireTextFieldInputBarrier() {
                return requireTextFieldInputBarrier
            },
            set requireTextFieldInputBarrier(e) {
                requireTextFieldInputBarrier = e
            },
            get onGamepadPointerEvent() {
                return Rm
            },
            set onGamepadPointerEvent(e) {
                Rm = e
            }
        }),
        X.add("game-ui/common/hooks/use-control-scheme.tsx", {
            get useKeyboardAndMouseActive() {
                return km
            },
            set useKeyboardAndMouseActive(e) {
                km = e
            },
            get useGamepadActive() {
                return Dm
            },
            set useGamepadActive(e) {
                Dm = e
            }
        });
        const Um = function(e=!0) {
            const [t,n] = (0,
            Y.useState)((()=>(Fm || (Fm = {
                x: window.innerWidth,
                y: window.innerHeight
            }),
            Fm)));
            return (0,
            Y.useEffect)((()=>{
                if (e) {
                    const e = ()=>{
                        const e = {
                            x: window.innerWidth,
                            y: window.innerHeight
                        };
                        Fm = e,
                        n((t=>Fd(e, t) ? t : e))
                    }
                    ;
                    return e(),
                    window.addEventListener("resize", e),
                    ()=>window.removeEventListener("resize", e)
                }
            }
            ), [e, n]),
            t
        };
        X.add("game-ui/common/hooks/use-window-size.ts", {});
        var Bm = ()=>window.innerHeight > .5625 * window.innerWidth ? window.innerWidth / 1920 : window.innerHeight / 1080;
        function Gm() {
            const e = Um();
            return sl(Pl) ? e.y > .5625 * e.x ? e.x / 1920 : e.y / 1080 : 1
        }
        function Vm(e) {
            const t = Gm();
            if (e.endsWith("rem"))
                return parseFloat(e.substring(0, e.length - 3)) * t;
            if (e.endsWith("px"))
                return parseFloat(e.substring(0, e.length - 2));
            throw Error(`Unsupport length syntax: ${e}`)
        }
        const Hm = Gm;
        X.add("game-ui/common/hooks/use-rem.ts", {
            get getRem() {
                return Bm
            },
            set getRem(e) {
                Bm = e
            },
            get useRem() {
                return Gm
            },
            set useRem(e) {
                Gm = e
            },
            get useCssLength() {
                return Vm
            },
            set useCssLength(e) {
                Vm = e
            }
        });
        var Km = (0,
        Y.createContext)(document.body)
          , Wm = ({children: e})=>{
            const t = (0,
            Y.useContext)(Km)
              , [n,s] = (0,
            Y.useState)(null);
            return (0,
            z.jsx)(Km.Provider, {
                value: n ?? t,
                children: (0,
                z.jsx)(vd, {
                    ref: s,
                    children: e
                })
            })
        }
        ;
        const zm = ({children: e, container: t})=>{
            const n = Ym();
            return Z.createPortal(e, t ?? n)
        }
        ;
        function Ym() {
            return (0,
            Y.useContext)(Km)
        }
        X.add("game-ui/common/portal/portal.tsx", {
            get PortalContainerProvider() {
                return Wm
            },
            set PortalContainerProvider(e) {
                Wm = e
            },
            get Portal() {
                return zm
            },
            set Portal(e) {
                zm = e
            },
            get usePortalContainer() {
                return Ym
            },
            set usePortalContainer(e) {
                Ym = e
            }
        });
        function $m(e, t=300, n=0) {
            const [s,i] = (0,
            Y.useState)()
              , a = (0,
            Y.useRef)(-1)
              , o = (0,
            Y.useRef)(n);
            return (0,
            Y.useEffect)((()=>(-1 !== a.current && clearTimeout(a.current),
            s !== e && (t && o.current <= 0 ? a.current = setTimeout((()=>{
                i(e),
                a.current = -1
            }
            ), t) : (i(e),
            o.current--)),
            ()=>{
                clearTimeout(a.current)
            }
            )), [s, e, t]),
            s
        }
        X.add("game-ui/common/utils/debounce.ts", {
            get useDebouncedValue() {
                return $m
            },
            set useDebouncedValue(e) {
                $m = e
            }
        });
        class qm {
            _callback = null;
            complete() {
                this._callback = null
            }
            cancel() {
                this._callback && (this._callback(),
                this._callback = null)
            }
            onCancel(e) {
                this._callback && this._callback(),
                this._callback = e
            }
        }
        function Xm() {
            const e = (0,
            Y.useMemo)((()=>new qm), []);
            return (0,
            Y.useEffect)((()=>()=>e.cancel()), [e]),
            e
        }
        X.add("game-ui/common/utils/cancel-token.ts", {
            get useCancelToken() {
                return Xm
            },
            set useCancelToken(e) {
                Xm = e
            }
        });
        const Qm = /,\s?/
          , Zm = /,(?![^(]*\))\s?/;
        function Jm(e) {
            if (!(e instanceof Element))
                return 0;
            const t = window.getComputedStyle(e)
              , n = t.transitionDuration.split(Qm)
              , s = t.transitionDelay.split(Qm);
            if (n.length <= 1 && s.length <= 1)
                return ah(ih(n, 0)) + ah(ih(s, 0));
            let i = 0;
            const a = Math.max(n.length, s.length);
            for (let e = 0; e < a; e++) {
                const t = ah(ih(n, e))
                  , a = ah(ih(s, e));
                i = Math.max(i, t + a)
            }
            return i
        }
        function eh(e, t) {
            if (!(e instanceof Element))
                return null;
            const n = window.getComputedStyle(e)
              , s = n.transitionProperty.split(Qm)
              , i = n.transitionDuration.split(Qm)
              , a = n.transitionDelay.split(Qm)
              , o = n.transitionTimingFunction.split(Zm)
              , r = s.indexOf(t);
            if (-1 === r)
                return null;
            const l = oh(ih(o, r));
            return null == l ? null : {
                duration: ah(ih(i, r)),
                delay: ah(ih(a, r)),
                timingFunction: l
            }
        }
        const th = {};
        function nh(e, t, n) {
            if (!(e instanceof Element))
                return th;
            const s = window.getComputedStyle(e)
              , i = s.transitionProperty.split(Qm)
              , a = s.transitionDuration.split(Qm)
              , o = s.transitionDelay.split(Qm)
              , r = s.transitionTimingFunction.split(/,(?![^(]*\))\s?/)
              , l = i.indexOf(t);
            return -1 === l ? th : {
                transitionProperty: s.transitionProperty,
                transitionDuration: i.map(((e,t)=>t === l ? n.duration + "ms" : ih(a, t) ?? "0ms")).join(", "),
                transitionDelay: i.map(((e,t)=>t === l ? n.delay + "ms" : ih(o, t) ?? "0ms")).join(", "),
                transitionTimingFunction: i.map(((e,t)=>t === l ? lh(n.timingFunction) : ih(r, t) ?? "ease")).join(", ")
            }
        }
        function sh(e, t) {
            if (t < e.delay)
                return {
                    ...e,
                    delay: e.delay - t
                };
            if (e.duration > 0 || t < e.delay + e.duration) {
                const n = (t - e.delay) / e.duration;
                return {
                    delay: 0,
                    duration: (1 - n) * e.duration,
                    timingFunction: rh(e.timingFunction, n)
                }
            }
            return {
                ...e,
                duration: 0,
                delay: 0
            }
        }
        function ih(e, t) {
            return 1 === e.length ? e[0] : e.length > t ? e[t] : void 0
        }
        function ah(e) {
            if (null == e)
                return 0;
            if (e.endsWith("ms")) {
                const t = parseFloat(e.substr(0, e.length - 2));
                return isNaN(t) ? 0 : t
            }
            if (e.endsWith("s")) {
                const t = 1e3 * parseFloat(e.substr(0, e.length - 1));
                return isNaN(t) ? 0 : t
            }
            {
                const t = parseFloat(e);
                return isNaN(t) ? 0 : t
            }
        }
        function oh(e) {
            if (null == e)
                return null;
            if ("linear" === e)
                return [0, 0, 1, 1];
            if ("ease" === e)
                return [.25, .1, .25, 1];
            if ("ease-in" === e)
                return [.42, 0, 1, 1];
            if ("ease-out" === e)
                return [0, 0, .58, 1];
            if ("ease-in-out" === e)
                return [.42, 0, .58, 1];
            const t = e.match(/^cubic-bezier\((-?[0-9]*\.?[0-9]*),\s?(-?[0-9]*\.?[0-9]*),\s?(-?[0-9]*\.?[0-9]*),\s?(-?[0-9]*\.?[0-9]*)\)$/);
            return null != t ? [parseFloat(t[1]), parseFloat(t[2]), parseFloat(t[3]), parseFloat(t[4])] : null
        }
        function rh([e,t,n,s], i) {
            const a = {
                x: n,
                y: s
            }
              , o = Vd({
                x: e,
                y: t
            }, a, i)
              , r = Vd(a, {
                x: 1,
                y: 1
            }, i)
              , l = Vd(o, r, i);
            return [l.x, l.y, r.x, r.y]
        }
        function lh([e,t,n,s]) {
            return `cubic-bezier(${e}, ${t}, ${n}, ${s})`
        }
        function ch(e, t) {
            return new Promise(((n,s)=>{
                const i = window.setTimeout((()=>{
                    t.complete(),
                    n(!0)
                }
                ), e);
                t.onCancel((()=>{
                    window.clearTimeout(i),
                    n(!1)
                }
                ))
            }
            ))
        }
        function uh(e, t=1) {
            let n = t;
            return new Promise(((t,s)=>{
                let i = -1;
                const a = ()=>{
                    i = window.requestAnimationFrame((s=>{
                        n--,
                        n ? a() : (e.complete(),
                        t(!0))
                    }
                    ))
                }
                ;
                a(),
                e.onCancel((()=>{
                    window.cancelAnimationFrame(i),
                    t(!1)
                }
                ))
            }
            ))
        }
        X.add("game-ui/common/utils/css-transitions.ts", {
            get getCssTransitionTime() {
                return Jm
            },
            set getCssTransitionTime(e) {
                Jm = e
            },
            get getCssTransition() {
                return eh
            },
            set getCssTransition(e) {
                eh = e
            },
            get getModifiedTransitionStyles() {
                return nh
            },
            set getModifiedTransitionStyles(e) {
                nh = e
            },
            get splitCssTransition() {
                return sh
            },
            set splitCssTransition(e) {
                sh = e
            },
            get parseBezier() {
                return oh
            },
            set parseBezier(e) {
                oh = e
            },
            get splitBezier() {
                return rh
            },
            set splitBezier(e) {
                rh = e
            },
            get formatBezier() {
                return lh
            },
            set formatBezier(e) {
                lh = e
            }
        }),
        X.add("game-ui/common/utils/promise.ts", {
            get delay() {
                return ch
            },
            set delay(e) {
                ch = e
            },
            get nextFrame() {
                return uh
            },
            set nextFrame(e) {
                uh = e
            }
        });
        var dh = {}
          , mh = ({styles: e, enterDuration: t, exitDuration: n, children: s})=>{
            const i = e ?? dh
              , {state: a, onMount: o, onUnmount: r} = (0,
            Y.useContext)(ld)
              , [l,c] = (0,
            Y.useState)(td.enter)
              , u = (0,
            Y.useRef)(null)
              , d = gd(s.ref, u)
              , m = (0,
            Y.useRef)(!1)
              , [h,g] = (0,
            Y.useState)(function(e, t) {
                switch (e) {
                case td.enter:
                    return t.enter;
                case td.exit:
                    return t.exit;
                default:
                    return null
                }
            }(a, i))
              , p = (0,
            Y.useRef)(h)
              , f = (0,
            Y.useCallback)((e=>{
                p.current = "function" == typeof e ? e(p.current) : e,
                g(e)
            }
            ), []);
            (0,
            Y.useEffect)((()=>(m.current || (m.current = !0,
            o()),
            ()=>{
                m.current && (m.current = !1,
                r())
            }
            )), [o, r]),
            (0,
            Y.useEffect)((()=>{
                const e = new qm;
                return (async()=>{
                    if (a === td.enter) {
                        if (c(td.enter),
                        f(i.enter),
                        !await uh(e, 2))
                            return;
                        if (f(i.enterActive),
                        !await uh(e))
                            return;
                        const n = t ?? Jm(u.current);
                        if (!await ch(n, e))
                            return;
                        c(td.in),
                        f(null)
                    } else if (a === td.exit) {
                        if (null == p.current && (f(i.exit),
                        c(td.exit),
                        !await uh(e, 2)))
                            return;
                        if (f((e=>e === i.exit ? i.exitActive : null)),
                        !await uh(e))
                            return;
                        const t = n ?? Jm(u.current);
                        if (!await ch(t, e))
                            return;
                        m.current && p.current === i.exitActive && (m.current = !1,
                        r())
                    }
                }
                )(),
                ()=>{
                    e.cancel(),
                    f(null)
                }
            }
            ), [t, n, r, a, i.enter, i.enterActive, i.exit, i.exitActive, f]);
            const x = (0,
            Y.useMemo)((()=>({
                ...rd,
                state: l
            })), [l]);
            return (0,
            z.jsx)(ld.Provider, {
                value: x,
                children: Y.cloneElement(s, {
                    ...s.props,
                    ref: d,
                    className: Zu()(s.props.className, i.base, h)
                })
            })
        }
        ;
        X.add("game-ui/common/animations/class-name-transition.tsx", {
            get emptyStyles() {
                return dh
            },
            set emptyStyles(e) {
                dh = e
            },
            get ClassNameTransition() {
                return mh
            },
            set ClassNameTransition(e) {
                mh = e
            }
        });
        let hh = {
            balloon: "balloon_H23",
            up: "up_ehW",
            start: "start_wu1",
            down: "down_ztr",
            center: "center_hug",
            end: "end_EKq",
            left: "left_LHd",
            right: "right_JdH",
            bounds: "bounds__AO",
            container: "container_jfe",
            arrow: "arrow_Xfn",
            content: "content_JQV"
        };
        X.add("game-ui/common/balloon/balloon.module.scss", {
            get classes() {
                return hh
            },
            set classes(e) {
                Object.assign(hh, e)
            }
        });
        const gh = hh;
        let ph = {
            balloon: "balloon_DNs balloon_H23",
            base: "base_uUu",
            enter: "enter_ZTs",
            "enter-active": "enter-active_bJR",
            enterActive: "enter-active_bJR",
            "exit-active": "exit-active_AqC",
            exitActive: "exit-active_AqC",
            container: "container_sGN container_jfe",
            arrow: "arrow_tFt arrow_Xfn",
            content: "content_HM0 content_JQV"
        };
        X.add("game-ui/common/balloon/themes/default-balloon.module.scss", {
            get classes() {
                return ph
            },
            set classes(e) {
                Object.assign(ph, e)
            }
        });
        const fh = ph;
        var xh = (0,
        Y.forwardRef)((function({direction: e, alignment: t, theme: n=fh, className: s, style: i, children: a}, o) {
            const r = (0,
            Y.useMemo)((()=>({
                ...gh,
                ...n
            })), [n]);
            return (0,
            z.jsx)(mh, {
                styles: r,
                children: (0,
                z.jsx)("div", {
                    ref: o,
                    style: i,
                    className: Zu()(r.balloon, null != e && r[e], null != t && r[t], s),
                    children: (0,
                    z.jsxs)("div", {
                        className: r.bounds,
                        children: [(0,
                        z.jsx)("div", {
                            className: r.container,
                            children: (0,
                            z.jsx)("div", {
                                className: r.arrow
                            })
                        }), (0,
                        z.jsx)("div", {
                            className: r.content,
                            children: a
                        })]
                    })
                })
            })
        }
        ));
        X.add("game-ui/common/balloon/balloon.tsx", {
            get Balloon() {
                return xh
            },
            set Balloon(e) {
                xh = e
            }
        });
        let vh = {
            "anchored-balloon": "anchored-balloon_AYp",
            anchoredBalloon: "anchored-balloon_AYp",
            hidden: "hidden_W0n",
            up: "up_el0",
            down: "down_Xl7",
            left: "left_SI8",
            right: "right_RQp"
        };
        X.add("game-ui/common/balloon/anchored-balloon.module.scss", {
            get classes() {
                return vh
            },
            set classes(e) {
                Object.assign(vh, e)
            }
        });
        const _h = vh;
        var bh = (0,
        Y.memo)((function({visible: e, direction: t="up", alignment: n="center", theme: s, content: i, balloonKey: a="anchored-balloon", className: o, children: r, anchorElRef: l}) {
            const c = Dm()
              , u = $m(e)
              , d = Hm()
              , m = (0,
            Y.useRef)(null)
              , h = (0,
            Y.useRef)(null)
              , g = Um(u)
              , p = gm(l || m, u)
              , f = hm(h, um, u)
              , x = (0,
            Y.useMemo)((()=>{
                let e = 0;
                return c && (e = 56 * d),
                u && p && f ? function(e, t, n, s, i, a) {
                    let o = s
                      , r = i
                      , l = Eh(e, t, o, r)
                      , c = l.y < 0
                      , u = l.y + t.y > n.y
                      , d = l.x < 0
                      , m = l.x + t.x > n.x;
                    if (!(c || u || d || m))
                        return {
                            direction: o,
                            alignment: r,
                            style: yh(l, o, a)
                        };
                    r = "left" === o || "right" === o ? Th(r, c, u) : Th(r, d, m);
                    "up" === o ? c && (o = "down") : "down" === o ? u && (o = "up") : "left" === o ? d && (o = "right") : "right" === o && m && (o = "left");
                    if (l = Eh(e, t, o, r),
                    c = l.y < 0,
                    u = l.y + t.y > n.y,
                    d = l.x < 0,
                    m = l.x + t.x > n.x,
                    !(c || u || d || m))
                        return {
                            direction: o,
                            alignment: r,
                            style: yh(l, o, a)
                        };
                    r = "left" === o || "right" === o ? Th(r, c, u) : Th(r, d, m);
                    return l = Eh(e, t, o, r),
                    {
                        direction: o,
                        alignment: r,
                        style: yh(l, o, a)
                    }
                }(p, f, g, t, n, e) : null
            }
            ), [c, u, p, f, g, t, n, d])
              , v = !1 !== i?.props?.children;
            return (0,
            z.jsxs)(z.Fragment, {
                children: [l ? r : (0,
                z.jsx)(vd, {
                    ref: m,
                    children: r
                }), (0,
                z.jsx)(ud, {
                    children: u && v && (0,
                    z.jsx)(zm, {
                        children: (0,
                        z.jsx)(xh, {
                            ref: h,
                            direction: x?.direction,
                            alignment: x?.alignment,
                            theme: s,
                            className: Zu()(o, _h.anchoredBalloon, null == x && _h.hidden, null != x && _h[x.direction]),
                            style: x?.style,
                            children: i
                        }, a)
                    }, "balloon")
                })]
            })
        }
        ));
        function Th(e, t, n) {
            if (t) {
                if ("start" === e)
                    return "center";
                if ("center" === e)
                    return "end"
            } else if (n) {
                if ("center" === e)
                    return "start";
                if ("end" === e)
                    return "center"
            }
            return e
        }
        function Eh(e, t, n, s) {
            return "up" === n ? {
                x: Ih(e, t, s),
                y: e.top - t.y
            } : "down" === n ? {
                x: Ih(e, t, s),
                y: e.bottom
            } : "left" === n ? {
                x: e.left - t.x,
                y: Sh(e, t, s)
            } : "right" === n ? {
                x: e.right,
                y: Sh(e, t, s)
            } : Ad
        }
        function Ih(e, t, n) {
            return "start" === n ? (e.left + e.right) / 2 - t.x : "end" === n ? (e.left + e.right) / 2 : (e.left + e.right - t.x) / 2
        }
        function Sh(e, t, n) {
            return "start" === n ? (e.top + e.bottom) / 2 - t.y : "end" === n ? (e.top + e.bottom) / 2 : (e.top + e.bottom - t.y) / 2
        }
        function yh(e, t, n) {
            let s = 0;
            return ["left", "right"].includes(t) && e.y < n && (s = -1 * (e.y - n)),
            {
                left: `${e.x.toFixed(0)}px`,
                top: `${e.y.toFixed(0)}px`,
                "--posX": `${e.x.toFixed(0)}px`,
                "--posY": `${e.y.toFixed(0)}px`,
                "--offsetY": s ? `${s}px` : "0px"
            }
        }
        X.add("game-ui/common/balloon/anchored-balloon.tsx", {
            get AnchoredBalloon() {
                return bh
            },
            set AnchoredBalloon(e) {
                bh = e
            }
        });
        class jh {
            constructor(e=!0) {
                this.propagateCurrent = e,
                this._parentController = null,
                this._enabled = !1,
                this._focusKey = null,
                this._lastFocused = !1,
                this.callbacks = [],
                this.isChildFocused = e=>this.focused && this.isChildFocusedImpl(e),
                this.attachCallback = e=>{
                    this.callbacks.includes(e) ? console.error(`${this.constructor.name}: Focus callback already attached to controller!\n${this.debugTrace()}`) : (this.callbacks.push(e),
                    this._lastFocused && e(!0, this.propagateCurrent ? this : null))
                }
                ,
                this.detachCallback = e=>{
                    const t = this.callbacks.indexOf(e);
                    -1 !== t ? (this.callbacks.splice(t, 1),
                    this._lastFocused && e(!1, this.propagateCurrent ? this : null)) : console.error(`${this.constructor.name}: Focus callback not attached to controller!\n${this.debugTrace()}`)
                }
                ,
                this.updateChildren = e=>{
                    if (this._lastFocused)
                        for (const t of this.callbacks)
                            t(!0, e)
                }
                ,
                this.onFocusUpdate = (e,t)=>{
                    const n = e && this.focused;
                    if (n !== this._lastFocused) {
                        this._lastFocused = n;
                        for (const e of this.callbacks)
                            e(this._lastFocused, this.propagateCurrent ? t : null);
                        n && this.onFocusEnterImpl(t)
                    }
                }
            }
            get focused() {
                return this._enabled && null != this._parentController && null != this._focusKey && this._parentController.isChildFocused(this._focusKey)
            }
            attachTo(e) {
                null == this._parentController ? (this._parentController = e,
                this._tryAttach()) : console.error(`${this.constructor.name}: The controller has already been attached to a parent!\n${this.debugTrace()}`)
            }
            detach() {
                null != this._parentController ? (this._tryDetach(),
                this._parentController = null) : console.error(`${this.constructor.name}: The controller is not attached to parent!\n${this.debugTrace()}`)
            }
            get enabled() {
                return this._enabled
            }
            set enabled(e) {
                e !== this._enabled && (this._tryDetach(),
                this._enabled = e,
                this._tryAttach())
            }
            get focusKey() {
                return this._focusKey
            }
            set focusKey(e) {
                e !== this._focusKey && (this._tryDetach(),
                this._focusKey = e,
                this._tryAttach())
            }
            onFocusEnterImpl(e) {}
            _tryAttach() {
                this._enabled && null != this._parentController && null != this._focusKey && (this._parentController.registerChild(this._focusKey, this),
                this._parentController.attachCallback(this.onFocusUpdate))
            }
            _tryDetach() {
                this._enabled && null != this._parentController && null != this._focusKey && (this._parentController.detachCallback(this.onFocusUpdate),
                this._parentController.unregisterChild(this._focusKey))
            }
            debugTrace() {
                let e = `<-- ${this.debugName}`;
                return null != this._parentController && (e += "\n",
                e += this._parentController.debugTrace()),
                e
            }
            deepDebugTrace() {
                let e = `--\x3e ${this.debugName}`;
                return null != this.debugFocusedChild && (e += "\n",
                e += this.debugFocusedChild.deepDebugTrace()),
                e
            }
            get debugName() {
                return this._focusKey?.toString() ?? "<no-key>"
            }
        }
        function Ch(e, t=!0, n=!0) {
            const s = (0,
            Y.useMemo)((()=>new Nh), []);
            return s.debugName = e,
            s.childFocused = n,
            s.enabled = t,
            s
        }
        X.add("game-ui/common/focus/controller/focus-controller-base.ts", {});
        class Nh extends jh {
            childElement = null;
            _childFocused = !1;
            get enabled() {
                return super.enabled
            }
            set enabled(e) {
                super.enabled = e
            }
            get childFocused() {
                return this._childFocused
            }
            set childFocused(e) {
                e !== this._childFocused && (this._childFocused = e,
                this.updateChildren(this))
            }
            _debugName = "PassThroughFocusController";
            get debugName() {
                return this._debugName
            }
            set debugName(e) {
                this._debugName = e
            }
            isChildFocusedImpl = e=>this._childFocused && e === this.focusKey;
            registerChild = (e,t)=>{
                null == this.focusKey ? (this.childElement = t,
                this.focusKey = e) : console.error(`Cannot register second focus key '${e}'! PassThroughFocusControllers can only host a single child.\nRegistered key: ${this.focusKey}\n${this.debugTrace()}`)
            }
            ;
            unregisterChild = e=>{
                this.focusKey === e ? (this.focusKey = null,
                this.childElement = null) : console.error(`Attempted to unregister mismatching focus key '${e}' from a PassThroughFocusController!\nRegistered key: ${this.focusKey}\n${this.debugTrace()})`)
            }
            ;
            getBounds = ()=>this.childElement?.getBounds() ?? null;
            getFocusedBounds() {
                return this.childElement?.getFocusedBounds() ?? null
            }
            get debugFocusedChild() {
                return this.childElement
            }
        }
        function wh(e) {
            const [t,n] = (0,
            Y.useState)(!1);
            return (0,
            Y.useEffect)((()=>(e.attachCallback(n),
            ()=>e.detachCallback(n))), [e]),
            t
        }
        function Oh(e) {
            const t = (0,
            Y.useRef)(!1);
            return (0,
            Y.useEffect)((()=>{
                const n = e=>{
                    t.current = e
                }
                ;
                return e.attachCallback(n),
                ()=>e.detachCallback(n)
            }
            ), [e]),
            t
        }
        function Ph(e, t) {
            (0,
            Y.useEffect)((()=>{
                if (null != t)
                    return e.attachCallback(t),
                    ()=>e.detachCallback(t)
            }
            ), [t, e])
        }
        X.add("game-ui/common/focus/controller/pass-through-focus-controller.tsx", {
            get usePassThroughFocusController() {
                return Ch
            },
            set usePassThroughFocusController(e) {
                Ch = e
            }
        }),
        X.add("game-ui/common/focus/focus-hooks.tsx", {
            get useFocused() {
                return wh
            },
            set useFocused(e) {
                wh = e
            },
            get useFocusedRef() {
                return Oh
            },
            set useFocusedRef(e) {
                Oh = e
            },
            get useFocusCallback() {
                return Ph
            },
            set useFocusCallback(e) {
                Ph = e
            }
        });
        var Lh = ({controller: e, children: t})=>{
            const n = (0,
            Y.useContext)(Ju);
            return (0,
            Y.useEffect)((()=>{
                e.attachTo(n)
            }
            ), [e, n]),
            (0,
            Y.useLayoutEffect)((()=>()=>e.detach()), [e, n]),
            (0,
            z.jsx)(Ju.Provider, {
                value: e,
                children: t
            })
        }
        ;
        X.add("game-ui/common/focus/focus-node.tsx", {
            get FocusNode() {
                return Lh
            },
            set FocusNode(e) {
                Lh = e
            }
        });
        var Ah = ({disabled: e, children: t, onFocusChange: n})=>{
            const s = Ch("FocusBoundary", !e);
            return Ph(s, n),
            (0,
            z.jsx)(Lh, {
                controller: s,
                children: t
            })
        }
        ;
        X.add("game-ui/common/focus/focus-boundary.tsx", {
            get FocusBoundary() {
                return Ah
            },
            set FocusBoundary(e) {
                Ah = e
            }
        });
        const Mh = "tutorials";
        var Rh = $r(Mh, "tutorialsEnabled")
          , kh = $r(Mh, "introActive")
          , Dh = $r(Mh, "activeList")
          , Fh = $r(Mh, "next")
          , Uh = $r(Mh, "pending")
          , Bh = $r(Mh, "categories")
          , Gh = Xr(Mh, "groups")
          , Vh = qr(!1)
          , Hh = e=>{
            Vh.update(e)
        }
          , Kh = Xr(Mh, "tutorials")
          , Wh = $r(Mh, "activeTutorial")
          , zh = $r(Mh, "activeTutorialPhase")
          , Yh = $r(Mh, "listIntroActive")
          , $h = $r(Mh, "listOutroActive")
          , qh = el(Mh, "activateTutorial")
          , Xh = el(Mh, "activateTutorialPhase")
          , Qh = el(Mh, "forceTutorial")
          , Zh = e=>Hh(void 0 !== e ? e : !Vh.value)
          , Jh = Jr(Mh, "completeActiveTutorialPhase")
          , eg = Jr(Mh, "completeActiveTutorial")
          , tg = el(Mh, "completeIntro")
          , ng = Jr(Mh, "completeListIntro")
          , sg = Jr(Mh, "completeListOutro")
          , ig = el(Mh, "setTutorialTagActive")
          , ag = el(Mh, "activateTutorialTrigger")
          , og = el(Mh, "disactivateTutorialTrigger")
          , rg = (e,t=!0)=>{
            (0,
            Y.useEffect)((()=>{
                if (e && t)
                    return ig(e, !0),
                    ()=>{
                        ig(e, !1)
                    }
            }
            ), [t, e])
        }
          , lg = (e,t=!0)=>{
            (0,
            Y.useEffect)((()=>{
                if (e && t)
                    return ag(e),
                    ()=>{
                        og(e)
                    }
            }
            ), [t, e])
        }
        ;
        function cg(e, t=!0) {
            rg(e, t),
            lg(e, t)
        }
        var ug, dg, mg, hg = qr(!1);
        function gg(e) {
            hg.update("boolean" == typeof e ? e : !hg.value)
        }
        !function(e) {
            e[e.Tutorial = 0] = "Tutorial",
            e[e.Group = 1] = "Group"
        }(ug || (ug = {})),
        function(e) {
            e[e.KeyboardAndMouse = 1] = "KeyboardAndMouse",
            e[e.Gamepad = 2] = "Gamepad",
            e[e.All = 3] = "All"
        }(dg || (dg = {})),
        function(e) {
            e[e.Balloon = 0] = "Balloon",
            e[e.Card = 1] = "Card",
            e[e.CenterCard = 2] = "CenterCard"
        }(mg || (mg = {})),
        X.add("game-ui/game/data-binding/tutorial-bindings.ts", {
            get tutorialsEnabled() {
                return tutorialsEnabled
            },
            set tutorialsEnabled(e) {
                tutorialsEnabled = e
            },
            get tutorialIntroActive() {
                return tutorialIntroActive
            },
            set tutorialIntroActive(e) {
                tutorialIntroActive = e
            },
            get activeTutorialList() {
                return activeTutorialList
            },
            set activeTutorialList(e) {
                activeTutorialList = e
            },
            get nextTutorial() {
                return nextTutorial
            },
            set nextTutorial(e) {
                nextTutorial = e
            },
            get tutorialPending() {
                return tutorialPending
            },
            set tutorialPending(e) {
                tutorialPending = e
            },
            get tutorialCategories() {
                return tutorialCategories
            },
            set tutorialCategories(e) {
                tutorialCategories = e
            },
            get tutorialGroups() {
                return tutorialGroups
            },
            set tutorialGroups(e) {
                tutorialGroups = e
            },
            get tutorialListFocused() {
                return tutorialListFocused
            },
            set tutorialListFocused(e) {
                tutorialListFocused = e
            },
            get setTutorialListFocused() {
                return Hh
            },
            set setTutorialListFocused(e) {
                Hh = e
            },
            get tutorials() {
                return tutorials
            },
            set tutorials(e) {
                tutorials = e
            },
            get activeTutorial() {
                return activeTutorial
            },
            set activeTutorial(e) {
                activeTutorial = e
            },
            get activeTutorialPhase() {
                return activeTutorialPhase
            },
            set activeTutorialPhase(e) {
                activeTutorialPhase = e
            },
            get listIntroActive() {
                return listIntroActive
            },
            set listIntroActive(e) {
                listIntroActive = e
            },
            get listOutroActive() {
                return listOutroActive
            },
            set listOutroActive(e) {
                listOutroActive = e
            },
            get activateTutorial() {
                return qh
            },
            set activateTutorial(e) {
                qh = e
            },
            get activateTutorialPhase() {
                return Xh
            },
            set activateTutorialPhase(e) {
                Xh = e
            },
            get forceTutorial() {
                return Qh
            },
            set forceTutorial(e) {
                Qh = e
            },
            get toggleTutorialListFocus() {
                return Zh
            },
            set toggleTutorialListFocus(e) {
                Zh = e
            },
            get completeActiveTutorialPhase() {
                return Jh
            },
            set completeActiveTutorialPhase(e) {
                Jh = e
            },
            get completeActiveTutorial() {
                return eg
            },
            set completeActiveTutorial(e) {
                eg = e
            },
            get completeIntro() {
                return tg
            },
            set completeIntro(e) {
                tg = e
            },
            get completeListIntro() {
                return ng
            },
            set completeListIntro(e) {
                ng = e
            },
            get completeListOutro() {
                return sg
            },
            set completeListOutro(e) {
                sg = e
            },
            get activateTutorialTag() {
                return ig
            },
            set activateTutorialTag(e) {
                ig = e
            },
            get triggerTutorialTag() {
                return ag
            },
            set triggerTutorialTag(e) {
                ag = e
            },
            get untriggerTutorialTag() {
                return og
            },
            set untriggerTutorialTag(e) {
                og = e
            },
            get useTutorialTagActivation() {
                return rg
            },
            set useTutorialTagActivation(e) {
                rg = e
            },
            get useTutorialTagTrigger() {
                return lg
            },
            set useTutorialTagTrigger(e) {
                lg = e
            },
            get useTutorialTag() {
                return cg
            },
            set useTutorialTag(e) {
                cg = e
            },
            get advisorPanelVisible() {
                return advisorPanelVisible
            },
            set advisorPanelVisible(e) {
                advisorPanelVisible = e
            },
            get toggleAdvisorPanel() {
                return gg
            },
            set toggleAdvisorPanel(e) {
                gg = e
            },
            get AdvisorItemType() {
                return ug
            },
            set AdvisorItemType(e) {
                ug = e
            },
            get TutorialControlScheme() {
                return dg
            },
            set TutorialControlScheme(e) {
                dg = e
            },
            get TutorialPhaseType() {
                return mg
            },
            set TutorialPhaseType(e) {
                mg = e
            }
        });
        X.add("game-ui/game/components/tutorials/tutorial-target/tutorial-target-manager.ts", {});
        const pg = new class {
            activeBlinkTags = new Array;
            activeBalloonTags = new Array;
            mountedBlinkComponents = new Map;
            mountedBalloonComponents = new Map;
            blinkTagsDirty = !0;
            balloonTagsDirty = !0;
            activateTags(e, t) {
                this.activeBlinkTags.length = 0,
                this.activeBalloonTags.length = 0,
                null !== e && e.forEach((e=>this.activeBlinkTags.push(e.map((e=>e.toLowerCase()))))),
                null !== t && t.forEach((e=>this.activeBalloonTags.push(e.toLowerCase()))),
                this.refreshBlinkTags(),
                this.refreshBalloonTags()
            }
            mountBlinkListener(e, t) {
                this.mountedBlinkComponents.set(e.toLowerCase(), t),
                this.blinkTagsDirty = !0
            }
            mountBalloonListener(e, t, n, s) {
                this.mountedBalloonComponents.set(e.toLowerCase(), [t, n, s]),
                this.balloonTagsDirty = !0
            }
            unmountBlinkListener(e) {
                this.mountedBlinkComponents.delete(e.toLowerCase()),
                this.blinkTagsDirty = !0
            }
            unmountBalloonListener(e) {
                this.mountedBalloonComponents.delete(e.toLowerCase()),
                this.balloonTagsDirty = !0
            }
            refreshBlinkTags() {
                const e = this.FindTopBlinkTags();
                this.mountedBlinkComponents.forEach(((t,n)=>t(null != e && void 0 !== e.find((e=>e.split("|").map((e=>e.trim())).includes(n)))))),
                this.blinkTagsDirty = !1
            }
            refreshBalloonTags() {
                const [e,t] = this.FindTopBalloonTag();
                this.mountedBalloonComponents.forEach((([n,s,i],a)=>{
                    let o = !1;
                    const r = e?.split("|").map((e=>e.trim()));
                    if (void 0 !== r) {
                        const e = r.indexOf(a);
                        if (e > 0) {
                            let t = !0;
                            for (let n = e - 1; n >= 0; n--)
                                this.mountedBalloonComponents.has(r[n]) && (t = !1);
                            o = t
                        } else
                            o = 0 === e
                    }
                    n(o),
                    s(o && e !== this.activeBalloonTags[0]),
                    i(t)
                }
                )),
                this.balloonTagsDirty = !1
            }
            isBlinkTagsDirty() {
                return this.blinkTagsDirty
            }
            isBalloonTagsDirty() {
                return this.balloonTagsDirty
            }
            FindTopBlinkTags() {
                for (let e = 0; e < this.activeBlinkTags.length; ++e)
                    for (let t = 0; t < this.activeBlinkTags[e].length; t++)
                        if (this.mountedBlinkComponents.has(this.activeBlinkTags[e][t]))
                            return this.activeBlinkTags[e];
                return null
            }
            FindTopBalloonTag() {
                for (let e = 0; e < this.activeBalloonTags.length; ++e) {
                    const t = this.activeBalloonTags[e].split("|").map((e=>e.trim()));
                    for (let n = 0; n < t.length; n++)
                        if (this.mountedBalloonComponents.has(t[n]))
                            return [this.activeBalloonTags[e], e]
                }
                return [null, -1]
            }
        }
        ;
        var fg = Y.createContext(pg)
          , xg = Y.createContext(!1)
          , vg = ({children: e})=>{
            const t = sl(zh)
              , n = (0,
            Y.useMemo)((()=>null != t && t.type === mg.Balloon ? t.balloonTargets.map((e=>e.uiTag)) : null), [t])
              , s = t?.trigger?.active ? t.trigger.blinkTags : null;
            return _g(s, n),
            (0,
            z.jsx)(fg.Provider, {
                value: pg,
                children: e
            })
        }
        ;
        const _g = (e,t)=>{
            const n = (0,
            Y.useContext)(fg);
            (0,
            Y.useEffect)((()=>(n.activateTags(e, t),
            ()=>n.activateTags(null, null))), [n, e, t]),
            (0,
            Y.useEffect)((()=>{
                if (e?.length || t?.length) {
                    let e = 0;
                    const t = ()=>{
                        n.isBalloonTagsDirty() && n.refreshBalloonTags(),
                        n.isBlinkTagsDirty() && n.refreshBlinkTags(),
                        e = window.requestAnimationFrame(t)
                    }
                    ;
                    return t(),
                    ()=>window.cancelAnimationFrame(e)
                }
            }
            ), [n, e, t])
        }
        ;
        X.add("game-ui/game/components/tutorials/tutorial-target/tutorial-context.tsx", {
            get TutorialContext() {
                return fg
            },
            set TutorialContext(e) {
                fg = e
            },
            get TooltipDisableContext() {
                return xg
            },
            set TooltipDisableContext(e) {
                xg = e
            },
            get TutorialTargetProvider() {
                return vg
            },
            set TutorialTargetProvider(e) {
                vg = e
            }
        });
        let bg = {
            balloon: "balloon_qJY balloon_H23",
            enter: "enter_ZTk",
            "enter-active": "enter-active_AJs",
            enterActive: "enter-active_AJs",
            "exit-active": "exit-active_RfZ",
            exitActive: "exit-active_RfZ",
            container: "container_zgM container_jfe",
            arrow: "arrow_SVb arrow_Xfn",
            content: "content_A82 content_JQV"
        };
        X.add("game-ui/common/tooltip/tooltip.module.scss", {
            get classes() {
                return bg
            },
            set classes(e) {
                Object.assign(bg, e)
            }
        });
        const Tg = bg;
        var Eg = ({tooltip: e, forceVisible: t, disabled: n, theme: s=Tg, direction: i, alignment: a, className: o, children: r, anchorElRef: l})=>{
            const [c,u] = (0,
            Y.useState)(!1)
              , d = (0,
            Y.useCallback)((()=>u(!0)), [])
              , m = (0,
            Y.useCallback)((()=>u(!1)), [])
              , h = (0,
            Y.useCallback)((()=>u(!1)), [])
              , [g,p] = (0,
            Y.useState)(!1)
              , f = (0,
            Y.useCallback)((e=>p(e)), [])
              , x = Dm();
            (0,
            Y.useEffect)((()=>{
                if (x && g) {
                    const e = ym.subscribe((e=>{
                        e && p(!1)
                    }
                    ));
                    return ()=>e.dispose()
                }
            }
            ), [x, g]);
            const v = (0,
            Y.useRef)(null)
              , _ = (0,
            Y.useCallback)((e=>{
                v.current !== e && (null != v.current && (v.current.removeEventListener("mouseover", d),
                v.current.removeEventListener("mouseleave", m),
                v.current.removeEventListener("mousedown", h)),
                null != e && (e.addEventListener("mouseover", d),
                e.addEventListener("mouseleave", m),
                e.addEventListener("mousedown", h)),
                v.current = e)
            }
            ), [h, m, d])
              , b = !!e && Y.Children.count(r) > 0
              , T = (0,
            Y.useContext)(xg);
            return (0,
            z.jsx)(z.Fragment, {
                children: (0,
                z.jsx)(Ah, {
                    onFocusChange: f,
                    children: (0,
                    z.jsx)(bh, {
                        visible: (x && g || t || c) && b && !n && !T,
                        direction: i,
                        alignment: a,
                        theme: s,
                        content: e,
                        className: o,
                        anchorElRef: l,
                        children: (0,
                        z.jsx)(vd, {
                            ref: _,
                            children: r
                        })
                    })
                })
            })
        }
        ;
        X.add("game-ui/common/tooltip/tooltip.tsx", {
            get Tooltip() {
                return Eg
            },
            set Tooltip(e) {
                Eg = e
            }
        });
        class Ig {
            constructor(e) {
                this.debugName = e,
                this.r = Math.floor(1e6 * Math.random())
            }
            toString() {
                return `${this.debugName}:${this.r}`
            }
        }
        var Sg = new Ig("FOCUS_DISABLED")
          , yg = new Ig("FOCUS_AUTO");
        function jg(e, t) {
            return (0,
            Y.useMemo)((()=>e === Sg ? null : e === yg ? new Ig(t) : e), [e, t])
        }
        X.add("game-ui/common/focus/focus-key.ts", {
            get FOCUS_DISABLED() {
                return Sg
            },
            set FOCUS_DISABLED(e) {
                Sg = e
            },
            get FOCUS_AUTO() {
                return yg
            },
            set FOCUS_AUTO(e) {
                yg = e
            },
            get useUniqueFocusKey() {
                return jg
            },
            set useUniqueFocusKey(e) {
                jg = e
            }
        });
        var Cg, Ng = {
            attachChild: ()=>{}
            ,
            detachChild: ()=>{}
            ,
            transformStack: ()=>{}
            ,
            setDirty: ()=>{}
        }, wg = Y.createContext(Ng), Og = Y.createContext(Ng);
        function Pg(e, t) {
            const n = (0,
            Y.useContext)(e === Cg.AlwaysActive ? Og : wg)
              , s = (0,
            Y.useMemo)((()=>new Lg), []);
            return (0,
            Y.useEffect)((()=>{
                s.transformer = t
            }
            ), [s, t]),
            (0,
            Y.useEffect)((()=>{
                if (e !== Cg.Disabled)
                    return s.attachTo(n),
                    ()=>s.detach()
            }
            ), [e, s, n]),
            s
        }
        !function(e) {
            e[e.Disabled = 0] = "Disabled",
            e[e.ActiveOnFocus = 1] = "ActiveOnFocus",
            e[e.AlwaysActive = 2] = "AlwaysActive"
        }(Cg || (Cg = {}));
        class Lg {
            _parent = null;
            _child = null;
            _transformer = null;
            get transformer() {
                return this._transformer
            }
            set transformer(e) {
                this._transformer !== e && (this._transformer = e,
                this.setDirty())
            }
            attachTo(e) {
                this._parent = e,
                this._parent.attachChild(this)
            }
            detach() {
                null != this._parent ? (this._parent.detachChild(this),
                this._parent = null) : console.error("The input controller is not attached to parent!")
            }
            attachChild(e) {
                this._child !== e && (this._child = e,
                this.setDirty())
            }
            detachChild(e) {
                this._child === e && (this._child = null,
                this.setDirty())
            }
            transformStack(e) {
                null != this._transformer && this._transformer(e),
                null != this._child && this._child.transformStack(e)
            }
            setDirty() {
                null != this._parent && this._parent.setDirty()
            }
        }
        class Ag {
            constructor(e, t) {
                this.stack = e,
                this.onStackChanged = t,
                this._child = [],
                this._udpateHandle = null
            }
            attachChild(e) {
                this._child.indexOf(e) < 0 && (this._child.push(e),
                this.setDirty())
            }
            detachChild(e) {
                const t = this._child.indexOf(e);
                t >= 0 && (this._child.splice(t, 1),
                this.setDirty())
            }
            transformStack() {}
            setDirty() {
                this._udpateHandle && cancelAnimationFrame(this._udpateHandle),
                this._udpateHandle = requestAnimationFrame((()=>{
                    this.stack.clear();
                    for (let e = 0; e < this._child.length; e += 1)
                        this._child[e].transformStack(this.stack);
                    this.onStackChanged(),
                    this._udpateHandle = null
                }
                ))
            }
        }
        X.add("game-ui/common/input-events/input-controller.ts", {
            get defaultInputController() {
                return Ng
            },
            set defaultInputController(e) {
                Ng = e
            },
            get InputContext() {
                return wg
            },
            set InputContext(e) {
                wg = e
            },
            get InputRootContext() {
                return Og
            },
            set InputRootContext(e) {
                Og = e
            },
            get InputControllerState() {
                return Cg
            },
            set InputControllerState(e) {
                Cg = e
            },
            get useInputController() {
                return Pg
            },
            set useInputController(e) {
                Pg = e
            }
        });
        var Mg = Y.memo((function({actions: e, disabled: t, ignoreFocusState: n=!1, children: s}) {
            const i = Ch("InputActionConsumer")
              , a = wh(i)
              , o = (0,
            Y.useCallback)((t=>{
                if (null != e) {
                    const n = Object.entries(e);
                    for (let e = n.length - 1; e >= 0; e--) {
                        const [s,i] = n[e];
                        null != i && t.push(s, i)
                    }
                }
            }
            ), [e])
              , r = Pg(n ? Cg.AlwaysActive : a ? Cg.ActiveOnFocus : Cg.Disabled, t ? null : o);
            return n ? (0,
            z.jsx)(z.Fragment, {
                children: s
            }) : (0,
            z.jsx)(Lh, {
                controller: i,
                children: (0,
                z.jsx)(wg.Provider, {
                    value: r,
                    children: s
                })
            })
        }
        ), ((e,t)=>{
            const {actions: n, ...s} = e
              , {actions: i, ...a} = t;
            return Kr(s, a) && Kr(e.actions, t.actions)
        }
        ));
        const Rg = ({disabled: e, children: t, action: n, onAction: s})=>{
            const i = (0,
            Y.useMemo)((()=>({
                [n]: s
            })), [n, s]);
            return (0,
            z.jsx)(Mg, {
                actions: i,
                disabled: e,
                children: t
            })
        }
        ;
        var kg, Dg = ({action: e="Select", ...t})=>(0,
        z.jsx)(Rg, {
            action: e,
            ...t
        }), Fg = ({action: e="Back", ...t})=>(0,
        z.jsx)(Rg, {
            action: e,
            ...t
        }), Ug = ({action: e="Close", ...t})=>(0,
        z.jsx)(Rg, {
            action: e,
            ...t
        }), Bg = ({expanded: e, expandable: t, disabled: n, children: s, onAction: i})=>{
            const a = (0,
            Y.useMemo)((()=>({
                [e ? "Collapse Group" : "Expand Group"]: t ? i : null
            })), [t, e, i]);
            return (0,
            z.jsx)(Mg, {
                actions: a,
                disabled: n,
                children: s
            })
        }
        ;
        function Gg(e, t, n) {
            return (0,
            Y.useMemo)((()=>new Vg(e,t,n)), [e, t, n])
        }
        X.add("game-ui/common/input-events/input-action-consumer.tsx", {
            get InputActionConsumer() {
                return Mg
            },
            set InputActionConsumer(e) {
                Mg = e
            },
            get SelectConsumer() {
                return Dg
            },
            set SelectConsumer(e) {
                Dg = e
            },
            get BackConsumer() {
                return Fg
            },
            set BackConsumer(e) {
                Fg = e
            },
            get CloseConsumer() {
                return Ug
            },
            set CloseConsumer(e) {
                Ug = e
            },
            get ExpandConsumer() {
                return Bg
            },
            set ExpandConsumer(e) {
                Bg = e
            }
        });
        class Vg extends jh {
            constructor(e, t, n) {
                super(),
                this.activation = t,
                this.limits = n,
                this.children = new Map,
                this._focusedChildKey = null,
                this.onRefocus = null,
                this.isChildFocusedImpl = e=>e === this._focusedChildKey && this.children.has(this._focusedChildKey),
                this.registerChild = (e,t)=>{
                    this.children.has(e) ? console.error(`The focus key '${String(e)}' has already been registered in this MultiChildFocusController!\n${this.debugTrace()}`) : (this.children.set(e, t),
                    this.enabled || (this.activation === qu.FocusedChild ? this.enabled = this._focusedChildKey === e : this.activation === qu.AnyChildren && (this.enabled = !0)),
                    !this.onRefocus || !this.focused || null != this._focusedChildKey && this.children.has(this._focusedChildKey) || this.onRefocus(null))
                }
                ,
                this.unregisterChild = e=>{
                    const t = this.children.get(e);
                    null != t ? (this.enabled && (this.activation === qu.FocusedChild ? this.enabled = this._focusedChildKey !== e : this.activation === qu.AnyChildren && (this.enabled = this.children.size > 1)),
                    this.children.delete(e),
                    this.onRefocus && this.focused && e === this.focusedChildKey && this.onRefocus(t)) : console.error(`Attempted to unregister mismatching focus key '${String(e)}' from a MultiChildFocusController!\n${this.debugTrace()}`)
                }
                ,
                this.enabled = t === qu.Always,
                this.focusKey = e
            }
            get focusedChildKey() {
                return this._focusedChildKey
            }
            set focusedChildKey(e) {
                if (e === this._focusedChildKey)
                    return;
                const t = null != this._focusedChildKey ? this.children.get(this._focusedChildKey) : void 0
                  , n = null != e && this.children.has(e);
                n || (this.enabled = this.activation !== qu.FocusedChild),
                this._focusedChildKey = e,
                n ? this.enabled ? this.updateChildren(t ?? null) : this.enabled = !0 : (null != this.onRefocus && this.onRefocus(t ?? null),
                null != t && this.updateChildren(t ?? null))
            }
            has(e) {
                return this.children.has(e)
            }
            get(e) {
                return this.children.get(e)
            }
            entries() {
                return this.children
            }
            getBounds() {
                let e = 0
                  , t = 0
                  , n = 0
                  , s = 0
                  , i = !1;
                for (const a of this.children.values()) {
                    const o = a.getBounds();
                    null != o && (i ? (e = Math.min(o.left, e),
                    t = Math.min(o.top, t),
                    n = Math.max(o.right, n),
                    s = Math.max(o.bottom, s)) : (e = o.left,
                    t = o.top,
                    n = o.right,
                    s = o.bottom,
                    i = !0))
                }
                return i ? {
                    left: e,
                    top: t,
                    right: n,
                    bottom: s,
                    width: n - e,
                    height: s - t
                } : null
            }
            getFocusedBounds() {
                if (null != this._focusedChildKey) {
                    const e = this.children.get(this._focusedChildKey);
                    if (null != e)
                        return e.getFocusedBounds()
                }
                return null
            }
            onFocusEnterImpl(e) {
                null != this.onRefocus && this.onRefocus(e)
            }
            get debugFocusedChild() {
                return null != this._focusedChildKey ? this.children.get(this._focusedChildKey) ?? null : null
            }
        }
        function Hg(e, t) {
            switch (t) {
            case kg.Horizontal:
                return Math.abs(e.x) > Math.abs(e.y) ? {
                    x: Math.sign(e.x),
                    y: 0
                } : Ad;
            case kg.Vertical:
                return Math.abs(e.y) > Math.abs(e.x) ? {
                    x: 0,
                    y: Math.sign(e.y)
                } : Ad;
            case kg.Both:
                return Bd(e);
            default:
                return Ad
            }
        }
        function Kg(e, t, n) {
            let s = Number.MAX_VALUE
              , i = null;
            for (const [a,o] of e.entries()) {
                const r = o.getBounds();
                if (null == r)
                    continue;
                let l = 0
                  , c = 0;
                switch (e.limits) {
                case Xu.Center:
                    {
                        const e = Qg(r, n);
                        if (null == e)
                            continue;
                        l = e.x - t.x,
                        c = e.y - t.y;
                        break
                    }
                case Xu.Bounds:
                    l = t.x < r.left ? r.left - t.x : r.left <= t.x && t.x <= r.right ? 0 : t.x - r.right,
                    c = t.y < r.top ? r.top - t.y : r.top <= t.y && t.y <= r.bottom ? 0 : t.y - r.bottom
                }
                const u = l * l + c * c;
                u < s && (s = u,
                i = a)
            }
            return i
        }
        function Wg(e, t, n, s, i) {
            let a = null
              , o = Number.MAX_VALUE;
            const r = {
                x: .5 + .5 * n.x,
                y: .5 - .5 * n.y
            }
              , l = t.getFocusedBounds()
              , c = Qg(l, r);
            if (l && c)
                for (const [t,r] of e.entries()) {
                    if (t === i)
                        continue;
                    const u = r.getBounds();
                    if (null == u)
                        continue;
                    const d = Qg(u, s);
                    if (null == d)
                        continue;
                    const m = d.x - c.x
                      , h = d.y - c.y;
                    if (m * n.x - h * n.y <= 0)
                        continue;
                    let g = 0
                      , p = 0;
                    switch (e.limits) {
                    case Xu.Center:
                        {
                            const e = {
                                x: Od(c.x, u.left, u.right),
                                y: Od(c.y, u.top, u.bottom)
                            };
                            g = e.x - c.x,
                            p = e.y - c.y;
                            break
                        }
                    case Xu.Bounds:
                        g = u.right <= l.left ? l.left - u.right : u.right >= l.left && u.right <= l.right || u.left >= l.left && u.left <= l.right ? 0 : l.right - u.left,
                        g = u.bottom <= l.top ? l.top - u.bottom : u.bottom >= l.top && u.bottom <= l.bottom || u.top >= l.top && u.top <= l.bottom ? 0 : l.bottom - u.top
                    }
                    const f = g * n.x - p * n.y
                      , x = p * n.x + g * n.y
                      , v = 1 * f + 5 * Math.abs(x);
                    v < o && (a = t,
                    o = v)
                }
            return a
        }
        X.add("game-ui/common/focus/controller/multi-child-focus-controller.tsx", {
            get useMultiChildFocusController() {
                return Gg
            },
            set useMultiChildFocusController(e) {
                Gg = e
            }
        }),
        function(e) {
            e.Horizontal = "horizontal",
            e.Vertical = "vertical",
            e.Both = "both",
            e.None = "none"
        }(kg || (kg = {}));
        var zg = {
            x: .5,
            y: .5
        }
          , Yg = {
            x: .5,
            y: 0
        }
          , $g = {
            x: 0,
            y: .5
        }
          , qg = {
            x: .5,
            y: 1
        }
          , Xg = {
            x: 1,
            y: .5
        };
        function Qg(e, t) {
            return null != e ? {
                x: e.left * (1 - t.x) + e.right * t.x,
                y: e.top * (1 - t.y) + e.bottom * t.y
            } : null
        }
        X.add("game-ui/common/focus/navigation.ts", {
            get NavigationDirection() {
                return kg
            },
            set NavigationDirection(e) {
                kg = e
            },
            get transformNavigationInput() {
                return Hg
            },
            set transformNavigationInput(e) {
                Hg = e
            },
            get getClosestKey() {
                return Kg
            },
            set getClosestKey(e) {
                Kg = e
            },
            get getClosestKeyInDirection() {
                return Wg
            },
            set getClosestKeyInDirection(e) {
                Wg = e
            },
            get focusAnchorCenter() {
                return zg
            },
            set focusAnchorCenter(e) {
                zg = e
            },
            get focusAnchorTop() {
                return Yg
            },
            set focusAnchorTop(e) {
                Yg = e
            },
            get focusAnchorLeft() {
                return $g
            },
            set focusAnchorLeft(e) {
                $g = e
            },
            get focusAnchorBottom() {
                return qg
            },
            set focusAnchorBottom(e) {
                qg = e
            },
            get focusAnchorRight() {
                return Xg
            },
            set focusAnchorRight(e) {
                Xg = e
            },
            get getElementFocusPosition() {
                return Qg
            },
            set getElementFocusPosition(e) {
                Qg = e
            }
        });
        var Zg = ({focusKey: e=yg, debugName: t="NavigationScope", focused: n, direction: s=kg.Both, activation: i=qu.AnyChildren, limits: a=Xu.Center, children: o, onFocused: r, onChange: l, onRefocus: c, allowFocusExit: u=!0, allowLooping: d=!1, jumpSections: m=!1})=>{
            const h = Gg(jg(e, t), i, a);
            Ph(h, r),
            (0,
            Y.useEffect)((()=>{
                h.focusedChildKey = n
            }
            ), [h, n]),
            (0,
            Y.useEffect)((()=>{
                if (null != c)
                    return !h.focused || null != h.focusedChildKey && h.has(h.focusedChildKey) || l(c(h, null)),
                    h.onRefocus = e=>{
                        l(c(h, e))
                    }
                    ,
                    ()=>{
                        h.onRefocus = null
                    }
            }
            ), [h, l, c]);
            const g = (0,
            Y.useCallback)((e=>{
                const t = null !== h.focusedChildKey && h.get(h.focusedChildKey);
                let n = null;
                if ((null === h.focusedChildKey || !t) && (n = Kg(h, Ad, zg),
                null !== n))
                    return l(n),
                    !0;
                if (t && (n = Wg(h, t, e, zg, h.focusedChildKey || void 0),
                null !== n))
                    return l(n),
                    !0;
                if (d && h.children.size > 1) {
                    const t = [...h.children.entries()].reduce(((t,[n,s])=>{
                        const i = s.getBounds();
                        return i && ("y" !== d && e.x < 0 && i.left > (t.bounds?.left ?? -1 / 0) || "y" !== d && e.x > 0 && i.left < (t.bounds?.left ?? 1 / 0) || "x" !== d && e.y > 0 && i.top > (t.bounds?.top ?? -1 / 0) || "x" !== d && e.y < 0 && i.top < (t.bounds?.top ?? 1 / 0)) ? {
                            key: n,
                            bounds: i
                        } : t
                    }
                    ), {
                        key: null,
                        bounds: null
                    });
                    if ((0 === t.key || t.key) && (n = t.key),
                    null !== n)
                        return l(n),
                        !0
                }
                return !u
            }
            ), [u, d, h, l])
              , p = s === kg.Both || s === kg.Horizontal
              , f = s === kg.Both || s === kg.Vertical
              , x = (0,
            Y.useCallback)((e=>g(p ? {
                x: e,
                y: 0
            } : {
                x: 0,
                y: e
            })), [p, g])
              , v = (0,
            Y.useMemo)((()=>({
                "Move Horizontal": p ? e=>g({
                    x: e,
                    y: 0
                }) : null,
                "Move Vertical": f ? e=>g({
                    x: 0,
                    y: e
                }) : null,
                "Jump Section": m ? x : null
            })), [p, f, m, x, g]);
            return (0,
            z.jsx)(Mg, {
                actions: v,
                children: (0,
                z.jsx)(Lh, {
                    controller: h,
                    children: o
                })
            })
        }
          , Jg = (e,t)=>null != e.focusedChildKey && e.has(e.focusedChildKey) ? e.focusedChildKey : ep(e, t)
          , ep = (e,t)=>{
            if (null == t && null != e.focusedChildKey && e.has(e.focusedChildKey))
                return e.focusedChildKey;
            let n = Ad;
            null != t && (n = Qg(t.getFocusedBounds(), zg) ?? Ad);
            return Kg(e, n, zg)
        }
          , tp = (e,t)=>null == t && null != e.focusedChildKey && e.has(e.focusedChildKey) ? e.focusedChildKey : Kg(e, Ad, zg);
        X.add("game-ui/common/focus/navigation-scope.tsx", {
            get NavigationScope() {
                return Zg
            },
            set NavigationScope(e) {
                Zg = e
            },
            get refocusClosestKeyIfNoFocus() {
                return Jg
            },
            set refocusClosestKeyIfNoFocus(e) {
                Jg = e
            },
            get refocusClosestKey() {
                return ep
            },
            set refocusClosestKey(e) {
                ep = e
            },
            get refocusTopLeft() {
                return tp
            },
            set refocusTopLeft(e) {
                tp = e
            }
        });
        var np = ({onRefocus: e=ep, onChange: t, allowFocusExit: n=!0, allowLooping: s=!1, debugName: i="AutoNavigationScope", focusKey: a=yg, forceFocus: o, initialFocused: r, ...l})=>{
            const [c,u] = (0,
            Y.useState)(r ?? null)
              , d = (0,
            Y.useCallback)((e=>{
                u(e),
                t && t(e)
            }
            ), [t]);
            return (0,
            z.jsx)(Zg, {
                focusKey: a,
                focused: o ?? c,
                debugName: i,
                onChange: d,
                onRefocus: e,
                allowFocusExit: n,
                allowLooping: s,
                ...l
            })
        }
        ;
        function sp(e) {
            return (0,
            Y.useMemo)((()=>new ip(e)), [e])
        }
        X.add("game-ui/common/focus/auto-navigation-scope.tsx", {
            get AutoNavigationScope() {
                return np
            },
            set AutoNavigationScope(e) {
                np = e
            }
        });
        class ip extends jh {
            childFocusKey = null;
            childElement = null;
            constructor(e) {
                super(),
                this.focusKey = e
            }
            isChildFocusedImpl = e=>e === this.childFocusKey;
            registerChild = (e,t)=>{
                null == this.childFocusKey ? (this.childFocusKey = e,
                this.childElement = t,
                this.enabled = !0) : console.error(`Cannot register second focus key '${e}'! KeyFocusControllers can only host a single child.\nRegistered key: ${this.childFocusKey}\n${this.debugTrace()}`)
            }
            ;
            unregisterChild = e=>{
                this.childFocusKey === e ? (this.enabled = !1,
                this.childFocusKey = null,
                this.childElement = null) : console.error(`Attempted to unregister mismatching focus key '${e}' from a KeyFocusController!\nRegistered key: ${this.childFocusKey}\n${this.debugTrace()}`)
            }
            ;
            getBounds = ()=>this.childElement?.getBounds() ?? null;
            getFocusedBounds() {
                return this.childElement?.getFocusedBounds() ?? null
            }
            get debugFocusedChild() {
                return this.childElement
            }
        }
        X.add("game-ui/common/focus/controller/key-focus-controller.tsx", {
            get useKeyFocusController() {
                return sp
            },
            set useKeyFocusController(e) {
                sp = e
            }
        });
        var ap = ({focusKey: e=yg, children: t})=>{
            const n = sp(jg(e, "FocusKeyOverride"));
            return (0,
            z.jsx)(Lh, {
                controller: n,
                children: t
            })
        }
        ;
        X.add("game-ui/common/focus/focus-key-override.tsx", {
            get FocusKeyOverride() {
                return ap
            },
            set FocusKeyOverride(e) {
                ap = e
            }
        });
        var op = ({focusKey: e=yg, debugName: t="FocusScope", focused: n, activation: s=qu.FocusedChild, limits: i=Xu.Center, children: a})=>{
            const o = Gg(jg(e, t), s, i);
            return (0,
            Y.useEffect)((()=>{
                o.focusedChildKey = n
            }
            ), [o, n]),
            (0,
            z.jsx)(Lh, {
                controller: o,
                children: a
            })
        }
        ;
        X.add("game-ui/common/focus/focus-scope.tsx", {
            get FocusScope() {
                return op
            },
            set FocusScope(e) {
                op = e
            }
        });
        const rp = "audio";
        var lp;
        function cp(e, t) {
            const n = "number" == typeof t ? t : 1;
            null != e && n && requestAnimationFrame((()=>tl(rp, "playSound", e, n)))
        }
        !function(e) {
            e.selectItem = "select-item",
            e.dragSlider = "drag-slider",
            e.hoverItem = "hover-item",
            e.expandPanel = "expand-panel",
            e.grabSlider = "grabSlider",
            e.selectDropdown = "select-dropdown",
            e.selectToggle = "select-toggle",
            e.focusInputField = "focus-input-field",
            e.signatureBuildingEvent = "signature-building-event",
            e.bulldoze = "bulldoze",
            e.bulldozeEnd = "bulldoze-end",
            e.relocateBuilding = "relocate-building",
            e.mapTilePurchaseMode = "map-tile-purchase-mode",
            e.mapTilePurchaseModeEnd = "map-tile-purchase-mode-end",
            e.xpEvent = "xp-event",
            e.milestoneEvent = "milestone-event",
            e.economy = "economy",
            e.chirpEvent = "chirp-event",
            e.likeChirp = "like-chirp",
            e.chirper = "chirper",
            e.purchase = "purchase",
            e.enableBuilding = "enable-building",
            e.disableBuilding = "disable-building",
            e.pauseSimulation = "pause-simulation",
            e.resumeSimulation = "resume-simulation",
            e.simulationSpeed1 = "simulation-speed-1",
            e.simulationSpeed2 = "simulation-speed-2",
            e.simulationSpeed3 = "simulation-speed-3",
            e.togglePolicy = "toggle-policy",
            e.takeLoan = "take-loan",
            e.removeItem = "remove-item",
            e.toggleInfoMode = "toggle-info-mode",
            e.takePhoto = "take-photo",
            e.tutorialTriggerCompleteEvent = "tutorial-trigger-complete-event",
            e.selectRadioNetwork = "select-radio-network",
            e.selectRadioStation = "select-radio-station",
            e.generateRandomName = "generate-random-name",
            e.decreaseElevation = "decrease-elevation",
            e.increaseElevation = "increase-elevation",
            e.selectPreviousItem = "select-previous-item",
            e.selectNextItem = "select-next-item",
            e.openPanel = "open-panel",
            e.closePanel = "close-panel",
            e.openMenu = "open-menu",
            e.closeMenu = "close-menu",
            e.clickDisableButton = "click-disable-button"
        }(lp || (lp = {})),
        X.add("game-ui/common/data-binding/audio-bindings.ts", {
            get UISound() {
                return lp
            },
            set UISound(e) {
                lp = e
            },
            get playUISound() {
                return cp
            },
            set playUISound(e) {
                cp = e
            }
        });
        var up = {
            enter: lp.openPanel,
            exit: lp.closePanel
        }
          , dp = {
            enter: lp.openMenu,
            exit: lp.closeMenu
        };
        function mp(e) {
            const {state: t} = (0,
            Y.useContext)(ld);
            (0,
            Y.useEffect)((()=>{
                t === td.enter ? cp(e?.enter) : t === td.exit && cp(e?.exit)
            }
            ), [t, e?.enter, e?.exit])
        }
        X.add("game-ui/common/animations/transition-sounds.tsx", {
            get panelTransitionSounds() {
                return up
            },
            set panelTransitionSounds(e) {
                up = e
            },
            get menuTransitionSounds() {
                return dp
            },
            set menuTransitionSounds(e) {
                dp = e
            },
            get useTransitionSounds() {
                return mp
            },
            set useTransitionSounds(e) {
                mp = e
            }
        });
        var hp = Y.createContext({
            scrollTo: ()=>{}
            ,
            scrollBy: ()=>{}
            ,
            smoothScrollTo: ()=>{}
            ,
            scrollIntoView: ()=>{}
            ,
            updateThumbs: ()=>{}
        });
        function gp(e, t, n=qu.Always, s=!1) {
            const i = (0,
            Y.useCallback)((()=>t.current?.getBoundingClientRect() || null), [t])
              , a = (0,
            Y.useMemo)((()=>new pp(e,i,n,s)), [e, i, n, s])
              , o = (0,
            Y.useContext)(hp)
              , r = al(Em);
            return Ph(a, (0,
            Y.useCallback)((e=>{
                e && r.current === vm.gamepad && null != t.current && requestAnimationFrame((()=>{
                    t.current && o.scrollIntoView(t.current)
                }
                ))
            }
            ), [r, t, o])),
            a
        }
        X.add("game-ui/common/scrolling/scrollable-context.ts", {
            get ScrollableContext() {
                return hp
            },
            set ScrollableContext(e) {
                hp = e
            }
        });
        class pp extends jh {
            constructor(e, t, n, s) {
                super(),
                this.getBounds = t,
                this.activation = n,
                this.allowChildren = s,
                this.childFocusKey = null,
                this.childElement = null,
                this.isChildFocusedImpl = e=>e === this.childFocusKey,
                this.registerChild = (e,t)=>{
                    this.allowChildren ? null == this.childFocusKey ? (this.childFocusKey = e,
                    this.childElement = t,
                    this.activation !== qu.Always && (this.enabled = !0)) : console.error(`Cannot register second child '${e}'. This focus node can only host a single child!\nRegistered key: ${this.childFocusKey}\n${this.debugTrace()}`) : console.error(`${this.focusKey}: Cannot register child '${e}'. Children are not allowed in this focus node!`)
                }
                ,
                this.unregisterChild = e=>{
                    this.childFocusKey === e ? (this.childFocusKey = null,
                    this.childElement = null,
                    this.activation !== qu.Always && (this.enabled = !1)) : console.error(`Attempted to unregister mismatching focus key '${e}'!\nRegistered key: ${this.childFocusKey}\n${this.debugTrace()}`)
                }
                ,
                this.enabled = this.activation === qu.Always,
                this.focusKey = e
            }
            getFocusedBounds() {
                return this.childElement?.getFocusedBounds() ?? this.getBounds()
            }
            get debugFocusedChild() {
                return this.childElement
            }
        }
        function fp() {
            return (0,
            Y.useMemo)((()=>new xp), [])
        }
        X.add("game-ui/common/focus/controller/element-focus-context.tsx", {
            get useElementFocusController() {
                return gp
            },
            set useElementFocusController(e) {
                gp = e
            }
        });
        class xp extends jh {
            childElement = null;
            constructor() {
                super(!1),
                this.enabled = !0
            }
            get debugName() {
                return "<root>"
            }
            isChildFocusedImpl = e=>e === this.focusKey;
            registerChild = (e,t)=>{
                null == this.focusKey ? (this.focusKey = e,
                this.childElement = t) : console.error(`Cannot register second focus key '${e}'! RootFocusControllers can only host a single child.\nRegistered key: ${this.focusKey}\n${this.debugTrace()}`)
            }
            ;
            unregisterChild = e=>{
                this.focusKey === e ? (this.focusKey = null,
                this.childElement = null) : console.error(`Attempted to unregister mismatching focus key '${e}' from a RootFocusController!\nRegistered key: ${this.focusKey}\n${this.debugTrace()})`)
            }
            ;
            getBounds = ()=>null;
            getFocusedBounds() {
                return null
            }
            get debugFocusedChild() {
                return this.childElement
            }
        }
        function vp(e, t) {
            return (0,
            Y.useCallback)((n=>{
                if (null == n)
                    return;
                const s = e(n);
                null != s && t(s)
            }
            ), [e, t])
        }
        function _p(e) {
            return vp(Fr, e)
        }
        function bp(e) {
            return vp(Tp, e)
        }
        function Tp(e) {
            return "string" == typeof e ? e : null
        }
        X.add("game-ui/common/focus/controller/root-focus-controller.tsx", {
            get useRootFocusController() {
                return fp
            },
            set useRootFocusController(e) {
                fp = e
            }
        }),
        X.add("game-ui/common/focus/focus-change-listener.tsx", {
            get useFocusChangeListener() {
                return vp
            },
            set useFocusChangeListener(e) {
                vp = e
            },
            get useEntityFocusChangeListener() {
                return _p
            },
            set useEntityFocusChangeListener(e) {
                _p = e
            },
            get useStringFocusChangeListener() {
                return bp
            },
            set useStringFocusChangeListener(e) {
                bp = e
            }
        });
        var Ep = ({disabled: e=!0, children: t})=>{
            const n = (0,
            Y.useContext)(Ju);
            return (0,
            z.jsx)(Ju.Provider, {
                value: e ? ed : n,
                children: t
            })
        }
        ;
        X.add("game-ui/common/focus/focus-disabled.tsx", {
            get FocusDisabled() {
                return Ep
            },
            set FocusDisabled(e) {
                Ep = e
            }
        });
        var Ip = Y.forwardRef((function({className: e, focusSound: t, children: n, onFocusChange: s, ...i}, a) {
            const o = Ch("PassiveFocusDiv");
            Ph(o, s);
            const r = wh(o)
              , l = Dm();
            return (0,
            Y.useEffect)((()=>{
                r && l && cp(t)
            }
            ), [t, r, l]),
            (0,
            z.jsx)(Lh, {
                controller: o,
                children: (0,
                z.jsx)(xd, {
                    children: (0,
                    z.jsx)("div", {
                        ...i,
                        ref: a,
                        className: Zu()(e, r && l && "focused"),
                        children: n
                    })
                })
            })
        }
        ))
          , Sp = Y.forwardRef((function({focusKey: e=yg, debugName: t="ActiveFocusDiv", activation: n=qu.Always, focusSound: s, className: i, children: a, onFocusChange: o, ...r}, l) {
            const c = (0,
            Y.useRef)(null)
              , u = gd(l, c)
              , d = gp(jg(e, t), c, n, !0);
            Ph(d, o);
            const m = wh(d)
              , h = Dm();
            return (0,
            Y.useEffect)((()=>{
                m && h && cp(s)
            }
            ), [s, m, h]),
            (0,
            z.jsx)(Lh, {
                controller: d,
                children: (0,
                z.jsx)(xd, {
                    children: (0,
                    z.jsx)("div", {
                        ...r,
                        ref: u,
                        className: Zu()(i, m && h && "focused"),
                        children: a
                    })
                })
            })
        }
        ));
        X.add("game-ui/common/focus/focus-div.tsx", {
            get PassiveFocusDiv() {
                return Ip
            },
            set PassiveFocusDiv(e) {
                Ip = e
            },
            get ActiveFocusDiv() {
                return Sp
            },
            set ActiveFocusDiv(e) {
                Sp = e
            }
        });
        var yp = ({children: e})=>{
            const t = fp();
            return (0,
            z.jsx)(Lh, {
                controller: t,
                children: e
            })
        }
        ;
        X.add("game-ui/common/focus/focus-root.tsx", {
            get FocusRoot() {
                return yp
            },
            set FocusRoot(e) {
                yp = e
            }
        });
        const jp = ["Debug UI"];
        var Cp = ["Move Horizontal", "Move Vertical", "Select", "Back", "Switch Tab"]
          , Np = Y.memo((function({includes: e, excludes: t=jp, disabled: n, children: s}) {
            const i = Ch("InputActionBarrier")
              , a = wh(i)
              , o = (0,
            Y.useCallback)((n=>{
                null != e ? n.removeWhere((t=>e.includes(t))) : null != t ? n.removeWhere((e=>!t.includes(e))) : n.clear()
            }
            ), [e, t])
              , r = Pg(a ? Cg.ActiveOnFocus : Cg.Disabled, n ? null : o);
            return (0,
            z.jsx)(Lh, {
                controller: i,
                children: (0,
                z.jsx)(wg.Provider, {
                    value: r,
                    children: s
                })
            })
        }
        ), ((e,t)=>Kr(e, t) && Kr(e.includes, t.includes) && Kr(e.excludes, t.excludes)));
        X.add("game-ui/common/input-events/input-action-barrier.tsx", {
            get navActions() {
                return Cp
            },
            set navActions(e) {
                Cp = e
            },
            get InputActionBarrier() {
                return Np
            },
            set InputActionBarrier(e) {
                Np = e
            }
        });
        var wp, Op = ({onSelectedStateChanged: e, children: t})=>{
            const [n,s] = (0,
            Y.useState)(!1)
              , i = Ch("SelectableFocusBoundary", !0, n);
            Ph(i, (0,
            Y.useCallback)((t=>{
                t || (s(!1),
                e && e(!1))
            }
            ), [e]));
            const a = (0,
            Y.useMemo)((()=>({
                Select: n ? null : ()=>{
                    s(!0),
                    e && e(!0)
                }
                ,
                Back: n ? ()=>{
                    s(!1),
                    e && e(!1)
                }
                : null
            })), [n, e]);
            return (0,
            z.jsx)(Np, {
                includes: Cp,
                disabled: !n,
                children: (0,
                z.jsx)(Mg, {
                    actions: a,
                    children: (0,
                    z.jsx)(Lh, {
                        controller: i,
                        children: t
                    })
                })
            })
        }
        ;
        function Pp(e, t=1) {
            const n = (0,
            Y.useRef)(e);
            return Kr(e, n.current, t) || (n.current = e),
            n.current
        }
        function Lp(e, t, n=void 0) {
            const s = sl(Em)
              , i = Pp(e ? {
                action: e,
                controlScheme: n ?? s
            } : void 0, 2)
              , a = ll(Om, i);
            return (0,
            Y.useMemo)((()=>t ? a : void 0), [t, a])
        }
        X.add("game-ui/common/focus/selectable-focus-boundary.tsx", {
            get SelectableFocusBoundary() {
                return Op
            },
            set SelectableFocusBoundary(e) {
                Op = e
            }
        }),
        X.add("game-ui/common/focus/index.ts", {}),
        X.add("game-ui/common/hooks/use-shallow-memoize.tsx", {
            get useShallowMemoize() {
                return Pp
            },
            set useShallowMemoize(e) {
                Pp = e
            }
        }),
        X.add("game-ui/common/input-events/action-hints/use-input-hint-data.tsx", {
            get useInputHintData() {
                return Lp
            },
            set useInputHintData(e) {
                Lp = e
            }
        }),
        function(e) {
            e[e.FallbackToLong = 1] = "FallbackToLong",
            e[e.FallbackToControl = 2] = "FallbackToControl"
        }(wp || (wp = {}));
        var Ap = lc("LocalizedInputPath", ((e,{binding: t, modifiers: n, short: s, gamepadType: i, keyboardLayout: a, layoutMap: o})=>{
            if ("" !== t.name) {
                const r = _c.Options.INPUT_MODIFIER_SEPARATOR.renderString(e, {
                    fallback: " + "
                });
                return [...n, t].map((t=>{
                    "Keyboard" === t.device && a === _l.AutoDetect && o && o[t.name] && (t = o[t.name]);
                    const n = `${t.device}.${t.name}`
                      , r = (s ? _c.Options.INPUT_CONTROL_SHORT : _c.Options.INPUT_CONTROL).renderString(e, {
                        hash: n,
                        fallback: s === wp.FallbackToLong ? _c.Options.INPUT_CONTROL.renderString(e, {
                            hash: n,
                            fallback: t.displayName ?? t.name
                        }) : t.displayName ?? t.name
                    });
                    if ("Gamepad" === t.device) {
                        if (i === _m.PS)
                            return (s ? _c.Options.INPUT_CONTROL_SHORT_PS : _c.Options.INPUT_CONTROL_PS).renderString(e, {
                                hash: n,
                                fallback: s === wp.FallbackToLong ? _c.Options.INPUT_CONTROL_PS.renderString(e, {
                                    hash: n,
                                    fallback: r
                                }) : r
                            });
                        if (i === _m.Xbox)
                            return (s ? _c.Options.INPUT_CONTROL_SHORT_XBOX : _c.Options.INPUT_CONTROL_XBOX).renderString(e, {
                                hash: n,
                                fallback: s === wp.FallbackToLong ? _c.Options.INPUT_CONTROL_XBOX.renderString(e, {
                                    hash: n,
                                    fallback: r
                                }) : r
                            })
                    }
                    return r
                }
                )).join(r)
            }
            return _c.Options.INPUT_CONTROL_NA.renderString(e, {
                fallback: ""
            })
        }
        ), ((e,t)=>Kr(e, t)));
        function Mp(e) {
            const [t,n] = (0,
            Y.useState)(e)
              , s = (0,
            Y.useContext)(cd);
            return (0,
            Y.useEffect)((()=>{
                if (!s) {
                    const t = window.requestAnimationFrame((()=>{
                        s || n(e)
                    }
                    ));
                    return ()=>window.cancelAnimationFrame(t)
                }
            }
            ), [s, e]),
            t
        }
        X.add("game-ui/common/localization/localized-input-path.tsx", {
            get ShortInputPathOption() {
                return wp
            },
            set ShortInputPathOption(e) {
                wp = e
            },
            get LocalizedInputPath() {
                return Ap
            },
            set LocalizedInputPath(e) {
                Ap = e
            }
        });
        var Rp = ({children: e})=>{
            const t = Mp(e);
            return (0,
            z.jsx)(z.Fragment, {
                children: t
            })
        }
        ;
        X.add("game-ui/common/animations/use-exit-transition-lock.tsx", {
            get useExitTransitionLock() {
                return Mp
            },
            set useExitTransitionLock(e) {
                Mp = e
            },
            get ExitTransitionLock() {
                return Rp
            },
            set ExitTransitionLock(e) {
                Rp = e
            }
        });
        const kp = "user";
        var Dp, Fp, Up = $r(kp, "switchPromptVisible"), Bp = $r(kp, "avatar"), Gp = $r(kp, "userID"), Vp = $r(kp, "switchUserHintOverload");
        function Hp() {
            tl(kp, "switchUser")
        }
        function Kp(e) {
            return Dp[e]
        }
        function Wp(e=!1) {
            (0,
            Y.useEffect)((()=>{
                if (!e) {
                    const e = ()=>{}
                      , t = Cm.subscribe(e);
                    return ()=>t?.dispose()
                }
            }
            ), [e])
        }
        function zp(e=!1) {
            (0,
            Y.useEffect)((()=>{
                if (!e) {
                    const e = ()=>{}
                      , t = Nm.subscribe(e);
                    return ()=>t?.dispose()
                }
            }
            ), [e])
        }
        X.add("game-ui/common/data-binding/user-bindings.ts", {
            get switchPromptVisible() {
                return switchPromptVisible
            },
            set switchPromptVisible(e) {
                switchPromptVisible = e
            },
            get avatar() {
                return avatar
            },
            set avatar(e) {
                avatar = e
            },
            get userID() {
                return userID
            },
            set userID(e) {
                userID = e
            },
            get switchUserHintOverload() {
                return switchUserHintOverload
            },
            set switchUserHintOverload(e) {
                switchUserHintOverload = e
            },
            get switchUser() {
                return Hp
            },
            set switchUser(e) {
                Hp = e
            }
        }),
        function(e) {
            e[e.buttonSouth = 0] = "buttonSouth",
            e[e.buttonEast = 1] = "buttonEast",
            e[e.buttonWest = 2] = "buttonWest",
            e[e.buttonNorth = 3] = "buttonNorth",
            e[e.leftShoulder = 4] = "leftShoulder",
            e[e.rightShoulder = 5] = "rightShoulder",
            e[e.leftTrigger = 6] = "leftTrigger",
            e[e.rightTrigger = 7] = "rightTrigger",
            e[e.select = 8] = "select",
            e[e.start = 9] = "start",
            e[e.leftStickPress = 10] = "leftStickPress",
            e[e.rightStickPress = 11] = "rightStickPress",
            e[e.up = 12] = "up",
            e[e.down = 13] = "down",
            e[e.left = 14] = "left",
            e[e.right = 15] = "right"
        }(Dp || (Dp = {})),
        function(e) {
            e[e.leftStickX = 0] = "leftStickX",
            e[e.leftStickY = 1] = "leftStickY",
            e[e.RightStickX = 2] = "RightStickX",
            e[e.RightStickY = 3] = "RightStickY"
        }(Fp || (Fp = {})),
        X.add("game-ui/common/input-events/devices/gamepad.ts", {
            get GamepadButton() {
                return Dp
            },
            set GamepadButton(e) {
                Dp = e
            },
            get gamepadButtonFromString() {
                return Kp
            },
            set gamepadButtonFromString(e) {
                Kp = e
            },
            get GamepadAxis() {
                return Fp
            },
            set GamepadAxis(e) {
                Fp = e
            }
        }),
        X.add("game-ui/common/hooks/use-camera-action-barrier.tsx", {
            get useCameraActionBarrier() {
                return Wp
            },
            set useCameraActionBarrier(e) {
                Wp = e
            }
        });
        var Yp = ({children: e, ifFocused: t=!0, ifGamepad: n=!1})=>{
            const s = Dm()
              , i = wh((0,
            Y.useContext)(Ju));
            let a = !1;
            return t && !i && (a = !0),
            n && !s && (a = !0),
            zp(a),
            (0,
            z.jsx)(z.Fragment, {
                children: e
            })
        }
        ;
        function $p(e, t) {
            return t > 0 ? e.positive : t < 0 ? e.negative : void 0
        }
        function qp(e) {
            Qp(document.documentElement, e)
        }
        function Xp(e) {
            Qp(document.body, e)
        }
        function Qp(e, t) {
            (0,
            Y.useEffect)((()=>{
                if (null != t) {
                    const n = t.split(" ");
                    return e.classList.add(...n),
                    ()=>{
                        e.classList.remove(...n)
                    }
                }
            }
            ), [e, t])
        }
        X.add("game-ui/common/hooks/use-tool-action-barrier.tsx", {
            get useToolActionBarrier() {
                return zp
            },
            set useToolActionBarrier(e) {
                zp = e
            },
            get ToolActionBarrier() {
                return Yp
            },
            set ToolActionBarrier(e) {
                Yp = e
            }
        }),
        X.add("game-ui/common/utils/class-name.tsx", {
            get signStyle() {
                return $p
            },
            set signStyle(e) {
                $p = e
            },
            get useRootClassName() {
                return qp
            },
            set useRootClassName(e) {
                qp = e
            },
            get useBodyClassName() {
                return Xp
            },
            set useBodyClassName(e) {
                Xp = e
            }
        });
        var Zp = Vu({
            index: 0,
            version: 0
        }, "Unity.Entities.Entity");
        X.add("game-ui/common/data-binding/common-types.ts", {
            get nullEntity() {
                return Zp
            },
            set nullEntity(e) {
                Zp = e
            }
        });
        var Jp = $r("infoviews", "infoviews")
          , ef = $r("infoviews", "activeInfoview");
        function tf() {
            Wv(Fv.InfoviewMenu),
            sf()
        }
        function nf(e) {
            tl("infoviews", "setActiveInfoview", e)
        }
        function sf() {
            nf(Zp)
        }
        function af(e, t, n) {
            tl("infoviews", "setInfomodeActive", e, t, n)
        }
        var of = $r("electricityInfo", "electricityConsumption")
          , rf = $r("electricityInfo", "electricityProduction")
          , lf = $r("electricityInfo", "electricityTransmitted")
          , cf = $r("electricityInfo", "electricityExport")
          , uf = $r("electricityInfo", "electricityImport")
          , df = $r("electricityInfo", "electricityAvailability")
          , mf = $r("electricityInfo", "electricityTransmission")
          , hf = $r("electricityInfo", "electricityTrade")
          , gf = $r("electricityInfo", "batteryCharge")
          , pf = $r("waterInfo", "waterCapacity")
          , ff = $r("waterInfo", "waterConsumption")
          , xf = $r("waterInfo", "sewageCapacity")
          , vf = $r("waterInfo", "sewageConsumption")
          , _f = $r("waterInfo", "waterExport")
          , bf = $r("waterInfo", "waterImport")
          , Tf = $r("waterInfo", "sewageExport")
          , Ef = $r("waterInfo", "sewageAvailability")
          , If = $r("waterInfo", "waterAvailability")
          , Sf = $r("waterInfo", "waterTrade")
          , yf = $r("educationInfo", "elementaryEligible")
          , jf = $r("educationInfo", "highSchoolEligible")
          , Cf = $r("educationInfo", "collegeEligible")
          , Nf = $r("educationInfo", "universityEligible")
          , wf = $r("educationInfo", "elementaryCapacity")
          , Of = $r("educationInfo", "highSchoolCapacity")
          , Pf = $r("educationInfo", "collegeCapacity")
          , Lf = $r("educationInfo", "universityCapacity")
          , Af = $r("educationInfo", "educationData")
          , Mf = $r("educationInfo", "elementaryStudentCount")
          , Rf = $r("educationInfo", "highSchoolStudentCount")
          , kf = $r("educationInfo", "collegeStudentCount")
          , Df = $r("educationInfo", "universityStudentCount")
          , Ff = $r("educationInfo", "elementaryAvailability")
          , Uf = $r("educationInfo", "highSchoolAvailability")
          , Bf = $r("educationInfo", "collegeAvailability")
          , Gf = $r("educationInfo", "universityAvailability")
          , Vf = $r("transportInfo", "summaries")
          , Hf = $r("healthcareInfo", "averageHealth")
          , Kf = $r("healthcareInfo", "cemeteryUse")
          , Wf = $r("healthcareInfo", "cemeteryCapacity")
          , zf = $r("healthcareInfo", "deathRate")
          , Yf = $r("healthcareInfo", "processingRate")
          , $f = $r("healthcareInfo", "sickCount")
          , qf = $r("healthcareInfo", "patientCount")
          , Xf = $r("healthcareInfo", "patientCapacity")
          , Qf = $r("healthcareInfo", "healthcareAvailability")
          , Zf = $r("healthcareInfo", "deathcareAvailability")
          , Jf = $r("healthcareInfo", "cemeteryAvailability")
          , ex = $r("garbageInfo", "processingRate")
          , tx = $r("garbageInfo", "capacity")
          , nx = $r("garbageInfo", "processingAvailability")
          , sx = $r("garbageInfo", "landfillAvailability")
          , ix = $r("garbageInfo", "productionRate")
          , ax = $r("garbageInfo", "storedGarbage")
          , ox = $r("roadsInfo", "parkingCapacity")
          , rx = $r("roadsInfo", "parkingIncome")
          , lx = $r("roadsInfo", "parkedCars")
          , cx = $r("roadsInfo", "parkingAvailability")
          , ux = $r("trafficInfo", "trafficFlow")
          , dx = $r("pollutionInfo", "averageGroundPollution")
          , mx = $r("pollutionInfo", "averageAirPollution")
          , hx = $r("pollutionInfo", "averageWaterPollution")
          , gx = $r("pollutionInfo", "averageNoisePollution")
          , px = $r("fireAndRescueInfo", "averageFireHazard")
          , fx = $r("policeInfo", "averageCrimeProbability")
          , xx = $r("policeInfo", "jailAvailability")
          , vx = $r("policeInfo", "prisonAvailability")
          , _x = $r("policeInfo", "crimeProducers")
          , bx = $r("policeInfo", "crimeProbability")
          , Tx = $r("policeInfo", "jailCapacity")
          , Ex = $r("policeInfo", "arrestedCriminals")
          , Ix = $r("policeInfo", "inJail")
          , Sx = $r("policeInfo", "prisonCapacity")
          , yx = $r("policeInfo", "prisoners")
          , jx = $r("policeInfo", "inPrison")
          , Cx = $r("policeInfo", "criminals")
          , Nx = $r("policeInfo", "crimePerMonth")
          , wx = $r("policeInfo", "escapedRate")
          , Ox = $r("landValueInfo", "averageLandValue")
          , Px = $r("levelInfo", "residential")
          , Lx = $r("levelInfo", "commercial")
          , Ax = $r("levelInfo", "industrial")
          , Mx = $r("levelInfo", "office")
          , Rx = $r("disasterInfo", "shelteredCount")
          , kx = $r("disasterInfo", "shelterCapacity")
          , Dx = $r("disasterInfo", "shelterAvailability")
          , Fx = $r("tourismInfo", "attractiveness")
          , Ux = $r("tourismInfo", "averageHotelPrice")
          , Bx = $r("tourismInfo", "tourismRate")
          , Gx = $r("tourismInfo", "weatherEffect")
          , Vx = $r("postInfo", "mailProductionRate")
          , Hx = $r("postInfo", "collectedMail")
          , Kx = $r("postInfo", "deliveredMail")
          , Wx = $r("postInfo", "postServiceAvailability")
          , zx = $r("populationInfo", "population")
          , Yx = $r("populationInfo", "employed")
          , $x = $r("populationInfo", "jobs")
          , qx = $r("populationInfo", "unemployment")
          , Xx = $r("populationInfo", "birthRate")
          , Qx = $r("populationInfo", "homeless")
          , Zx = $r("populationInfo", "homelessness")
          , Jx = $r("populationInfo", "movedIn")
          , ev = $r("populationInfo", "movedAway")
          , tv = $r("populationInfo", "ageData")
          , nv = $r("companyInfoview", "commercialProfitability")
          , sv = $r("companyInfoview", "industrialProfitability")
          , iv = $r("companyInfoview", "officeProfitability")
          , av = $r("outsideInfo", "topImportNames")
          , ov = $r("outsideInfo", "topImportColors")
          , rv = $r("outsideInfo", "topImportData")
          , lv = $r("outsideInfo", "topExportNames")
          , cv = $r("outsideInfo", "topExportColors")
          , uv = $r("outsideInfo", "topExportData")
          , dv = $r("naturalResourceInfo", "availableOil")
          , mv = $r("naturalResourceInfo", "availableOre")
          , hv = $r("naturalResourceInfo", "availableForest")
          , gv = $r("naturalResourceInfo", "availableFertility")
          , pv = $r("naturalResourceInfo", "oilExtractionRate")
          , fv = $r("naturalResourceInfo", "oreExtractionRate")
          , xv = $r("naturalResourceInfo", "forestExtractionRate")
          , vv = $r("naturalResourceInfo", "fertilityExtractionRate")
          , _v = $r("naturalResourceInfo", "forestRenewalRate")
          , bv = $r("naturalResourceInfo", "fertilityRenewalRate")
          , Tv = $r("naturalResourceInfo", "availableFish")
          , Ev = $r("naturalResourceInfo", "fishExtractionRate")
          , Iv = $r("naturalResourceInfo", "fishRenewalRate")
          , Sv = $r("workplaces", "workplacesData")
          , yv = $r("workplaces", "employeesData")
          , jv = $r("workplaces", "workplaces")
          , Cv = $r("workplaces", "employees");
        function Nv(e) {
            const t = sl(ef)
              , n = sl(Jp)
              , s = (0,
            Y.useMemo)((()=>n.find((t=>t.id === e))), [e, n])
              , i = (0,
            Y.useMemo)((()=>!!s && Ur(s.entity, t?.entity)), [t?.entity, s])
              , a = (0,
            Y.useMemo)((()=>!s || s.locked), [s])
              , o = (0,
            Y.useCallback)((()=>{
                s && nf(i ? Zp : s.entity)
            }
            ), [s, i]);
            if (!a && s)
                return o
        }
        X.add("game-ui/game/data-binding/infoview-bindings.ts", {
            get infoviews() {
                return infoviews
            },
            set infoviews(e) {
                infoviews = e
            },
            get activeInfoview() {
                return activeInfoview
            },
            set activeInfoview(e) {
                activeInfoview = e
            },
            get closeInfoviewMenu() {
                return tf
            },
            set closeInfoviewMenu(e) {
                tf = e
            },
            get setActiveInfoview() {
                return nf
            },
            set setActiveInfoview(e) {
                nf = e
            },
            get clearActiveInfoview() {
                return sf
            },
            set clearActiveInfoview(e) {
                sf = e
            },
            get setInfomodeActive() {
                return af
            },
            set setInfomodeActive(e) {
                af = e
            },
            get electricityConsumption() {
                return electricityConsumption
            },
            set electricityConsumption(e) {
                electricityConsumption = e
            },
            get electricityProduction() {
                return electricityProduction
            },
            set electricityProduction(e) {
                electricityProduction = e
            },
            get electricityTransmitted() {
                return electricityTransmitted
            },
            set electricityTransmitted(e) {
                electricityTransmitted = e
            },
            get electricityExport() {
                return electricityExport
            },
            set electricityExport(e) {
                electricityExport = e
            },
            get electricityImport() {
                return electricityImport
            },
            set electricityImport(e) {
                electricityImport = e
            },
            get electricityAvailability() {
                return electricityAvailability
            },
            set electricityAvailability(e) {
                electricityAvailability = e
            },
            get electricityTransmission() {
                return electricityTransmission
            },
            set electricityTransmission(e) {
                electricityTransmission = e
            },
            get electricityTrade() {
                return electricityTrade
            },
            set electricityTrade(e) {
                electricityTrade = e
            },
            get batteryCharge() {
                return batteryCharge
            },
            set batteryCharge(e) {
                batteryCharge = e
            },
            get waterCapacity() {
                return waterCapacity
            },
            set waterCapacity(e) {
                waterCapacity = e
            },
            get waterConsumption() {
                return waterConsumption
            },
            set waterConsumption(e) {
                waterConsumption = e
            },
            get sewageCapacity() {
                return sewageCapacity
            },
            set sewageCapacity(e) {
                sewageCapacity = e
            },
            get sewageConsumption() {
                return sewageConsumption
            },
            set sewageConsumption(e) {
                sewageConsumption = e
            },
            get waterExport() {
                return waterExport
            },
            set waterExport(e) {
                waterExport = e
            },
            get waterImport() {
                return waterImport
            },
            set waterImport(e) {
                waterImport = e
            },
            get sewageExport() {
                return sewageExport
            },
            set sewageExport(e) {
                sewageExport = e
            },
            get sewageAvailability() {
                return sewageAvailability
            },
            set sewageAvailability(e) {
                sewageAvailability = e
            },
            get waterAvailability() {
                return waterAvailability
            },
            set waterAvailability(e) {
                waterAvailability = e
            },
            get waterTrade() {
                return waterTrade
            },
            set waterTrade(e) {
                waterTrade = e
            },
            get elementaryEligible() {
                return elementaryEligible
            },
            set elementaryEligible(e) {
                elementaryEligible = e
            },
            get highSchoolEligible() {
                return highSchoolEligible
            },
            set highSchoolEligible(e) {
                highSchoolEligible = e
            },
            get collegeEligible() {
                return collegeEligible
            },
            set collegeEligible(e) {
                collegeEligible = e
            },
            get universityEligible() {
                return universityEligible
            },
            set universityEligible(e) {
                universityEligible = e
            },
            get elementaryCapacity() {
                return elementaryCapacity
            },
            set elementaryCapacity(e) {
                elementaryCapacity = e
            },
            get highSchoolCapacity() {
                return highSchoolCapacity
            },
            set highSchoolCapacity(e) {
                highSchoolCapacity = e
            },
            get collegeCapacity() {
                return collegeCapacity
            },
            set collegeCapacity(e) {
                collegeCapacity = e
            },
            get universityCapacity() {
                return universityCapacity
            },
            set universityCapacity(e) {
                universityCapacity = e
            },
            get educationData() {
                return educationData
            },
            set educationData(e) {
                educationData = e
            },
            get elementaryStudents() {
                return elementaryStudents
            },
            set elementaryStudents(e) {
                elementaryStudents = e
            },
            get highSchoolStudents() {
                return highSchoolStudents
            },
            set highSchoolStudents(e) {
                highSchoolStudents = e
            },
            get collegeStudents() {
                return collegeStudents
            },
            set collegeStudents(e) {
                collegeStudents = e
            },
            get universityStudents() {
                return universityStudents
            },
            set universityStudents(e) {
                universityStudents = e
            },
            get elementaryAvailability() {
                return elementaryAvailability
            },
            set elementaryAvailability(e) {
                elementaryAvailability = e
            },
            get highSchoolAvailability() {
                return highSchoolAvailability
            },
            set highSchoolAvailability(e) {
                highSchoolAvailability = e
            },
            get collegeAvailability() {
                return collegeAvailability
            },
            set collegeAvailability(e) {
                collegeAvailability = e
            },
            get universityAvailability() {
                return universityAvailability
            },
            set universityAvailability(e) {
                universityAvailability = e
            },
            get transportSummaries() {
                return transportSummaries
            },
            set transportSummaries(e) {
                transportSummaries = e
            },
            get averageHealth() {
                return averageHealth
            },
            set averageHealth(e) {
                averageHealth = e
            },
            get cemeteryUse() {
                return cemeteryUse
            },
            set cemeteryUse(e) {
                cemeteryUse = e
            },
            get cemeteryCapacity() {
                return cemeteryCapacity
            },
            set cemeteryCapacity(e) {
                cemeteryCapacity = e
            },
            get deathRate() {
                return deathRate
            },
            set deathRate(e) {
                deathRate = e
            },
            get processingRate() {
                return processingRate
            },
            set processingRate(e) {
                processingRate = e
            },
            get sickCount() {
                return sickCount
            },
            set sickCount(e) {
                sickCount = e
            },
            get patientCount() {
                return patientCount
            },
            set patientCount(e) {
                patientCount = e
            },
            get patientCapacity() {
                return patientCapacity
            },
            set patientCapacity(e) {
                patientCapacity = e
            },
            get healthcareAvailability() {
                return healthcareAvailability
            },
            set healthcareAvailability(e) {
                healthcareAvailability = e
            },
            get deathcareAvailability() {
                return deathcareAvailability
            },
            set deathcareAvailability(e) {
                deathcareAvailability = e
            },
            get cemeteryAvailability() {
                return cemeteryAvailability
            },
            set cemeteryAvailability(e) {
                cemeteryAvailability = e
            },
            get garbageProcessingRate() {
                return garbageProcessingRate
            },
            set garbageProcessingRate(e) {
                garbageProcessingRate = e
            },
            get landfillCapacity() {
                return landfillCapacity
            },
            set landfillCapacity(e) {
                landfillCapacity = e
            },
            get processingAvailability() {
                return processingAvailability
            },
            set processingAvailability(e) {
                processingAvailability = e
            },
            get landfillAvailability() {
                return landfillAvailability
            },
            set landfillAvailability(e) {
                landfillAvailability = e
            },
            get garbageProductionRate() {
                return garbageProductionRate
            },
            set garbageProductionRate(e) {
                garbageProductionRate = e
            },
            get storedGarbage() {
                return storedGarbage
            },
            set storedGarbage(e) {
                storedGarbage = e
            },
            get parkingCapacity() {
                return parkingCapacity
            },
            set parkingCapacity(e) {
                parkingCapacity = e
            },
            get parkingIncome() {
                return parkingIncome
            },
            set parkingIncome(e) {
                parkingIncome = e
            },
            get parkedCars() {
                return parkedCars
            },
            set parkedCars(e) {
                parkedCars = e
            },
            get parkingAvailability() {
                return parkingAvailability
            },
            set parkingAvailability(e) {
                parkingAvailability = e
            },
            get trafficFlow() {
                return trafficFlow
            },
            set trafficFlow(e) {
                trafficFlow = e
            },
            get averageGroundPollution() {
                return averageGroundPollution
            },
            set averageGroundPollution(e) {
                averageGroundPollution = e
            },
            get averageAirPollution() {
                return averageAirPollution
            },
            set averageAirPollution(e) {
                averageAirPollution = e
            },
            get averageWaterPollution() {
                return averageWaterPollution
            },
            set averageWaterPollution(e) {
                averageWaterPollution = e
            },
            get averageNoisePollution() {
                return averageNoisePollution
            },
            set averageNoisePollution(e) {
                averageNoisePollution = e
            },
            get averageFireHazard() {
                return averageFireHazard
            },
            set averageFireHazard(e) {
                averageFireHazard = e
            },
            get averageCrimeProbability() {
                return averageCrimeProbability
            },
            set averageCrimeProbability(e) {
                averageCrimeProbability = e
            },
            get jailAvailability() {
                return jailAvailability
            },
            set jailAvailability(e) {
                jailAvailability = e
            },
            get prisonAvailability() {
                return prisonAvailability
            },
            set prisonAvailability(e) {
                prisonAvailability = e
            },
            get crimeProducers() {
                return crimeProducers
            },
            set crimeProducers(e) {
                crimeProducers = e
            },
            get crimeProbability() {
                return crimeProbability
            },
            set crimeProbability(e) {
                crimeProbability = e
            },
            get jailCapacity() {
                return jailCapacity
            },
            set jailCapacity(e) {
                jailCapacity = e
            },
            get arrestedCriminals() {
                return arrestedCriminals
            },
            set arrestedCriminals(e) {
                arrestedCriminals = e
            },
            get inJail() {
                return inJail
            },
            set inJail(e) {
                inJail = e
            },
            get prisonCapacity() {
                return prisonCapacity
            },
            set prisonCapacity(e) {
                prisonCapacity = e
            },
            get prisoners() {
                return prisoners
            },
            set prisoners(e) {
                prisoners = e
            },
            get inPrison() {
                return inPrison
            },
            set inPrison(e) {
                inPrison = e
            },
            get criminals() {
                return criminals
            },
            set criminals(e) {
                criminals = e
            },
            get crimePerMonth() {
                return crimePerMonth
            },
            set crimePerMonth(e) {
                crimePerMonth = e
            },
            get escapedRate() {
                return escapedRate
            },
            set escapedRate(e) {
                escapedRate = e
            },
            get averageLandValue() {
                return averageLandValue
            },
            set averageLandValue(e) {
                averageLandValue = e
            },
            get residentialLevels() {
                return residentialLevels
            },
            set residentialLevels(e) {
                residentialLevels = e
            },
            get commercialLevels() {
                return commercialLevels
            },
            set commercialLevels(e) {
                commercialLevels = e
            },
            get industrialLevels() {
                return industrialLevels
            },
            set industrialLevels(e) {
                industrialLevels = e
            },
            get officeLevels() {
                return officeLevels
            },
            set officeLevels(e) {
                officeLevels = e
            },
            get shelteredCount() {
                return shelteredCount
            },
            set shelteredCount(e) {
                shelteredCount = e
            },
            get shelterCapacity() {
                return shelterCapacity
            },
            set shelterCapacity(e) {
                shelterCapacity = e
            },
            get shelterAvailability() {
                return shelterAvailability
            },
            set shelterAvailability(e) {
                shelterAvailability = e
            },
            get attractiveness() {
                return attractiveness
            },
            set attractiveness(e) {
                attractiveness = e
            },
            get averageHotelPrice() {
                return averageHotelPrice
            },
            set averageHotelPrice(e) {
                averageHotelPrice = e
            },
            get tourismRate() {
                return tourismRate
            },
            set tourismRate(e) {
                tourismRate = e
            },
            get weatherEffect() {
                return weatherEffect
            },
            set weatherEffect(e) {
                weatherEffect = e
            },
            get mailProductionRate() {
                return mailProductionRate
            },
            set mailProductionRate(e) {
                mailProductionRate = e
            },
            get collectedMail() {
                return collectedMail
            },
            set collectedMail(e) {
                collectedMail = e
            },
            get deliveredMail() {
                return deliveredMail
            },
            set deliveredMail(e) {
                deliveredMail = e
            },
            get postServiceAvailability() {
                return postServiceAvailability
            },
            set postServiceAvailability(e) {
                postServiceAvailability = e
            },
            get population() {
                return population
            },
            set population(e) {
                population = e
            },
            get employed() {
                return employed
            },
            set employed(e) {
                employed = e
            },
            get jobs() {
                return jobs
            },
            set jobs(e) {
                jobs = e
            },
            get unemployment() {
                return unemployment
            },
            set unemployment(e) {
                unemployment = e
            },
            get birthRate() {
                return birthRate
            },
            set birthRate(e) {
                birthRate = e
            },
            get homeless() {
                return homeless
            },
            set homeless(e) {
                homeless = e
            },
            get homelessness() {
                return homelessness
            },
            set homelessness(e) {
                homelessness = e
            },
            get movedIn() {
                return movedIn
            },
            set movedIn(e) {
                movedIn = e
            },
            get movedAway() {
                return movedAway
            },
            set movedAway(e) {
                movedAway = e
            },
            get ageData() {
                return ageData
            },
            set ageData(e) {
                ageData = e
            },
            get commercialProfitability() {
                return commercialProfitability
            },
            set commercialProfitability(e) {
                commercialProfitability = e
            },
            get industrialProfitability() {
                return industrialProfitability
            },
            set industrialProfitability(e) {
                industrialProfitability = e
            },
            get officeProfitability() {
                return officeProfitability
            },
            set officeProfitability(e) {
                officeProfitability = e
            },
            get topImportNames() {
                return topImportNames
            },
            set topImportNames(e) {
                topImportNames = e
            },
            get topImportColors() {
                return topImportColors
            },
            set topImportColors(e) {
                topImportColors = e
            },
            get topImportData() {
                return topImportData
            },
            set topImportData(e) {
                topImportData = e
            },
            get topExportNames() {
                return topExportNames
            },
            set topExportNames(e) {
                topExportNames = e
            },
            get topExportColors() {
                return topExportColors
            },
            set topExportColors(e) {
                topExportColors = e
            },
            get topExportData() {
                return topExportData
            },
            set topExportData(e) {
                topExportData = e
            },
            get availableOil() {
                return availableOil
            },
            set availableOil(e) {
                availableOil = e
            },
            get availableOre() {
                return availableOre
            },
            set availableOre(e) {
                availableOre = e
            },
            get availableForest() {
                return availableForest
            },
            set availableForest(e) {
                availableForest = e
            },
            get availableFertility() {
                return availableFertility
            },
            set availableFertility(e) {
                availableFertility = e
            },
            get oilExtractionRate() {
                return oilExtractionRate
            },
            set oilExtractionRate(e) {
                oilExtractionRate = e
            },
            get oreExtractionRate() {
                return oreExtractionRate
            },
            set oreExtractionRate(e) {
                oreExtractionRate = e
            },
            get forestExtractionRate() {
                return forestExtractionRate
            },
            set forestExtractionRate(e) {
                forestExtractionRate = e
            },
            get fertilityExtractionRate() {
                return fertilityExtractionRate
            },
            set fertilityExtractionRate(e) {
                fertilityExtractionRate = e
            },
            get forestRenewalRate() {
                return forestRenewalRate
            },
            set forestRenewalRate(e) {
                forestRenewalRate = e
            },
            get fertilityRenewalRate() {
                return fertilityRenewalRate
            },
            set fertilityRenewalRate(e) {
                fertilityRenewalRate = e
            },
            get availableFish() {
                return availableFish
            },
            set availableFish(e) {
                availableFish = e
            },
            get fishExtractionRate() {
                return fishExtractionRate
            },
            set fishExtractionRate(e) {
                fishExtractionRate = e
            },
            get fishRenewalRate() {
                return fishRenewalRate
            },
            set fishRenewalRate(e) {
                fishRenewalRate = e
            },
            get workplacesData() {
                return workplacesData
            },
            set workplacesData(e) {
                workplacesData = e
            },
            get employeesData() {
                return employeesData
            },
            set employeesData(e) {
                employeesData = e
            },
            get worksplaces() {
                return worksplaces
            },
            set worksplaces(e) {
                worksplaces = e
            },
            get workers() {
                return workers
            },
            set workers(e) {
                workers = e
            },
            get useInfoviewToggle() {
                return Nv
            },
            set useInfoviewToggle(e) {
                Nv = e
            }
        });
        const wv = "game";
        var Ov;
        !function(e) {
            e[e.main = 0] = "main",
            e[e.freeCamera = 1] = "freeCamera",
            e[e.pauseMenu = 10] = "pauseMenu",
            e[e.saveGame = 11] = "saveGame",
            e[e.newGame = 12] = "newGame",
            e[e.loadGame = 13] = "loadGame",
            e[e.options = 14] = "options"
        }(Ov || (Ov = {}));
        var Pv, Lv = $r(wv, "activeScreen"), Av = el(wv, "setActiveScreen"), Mv = $r(wv, "canUseSaveSystem");
        function Rv() {
            Av(Ov.main)
        }
        function kv() {
            Av(Ov.pauseMenu)
        }
        function Dv() {
            Av(Ov.freeCamera)
        }
        !function(e) {
            e[e.Undefined = 0] = "Undefined",
            e[e.Left = 1] = "Left",
            e[e.Center = 2] = "Center",
            e[e.Right = 3] = "Right"
        }(Pv || (Pv = {}));
        var Fv, Uv, Bv = $r(wv, "activePanel"), Gv = $r(wv, "blockingPanelActive"), Vv = $r(wv, "activePanelPosition"), Hv = el(wv, "togglePanel"), Kv = el(wv, "showPanel"), Wv = el(wv, "closePanel"), zv = Jr(wv, "closeActivePanel");
        function Yv() {
            Gu(Bv.value, Fv.InfoviewMenu) ? (sf(),
            Wv(Fv.InfoviewMenu)) : Kv(Fv.InfoviewMenu)
        }
        !function(e) {
            e.InfoviewMenu = "Game.UI.InGame.InfoviewMenu",
            e.Progression = "Game.UI.InGame.ProgressionPanel",
            e.Economy = "Game.UI.InGame.EconomyPanel",
            e.CityInfo = "Game.UI.InGame.CityInfoPanel",
            e.Statistics = "Game.UI.InGame.StatisticsPanel",
            e.TransportationOverview = "Game.UI.InGame.TransportationOverviewPanel",
            e.Chirper = "Game.UI.InGame.ChirperPanel",
            e.LifePath = "Game.UI.InGame.LifePathPanel",
            e.Journal = "Game.UI.InGame.JournalPanel",
            e.Radio = "Game.UI.InGame.RadioPanel",
            e.PhotoMode = "Game.UI.InGame.PhotoModePanel",
            e.CinematicCamera = "Game.UI.InGame.CinematicCameraPanel",
            e.Notifications = "Game.UI.InGame.NotificationsPanel"
        }(Fv || (Fv = {})),
        function(e) {
            e[e.Development = 0] = "Development",
            e[e.Milestones = 1] = "Milestones",
            e[e.Achievements = 2] = "Achievements"
        }(Uv || (Uv = {}));
        var $v, qv = el(wv, "showProgressionPanel");
        !function(e) {
            e[e.Budget = 0] = "Budget",
            e[e.Loan = 1] = "Loan",
            e[e.Taxation = 2] = "Taxation",
            e[e.Services = 3] = "Services",
            e[e.Production = 4] = "Production"
        }($v || ($v = {}));
        var Xv, Qv = el(wv, "showEconomyPanel");
        !function(e) {
            e[e.Demand = 0] = "Demand",
            e[e.Policies = 1] = "Policies"
        }(Xv || (Xv = {}));
        var Zv, Jv = el(wv, "showCityInfoPanel"), e_ = el(wv, "showTransportationOverviewPanel");
        function t_() {
            Hv(Fv.LifePath)
        }
        function n_() {
            Kv(Fv.LifePath)
        }
        !function(e) {
            e[e.PublicTransport = 0] = "PublicTransport",
            e[e.Cargo = 1] = "Cargo"
        }(Zv || (Zv = {}));
        var s_ = el(wv, "showLifePathDetail");
        function i_() {
            Hv(Fv.Radio)
        }
        function a_() {
            Hv(Fv.TransportationOverview)
        }
        X.add("game-ui/game/data-binding/game-bindings.ts", {
            get GameScreen() {
                return Ov
            },
            set GameScreen(e) {
                Ov = e
            },
            get activeGameScreen() {
                return activeGameScreen
            },
            set activeGameScreen(e) {
                activeGameScreen = e
            },
            get setActiveGameScreen() {
                return Av
            },
            set setActiveGameScreen(e) {
                Av = e
            },
            get canUseSaveSystem() {
                return canUseSaveSystem
            },
            set canUseSaveSystem(e) {
                canUseSaveSystem = e
            },
            get showMainScreen() {
                return Rv
            },
            set showMainScreen(e) {
                Rv = e
            },
            get showPauseScreen() {
                return kv
            },
            set showPauseScreen(e) {
                kv = e
            },
            get showFreeCameraScreen() {
                return Dv
            },
            set showFreeCameraScreen(e) {
                Dv = e
            },
            get LayoutPosition() {
                return Pv
            },
            set LayoutPosition(e) {
                Pv = e
            },
            get activeGamePanel() {
                return activeGamePanel
            },
            set activeGamePanel(e) {
                activeGamePanel = e
            },
            get blockingPanelActive() {
                return blockingPanelActive
            },
            set blockingPanelActive(e) {
                blockingPanelActive = e
            },
            get activePanelPosition() {
                return activePanelPosition
            },
            set activePanelPosition(e) {
                activePanelPosition = e
            },
            get toggleGamePanel() {
                return Hv
            },
            set toggleGamePanel(e) {
                Hv = e
            },
            get showGamePanel() {
                return Kv
            },
            set showGamePanel(e) {
                Kv = e
            },
            get closeGamePanel() {
                return Wv
            },
            set closeGamePanel(e) {
                Wv = e
            },
            get closeActiveGamePanel() {
                return zv
            },
            set closeActiveGamePanel(e) {
                zv = e
            },
            get GamePanelType() {
                return Fv
            },
            set GamePanelType(e) {
                Fv = e
            },
            get toggleInfoviewMenu() {
                return Yv
            },
            set toggleInfoviewMenu(e) {
                Yv = e
            },
            get ProgressionPanelTab() {
                return Uv
            },
            set ProgressionPanelTab(e) {
                Uv = e
            },
            get showProgressionPanel() {
                return qv
            },
            set showProgressionPanel(e) {
                qv = e
            },
            get EconomyPanelTab() {
                return $v
            },
            set EconomyPanelTab(e) {
                $v = e
            },
            get showEconomyPanel() {
                return Qv
            },
            set showEconomyPanel(e) {
                Qv = e
            },
            get CityInfoPanelTab() {
                return Xv
            },
            set CityInfoPanelTab(e) {
                Xv = e
            },
            get showCityInfoPanel() {
                return Jv
            },
            set showCityInfoPanel(e) {
                Jv = e
            },
            get showTransportationOverviewPanel() {
                return e_
            },
            set showTransportationOverviewPanel(e) {
                e_ = e
            },
            get TransportationOverviewPanelTab() {
                return Zv
            },
            set TransportationOverviewPanelTab(e) {
                Zv = e
            },
            get toggleLifePathPanel() {
                return t_
            },
            set toggleLifePathPanel(e) {
                t_ = e
            },
            get showLifePathList() {
                return n_
            },
            set showLifePathList(e) {
                n_ = e
            },
            get showLifePathDetail() {
                return s_
            },
            set showLifePathDetail(e) {
                s_ = e
            },
            get toggleRadioPanel() {
                return i_
            },
            set toggleRadioPanel(e) {
                i_ = e
            },
            get toggleTransportationOverviewPanel() {
                return a_
            },
            set toggleTransportationOverviewPanel(e) {
                a_ = e
            }
        });
        let o_ = {
            "panel-backdrop": "panel-backdrop_HbC",
            panelBackdrop: "panel-backdrop_HbC",
            "backdrop-visible": "backdrop-visible_GA6",
            backdropVisible: "backdrop-visible_GA6"
        };
        X.add("game-ui/common/panel/panel-backdrop.module.scss", {
            get classes() {
                return o_
            },
            set classes(e) {
                Object.assign(o_, e)
            }
        });
        const r_ = o_;
        var l_ = ({className: e, children: t, onMouseDown: n})=>{
            const s = sl(Lv);
            zp(),
            Wp(s === Ov.freeCamera),
            Xp(r_.backdropVisible);
            const i = (0,
            Y.useCallback)((e=>{
                e.target === e.currentTarget && n && n()
            }
            ), [n]);
            return (0,
            z.jsx)(c_.Provider, {
                value: !0,
                children: (0,
                z.jsx)("div", {
                    className: Zu()(r_.panelBackdrop, e),
                    onMouseDown: i,
                    children: t
                })
            })
        }
        ;
        const c_ = Y.createContext(!1);
        var u_ = ()=>{
            const e = (0,
            Y.useContext)(c_);
            return (0,
            Y.useMemo)((()=>{
                if (e)
                    return {
                        zIndex: 1e4
                    }
            }
            ), [e])
        }
        ;
        X.add("game-ui/common/panel/panel-backdrop.tsx", {
            get PanelBackdrop() {
                return l_
            },
            set PanelBackdrop(e) {
                l_ = e
            },
            get usePanelBackdropStyle() {
                return u_
            },
            set usePanelBackdropStyle(e) {
                u_ = e
            }
        });
        let d_ = {
            "pointer-barrier": "pointer-barrier_etG",
            pointerBarrier: "pointer-barrier_etG"
        };
        X.add("game-ui/common/input-events/pointer-barrier/pointer-barrier.module.scss", {
            get classes() {
                return d_
            },
            set classes(e) {
                Object.assign(d_, e)
            }
        });
        const m_ = d_;
        var h_ = ({onClick: e})=>{
            const t = u_();
            return (0,
            z.jsx)(zm, {
                children: (0,
                z.jsx)("div", {
                    className: m_.pointerBarrier,
                    onClick: e,
                    style: t
                })
            })
        }
        ;
        X.add("game-ui/common/input-events/pointer-barrier/pointer-barrier.tsx", {
            get PointerBarrier() {
                return h_
            },
            set PointerBarrier(e) {
                h_ = e
            }
        });
        let g_ = {
            "input-stack-debug-display": "input-stack-debug-display_lFP",
            inputStackDebugDisplay: "input-stack-debug-display_lFP"
        };
        X.add("game-ui/common/input-events/debug/input-stack-debug-display.module.scss", {
            get classes() {
                return g_
            },
            set classes(e) {
                Object.assign(g_, e)
            }
        });
        const p_ = g_;
        var f_ = ({actions: e})=>(0,
        z.jsx)("div", {
            className: p_.inputStackDebugDisplay,
            children: e
        });
        X.add("game-ui/common/input-events/debug/input-stack-debug-display.tsx", {
            get InputStackDebugDisplay() {
                return f_
            },
            set InputStackDebugDisplay(e) {
                f_ = e
            }
        });
        const x_ = "input";
        var v_ = $r(x_, "actionNames")
          , __ = Zr(x_, "onActionPerformed")
          , b_ = Zr(x_, "onActionReleased")
          , T_ = Zr(x_, "onActionsRefreshed");
        const E_ = new Map;
        function I_(e, t, n) {
            (n || E_.get(e) !== t) && (tl(x_, "setActionPriority", e, t),
            E_.set(e, t))
        }
        X.add("game-ui/common/input-events/input-bindings.ts", {
            get inputActionNames() {
                return inputActionNames
            },
            set inputActionNames(e) {
                inputActionNames = e
            },
            get onInputActionPerformed() {
                return onInputActionPerformed
            },
            set onInputActionPerformed(e) {
                onInputActionPerformed = e
            },
            get onInputActionReleased() {
                return onInputActionReleased
            },
            set onInputActionReleased(e) {
                onInputActionReleased = e
            },
            get onInputActionsRefreshed() {
                return onInputActionsRefreshed
            },
            set onInputActionsRefreshed(e) {
                onInputActionsRefreshed = e
            },
            get setInputActionPriority() {
                return I_
            },
            set setInputActionPriority(e) {
                I_ = e
            }
        });
        class S_ {
            _items = [];
            contains(e) {
                return -1 !== this.indexOf(e)
            }
            indexOf(e) {
                return this._items.findIndex((t=>t.action === e))
            }
            push(e, t) {
                this._items = [...this._items, new y_(e,t)]
            }
            removeWhere(e) {
                this._items = this._items.filter((t=>!e(t.action)))
            }
            clear() {
                this._items = []
            }
            dispatchInputEvent(e, t) {
                for (let n = this._items.length - 1; n >= 0; n--) {
                    const s = this._items[n];
                    if (s.action === e) {
                        if (!1 !== s.callback(t))
                            return !0
                    }
                }
                return !1
            }
            debugPrint() {
                console.log(`Input Stack:\n${this._items.map((e=>e.action)).join("\n")}`)
            }
        }
        class y_ {
            constructor(e, t) {
                this.action = e,
                this.callback = t
            }
        }
        X.add("game-ui/common/input-events/input-stack.tsx", {});
        var j_ = ({children: e})=>{
            const t = (0,
            Y.useMemo)((()=>new S_), [])
              , n = sl(v_)
              , s = (0,
            Y.useRef)(n);
            s.current = n;
            const [i,a] = (0,
            Y.useState)([])
              , o = (0,
            Y.useCallback)((e=>{
                const n = s.current;
                for (let s = 0; s < n.length; s++)
                    I_(n[s], t.indexOf(n[s]), e)
            }
            ), [t]);
            (0,
            Y.useEffect)((()=>{
                o(!1)
            }
            ), [n, o]);
            const r = (0,
            Y.useMemo)((()=>new Ag(t,(()=>o(!1)))), [t, o]);
            return (0,
            Y.useEffect)((()=>{
                const e = __.subscribe((e=>{
                    t.dispatchInputEvent(e.action, e.value)
                }
                ));
                return ()=>e.dispose()
            }
            ), [t]),
            (0,
            Y.useEffect)((()=>{
                const e = b_.subscribe((e=>{
                    t.dispatchInputEvent(e.action, e.value)
                }
                ));
                return ()=>e.dispose()
            }
            ), [t]),
            (0,
            Y.useEffect)((()=>{
                const e = T_.subscribe((()=>{
                    o(!0)
                }
                ));
                return ()=>e.dispose()
            }
            ), [o]),
            (0,
            z.jsx)(Og.Provider, {
                value: r,
                children: (0,
                z.jsxs)(wg.Provider, {
                    value: r,
                    children: [e, false]
                })
            })
        }
        ;
        function C_(e, t=!0) {
            (0,
            Y.useEffect)((()=>{
                if (t) {
                    let t = 0;
                    const n = ()=>{
                        e(),
                        t = window.requestAnimationFrame(n)
                    }
                    ;
                    return t = window.requestAnimationFrame(n),
                    ()=>window.cancelAnimationFrame(t)
                }
            }
            ), [e, t])
        }
        X.add("game-ui/common/input-events/providers/event-input-provider.tsx", {
            get EventInputProvider() {
                return j_
            },
            set EventInputProvider(e) {
                j_ = e
            }
        }),
        X.add("game-ui/common/utils/use-loop.ts", {
            get useLoop() {
                return C_
            },
            set useLoop(e) {
                C_ = e
            }
        });
        var N_ = ({children: e})=>{
            const t = Dm()
              , n = sl(Sm)
              , s = (0,
            Y.useRef)(!1);
            return C_((0,
            Y.useCallback)((()=>{
                const e = document.elementFromPoint(n.x, n.y) !== document.body;
                e !== s.current && (Rm(e),
                s.current = e)
            }
            ), [n.x, n.y]), t),
            (0,
            z.jsx)(z.Fragment, {
                children: e
            })
        }
        ;
        X.add("game-ui/common/input-events/providers/gamepad-pointer-event-provider.tsx", {
            get GamepadPointerEventProvider() {
                return N_
            },
            set GamepadPointerEventProvider(e) {
                N_ = e
            }
        });
        var w_;
        !function(e) {
            e[e.buttonSouth = 0] = "buttonSouth",
            e[e.buttonEast = 1] = "buttonEast",
            e[e.buttonWest = 2] = "buttonWest",
            e[e.buttonNorth = 3] = "buttonNorth",
            e[e.leftShoulder = 4] = "leftShoulder",
            e[e.rightShoulder = 5] = "rightShoulder",
            e[e.leftTrigger = 6] = "leftTrigger",
            e[e.rightTrigger = 7] = "rightTrigger",
            e[e.select = 8] = "select",
            e[e.start = 9] = "start",
            e[e.leftStickPress = 10] = "leftStickPress",
            e[e.rightStickPress = 11] = "rightStickPress",
            e[e.up = 12] = "up",
            e[e.down = 13] = "down",
            e[e.left = 14] = "left",
            e[e.right = 15] = "right"
        }(w_ || (w_ = {}));
        var O_ = ({children: e})=>{
            const t = (0,
            Y.useMemo)((()=>new S_), []);
            (0,
            Y.useEffect)((()=>{
                const e = M_(w_.buttonSouth, !1)
                  , n = M_(w_.buttonEast, !1)
                  , s = M_(w_.buttonNorth, !1)
                  , i = M_(w_.leftShoulder, !1)
                  , a = M_(w_.rightShoulder, !1)
                  , o = M_(w_.select, !1)
                  , r = M_(w_.start, !1)
                  , l = M_(w_.up, !0)
                  , c = M_(w_.down, !0)
                  , u = M_(w_.left, !0)
                  , d = M_(w_.right, !0);
                let m;
                const h = g=>{
                    try {
                        1 === e(g) && P_(t, [{
                            action: "Select",
                            value: null
                        }, {
                            action: "Save Game",
                            value: null
                        }]),
                        1 === n(g) && t.dispatchInputEvent("Back", null);
                        const m = s(g);
                        1 === m ? t.dispatchInputEvent("Debug Multiplier", 1) : -1 === m && t.dispatchInputEvent("Debug Multiplier", 0),
                        1 === i(g) && P_(t, [{
                            action: "Switch Tab",
                            value: -1
                        }, {
                            action: "Switch Ordering",
                            value: -1
                        }]),
                        1 === a(g) && P_(t, [{
                            action: "Switch Tab",
                            value: 1
                        }, {
                            action: "Switch Ordering",
                            value: 1
                        }]),
                        1 === o(g) && t.dispatchInputEvent("Debug UI", null),
                        1 === r(g) && P_(t, [{
                            action: "Pause Menu",
                            value: null
                        }, {
                            action: "Start Game",
                            value: null
                        }, {
                            action: "Load Game",
                            value: null
                        }]),
                        1 === l(g) && t.dispatchInputEvent("Move Vertical", 1),
                        1 === c(g) && t.dispatchInputEvent("Move Vertical", -1),
                        1 === u(g) && P_(t, [{
                            action: "Move Horizontal",
                            value: -1
                        }, {
                            action: "Debug Change Field",
                            value: -1
                        }, {
                            action: "Change Slider Value",
                            value: -1
                        }]),
                        1 === d(g) && P_(t, [{
                            action: "Move Horizontal",
                            value: 1
                        }, {
                            action: "Debug Change Field",
                            value: 1
                        }, {
                            action: "Change Slider Value",
                            value: 1
                        }])
                    } catch (e) {
                        console.error(e)
                    }
                    m = window.requestAnimationFrame(h)
                }
                  , g = e=>{
                    27 === e.keyCode ? P_(t, [{
                        action: "Back",
                        value: null
                    }, {
                        action: "Pause Menu",
                        value: null
                    }]) : 9 === e.keyCode ? t.dispatchInputEvent("Debug UI", null) : 16 === e.keyCode ? t.dispatchInputEvent("Debug Multiplier", 1) : 32 === e.keyCode ? P_(t, [{
                        action: "Pause Simulation",
                        value: null
                    }, {
                        action: "Resume Simulation",
                        value: null
                    }]) : 66 === e.keyCode && t.dispatchInputEvent("Bulldozer", null)
                }
                  , p = e=>{
                    16 === e.keyCode && t.dispatchInputEvent("Debug Multiplier", 0)
                }
                ;
                return m = window.requestAnimationFrame(h),
                window.addEventListener("keydown", g),
                window.addEventListener("keyup", p),
                ()=>{
                    window.cancelAnimationFrame(m),
                    window.removeEventListener("keydown", g),
                    window.removeEventListener("keyup", p)
                }
            }
            ), [t]);
            const [n,s] = (0,
            Y.useState)([])
              , i = (0,
            Y.useCallback)((()=>{
                s(t._items.map((e=>e.action)))
            }
            ), [t])
              , a = (0,
            Y.useMemo)((()=>new Ag(t,i)), [t, i]);
            return (0,
            z.jsx)(Og.Provider, {
                value: a,
                children: (0,
                z.jsxs)(wg.Provider, {
                    value: a,
                    children: [e, (0,
                    z.jsx)(f_, {
                        actions: n
                    })]
                })
            })
        }
        ;
        function P_(e, t) {
            let n = -1
              , s = Number.MAX_SAFE_INTEGER;
            for (let i = 0; i < t.length; i++) {
                const a = e.indexOf(t[i].action);
                -1 !== a && a < s && (n = i,
                s = a)
            }
            if (-1 !== n) {
                const s = t[n];
                return e.dispatchInputEvent(s.action, s.value)
            }
            return !1
        }
        const L_ = 500
          , A_ = 100;
        function M_(e, t) {
            let n = !1
              , s = 0;
            return i=>{
                const a = navigator.getGamepads();
                if (a.length > 0 && null != a[0] && a[0].buttons.length > e) {
                    if (a[0].buttons[e].pressed) {
                        if (!n)
                            return n = !0,
                            s = i + L_,
                            1;
                        if (t) {
                            const e = i - s;
                            if (e > 0)
                                return e < L_ ? s += A_ : s = i + A_,
                                1
                        }
                    } else if (n)
                        return n = !1,
                        -1
                }
                return 0
            }
        }
        function R_(e, t, n) {
            if (!e.current)
                return;
            const s = window.getComputedStyle(e.current).getPropertyValue(t)
              , i = window.getComputedStyle(e.current).getPropertyValue(n);
            s && "none" !== s && i && (e.current.style.animation = "",
            window.requestAnimationFrame((()=>window.requestAnimationFrame((()=>{
                e.current && (e.current.style.animationName = s,
                e.current.style.animationDuration = i)
            }
            )))))
        }
        X.add("game-ui/common/input-events/providers/native-input-provider.tsx", {
            get NativeInputProvider() {
                return O_
            },
            set NativeInputProvider(e) {
                O_ = e
            }
        }),
        X.add("game-ui/common/input-events/index.ts", {}),
        X.add("game-ui/common/utils/animation.ts", {
            get playCssAnimation() {
                return R_
            },
            set playCssAnimation(e) {
                R_ = e
            }
        });
        let k_ = {
            button: "button_d0d",
            hint: "hint_GfT"
        };
        X.add("game-ui/common/input/button/themes/default-button.module.scss", {
            get classes() {
                return k_
            },
            set classes(e) {
                Object.assign(k_, e)
            }
        });
        const D_ = k_;
        var F_ = {
            select: lp.selectItem,
            hover: lp.hoverItem,
            focus: lp.hoverItem
        }
          , U_ = (0,
        Y.forwardRef)((function({focusKey: e, debugName: t="Button", selected: n, disabled: s, theme: i, sounds: a=F_, selectAction: o="Select", selectSound: r, className: l, tooltipLabel: c, disableHint: u=!1, onClick: d, onMouseEnter: m, onSelect: h, children: g, as: p="button", hintAction: f="Select", forceHint: x, shortcut: v, allowFocusableChildren: _, ...b}, T) {
            const [E,I] = (0,
            Y.useState)(!1)
              , S = (0,
            Y.useRef)(null)
              , y = gd(T, S)
              , j = gp(jg(e ?? (s ? Sg : yg), t), S, void 0, _)
              , C = wh(j)
              , N = Dm()
              , w = (0,
            Y.useMemo)((()=>void 0 !== r ? {
                ...a,
                select: r
            } : a), [r, a]);
            (0,
            Y.useEffect)((()=>{
                if (S.current) {
                    const e = S.current?.firstElementChild || S.current
                      , t = e.scrollWidth > e.clientWidth;
                    I(t)
                }
            }
            ), [S, c]);
            const O = (0,
            Y.useMemo)((()=>null != h ? {
                [o]: ()=>{
                    R_(S, "--selectAnimation", "--selectDuration"),
                    cp(w?.select),
                    h()
                }
            } : null), [h, o, w?.select])
              , P = (0,
            Y.useMemo)((()=>null != h && v ? {
                [v]: ()=>{
                    s || cp(w?.select),
                    h && h()
                }
            } : null), [s, w?.select, h, v])
              , L = (0,
            Y.useCallback)((e=>{
                (h || d) && (s || cp(w?.select),
                h && h(),
                d && d(e),
                e.stopPropagation())
            }
            ), [s, d, h, w?.select])
              , A = (0,
            Y.useCallback)((e=>{
                s || cp(w?.hover),
                m && m(e)
            }
            ), [s, w?.hover, m]);
            (0,
            Y.useEffect)((()=>{
                C && N && cp(w?.focus)
            }
            ), [C, N, w?.focus]);
            const M = p
              , R = !s && (x || C) && !u;
            let k = (0,
            z.jsx)(xd, {
                children: (0,
                z.jsxs)(M, {
                    ...b,
                    ref: y,
                    disabled: s,
                    className: Zu()(i?.button, n && "selected", C && N && "focused", l),
                    onClick: L,
                    onMouseEnter: A,
                    children: [(0,
                    z.jsx)(UT, {
                        action: f,
                        active: R,
                        className: i?.hint || D_.hint
                    }), g]
                })
            });
            return E && c && (k = (0,
            z.jsx)(Eg, {
                tooltip: c,
                children: k
            })),
            k = (0,
            z.jsx)(Lh, {
                controller: j,
                children: k
            }),
            O && (k = (0,
            z.jsx)(Mg, {
                actions: O,
                disabled: s,
                children: k
            })),
            P && (k = (0,
            z.jsx)(Mg, {
                actions: P,
                disabled: s,
                ignoreFocusState: !0,
                children: k
            })),
            k
        }
        ));
        X.add("game-ui/common/input/button/button.tsx", {
            get defaultButtonSounds() {
                return F_
            },
            set defaultButtonSounds(e) {
                F_ = e
            },
            get Button() {
                return U_
            },
            set Button(e) {
                U_ = e
            }
        });
        class B_ {
            constructor(e) {
                this.time = e,
                this.refCount = 0
            }
        }
        var G_ = new Map;
        function V_(e, t=!0) {
            const [n,s] = (0,
            Y.useState)(0);
            return (0,
            Y.useEffect)((()=>{
                if (t) {
                    const t = performance.now()
                      , n = G_.get(e) ?? new B_(t);
                    return 0 === n.refCount && G_.set(e, n),
                    n.refCount++,
                    s(Math.min(n.time - t, 0)),
                    ()=>{
                        n.refCount--,
                        0 === n.refCount && G_.delete(e)
                    }
                }
            }
            ), [t, e]),
            n + "ms"
        }
        X.add("game-ui/common/animations/animation-sync.tsx", {
            get AnimationSyncCache() {
                return G_
            },
            set AnimationSyncCache(e) {
                G_ = e
            },
            get useAnimationSyncDelay() {
                return V_
            },
            set useAnimationSyncDelay(e) {
                V_ = e
            }
        });
        let H_ = {
            balloon: "balloon_YD_ balloon_DNs balloon_H23",
            base: "base_CfJ",
            enter: "enter_ek6",
            "exit-active": "exit-active_s_4",
            exitActive: "exit-active_s_4",
            "enter-active": "enter-active_QVu",
            enterActive: "enter-active_QVu",
            exit: "exit_RYd",
            container: "container_p5S container_sGN container_jfe",
            arrow: "arrow_WhB arrow_tFt arrow_Xfn",
            content: "content_Bye content_HM0 content_JQV"
        };
        X.add("game-ui/common/balloon/themes/tutorial-balloon.module.scss", {
            get classes() {
                return H_
            },
            set classes(e) {
                Object.assign(H_, e)
            }
        });
        const K_ = H_;
        let W_ = {
            "fixed-ratio-image": "fixed-ratio-image_XTW",
            fixedRatioImage: "fixed-ratio-image_XTW",
            ratio: "ratio_xCj",
            image: "image_EBv"
        };
        X.add("game-ui/common/image/fixed-ratio-image.module.scss", {
            get classes() {
                return W_
            },
            set classes(e) {
                Object.assign(W_, e)
            }
        });
        const z_ = W_;
        var Y_ = ({src: e, className: t, onError: n, ...s})=>(0,
        z.jsxs)("div", {
            ...s,
            className: Zu()(z_.fixedRatioImage, t),
            children: [(0,
            z.jsx)("div", {
                className: z_.ratio
            }), (0,
            z.jsx)("img", {
                src: e,
                className: z_.image,
                onError: n
            })]
        })
          , $_ = ({src: e, className: t, onImageError: n, ...s})=>(0,
        z.jsxs)(U_, {
            ...s,
            className: Zu()(z_.fixedRatioImage, t),
            children: [(0,
            z.jsx)("div", {
                className: z_.ratio
            }), (0,
            z.jsx)("img", {
                src: e,
                className: z_.image,
                onError: n
            })]
        });
        X.add("game-ui/common/image/fixed-ratio-image.tsx", {
            get FixedRatioImage() {
                return Y_
            },
            set FixedRatioImage(e) {
                Y_ = e
            },
            get FixedRatioImageButton() {
                return $_
            },
            set FixedRatioImageButton(e) {
                $_ = e
            }
        });
        const q_ = e=>e.currentTarget.src = "Media/Placeholder.svg";
        X.add("game-ui/common/image/missing-icon-handler.ts", {});
        let X_ = {
            "tinted-icon": "tinted-icon_iKo",
            tintedIcon: "tinted-icon_iKo"
        };
        X.add("game-ui/common/image/tinted-icon.module.scss", {
            get classes() {
                return X_
            },
            set classes(e) {
                Object.assign(X_, e)
            }
        });
        const Q_ = X_;
        var Z_ = Y.forwardRef((function({src: e, className: t, style: n, ...s}, i) {
            return (0,
            z.jsx)("div", {
                ...s,
                ref: i,
                className: Zu()(e && Q_.tintedIcon, t),
                style: {
                    ...n,
                    maskImage: e ? `url(${e})` : void 0
                }
            })
        }
        ));
        X.add("game-ui/common/image/tinted-icon.tsx", {
            get TintedIcon() {
                return Z_
            },
            set TintedIcon(e) {
                Z_ = e
            }
        });
        let J_ = {
            button: "button_M6C",
            icon: "icon_PhD"
        };
        X.add("game-ui/common/input/button/icon-button.module.scss", {
            get classes() {
                return J_
            },
            set classes(e) {
                Object.assign(J_, e)
            }
        });
        const eb = J_;
        var tb = Y.forwardRef((function({src: e, tinted: t, theme: n, className: s, children: i, ...a}, o) {
            const r = (0,
            Y.useMemo)((()=>n ? {
                ...eb,
                ...n
            } : eb), [n]);
            return (0,
            z.jsxs)(U_, {
                ref: o,
                ...a,
                className: Zu()(r.button, s),
                theme: r,
                children: [t ? (0,
                z.jsx)(Z_, {
                    src: e,
                    className: r.icon
                }) : (0,
                z.jsx)("img", {
                    src: e,
                    className: r.icon,
                    onError: q_
                }), i]
            })
        }
        ));
        X.add("game-ui/common/input/button/icon-button.tsx", {
            get IconButton() {
                return tb
            },
            set IconButton(e) {
                tb = e
            }
        });
        let nb = {
            button: "button_bvQ"
        };
        X.add("game-ui/common/input/button/themes/round-highlight-button.module.scss", {
            get classes() {
                return nb
            },
            set classes(e) {
                Object.assign(nb, e)
            }
        });
        const sb = nb;
        var ib = n(853)
          , ab = n.n(ib);
        function ob(e, t, n, s, i, a) {
            const o = Hm();
            (0,
            Y.useEffect)((()=>{
                let r, l, c = a?.current || 0, u = !1;
                if (window.cancelAnimationFrame(c),
                !e || !t.current || !i)
                    return;
                const d = m=>{
                    if (!e || !t.current || !i)
                        return;
                    void 0 === r && (r = m);
                    if (m - r < i.delay)
                        return c = window.requestAnimationFrame(d),
                        void (void 0 !== a && (a.current = c));
                    void 0 === l && (l = m);
                    const h = (m - l) / 1e3
                      , g = Math.round(i.speed * h * o)
                      , p = "Vertical" === n ? t.current.scrollHeight - t.current.offsetHeight : t.current.scrollWidth - t.current.offsetWidth;
                    if (p < i.minOverflow * o)
                        return t.current.scrollTop = 0,
                        void s();
                    const f = u ? p - g : g;
                    "Vertical" === n ? f !== t.current.scrollTop && (t.current.scrollTop = f,
                    s()) : f !== t.current.scrollLeft && (t.current.scrollLeft = f,
                    s()),
                    !u && f < p || u && f > 0 ? (c = window.requestAnimationFrame(d),
                    void 0 !== a && (a.current = c)) : i.repeat && (u = !u,
                    r = void 0,
                    l = void 0,
                    c = window.requestAnimationFrame(d),
                    void 0 !== a && (a.current = c))
                }
                ;
                return c = window.requestAnimationFrame(d),
                void 0 !== a && (a.current = c),
                ()=>window.cancelAnimationFrame(c)
            }
            ), [a, t, n, e, s, o, i])
        }
        function rb(e, t, n) {
            const [s,i] = (0,
            Y.useState)(!1)
              , [a,o] = (0,
            Y.useState)()
              , r = (0,
            Y.useCallback)((t=>{
                e(t) && (o(t.currentTarget),
                t.preventDefault(),
                i(!0))
            }
            ), [e, o])
              , l = (0,
            Y.useCallback)((e=>{
                e.preventDefault(),
                t({
                    clientX: e.clientX,
                    clientY: e.clientY,
                    currentTarget: a
                })
            }
            ), [t, a])
              , c = (0,
            Y.useCallback)((e=>{
                e.preventDefault(),
                i(!1),
                n({
                    clientX: e.clientX,
                    clientY: e.clientY,
                    currentTarget: a
                })
            }
            ), [n, a]);
            return (0,
            Y.useEffect)((()=>{
                if (s)
                    return document.addEventListener("mousemove", l),
                    document.addEventListener("mouseup", c),
                    ()=>{
                        document.removeEventListener("mousemove", l),
                        document.removeEventListener("mouseup", c)
                    }
            }
            ), [s, l, c]),
            [s, r]
        }
        X.add("game-ui/common/hooks/use-auto-scroll.tsx", {
            get useAutoScroll() {
                return ob
            },
            set useAutoScroll(e) {
                ob = e
            }
        }),
        X.add("game-ui/common/hooks/use-mouse-drag-events.tsx", {
            get useMouseDragEvents() {
                return rb
            },
            set useMouseDragEvents(e) {
                rb = e
            }
        });
        let lb = {
            scrollable: "scrollable_DXr",
            viewport: "viewport_bY2",
            content: "content_gqa",
            x: "x_TNK",
            y: "y_SMM",
            "track-visible-y": "track-visible-y_RCA",
            trackVisibleY: "track-visible-y_RCA",
            track: "track_e3O",
            "track-visible-x": "track-visible-x_qNT",
            trackVisibleX: "track-visible-x_qNT",
            thumb: "thumb_Cib",
            pressed: "pressed_iMJ",
            "bottom-padding": "bottom-padding_JS3",
            bottomPadding: "bottom-padding_JS3",
            "hint-item": "hint-item__j0",
            hintItem: "hint-item__j0"
        };
        X.add("game-ui/common/scrolling/scrollable.module.scss", {
            get classes() {
                return lb
            },
            set classes(e) {
                Object.assign(lb, e)
            }
        });
        const cb = lb
          , ub = ab()(.445, .05, .55, .95)
          , db = {
            speed: 20,
            delay: 3e3,
            repeat: !0,
            minOverflow: 8
        };
        var mb = (0,
        Y.forwardRef)((function({horizontal: e=!1, vertical: t=!0, trackVisibility: n="scrollable", overshootX: s=.05, overshootY: i=.05, smooth: a=!0, controller: o, className: r, style: l, children: c, onScroll: u, onOverflowX: d, onOverflowY: m, autoScroll: h=!1, autoScrollSettings: g=db}, p) {
            const [f,x] = (0,
            Y.useState)(h)
              , [v,_] = (0,
            Y.useState)(!1)
              , [b,T] = (0,
            Y.useState)(!1)
              , E = (0,
            Y.useRef)(null)
              , I = gd(p, E)
              , S = (0,
            Y.useRef)(null)
              , y = (0,
            Y.useRef)(null)
              , j = (0,
            Y.useRef)(null)
              , C = (0,
            Y.useRef)(null)
              , N = (0,
            Y.useCallback)((()=>{
                if (!E.current || !S.current || !y.current)
                    return;
                const e = E.current.offsetWidth
                  , t = E.current.scrollWidth
                  , n = Od(E.current.scrollLeft, 0, t - e)
                  , s = S.current.offsetWidth;
                if (0 === e || 0 === t || 0 === s)
                    return;
                const i = t - 1 > e;
                if (_(i),
                d && d(i),
                i) {
                    const i = Od(s * e / t, Math.min(20, s / 2), s)
                      , a = n / (t - e) * (s - i);
                    y.current.style.width = `${i}px`,
                    y.current.style.left = `${a}px`
                }
            }
            ), [d])
              , w = (0,
            Y.useCallback)((()=>{
                if (!E.current || !j.current || !C.current)
                    return;
                const e = E.current.offsetHeight
                  , t = E.current.scrollHeight
                  , n = Od(E.current.scrollTop, 0, t - e)
                  , s = j.current.offsetHeight;
                if (0 === e || 0 === t || 0 === s)
                    return;
                const i = t - 1 > e;
                if (T(i),
                m && m(i),
                i) {
                    const i = Od(s * e / t, Math.min(20, s / 2), s)
                      , a = n / (t - e) * (s - i);
                    C.current.style.height = `${i}px`,
                    C.current.style.top = `${a}px`
                }
            }
            ), [m])
              , O = (0,
            Y.useCallback)((()=>{
                e && N(),
                t && w()
            }
            ), [e, N, w, t])
              , P = (0,
            Y.useCallback)((()=>{
                x(!1)
            }
            ), [])
              , L = (0,
            Y.useCallback)((()=>{
                x(!0)
            }
            ), [])
              , A = sl(Im);
            (0,
            Y.useEffect)((()=>{
                const e = E.current;
                if (null === e)
                    return;
                const t = t=>{
                    t.preventDefault(),
                    e.scrollLeft += t.deltaX * A,
                    e.scrollTop += t.deltaY * A,
                    u && u(),
                    O()
                }
                ;
                return e?.addEventListener("wheel", t),
                ()=>e?.removeEventListener("wheel", t)
            }
            ), [A, u, O]);
            const M = (0,
            Y.useRef)(0)
              , R = (0,
            Y.useRef)(0)
              , k = (0,
            Y.useCallback)((({clientX: e})=>{
                if (x(!1),
                !y.current)
                    return !1;
                const {width: t, left: n} = y.current.getBoundingClientRect();
                return 0 !== t && (M.current = (e - n) / t,
                !0)
            }
            ), [])
              , D = (0,
            Y.useCallback)((({clientY: e})=>{
                if (x(!1),
                !C.current)
                    return !1;
                const {height: t, top: n} = C.current.getBoundingClientRect();
                return 0 !== t && (R.current = (e - n) / t,
                !0)
            }
            ), [])
              , F = (0,
            Y.useCallback)((({clientX: e})=>{
                if (!E.current || !S.current || !y.current)
                    return;
                const t = E.current.offsetWidth
                  , n = E.current.scrollWidth
                  , s = S.current.getBoundingClientRect()
                  , i = y.current.getBoundingClientRect();
                if (0 === t || 0 === n || 0 === s.width)
                    return;
                const a = s.width - i.width;
                if (0 === a)
                    return;
                const o = E.current.scrollLeft
                  , r = Od((e - s.left - i.width * M.current) / a, 0, 1) * (n - t);
                o !== r && (E.current.scrollLeft = r,
                u && u(),
                N())
            }
            ), [u, N])
              , U = (0,
            Y.useCallback)((({clientY: e})=>{
                if (!E.current || !j.current || !C.current)
                    return;
                const t = E.current.offsetHeight
                  , n = E.current.scrollHeight
                  , s = j.current.getBoundingClientRect()
                  , i = C.current.getBoundingClientRect();
                if (0 === t || 0 === n || 0 === s.height)
                    return;
                const a = s.height - i.height;
                if (0 === a)
                    return;
                const o = E.current.scrollTop
                  , r = Od((e - s.top - i.height * R.current) / a, 0, 1) * (n - t);
                o !== r && (E.current.scrollTop = r,
                u && u(),
                w())
            }
            ), [u, w])
              , B = (0,
            Y.useCallback)((()=>{
                x(!0)
            }
            ), [])
              , [G,V] = rb(k, F, B)
              , [H,K] = rb(D, U, B);
            fm(O),
            (0,
            Y.useEffect)((()=>{
                let e = window.requestAnimationFrame((()=>{
                    e = window.requestAnimationFrame((()=>{
                        e = 0,
                        O()
                    }
                    ))
                }
                ));
                return ()=>{
                    window.cancelAnimationFrame(e)
                }
            }
            ), [O]);
            const W = (0,
            Y.useRef)(0)
              , $ = (0,
            Y.useCallback)(((e,t)=>{
                E.current && (window.cancelAnimationFrame(W.current),
                e = Od(e, 0, E.current.scrollWidth - E.current.offsetWidth),
                t = Od(t, 0, E.current.scrollHeight - E.current.offsetHeight),
                e === E.current.scrollLeft && t === E.current.scrollTop || (E.current.scrollLeft = e,
                E.current.scrollTop = t,
                u && u()),
                O())
            }
            ), [u, O])
              , q = (0,
            Y.useCallback)(((e,t)=>{
                if (!E.current)
                    return;
                window.cancelAnimationFrame(W.current);
                const n = performance.now()
                  , s = E.current.scrollLeft
                  , i = E.current.scrollTop
                  , a = o=>{
                    if (!E.current)
                        return;
                    const r = (o - n) / 175;
                    if (r < 1) {
                        const n = ub(r)
                          , o = Od(Math.round(s + (e - s) * n), 0, E.current.scrollWidth - E.current.offsetWidth)
                          , l = Od(Math.round(i + (t - i) * n), 0, E.current.scrollHeight - E.current.offsetHeight);
                        l === i && o === s || u && u(),
                        E.current.scrollLeft = o,
                        E.current.scrollTop = l,
                        O(),
                        W.current = window.requestAnimationFrame(a)
                    } else
                        E.current.scrollLeft = e,
                        E.current.scrollTop = t,
                        O()
                }
                ;
                W.current = window.requestAnimationFrame(a)
            }
            ), [u, O]);
            (0,
            Y.useEffect)((()=>()=>window.cancelAnimationFrame(W.current)), []);
            const X = (0,
            Y.useMemo)((()=>({
                updateThumbs: ()=>{
                    W.current = window.requestAnimationFrame((()=>{
                        W.current = window.requestAnimationFrame(O)
                    }
                    ))
                }
                ,
                scrollTo: (e,t)=>{
                    $(e, t)
                }
                ,
                scrollBy: (e,t)=>{
                    E.current && $(E.current.scrollLeft + e, E.current.scrollTop + t)
                }
                ,
                smoothScrollTo: (e,t)=>{
                    q(e, t)
                }
                ,
                scrollIntoView: n=>{
                    if (!E.current)
                        return;
                    const o = E.current.getBoundingClientRect()
                      , r = n.getBoundingClientRect();
                    let l = E.current.scrollLeft
                      , c = E.current.scrollTop;
                    if (e) {
                        const e = o.width * s;
                        r.left < o.left + e ? l = Math.floor(E.current.scrollLeft + r.left - o.left - e) : r.right > o.right - e && (l = Math.ceil(E.current.scrollLeft + r.right - o.right + e)),
                        l = Od(l, 0, Math.ceil(E.current.scrollWidth - o.width))
                    }
                    if (t) {
                        const e = o.height * i;
                        r.top < o.top + e ? c = Math.floor(E.current.scrollTop + r.top - o.top - e) : r.bottom > o.bottom - e && (c = Math.ceil(E.current.scrollTop + r.bottom - o.bottom + e)),
                        c = Od(c, 0, Math.ceil(E.current.scrollHeight - o.height))
                    }
                    l === E.current.scrollLeft && c === E.current.scrollTop || (a ? q(l, c) : $(l, c))
                }
            })), [O, $, q, e, t, s, i, a]);
            return (0,
            Y.useEffect)((()=>{
                if (o)
                    return o._attachCallback(X),
                    ()=>o._detachCallback(X)
            }
            ), [o, X]),
            (0,
            Y.useEffect)((()=>x(h)), [h]),
            ob(h && f, E, t ? "Vertical" : "Horizontal", O, g, W),
            (0,
            z.jsxs)("div", {
                className: Zu()(cb.scrollable, e && cb.x, t && cb.y, e && (v || "always" === n) && cb.trackVisibleX, t && (b || "always" === n) && cb.trackVisibleY, r),
                style: l,
                onMouseEnter: P,
                onMouseLeave: L,
                children: [(0,
                z.jsx)("div", {
                    ref: I,
                    className: cb.content,
                    onMouseOver: O,
                    children: (0,
                    z.jsxs)(hp.Provider, {
                        value: X,
                        children: [c, null != c && (0,
                        z.jsx)("div", {
                            className: cb.bottomPadding
                        })]
                    })
                }), e && (0,
                z.jsx)("div", {
                    ref: S,
                    className: Zu()(cb.track, cb.x),
                    children: (0,
                    z.jsx)("div", {
                        ref: y,
                        className: Zu()(cb.thumb, cb.x, G && cb.pressed),
                        onMouseDown: V
                    })
                }), t && (0,
                z.jsx)("div", {
                    ref: j,
                    className: Zu()(cb.track, cb.y),
                    children: (0,
                    z.jsx)("div", {
                        ref: C,
                        className: Zu()(cb.thumb, cb.y, H && cb.pressed),
                        onMouseDown: K
                    })
                })]
            })
        }
        ))
          , hb = (0,
        Y.forwardRef)((function({children: e, hintClassName: t, labelClassName: n, focusableItems: s, ...i}, a) {
            const [o,r] = (0,
            Y.useState)(!1)
              , [l,c] = (0,
            Y.useState)(!1)
              , u = (0,
            Y.useCallback)((e=>{
                r(e),
                c(!1)
            }
            ), [])
              , [d,m] = (0,
            Y.useState)(!1)
              , h = Dm()
              , g = (0,
            Y.useMemo)((()=>({
                Select: o && !l ? ()=>c(!0) : null,
                Back: l ? ()=>c(!1) : null
            })), [l, o])
              , p = d || !!s && (l || o);
            return (0,
            z.jsxs)(z.Fragment, {
                children: [s ? (0,
                z.jsx)(Np, {
                    includes: ["Select", "Back"],
                    excludes: ["Scroll Vertical"],
                    disabled: !l,
                    children: (0,
                    z.jsx)(Mg, {
                        actions: g,
                        children: (0,
                        z.jsx)(Sp, {
                            onFocusChange: u,
                            children: (0,
                            z.jsx)(mb, {
                                ...i,
                                ref: a,
                                onOverflowY: m,
                                className: Zu()(i.className, h && o ? "focused" : void 0),
                                children: (0,
                                z.jsx)(Ep, {
                                    disabled: !l,
                                    children: e
                                })
                            })
                        })
                    })
                }) : (0,
                z.jsx)(mb, {
                    ref: a,
                    onOverflowY: m,
                    ...i,
                    children: e
                }), p && (0,
                z.jsxs)("div", {
                    className: t,
                    children: [(0,
                    z.jsx)(UT, {
                        action: "Scroll Vertical",
                        active: d,
                        showLabel: !0
                    }), (0,
                    z.jsx)(UT, {
                        action: "Select",
                        active: !!s && o && !l,
                        showLabel: !0
                    }), (0,
                    z.jsx)(UT, {
                        action: "Back",
                        active: !!s && l,
                        showLabel: !0
                    })]
                })]
            })
        }
        ));
        X.add("game-ui/common/scrolling/scrollable.tsx", {
            get Scrollable() {
                return mb
            },
            set Scrollable(e) {
                mb = e
            },
            get ScrollableWithHint() {
                return hb
            },
            set ScrollableWithHint(e) {
                hb = e
            }
        });
        const gb = /\s/;
        class pb {
            constructor(e) {
                this.linkRenderer = e
            }
            render(e) {
                const t = [];
                let n, s = 0, i = -1, a = -1, o = _b.None;
                for (let r = 0; r < e.length; r++)
                    if (n !== r - 1)
                        switch (e[r]) {
                        case "\\":
                            if ("*" === e[r + 1])
                                continue;
                            n = r - 1,
                            e = e.slice(0, r) + e.slice(r + 1),
                            r -= 1;
                            break;
                        case "-":
                            0 === r && " " === e[r + 1] && (o = _b.ListItem);
                            break;
                        case "<":
                            -1 === a && (i = r,
                            a = -1);
                            break;
                        case "|":
                            -1 !== i && -1 === a && (a = r);
                            break;
                        case ">":
                            if (-1 !== i) {
                                s < i && t.push(fb(e, s, i, null));
                                const n = e.substring(i + 1, -1 !== a ? a : r)
                                  , o = r < e.length - 1 && gb.test(e[r + 1]) ? e[r + 1] : null
                                  , l = fb(e, -1 !== a ? a + 1 : i + 1, r, o)
                                  , c = null != this.linkRenderer ? this.linkRenderer(n, l, i) : void 0;
                                void 0 !== c ? t.push((0,
                                z.jsxs)("span", {
                                    children: [c, o]
                                }, i)) : t.push((0,
                                z.jsx)(Sb, {
                                    linkData: n,
                                    children: l
                                }, i)),
                                s = r + 1,
                                i = -1,
                                a = -1
                            }
                        }
                    else
                        n = void 0;
                return s < e.length && t.push(fb(e, s, e.length, null)),
                {
                    node: t,
                    style: o,
                    images: []
                }
            }
        }
        function fb(e, t, n, s) {
            const i = [];
            let a, o = t, r = !1, l = -1;
            for (let c = t; c < n; c++)
                if (a !== c - 1)
                    switch (e[c]) {
                    case "\\":
                        if ("*" !== e[c + 1])
                            continue;
                        a = c - 1,
                        e = e.slice(0, c) + e.slice(c + 1),
                        c -= 1,
                        n -= 1;
                        break;
                    case "*":
                        if (r)
                            if (-1 === l)
                                l = c - 1,
                                r = !1;
                            else {
                                o < l && i.push(e.substring(o, l));
                                let t = e.substring(l + 2, c - 1);
                                c < n - 1 ? gb.test(e[c + 1]) && (t += e[c + 1]) : null != s && (t += s),
                                i.push((0,
                                z.jsx)("b", {
                                    children: t
                                }, l)),
                                o = c + 1,
                                l = -1,
                                r = !1
                            }
                        else
                            r = !0;
                        break;
                    default:
                        r = !1
                    }
                else
                    a = void 0;
            if (o < n) {
                let t = e.substring(o, n);
                null != s && (t += s),
                i.push(t)
            }
            return i
        }
        X.add("game-ui/common/text/renderers/markup-renderer.tsx", {});
        let xb = {
            h1: "h1_YPD",
            h2: "h2_TYz",
            h3: "h3__p1",
            h4: "h4_Gmc",
            h5: "h5_QKx",
            h6: "h6__nd",
            link: "link_jpN",
            p: "p_CKq",
            "list-item": "list-item_xk2",
            listItem: "list-item_xk2",
            hint: "hint_dM0"
        };
        X.add("game-ui/common/text/formatted-text.module.scss", {
            get classes() {
                return xb
            },
            set classes(e) {
                Object.assign(xb, e)
            }
        });
        const vb = xb;
        var _b;
        !function(e) {
            e[e.None = 0] = "None",
            e[e.Heading1 = 1] = "Heading1",
            e[e.Heading2 = 2] = "Heading2",
            e[e.Heading3 = 3] = "Heading3",
            e[e.Heading4 = 4] = "Heading4",
            e[e.Heading5 = 5] = "Heading5",
            e[e.Heading6 = 6] = "Heading6",
            e[e.ListItem = 7] = "ListItem"
        }(_b || (_b = {}));
        var bb = (0,
        Y.createContext)({
            theme: vb,
            onLinkSelect: void 0
        });
        const Tb = new pb;
        var Eb = ({focusKey: e, text: t="", theme: n, renderer: s=Tb, className: i, onLinkSelect: a, selectAction: o, ...r})=>{
            const l = (0,
            Y.useMemo)((()=>({
                ...vb,
                ...n
            })), [n])
              , c = (0,
            Y.useMemo)((()=>({
                theme: l,
                onLinkSelect: a,
                selectAction: o
            })), [a, o, l])
              , u = ic(t)
              , d = (0,
            Y.useMemo)((()=>s.render(u)), [s, u]);
            return "string" == typeof t && t.includes("<inputAction:") && (i = `action-hint ${i || ""}`),
            (0,
            z.jsx)(np, {
                focusKey: e,
                children: (0,
                z.jsx)(bb.Provider, {
                    value: c,
                    children: (0,
                    z.jsx)("p", {
                        ...r,
                        className: Zu()(Ib(l, d.style), i),
                        cohinline: "cohinline",
                        children: d.node
                    })
                })
            })
        }
        ;
        function Ib(e, t) {
            switch (t) {
            case _b.None:
                return e.p;
            case _b.Heading1:
                return e.h1;
            case _b.Heading2:
                return e.h2;
            case _b.Heading3:
                return e.h3;
            case _b.Heading4:
                return e.h4;
            case _b.Heading5:
                return e.h5;
            case _b.Heading6:
                return e.h6;
            case _b.ListItem:
                return e.listItem;
            default:
                return
            }
        }
        var Sb = ({linkData: e, disableHint: t=!1, children: n})=>{
            const [s,i] = (0,
            Y.useState)(!1)
              , a = (0,
            Y.useContext)(bb)
              , o = (0,
            Y.useCallback)((()=>{
                a.onLinkSelect && a.onLinkSelect(e)
            }
            ), [a, e]);
            return "" !== e ? (0,
            z.jsx)(Ah, {
                onFocusChange: i,
                children: (0,
                z.jsxs)(U_, {
                    disableHint: !0,
                    className: a.theme.link,
                    onSelect: o,
                    selectAction: a.selectAction,
                    children: [(0,
                    z.jsx)(UT, {
                        action: a.selectAction ?? "Select",
                        active: !t && s,
                        className: vb.hint
                    }), n]
                })
            }) : (0,
            z.jsx)(z.Fragment, {
                children: n
            })
        }
        ;
        X.add("game-ui/common/text/formatted-text.tsx", {
            get ParagraphStyle() {
                return _b
            },
            set ParagraphStyle(e) {
                _b = e
            },
            get FormattedTextContext() {
                return bb
            },
            set FormattedTextContext(e) {
                bb = e
            },
            get FormattedText() {
                return Eb
            },
            set FormattedText(e) {
                Eb = e
            },
            get Link() {
                return Sb
            },
            set Link(e) {
                Sb = e
            }
        });
        let yb = {
            paragraphs: "paragraphs_nbD"
        };
        X.add("game-ui/common/text/formatted-paragraphs.module.scss", {
            get classes() {
                return yb
            },
            set classes(e) {
                Object.assign(yb, e)
            }
        });
        const jb = yb;
        var Cb = ({focusKey: e, text: t, theme: n, renderer: s, className: i, children: a, onLinkSelect: o, selectAction: r, maxLineLength: l, splitLineLength: c, ...u})=>{
            const d = (0,
            Y.useMemo)((()=>({
                ...jb,
                ...n
            })), [n])
              , m = function(e, t=!0, n, s) {
                const i = sc();
                return (0,
                Y.useMemo)((()=>Y.Children.toArray(e).flatMap((e=>Pb(ac(i, e, "\n"), t, !1, n, s)))), [e, i, n, s, t])
            }(Y.Children.count(a) > 0 ? a : t, !0, l, c);
            return (0,
            z.jsx)("div", {
                ...u,
                className: Zu()(d.paragraphs, i),
                children: (0,
                z.jsx)(np, {
                    focusKey: e,
                    children: m.map(((e,t)=>(0,
                    z.jsx)(Eb, {
                        text: e,
                        theme: d,
                        renderer: s,
                        onLinkSelect: o,
                        selectAction: r
                    }, t)))
                })
            })
        }
        ;
        const Nb = 150
          , wb = (e,t)=>{
            let n = e;
            const s = [];
            do {
                const e = n.substring(0, t).lastIndexOf(" ");
                -1 === e ? (s.push(n.substring(0, t)),
                n = n.substring(t)) : (s.push(n.substring(0, e)),
                n = n.substring(e))
            } while (n.length > t);
            return n.length > 0 && s.push(n),
            s
        }
        ;
        var Ob = /\r\n|\r|\n/;
        function Pb(e, t=!0, n=!1, s, i) {
            let a = e.split(Ob);
            t && (a = a.filter(((e,t,s)=>"" !== e.trim() || n && "" === s[t + 1]?.trim())));
            const o = [];
            return a.forEach((e=>void 0 !== s && e.length > s ? o.push(...wb(e, i ?? Nb)) : o.push(e))),
            o
        }
        X.add("game-ui/common/text/formatted-paragraphs.tsx", {
            get FormattedParagraphs() {
                return Cb
            },
            set FormattedParagraphs(e) {
                Cb = e
            },
            get splitParagraphs() {
                return Pb
            },
            set splitParagraphs(e) {
                Pb = e
            }
        });
        let Lb = {
            button: "button_wte",
            label: "label_qmW",
            hint: "hint_AlC",
            icon: "icon_Mm0 icon_B1q"
        };
        X.add("game-ui/game/components/tutorials/tutorial-input-hints/tutorial-input-hint.module.scss", {
            get classes() {
                return Lb
            },
            set classes(e) {
                Object.assign(Lb, e)
            }
        });
        const Ab = Lb
          , Mb = "inputAction:";
        var Rb = new pb(((e,t,n)=>{
            if (e.startsWith(Mb)) {
                const t = e.substring(12).trim()
                  , [s,i] = function(e) {
                    if (e.endsWith("]")) {
                        const t = e.lastIndexOf("[");
                        if (t < e.length - 1) {
                            const n = parseInt(e.substring(t + 1, e.length - 1));
                            return isNaN(n) ? [e, void 0] : [e.substring(0, t), n]
                        }
                    }
                    return [e, void 0]
                }(t);
                return (0,
                z.jsx)(kb, {
                    linkData: s,
                    bindingIndex: i
                }, n)
            }
        }
        ));
        function kb({linkData: e, bindingIndex: t}) {
            const n = sl(Em)
              , s = (0,
            Y.useMemo)((()=>{
                const s = [];
                for (let t = e.indexOf("/"); t >= 0; t = e.indexOf("/", t + 1))
                    s.push(t);
                return s.length >= 1 ? {
                    map: e.substring(0, s[0]),
                    action: e.substring(s[0] + 1),
                    controlScheme: n,
                    index: t ?? -1
                } : {
                    map: "",
                    action: "",
                    controlScheme: n,
                    index: t ?? -1
                }
            }
            ), [n, t, e])
              , i = ll(Lm, s);
            return (0,
            z.jsx)(z.Fragment, {
                children: i.map(((t,n)=>t.items[0] ? (0,
                z.jsx)(LT, {
                    bindings: t.items[0].bindings,
                    modifiers: t.items[0].modifiers,
                    theme: Ab,
                    shortName: wp.FallbackToControl,
                    showName: "Mouse" === t.items[0].bindings[0].device
                }, e + n) : null))
            })
        }
        function Db(e) {
            e.stopPropagation()
        }
        X.add("game-ui/game/components/tutorials/tutorial-input-hints/tutorial-input-hint.tsx", {
            get tutorialTextRenderer() {
                return Rb
            },
            set tutorialTextRenderer(e) {
                Rb = e
            }
        }),
        X.add("game-ui/common/utils/cancel-click.ts", {
            get cancelClick() {
                return Db
            },
            set cancelClick(e) {
                Db = e
            }
        });
        let Fb = {
            hint: "hint_gBC"
        };
        X.add("game-ui/common/input/toggle/toggle-hint-theme.module.scss", {
            get classes() {
                return Fb
            },
            set classes(e) {
                Object.assign(Fb, e)
            }
        });
        const Ub = Fb;
        var Bb = Y.forwardRef((function({focusKey: e, debugName: t="Toggle", checked: n, disabled: s=!1, style: i, toggleSound: a=lp.selectToggle, className: o, children: r, showHint: l, multistate: c=!1, onChange: u, onMultistateChange: d, onMouseOver: m, onMouseLeave: h}, g) {
            const p = (0,
            Y.useCallback)((()=>{
                if (c) {
                    if (!d)
                        return;
                    cp(a),
                    d(void 0 !== n && (!n || void 0))
                } else {
                    if (!u)
                        return;
                    cp(a),
                    u(!n)
                }
            }
            ), [n, c, u, d, a])
              , f = (0,
            Y.useCallback)((e=>{
                p(),
                u && !s && Db(e)
            }
            ), [s, p, u])
              , x = (0,
            Y.useRef)(null)
              , v = gd(g, x)
              , _ = gp(jg(e ?? (s ? Sg : yg), t), x)
              , b = wh(_)
              , T = Dm()
              , E = c && void 0 === n ? "undefined" : n ? "checked" : "unchecked";
            return (0,
            z.jsx)(Dg, {
                onAction: s ? void 0 : p,
                children: (0,
                z.jsxs)(Lh, {
                    controller: _,
                    children: [l && (0,
                    z.jsx)(UT, {
                        action: "Select",
                        active: !!b,
                        theme: Ub
                    }), (0,
                    z.jsx)("div", {
                        ref: v,
                        onClick: s ? void 0 : f,
                        onMouseOver: m,
                        onMouseLeave: h,
                        style: i,
                        className: Zu()(o, E, s && "disabled", b && T && "focused"),
                        children: r
                    })]
                })
            })
        }
        ));
        X.add("game-ui/common/input/toggle/toggle.tsx", {
            get Toggle() {
                return Bb
            },
            set Toggle(e) {
                Bb = e
            }
        });
        let Gb = {
            toggle: "toggle_cca item-mouse-states_Fmi",
            checkmark: "checkmark_NXV"
        };
        X.add("game-ui/common/input/toggle/checkbox/checkbox.module.scss", {
            get classes() {
                return Gb
            },
            set classes(e) {
                Object.assign(Gb, e)
            }
        });
        const Vb = Gb;
        var Hb = ({checked: e, disabled: t, theme: n, className: s, multistate: i, ...a})=>{
            const o = (0,
            Y.useMemo)((()=>({
                ...Vb,
                ...n
            })), [n]);
            return (0,
            z.jsx)(Bb, {
                ...a,
                checked: e,
                disabled: t,
                multistate: i,
                className: Zu()(o.toggle, s, i && void 0 === e && "undefined"),
                children: (0,
                z.jsx)("div", {
                    className: Zu()(o.checkmark, e && "checked", i && void 0 === e && "undefined", t && "disabled")
                })
            })
        }
        ;
        X.add("game-ui/common/input/toggle/checkbox/checkbox.tsx", {
            get Checkbox() {
                return Hb
            },
            set Checkbox(e) {
                Hb = e
            }
        });
        let Kb = {
            "trigger-item": "trigger-item_rd_",
            triggerItem: "trigger-item_rd_",
            completed: "completed_V8G",
            checkbox: "checkbox_Y9N",
            label: "label_vR9"
        };
        X.add("game-ui/game/components/tutorials/tutorial-layout/trigger-item/trigger-item.module.scss", {
            get classes() {
                return Kb
            },
            set classes(e) {
                Object.assign(Kb, e)
            }
        });
        const Wb = Kb;
        var zb = ({trigger: e})=>((0,
        Y.useEffect)((()=>{
            e.completed && cp(lp.tutorialTriggerCompleteEvent)
        }
        ), [e.completed]),
        (0,
        z.jsxs)("div", {
            className: Zu()(Wb.triggerItem, e.completed && Wb.completed),
            children: [(0,
            z.jsx)(Hb, {
                checked: e.completed || e.preCompleted,
                className: Wb.checkbox,
                focusKey: Sg
            }), (0,
            z.jsx)(Cb, {
                renderer: Rb,
                className: Wb.label,
                children: (0,
                z.jsx)(_c.Tutorials.TRIGGER, {
                    hash: e.name
                })
            })]
        }));
        X.add("game-ui/game/components/tutorials/tutorial-layout/trigger-item/trigger-item.tsx", {
            get TriggerItem() {
                return zb
            },
            set TriggerItem(e) {
                zb = e
            }
        });
        let Yb = {
            "tutorial-layout": "tutorial-layout_iuN",
            tutorialLayout: "tutorial-layout_iuN",
            image: "image_NyN",
            columns: "columns_ITy",
            "icon-column": "icon-column_K_S",
            iconColumn: "icon-column_K_S",
            "content-column": "content-column_ygV",
            contentColumn: "content-column_ygV",
            top: "top_4SL",
            icon: "icon_Qax",
            content: "content_p9h",
            scrollable: "scrollable_ErH",
            title: "title_JUj",
            "close-button": "close-button_K6M",
            closeButton: "close-button_K6M",
            description: "description_Dj3",
            rows: "rows_vbh",
            row: "row_yh5",
            triggers: "triggers_Da1 row_yh5",
            bottom: "bottom_oC7 row_yh5",
            pages: "pages_kqp",
            "center-card": "center-card_JWz",
            centerCard: "center-card_JWz",
            hints: "hints_jKY",
            "hints-next-only": "hints-next-only_inP",
            hintsNextOnly: "hints-next-only_inP",
            "hints-prev-only": "hints-prev-only_YuG",
            hintsPrevOnly: "hints-prev-only_YuG",
            "pages-only": "pages-only_q3k",
            pagesOnly: "pages-only_q3k",
            hint: "hint_Elc",
            hintButton: "hintButton_j5t",
            "hints-next": "hints-next_E81",
            hintsNext: "hints-next_E81",
            "hints-prev": "hints-prev_YHO",
            hintsPrev: "hints-prev_YHO",
            "floating-hint": "floating-hint_Yt1",
            floatingHint: "floating-hint_Yt1",
            "floating-hint-top-right": "floating-hint-top-right_Vvx",
            floatingHintTopRight: "floating-hint-top-right_Vvx"
        };
        X.add("game-ui/game/components/tutorials/tutorial-layout/tutorial-layout.module.scss", {
            get classes() {
                return Yb
            },
            set classes(e) {
                Object.assign(Yb, e)
            }
        });
        const $b = Yb;
        function qb(e) {
            return (0,
            Y.useMemo)((()=>({
                ...$b,
                ...e
            })), [e])
        }
        function Xb(e, t) {
            return !e.mandatory || t.trigger?.preCompleted || null == t.trigger || e.advisorActivation || t.completed
        }
        function Qb(e, t) {
            return Zb(e, t) > 0
        }
        function Zb(e, t) {
            return e.phases.findIndex((e=>Ur(e.entity, t.entity)))
        }
        function Jb() {
            const e = Wh.value
              , t = zh.value;
            if (null != e && null != t) {
                const n = Zb(e, t)
                  , [s,i] = eT(e, n);
                if (s > 0)
                    Xh(e.entity, e.phases[n - 1].entity);
                else if (n > 0) {
                    const t = e.phases.findIndex((e=>e.trigger?.phaseBranching));
                    t >= 0 && Xh(e.entity, e.phases[t].entity)
                }
            }
        }
        function eT(e, t) {
            const n = e.phases.length
              , s = e.phases.findIndex((e=>e?.trigger?.phaseBranching));
            if (s < 0)
                return [t, n];
            if (t <= s)
                return [t, s + 1];
            let i = -1
              , a = -1;
            for (let i = s + 1; i < n; i++) {
                const s = e.phases[i];
                if ((s?.forcesCompletion || i === n - 1) && i >= t) {
                    a = i;
                    break
                }
            }
            for (let a = n - 1; a > s; a--) {
                const n = e.phases[a];
                if (n?.isBranch && a <= t) {
                    i = a;
                    break
                }
            }
            return [t - i, a - i + 1]
        }
        function tT() {
            const e = sl(Rh)
              , t = sl(Wh)
              , n = null !== sl(Dh);
            return (0,
            Y.useMemo)((()=>!(n || t?.mandatory && e)), [t?.mandatory, n, e])
        }
        X.add("game-ui/game/components/tutorials/tutorial-layout/tutorial-theme.tsx", {
            get useTutorialTheme() {
                return qb
            },
            set useTutorialTheme(e) {
                qb = e
            }
        }),
        X.add("game-ui/game/components/tutorials/tutorial-layout/tutorial-utils.ts", {
            get tutorialSkipAvailable() {
                return Xb
            },
            set tutorialSkipAvailable(e) {
                Xb = e
            },
            get previousTutorialPhaseAvailable() {
                return Qb
            },
            set previousTutorialPhaseAvailable(e) {
                Qb = e
            },
            get activatePreviousTutorialPhase() {
                return Jb
            },
            set activatePreviousTutorialPhase(e) {
                Jb = e
            },
            get getBranchIndices() {
                return eT
            },
            set getBranchIndices(e) {
                eT = e
            },
            get useAdvisorPanelAvailable() {
                return tT
            },
            set useAdvisorPanelAvailable(e) {
                tT = e
            }
        });
        let nT = {
            item: "item_Lji",
            button: "button_iQJ item_Lji",
            animate: "animate_fHa",
            blink: "blink_HHL",
            icon: "icon_G81",
            pages: "pages_Lzi item_Lji",
            label: "label_FEJ",
            divider: "divider_bFc",
            "divider-gamepad": "divider-gamepad_bWe",
            dividerGamepad: "divider-gamepad_bWe"
        };
        X.add("game-ui/game/components/tutorials/tutorial-layout/tutorial-action-button.module.scss", {
            get classes() {
                return nT
            },
            set classes(e) {
                Object.assign(nT, e)
            }
        });
        const sT = nT;
        var iT = ({tutorial: e, phase: t, pagesVisible: n, theme: s, localization: i, closeable: a=!1, scrollable: o=!1, disableTooltips: r=!1, className: l, closeHint: c})=>{
            const u = e.phases.findIndex((e=>Ur(e.entity, t.entity)))
              , [d,m] = (0,
            Y.useMemo)((()=>eT(e, u)), [u, e])
              , h = Xb(e, t)
              , g = u > 0
              , p = i || _c.Tutorials
              , f = ic((0,
            z.jsx)(p.DESCRIPTION, {
                hash: t.name
            }))
              , x = !e.completed && !e.advisorActivation
              , v = t.descriptionVisible ? f : null
              , _ = function(e) {
                const t = jT();
                return t !== _m.PS || Vr(e.overrideImagePS) ? t !== _m.Xbox || Vr(e.overrideImageXbox) ? e.image : e.overrideImageXbox : e.overrideImagePS
            }(t);
            return (0,
            z.jsx)(aT, {
                theme: s,
                image: _,
                icon: t.icon,
                title: t.titleVisible ? (0,
                z.jsx)(p.TITLE, {
                    hash: t.name
                }) : void 0,
                description: t.descriptionVisible ? v : null,
                onClose: a ? eg : void 0,
                scrollable: o,
                trigger: t.trigger,
                pagesVisible: n,
                phaseIndex: d,
                phaseCount: m,
                nextVisible: h,
                previousVisible: g,
                onActivatePreviousPhase: Jb,
                onActivateNextPhase: Jh,
                animateButton: x,
                className: l,
                disableTooltips: r,
                isCenterCard: t.type === mg.CenterCard,
                closeHint: c
            })
        }
        ;
        var aT = ({theme: e=$b, className: t, image: n, icon: s, title: i, autoScroll: a=!0, description: o, onClose: r, scrollable: l, trigger: c, pagesVisible: u, phaseIndex: d=0, phaseCount: m=1, nextVisible: h, previousVisible: g, onActivatePreviousPhase: p, onActivateNextPhase: f, animateButton: x, disableTooltips: v, isCenterCard: _, closeHint: b})=>{
            const T = qb(e)
              , E = u && -1 !== d && m > 1
              , I = d + 1 === m
              , S = Dm()
              , y = i || o ? (0,
            z.jsxs)(z.Fragment, {
                children: [(0,
                z.jsxs)("div", {
                    className: T.top,
                    children: [i && (0,
                    z.jsx)("div", {
                        className: T.title,
                        children: i
                    }), !S && r && (0,
                    z.jsx)(tb, {
                        tinted: !0,
                        focusKey: Sg,
                        src: "Media/Glyphs/Close.svg",
                        theme: sb,
                        className: T.closeButton,
                        onSelect: r
                    }), b && (0,
                    z.jsx)(KT, {
                        action: b,
                        active: !0,
                        className: $b.floatingHintTopRight
                    })]
                }), o && (0,
                z.jsx)("div", {
                    className: T.description,
                    children: (0,
                    z.jsx)(Cb, {
                        renderer: Rb,
                        children: o
                    })
                })]
            }) : void 0;
            return (0,
            z.jsxs)("div", {
                className: Zu()(T.tutorialLayout, t),
                children: [n && (0,
                z.jsx)(Y_, {
                    src: n,
                    className: T.image
                }), (s || y) && (0,
                z.jsxs)("div", {
                    className: T.columns,
                    children: [s && (0,
                    z.jsx)("div", {
                        className: T.iconColumn,
                        children: (0,
                        z.jsx)("img", {
                            src: s,
                            className: T.icon
                        })
                    }), (0,
                    z.jsx)("div", {
                        className: T.contentColumn,
                        children: l ? (0,
                        z.jsx)(mb, {
                            autoScroll: a,
                            className: T.scrollable,
                            children: y
                        }, d) : (0,
                        z.jsx)("div", {
                            className: T.content,
                            children: y
                        })
                    })]
                }), (c?.displayUI || g || h || E) && (0,
                z.jsxs)("div", {
                    className: T.rows,
                    children: [c?.displayUI && (0,
                    z.jsx)("div", {
                        className: T.triggers,
                        children: (0,
                        z.jsx)(zb, {
                            trigger: c
                        })
                    }), (g || h || E) && (S ? (0,
                    z.jsx)(z.Fragment, {
                        children: (0,
                        z.jsx)(oT, {
                            theme: T,
                            nextVisible: h,
                            previousVisible: g,
                            pagesVisible: E,
                            isCenterCard: _,
                            phaseIndex: d,
                            phaseCount: m,
                            animateButton: x,
                            lastPhase: I
                        })
                    }) : g || h ? (0,
                    z.jsxs)("div", {
                        className: T.bottom,
                        children: [g && (0,
                        z.jsxs)(z.Fragment, {
                            children: [(0,
                            z.jsx)(Eg, {
                                tooltip: !v && (0,
                                z.jsx)(_c.Tutorials.BUTTON_TOOLTIP_PREVIOUS, {}),
                                children: (0,
                                z.jsx)(tb, {
                                    tinted: !0,
                                    focusKey: Sg,
                                    src: "Media/Glyphs/FilledArrowLeft.svg",
                                    theme: sT,
                                    onSelect: p
                                })
                            }), (E || h) && (0,
                            z.jsx)("div", {
                                className: sT.divider
                            })]
                        }), E && (0,
                        z.jsx)("div", {
                            className: sT.pages,
                            children: (0,
                            z.jsx)("div", {
                                className: sT.label,
                                children: (0,
                                z.jsx)(uu, {
                                    value: d + 1,
                                    total: m
                                })
                            })
                        }), h && (0,
                        z.jsxs)(z.Fragment, {
                            children: [E && (0,
                            z.jsx)("div", {
                                className: sT.divider
                            }), (0,
                            z.jsx)(Eg, {
                                tooltip: v ? void 0 : I ? (0,
                                z.jsx)(_c.Tutorials.BUTTON_TOOLTIP_DONE, {}) : (0,
                                z.jsx)(_c.Tutorials.BUTTON_TOOLTIP_NEXT, {}),
                                children: (0,
                                z.jsx)(tb, {
                                    tinted: !0,
                                    focusKey: Sg,
                                    src: I ? "Media/Glyphs/Checkmark.svg" : "Media/Glyphs/FilledArrowRight.svg",
                                    theme: sT,
                                    className: Zu()(x && sT.animate),
                                    onSelect: f
                                })
                            })]
                        })]
                    }) : E && (0,
                    z.jsx)("div", {
                        className: T.bottom,
                        children: (0,
                        z.jsx)("div", {
                            className: T.pages,
                            children: (0,
                            z.jsx)(uu, {
                                value: d + 1,
                                total: m
                            })
                        })
                    }))]
                })]
            })
        }
        ;
        const oT = ({theme: e, previousVisible: t, nextVisible: n, pagesVisible: s, isCenterCard: i, phaseIndex: a, phaseCount: o, lastPhase: r, animateButton: l})=>{
            const c = !t && n
              , u = t && !n
              , d = !t && !n && s;
            return (0,
            z.jsxs)("div", {
                className: Zu()(e.hints, {
                    [$b.centerCard]: i,
                    [$b.hintsNextOnly]: c,
                    [$b.hintsPrevOnly]: u,
                    [$b.pagesOnly]: d
                }),
                children: [t && (0,
                z.jsxs)("div", {
                    className: Zu()(e.hint, $b.hintsPrev),
                    children: [(0,
                    z.jsxs)("div", {
                        className: e.hintButton,
                        children: [(0,
                        z.jsx)(tb, {
                            tinted: !0,
                            focusKey: Sg,
                            src: "Media/Glyphs/FilledArrowLeft.svg",
                            theme: sT
                        }), (0,
                        z.jsx)("div", {
                            className: Zu()(sT.divider, sT.dividerGamepad)
                        })]
                    }), (0,
                    z.jsx)(IT, {
                        specifiedActions: ["Previous Tutorial Phase"]
                    })]
                }), s && (0,
                z.jsx)("div", {
                    className: e.pages,
                    children: (0,
                    z.jsx)("div", {
                        children: (0,
                        z.jsx)(uu, {
                            value: a + 1,
                            total: o
                        })
                    })
                }), n && (0,
                z.jsxs)("div", {
                    className: Zu()(e.hint, $b.hintsNext),
                    children: [(0,
                    z.jsx)(IT, {
                        specifiedActions: [r ? "Finish Tutorial" : "Continue Tutorial"]
                    }), (0,
                    z.jsxs)("div", {
                        className: e.hintButton,
                        children: [(0,
                        z.jsx)("div", {
                            className: Zu()(sT.divider, sT.dividerGamepad)
                        }), (0,
                        z.jsx)(tb, {
                            tinted: !0,
                            focusKey: Sg,
                            src: r ? "Media/Glyphs/Checkmark.svg" : "Media/Glyphs/FilledArrowRight.svg",
                            theme: sT,
                            className: Zu()(l && sT.animate)
                        })]
                    })]
                })]
            })
        }
        ;
        X.add("game-ui/game/components/tutorials/tutorial-layout/tutorial-layout.tsx", {
            get TutorialLayout() {
                return iT
            },
            set TutorialLayout(e) {
                iT = e
            },
            get TutorialPhaseLayoutImpl() {
                return aT
            },
            set TutorialPhaseLayoutImpl(e) {
                aT = e
            }
        });
        let rT = {
            container: "container_RSa",
            image: "image_GQL image_NyN",
            "tutorial-balloon": "tutorial-balloon_PYE",
            tutorialBalloon: "tutorial-balloon_PYE"
        };
        X.add("game-ui/game/components/tutorials/tutorial-balloon/tutorial-balloon.module.scss", {
            get classes() {
                return rT
            },
            set classes(e) {
                Object.assign(rT, e)
            }
        });
        const lT = rT;
        var cT = ({tutorial: e, phase: t, localization: n, direction: s, alignment: i, children: a})=>{
            const o = Dm()
              , r = o && (e?.completed || e?.advisorActivation || !e?.mandatory) ? "Close Tutorial" : void 0
              , l = null != e && null != t && (0,
            z.jsx)(iT, {
                tutorial: e,
                phase: t,
                localization: n,
                pagesVisible: !0,
                theme: lT,
                closeable: e.completed || e.advisorActivation || !e.mandatory,
                disableTooltips: o,
                closeHint: r
            });
            return (0,
            z.jsx)(bh, {
                balloonKey: t?.name,
                theme: K_,
                visible: null != e,
                content: (0,
                z.jsx)(Rp, {
                    children: l
                }),
                direction: s,
                alignment: i,
                className: lT.tutorialBalloon,
                children: a
            })
        }
        ;
        X.add("game-ui/game/components/tutorials/tutorial-balloon/tutorial-balloon.tsx", {
            get TutorialBalloon() {
                return cT
            },
            set TutorialBalloon(e) {
                cT = e
            }
        });
        let uT = {
            "tutorial-blink-active": "tutorial-blink-active_s4x",
            tutorialBlinkActive: "tutorial-blink-active_s4x",
            "tutorial-blink": "tutorial-blink_EvY",
            tutorialBlink: "tutorial-blink_EvY"
        };
        X.add("game-ui/game/components/tutorials/tutorial-target/tutorial-target.module.scss", {
            get classes() {
                return uT
            },
            set classes(e) {
                Object.assign(uT, e)
            }
        });
        const dT = uT;
        var mT = ({uiTag: e, active: t=!0, disableBlinking: n=!1, editor: s=!1, children: i})=>{
            if (!Y.isValidElement(i))
                throw new Error("TutorialGuideTarget requires a single child react element!");
            const a = sl(Wh)
              , o = sl(zh)
              , r = hT(e, t)
              , [l,c,u] = gT(e, t)
              , d = !n && (r || c)
              , m = V_(dT.tutorialBlink, d)
              , h = s ? _c.EditorTutorials : _c.Tutorials
              , g = l ? a : null
              , p = l ? o : null
              , f = l && u >= 0 ? o?.balloonTargets[u]?.direction : void 0
              , x = l && u >= 0 ? o?.balloonTargets[u]?.alignment : void 0
              , v = l
              , _ = d ? {
                animationDelay: m
            } : void 0
              , b = d ? dT.tutorialBlinkActive : void 0;
            return (0,
            z.jsx)(xg.Provider, {
                value: v,
                children: (0,
                z.jsx)(cT, {
                    tutorial: g,
                    phase: p,
                    direction: f,
                    alignment: x,
                    localization: h,
                    children: (0,
                    z.jsx)(vd, {
                        style: _,
                        className: b,
                        children: i
                    })
                })
            })
        }
        ;
        const hT = (e,t=!0)=>{
            const [n,s] = (0,
            Y.useState)(!1)
              , i = (0,
            Y.useContext)(fg);
            return (0,
            Y.useEffect)((()=>{
                if (void 0 !== e && "" !== e && t)
                    return i.mountBlinkListener(e, s),
                    ()=>i.unmountBlinkListener(e);
                s(!1)
            }
            ), [i, e, t]),
            n
        }
          , gT = (e,t)=>{
            const [n,s] = (0,
            Y.useState)(!1)
              , [i,a] = (0,
            Y.useState)(!1)
              , [o,r] = (0,
            Y.useState)(-1)
              , l = (0,
            Y.useContext)(fg);
            return (0,
            Y.useEffect)((()=>{
                if (void 0 !== e && "" !== e && t)
                    return l.mountBalloonListener(e, s, a, r),
                    ()=>l.unmountBalloonListener(e);
                s(!1)
            }
            ), [l, e, t]),
            [n, i, o]
        }
        ;
        X.add("game-ui/game/components/tutorials/tutorial-target/tutorial-target.tsx", {
            get TutorialTarget() {
                return mT
            },
            set TutorialTarget(e) {
                mT = e
            }
        });
        const pT = "prefabs";
        var fT = $r(pT, "themes")
          , xT = Xr(pT, "prefabDetails")
          , vT = $r(pT, "manualUITags")
          , _T = {
            entity: Zp,
            name: "",
            uiTag: "",
            icon: "Media/Placeholder.svg",
            dlc: null,
            preview: null,
            titleId: "",
            descriptionId: null,
            locked: !1,
            unique: !1,
            placed: !1,
            constructionCost: null,
            effects: [],
            properties: [],
            requirements: {
                requireAny: [],
                requireAll: []
            }
        };
        X.add("game-ui/game/data-binding/prefab/prefab-bindings.ts", {
            get themes() {
                return themes
            },
            set themes(e) {
                themes = e
            },
            get prefabDetails() {
                return prefabDetails
            },
            set prefabDetails(e) {
                prefabDetails = e
            },
            get manualUITags() {
                return manualUITags
            },
            set manualUITags(e) {
                manualUITags = e
            },
            get emptyPrefabDetails() {
                return _T
            },
            set emptyPrefabDetails(e) {
                _T = e
            }
        });
        let bT = {
            "action-guide": "action-guide_eqv",
            actionGuide: "action-guide_eqv",
            fadeIn: "fadeIn_d4x",
            item: "item_p05",
            "item-clickable": "item-clickable_sKM item-mouse-states_Fmi",
            itemClickable: "item-clickable_sKM item-mouse-states_Fmi",
            "button-text": "button-text_U4q",
            buttonText: "button-text_U4q",
            small: "small__oP",
            xsmall: "xsmall_EJz",
            label: "label_MOA"
        };
        X.add("game-ui/common/input-events/action-hints/action-hints.module.scss", {
            get classes() {
                return bT
            },
            set classes(e) {
                Object.assign(bT, e)
            }
        });
        const TT = bT;
        var ET = ["Previous Tutorial Phase", "Continue Tutorial", "Finish Tutorial", "Start Next Tutorial", "Switch Tab", "Tool Options", "Info View", "Advisor", "Select", "Change Slider Value", "Change Line Schedule", "Change Tool Option", "Close", "Collapse Group", "Expand Group", "Back", "Upgrades Menu", "Select Chirp Sender", "Purchase Map Tile", "Discard Select", "Add Or Modify Area Node", "Remove Area Node", "Undo Area Node", "Bulldoze", "Bulldoze Discard", "Default Tool", "Discard Downgrade", "Discard Replace", "Discard Upgrade", "Downgrade Net Edge", "Place Net Control Point", "Place Net Edge", "Place Net Node", "Replace Net Edge", "Undo Net Control Point", "Upgrade Net Edge", "Erase Object", "Move Object", "Paint Object", "Place Object", "Place Upgrade", "Precise Rotation", "Rotate Object", "Add Or Modify Waypoint", "Remove Waypoint", "Undo Waypoint", "Deselect Area", "Discard Deselect", "Disard Select", "Select Area", "Erase Material", "Erase Resource", "Fast Soften", "Level Terrain", "Lower Terrain", "Paint Material", "Paint Resource", "Raise Terrain", "Set Level Target", "Set Slope Target", "Slope Terrain", "Soften Terrain", "Place Upgrade", "Rebuild", "Apply Zone", "Discard Dezoning", "Discard Zoning", "Remove Zone"]
          , IT = (0,
        Y.forwardRef)((function({disabled: e, specifiedActions: t, excludedActions: n, className: s, buttonAs: i, labels: a=!0, delay: o=0, delayIgnoreCounter: r=0}, l) {
            const c = gd((0,
            Y.useRef)(null), l)
              , u = Mp(sl(wm))
              , d = $m((0,
            Y.useMemo)((()=>u.filter((e=>e.name && e.show && (!t || t.includes(e.name)) && !n?.includes(e.name)))), [n, u, t]), o, r);
            return (0,
            z.jsx)("div", {
                className: Zu()(TT.actionGuide, s),
                ref: c,
                children: e ? null : d?.map(((e,t)=>(0,
                z.jsx)(ST, {
                    buttonAs: i,
                    hint: e,
                    label: a,
                    onSelect: Pm
                }, t)))
            })
        }
        ));
        const ST = ({hint: e, label: t, buttonAs: n, onSelect: s})=>{
            const i = sl(Vp)
              , a = (0,
            Y.useCallback)((()=>{
                s && s(e.name)
            }
            ), [e.name, s]);
            let o = e.name;
            if ("Switch User" === o)
                o = i || e.name;
            return (0,
            z.jsx)(mT, {
                uiTag: vT.value?.actionHints + "+" + e.name,
                children: (0,
                z.jsxs)(yT, {
                    className: TT.item,
                    onSelect: a,
                    as: n,
                    children: [e.items.length ? e.items.map(((e,t)=>(0,
                    z.jsx)(PT, {
                        modifiers: e.modifiers,
                        bindings: e.bindings
                    }, t))) : (0,
                    z.jsx)("span", {
                        className: Zu()(TT.buttonText, TT.xsmall),
                        children: (0,
                        z.jsx)(_c.Options.INPUT_CONTROL_NA, {})
                    }), t ? (0,
                    z.jsx)("div", {
                        className: TT.label,
                        children: (0,
                        z.jsx)(_c.Common.ACTION, {
                            hash: o,
                            showIdOnFail: !0
                        })
                    }) : null]
                })
            })
        }
        ;
        var yT = ({children: e, className: t, ...n})=>(0,
        z.jsx)(U_, {
            className: Zu()(TT.item, t, !n.disabled && TT.itemClickable),
            focusKey: Sg,
            ...n,
            children: e
        });
        function jT() {
            return sl(Rl)
        }
        function CT() {
            return sl(kl)
        }
        function NT() {
            return sl(Fl)
        }
        X.add("game-ui/common/input-events/action-hints/action-hints.tsx", {
            get ExcludedTopPanelActionHints() {
                return ET
            },
            set ExcludedTopPanelActionHints(e) {
                ET = e
            },
            get InputActionHints() {
                return IT
            },
            set InputActionHints(e) {
                IT = e
            },
            get ActionHintLayout() {
                return yT
            },
            set ActionHintLayout(e) {
                yT = e
            },
            get useGamepadType() {
                return jT
            },
            set useGamepadType(e) {
                jT = e
            },
            get useKeyboardLayout() {
                return CT
            },
            set useKeyboardLayout(e) {
                CT = e
            },
            get useLayoutMap() {
                return NT
            },
            set useLayoutMap(e) {
                NT = e
            }
        });
        let wT = {
            hint: "hint_vdu",
            binding: "binding_dc_",
            modifier: "modifier_iDc",
            label: "label_dTg",
            icon: "icon_B1q",
            button: "button_ehL",
            small: "small_P1I",
            xsmall: "xsmall_vkV",
            "button-text": "button-text_fw1",
            buttonText: "button-text_fw1",
            "left-tab": "left-tab_Hvf",
            leftTab: "left-tab_Hvf",
            "right-tab": "right-tab_QsA",
            rightTab: "right-tab_QsA"
        };
        X.add("game-ui/common/input-events/action-hints/input-hint/input-hint.module.scss", {
            get classes() {
                return wT
            },
            set classes(e) {
                Object.assign(wT, e)
            }
        });
        const OT = wT;
        var PT = ({modifiers: e, bindings: t, showName: n, shortName: s, theme: i, className: a, style: o, children: r})=>{
            const l = jT()
              , c = CT()
              , u = NT()
              , d = (0,
            Y.useMemo)((()=>({
                ...OT,
                ...i
            })), [i]);
            return (0,
            z.jsxs)("span", {
                className: Zu()(d.hint, a),
                style: o,
                children: [e.map(((n,i)=>(0,
                z.jsx)(AT, {
                    binding: n,
                    modifier: !0,
                    shortName: s,
                    theme: d
                }, `${e} ${t} ${i}`))), t.map(((n,i)=>(0,
                z.jsx)(AT, {
                    binding: n,
                    modifier: !1,
                    shortName: s,
                    theme: d
                }, `${e} ${t} ${i}`))), n && (0,
                z.jsx)("span", {
                    className: Zu()(d.label),
                    children: (0,
                    z.jsx)(Ap, {
                        binding: t[0],
                        modifiers: e,
                        short: s,
                        gamepadType: l,
                        keyboardLayout: c,
                        layoutMap: u
                    })
                }), r]
            })
        }
          , LT = ({...e})=>(0,
        z.jsx)(Eg, {
            tooltip: (0,
            z.jsx)(Ap, {
                binding: e.bindings[0],
                modifiers: e.modifiers
            }),
            children: (0,
            z.jsx)("span", {
                children: (0,
                z.jsx)(PT, {
                    ...e
                })
            })
        })
          , AT = ({binding: e, modifier: t, shortName: n, theme: s})=>{
            const i = DT(e);
            return (0,
            z.jsx)("span", {
                className: t ? OT.modifier : OT.binding,
                children: null != i ? (0,
                z.jsx)("img", {
                    src: i,
                    className: s?.icon
                }) : (0,
                z.jsx)(MT, {
                    binding: e,
                    shortName: n,
                    className: s?.button
                })
            })
        }
        ;
        const MT = ({binding: e, shortName: t, className: n})=>{
            const s = CT()
              , i = NT();
            return (0,
            z.jsx)("span", {
                className: Zu()(OT.buttonText, n),
                children: (0,
                z.jsx)(Ap, {
                    binding: e,
                    modifiers: [],
                    short: t,
                    keyboardLayout: s,
                    layoutMap: i
                })
            })
        }
          , RT = {
            [_m.Xbox]: {
                leftStick: "Media/Gamepad/Xbox/LeftStick.svg",
                "leftStick/x": "Media/Gamepad/Xbox/LstickX.svg",
                "leftStick/y": "Media/Gamepad/Xbox/LstickY.svg",
                "leftStick/up": "Media/Gamepad/Xbox/LstickUp.svg",
                "leftStick/down": "Media/Gamepad/Xbox/LstickDown.svg",
                "leftStick/left": "Media/Gamepad/Xbox/LstickLeft.svg",
                "leftStick/right": "Media/Gamepad/Xbox/LstickRight.svg",
                rightStick: "Media/Gamepad/Xbox/RightStick.svg",
                "rightStick/x": "Media/Gamepad/Xbox/RstickX.svg",
                "rightStick/y": "Media/Gamepad/Xbox/RstickY.svg",
                "rightStick/up": "Media/Gamepad/Xbox/RstickUp.svg",
                "rightStick/down": "Media/Gamepad/Xbox/RstickDown.svg",
                "rightStick/left": "Media/Gamepad/Xbox/RstickLeft.svg",
                "rightStick/right": "Media/Gamepad/Xbox/RstickRight.svg",
                dpad: "Media/Gamepad/Xbox/Dpad.svg",
                "dpad/x": "Media/Gamepad/Xbox/DpadX.svg",
                "dpad/y": "Media/Gamepad/Xbox/DpadY.svg",
                "dpad/up": "Media/Gamepad/Xbox/DpadUp.svg",
                "dpad/down": "Media/Gamepad/Xbox/DpadDown.svg",
                "dpad/left": "Media/Gamepad/Xbox/DpadLeft.svg",
                "dpad/right": "Media/Gamepad/Xbox/DpadRight.svg",
                buttonNorth: "Media/Gamepad/Xbox/North.svg",
                buttonSouth: "Media/Gamepad/Xbox/South.svg",
                buttonWest: "Media/Gamepad/Xbox/West.svg",
                buttonEast: "Media/Gamepad/Xbox/East.svg",
                leftShoulder: "Media/Gamepad/Xbox/LeftShoulder.svg",
                rightShoulder: "Media/Gamepad/Xbox/RightShoulder.svg",
                leftTrigger: "Media/Gamepad/Xbox/LeftTrigger.svg",
                rightTrigger: "Media/Gamepad/Xbox/RightTrigger.svg",
                start: "Media/Gamepad/Xbox/Start.svg",
                select: "Media/Gamepad/Xbox/Select.svg",
                leftStickPress: "Media/Gamepad/Xbox/LstickPress.svg",
                rightStickPress: "Media/Gamepad/Xbox/RstickPress.svg"
            },
            [_m.PS]: {
                leftStick: "Media/Gamepad/PS/PS_Lstick.svg",
                "leftStick/x": "Media/Gamepad/PS/PS_LstickX.svg",
                "leftStick/y": "Media/Gamepad/PS/PS_LstickY.svg",
                "leftStick/up": "Media/Gamepad/PS/PS_LstickUp.svg",
                "leftStick/down": "Media/Gamepad/PS/PS_LstickDown.svg",
                "leftStick/left": "Media/Gamepad/PS/PS_LstickLeft.svg",
                "leftStick/right": "Media/Gamepad/PS/PS_LstickRight.svg",
                rightStick: "Media/Gamepad/PS/PS_Rstick.svg",
                "rightStick/x": "Media/Gamepad/PS/PS_RstickX.svg",
                "rightStick/y": "Media/Gamepad/PS/PS_RstickY.svg",
                "rightStick/up": "Media/Gamepad/PS/PS_RstickUp.svg",
                "rightStick/down": "Media/Gamepad/PS/PS_RstickDown.svg",
                "rightStick/left": "Media/Gamepad/PS/PS_RstickLeft.svg",
                "rightStick/right": "Media/Gamepad/PS/PS_RstickRight.svg",
                dpad: "Media/Gamepad/PS/PS_Dpad.svg",
                "dpad/x": "Media/Gamepad/PS/PS_DpadX.svg",
                "dpad/y": "Media/Gamepad/PS/PS_DpadY.svg",
                "dpad/up": "Media/Gamepad/PS/PS_DpadUp.svg",
                "dpad/down": "Media/Gamepad/PS/PS_DpadDown.svg",
                "dpad/left": "Media/Gamepad/PS/PS_DpadLeft.svg",
                "dpad/right": "Media/Gamepad/PS/PS_DpadRight.svg",
                buttonNorth: "Media/Gamepad/PS/PS_triangle.svg",
                buttonSouth: "Media/Gamepad/PS/PS_X.svg",
                buttonWest: "Media/Gamepad/PS/PS_square.svg",
                buttonEast: "Media/Gamepad/PS/PS_O.svg",
                leftShoulder: "Media/Gamepad/PS/PS_L1.svg",
                rightShoulder: "Media/Gamepad/PS/PS_R1.svg",
                leftTrigger: "Media/Gamepad/PS/PS_L2.svg",
                rightTrigger: "Media/Gamepad/PS/PS_R2.svg",
                start: "Media/Gamepad/PS/PS_Options.svg",
                select: "Media/Gamepad/PS/PS_Create.svg",
                leftStickPress: "Media/Gamepad/PS/PS_LstickPress.svg",
                rightStickPress: "Media/Gamepad/PS/PS_RstickPress.svg",
                touchpadButton: "Media/Gamepad/PS/PS_Touchpad.svg"
            }
        }
          , kT = {
            leftButton: "Media/Mouse/LMB.svg",
            rightButton: "Media/Mouse/RMB.svg",
            middleButton: "Media/Mouse/MMB.svg",
            backButton: "Media/Mouse/Backward.svg",
            forwardButton: "Media/Mouse/Forward.svg",
            "scroll/y": "Media/Mouse/Scrollwheel.svg"
        };
        function DT(e) {
            const t = jT();
            return (0,
            Y.useMemo)((()=>{
                switch (e.device) {
                case "Gamepad":
                    return RT[t][e.name] || null;
                case "Mouse":
                    return kT[e.name] || null;
                default:
                    return null
                }
            }
            ), [e.device, e.name, t])
        }
        X.add("game-ui/common/input-events/action-hints/input-hint/control-icons.tsx", {
            get ControlIcons() {
                return PT
            },
            set ControlIcons(e) {
                PT = e
            },
            get ControlIconsWithTooltip() {
                return LT
            },
            set ControlIconsWithTooltip(e) {
                LT = e
            },
            get ControlIcon() {
                return AT
            },
            set ControlIcon(e) {
                AT = e
            },
            get useInputControlIcon() {
                return DT
            },
            set useInputControlIcon(e) {
                DT = e
            }
        });
        var FT = ({action: e, bindingIndex: t=0, active: n=!0, shortName: s, controlScheme: i, theme: a, showLabel: o, style: r, className: l})=>{
            const c = Lp(e, n, i);
            if (!c || !c.items[0])
                return null;
            const u = 2 === c?.items.length
              , d = c.items[u ? t : 0].modifiers
              , m = [c.items[u ? t : 0].bindings[u ? 0 : t]];
            return (0,
            z.jsx)(PT, {
                bindings: m,
                modifiers: d,
                shortName: s,
                theme: a,
                className: l,
                style: r,
                children: o && (0,
                z.jsx)("span", {
                    className: a?.label || OT.label,
                    children: (0,
                    z.jsx)(_c.Common.ACTION, {
                        hash: c.name,
                        showIdOnFail: !0
                    })
                })
            })
        }
        ;
        const UT = ({action: e, active: t=!0, controlScheme: n=vm.gamepad, ...s})=>{
            const i = sl(Em);
            return t && e && i === n ? (0,
            z.jsx)(FT, {
                action: e,
                controlScheme: n,
                ...s
            }) : null
        }
        ;
        var BT = e=>{
            const t = sl(Em);
            return (0,
            z.jsx)(UT, {
                ...e,
                controlScheme: t
            })
        }
          , GT = e=>wh((0,
        Y.useContext)(Ju)) ? (0,
        z.jsx)(UT, {
            ...e
        }) : null;
        X.add("game-ui/common/input-events/action-hints/input-hint/input-hint.tsx", {
            get InputHint() {
                return UT
            },
            set InputHint(e) {
                UT = e
            },
            get ActiveControlSchemeInputHint() {
                return BT
            },
            set ActiveControlSchemeInputHint(e) {
                BT = e
            },
            get FocusedInputHint() {
                return GT
            },
            set FocusedInputHint(e) {
                GT = e
            }
        });
        let VT = {
            "floating-input-hint": "floating-input-hint_cCf",
            floatingInputHint: "floating-input-hint_cCf"
        };
        X.add("game-ui/common/input-events/action-hints/input-hint/floating-input-hint.module.scss", {
            get classes() {
                return VT
            },
            set classes(e) {
                Object.assign(VT, e)
            }
        });
        const HT = VT;
        var KT = ({action: e, active: t, className: n})=>(0,
        z.jsx)(UT, {
            action: e,
            active: t,
            showLabel: !0,
            className: Zu()(HT.floatingInputHint, n)
        });
        X.add("game-ui/common/input-events/action-hints/input-hint/floating-input-hint.tsx", {
            get FloatingInputHint() {
                return KT
            },
            set FloatingInputHint(e) {
                KT = e
            }
        });
        var WT = {};
        function zT(e) {
            (0,
            Y.useEffect)((()=>{
                if (e)
                    for (const e in WT)
                        if (!WT[e]) {
                            const t = new Image;
                            t.src = e.replaceAll('"', ""),
                            WT[e] = t
                        }
            }
            ), [e])
        }
        function YT(e) {
            for (const t of Object.values(e))
                WT[t] || (WT[t] = null);
            return e
        }
        function $T(e) {
            const t = Pp(e, 1);
            return (0,
            Y.useMemo)((()=>YT(t)), [t])
        }
        X.add("game-ui/common/image/preload.ts", {
            get imagesCache() {
                return WT
            },
            set imagesCache(e) {
                WT = e
            },
            get usePrefetchImages() {
                return zT
            },
            set usePrefetchImages(e) {
                zT = e
            },
            get preloadImages() {
                return YT
            },
            set preloadImages(e) {
                YT = e
            },
            get usePreloadedImages() {
                return $T
            },
            set usePreloadedImages(e) {
                $T = e
            }
        });
        let qT = {
            closeIcon: '"Media/Glyphs/Close.svg"',
            toggleIcon: '"Media/Glyphs/ThickStrokeArrowRight.svg"',
            toggleIconExpanded: '"Media/Glyphs/ThickStrokeArrowDown.svg"',
            panel: "panel_YqS",
            header: "header_Bpo child-opacity-transition_nkS",
            content: "content_AD7 child-opacity-transition_nkS",
            footer: "footer_pD5 child-opacity-transition_nkS",
            "title-bar": "title-bar_PF4",
            titleBar: "title-bar_PF4",
            title: "title_zQN",
            icon: "icon_OVK",
            "icon-space": "icon-space_h_f",
            iconSpace: "icon-space_h_f",
            "close-button": "close-button_wKK",
            closeButton: "close-button_wKK",
            toggle: "toggle_Q44"
        };
        X.add("game-ui/common/panel/panel.module.scss", {
            get classes() {
                return qT
            },
            set classes(e) {
                Object.assign(qT, e)
            }
        });
        const XT = qT;
        YT([XT.closeIcon, XT.toggleIcon, XT.toggleIconExpanded]);
        var QT = Y.createContext({
            theme: XT
        })
          , ZT = Y.createContext({
            expanded: !0,
            toggleExpanded: ()=>{}
            ,
            theme: XT
        });
        function JT(e) {
            return (0,
            Y.useMemo)((()=>({
                ...XT,
                ...e
            })), [e])
        }
        X.add("game-ui/common/panel/panel-context.ts", {
            get PanelContext() {
                return QT
            },
            set PanelContext(e) {
                QT = e
            },
            get CollapsiblePanelContext() {
                return ZT
            },
            set CollapsiblePanelContext(e) {
                ZT = e
            }
        }),
        X.add("game-ui/common/panel/panel-theme.ts", {
            get usePanelTheme() {
                return JT
            },
            set usePanelTheme(e) {
                JT = e
            }
        });
        let eE = {
            header: "header_H_U header_Bpo child-opacity-transition_nkS",
            content: "content_XD5 content_AD7 child-opacity-transition_nkS",
            footer: "footer_Pa9 footer_pD5 child-opacity-transition_nkS",
            title: "title_SVH title_zQN",
            "floating-hint": "floating-hint_s8E",
            floatingHint: "floating-hint_s8E"
        };
        X.add("game-ui/common/panel/themes/default.module.scss", {
            get classes() {
                return eE
            },
            set classes(e) {
                Object.assign(eE, e)
            }
        });
        const tE = eE;
        let nE = {
            enter: "enter__zh enter_kO6",
            "enter-active": "enter-active_YAb enter-active_lrI",
            enterActive: "enter-active_YAb enter-active_lrI",
            exit: "exit_KiP exit_Von",
            "exit-active": "exit-active_g0a exit-active_jtN",
            exitActive: "exit-active_g0a exit-active_jtN"
        };
        X.add("game-ui/common/panel/themes/panel-transition.module.scss", {
            get classes() {
                return nE
            },
            set classes(e) {
                Object.assign(nE, e)
            }
        });
        const sE = nE
          , iE = new Ig("PanelHeader")
          , aE = new Ig("PanelContent")
          , oE = new Ig("PanelFooter");
        var rE = (0,
        Y.forwardRef)((function({focusKey: e, header: t, footer: n, theme: s=tE, transition: i=sE, transitionSounds: a, className: o, contentClassName: r, children: l, onClose: c, allowFocusExit: u, showCloseHint: d, hintClassName: m, unfocusedHintAction: h, backActionOverride: g, allowLooping: p, ...f}, x) {
            mp(a);
            const v = JT(s)
              , _ = Dm()
              , b = Y.Children.count(t) > 0
              , T = Y.Children.count(l) > 0
              , E = Y.Children.count(n) > 0
              , I = (0,
            Y.useMemo)((()=>({
                theme: v,
                onClose: c
            })), [v, c])
              , S = (0,
            z.jsx)(Ug, {
                onAction: c,
                action: g,
                children: (0,
                z.jsx)(QT.Provider, {
                    value: I,
                    children: (0,
                    z.jsx)(mh, {
                        styles: i,
                        children: (0,
                        z.jsxs)(Sp, {
                            ref: x,
                            focusKey: e,
                            className: Zu()(v.panel, o),
                            ...f,
                            children: [(0,
                            z.jsxs)(np, {
                                initialFocused: aE,
                                allowLooping: p,
                                direction: kg.Vertical,
                                children: [b && (0,
                                z.jsx)(ap, {
                                    focusKey: iE,
                                    children: (0,
                                    z.jsx)("div", {
                                        className: v.header,
                                        children: t
                                    })
                                }), T && (0,
                                z.jsx)(ap, {
                                    focusKey: aE,
                                    children: (0,
                                    z.jsx)("div", {
                                        className: Zu()(v.content, r),
                                        children: l
                                    })
                                }), E && (0,
                                z.jsx)(ap, {
                                    focusKey: oE,
                                    children: (0,
                                    z.jsx)("div", {
                                        className: v.footer,
                                        children: n
                                    })
                                })]
                            }), _ && (d || h) && (0,
                            z.jsx)(lE, {
                                focusedAction: "string" == typeof d ? d : void 0,
                                unfocusedAction: h,
                                className: Zu()(tE.floatingHint, m)
                            })]
                        })
                    })
                })
            });
            return u ? S : (0,
            z.jsx)(yp, {
                children: S
            })
        }
        ));
        const lE = ({focusedAction: e, unfocusedAction: t, ...n})=>{
            const s = sl(wm)
              , i = wh((0,
            Y.useContext)(Ju))
              , a = (0,
            Y.useMemo)((()=>s.find((e=>"Close" === e.name)) || s.find((e=>"Back" === e.name))), [s]);
            return i ? (0,
            z.jsx)(KT, {
                ...n,
                action: e || a?.name,
                active: !!e || !!a?.show
            }) : t ? (0,
            z.jsx)(KT, {
                ...n,
                action: t,
                active: !0
            }) : null
        }
        ;
        X.add("game-ui/common/panel/panel.tsx", {
            get Panel() {
                return rE
            },
            set Panel(e) {
                rE = e
            }
        });
        let cE = {
            header: "header_jAe header_Bpo child-opacity-transition_nkS",
            content: "content_VBF content_AD7 child-opacity-transition_nkS",
            footer: "footer_CZr footer_pD5 child-opacity-transition_nkS",
            title: "title_ctd title_zQN"
        };
        X.add("game-ui/common/panel/themes/dark-opaque.module.scss", {
            get classes() {
                return cE
            },
            set classes(e) {
                Object.assign(cE, e)
            }
        });
        const uE = cE;
        var dE = ({icon: e, theme: t, className: n, children: s, onCloseOverride: i, ...a})=>{
            const o = (0,
            Y.useContext)(QT)
              , r = Dm()
              , l = i ?? o.onClose
              , c = !r && null != l
              , u = t ?? o.theme;
            return (0,
            z.jsxs)("div", {
                ...a,
                className: Zu()(u.titleBar, n),
                children: [null != e ? (0,
                z.jsx)("img", {
                    src: e,
                    className: u.icon
                }) : c && (0,
                z.jsx)("div", {
                    className: u.iconSpace
                }), (0,
                z.jsx)("div", {
                    className: u.title,
                    children: s
                }), c ? (0,
                z.jsx)(tb, {
                    tinted: !0,
                    focusKey: Sg,
                    src: u.closeIcon,
                    theme: sb,
                    className: u.closeButton,
                    onSelect: l,
                    onMouseDown: e=>{
                        e.preventDefault(),
                        e.stopPropagation()
                    }
                }) : null != e && (0,
                z.jsx)("div", {
                    className: u.iconSpace
                })]
            })
        }
        ;
        X.add("game-ui/common/panel/panel-title-bar.tsx", {
            get PanelTitleBar() {
                return dE
            },
            set PanelTitleBar(e) {
                dE = e
            }
        });
        let mE = {
            dialog: "dialog_E8_",
            wide: "wide_XFu",
            row: "row_L6K",
            "pdx-title": "pdx-title_qXw",
            pdxTitle: "pdx-title_qXw",
            "pdx-button-row": "pdx-button-row_Dor",
            pdxButtonRow: "pdx-button-row_Dor",
            message: "message_SFv row_L6K",
            "error-message": "error-message_r4_",
            errorMessage: "error-message_r4_",
            paragraphs: "paragraphs_MnN paragraphs_nbD",
            buttons: "buttons_lZi row_L6K",
            button: "button_gJo",
            footer: "footer_Q7P row_L6K",
            "footer-label": "footer-label_AHF",
            footerLabel: "footer-label_AHF",
            "buttons-vertical": "buttons-vertical_Zha row_L6K",
            buttonsVertical: "buttons-vertical_Zha row_L6K",
            "button-ok": "button-ok_IS9 button_gJo",
            buttonOk: "button-ok_IS9 button_gJo",
            "error-dialog": "error-dialog_iaV",
            errorDialog: "error-dialog_iaV",
            "icon-layout": "icon-layout_cZT row_L6K",
            iconLayout: "icon-layout_cZT row_L6K",
            icon: "icon_JQd",
            "main-column": "main-column_Jzk",
            mainColumn: "main-column_Jzk",
            "error-details": "error-details_RaN row_L6K",
            errorDetails: "error-details_RaN row_L6K",
            content: "content_Aju",
            "copy-button": "copy-button_V8I",
            copyButton: "copy-button_V8I",
            "scroll-hint": "scroll-hint_qfE",
            scrollHint: "scroll-hint_qfE",
            "scroll-hint-label": "scroll-hint-label_ZAM",
            scrollHintLabel: "scroll-hint-label_ZAM",
            hint: "hint_oLL"
        };
        X.add("game-ui/common/panel/dialog/dialog.module.scss", {
            get classes() {
                return mE
            },
            set classes(e) {
                Object.assign(mE, e)
            }
        });
        const hE = mE;
        var gE = ({wide: e, title: t, content: n, buttons: s, theme: i=uE, zIndex: a, onClose: o, initialFocus: r, children: l})=>((0,
        Y.useEffect)((()=>{
            if (void 0 !== a)
                return document.body.style.setProperty("--panelBackdropIndex", `${a}`),
                ()=>{
                    document.body.style.removeProperty("--panelBackdropIndex")
                }
        }
        ), [a]),
        (0,
        z.jsx)(l_, {
            children: (0,
            z.jsxs)(rE, {
                theme: i,
                header: t && (0,
                z.jsx)(dE, {
                    children: t
                }),
                className: Zu()(hE.dialog, e && hE.wide),
                onClose: o,
                children: [(0,
                z.jsx)("div", {
                    className: hE.message,
                    children: l
                }), (0,
                z.jsx)(Fg, {
                    onAction: o,
                    children: (0,
                    z.jsxs)(np, {
                        initialFocused: r,
                        children: [n, s]
                    })
                })]
            })
        }));
        const pE = new Ig("CHILDREN_KEY")
          , fE = new Ig("DIALOG_KEY");
        var xE = (0,
        Y.createContext)({
            showDialog: ()=>{}
            ,
            closeAll: ()=>{}
        })
          , vE = (0,
        Y.createContext)({
            onClose: ()=>{}
        });
        let _E = 0;
        var bE = ({children: e})=>{
            const [t,n] = (0,
            Y.useState)([])
              , s = (0,
            Y.useMemo)((()=>({
                showDialog: e=>n((t=>[...t, e])),
                closeAll: ()=>n([])
            })), [])
              , i = (0,
            Y.useMemo)((()=>({
                onClose: ()=>n((e=>e.slice(0, -1)))
            })), [])
              , a = t[t.length - 1]
              , o = (0,
            Y.useMemo)((()=>_E += 1), [a]);
            return (0,
            z.jsx)(xE.Provider, {
                value: s,
                children: (0,
                z.jsxs)(op, {
                    focused: t.length > 0 ? fE : pE,
                    children: [(0,
                    z.jsx)(ap, {
                        focusKey: pE,
                        children: e
                    }), (0,
                    z.jsx)(ap, {
                        focusKey: fE,
                        children: (0,
                        z.jsx)(vE.Provider, {
                            value: i,
                            children: (0,
                            z.jsx)(ud, {
                                children: a && (0,
                                z.jsx)(Y.Fragment, {
                                    children: a
                                }, o)
                            })
                        })
                    })]
                })
            })
        }
        ;
        X.add("game-ui/common/panel/dialog/dialog.tsx", {
            get Dialog() {
                return gE
            },
            set Dialog(e) {
                gE = e
            },
            get DialogStack() {
                return xE
            },
            set DialogStack(e) {
                xE = e
            },
            get DialogContext() {
                return vE
            },
            set DialogContext(e) {
                vE = e
            },
            get DialogRenderer() {
                return bE
            },
            set DialogRenderer(e) {
                bE = e
            }
        });
        const TE = "app";
        var EE, IE, SE, yE;
        !function(e) {
            e[e.Off = 0] = "Off",
            e[e.Simple = 1] = "Simple",
            e[e.Advanced = 2] = "Advanced",
            e[e.Precise = 3] = "Precise"
        }(EE || (EE = {})),
        function(e) {
            e[e.Warning = 0] = "Warning",
            e[e.Error = 1] = "Error"
        }(IE || (IE = {})),
        function(e) {
            e[e.Quit = 1] = "Quit",
            e[e.SaveAndQuit = 2] = "SaveAndQuit",
            e[e.SaveAndContinue = 4] = "SaveAndContinue"
        }(SE || (SE = {})),
        function(e) {
            e[e.Unknown = 0] = "Unknown",
            e[e.Windows = 1] = "Windows",
            e[e.Linux = 2] = "Linux",
            e[e.OSX = 4] = "OSX",
            e[e.PS4 = 8] = "PS4",
            e[e.PS5 = 16] = "PS5",
            e[e.XBoxOne = 32] = "XBoxOne",
            e[e.XBoxSeriesX = 64] = "XBoxSeriesX",
            e[e.XBoxSeriesS = 128] = "XBoxSeriesS",
            e[e.XBoxSeries = 192] = "XBoxSeries",
            e[e.PC = 7] = "PC",
            e[e.Consoles = 248] = "Consoles",
            e[e.PS = 24] = "PS",
            e[e.XBox = 224] = "XBox"
        }(yE || (yE = {}));
        var jE = $r(TE, "ready")
          , CE = $r(TE, "activeUI")
          , NE = $r(TE, "bodyClassNames", "")
          , wE = $r(TE, "fpsMode")
          , OE = $r(TE, "frameStats")
          , PE = $r(TE, "activeLocale", "en-US")
          , LE = $r(TE, "currentError")
          , AE = $r(TE, "backgroundProcessMessage", null)
          , ME = Zr(TE, "confirmationDialog")
          , RE = $r(TE, "platform")
          , kE = (e,t,n)=>{
            const s = ic(n)
              , i = ic(t);
            return 0 == (e & sl(RE)) || Vr(i) ? s : i
        }
          , DE = $r(TE, "canContinueGame")
          , FE = $r(TE, "ownedPrerequisites");
        function UE(e) {
            return nl(TE, "arePrerequisitesMet", e)
        }
        var BE = Zr(TE, "checkContinueGamePrerequisites");
        function GE(e) {
            tl(TE, "confirmationDialogCallback", e)
        }
        function VE(e, t) {
            tl(TE, "dismissibleConfirmationDialogCallback", e, t)
        }
        function HE() {
            tl(TE, "exitApplication")
        }
        function KE() {
            tl(TE, "saveBackupAndExitApplication")
        }
        function WE() {
            tl(TE, "saveBackup")
        }
        function zE(e) {
            tl(TE, "setClipboard", e)
        }
        function YE() {
            tl(TE, "dismissCurrentError")
        }
        var $E = $r(TE, "activeUIModsLocation");
        X.add("game-ui/common/data-binding/app-bindings.ts", {
            get FPSMode() {
                return EE
            },
            set FPSMode(e) {
                EE = e
            },
            get Severity() {
                return IE
            },
            set Severity(e) {
                IE = e
            },
            get Actions() {
                return SE
            },
            set Actions(e) {
                SE = e
            },
            get Platform() {
                return yE
            },
            set Platform(e) {
                yE = e
            },
            get ready() {
                return ready
            },
            set ready(e) {
                ready = e
            },
            get activeUI() {
                return activeUI
            },
            set activeUI(e) {
                activeUI = e
            },
            get bodyClassNames() {
                return bodyClassNames
            },
            set bodyClassNames(e) {
                bodyClassNames = e
            },
            get fpsMode() {
                return fpsMode
            },
            set fpsMode(e) {
                fpsMode = e
            },
            get frameStats() {
                return frameStats
            },
            set frameStats(e) {
                frameStats = e
            },
            get activeLocale() {
                return activeLocale
            },
            set activeLocale(e) {
                activeLocale = e
            },
            get currentError() {
                return currentError
            },
            set currentError(e) {
                currentError = e
            },
            get backgroundProcessMessage() {
                return backgroundProcessMessage
            },
            set backgroundProcessMessage(e) {
                backgroundProcessMessage = e
            },
            get confirmationDialog() {
                return confirmationDialog
            },
            set confirmationDialog(e) {
                confirmationDialog = e
            },
            get platform() {
                return platform
            },
            set platform(e) {
                platform = e
            },
            get usePlatformTranslation() {
                return kE
            },
            set usePlatformTranslation(e) {
                kE = e
            },
            get canContinueGame() {
                return canContinueGame
            },
            set canContinueGame(e) {
                canContinueGame = e
            },
            get ownedPrerequisites() {
                return ownedPrerequisites
            },
            set ownedPrerequisites(e) {
                ownedPrerequisites = e
            },
            get arePrerequisitesMet() {
                return UE
            },
            set arePrerequisitesMet(e) {
                UE = e
            },
            get checkContinueGamePrerequisites() {
                return checkContinueGamePrerequisites
            },
            set checkContinueGamePrerequisites(e) {
                checkContinueGamePrerequisites = e
            },
            get confirmationDialogCallback() {
                return GE
            },
            set confirmationDialogCallback(e) {
                GE = e
            },
            get dismissibleConfirmationDialogCallback() {
                return VE
            },
            set dismissibleConfirmationDialogCallback(e) {
                VE = e
            },
            get exitApplication() {
                return HE
            },
            set exitApplication(e) {
                HE = e
            },
            get saveBackupAndExitApplication() {
                return KE
            },
            set saveBackupAndExitApplication(e) {
                KE = e
            },
            get saveBackup() {
                return WE
            },
            set saveBackup(e) {
                WE = e
            },
            get setClipboard() {
                return zE
            },
            set setClipboard(e) {
                zE = e
            },
            get dismissCurrentError() {
                return YE
            },
            set dismissCurrentError(e) {
                YE = e
            },
            get activeUIModsLocation() {
                return activeUIModsLocation
            },
            set activeUIModsLocation(e) {
                activeUIModsLocation = e
            }
        });
        class qE {
            _callback = null;
            scrollTo(e, t) {
                null != this._callback && this._callback.scrollTo(e, t)
            }
            scrollBy(e, t) {
                null != this._callback && this._callback.scrollBy(e, t)
            }
            smoothScrollTo(e, t) {
                null != this._callback && this._callback.smoothScrollTo(e, t)
            }
            scrollIntoView(e) {
                null != this._callback && this._callback.scrollIntoView(e)
            }
            _attachCallback(e) {
                null == this._callback ? this._callback = e : console.warn("Scroll controller callback already attached!")
            }
            _detachCallback(e) {
                this._callback === e ? this._callback = null : console.warn("Scroll controller callback not attached!")
            }
        }
        function XE() {
            return (0,
            Y.useMemo)((()=>new qE), [])
        }
        X.add("game-ui/common/scrolling/scroll-controller.ts", {}),
        X.add("game-ui/common/hooks/use-scroll-controller.tsx", {
            get useScrollController() {
                return XE
            },
            set useScrollController(e) {
                XE = e
            }
        });
        let QE = {
            button: "button_HeP",
            negative: "negative_ocn"
        };
        X.add("game-ui/common/input/button/themes/dialog-button.module.scss", {
            get classes() {
                return QE
            },
            set classes(e) {
                Object.assign(QE, e)
            }
        });
        const ZE = QE;
        let JE = {
            button: "button_Ylt"
        };
        X.add("game-ui/common/input/button/themes/paradox-primary-button.module.scss", {
            get classes() {
                return JE
            },
            set classes(e) {
                Object.assign(JE, e)
            }
        });
        const eI = JE;
        let tI = {
            button: "button_Yp5"
        };
        X.add("game-ui/common/input/button/themes/paradox-secondary-button.module.scss", {
            get classes() {
                return tI
            },
            set classes(e) {
                Object.assign(tI, e)
            }
        });
        const nI = tI;
        var sI = ({controller: e, children: t})=>{
            const n = Hm()
              , s = (0,
            Y.useRef)(0)
              , i = (0,
            Y.useMemo)((()=>({
                "Scroll Vertical": e=>{
                    s.current = 300 * -e
                }
            })), []);
            return (0,
            Y.useEffect)((()=>{
                let t = performance.now()
                  , i = 0;
                const a = o=>{
                    if (0 !== s.current) {
                        const i = (o - t) / 1e3;
                        e.scrollBy(0, s.current * i * n)
                    }
                    t = o,
                    i = window.requestAnimationFrame(a)
                }
                ;
                return i = window.requestAnimationFrame(a),
                ()=>window.cancelAnimationFrame(i)
            }
            ), [e, n]),
            (0,
            z.jsx)(Mg, {
                actions: i,
                children: t
            })
        }
        ;
        X.add("game-ui/common/scrolling/scroll-action-consumer/scroll-action-consumer.tsx", {
            get ScrollActionConsumer() {
                return sI
            },
            set ScrollActionConsumer(e) {
                sI = e
            }
        });
        let iI = {
            hint: "hint_DYv"
        };
        X.add("game-ui/common/input/text/text-input-hint.module.scss", {
            get classes() {
                return iI
            },
            set classes(e) {
                Object.assign(iI, e)
            }
        });
        const aI = iI;
        var oI = Y.forwardRef((function({focusKey: e, debugName: t="TextInput", type: n="text", value: s="", selectAllOnFocus: i=!0, placeholder: a="", vkTitle: o="", vkDescription: r="", disabled: l, forceHint: c, showHint: u, className: d, multiline: m, onFocus: h, onBlur: g, onKeyDown: p, onChange: f, onMouseUp: x, onSelect: v, onBack: _, onDoubleClick: b, ...T}, E) {
            const I = (0,
            Y.useRef)(null)
              , S = gd(E, I)
              , y = gp(jg(e ?? (l ? Sg : yg), t), I)
              , j = wh(y)
              , C = Dm()
              , N = sl(Mm)
              , [w,O] = (0,
            Y.useState)(!1)
              , P = (0,
            Y.useCallback)((()=>{
                null != I.current && document.activeElement === I.current && (I.current.blur(),
                _ && _())
            }
            ), [_])
              , L = (0,
            Y.useMemo)((()=>w ? {
                Close: P,
                Back: P
            } : {
                Select: ()=>{
                    if (null != I.current) {
                        const e = I.current.getBoundingClientRect();
                        Am(e.x, e.y, e.width, e.height),
                        R_(I, "--selectAnimation", "--selectDuration"),
                        I.current.focus(),
                        v && v()
                    }
                }
            }), [w, v, P])
              , A = (0,
            Y.useCallback)((e=>{
                M.current = !1,
                (!m && 13 === e.keyCode || 27 === e.keyCode) && e.currentTarget.blur(),
                e.stopPropagation(),
                p && p(e)
            }
            ), [m, p])
              , M = (0,
            Y.useRef)(!1)
              , R = (0,
            Y.useCallback)((e=>{
                M.current = !1,
                f && f(e)
            }
            ), [f])
              , k = (0,
            Y.useCallback)((e=>{
                O(!0),
                M.current = !0,
                h && h(e),
                cp(lp.selectItem)
            }
            ), [h])
              , D = (0,
            Y.useCallback)((()=>cp(lp.hoverItem)), [])
              , F = (0,
            Y.useCallback)((e=>{
                if (M.current) {
                    if (null != I.current && I.current.selectionStart === I.current.selectionEnd) {
                        const e = I.current.value.length;
                        I.current.setSelectionRange(0, e)
                    }
                    M.current = !1
                }
                x && x(e)
            }
            ), [x])
              , U = (0,
            Y.useCallback)((e=>{
                O(!1),
                g && g(e)
            }
            ), [g]);
            (0,
            Y.useEffect)((()=>{
                C && !j && I.current && I.current.blur()
            }
            ), [j, C]),
            (0,
            Y.useEffect)((()=>{
                if (I.current) {
                    const e = I.current
                      , t = ()=>{
                        if (e && M.current) {
                            const t = e.value.length;
                            e.setSelectionRange(i ? 0 : t, t)
                        }
                        M.current = !1
                    }
                    ;
                    return e.addEventListener("focus", t),
                    ()=>e.removeEventListener("focus", t)
                }
            }
            ), [i]);
            const B = (0,
            Y.useCallback)((e=>{
                b?.(e),
                I.current && I.current.setSelectionRange(0, I.current.value.length)
            }
            ), [b])
              , G = ic(a)
              , V = !w && !s && G
              , H = ic(o)
              , K = ic(r)
              , W = void 0 !== m ? "textarea" : "input"
              , {displayName: $, hidden: q, tooltip: X, tutorialTag: Q, uiTag: Z, __Type: J, warning: ee, ...te} = T;
            return (0,
            z.jsx)(Np, {
                disabled: !w || !C || !N,
                excludes: ["Save Game", "Change Value"],
                children: (0,
                z.jsx)(Mg, {
                    actions: L,
                    children: (0,
                    z.jsxs)(Lh, {
                        controller: y,
                        children: [u && (0,
                        z.jsx)(UT, {
                            action: w ? "Back" : "Select",
                            active: !(!j && !c),
                            theme: aI
                        }), (0,
                        z.jsx)(W, {
                            ...te,
                            ref: S,
                            type: "password" === n && V ? "text" : n,
                            disabled: l,
                            className: Zu()(d, j && C && "focused", V && "placeholder"),
                            "vk-title": H,
                            "vk-description": K,
                            "vk-type": n,
                            rows: "number" == typeof m ? m : 5,
                            onFocus: k,
                            onBlur: U,
                            onKeyDown: A,
                            onMouseUp: F,
                            onMouseEnter: D,
                            onDoubleClick: B,
                            value: V ? G : s,
                            onChange: R
                        })]
                    })
                })
            })
        }
        ));
        X.add("game-ui/common/input/text/text-input.tsx", {
            get TextInput() {
                return oI
            },
            set TextInput(e) {
                oI = e
            }
        });
        const rI = "paradox";
        var lI = $r(rI, "requestActive")
          , cI = $r(rI, "loggedIn")
          , uI = $r(rI, "accountLinkState")
          , dI = $r(rI, "accountLinkProvider")
          , mI = $r(rI, "userName")
          , hI = $r(rI, "email")
          , gI = $r(rI, "avatar")
          , pI = $r(rI, "hasInternetConnection")
          , fI = $r(rI, "pdxSDKEnabled");
        function xI() {
            tl(rI, "linkAccount")
        }
        function vI() {
            tl(rI, "unlinkAccount")
        }
        function _I() {
            tl(rI, "logout")
        }
        var bI, TI = $r(rI, "activeDialogs");
        function EI() {
            tl(rI, "closeActiveDialog")
        }
        function II(e) {
            tl(rI, "onOptionSelected", e)
        }
        function SI() {
            tl(rI, "showLoginForm")
        }
        function yI(e) {
            tl(rI, "submitPasswordReset", e)
        }
        function jI(e) {
            tl(rI, "submitLoginForm", Vu(e, "Game.UI.Menu.ParadoxBindings+LoginFormData"))
        }
        !function(e) {
            e.Login = "Game.UI.Menu.ParadoxBindings+LoginDialog",
            e.Registration = "Game.UI.Menu.ParadoxBindings+RegistrationDialog",
            e.AccountLink = "Game.UI.Menu.ParadoxBindings+AccountLinkDialog",
            e.AccountLinkOverwrite = "Game.UI.Menu.ParadoxBindings+AccountLinkOverwriteDialog",
            e.LegalDocument = "Game.UI.Menu.ParadoxBindings+LegalDocumentDialog",
            e.Confirmation = "Game.UI.Menu.ParadoxBindings+ConfirmationDialog",
            e.Error = "Game.UI.Menu.ParadoxBindings+ErrorDialog",
            e.MultiOption = "Game.UI.Menu.ParadoxBindings+MultiOptionDialog"
        }(bI || (bI = {}));
        var CI, NI = $r(rI, "countryCodes");
        function wI() {
            tl(rI, "showRegistrationForm")
        }
        function OI(e) {
            tl(rI, "showLink", e)
        }
        function PI(e) {
            tl(rI, "submitRegistrationForm", Vu(e, "Game.UI.Menu.ParadoxBindings+RegistrationFormData"))
        }
        function LI() {
            tl(rI, "confirmAccountLink")
        }
        function AI() {
            tl(rI, "confirmAccountLinkOverwrite")
        }
        function MI() {
            tl(rI, "markLegalDocumentAsViewed")
        }
        function RI() {
            tl(rI, "showTermsOfUse")
        }
        function kI() {
            tl(rI, "showPrivacyPolicy")
        }
        !function(e) {
            e[e.hidden = 0] = "hidden",
            e[e.unlinked = 1] = "unlinked",
            e[e.linked = 2] = "linked"
        }(CI || (CI = {})),
        X.add("game-ui/menu/data-binding/paradox-bindings.ts", {
            get requestActive() {
                return requestActive
            },
            set requestActive(e) {
                requestActive = e
            },
            get loggedIn() {
                return loggedIn
            },
            set loggedIn(e) {
                loggedIn = e
            },
            get accountLinkState() {
                return accountLinkState
            },
            set accountLinkState(e) {
                accountLinkState = e
            },
            get accountLinkProvider() {
                return accountLinkProvider
            },
            set accountLinkProvider(e) {
                accountLinkProvider = e
            },
            get userName() {
                return userName
            },
            set userName(e) {
                userName = e
            },
            get email() {
                return email
            },
            set email(e) {
                email = e
            },
            get avatar() {
                return avatar
            },
            set avatar(e) {
                avatar = e
            },
            get hasInternetConnection() {
                return hasInternetConnection
            },
            set hasInternetConnection(e) {
                hasInternetConnection = e
            },
            get pdxSDKEnabled() {
                return pdxSDKEnabled
            },
            set pdxSDKEnabled(e) {
                pdxSDKEnabled = e
            },
            get linkAccount() {
                return xI
            },
            set linkAccount(e) {
                xI = e
            },
            get unlinkAccount() {
                return vI
            },
            set unlinkAccount(e) {
                vI = e
            },
            get logout() {
                return _I
            },
            set logout(e) {
                _I = e
            },
            get activeDialogs() {
                return activeDialogs
            },
            set activeDialogs(e) {
                activeDialogs = e
            },
            get closeActiveDialog() {
                return EI
            },
            set closeActiveDialog(e) {
                EI = e
            },
            get onOptionSelected() {
                return II
            },
            set onOptionSelected(e) {
                II = e
            },
            get ParadoxDialogType() {
                return bI
            },
            set ParadoxDialogType(e) {
                bI = e
            },
            get showLoginForm() {
                return SI
            },
            set showLoginForm(e) {
                SI = e
            },
            get submitPasswordReset() {
                return yI
            },
            set submitPasswordReset(e) {
                yI = e
            },
            get submitLoginForm() {
                return jI
            },
            set submitLoginForm(e) {
                jI = e
            },
            get countryCodes() {
                return countryCodes
            },
            set countryCodes(e) {
                countryCodes = e
            },
            get showRegistrationForm() {
                return wI
            },
            set showRegistrationForm(e) {
                wI = e
            },
            get showLink() {
                return OI
            },
            set showLink(e) {
                OI = e
            },
            get submitRegistrationForm() {
                return PI
            },
            set submitRegistrationForm(e) {
                PI = e
            },
            get confirmAccountLink() {
                return LI
            },
            set confirmAccountLink(e) {
                LI = e
            },
            get confirmAccountLinkOverwrite() {
                return AI
            },
            set confirmAccountLinkOverwrite(e) {
                AI = e
            },
            get markLegalDocumentAsViewed() {
                return MI
            },
            set markLegalDocumentAsViewed(e) {
                MI = e
            },
            get ShowTermsOfUse() {
                return RI
            },
            set ShowTermsOfUse(e) {
                RI = e
            },
            get ShowPrivacyPolicy() {
                return kI
            },
            set ShowPrivacyPolicy(e) {
                kI = e
            },
            get AccountLinkState() {
                return CI
            },
            set AccountLinkState(e) {
                CI = e
            }
        });
        let DI = {
            "paradox-dialog": "paradox-dialog_wt7",
            paradoxDialog: "paradox-dialog_wt7",
            wide: "wide_h40",
            header: "header_G7_",
            "close-button": "close-button_FeS",
            closeButton: "close-button_FeS",
            content: "content_hZD",
            "form-container": "form-container_Lw7",
            formContainer: "form-container_Lw7",
            "icon-row": "icon-row_rFk",
            iconRow: "icon-row_rFk",
            icon: "icon_Bz_",
            title: "title_dnP",
            "button-row": "button-row_tSi",
            buttonRow: "button-row_tSi",
            "button-column": "button-column_o63",
            buttonColumn: "button-column_o63",
            "flex-row": "flex-row_a_W",
            flexRow: "flex-row_a_W",
            "form-row": "form-row_LB0",
            formRow: "form-row_LB0",
            "form-row-label": "form-row-label_xO0",
            formRowLabel: "form-row-label_xO0",
            "light-field": "light-field_CGM",
            lightField: "light-field_CGM",
            "dark-field": "dark-field_bE7",
            darkField: "dark-field_bE7",
            "form-field": "form-field_D62",
            formField: "form-field_D62",
            invalid: "invalid_LPr",
            placeholder: "placeholder_U9A",
            "children-focused": "children-focused_aa6",
            childrenFocused: "children-focused_aa6",
            "form-field-children": "form-field-children_xfw",
            formFieldChildren: "form-field-children_xfw",
            "form-field-input": "form-field-input_Qxc",
            formFieldInput: "form-field-input_Qxc",
            "forgot-password-link": "forgot-password-link_Wch",
            forgotPasswordLink: "forgot-password-link_Wch",
            "day-field": "day-field_fHK",
            dayField: "day-field_fHK",
            "month-field": "month-field_Um1",
            monthField: "month-field_Um1",
            "year-field": "year-field_l7n",
            yearField: "year-field_l7n",
            "labeled-toggle": "labeled-toggle_Hn2",
            labeledToggle: "labeled-toggle_Hn2",
            toggle: "toggle_Zwc",
            "primary-button": "primary-button_klN",
            primaryButton: "primary-button_klN",
            focused: "focused_vZY",
            "registration-hint": "registration-hint_iqm",
            registrationHint: "registration-hint_iqm",
            label: "label_Ujn",
            terms: "terms_p0E",
            divider: "divider_ms0",
            "document-scrollable": "document-scrollable_EHj",
            documentScrollable: "document-scrollable_EHj",
            "document-text": "document-text_T4G",
            documentText: "document-text_T4G",
            "scroll-hint": "scroll-hint_vKd",
            scrollHint: "scroll-hint_vKd",
            "scroll-hint-label": "scroll-hint-label_qUP",
            scrollHintLabel: "scroll-hint-label_qUP",
            "dropdown-item": "dropdown-item_gFJ",
            dropdownItem: "dropdown-item_gFJ",
            hint: "hint_PBH",
            "dropdown-item-hint": "dropdown-item-hint_Q7U",
            dropdownItemHint: "dropdown-item-hint_Q7U",
            "checkbox-hint": "checkbox-hint_b3B",
            checkboxHint: "checkbox-hint_b3B",
            "dropdown-label": "dropdown-label_ONK",
            dropdownLabel: "dropdown-label_ONK"
        };
        X.add("game-ui/menu/components/paradox/dialogs/paradox-dialog.module.scss", {
            get classes() {
                return DI
            },
            set classes(e) {
                Object.assign(DI, e)
            }
        });
        const FI = DI;
        var UI = ({wide: e, onClose: t, children: n})=>{
            const s = Dm();
            return (0,
            z.jsx)(Fg, {
                onAction: t,
                children: (0,
                z.jsxs)("div", {
                    className: Zu()(FI.paradoxDialog, e && FI.wide),
                    children: [(0,
                    z.jsx)("div", {
                        className: FI.header,
                        children: !s && t && (0,
                        z.jsx)(tb, {
                            tinted: !0,
                            focusKey: Sg,
                            src: "Media/Glyphs/Close.svg",
                            theme: sb,
                            className: FI.closeButton,
                            onSelect: t
                        })
                    }), (0,
                    z.jsx)("div", {
                        className: FI.content,
                        children: n
                    })]
                })
            })
        }
          , BI = ({icon: e, titleId: t, messageId: n, messageArgs: s, children: i})=>(0,
        z.jsx)(UI, {
            onClose: EI,
            children: (0,
            z.jsxs)(np, {
                children: [e && (0,
                z.jsx)("div", {
                    className: FI.iconRow,
                    children: (0,
                    z.jsx)("img", {
                        src: e,
                        className: FI.icon
                    })
                }), t && (0,
                z.jsx)("div", {
                    className: FI.title,
                    children: (0,
                    z.jsx)(cc, {
                        id: t
                    })
                }), n && (0,
                z.jsx)("p", {
                    children: (0,
                    z.jsx)(cc, {
                        id: n,
                        args: s
                    })
                }), i]
            })
        })
          , GI = ({type: e, value: t, placeholder: n, invalid: s, className: i, vkTitle: a, children: o, onChange: r})=>{
            const l = (0,
            Y.useCallback)((e=>r(e.target.value)), [r])
              , [c,u] = (0,
            Y.useState)(!1)
              , [d,m] = (0,
            Y.useState)(!1)
              , [h,g] = (0,
            Y.useState)(!1)
              , p = (0,
            Y.useCallback)((()=>{
                g(!1)
            }
            ), [])
              , f = (0,
            Y.useCallback)((()=>{
                g(!0)
            }
            ), [])
              , x = !d && c;
            return (0,
            z.jsx)(Sp, {
                onFocusChange: u,
                className: Zu()(FI.formField, s && FI.invalid, d && FI.childrenFocused, i),
                children: (0,
                z.jsxs)(np, {
                    children: [(0,
                    z.jsx)(UT, {
                        action: h ? "Back" : "Select",
                        active: x,
                        className: FI.hint
                    }), (0,
                    z.jsx)(oI, {
                        type: e,
                        value: t,
                        placeholder: n,
                        vkTitle: a,
                        onChange: l,
                        onBlur: p,
                        onFocus: f,
                        className: FI.formFieldInput
                    }), (0,
                    z.jsx)(Ip, {
                        onFocusChange: m,
                        className: FI.formFieldChildren,
                        children: o
                    })]
                })
            })
        }
          , VI = ({value: e, label: t, invalid: n, disabled: s, onChange: i})=>{
            const [a,o] = (0,
            Y.useState)(!1);
            return (0,
            z.jsxs)(Sp, {
                className: FI.labeledToggle,
                onFocusChange: o,
                children: [(0,
                z.jsx)(UT, {
                    action: "Select",
                    active: a,
                    className: Zu()(FI.hint, FI.checkboxHint)
                }), (0,
                z.jsx)(Hb, {
                    checked: e,
                    disabled: s,
                    className: Zu()(FI.toggle, n && FI.invalid),
                    onChange: i
                }), (0,
                z.jsx)("div", {
                    className: FI.label,
                    children: t
                })]
            })
        }
        ;
        X.add("game-ui/menu/components/paradox/dialogs/paradox-dialog.tsx", {
            get ParadoxDialog() {
                return UI
            },
            set ParadoxDialog(e) {
                UI = e
            },
            get MessageDialog() {
                return BI
            },
            set MessageDialog(e) {
                BI = e
            },
            get FormField() {
                return GI
            },
            set FormField(e) {
                GI = e
            },
            get LabeledToggle() {
                return VI
            },
            set LabeledToggle(e) {
                VI = e
            }
        });
        const HI = new Ig("CANCEL_KEY");
        var KI = ({...e})=>{
            const [t,n] = (0,
            Y.useState)(!1)
              , s = (0,
            Y.useContext)(vE)
              , i = (0,
            Y.useCallback)((n=>{
                s.onClose(),
                e.dismissible ? VE(n, t) : GE(n)
            }
            ), [s, t, e.dismissible])
              , a = sc()
              , o = (0,
            Y.useCallback)((()=>{
                zE(pu(a, e.details).replaceAll("\\\\", "\\").replaceAll("**", ""))
            }
            ), [a, e.details])
              , r = XE()
              , [l,c] = (0,
            Y.useState)(!1);
            return "Paradox" === e.skin ? (0,
            z.jsx)(l_, {
                children: (0,
                z.jsx)(UI, {
                    onClose: ()=>i(-1),
                    children: (0,
                    z.jsxs)(np, {
                        children: [e.title && (0,
                        z.jsx)("div", {
                            className: hE.pdxTitle,
                            children: (0,
                            z.jsx)(gu, {
                                value: e.title
                            })
                        }), (0,
                        z.jsx)(Cb, {
                            theme: hE,
                            children: (0,
                            z.jsx)(gu, {
                                value: e.message
                            })
                        }), (0,
                        z.jsx)("div", {
                            className: hE.pdxButtonRow,
                            children: (0,
                            z.jsx)(WI, {
                                dismissed: t,
                                setDismissed: n,
                                callback: i,
                                ...e
                            })
                        })]
                    })
                })
            }) : (0,
            z.jsx)(sI, {
                controller: r,
                children: (0,
                z.jsx)(gE, {
                    title: e.title && (0,
                    z.jsx)(gu, {
                        value: e.title
                    }),
                    buttons: (0,
                    z.jsx)(WI, {
                        dismissed: t,
                        setDismissed: n,
                        callback: i,
                        ...e
                    }),
                    content: e.details && (0,
                    z.jsx)("div", {
                        className: hE.iconLayout,
                        children: (0,
                        z.jsx)("div", {
                            className: hE.mainColumn,
                            children: (0,
                            z.jsxs)("div", {
                                className: hE.errorDetails,
                                children: [(0,
                                z.jsx)(hb, {
                                    controller: r,
                                    className: hE.content,
                                    hintClassName: hE.scrollHint,
                                    labelClassName: hE.scrollHintLabel,
                                    children: (0,
                                    z.jsx)(Cb, {
                                        children: (0,
                                        z.jsx)(gu, {
                                            value: e.details
                                        })
                                    })
                                }), e.copyButton && (0,
                                z.jsx)(Ah, {
                                    onFocusChange: c,
                                    children: (0,
                                    z.jsx)(tb, {
                                        disableHint: !0,
                                        tinted: !0,
                                        src: "Media/Glyphs/Copy.svg",
                                        className: hE.copyButton,
                                        onSelect: o,
                                        children: (0,
                                        z.jsx)(UT, {
                                            action: "Select",
                                            active: l,
                                            className: hE.hint
                                        })
                                    })
                                })]
                            })
                        })
                    }),
                    onClose: ()=>i(1),
                    wide: null !== e.details,
                    initialFocus: HI,
                    children: (0,
                    z.jsx)(Cb, {
                        theme: hE,
                        children: (0,
                        z.jsx)(gu, {
                            value: e.message
                        })
                    })
                })
            })
        }
        ;
        const WI = ({dismissed: e, setDismissed: t, callback: n, ...s})=>{
            const [i,a] = (0,
            Y.useState)(0)
              , o = Dm()
              , r = (0,
            Y.useMemo)((()=>{
                const e = [0];
                if (s.otherActions)
                    for (let t = 0; t < s.otherActions.length; t += 1)
                        e.push(t + 2);
                return s.cancelAction && e.push(1),
                e
            }
            ), [s.cancelAction, s.otherActions])
              , l = (0,
            Y.useMemo)((()=>({
                "Select Popup Button": e=>{
                    a(e >= 0 ? (i + 1) % r.length : (i + r.length - 1) % r.length)
                }
            })), [i, r]);
            return (0,
            z.jsx)(Mg, {
                actions: l,
                disabled: o,
                children: (0,
                z.jsxs)(np, {
                    children: [(0,
                    z.jsxs)("div", {
                        className: hE.buttons,
                        children: [(0,
                        z.jsx)(U_, {
                            theme: "Paradox" === s.skin ? eI : ZE,
                            className: Zu()("Default" === s.skin && hE.button),
                            onSelect: ()=>n(0),
                            selected: !o && 0 === r[i],
                            shortcut: o || 0 !== r[i] ? void 0 : "Confirm",
                            children: (0,
                            z.jsx)(gu, {
                                value: s.confirmAction
                            })
                        }), s.otherActions && s.otherActions.map(((e,t)=>(0,
                        z.jsx)(U_, {
                            theme: "Paradox" === s.skin ? eI : ZE,
                            className: Zu()("Default" === s.skin && hE.button),
                            onSelect: ()=>n(t + 2),
                            selected: !o && r[i] === t + 2,
                            shortcut: o || r[i] !== t + 2 ? void 0 : "Confirm",
                            children: (0,
                            z.jsx)(gu, {
                                value: e
                            })
                        }, t))), s.cancelAction && (0,
                        z.jsx)(U_, {
                            focusKey: HI,
                            theme: "Paradox" === s.skin ? nI : ZE,
                            className: Zu()("Default" === s.skin && hE.button, "Default" === s.skin && ZE.negative),
                            onSelect: ()=>n(1),
                            selected: !o && 1 === r[i],
                            shortcut: o || 1 !== r[i] ? void 0 : "Confirm",
                            children: (0,
                            z.jsx)(gu, {
                                value: s.cancelAction
                            })
                        })]
                    }), s.dismissible && (0,
                    z.jsxs)("div", {
                        className: hE.footer,
                        children: [(0,
                        z.jsx)(Hb, {
                            checked: e,
                            onChange: t
                        }), (0,
                        z.jsx)("div", {
                            className: hE.footerLabel,
                            children: (0,
                            z.jsx)(_c.Common.DONT_SHOW_AGAIN, {})
                        })]
                    })]
                })
            })
        }
        ;
        var zI = ({title: e, message: t, children: n, confirm: s, cancel: i, onConfirm: a, onCancel: o, zIndex: r, dismissible: l=!1, cancellable: c=!0})=>{
            const u = (0,
            Y.useContext)(vE)
              , [d,m] = (0,
            Y.useState)(!1)
              , h = (0,
            Y.useCallback)((()=>{
                u.onClose(),
                o && o()
            }
            ), [u, o])
              , g = (0,
            Y.useCallback)((()=>{
                u.onClose(),
                a(d)
            }
            ), [u, d, a])
              , [p,f] = (0,
            Y.useState)(0)
              , x = Dm()
              , v = (0,
            Y.useMemo)((()=>{
                const e = [];
                return !1 !== s && e.push(0),
                c && e.push(1),
                e
            }
            ), [c, s])
              , _ = (0,
            Y.useMemo)((()=>({
                "Select Popup Button": e=>{
                    f(e >= 0 ? (p + 1) % v.length : (p + v.length - 1) % v.length)
                }
            })), [p, v]);
            return (0,
            z.jsx)(Fg, {
                onAction: h,
                children: (0,
                z.jsx)(Mg, {
                    actions: _,
                    disabled: x,
                    children: (0,
                    z.jsxs)(gE, {
                        title: e,
                        zIndex: r,
                        buttons: (0,
                        z.jsxs)(z.Fragment, {
                            children: [(0,
                            z.jsxs)("div", {
                                className: hE.buttons,
                                children: [!1 !== s && (0,
                                z.jsx)(U_, {
                                    theme: ZE,
                                    className: hE.button,
                                    onSelect: g,
                                    selected: !x && 0 === v[p],
                                    shortcut: x || 0 !== v[p] ? void 0 : "Confirm",
                                    children: s ?? (0,
                                    z.jsx)(_c.Common.YES, {})
                                }), c && (0,
                                z.jsx)(U_, {
                                    focusKey: HI,
                                    theme: ZE,
                                    className: Zu()(hE.button, ZE.negative),
                                    onSelect: h,
                                    selected: !x && 1 === v[p],
                                    shortcut: x || 1 !== v[p] ? void 0 : "Confirm",
                                    children: i ?? (0,
                                    z.jsx)(_c.Common.NO, {})
                                })]
                            }), l && (0,
                            z.jsxs)("div", {
                                className: hE.footer,
                                children: [(0,
                                z.jsx)(Hb, {
                                    checked: d,
                                    onChange: m
                                }), (0,
                                z.jsx)("div", {
                                    className: hE.footerLabel,
                                    children: (0,
                                    z.jsx)(_c.Common.DONT_SHOW_AGAIN, {})
                                })]
                            })]
                        }),
                        onClose: h,
                        initialFocus: HI,
                        children: [t && (0,
                        z.jsx)(Cb, {
                            theme: hE,
                            children: t
                        }), n]
                    })
                })
            })
        }
        ;
        X.add("game-ui/common/panel/dialog/confirmation-dialog.tsx", {
            get GameTriggeredConfirmationDialog() {
                return KI
            },
            set GameTriggeredConfirmationDialog(e) {
                KI = e
            },
            get UITriggeredConfirmationDialog() {
                return zI
            },
            set UITriggeredConfirmationDialog(e) {
                zI = e
            }
        });
        let YI = {
            button: "button_ke4",
            icon: "icon_be5"
        };
        X.add("game-ui/common/input/button/floating-icon-button.module.scss", {
            get classes() {
                return YI
            },
            set classes(e) {
                Object.assign(YI, e)
            }
        });
        const $I = YI;
        var qI = ({theme: e, children: t, ...n})=>(0,
        z.jsx)(tb, {
            ...n,
            theme: e,
            children: (0,
            z.jsx)("div", {
                className: e.label,
                children: t
            })
        });
        X.add("game-ui/common/input/button/labeled-icon-button.tsx", {
            get LabeledIconButton() {
                return qI
            },
            set LabeledIconButton(e) {
                qI = e
            }
        });
        let XI = {
            button: "button_7tF"
        };
        X.add("game-ui/common/input/button/themes/flat-button.module.scss", {
            get classes() {
                return XI
            },
            set classes(e) {
                Object.assign(XI, e)
            }
        });
        const QI = XI;
        let ZI = {
            button: "button_GME",
            hint: "hint_zER"
        };
        X.add("game-ui/common/input/button/themes/primary-button.module.scss", {
            get classes() {
                return ZI
            },
            set classes(e) {
                Object.assign(ZI, e)
            }
        });
        const JI = ZI;
        let eS = {
            button: "button_uFa child-opacity-transition_nkS",
            icon: "icon_zVk",
            label: "label_NLv"
        };
        X.add("game-ui/menu/themes/menu-item.module.scss", {
            get classes() {
                return eS
            },
            set classes(e) {
                Object.assign(eS, e)
            }
        });
        const tS = eS
          , nS = {
            flat: QI,
            primary: JI,
            round: sb,
            menu: tS,
            default: D_,
            icon: eb,
            floating: $I
        };
        var sS = e=>{
            const {variant: t="default"} = e;
            let n = nS[t];
            return e.src ? n.label ? (0,
            z.jsx)(qI, {
                theme: n,
                ...e,
                src: e.src
            }) : ("default" === t && (n = nS.icon),
            (0,
            z.jsx)(tb, {
                theme: n,
                ...e,
                src: e.src
            })) : (0,
            z.jsx)(U_, {
                theme: n,
                ...e
            })
        }
          , iS = e=>{
            const t = e.src || "Media/Glyphs/Credits.svg";
            return (0,
            z.jsx)(sS, {
                tinted: !0,
                variant: "menu",
                ...e,
                src: t
            })
        }
          , aS = e=>{
            const t = e.src || "Media/Glyphs/Credits.svg";
            return (0,
            z.jsx)(sS, {
                tinted: !0,
                variant: "floating",
                ...e,
                src: t
            })
        }
        ;
        X.add("game-ui/ui/button.tsx", {
            get Button() {
                return sS
            },
            set Button(e) {
                sS = e
            },
            get MenuButton() {
                return iS
            },
            set MenuButton(e) {
                iS = e
            },
            get FloatingButton() {
                return aS
            },
            set FloatingButton(e) {
                aS = e
            }
        });
        var oS = (0,
        Y.createContext)(!0)
          , rS = ({visible: e, direction: t="down", alignment: n="left", minHeight: s=0, minWidth: i=0, className: a, content: o, children: r, style: l})=>{
            const c = (0,
            Y.useRef)(null)
              , u = (0,
            Y.useRef)(null)
              , d = gm(c, e)
              , m = gm(u, e && null != u)
              , h = Um(e)
              , g = Hm()
              , p = (0,
            Y.useMemo)((()=>e && null != d ? function(e, t, n, s, i, a, o) {
                const r = t.y - e.bottom
                  , l = e.top;
                i > 0 && ("down" === n && r < i && r < l ? n = "up" : l < i && l < r && (n = "down"));
                let c, u;
                if ("left" === s) {
                    const n = null != o ? Math.max(e.left + o.width - t.x, 0) : 0;
                    c = e.left - n
                } else
                    u = t.x - e.right;
                return "up" === n ? {
                    position: "absolute",
                    left: c,
                    right: u,
                    bottom: t.y - e.top,
                    maxHeight: l,
                    minWidth: a,
                    visibility: o && o.width > 0 ? "inherit" : "hidden"
                } : {
                    position: "absolute",
                    left: c,
                    right: u,
                    top: e.bottom,
                    maxHeight: r,
                    minWidth: a,
                    visibility: o && o.width > 0 ? "inherit" : "hidden"
                }
            }(d, h, t, n, s * g, !0 === i ? d?.width || 0 : i * g, m) : lS), [s, g, i, d, e, h, t, n, m])
              , f = {
                ...p,
                ...l
            };
            return (0,
            z.jsxs)(z.Fragment, {
                children: [(0,
                z.jsx)(vd, {
                    ref: c,
                    children: r
                }), e && (0,
                z.jsx)(zm, {
                    children: (0,
                    z.jsx)(oS.Provider, {
                        value: e && null != d,
                        children: (0,
                        z.jsx)("div", {
                            className: a,
                            style: f,
                            ref: u,
                            children: o
                        })
                    })
                }, "popup")]
            })
        }
        ;
        const lS = {
            position: "absolute",
            visibility: "hidden"
        };
        X.add("game-ui/common/anchored-popup/anchored-popup.tsx", {
            get AnchoredPopupVisibleContext() {
                return oS
            },
            set AnchoredPopupVisibleContext(e) {
                oS = e
            },
            get AnchoredPopup() {
                return rS
            },
            set AnchoredPopup(e) {
                rS = e
            }
        });
        let cS = {
            hiddenIcon: '"Media/Glyphs/StrokeArrowDown.svg"',
            visibleIcon: '"Media/Glyphs/StrokeArrowUp.svg"',
            "dropdown-toggle": "dropdown-toggle_prl",
            dropdownToggle: "dropdown-toggle_prl",
            label: "label_l_4",
            "dropdown-popup": "dropdown-popup_mMv",
            dropdownPopup: "dropdown-popup_mMv",
            "dropdown-menu": "dropdown-menu_Swd",
            dropdownMenu: "dropdown-menu_Swd"
        };
        X.add("game-ui/common/input/dropdown/dropdown.module.scss", {
            get classes() {
                return cS
            },
            set classes(e) {
                Object.assign(cS, e)
            }
        });
        const uS = cS;
        let dS = {
            "dropdown-toggle": "dropdown-toggle_bN9",
            dropdownToggle: "dropdown-toggle_bN9",
            label: "label_REA",
            indicator: "indicator_lzV",
            "dropdown-popup": "dropdown-popup_duR",
            dropdownPopup: "dropdown-popup_duR",
            "dropdown-menu": "dropdown-menu_rL4",
            dropdownMenu: "dropdown-menu_rL4",
            scrollable: "scrollable_MVT",
            "dropdown-item": "dropdown-item_t3P",
            dropdownItem: "dropdown-item_t3P"
        };
        X.add("game-ui/common/input/dropdown/themes/default.module.scss", {
            get classes() {
                return dS
            },
            set classes(e) {
                Object.assign(dS, e)
            }
        });
        const mS = dS;
        var hS = (0,
        Y.createContext)({
            visible: !1,
            theme: mS,
            show: ()=>{}
            ,
            hide: ()=>{}
            ,
            toggle: ()=>{}
        })
          , gS = new Ig("DROPDOWN_TOGGLE")
          , pS = new Ig("DROPDOWN_MENU")
          , fS = ({focusKey: e, initialFocused: t, theme: n=mS, content: s, alignment: i, children: a, onToggle: o})=>{
            const r = (0,
            Y.useMemo)((()=>({
                ...uS,
                ...n
            })), [n])
              , [l,c] = (0,
            Y.useState)(!1)
              , u = (0,
            Y.useRef)(null)
              , d = (0,
            Y.useCallback)((()=>{
                cp(lp.selectDropdown),
                c((e=>!e)),
                o && o(!l)
            }
            ), [o, l])
              , m = (0,
            Y.useCallback)((()=>{
                c(!0),
                o && o(!0)
            }
            ), [o])
              , h = (0,
            Y.useCallback)((()=>{
                c(!1),
                o && o(!1)
            }
            ), [o])
              , g = (0,
            Y.useMemo)((()=>({
                visible: l,
                theme: r,
                show: m,
                hide: h,
                toggle: d
            })), [l, r, m, h, d]);
            (0,
            Y.useEffect)((()=>{
                if (l) {
                    const e = e=>{
                        if (!u.current)
                            return;
                        const t = u.current.getBoundingClientRect();
                        (e.clientX < t.left || e.clientX > t.right || e.clientY < t.top || e.clientY > t.bottom) && c(!1)
                    }
                    ;
                    return document.addEventListener("mousedown", e),
                    ()=>document.removeEventListener("mousedown", e)
                }
            }
            ), [l]);
            const p = u_()
              , f = (0,
            z.jsx)(Ip, {
                className: r?.dropdownMenu,
                ref: u,
                children: (0,
                z.jsx)(mb, {
                    className: r.scrollable,
                    children: (0,
                    z.jsx)(np, {
                        focusKey: pS,
                        initialFocused: t,
                        direction: kg.Vertical,
                        allowLooping: !0,
                        children: s
                    })
                })
            });
            return (0,
            z.jsxs)(z.Fragment, {
                children: [l && (0,
                z.jsx)(h_, {
                    onClick: g.hide
                }), (0,
                z.jsx)(Np, {
                    includes: Cp,
                    disabled: !l,
                    children: (0,
                    z.jsx)(Fg, {
                        onAction: g.hide,
                        disabled: !l,
                        children: (0,
                        z.jsx)(op, {
                            focusKey: e,
                            focused: l ? pS : gS,
                            activation: qu.AnyChildren,
                            children: (0,
                            z.jsx)(hS.Provider, {
                                value: g,
                                children: (0,
                                z.jsx)(rS, {
                                    visible: l,
                                    className: r.dropdownPopup,
                                    content: f,
                                    minHeight: 300,
                                    minWidth: !0,
                                    alignment: i,
                                    style: p,
                                    children: (0,
                                    z.jsx)(ap, {
                                        focusKey: gS,
                                        children: a
                                    })
                                })
                            })
                        })
                    })
                })]
            })
        }
        ;
        X.add("game-ui/common/input/dropdown/dropdown.tsx", {
            get DropdownContext() {
                return hS
            },
            set DropdownContext(e) {
                hS = e
            },
            get DROPDOWN_TOGGLE_KEY() {
                return gS
            },
            set DROPDOWN_TOGGLE_KEY(e) {
                gS = e
            },
            get DROPDOWN_MENU_KEY() {
                return pS
            },
            set DROPDOWN_MENU_KEY(e) {
                pS = e
            },
            get Dropdown() {
                return fS
            },
            set Dropdown(e) {
                fS = e
            }
        });
        var xS = ({theme: e, openIconComponent: t, closeIconComponent: n, children: s, ...i})=>{
            const a = (0,
            Y.useContext)(hS)
              , o = e ?? a.theme;
            return (0,
            z.jsxs)(vS, {
                ...i,
                theme: e,
                children: [(0,
                z.jsx)("div", {
                    className: o.label,
                    children: s
                }), o.indicator && (0,
                z.jsxs)(z.Fragment, {
                    children: [a.visible && o.visibleIcon && (n || (0,
                    z.jsx)(Z_, {
                        src: o.visibleIcon,
                        className: o.indicator
                    })), !a.visible && o.hiddenIcon && (t || (0,
                    z.jsx)(Z_, {
                        src: o.hiddenIcon,
                        className: o.indicator
                    }))]
                })]
            })
        }
          , vS = ({theme: e, buttonTheme: t, sounds: n, showHint: s, selectSound: i=lp.selectDropdown, className: a, children: o, ...r})=>{
            const l = (0,
            Y.useContext)(hS)
              , c = e ?? l.theme
              , u = Dm();
            return (0,
            z.jsx)(U_, {
                disableHint: !s,
                hintAction: l.visible ? "Back" : "Select",
                forceHint: s && l.visible,
                ...r,
                focusKey: gS,
                className: Zu()(c.dropdownToggle, a, l.visible && "active", l.visible && u && "focused"),
                theme: t,
                sounds: n,
                selectSound: i,
                onSelect: l.toggle,
                tooltipLabel: l.visible ? void 0 : r.tooltipLabel,
                children: o
            })
        }
        ;
        X.add("game-ui/common/input/dropdown/dropdown-toggle.tsx", {
            get DropdownToggle() {
                return xS
            },
            set DropdownToggle(e) {
                xS = e
            },
            get DropdownToggleBase() {
                return vS
            },
            set DropdownToggleBase(e) {
                vS = e
            }
        });
        var _S = {
            ...F_,
            hover: null
        };
        function bS({focusKey: e, value: t, selected: n, theme: s, sounds: i=_S, className: a, onChange: o, onToggleSelected: r, closeOnSelect: l=!0, children: c}) {
            const u = (0,
            Y.useContext)(hS)
              , d = s ?? u.theme
              , m = (0,
            Y.useCallback)((()=>{
                n ? r && r(t) : o && o(t),
                l && u.hide()
            }
            ), [n, l, u, o, t, r])
              , h = null != e ? e : "string" == typeof t || "number" == typeof t ? t : void 0;
            return (0,
            z.jsx)(U_, {
                disableHint: !0,
                focusKey: h,
                sounds: i,
                className: Zu()(d.dropdownItem, n && "selected", a),
                onSelect: m,
                children: c || " "
            })
        }
        X.add("game-ui/common/input/dropdown/items/dropdown-item.tsx", {
            get defaultDropdownItemSounds() {
                return _S
            },
            set defaultDropdownItemSounds(e) {
                _S = e
            },
            get DropdownItem() {
                return bS
            },
            set DropdownItem(e) {
                bS = e
            }
        });
        var TS = ({onDrag: e, children: t})=>{
            const [n,s] = (0,
            Y.useState)(Ad)
              , i = (0,
            Y.useCallback)((t=>{
                const n = function(e, t, n) {
                    if (n) {
                        const s = n.getBoundingClientRect();
                        return {
                            x: e - s.left,
                            y: t - s.top
                        }
                    }
                    return Ad
                }(t.clientX, t.clientY, t.currentTarget);
                return s(n),
                e(t.clientX, t.clientY, n.x, n.y),
                !0
            }
            ), [e, s])
              , a = (0,
            Y.useCallback)((t=>{
                e(t.clientX, t.clientY, n.x, n.y)
            }
            ), [e, n])
              , o = (0,
            Y.useCallback)((t=>{
                e(t.clientX, t.clientY, n.x, n.y)
            }
            ), [e, n])
              , [,r] = rb(i, a, o);
            return (0,
            z.jsx)(z.Fragment, {
                children: Y.Children.map(t, (e=>Y.isValidElement(e) ? Y.cloneElement(e, {
                    onMouseDown: r
                }) : (0,
                z.jsx)("div", {
                    onMouseDown: r,
                    children: e
                })))
            })
        }
        ;
        X.add("game-ui/common/input/drag-handle.tsx", {
            get DragHandle() {
                return TS
            },
            set DragHandle(e) {
                TS = e
            }
        });
        var ES = ({header: e, initialPosition: t={
            x: .5,
            y: .5
        }, className: n, style: s, children: i, ...a})=>{
            const [o,r] = (0,
            Y.useState)(t)
              , l = Um()
              , c = (0,
            Y.useRef)(null)
              , u = gm(c)
              , d = (0,
            Y.useCallback)(((e,t,n,s)=>{
                e = Math.min(Math.max(e, 0), l.x),
                t = Math.min(Math.max(t, 0), l.y),
                null != u && r(function(e, t, n) {
                    return {
                        x: e.x / (n.x - t.width),
                        y: e.y / (n.y - t.height)
                    }
                }({
                    x: e - n,
                    y: t - s
                }, u, l))
            }
            ), [r, l, u]);
            return (0,
            z.jsx)(rE, {
                ...a,
                ref: c,
                header: e ? (0,
                z.jsx)(TS, {
                    onDrag: d,
                    children: e
                }) : void 0,
                className: Zu()("draggable-panel", n),
                style: {
                    ...s,
                    visibility: u ? "inherit" : "hidden",
                    left: u ? o.x * (l.x - u.width) : 0,
                    top: u ? o.y * (l.y - u.height) : 0
                },
                children: i
            })
        }
        ;
        X.add("game-ui/common/panel/draggable-panel/draggable-panel.tsx", {
            get DraggablePanel() {
                return ES
            },
            set DraggablePanel(e) {
                ES = e
            }
        });
        let IS = {
            "info-section": "info-section_I7V",
            infoSection: "info-section_I7V",
            content: "content_Cdk item-focused_FuT",
            column: "column_aPB",
            divider: "divider_rfM",
            "no-margin": "no-margin_K7I",
            noMargin: "no-margin_K7I",
            "disable-focus-highlight": "disable-focus-highlight_ik3",
            disableFocusHighlight: "disable-focus-highlight_ik3",
            "info-wrap-box": "info-wrap-box_Rt4",
            infoWrapBox: "info-wrap-box_Rt4"
        };
        X.add("game-ui/game/components/selected-info-panel/shared-components/info-section/info-section.module.scss", {
            get classes() {
                return IS
            },
            set classes(e) {
                Object.assign(IS, e)
            }
        });
        const SS = IS;
        var yS = ({focusKey: e, tooltip: t, disableFocus: n=!1, className: s, children: i})=>(0,
        z.jsx)("div", {
            className: Zu()(SS.infoSection, s),
            children: (0,
            z.jsx)(Eg, {
                tooltip: t,
                direction: "right",
                alignment: "center",
                children: n ? (0,
                z.jsx)(Ip, {
                    className: Zu()(SS.content, SS.disableFocusHighlight),
                    children: (0,
                    z.jsx)(np, {
                        children: i
                    })
                }) : (0,
                z.jsx)(Sp, {
                    focusKey: e,
                    className: SS.content,
                    children: (0,
                    z.jsx)(np, {
                        children: i
                    })
                })
            })
        })
          , jS = ({noMargin: e=!1})=>(0,
        z.jsx)("div", {
            className: Zu()(SS.divider, e && SS.noMargin)
        });
        X.add("game-ui/game/components/selected-info-panel/shared-components/info-section/info-section.tsx", {
            get InfoSection() {
                return yS
            },
            set InfoSection(e) {
                yS = e
            },
            get Divider() {
                return jS
            },
            set Divider(e) {
                jS = e
            }
        });
        var CS = {}
          , NS = ({styles: e, enterDuration: t, exitDuration: n, enterExpandHeight: s=!0, exitCollapseHeight: i=!0, children: a})=>{
            const o = e ?? CS
              , {state: r, onMount: l, onUnmount: c} = (0,
            Y.useContext)(ld)
              , u = (0,
            Y.useContext)(hp)
              , d = (0,
            Y.useRef)(null)
              , m = gd(a.ref, d)
              , h = (0,
            Y.useRef)(!1)
              , [g,p] = (0,
            Y.useState)(function(e, t) {
                switch (e) {
                case td.enter:
                    return t.enter;
                case td.exit:
                    return t.exit;
                default:
                    return null
                }
            }(r, o))
              , f = (0,
            Y.useRef)(g);
            f.current = g;
            const x = (0,
            Y.useCallback)((e=>{
                h.current && p(e)
            }
            ), [])
              , [v,_] = (0,
            Y.useState)(r === td.enter && s ? {
                height: "0px"
            } : {})
              , b = (0,
            Y.useCallback)((e=>{
                h.current && _(e)
            }
            ), []);
            return (0,
            Y.useEffect)((()=>(h.current || (h.current = !0,
            l()),
            ()=>{
                h.current && (h.current = !1,
                c())
            }
            )), [l, c]),
            (0,
            Y.useEffect)((()=>{
                const e = new qm;
                return (async()=>{
                    if (r === td.enter) {
                        if (x(o.enter),
                        s && d.current instanceof HTMLElement) {
                            const e = d.current.offsetHeight;
                            b((t=>null == t ? {
                                height: e + "px"
                            } : t))
                        }
                        if (!await uh(e, 2))
                            return;
                        if (x(o.enterActive),
                        !await uh(e))
                            return;
                        const n = t ?? Jm(d.current);
                        if (s) {
                            const t = performance.now()
                              , s = eh(d.current, "height");
                            let i = 0;
                            for (d.current instanceof HTMLElement && (i = d.current.scrollHeight,
                            b({
                                height: i + "px"
                            })); performance.now() - t <= n; ) {
                                if (d.current instanceof HTMLElement) {
                                    const e = d.current.scrollHeight;
                                    i < e && (b(null != s ? {
                                        ...nh(d.current, "height", sh(s, performance.now() - t)),
                                        height: e + "px"
                                    } : {
                                        height: e + "px"
                                    }),
                                    i = e)
                                }
                                if (!await uh(e))
                                    return
                            }
                        } else if (!await ch(n, e))
                            return;
                        s && u.updateThumbs(),
                        x(null),
                        b(null)
                    } else if (r === td.exit) {
                        if (null == f.current && (x(o.exit),
                        i && d.current instanceof HTMLElement && b({
                            height: d.current.offsetHeight + "px"
                        }),
                        !await uh(e, 2)))
                            return;
                        if (x(o.exitActive),
                        !await uh(e))
                            return;
                        i && d.current instanceof HTMLElement && b({
                            height: "0px"
                        });
                        const t = n ?? Jm(d.current);
                        if (!await ch(t, e))
                            return;
                        i && u.updateThumbs(),
                        h.current && (h.current = !1,
                        c())
                    }
                }
                )(),
                ()=>{
                    e.cancel(),
                    x(null),
                    b(null)
                }
            }
            ), [t, s, i, n, c, u, r, o.enter, o.enterActive, o.exit, o.exitActive, x, b]),
            (0,
            z.jsx)(ld.Provider, {
                value: rd,
                children: Y.cloneElement(a, {
                    ...a.props,
                    ref: m,
                    className: Zu()(a.props.className, o.base, g),
                    style: {
                        ...a.props.style,
                        ...v
                    }
                })
            })
        }
        ;
        X.add("game-ui/common/animations/height-transition.tsx", {
            get emptyStyles() {
                return CS
            },
            set emptyStyles(e) {
                CS = e
            },
            get HeightTransition() {
                return NS
            },
            set HeightTransition(e) {
                NS = e
            }
        });
        var wS = ({in: e, skipInitial: t=!0, onEnter: n, onExit: s, children: i})=>{
            const a = (0,
            Y.useRef)(t);
            (0,
            Y.useEffect)((()=>{
                e || (a.current = !1)
            }
            ), [e]);
            const o = e ? a.current ? td.in : td.enter : td.exit
              , [r,l] = (0,
            Y.useState)(0)
              , c = e || r > 0
              , u = (0,
            Y.useRef)(n);
            u.current = n;
            const d = (0,
            Y.useRef)(s);
            d.current = s,
            (0,
            Y.useEffect)((()=>{
                if (c)
                    return u.current && u.current(),
                    ()=>{
                        d.current && d.current()
                    }
            }
            ), [c]);
            const m = (0,
            Y.useCallback)((()=>l((e=>e + 1))), [])
              , h = (0,
            Y.useCallback)((()=>l((e=>e - 1))), [])
              , g = (0,
            Y.useMemo)((()=>({
                state: o,
                onMount: m,
                onUnmount: h
            })), [m, h, o]);
            return (0,
            z.jsx)(ld.Provider, {
                value: g,
                children: (0,
                z.jsx)(OS, {
                    in: e,
                    children: (0,
                    z.jsx)(PS, {
                        in: e,
                        children: c && i
                    })
                })
            })
        }
        ;
        const OS = ({children: e, in: t})=>{
            const n = (0,
            Y.useContext)(cd);
            return (0,
            z.jsx)(cd.Provider, {
                value: n || !t,
                children: e
            })
        }
          , PS = ({children: e, in: t})=>{
            const n = (0,
            Y.useContext)(Ju);
            return (0,
            z.jsx)(Ju.Provider, {
                value: t ? n : ed,
                children: e
            })
        }
        ;
        X.add("game-ui/common/animations/transition-coordinator.tsx", {
            get TransitionCoordinator() {
                return wS
            },
            set TransitionCoordinator(e) {
                wS = e
            }
        });
        let LS = {
            "foldout-item": "foldout-item_wOF",
            foldoutItem: "foldout-item_wOF",
            header: "header_8H_ item-mouse-states_Fmi item-focused_FuT",
            "header-content": "header-content_wUX",
            headerContent: "header-content_wUX",
            "disable-active-state": "disable-active-state_w8a",
            disableActiveState: "disable-active-state_w8a",
            "disable-mouse-states": "disable-mouse-states_js5",
            disableMouseStates: "disable-mouse-states_js5",
            toggle: "toggle_yQv",
            content: "content_mJm",
            enter: "enter_sm5",
            exit: "exit_ScE",
            "exit-active": "exit-active_LGX",
            exitActive: "exit-active_LGX",
            "enter-active": "enter-active_jNk",
            enterActive: "enter-active_jNk"
        };
        X.add("game-ui/common/foldout/foldout-item.module.scss", {
            get classes() {
                return LS
            },
            set classes(e) {
                Object.assign(LS, e)
            }
        });
        const AS = LS;
        var MS = Y.createContext({
            theme: AS
        });
        function RS(e) {
            return (0,
            Y.useMemo)((()=>({
                ...AS,
                ...e
            })), [e])
        }
        X.add("game-ui/common/foldout/foldout-context.ts", {
            get FoldoutContext() {
                return MS
            },
            set FoldoutContext(e) {
                MS = e
            }
        }),
        X.add("game-ui/common/foldout/foldout-theme.ts", {
            get useFoldoutTheme() {
                return RS
            },
            set useFoldoutTheme(e) {
                RS = e
            }
        });
        var kS = ({header: e, theme: t=AS, type: n="Item", nesting: s=0, initialExpanded: i=!1, expandFromContent: a=!1, onSelect: o, onToggleExpanded: r, className: l, children: c})=>{
            const u = RS(t)
              , d = Y.Children.count(c) > 0
              , [m,h] = (0,
            Y.useState)(i)
              , g = (0,
            Y.useCallback)((()=>{
                cp(lp.expandPanel),
                h((e=>!e)),
                r && r(!m)
            }
            ), [m, r])
              , p = (0,
            Y.useCallback)((()=>{
                o && (cp(lp.selectItem),
                o())
            }
            ), [o])
              , f = !d && !o
              , x = (0,
            Y.useMemo)((()=>({
                theme: u,
                expandable: d,
                expanded: m,
                onToggleExpanded: g,
                onSelect: p
            })), [d, m, p, g, u]);
            return (0,
            z.jsx)(MS.Provider, {
                value: x,
                children: (0,
                z.jsxs)("div", {
                    style: FS(s),
                    className: Zu()(u.foldoutItem, d && u.expandable, m && u.expanded, "Item" === n && u.item, "Group" === n && u.group, "Category" === n && u.category, f && u.disableMouseStates, l),
                    children: [(0,
                    z.jsx)(Dg, {
                        onAction: p,
                        disabled: d,
                        children: (0,
                        z.jsx)(Bg, {
                            expandable: d,
                            disabled: !d,
                            expanded: m,
                            onAction: g,
                            children: e
                        })
                    }), (0,
                    z.jsx)(Bg, {
                        expandable: d,
                        disabled: !d || !a,
                        expanded: m,
                        onAction: g,
                        children: (0,
                        z.jsx)(wS, {
                            in: d && m,
                            children: (0,
                            z.jsx)(NS, {
                                styles: AS,
                                children: (0,
                                z.jsx)("div", {
                                    className: Zu()(u.content, "foldout-expanded"),
                                    children: (0,
                                    z.jsx)(np, {
                                        children: c
                                    })
                                })
                            })
                        })
                    })]
                })
            })
        }
          , DS = ({onClick: e, onFocusChange: t, children: n})=>{
            const [s,i] = (0,
            Y.useState)(!1)
              , a = (0,
            Y.useContext)(MS)
              , o = (0,
            Y.useCallback)((()=>cp(lp.hoverItem)), [])
              , r = (0,
            Y.useCallback)((()=>{
                a.expandable ? a.onToggleExpanded && a.onToggleExpanded() : a.onSelect && a.onSelect(),
                e && e()
            }
            ), [a, e])
              , l = (0,
            Y.useCallback)((e=>{
                i(e),
                t && t(e)
            }
            ), [t]);
            return (0,
            z.jsxs)(Sp, {
                className: Zu()(a.theme.header),
                onMouseEnter: o,
                onClick: r,
                onFocusChange: l,
                children: [(0,
                z.jsx)("div", {
                    className: a.theme.headerContent,
                    children: n
                }), a.expandable && (0,
                z.jsxs)(z.Fragment, {
                    children: [(0,
                    z.jsx)(UT, {
                        action: "Expand Group",
                        active: s,
                        className: AS.expandableHint
                    }), (0,
                    z.jsx)(Z_, {
                        className: a.theme.toggle,
                        src: a.expanded ? "Media/Glyphs/ThickStrokeArrowDown.svg" : "Media/Glyphs/ThickStrokeArrowRight.svg"
                    })]
                })]
            })
        }
        ;
        function FS(e) {
            return {
                "--nesting": e
            }
        }
        X.add("game-ui/common/foldout/foldout-item.tsx", {
            get FoldoutItem() {
                return kS
            },
            set FoldoutItem(e) {
                kS = e
            },
            get FoldoutItemHeader() {
                return DS
            },
            set FoldoutItemHeader(e) {
                DS = e
            }
        });
        let US = {
            "foldout-item": "foldout-item_Ha3 foldout-item_wOF",
            foldoutItem: "foldout-item_Ha3 foldout-item_wOF",
            header: "header_o7z header_8H_ item-mouse-states_Fmi item-focused_FuT",
            "disable-active-state": "disable-active-state_UBt disable-active-state_w8a",
            disableActiveState: "disable-active-state_UBt disable-active-state_w8a",
            "disable-mouse-states": "disable-mouse-states_ivb disable-mouse-states_js5",
            disableMouseStates: "disable-mouse-states_ivb disable-mouse-states_js5",
            "header-content": "header-content_t6v header-content_wUX",
            headerContent: "header-content_t6v header-content_wUX",
            icon: "icon_p5g undefined",
            toggle: "toggle_r8A toggle_yQv"
        };
        X.add("game-ui/common/foldout/themes/info-section-foldout.module.scss", {
            get classes() {
                return US
            },
            set classes(e) {
                Object.assign(US, e)
            }
        });
        const BS = US;
        var GS = ({header: e, initialExpanded: t, expandFromContent: n, focusKey: s, tooltip: i, disableFocus: a=!1, className: o, onToggleExpanded: r, children: l})=>{
            const c = Y.Children.count(l);
            return (0,
            z.jsx)(kS, {
                header: (0,
                z.jsx)(Eg, {
                    tooltip: i,
                    direction: "right",
                    alignment: "center",
                    children: (0,
                    z.jsx)(DS, {
                        children: e
                    })
                }),
                theme: BS,
                initialExpanded: t,
                expandFromContent: n,
                onToggleExpanded: r,
                className: Zu()(SS.infoSection, o),
                children: c > 0 ? a ? (0,
                z.jsx)(Ip, {
                    className: Zu()(SS.content, SS.disableFocusHighlight),
                    children: (0,
                    z.jsx)(np, {
                        children: l
                    })
                }) : (0,
                z.jsx)(Sp, {
                    focusKey: s,
                    className: SS.content,
                    children: (0,
                    z.jsx)(np, {
                        children: l
                    })
                }) : null
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/shared-components/info-section/info-section-foldout.tsx", {
            get InfoSectionFoldout() {
                return GS
            },
            set InfoSectionFoldout(e) {
                GS = e
            }
        });
        let VS = {
            "info-row": "info-row_QQ9 item-focused_FuT",
            infoRow: "info-row_QQ9 item-focused_FuT",
            "disable-focus-highlight": "disable-focus-highlight_I85",
            disableFocusHighlight: "disable-focus-highlight_I85",
            link: "link_ICj",
            tooltipRow: "tooltipRow_uIh",
            left: "left_RyE",
            hasIcon: "hasIcon_iZ3",
            right: "right_ZUb",
            icon: "icon_ugE",
            uppercase: "uppercase_f0y",
            subRow: "subRow_NJI",
            "no-shrink": "no-shrink_oxj",
            noShrink: "no-shrink_oxj"
        };
        X.add("game-ui/game/components/selected-info-panel/shared-components/info-row/info-row.module.scss", {
            get classes() {
                return VS
            },
            set classes(e) {
                Object.assign(VS, e)
            }
        });
        const HS = VS;
        var KS = ({icon: e, left: t, right: n, tooltip: s, link: i, uppercase: a=!1, subRow: o=!1, disableFocus: r=!1, className: l, noShrinkRight: c})=>{
            const u = n ? Zu()(HS.right, {
                [HS.noShrink]: c,
                [HS.link]: i
            }) : void 0;
            return (0,
            z.jsx)(Eg, {
                tooltip: s,
                direction: "right",
                alignment: "center",
                children: i ? (0,
                z.jsxs)(Sp, {
                    activation: qu.FocusedChild,
                    className: Zu()(HS.infoRow, o && HS.subRow, i && HS.link, l),
                    children: [e && (0,
                    z.jsx)("img", {
                        src: e,
                        className: Zu()(HS.icon, i && HS.link)
                    }), t && (0,
                    z.jsx)("div", {
                        className: Zu()(HS.left, a && HS.uppercase, i && HS.link, e && HS.hasIcon),
                        children: t
                    }), i && (0,
                    z.jsx)(Sp, {
                        className: Zu()(HS.right, i && HS.link),
                        children: i
                    }), n && (0,
                    z.jsx)("div", {
                        className: u,
                        children: n
                    })]
                }) : r ? (0,
                z.jsxs)(Ip, {
                    className: Zu()(HS.infoRow, o && HS.subRow, HS.disableFocusHighlight, l),
                    children: [e && (0,
                    z.jsx)("img", {
                        src: e,
                        className: HS.icon
                    }), t && (0,
                    z.jsx)("div", {
                        className: Zu()(HS.left, a && HS.uppercase),
                        children: t
                    }), n && (0,
                    z.jsx)("div", {
                        className: u,
                        children: n
                    })]
                }) : (0,
                z.jsxs)(Sp, {
                    focusKey: r ? Sg : yg,
                    className: Zu()(HS.infoRow, o && HS.subRow, l),
                    children: [e && (0,
                    z.jsx)("img", {
                        src: e,
                        className: HS.icon
                    }), t && (0,
                    z.jsx)("div", {
                        className: Zu()(HS.left, a && HS.uppercase),
                        children: t
                    }), n && (0,
                    z.jsx)("div", {
                        className: u,
                        children: n
                    })]
                })
            })
        }
          , WS = ({icon: e, left: t, right: n, uppercase: s=!1, subRow: i=!1})=>(0,
        z.jsxs)("div", {
            className: Zu()(HS.infoRow, HS.tooltipRow, i && HS.subRow),
            children: [e && (0,
            z.jsx)("img", {
                src: e,
                className: Zu()(HS.icon)
            }), t && (0,
            z.jsx)("div", {
                className: Zu()(HS.left, s && HS.uppercase, e && HS.hasIcon),
                children: t
            }), n && (0,
            z.jsx)("div", {
                className: Zu()(HS.right),
                children: n
            })]
        });
        X.add("game-ui/game/components/selected-info-panel/shared-components/info-row/info-row.tsx", {
            get InfoRow() {
                return KS
            },
            set InfoRow(e) {
                KS = e
            },
            get TooltipRow() {
                return WS
            },
            set TooltipRow(e) {
                WS = e
            }
        });
        var zS = e=>{
            const {children: t, draggable: n, header: s, ...i} = e
              , a = n ? ES : rE
              , o = s || n ? (0,
            z.jsx)(dE, {
                children: s || " "
            }) : null;
            return (0,
            z.jsx)(a, {
                header: o,
                ...i,
                children: (0,
                z.jsx)(np, {
                    children: (0,
                    z.jsx)(mb, {
                        children: t
                    })
                })
            })
        }
        ;
        X.add("game-ui/ui/panel.tsx", {
            get Panel() {
                return zS
            },
            set Panel(e) {
                zS = e
            }
        });
        const YS = /thumbnail:\/\/[^/]+\/(?=.+\/)*(.*)\/.*?$/i
          , $S = new Set(["BuildingPrefab", "RenderPrefab", "CarPrefab"]);
        var qS = e=>{
            const t = e.currentTarget.src;
            let n = t.match(YS)?.[1];
            n && !$S.has(n) && (n = "Generic"),
            e.currentTarget.src = n ? `Media/Editor/Thumbnails/Fallback_${n}.svg` : "Media/Placeholder.svg"
        }
        ;
        X.add("game-ui/common/utils/thumbnails-errors.ts", {
            get handleThumbnailError() {
                return qS
            },
            set handleThumbnailError(e) {
                qS = e
            }
        });
        let XS = {
            icon: "icon_VQU",
            iconImg: "iconImg_ThV"
        };
        X.add("game-ui/ui/icon.module.scss", {
            get classes() {
                return XS
            },
            set classes(e) {
                Object.assign(XS, e)
            }
        });
        const QS = XS;
        var ZS = ({tinted: e, className: t, src: n, children: s})=>(0,
        z.jsx)(xd, {
            children: (0,
            z.jsxs)("div", {
                className: Zu()(t, QS.icon),
                children: [e ? (0,
                z.jsx)(Z_, {
                    src: n,
                    className: QS.iconImg
                }) : (0,
                z.jsx)("img", {
                    "data-src": n,
                    src: n,
                    className: Zu()(QS.iconImg),
                    onError: qS
                }), s]
            })
        });
        X.add("game-ui/ui/icon.tsx", {
            get Icon() {
                return ZS
            },
            set Icon(e) {
                ZS = e
            }
        });
        var JS = zm;
        JS.usePortalContainer = Ym,
        JS.ContainerProvider = Wm,
        X.add("game-ui/ui/portal.tsx", {
            get Portal() {
                return JS
            },
            set Portal(e) {
                JS = e
            }
        });
        const ey = /^(#+)\s+/
          , ty = /\s/;
        function ny() {
            return (0,
            Y.useMemo)((()=>new sy), [])
        }
        class sy {
            render(e) {
                const t = [];
                e = e.replace(/<br>/gim, "␤");
                let n = _b.None;
                const s = new Array;
                let i = 0;
                const a = ey.exec(e);
                null != a && (n = Od(a[1].length, 1, 6),
                i = a[0].length);
                let o = -1
                  , r = -1
                  , l = -1
                  , c = -1;
                for (let n = 0; n < e.length; n++)
                    switch (e[n]) {
                    case "␤":
                        e = e.substring(0, n) + " " + e.substring(n + 1),
                        t.push((0,
                        z.jsx)("br", {}, n));
                        break;
                    case "!":
                        n < e.length - 1 && -1 === r && (o = n);
                        break;
                    case "[":
                        r = n,
                        l = -1,
                        c = -1;
                        break;
                    case "]":
                        -1 !== r && -1 === l ? l = n : o = -1;
                        break;
                    case "(":
                        -1 !== r && -1 !== l && -1 === c && (l === n - 1 ? c = n : (o = -1,
                        r = -1,
                        l = -1));
                        break;
                    case ")":
                        if (-1 !== c) {
                            if (-1 === o) {
                                i < r && t.push(iy(e, i, r, null));
                                const s = iy(e, r + 1, l, n < e.length - 1 && ty.test(e[n + 1]) ? e[n + 1] : null)
                                  , a = e.substring(c + 1, n);
                                t.push((0,
                                z.jsx)(Sb, {
                                    linkData: a,
                                    children: s
                                }, r))
                            } else {
                                const i = e.substring(r + 1, l)
                                  , a = e.substring(c + 1, n);
                                t.push((0,
                                z.jsx)("img", {
                                    alt: i,
                                    src: a
                                }, o)),
                                s.push(a)
                            }
                            i = n + 1,
                            o = -1,
                            r = -1,
                            l = -1,
                            c = -1
                        }
                        break;
                    default:
                        -1 !== o && -1 === r && (o = -1)
                    }
                return i < e.length && t.push(iy(e, i, e.length, null)),
                {
                    node: t,
                    style: n,
                    images: s
                }
            }
        }
        function iy(e, t, n, s) {
            const i = [];
            let a = t
              , o = !1
              , r = -1;
            for (let l = t; l < n; l++)
                if ("*" === e[l])
                    if (o)
                        if (-1 === r)
                            r = l - 1,
                            o = !1;
                        else {
                            a < r && i.push(e.substring(a, r));
                            let t = e.substring(r + 2, l - 1);
                            l < n - 1 ? ty.test(e[l + 1]) && (t += e[l + 1]) : null != s && (t += s),
                            i.push((0,
                            z.jsx)("b", {
                                children: t
                            }, r)),
                            a = l + 1,
                            r = -1,
                            o = !1
                        }
                    else
                        o = !0;
                else
                    o = !1;
            if (a < n) {
                let t = e.substring(a, n);
                null != s && (t += s),
                i.push(t)
            }
            return i
        }
        X.add("game-ui/common/text/renderers/markdown-renderer.tsx", {
            get useMarkdownRenderer() {
                return ny
            },
            set useMarkdownRenderer(e) {
                ny = e
            }
        }),
        X.add("game-ui/ui/index.ts", {}),
        X.add("game-ui/game/data-binding/budget-panel-types.ts", {});
        const ay = "camera";
        var oy = $r(ay, "focusedEntity");
        function ry(e) {
            tl(ay, "focusEntity", e)
        }
        X.add("game-ui/game/data-binding/camera-bindings.ts", {
            get focusedEntity() {
                return focusedEntity
            },
            set focusedEntity(e) {
                focusedEntity = e
            },
            get focusEntity() {
                return ry
            },
            set focusEntity(e) {
                ry = e
            }
        });
        const ly = "chirper";
        var cy = $r(ly, "chirps")
          , uy = Zr(ly, "chirpAdded");
        function dy(e) {
            tl(ly, "addLike", e)
        }
        function my(e) {
            tl(ly, "removeLike", e)
        }
        function hy(e) {
            tl(ly, "selectLink", e)
        }
        X.add("game-ui/game/data-binding/chirper-bindings.ts", {
            get chirps() {
                return chirps
            },
            set chirps(e) {
                chirps = e
            },
            get chirpAdded() {
                return chirpAdded
            },
            set chirpAdded(e) {
                chirpAdded = e
            },
            get addLike() {
                return dy
            },
            set addLike(e) {
                dy = e
            },
            get removeLike() {
                return my
            },
            set removeLike(e) {
                my = e
            },
            get selectLink() {
                return hy
            },
            set selectLink(e) {
                hy = e
            }
        });
        var gy = "cinematicCamera"
          , py = $r(gy, "playbackDuration")
          , fy = $r(gy, "timelinePosition")
          , xy = $r(gy, "timelineLength")
          , vy = $r(gy, "loop")
          , _y = el(gy, "toggleLoop")
          , by = $r(gy, "playing")
          , Ty = e=>tl(gy, "setPlaybackDuration", e)
          , Ey = Jr(gy, "onAfterPlaybackDurationChange")
          , Iy = e=>tl(gy, "setTimelinePosition", e)
          , Sy = ()=>tl(gy, "stopPlayback")
          , yy = ()=>tl(gy, "togglePlayback")
          , jy = (e,t)=>tl(gy, "captureKey", e, t)
          , Cy = (e,t)=>tl(gy, "removeCameraTransformKey", e, t)
          , Ny = (e,t,n,s)=>nl(gy, "moveKeyFrame", e, t, n, s)
          , wy = (e,t,n)=>tl(gy, "removeKeyFrame", e, t, n)
          , Oy = (e,t,n,s)=>nl(gy, "addKeyFrame", e, t, n, s)
          , Py = ()=>tl(gy, "reset")
          , Ly = ()=>nl(gy, "getControllerDelta")
          , Ay = ()=>nl(gy, "getControllerZoomDelta")
          , My = ()=>nl(gy, "getControllerPanDelta")
          , Ry = e=>tl(gy, "toggleCurveEditorFocus", e)
          , ky = el(gy, "save")
          , Dy = el(gy, "load")
          , Fy = el(gy, "delete")
          , Uy = $r(gy, "lastLoaded")
          , By = $r(gy, "assets")
          , Gy = $r(gy, "availableCloudTargets")
          , Vy = $r(gy, "selectedCloudTarget")
          , Hy = el(gy, "selectCloudTarget")
          , Ky = $r(gy, "transformAnimationCurves")
          , Wy = $r(gy, "modifierAnimationCurves")
          , zy = (e,t)=>(0,
        Y.useMemo)((()=>({
            onAddKeyframe: async(n,s,i)=>void 0 !== i && -1 !== i ? await Oy(e, n, s, t ?? i) : -1,
            onMoveKeyframe: async(n,s,i,a)=>null != a ? await Ny(e, t ?? a, n, s) : -1,
            onRemoveKeyframe: (n,s)=>{
                null != s && wy(e, t ?? s, n)
            }
            ,
            onSetKeyframes: (e,t)=>{
                throw new Error("Function not implemented.")
            }
        })), [t, e]);
        X.add("game-ui/game/data-binding/cinematic-camera-bindings.ts", {
            get group() {
                return gy
            },
            set group(e) {
                gy = e
            },
            get playbackDuration() {
                return playbackDuration
            },
            set playbackDuration(e) {
                playbackDuration = e
            },
            get timelinePosition() {
                return timelinePosition
            },
            set timelinePosition(e) {
                timelinePosition = e
            },
            get timelineLength() {
                return timelineLength
            },
            set timelineLength(e) {
                timelineLength = e
            },
            get loop() {
                return loop
            },
            set loop(e) {
                loop = e
            },
            get toggleLoop() {
                return _y
            },
            set toggleLoop(e) {
                _y = e
            },
            get playing() {
                return playing
            },
            set playing(e) {
                playing = e
            },
            get setPlaybackDuration() {
                return Ty
            },
            set setPlaybackDuration(e) {
                Ty = e
            },
            get onAfterPlaybackDurationChange() {
                return Ey
            },
            set onAfterPlaybackDurationChange(e) {
                Ey = e
            },
            get setTimelinePosition() {
                return Iy
            },
            set setTimelinePosition(e) {
                Iy = e
            },
            get stopPlayback() {
                return Sy
            },
            set stopPlayback(e) {
                Sy = e
            },
            get togglePlayback() {
                return yy
            },
            set togglePlayback(e) {
                yy = e
            },
            get captureKey() {
                return jy
            },
            set captureKey(e) {
                jy = e
            },
            get removeCameraTransformKey() {
                return Cy
            },
            set removeCameraTransformKey(e) {
                Cy = e
            },
            get moveKeyFrame() {
                return Ny
            },
            set moveKeyFrame(e) {
                Ny = e
            },
            get removeKeyFrame() {
                return wy
            },
            set removeKeyFrame(e) {
                wy = e
            },
            get addKeyFrame() {
                return Oy
            },
            set addKeyFrame(e) {
                Oy = e
            },
            get resetCinematicCameraSequence() {
                return Py
            },
            set resetCinematicCameraSequence(e) {
                Py = e
            },
            get getControllerDelta() {
                return Ly
            },
            set getControllerDelta(e) {
                Ly = e
            },
            get getControllerZoomDelta() {
                return Ay
            },
            set getControllerZoomDelta(e) {
                Ay = e
            },
            get getControllerPanDelta() {
                return My
            },
            set getControllerPanDelta(e) {
                My = e
            },
            get toggleCurveEditorFocus() {
                return Ry
            },
            set toggleCurveEditorFocus(e) {
                Ry = e
            },
            get saveCinematicCameraSequence() {
                return ky
            },
            set saveCinematicCameraSequence(e) {
                ky = e
            },
            get loadCinematicCameraSequence() {
                return Dy
            },
            set loadCinematicCameraSequence(e) {
                Dy = e
            },
            get deleteCinematicCameraSequence() {
                return Fy
            },
            set deleteCinematicCameraSequence(e) {
                Fy = e
            },
            get lastLoadedCinematicCameraSequence() {
                return lastLoadedCinematicCameraSequence
            },
            set lastLoadedCinematicCameraSequence(e) {
                lastLoadedCinematicCameraSequence = e
            },
            get cinematicCameraSequenceAssets() {
                return cinematicCameraSequenceAssets
            },
            set cinematicCameraSequenceAssets(e) {
                cinematicCameraSequenceAssets = e
            },
            get availableCloudTargets() {
                return availableCloudTargets
            },
            set availableCloudTargets(e) {
                availableCloudTargets = e
            },
            get selectedCloudTarget() {
                return selectedCloudTarget
            },
            set selectedCloudTarget(e) {
                selectedCloudTarget = e
            },
            get selectCloudTarget() {
                return Hy
            },
            set selectCloudTarget(e) {
                Hy = e
            },
            get transformAnimationCurveData() {
                return transformAnimationCurveData
            },
            set transformAnimationCurveData(e) {
                transformAnimationCurveData = e
            },
            get modifierAnimationCurveData() {
                return modifierAnimationCurveData
            },
            set modifierAnimationCurveData(e) {
                modifierAnimationCurveData = e
            },
            get useCinematicCameraBindings() {
                return zy
            },
            set useCinematicCameraBindings(e) {
                zy = e
            }
        });
        const Yy = "cityInfo";
        var $y = $r(Yy, "residentialLowDemand")
          , qy = $r(Yy, "residentialMediumDemand")
          , Xy = $r(Yy, "residentialHighDemand")
          , Qy = $r(Yy, "commercialDemand")
          , Zy = $r(Yy, "industrialDemand")
          , Jy = $r(Yy, "officeDemand")
          , ej = $r(Yy, "residentialLowFactors")
          , tj = $r(Yy, "residentialMediumFactors")
          , nj = $r(Yy, "residentialHighFactors")
          , sj = $r(Yy, "commercialFactors")
          , ij = $r(Yy, "industrialFactors")
          , aj = $r(Yy, "officeFactors")
          , oj = $r(Yy, "happiness")
          , rj = $r(Yy, "happinessFactors");
        X.add("game-ui/game/data-binding/city-info-bindings.ts", {
            get residentialLowDemand() {
                return residentialLowDemand
            },
            set residentialLowDemand(e) {
                residentialLowDemand = e
            },
            get residentialMediumDemand() {
                return residentialMediumDemand
            },
            set residentialMediumDemand(e) {
                residentialMediumDemand = e
            },
            get residentialHighDemand() {
                return residentialHighDemand
            },
            set residentialHighDemand(e) {
                residentialHighDemand = e
            },
            get commercialDemand() {
                return commercialDemand
            },
            set commercialDemand(e) {
                commercialDemand = e
            },
            get industrialDemand() {
                return industrialDemand
            },
            set industrialDemand(e) {
                industrialDemand = e
            },
            get officeDemand() {
                return officeDemand
            },
            set officeDemand(e) {
                officeDemand = e
            },
            get residentialLowFactors() {
                return residentialLowFactors
            },
            set residentialLowFactors(e) {
                residentialLowFactors = e
            },
            get residentialMediumFactors() {
                return residentialMediumFactors
            },
            set residentialMediumFactors(e) {
                residentialMediumFactors = e
            },
            get residentialHighFactors() {
                return residentialHighFactors
            },
            set residentialHighFactors(e) {
                residentialHighFactors = e
            },
            get commercialFactors() {
                return commercialFactors
            },
            set commercialFactors(e) {
                commercialFactors = e
            },
            get industrialFactors() {
                return industrialFactors
            },
            set industrialFactors(e) {
                industrialFactors = e
            },
            get officeFactors() {
                return officeFactors
            },
            set officeFactors(e) {
                officeFactors = e
            },
            get happiness() {
                return happiness
            },
            set happiness(e) {
                happiness = e
            },
            get happinessFactors() {
                return happinessFactors
            },
            set happinessFactors(e) {
                happinessFactors = e
            }
        });
        const lj = "climate";
        var cj, uj = $r(lj, "seasonNameId"), dj = $r(lj, "weather"), mj = $r(lj, "temperature");
        !function(e) {
            e[e.Clear = 0] = "Clear",
            e[e.Few = 1] = "Few",
            e[e.Scattered = 2] = "Scattered",
            e[e.Broken = 3] = "Broken",
            e[e.Overcast = 4] = "Overcast",
            e[e.Rain = 5] = "Rain",
            e[e.Snow = 6] = "Snow",
            e[e.Hail = 7] = "Hail",
            e[e.Storm = 8] = "Storm"
        }(cj || (cj = {})),
        X.add("game-ui/game/data-binding/climate-bindings.ts", {
            get seasonNameId() {
                return seasonNameId
            },
            set seasonNameId(e) {
                seasonNameId = e
            },
            get weather() {
                return weather
            },
            set weather(e) {
                weather = e
            },
            get temperature() {
                return temperature
            },
            set temperature(e) {
                temperature = e
            },
            get WeatherType() {
                return cj
            },
            set WeatherType(e) {
                cj = e
            }
        });
        const hj = "budget";
        var gj = $r(hj, "totalIncome")
          , pj = $r(hj, "totalExpenses")
          , fj = $r(hj, "incomeItems")
          , xj = $r(hj, "incomeValues")
          , vj = $r(hj, "expenseItems")
          , _j = $r(hj, "expenseValues");
        function bj(e, t) {
            return e.sources.reduce(((e,n)=>e + t[n.index]), 0)
        }
        X.add("game-ui/game/data-binding/economy/budget-bindings.ts", {
            get totalIncome() {
                return totalIncome
            },
            set totalIncome(e) {
                totalIncome = e
            },
            get totalExpenses() {
                return totalExpenses
            },
            set totalExpenses(e) {
                totalExpenses = e
            },
            get incomeItems() {
                return incomeItems
            },
            set incomeItems(e) {
                incomeItems = e
            },
            get incomeValues() {
                return incomeValues
            },
            set incomeValues(e) {
                incomeValues = e
            },
            get expenseItems() {
                return expenseItems
            },
            set expenseItems(e) {
                expenseItems = e
            },
            get expenseValues() {
                return expenseValues
            },
            set expenseValues(e) {
                expenseValues = e
            },
            get getItemValue() {
                return bj
            },
            set getItemValue(e) {
                bj = e
            }
        });
        const Tj = "loan";
        var Ej = $r(Tj, "loanLimit")
          , Ij = $r(Tj, "currentLoan")
          , Sj = $r(Tj, "loanOffer");
        function yj(e) {
            tl(Tj, "requestLoanOffer", e)
        }
        function jj() {
            tl(Tj, "acceptLoanOffer")
        }
        function Cj() {
            tl(Tj, "resetLoanOffer")
        }
        X.add("game-ui/game/data-binding/economy/loan-bindings.ts", {
            get loanLimit() {
                return loanLimit
            },
            set loanLimit(e) {
                loanLimit = e
            },
            get currentLoan() {
                return currentLoan
            },
            set currentLoan(e) {
                currentLoan = e
            },
            get loanOffer() {
                return loanOffer
            },
            set loanOffer(e) {
                loanOffer = e
            },
            get requestLoanOffer() {
                return yj
            },
            set requestLoanOffer(e) {
                yj = e
            },
            get acceptLoanOffer() {
                return jj
            },
            set acceptLoanOffer(e) {
                jj = e
            },
            get resetLoanOffer() {
                return Cj
            },
            set resetLoanOffer(e) {
                Cj = e
            }
        });
        const Nj = "production";
        var wj = $r(Nj, "maxProgress")
          , Oj = $r(Nj, "resourceCategories")
          , Pj = Xr(Nj, "resourceDetails")
          , Lj = Xr(Nj, "resources")
          , Aj = Xr(Nj, "services")
          , Mj = Xr(Nj, "data");
        X.add("game-ui/game/data-binding/economy/production-bindings.ts", {
            get maxProgress() {
                return maxProgress
            },
            set maxProgress(e) {
                maxProgress = e
            },
            get resourceCategories() {
                return resourceCategories
            },
            set resourceCategories(e) {
                resourceCategories = e
            },
            get resourceDetails() {
                return resourceDetails
            },
            set resourceDetails(e) {
                resourceDetails = e
            },
            get resources() {
                return resources
            },
            set resources(e) {
                resources = e
            },
            get services() {
                return services
            },
            set services(e) {
                services = e
            },
            get resourceData() {
                return resourceData
            },
            set resourceData(e) {
                resourceData = e
            }
        });
        const Rj = "serviceBudget";
        var kj = $r(Rj, "services")
          , Dj = Xr(Rj, "serviceDetails");
        function Fj(e, t) {
            tl(Rj, "setServiceBudget", e, t)
        }
        function Uj(e, t) {
            tl(Rj, "setServiceFee", e, t)
        }
        function Bj(e) {
            tl(Rj, "resetService", e)
        }
        X.add("game-ui/game/data-binding/economy/service-budget-bindings.ts", {
            get services() {
                return services
            },
            set services(e) {
                services = e
            },
            get serviceDetails() {
                return serviceDetails
            },
            set serviceDetails(e) {
                serviceDetails = e
            },
            get setServiceBudget() {
                return Fj
            },
            set setServiceBudget(e) {
                Fj = e
            },
            get setServiceFee() {
                return Uj
            },
            set setServiceFee(e) {
                Uj = e
            },
            get resetService() {
                return Bj
            },
            set resetService(e) {
                Bj = e
            }
        });
        const Gj = "eventJournal";
        var Vj = Xr(Gj, "eventMap")
          , Hj = $r(Gj, "events");
        function Kj() {
            tl(Gj, "openJournal")
        }
        function Wj() {
            tl(Gj, "closeJournal")
        }
        X.add("game-ui/game/data-binding/event-journal-bindings.ts", {
            get eventMap() {
                return eventMap
            },
            set eventMap(e) {
                eventMap = e
            },
            get events() {
                return events
            },
            set events(e) {
                events = e
            },
            get onOpenJournal() {
                return Kj
            },
            set onOpenJournal(e) {
                Kj = e
            },
            get onCloseJournal() {
                return Wj
            },
            set onCloseJournal(e) {
                Wj = e
            }
        }),
        X.add("game-ui/game/data-binding/infoview-types.ts", {});
        const zj = "lifePath";
        var Yj;
        !function(e) {
            e.Chirp = "chirper.Chirp",
            e.LogEntry = "lifePath.LifePathEvent"
        }(Yj || (Yj = {}));
        var $j = $r(zj, "followedCitizens")
          , qj = Xr(zj, "lifePathDetails")
          , Xj = Xr(zj, "lifePathItems")
          , Qj = $r(zj, "maxFollowedCitizens");
        function Zj(e) {
            tl(zj, "followCitizen", e)
        }
        function Jj(e) {
            tl(zj, "unfollowCitizen", e)
        }
        X.add("game-ui/game/data-binding/life-path-bindings.ts", {
            get LifePathItemType() {
                return Yj
            },
            set LifePathItemType(e) {
                Yj = e
            },
            get followedCitizens() {
                return followedCitizens
            },
            set followedCitizens(e) {
                followedCitizens = e
            },
            get lifePathDetails() {
                return lifePathDetails
            },
            set lifePathDetails(e) {
                lifePathDetails = e
            },
            get lifePathItems() {
                return lifePathItems
            },
            set lifePathItems(e) {
                lifePathItems = e
            },
            get maxFollowedCitizens() {
                return maxFollowedCitizens
            },
            set maxFollowedCitizens(e) {
                maxFollowedCitizens = e
            },
            get followCitizen() {
                return Zj
            },
            set followCitizen(e) {
                Zj = e
            },
            get unfollowCitizen() {
                return Jj
            },
            set unfollowCitizen(e) {
                Jj = e
            }
        });
        var eC = "photoMode";
        function tC() {
            tl(eC, "resetCamera")
        }
        var nC = $r(eC, "overlayHidden");
        function sC(e) {
            tl(eC, "setOverlayHidden", e)
        }
        var iC = $r(eC, "orbitCameraActive");
        function aC() {
            tl(eC, "toggleOrbitCameraActive")
        }
        function oC() {
            tl(eC, "takeScreenshot")
        }
        function rC(e) {
            tl(eC, "selectTab", e)
        }
        function lC(e) {
            tl(eC, "setCinematicCameraVisible", e)
        }
        var cC, uC = $r(eC, "cinematicCameraVisible"), dC = $r(eC, "tabs"), mC = $r(eC, "activeTab");
        !function(e) {
            e.DropdownField = "Game.UI.Widgets.DropdownField"
        }(cC || (cC = {}));
        var hC = {
            group: eC,
            path: []
        }
          , gC = $r(eC, "children");
        X.add("game-ui/game/data-binding/photo-mode-bindings.ts", {
            get group() {
                return eC
            },
            set group(e) {
                eC = e
            },
            get resetCamera() {
                return tC
            },
            set resetCamera(e) {
                tC = e
            },
            get overlayHidden() {
                return overlayHidden
            },
            set overlayHidden(e) {
                overlayHidden = e
            },
            get setOverlayHidden() {
                return sC
            },
            set setOverlayHidden(e) {
                sC = e
            },
            get orbitCameraActive() {
                return orbitCameraActive
            },
            set orbitCameraActive(e) {
                orbitCameraActive = e
            },
            get toggleOrbitCameraActive() {
                return aC
            },
            set toggleOrbitCameraActive(e) {
                aC = e
            },
            get takeScreenshot() {
                return oC
            },
            set takeScreenshot(e) {
                oC = e
            },
            get selectTab() {
                return rC
            },
            set selectTab(e) {
                rC = e
            },
            get toggleCinematicCamera() {
                return lC
            },
            set toggleCinematicCamera(e) {
                lC = e
            },
            get cinematicCameraVisible() {
                return cinematicCameraVisible
            },
            set cinematicCameraVisible(e) {
                cinematicCameraVisible = e
            },
            get tabs() {
                return tabs
            },
            set tabs(e) {
                tabs = e
            },
            get selectedTab() {
                return selectedTab
            },
            set selectedTab(e) {
                selectedTab = e
            },
            get PhotoWidgetType() {
                return cC
            },
            set PhotoWidgetType(e) {
                cC = e
            },
            get root() {
                return hC
            },
            set root(e) {
                hC = e
            },
            get adjustments() {
                return adjustments
            },
            set adjustments(e) {
                adjustments = e
            }
        });
        const pC = "mapTiles";
        var fC, xC = $r(pC, "mapTilePanelVisible"), vC = $r(pC, "mapTileViewActive"), _C = $r(pC, "buildableLand"), bC = $r(pC, "water"), TC = $r(pC, "resources"), EC = $r(pC, "purchasePrice"), IC = $r(pC, "purchaseUpkeep"), SC = $r(pC, "purchaseFlags"), yC = $r(pC, "expansionPermits"), jC = $r(pC, "expansionPermitCost");
        function CC(e) {
            e && sC(!1),
            tl(pC, "setMapTileViewActive", e)
        }
        function NC() {
            CC(!1)
        }
        function wC() {
            tl(pC, "purchaseMapTiles")
        }
        !function(e) {
            e[e.None = 0] = "None",
            e[e.NoCurrentlyAvailable = 1] = "NoCurrentlyAvailable",
            e[e.NoAvailable = 2] = "NoAvailable",
            e[e.NoSelection = 4] = "NoSelection",
            e[e.InsufficientFunds = 8] = "InsufficientFunds",
            e[e.InsufficientPermits = 16] = "InsufficientPermits"
        }(fC || (fC = {})),
        X.add("game-ui/game/data-binding/map-tile-bindings.ts", {
            get mapTilePanelVisible() {
                return mapTilePanelVisible
            },
            set mapTilePanelVisible(e) {
                mapTilePanelVisible = e
            },
            get mapTileViewActive() {
                return mapTileViewActive
            },
            set mapTileViewActive(e) {
                mapTileViewActive = e
            },
            get buildableLand() {
                return buildableLand
            },
            set buildableLand(e) {
                buildableLand = e
            },
            get availableWater() {
                return availableWater
            },
            set availableWater(e) {
                availableWater = e
            },
            get resources() {
                return resources
            },
            set resources(e) {
                resources = e
            },
            get purchasePrice() {
                return purchasePrice
            },
            set purchasePrice(e) {
                purchasePrice = e
            },
            get purchaseUpkeep() {
                return purchaseUpkeep
            },
            set purchaseUpkeep(e) {
                purchaseUpkeep = e
            },
            get purchaseFlags() {
                return purchaseFlags
            },
            set purchaseFlags(e) {
                purchaseFlags = e
            },
            get permits() {
                return permits
            },
            set permits(e) {
                permits = e
            },
            get permitCost() {
                return permitCost
            },
            set permitCost(e) {
                permitCost = e
            },
            get setMapTileViewActive() {
                return CC
            },
            set setMapTileViewActive(e) {
                CC = e
            },
            get disableMapTileView() {
                return NC
            },
            set disableMapTileView(e) {
                NC = e
            },
            get purchaseMapTiles() {
                return wC
            },
            set purchaseMapTiles(e) {
                wC = e
            },
            get MapTileStatus() {
                return fC
            },
            set MapTileStatus(e) {
                fC = e
            }
        });
        const OC = "policies";
        var PC = $r(OC, "cityPolicies")
          , LC = el(OC, "setCityPolicy");
        function AC(e, t, n=0) {
            LC(e, t, n)
        }
        var MC, RC, kC, DC, FC = el(OC, "setPolicy");
        function UC(e, t, n=0) {
            FC(e, t, n)
        }
        X.add("game-ui/game/data-binding/policy-bindings.ts", {
            get cityPolicies() {
                return cityPolicies
            },
            set cityPolicies(e) {
                cityPolicies = e
            },
            get setCityPolicy() {
                return AC
            },
            set setCityPolicy(e) {
                AC = e
            },
            get setPolicy() {
                return UC
            },
            set setPolicy(e) {
                UC = e
            }
        }),
        function(e) {
            e.CityModifier = "prefabs.CityModifierEffect",
            e.LocalModifier = "prefabs.LocalModifierEffect",
            e.LeisureProvider = "prefabs.LeisureProviderEffect",
            e.AdjustHappinessEffect = "prefabs.AdjustHappinessEffect"
        }(MC || (MC = {})),
        function(e) {
            e.Attractiveness = "Attractiveness",
            e.CrimeAccumulation = "CrimeAccumulation",
            e.PoliceStationUpkeep = "PoliceStationUpkeep",
            e.DisasterWarningTime = "DisasterWarningTime",
            e.DisasterDamageRate = "DisasterDamageRate",
            e.DiseaseProbability = "DiseaseProbability",
            e.ParkEntertainment = "ParkEntertainment",
            e.CriminalMonitorProbability = "CriminalMonitorProbability",
            e.IndustrialAirPollution = "IndustrialAirPollution",
            e.IndustrialGroundPollution = "IndustrialGroundPollution",
            e.IndustrialGarbage = "IndustrialGarbage",
            e.RecoveryFailChange = "RecoveryFailChange",
            e.OreResourceAmount = "OreResourceAmount",
            e.OilResourceAmount = "OilResourceAmount",
            e.UniversityInterest = "UniversityInterest",
            e.OfficeSoftwareDemand = "OfficeSoftwareDemand",
            e.IndustrialElectronicsDemand = "IndustrialElectronicsDemand",
            e.OfficeSoftwareEfficiency = "OfficeSoftwareEfficiency",
            e.IndustrialElectronicsEfficiency = "IndustrialElectronicsEfficiency",
            e.TelecomCapacity = "TelecomCapacity",
            e.Entertainment = "Entertainment",
            e.HighwayTrafficSafety = "HighwayTrafficSafety",
            e.PrisonTime = "PrisonTime",
            e.CrimeProbability = "CrimeProbability",
            e.CollegeGraduation = "CollegeGraduation",
            e.UniversityGraduation = "UniversityGraduation",
            e.ImportCost = "ImportCost",
            e.LoanInterest = "LoanInterest",
            e.BuildingLevelingCost = "BuildingLevelingCost",
            e.ExportCost = "ExportCost",
            e.TaxiStartingFee = "TaxiStartingFee",
            e.IndustrialEfficiency = "IndustrialEfficiency",
            e.OfficeEfficiency = "OfficeEfficiency",
            e.PollutionHealthAffect = "PollutionHealthAffect",
            e.HospitalEfficiency = "HospitalEfficiency",
            e.IndustrialFishInputEfficiency = "IndustrialFishInputEfficiency",
            e.IndustrialFishHubEfficiency = "IndustrialFishHubEfficiency"
        }(RC || (RC = {})),
        function(e) {
            e.CrimeAccumulation = "CrimeAccumulation",
            e.ForestFireResponseTime = "ForestFireResponseTime",
            e.ForestFireHazard = "ForestFireHazard",
            e.Wellbeing = "Wellbeing",
            e.Health = "Health"
        }(kC || (kC = {})),
        function(e) {
            e.Meals = "Meals",
            e.Entertainment = "Entertainment",
            e.Commercial = "Commercial",
            e.CityIndoors = "CityIndoors",
            e.Travel = "Travel",
            e.CityPark = "CityPark",
            e.CityBeach = "CityBeach",
            e.Attractions = "Attractions",
            e.Relaxation = "Relaxation",
            e.Sightseeing = "Sightseeing"
        }(DC || (DC = {})),
        X.add("game-ui/game/data-binding/prefab/prefab-effects.ts", {
            get PrefabEffectType() {
                return MC
            },
            set PrefabEffectType(e) {
                MC = e
            },
            get CityModifierType() {
                return RC
            },
            set CityModifierType(e) {
                RC = e
            },
            get LocalModifierType() {
                return kC
            },
            set LocalModifierType(e) {
                kC = e
            },
            get LeisureType() {
                return DC
            },
            set LeisureType(e) {
                DC = e
            }
        });
        var BC, GC = "prefabs.ConsumptionProperty", VC = "prefabs.PollutionProperty";
        !function(e) {
            e[e.none = 0] = "none",
            e[e.low = 1] = "low",
            e[e.medium = 2] = "medium",
            e[e.high = 3] = "high"
        }(BC || (BC = {}));
        var HC, KC = "prefabs.ElectricityProperty";
        !function(e) {
            e[e.low = 0] = "low",
            e[e.high = 1] = "high",
            e[e.both = 2] = "both"
        }(HC || (HC = {}));
        var WC, zC, YC = "prefabs.TransportStopProperty", $C = "prefabs.UpkeepIntProperty", qC = "prefabs.UpkeepInt2Property";
        X.add("game-ui/game/data-binding/prefab/prefab-properties.ts", {
            get CONSUMPTION_PROPERTY() {
                return GC
            },
            set CONSUMPTION_PROPERTY(e) {
                GC = e
            },
            get POLLUTION_PROPERTY() {
                return VC
            },
            set POLLUTION_PROPERTY(e) {
                VC = e
            },
            get Pollution() {
                return BC
            },
            set Pollution(e) {
                BC = e
            },
            get ELECTRICITY_PROPERTY() {
                return KC
            },
            set ELECTRICITY_PROPERTY(e) {
                KC = e
            },
            get Voltage() {
                return HC
            },
            set Voltage(e) {
                HC = e
            },
            get TRANSPORT_STOP_PROPERTY() {
                return YC
            },
            set TRANSPORT_STOP_PROPERTY(e) {
                YC = e
            },
            get UPKEEPNUMBER_PROPERTY() {
                return $C
            },
            set UPKEEPNUMBER_PROPERTY(e) {
                $C = e
            },
            get UPKEEPNUMBER2_PROPERTY() {
                return qC
            },
            set UPKEEPNUMBER2_PROPERTY(e) {
                qC = e
            }
        }),
        function(e) {
            e[e.none = 0] = "none",
            e[e.residential = 1] = "residential",
            e[e.commercial = 2] = "commercial",
            e[e.industrial = 3] = "industrial"
        }(WC || (WC = {})),
        function(e) {
            e.Milestone = "prefabs.MilestoneRequirement",
            e.DevTreeNode = "prefabs.DevTreeNodeRequirement",
            e.StrictObjectBuilt = "prefabs.StrictObjectBuiltRequirement",
            e.ZoneBuilt = "prefabs.ZoneBuiltRequirement",
            e.Citizen = "prefabs.CitizenRequirement",
            e.Processing = "prefabs.ProcessingRequirement",
            e.ObjectBuilt = "prefabs.ObjectBuiltRequirement",
            e.Unlock = "prefabs.UnlockRequirement",
            e.Tutorial = "prefabs.TutorialRequirement",
            e.PrefabUnlocked = "prefabs.PrefabUnlockedRequirement"
        }(zC || (zC = {})),
        X.add("game-ui/game/data-binding/prefab/prefab-requirements.ts", {
            get AreaType() {
                return WC
            },
            set AreaType(e) {
                WC = e
            },
            get PrefabRequirementType() {
                return zC
            },
            set PrefabRequirementType(e) {
                zC = e
            }
        });
        const XC = "devTree";
        var QC = $r(XC, "points")
          , ZC = $r(XC, "services")
          , JC = Xr(XC, "serviceDetails")
          , eN = Xr(XC, "nodes")
          , tN = Xr(XC, "nodeDetails")
          , nN = qr(Zp)
          , sN = qr(Zp);
        function iN(e) {
            tl(XC, "purchaseNode", e)
        }
        X.add("game-ui/game/data-binding/progression/dev-tree-bindings.ts", {
            get devPoints() {
                return devPoints
            },
            set devPoints(e) {
                devPoints = e
            },
            get services() {
                return services
            },
            set services(e) {
                services = e
            },
            get serviceDetails() {
                return serviceDetails
            },
            set serviceDetails(e) {
                serviceDetails = e
            },
            get nodes() {
                return nodes
            },
            set nodes(e) {
                nodes = e
            },
            get nodeDetails() {
                return nodeDetails
            },
            set nodeDetails(e) {
                nodeDetails = e
            },
            get selectedDevTree() {
                return selectedDevTree
            },
            set selectedDevTree(e) {
                selectedDevTree = e
            },
            get selectedNode() {
                return selectedNode
            },
            set selectedNode(e) {
                selectedNode = e
            },
            get purchaseNode() {
                return iN
            },
            set purchaseNode(e) {
                iN = e
            }
        });
        var aN = $r("feature", "lockedFeatures");
        function oN(e) {
            const t = (0,
            Y.useCallback)(((t,n)=>({
                locked: void 0 !== n.find((t=>t.name === e)),
                requirements: n.find((t=>t.name === e))?.requirements || {
                    requireAny: [],
                    requireAll: []
                }
            })), [e]);
            return il(aN, t, {
                locked: !1,
                requirements: {
                    requireAny: [],
                    requireAll: []
                }
            })
        }
        function rN(e) {
            const t = (0,
            Y.useCallback)(((t,n)=>void 0 !== n.find((t=>t.name === e))), [e]);
            return il(aN, t, !1)
        }
        function lN(e) {
            return void 0 !== aN.value?.find((t=>t.name === e))
        }
        X.add("game-ui/game/data-binding/progression/feature-bindings.ts", {
            get lockedFeatures() {
                return lockedFeatures
            },
            set lockedFeatures(e) {
                lockedFeatures = e
            },
            get useFeatureUnlocking() {
                return oN
            },
            set useFeatureUnlocking(e) {
                oN = e
            },
            get useFeatureLocked() {
                return rN
            },
            set useFeatureLocked(e) {
                rN = e
            },
            get isFeatureLocked() {
                return lN
            },
            set isFeatureLocked(e) {
                lN = e
            }
        });
        var cN = {
            r: 0,
            g: 0,
            b: 0,
            a: 1
        }
          , uN = {
            r: 1,
            g: 1,
            b: 1,
            a: 1
        }
          , dN = {
            r: 0,
            g: 0,
            b: 0,
            a: 0
        };
        function mN(e, t, n) {
            return {
                r: e / 255,
                g: t / 255,
                b: n / 255,
                a: 1
            }
        }
        function hN(e, t, n, s) {
            return {
                r: e / 255,
                g: t / 255,
                b: n / 255,
                a: s
            }
        }
        function gN(e, t) {
            return Math.abs(e.r - t.r) < .001 && Math.abs(e.g - t.g) < .001 && Math.abs(e.b - t.b) < .001 && Math.abs(e.a - t.a) < .001
        }
        function pN({r: e, g: t, b: n}) {
            return Math.max(e, t, n) === Math.min(e, t, n)
        }
        function fN(e, t) {
            return {
                ...e,
                a: t
            }
        }
        function xN({r: e, g: t, b: n, a: s}) {
            return `rgba(${Math.round(255 * e)},${Math.round(255 * t)},${Math.round(255 * n)},${s.toString().replace(",", ".")})`
        }
        function vN(e) {
            if (null == e)
                return null;
            const t = e.match(/^rgba\((\d+),\s*(\d+),\s*(\d+),\s*(\d+(?:\.\d+)?)\)$/);
            return t && 5 === t.length ? {
                r: Od(parseInt(t[1]) / 255, 0, 1),
                g: Od(parseInt(t[2]) / 255, 0, 1),
                b: Od(parseInt(t[3]) / 255, 0, 1),
                a: Od(parseFloat(t[4]), 0, 1)
            } : null
        }
        function _N({r: e, g: t, b: n}) {
            return bN(e) + bN(t) + bN(n)
        }
        function bN(e) {
            const t = Math.round(255 * e).toString(16).toUpperCase();
            return 1 === t.length ? "0" + t : t
        }
        function TN(e) {
            e = e.replace(/^#?([a-f\d])([a-f\d])([a-f\d])$/i, ((e,t,n,s)=>t + t + n + n + s + s));
            const t = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})?$/i.exec(e);
            if (!t)
                return null;
            const n = t.length > 3 && parseInt(t[4], 16) ? parseInt(t[4], 16) / 255 : 1;
            return {
                r: parseInt(t[1], 16) / 255,
                g: parseInt(t[2], 16) / 255,
                b: parseInt(t[3], 16) / 255,
                a: n
            }
        }
        function EN({h: e, s: t, v: n, a: s}) {
            let i = 0
              , a = 0
              , o = 0;
            const r = Math.floor(6 * e)
              , l = 6 * e - r
              , c = n * (1 - t)
              , u = n * (1 - l * t)
              , d = n * (1 - (1 - l) * t);
            switch (r % 6) {
            case 0:
                i = n,
                a = d,
                o = c;
                break;
            case 1:
                i = u,
                a = n,
                o = c;
                break;
            case 2:
                i = c,
                a = n,
                o = d;
                break;
            case 3:
                i = c,
                a = u,
                o = n;
                break;
            case 4:
                i = d,
                a = c,
                o = n;
                break;
            case 5:
                i = n,
                a = c,
                o = u
            }
            return {
                r: i,
                g: a,
                b: o,
                a: s
            }
        }
        function IN({r: e, g: t, b: n, a: s}, i=0) {
            const a = Math.max(e, t, n)
              , o = Math.min(e, t, n)
              , r = a - o;
            let l = i;
            const c = 0 === a ? 0 : r / a
              , u = a;
            if (a !== o) {
                switch (a) {
                case e:
                    l = (t - n) / r + (t < n ? 6 : 0);
                    break;
                case t:
                    l = (n - e) / r + 2;
                    break;
                case n:
                    l = (e - t) / r + 4
                }
                l /= 6
            }
            return {
                h: l,
                s: c,
                v: u,
                a: s
            }
        }
        function SN(e, t, n) {
            return {
                r: Pd(e.r, t.r, n),
                g: Pd(e.g, t.g, n),
                b: Pd(e.b, t.b, n),
                a: Pd(e.a, t.a, n)
            }
        }
        function yN(e, t, n) {
            return {
                h: Pd(e.h, t.h, n),
                s: Pd(e.s, t.s, n),
                v: Pd(e.v, t.v, n),
                a: Pd(e.a, t.a, n)
            }
        }
        function jN(e, t="to right") {
            return `linear-gradient(${t}, ${e.stops.map((e=>`${"string" == typeof e.color ? e.color : xN(e.color)} ${100 * e.offset}%`)).join(",")})`
        }
        X.add("game-ui/common/color.ts", {
            get black() {
                return cN
            },
            set black(e) {
                cN = e
            },
            get white() {
                return uN
            },
            set white(e) {
                uN = e
            },
            get transparent() {
                return dN
            },
            set transparent(e) {
                dN = e
            },
            get rgb() {
                return mN
            },
            set rgb(e) {
                mN = e
            },
            get rgba() {
                return hN
            },
            set rgba(e) {
                hN = e
            },
            get isColorEqual() {
                return gN
            },
            set isColorEqual(e) {
                gN = e
            },
            get isAchromatic() {
                return pN
            },
            set isAchromatic(e) {
                pN = e
            },
            get withAlpha() {
                return fN
            },
            set withAlpha(e) {
                fN = e
            },
            get formatColor() {
                return xN
            },
            set formatColor(e) {
                xN = e
            },
            get parseRgba() {
                return vN
            },
            set parseRgba(e) {
                vN = e
            },
            get formatHexColor() {
                return _N
            },
            set formatHexColor(e) {
                _N = e
            },
            get parseHexColor() {
                return TN
            },
            set parseHexColor(e) {
                TN = e
            },
            get hsvaToRgba() {
                return EN
            },
            set hsvaToRgba(e) {
                EN = e
            },
            get rgbaToHsva() {
                return IN
            },
            set rgbaToHsva(e) {
                IN = e
            },
            get lerpColor() {
                return SN
            },
            set lerpColor(e) {
                SN = e
            },
            get lerpHsva() {
                return yN
            },
            set lerpHsva(e) {
                yN = e
            },
            get buildCssLinearGradient() {
                return jN
            },
            set buildCssLinearGradient(e) {
                jN = e
            }
        });
        const CN = "milestone";
        var NN, wN = {
            entity: Zp,
            index: 0,
            xpRequirement: 0,
            reward: 0,
            devTreePoints: 0,
            mapTiles: 0,
            loanLimit: 0,
            image: "Media/Placeholder.svg",
            backgroundColor: dN,
            accentColor: {
                r: .18,
                g: .235,
                b: .337,
                a: 1
            },
            textColor: uN,
            locked: !1
        };
        !function(e) {
            e.Feature = "milestone.Feature",
            e.Service = "milestone.Service",
            e.Zone = "milestone.Asset",
            e.Policy = "milestone.Policy"
        }(NN || (NN = {}));
        var ON = $r(CN, "achievedMilestone")
          , PN = $r(CN, "achievedMilestoneXP")
          , LN = $r(CN, "nextMilestoneXP")
          , AN = $r(CN, "totalXP")
          , MN = Zr(CN, "xpMessageAdded")
          , RN = $r(CN, "maxMilestoneReached")
          , kN = $r(CN, "milestones")
          , DN = $r(CN, "unlockedMilestone", Zp);
        function FN() {
            tl(CN, "clearUnlockedMilestone")
        }
        var UN = Xr(CN, "milestoneDetails")
          , BN = Xr(CN, "milestoneUnlocks")
          , GN = Xr(CN, "unlockDetails");
        X.add("game-ui/game/data-binding/progression/milestone-bindings.ts", {
            get defaultMilestoneDetails() {
                return wN
            },
            set defaultMilestoneDetails(e) {
                wN = e
            },
            get MilestoneUnlockType() {
                return NN
            },
            set MilestoneUnlockType(e) {
                NN = e
            },
            get achievedMilestone() {
                return achievedMilestone
            },
            set achievedMilestone(e) {
                achievedMilestone = e
            },
            get achievedMilestoneXP() {
                return achievedMilestoneXP
            },
            set achievedMilestoneXP(e) {
                achievedMilestoneXP = e
            },
            get nextMilestoneXP() {
                return nextMilestoneXP
            },
            set nextMilestoneXP(e) {
                nextMilestoneXP = e
            },
            get totalXP() {
                return totalXP
            },
            set totalXP(e) {
                totalXP = e
            },
            get xpMessageAdded() {
                return xpMessageAdded
            },
            set xpMessageAdded(e) {
                xpMessageAdded = e
            },
            get maxMilestoneReached() {
                return maxMilestoneReached
            },
            set maxMilestoneReached(e) {
                maxMilestoneReached = e
            },
            get milestones() {
                return milestones
            },
            set milestones(e) {
                milestones = e
            },
            get unlockedMilestone() {
                return unlockedMilestone
            },
            set unlockedMilestone(e) {
                unlockedMilestone = e
            },
            get clearUnlockedMilestone() {
                return FN
            },
            set clearUnlockedMilestone(e) {
                FN = e
            },
            get milestoneDetails() {
                return milestoneDetails
            },
            set milestoneDetails(e) {
                milestoneDetails = e
            },
            get milestoneUnlocks() {
                return milestoneUnlocks
            },
            set milestoneUnlocks(e) {
                milestoneUnlocks = e
            },
            get unlockDetails() {
                return unlockDetails
            },
            set unlockDetails(e) {
                unlockDetails = e
            }
        });
        const VN = "signatureBuildings";
        var HN = $r(VN, "unlockedSignatures");
        function KN() {
            tl(VN, "removeUnlockedSignature")
        }
        X.add("game-ui/game/data-binding/progression/signature-building-bindings.ts", {
            get unlockedSignatures() {
                return unlockedSignatures
            },
            set unlockedSignatures(e) {
                unlockedSignatures = e
            },
            get removeUnlockedSignature() {
                return KN
            },
            set removeUnlockedSignature(e) {
                KN = e
            }
        });
        const WN = "radio";
        var zN = $r(WN, "enabled")
          , YN = $r(WN, "volume")
          , $N = $r(WN, "paused")
          , qN = $r(WN, "muted")
          , XN = $r(WN, "skipAds")
          , QN = $r(WN, "emergencyMode")
          , ZN = $r(WN, "emergencyFocusable")
          , JN = $r(WN, "emergencyMessage")
          , ew = $r(WN, "selectedNetwork")
          , tw = $r(WN, "selectedStation")
          , nw = $r(WN, "networks")
          , sw = $r(WN, "stations")
          , iw = $r(WN, "currentSegment")
          , aw = Zr(WN, "segmentChanged");
        function ow(e) {
            tl(WN, "setVolume", e)
        }
        function rw(e) {
            tl(WN, "setPaused", e)
        }
        function lw() {
            rw(!$N.value)
        }
        function cw(e) {
            tl(WN, "setMuted", e)
        }
        function uw() {
            cw(!qN.value)
        }
        function dw(e) {
            tl(WN, "setSkipAds", e)
        }
        function mw() {
            dw(!XN.value)
        }
        function hw() {
            tl(WN, "playPrevious")
        }
        function gw() {
            tl(WN, "playNext")
        }
        function pw() {
            tl(WN, "focusEmergency")
        }
        function fw(e) {
            tl(WN, "selectNetwork", e)
        }
        function xw(e) {
            tl(WN, "selectStation", e)
        }
        function vw(e) {
            return null == e || 0 === e.length ? null : e[0]
        }
        function _w(e, t) {
            return null == e || 0 === e.length || null == e[0] ? null : e[0][t]
        }
        function bw(e, t, n) {
            const s = Tw(t, e.length, n);
            return null != s ? e[s] : null
        }
        function Tw(e, t, n) {
            return 0 === t ? null : -1 === e ? 0 : e === t - 1 ? n ? 0 : e : e + 1
        }
        function Ew(e, t, n) {
            const s = Iw(t, e.length, n);
            return null != s ? e[s] : null
        }
        function Iw(e, t, n) {
            return 0 === t ? null : -1 === e ? 0 : 0 === e ? n ? t - 1 : 0 : e - 1
        }
        X.add("game-ui/game/data-binding/radio-bindings.ts", {
            get radioEnabled() {
                return radioEnabled
            },
            set radioEnabled(e) {
                radioEnabled = e
            },
            get volume() {
                return volume
            },
            set volume(e) {
                volume = e
            },
            get paused() {
                return paused
            },
            set paused(e) {
                paused = e
            },
            get muted() {
                return muted
            },
            set muted(e) {
                muted = e
            },
            get skipAds() {
                return skipAds
            },
            set skipAds(e) {
                skipAds = e
            },
            get emergencyMode() {
                return emergencyMode
            },
            set emergencyMode(e) {
                emergencyMode = e
            },
            get emergencyFocusable() {
                return emergencyFocusable
            },
            set emergencyFocusable(e) {
                emergencyFocusable = e
            },
            get emergencyMessage() {
                return emergencyMessage
            },
            set emergencyMessage(e) {
                emergencyMessage = e
            },
            get selectedNetwork() {
                return selectedNetwork
            },
            set selectedNetwork(e) {
                selectedNetwork = e
            },
            get selectedStation() {
                return selectedStation
            },
            set selectedStation(e) {
                selectedStation = e
            },
            get networks() {
                return networks
            },
            set networks(e) {
                networks = e
            },
            get stations() {
                return stations
            },
            set stations(e) {
                stations = e
            },
            get currentSegment() {
                return currentSegment
            },
            set currentSegment(e) {
                currentSegment = e
            },
            get segmentChanged() {
                return segmentChanged
            },
            set segmentChanged(e) {
                segmentChanged = e
            },
            get setVolume() {
                return ow
            },
            set setVolume(e) {
                ow = e
            },
            get setPaused() {
                return rw
            },
            set setPaused(e) {
                rw = e
            },
            get togglePaused() {
                return lw
            },
            set togglePaused(e) {
                lw = e
            },
            get setMuted() {
                return cw
            },
            set setMuted(e) {
                cw = e
            },
            get toggleMuted() {
                return uw
            },
            set toggleMuted(e) {
                uw = e
            },
            get setSkipAds() {
                return dw
            },
            set setSkipAds(e) {
                dw = e
            },
            get toggleSkipAds() {
                return mw
            },
            set toggleSkipAds(e) {
                mw = e
            },
            get playPrevious() {
                return hw
            },
            set playPrevious(e) {
                hw = e
            },
            get playNext() {
                return gw
            },
            set playNext(e) {
                gw = e
            },
            get focusEmergency() {
                return pw
            },
            set focusEmergency(e) {
                pw = e
            },
            get selectNetwork() {
                return fw
            },
            set selectNetwork(e) {
                fw = e
            },
            get selectStation() {
                return xw
            },
            set selectStation(e) {
                xw = e
            }
        });
        var Sw = (e,t,n=0)=>{
            const s = new Array(t);
            for (let i = n; i < n + t; ++i)
                s[i - n] = e(i);
            return s
        }
        ;
        function yw(e, t) {
            return e.some((e=>(e.length > t.length ? e : t).every(((n,s)=>e[s] === t[s]))))
        }
        function jw(e) {
            return null != e
        }
        X.add("game-ui/common/utils/arrays.ts", {
            get firstOrNull() {
                return vw
            },
            set firstOrNull(e) {
                vw = e
            },
            get firstPropertyOrNull() {
                return _w
            },
            set firstPropertyOrNull(e) {
                _w = e
            },
            get getNextItem() {
                return bw
            },
            set getNextItem(e) {
                bw = e
            },
            get getNextIndex() {
                return Tw
            },
            set getNextIndex(e) {
                Tw = e
            },
            get getPreviousItem() {
                return Ew
            },
            set getPreviousItem(e) {
                Ew = e
            },
            get getPreviousIndex() {
                return Iw
            },
            set getPreviousIndex(e) {
                Iw = e
            },
            get mapRange() {
                return Sw
            },
            set mapRange(e) {
                Sw = e
            },
            get containsArray() {
                return yw
            },
            set containsArray(e) {
                yw = e
            },
            get notNull() {
                return jw
            },
            set notNull(e) {
                jw = e
            }
        });
        const Cw = "selectedInfo";
        var Nw, ww, Ow, Pw, Lw, Aw = $r(Cw, "selectedEntity"), Mw = $r(Cw, "selectedTrailerController"), Rw = $r(Cw, "selectedUITag"), kw = $r(Cw, "activeSelection"), Dw = $r(Cw, "position"), Fw = $r(Cw, "topSections"), Uw = $r(Cw, "middleSections"), Bw = $r(Cw, "bottomSections"), Gw = $r(Cw, "titleSection"), Vw = $r(Cw, "developerSection"), Hw = $r(Cw, "lineVisualizerSection"), Kw = $r(Cw, "householdSidebarSection"), Ww = $r(Cw, "tooltipTags"), zw = $r(Cw, "selectedRoute"), Yw = el(Cw, "selectEntity"), $w = el(Cw, "setSelectedRoute"), qw = Jr(Cw, "clearSelection");
        !function(e) {
            e.Resource = "Game.UI.InGame.ResourceSection",
            e.LocalServices = "Game.UI.InGame.LocalServicesSection",
            e.Actions = "Game.UI.InGame.ActionsSection",
            e.Description = "Game.UI.InGame.DescriptionSection",
            e.ContentPrerequisite = "Game.UI.InGame.ContentPrerequisiteSection",
            e.Developer = "Game.UI.InGame.DeveloperSection",
            e.Residents = "Game.UI.InGame.ResidentsSection",
            e.HouseholdSidebar = "Game.UI.InGame.HouseholdSidebarSection",
            e.Districts = "Game.UI.InGame.DistrictsSection",
            e.Title = "Game.UI.InGame.TitleSection",
            e.Notifications = "Game.UI.InGame.NotificationsSection",
            e.Policies = "Game.UI.InGame.PoliciesSection",
            e.Profitability = "Game.UI.InGame.ProfitabilitySection",
            e.AverageHappiness = "Game.UI.InGame.AverageHappinessSection",
            e.Schedule = "Game.UI.InGame.ScheduleSection",
            e.Line = "Game.UI.InGame.LineSection",
            e.Lines = "Game.UI.InGame.LinesSection",
            e.Color = "Game.UI.InGame.ColorSection",
            e.LineVisualizer = "Game.UI.InGame.LineVisualizerSection",
            e.TicketPrice = "Game.UI.InGame.TicketPriceSection",
            e.VehicleCount = "Game.UI.InGame.VehicleCountSection",
            e.Attractiveness = "Game.UI.InGame.AttractivenessSection",
            e.Efficiency = "Game.UI.InGame.EfficiencySection",
            e.Employees = "Game.UI.InGame.EmployeesSection",
            e.Upkeep = "Game.UI.InGame.UpkeepSection",
            e.Level = "Game.UI.InGame.LevelSection",
            e.Education = "Game.UI.InGame.EducationSection",
            e.Pollution = "Game.UI.InGame.PollutionSection",
            e.Healthcare = "Game.UI.InGame.HealthcareSection",
            e.Deathcare = "Game.UI.InGame.DeathcareSection",
            e.Garbage = "Game.UI.InGame.GarbageSection",
            e.Police = "Game.UI.InGame.PoliceSection",
            e.Vehicles = "Game.UI.InGame.VehiclesSection",
            e.DispatchedVehicles = "Game.UI.InGame.DispatchedVehiclesSection",
            e.Electricity = "Game.UI.InGame.ElectricitySection",
            e.Transformer = "Game.UI.InGame.TransformerSection",
            e.Battery = "Game.UI.InGame.BatterySection",
            e.Water = "Game.UI.InGame.WaterSection",
            e.Sewage = "Game.UI.InGame.SewageSection",
            e.Fire = "Game.UI.InGame.FireSection",
            e.Prison = "Game.UI.InGame.PrisonSection",
            e.Shelter = "Game.UI.InGame.ShelterSection",
            e.Parking = "Game.UI.InGame.ParkingSection",
            e.Park = "Game.UI.InGame.ParkSection",
            e.Mail = "Game.UI.InGame.MailSection",
            e.Road = "Game.UI.InGame.RoadSection",
            e.Company = "Game.UI.InGame.CompanySection",
            e.Storage = "Game.UI.InGame.StorageSection",
            e.TradedResourcesSection = "Game.UI.InGame.TradedResourcesSection",
            e.PrivateVehicle = "Game.UI.InGame.PrivateVehicleSection",
            e.PublicTransportVehicle = "Game.UI.InGame.PublicTransportVehicleSection",
            e.CargoTransportVehicle = "Game.UI.InGame.CargoTransportVehicleSection",
            e.DeliveryVehicle = "Game.UI.InGame.DeliveryVehicleSection",
            e.HealthcareVehicle = "Game.UI.InGame.HealthcareVehicleSection",
            e.FireVehicle = "Game.UI.InGame.FireVehicleSection",
            e.PoliceVehicle = "Game.UI.InGame.PoliceVehicleSection",
            e.MaintenanceVehicle = "Game.UI.InGame.MaintenanceVehicleSection",
            e.DeathcareVehicle = "Game.UI.InGame.DeathcareVehicleSection",
            e.PostVehicle = "Game.UI.InGame.PostVehicleSection",
            e.GarbageVehicle = "Game.UI.InGame.GarbageVehicleSection",
            e.ExtractorVehicle = "Game.UI.InGame.ExtractorVehicleSection",
            e.Passengers = "Game.UI.InGame.PassengersSection",
            e.Cargo = "Game.UI.InGame.CargoSection",
            e.Load = "Game.UI.InGame.LoadSection",
            e.Status = "Game.UI.InGame.StatusSection",
            e.Citizen = "Game.UI.InGame.CitizenSection",
            e.DummyHuman = "Game.UI.InGame.DummyHumanSection",
            e.Animal = "Game.UI.InGame.AnimalSection",
            e.SelectVehicles = "Game.UI.InGame.SelectVehiclesSection",
            e.DestroyedBuilding = "Game.UI.InGame.DestroyedBuildingSection",
            e.DestroyedTree = "Game.UI.InGame.DestroyedTreeSection",
            e.Comfort = "Game.UI.InGame.ComfortSection",
            e.Upgrades = "Game.UI.InGame.UpgradesSection",
            e.UpgradeProperties = "Game.UI.InGame.UpgradePropertiesSection"
        }(Nw || (Nw = {})),
        function(e) {
            e[e.none = 0] = "none",
            e[e.low = 1] = "low",
            e[e.medium = 2] = "medium",
            e[e.high = 3] = "high"
        }(ww || (ww = {})),
        function(e) {
            e[e.PostFacility = 0] = "PostFacility",
            e[e.MailBox = 1] = "MailBox"
        }(Ow || (Ow = {})),
        function(e) {
            e.GenericInfo = "Game.UI.InGame.GenericInfo",
            e.CapacityInfo = "Game.UI.InGame.CapacityInfo",
            e.InfoList = "Game.UI.InGame.InfoList"
        }(Pw || (Pw = {})),
        function(e) {
            e.Extension = "Extension",
            e.SubBuilding = "SubBuilding"
        }(Lw || (Lw = {}));
        var Xw, Qw = "Game.UI.InGame.LineVisualizerSection+LineStop", Zw = "Game.UI.InGame.LineVisualizerSection+LineVehicle";
        function Jw(e) {
            const t = sc();
            return (0,
            Y.useMemo)((()=>{
                const n = nO(t, e);
                return "" !== n ? n : null
            }
            ), [t, e])
        }
        function eO(e) {
            const t = sc();
            return (0,
            Y.useMemo)((()=>{
                const n = e.filter(jw).map((e=>nO(t, e))).filter((e=>"" !== e));
                return n.length > 0 ? n : null
            }
            ), [e, t])
        }
        function tO(e, t, n, s=!1) {
            const i = (0,
            Y.useRef)()
              , a = sc()
              , o = sl(Ww);
            return (0,
            Y.useMemo)((()=>{
                const r = t=>nO(a, e + t)
                  , l = [!s && nO(a, e), ...t.map(r), ...o.filter((e=>n.includes(e))).map(r)].filter(Boolean);
                if (!l.length)
                    return null;
                const c = l.join("");
                return i.current && c === i.current.join("") ? i.current : (i.current = l,
                l)
            }
            ), [a, o, e, s, n, t])
        }
        function nO(e, t) {
            return _c.SelectedInfoPanel.TOOLTIP.renderString(e, {
                hash: t,
                fallback: ""
            })
        }
        !function(e) {
            e.Citizen = "Citizen",
            e.Household = "Household",
            e.Building = "Building"
        }(Xw || (Xw = {})),
        X.add("game-ui/game/data-binding/selected-info-bindings.ts", {
            get selectedEntity() {
                return selectedEntity
            },
            set selectedEntity(e) {
                selectedEntity = e
            },
            get selectedTrailerController() {
                return selectedTrailerController
            },
            set selectedTrailerController(e) {
                selectedTrailerController = e
            },
            get selectedUITag() {
                return selectedUITag
            },
            set selectedUITag(e) {
                selectedUITag = e
            },
            get activeSelection() {
                return activeSelection
            },
            set activeSelection(e) {
                activeSelection = e
            },
            get selectedInfoPosition() {
                return selectedInfoPosition
            },
            set selectedInfoPosition(e) {
                selectedInfoPosition = e
            },
            get topSections() {
                return topSections
            },
            set topSections(e) {
                topSections = e
            },
            get middleSections() {
                return middleSections
            },
            set middleSections(e) {
                middleSections = e
            },
            get bottomSections() {
                return bottomSections
            },
            set bottomSections(e) {
                bottomSections = e
            },
            get titleSection() {
                return titleSection
            },
            set titleSection(e) {
                titleSection = e
            },
            get developerSection() {
                return developerSection
            },
            set developerSection(e) {
                developerSection = e
            },
            get lineVisualizerSection() {
                return lineVisualizerSection
            },
            set lineVisualizerSection(e) {
                lineVisualizerSection = e
            },
            get householdSidebarSection() {
                return householdSidebarSection
            },
            set householdSidebarSection(e) {
                householdSidebarSection = e
            },
            get tooltipTags() {
                return tooltipTags
            },
            set tooltipTags(e) {
                tooltipTags = e
            },
            get selectedRoute() {
                return selectedRoute
            },
            set selectedRoute(e) {
                selectedRoute = e
            },
            get selectEntity() {
                return Yw
            },
            set selectEntity(e) {
                Yw = e
            },
            get setSelectedRoute() {
                return $w
            },
            set setSelectedRoute(e) {
                $w = e
            },
            get clearSelection() {
                return qw
            },
            set clearSelection(e) {
                qw = e
            },
            get SectionType() {
                return Nw
            },
            set SectionType(e) {
                Nw = e
            },
            get Pollution() {
                return ww
            },
            set Pollution(e) {
                ww = e
            },
            get MailSectionType() {
                return Ow
            },
            set MailSectionType(e) {
                Ow = e
            },
            get DeveloperSubsectionType() {
                return Pw
            },
            set DeveloperSubsectionType(e) {
                Pw = e
            },
            get UpgradeType() {
                return Lw
            },
            set UpgradeType(e) {
                Lw = e
            },
            get LINE_STOP() {
                return Qw
            },
            set LINE_STOP(e) {
                Qw = e
            },
            get LINE_VEHICLE() {
                return Zw
            },
            set LINE_VEHICLE(e) {
                Zw = e
            },
            get HouseholdSidebarVariant() {
                return Xw
            },
            set HouseholdSidebarVariant(e) {
                Xw = e
            },
            get useTooltipParagraph() {
                return Jw
            },
            set useTooltipParagraph(e) {
                Jw = e
            },
            get useTooltipParagraphs() {
                return eO
            },
            set useTooltipParagraphs(e) {
                eO = e
            },
            get useGeneratedTooltipParagraphs() {
                return tO
            },
            set useGeneratedTooltipParagraphs(e) {
                tO = e
            }
        });
        const sO = "statistics";
        var iO = $r(sO, "sampleRange")
          , aO = $r(sO, "sampleCount")
          , oO = $r(sO, "activeGroup")
          , rO = $r(sO, "activeCategory")
          , lO = $r(sO, "stacked")
          , cO = $r(sO, "categories")
          , uO = $r(sO, "dataLabels")
          , dO = Xr(sO, "groups")
          , mO = $r(sO, "data")
          , hO = $r(sO, "selectedStatistics")
          , gO = Xr(sO, "unlockingRequirements")
          , pO = $r(sO, "updatesPerDay");
        function fO(e) {
            tl(sO, "addStat", Vu(e, "Game.UI.InGame.StatisticsUISystem+StatItem"))
        }
        function xO(e) {
            tl(sO, "addStatChildren", Vu(e, "Game.UI.InGame.StatisticsUISystem+StatItem"))
        }
        function vO(e) {
            tl(sO, "removeStat", Vu(e, "Game.UI.InGame.StatisticsUISystem+StatItem"))
        }
        function _O() {
            tl(sO, "clearStats")
        }
        function bO(e) {
            tl(sO, "setSampleRange", e)
        }
        X.add("game-ui/game/data-binding/statistics-bindings.ts", {
            get sampleRange() {
                return sampleRange
            },
            set sampleRange(e) {
                sampleRange = e
            },
            get sampleCount() {
                return sampleCount
            },
            set sampleCount(e) {
                sampleCount = e
            },
            get activeGroup() {
                return activeGroup
            },
            set activeGroup(e) {
                activeGroup = e
            },
            get activeCategory() {
                return activeCategory
            },
            set activeCategory(e) {
                activeCategory = e
            },
            get stacked() {
                return stacked
            },
            set stacked(e) {
                stacked = e
            },
            get statisticsCategories() {
                return statisticsCategories
            },
            set statisticsCategories(e) {
                statisticsCategories = e
            },
            get statLabels() {
                return statLabels
            },
            set statLabels(e) {
                statLabels = e
            },
            get statGroupsMap() {
                return statGroupsMap
            },
            set statGroupsMap(e) {
                statGroupsMap = e
            },
            get statsData() {
                return statsData
            },
            set statsData(e) {
                statsData = e
            },
            get selectedStatistics() {
                return selectedStatistics
            },
            set selectedStatistics(e) {
                selectedStatistics = e
            },
            get statUnlockingRequirements() {
                return statUnlockingRequirements
            },
            set statUnlockingRequirements(e) {
                statUnlockingRequirements = e
            },
            get updatesPerDay() {
                return updatesPerDay
            },
            set updatesPerDay(e) {
                updatesPerDay = e
            },
            get addStat() {
                return fO
            },
            set addStat(e) {
                fO = e
            },
            get addStatChildren() {
                return xO
            },
            set addStatChildren(e) {
                xO = e
            },
            get removeStat() {
                return vO
            },
            set removeStat(e) {
                vO = e
            },
            get clearStats() {
                return _O
            },
            set clearStats(e) {
                _O = e
            },
            get setSampleRange() {
                return bO
            },
            set setSampleRange(e) {
                bO = e
            }
        });
        const TO = "taxation";
        var EO = $r(TO, "taxRate")
          , IO = $r(TO, "taxEffect")
          , SO = $r(TO, "taxIncome")
          , yO = $r(TO, "minTaxRate")
          , jO = $r(TO, "maxTaxRate")
          , CO = $r(TO, "areaTypes")
          , NO = Xr(TO, "areaTaxRates")
          , wO = Xr(TO, "areaTaxIncomes")
          , OO = Xr(TO, "areaTaxEffects")
          , PO = Xr(TO, "areaResourceTaxRanges")
          , LO = Xr(TO, "areaResources")
          , AO = Xr(TO, "resourceTaxRates")
          , MO = Xr(TO, "resourceTaxIncomes")
          , RO = Xr(TO, "taxResourceInfos")
          , kO = e=>{
            tl(TO, "setTaxRate", e)
        }
          , DO = (e,t)=>{
            tl(TO, "setAreaTaxRate", e, t)
        }
          , FO = (e,t,n)=>{
            tl(TO, "setResourceTaxRate", e, t, n)
        }
        ;
        X.add("game-ui/game/data-binding/taxation-bindings.ts", {
            get taxRate() {
                return EO
            },
            set taxRate(e) {
                EO = e
            },
            get taxEffect() {
                return IO
            },
            set taxEffect(e) {
                IO = e
            },
            get taxIncome() {
                return SO
            },
            set taxIncome(e) {
                SO = e
            },
            get minTaxRate() {
                return yO
            },
            set minTaxRate(e) {
                yO = e
            },
            get maxTaxRate() {
                return jO
            },
            set maxTaxRate(e) {
                jO = e
            },
            get areaTypes() {
                return areaTypes
            },
            set areaTypes(e) {
                areaTypes = e
            },
            get areaTaxRates() {
                return areaTaxRates
            },
            set areaTaxRates(e) {
                areaTaxRates = e
            },
            get areaTaxIncomes() {
                return areaTaxIncomes
            },
            set areaTaxIncomes(e) {
                areaTaxIncomes = e
            },
            get areaTaxEffects() {
                return areaTaxEffects
            },
            set areaTaxEffects(e) {
                areaTaxEffects = e
            },
            get areaResourceTaxRanges() {
                return areaResourceTaxRanges
            },
            set areaResourceTaxRanges(e) {
                areaResourceTaxRanges = e
            },
            get areaResources() {
                return areaResources
            },
            set areaResources(e) {
                areaResources = e
            },
            get resourceTaxRates() {
                return AO
            },
            set resourceTaxRates(e) {
                AO = e
            },
            get resourceTaxIncomes() {
                return MO
            },
            set resourceTaxIncomes(e) {
                MO = e
            },
            get taxResourceInfos() {
                return RO
            },
            set taxResourceInfos(e) {
                RO = e
            },
            get setTaxRate() {
                return kO
            },
            set setTaxRate(e) {
                kO = e
            },
            get setAreaTaxRate() {
                return DO
            },
            set setAreaTaxRate(e) {
                DO = e
            },
            get setResourceTaxRate() {
                return FO
            },
            set setResourceTaxRate(e) {
                FO = e
            }
        });
        const UO = "time";
        var BO, GO = $r(UO, "timeSettings"), VO = $r(UO, "ticks"), HO = $r(UO, "day"), KO = $r(UO, "lightingState"), WO = $r(UO, "simulationPaused"), zO = $r(UO, "simulationSpeed"), YO = Zr(UO, "simulationPausedBarrier");
        function $O(e) {
            tl(UO, "setSimulationPaused", e)
        }
        function qO(e) {
            tl(UO, "setSimulationSpeed", e)
        }
        function XO(e, t) {
            return e.year === t.year && e.month === t.month
        }
        function QO(e) {
            const t = e % 60;
            return {
                hour: (e - t) / 60 % 24,
                minute: t
            }
        }
        function ZO(e, t) {
            return JO(e, t * e.ticksPerDay)
        }
        function JO(e, t) {
            const n = e.epochTicks + t
              , s = Math.floor(n / e.ticksPerDay);
            return {
                year: e.epochYear + Math.floor(s / e.daysPerYear),
                month: nP(s, e.daysPerYear)
            }
        }
        function eP(e, t) {
            const n = e.epochTicks + t
              , s = Math.floor(n / e.ticksPerDay)
              , i = e.epochYear + Math.floor(s / e.daysPerYear)
              , a = nP(s, e.daysPerYear)
              , o = nP(n, e.ticksPerDay);
            return {
                year: i,
                month: a,
                hour: Math.trunc(o / e.ticksPerDay * 24),
                minute: Math.trunc(nP(o / e.ticksPerDay * 1440, 60))
            }
        }
        function tP(e, t) {
            const n = nP(e.epochTicks + t, e.ticksPerDay);
            return 60 * Math.trunc(n / e.ticksPerDay * 24) + Math.trunc(nP(n / e.ticksPerDay * 1440, 60))
        }
        function nP(e, t) {
            return (e % t + t) % t
        }
        !function(e) {
            e[e.Dawn = 0] = "Dawn",
            e[e.Sunrise = 1] = "Sunrise",
            e[e.Day = 2] = "Day",
            e[e.Sunset = 3] = "Sunset",
            e[e.Dusk = 4] = "Dusk",
            e[e.Night = 5] = "Night"
        }(BO || (BO = {})),
        X.add("game-ui/game/data-binding/time-bindings.ts", {
            get timeSettings() {
                return timeSettings
            },
            set timeSettings(e) {
                timeSettings = e
            },
            get ticks() {
                return ticks
            },
            set ticks(e) {
                ticks = e
            },
            get day() {
                return day
            },
            set day(e) {
                day = e
            },
            get lightingState() {
                return lightingState
            },
            set lightingState(e) {
                lightingState = e
            },
            get simulationPaused() {
                return simulationPaused
            },
            set simulationPaused(e) {
                simulationPaused = e
            },
            get simulationSpeed() {
                return simulationSpeed
            },
            set simulationSpeed(e) {
                simulationSpeed = e
            },
            get simulationPausedBarrier() {
                return simulationPausedBarrier
            },
            set simulationPausedBarrier(e) {
                simulationPausedBarrier = e
            },
            get setSimulationPaused() {
                return $O
            },
            set setSimulationPaused(e) {
                $O = e
            },
            get setSimulationSpeed() {
                return qO
            },
            set setSimulationSpeed(e) {
                qO = e
            },
            get LightingState() {
                return BO
            },
            set LightingState(e) {
                BO = e
            },
            get dateEquals() {
                return XO
            },
            set dateEquals(e) {
                XO = e
            },
            get calculateTimeFromMinutesSinceMidnight() {
                return QO
            },
            set calculateTimeFromMinutesSinceMidnight(e) {
                QO = e
            },
            get calculateDateFromDays() {
                return ZO
            },
            set calculateDateFromDays(e) {
                ZO = e
            },
            get calculateDateFromTicks() {
                return JO
            },
            set calculateDateFromTicks(e) {
                JO = e
            },
            get calculateDateTimeFromTicks() {
                return eP
            },
            set calculateDateTimeFromTicks(e) {
                eP = e
            },
            get calculateMinutesSinceMidnightFromTicks() {
                return tP
            },
            set calculateMinutesSinceMidnightFromTicks(e) {
                tP = e
            }
        });
        const sP = "tool";
        var iP = $r(sP, "activeTool")
          , aP = Zr(sP, "bulldozeConfirmationRequested")
          , oP = $r(sP, "availableSnapMask")
          , rP = $r(sP, "selectedSnapMask")
          , lP = $r(sP, "allSnapMask")
          , cP = $r(sP, "snapOptionNames")
          , uP = $r(sP, "elevationRange")
          , dP = $r(sP, "elevation")
          , mP = $r(sP, "elevationStep")
          , hP = $r(sP, "parallelModeSupported")
          , gP = $r(sP, "parallelMode")
          , pP = $r(sP, "parallelOffset")
          , fP = $r(sP, "undergroundModeSupported")
          , xP = $r(sP, "undergroundMode")
          , vP = $r(sP, "elevationDownDisabled")
          , _P = $r(sP, "elevationUpDisabled")
          , bP = $r(sP, "colorSupported")
          , TP = $r(sP, "color")
          , EP = $r(sP, "isEditor", !1)
          , IP = $r(sP, "replacingTrees", !1)
          , SP = $r(sP, "distance")
          , yP = $r(sP, "distanceScale");
        function jP(e) {
            tl(sP, "setColor", e)
        }
        function CP(e) {
            tl(sP, "selectTool", e)
        }
        function NP(e) {
            tl(sP, "selectToolMode", e)
        }
        function wP(e) {
            tl(sP, "confirmBulldoze", e)
        }
        function OP(e) {
            e < 0 ? LP() : e > 0 && PP()
        }
        function PP() {
            tl(sP, "elevationUp")
        }
        function LP() {
            tl(sP, "elevationDown")
        }
        function AP() {
            tl(sP, "elevationScroll")
        }
        function MP(e) {
            tl(sP, "setElevationStep", e)
        }
        function RP(e) {
            tl(sP, "setSelectedSnapMask", e)
        }
        function kP() {
            tl(sP, "toggleParallelMode")
        }
        function DP(e) {
            tl(sP, "setParallelOffset", e)
        }
        function FP(e) {
            tl(sP, "setUndergroundMode", e)
        }
        function UP(e) {
            tl(sP, "setDistance", e)
        }
        var BP = "Bulldoze Tool"
          , GP = "Default Tool"
          , VP = "Zone Tool"
          , HP = "Area Tool"
          , KP = "Net Tool"
          , WP = "Object Tool"
          , zP = "Upgrade Tool"
          , YP = "Terrain Tool"
          , $P = "Selection Tool"
          , qP = "Route Tool"
          , XP = $r(sP, "allowBrush")
          , QP = $r(sP, "selectedBrush")
          , ZP = $r(sP, "brushes")
          , JP = $r(sP, "brushSize")
          , eL = $r(sP, "brushStrength")
          , tL = $r(sP, "brushHeight")
          , nL = $r(sP, "brushHeightMin")
          , sL = $r(sP, "brushHeightMax")
          , iL = $r(sP, "brushAngle")
          , aL = $r(sP, "brushSizeMin")
          , oL = $r(sP, "brushSizeMax");
        function rL(e) {
            tl(sP, "selectBrush", e)
        }
        function lL(e) {
            tl(sP, "setBrushSize", e)
        }
        function cL(e) {
            tl(sP, "setBrushStrength", e)
        }
        function uL(e) {
            tl(sP, "setBrushAngle", e)
        }
        function dL(e) {
            tl(sP, "setBrushHeight", e)
        }
        X.add("game-ui/game/data-binding/tool-bindings.ts", {
            get activeTool() {
                return activeTool
            },
            set activeTool(e) {
                activeTool = e
            },
            get bulldozeConfirmationRequested() {
                return bulldozeConfirmationRequested
            },
            set bulldozeConfirmationRequested(e) {
                bulldozeConfirmationRequested = e
            },
            get availableSnapMask() {
                return availableSnapMask
            },
            set availableSnapMask(e) {
                availableSnapMask = e
            },
            get selectedSnapMask() {
                return selectedSnapMask
            },
            set selectedSnapMask(e) {
                selectedSnapMask = e
            },
            get allSnapMask() {
                return allSnapMask
            },
            set allSnapMask(e) {
                allSnapMask = e
            },
            get snapOptionNames() {
                return snapOptionNames
            },
            set snapOptionNames(e) {
                snapOptionNames = e
            },
            get elevationRange() {
                return elevationRange
            },
            set elevationRange(e) {
                elevationRange = e
            },
            get elevation() {
                return elevation
            },
            set elevation(e) {
                elevation = e
            },
            get elevationStep() {
                return elevationStep
            },
            set elevationStep(e) {
                elevationStep = e
            },
            get parallelModeSupported() {
                return parallelModeSupported
            },
            set parallelModeSupported(e) {
                parallelModeSupported = e
            },
            get parallelMode() {
                return parallelMode
            },
            set parallelMode(e) {
                parallelMode = e
            },
            get parallelOffset() {
                return parallelOffset
            },
            set parallelOffset(e) {
                parallelOffset = e
            },
            get undergroundModeSupported() {
                return undergroundModeSupported
            },
            set undergroundModeSupported(e) {
                undergroundModeSupported = e
            },
            get undergroundMode() {
                return undergroundMode
            },
            set undergroundMode(e) {
                undergroundMode = e
            },
            get elevationDownDisabled() {
                return elevationDownDisabled
            },
            set elevationDownDisabled(e) {
                elevationDownDisabled = e
            },
            get elevationUpDisabled() {
                return elevationUpDisabled
            },
            set elevationUpDisabled(e) {
                elevationUpDisabled = e
            },
            get colorSupported() {
                return colorSupported
            },
            set colorSupported(e) {
                colorSupported = e
            },
            get color() {
                return color
            },
            set color(e) {
                color = e
            },
            get isEditor() {
                return isEditor
            },
            set isEditor(e) {
                isEditor = e
            },
            get replacingTrees() {
                return replacingTrees
            },
            set replacingTrees(e) {
                replacingTrees = e
            },
            get distance() {
                return distance
            },
            set distance(e) {
                distance = e
            },
            get distanceScale() {
                return distanceScale
            },
            set distanceScale(e) {
                distanceScale = e
            },
            get setColor() {
                return jP
            },
            set setColor(e) {
                jP = e
            },
            get selectTool() {
                return CP
            },
            set selectTool(e) {
                CP = e
            },
            get selectToolMode() {
                return NP
            },
            set selectToolMode(e) {
                NP = e
            },
            get confirmBulldoze() {
                return wP
            },
            set confirmBulldoze(e) {
                wP = e
            },
            get changeElevation() {
                return OP
            },
            set changeElevation(e) {
                OP = e
            },
            get elevationUp() {
                return PP
            },
            set elevationUp(e) {
                PP = e
            },
            get elevationDown() {
                return LP
            },
            set elevationDown(e) {
                LP = e
            },
            get elevationScroll() {
                return AP
            },
            set elevationScroll(e) {
                AP = e
            },
            get setElevationStep() {
                return MP
            },
            set setElevationStep(e) {
                MP = e
            },
            get setSelectedSnapMask() {
                return RP
            },
            set setSelectedSnapMask(e) {
                RP = e
            },
            get toggleParallelMode() {
                return kP
            },
            set toggleParallelMode(e) {
                kP = e
            },
            get setParallelOffset() {
                return DP
            },
            set setParallelOffset(e) {
                DP = e
            },
            get setUndergroundMode() {
                return FP
            },
            set setUndergroundMode(e) {
                FP = e
            },
            get setDistance() {
                return UP
            },
            set setDistance(e) {
                UP = e
            },
            get BULLDOZE_TOOL() {
                return BP
            },
            set BULLDOZE_TOOL(e) {
                BP = e
            },
            get DEFAULT_TOOL() {
                return GP
            },
            set DEFAULT_TOOL(e) {
                GP = e
            },
            get ZONE_TOOL() {
                return VP
            },
            set ZONE_TOOL(e) {
                VP = e
            },
            get AREA_TOOL() {
                return HP
            },
            set AREA_TOOL(e) {
                HP = e
            },
            get NET_TOOL() {
                return KP
            },
            set NET_TOOL(e) {
                KP = e
            },
            get OBJECT_TOOL() {
                return WP
            },
            set OBJECT_TOOL(e) {
                WP = e
            },
            get UPGRADE_TOOL() {
                return zP
            },
            set UPGRADE_TOOL(e) {
                zP = e
            },
            get TERRAIN_TOOL() {
                return YP
            },
            set TERRAIN_TOOL(e) {
                YP = e
            },
            get SELECTION_TOOL() {
                return $P
            },
            set SELECTION_TOOL(e) {
                $P = e
            },
            get ROUTE_TOOL() {
                return qP
            },
            set ROUTE_TOOL(e) {
                qP = e
            },
            get allowBrush() {
                return allowBrush
            },
            set allowBrush(e) {
                allowBrush = e
            },
            get selectedBrush() {
                return selectedBrush
            },
            set selectedBrush(e) {
                selectedBrush = e
            },
            get brushes() {
                return brushes
            },
            set brushes(e) {
                brushes = e
            },
            get brushSize() {
                return brushSize
            },
            set brushSize(e) {
                brushSize = e
            },
            get brushStrength() {
                return brushStrength
            },
            set brushStrength(e) {
                brushStrength = e
            },
            get brushHeight() {
                return brushHeight
            },
            set brushHeight(e) {
                brushHeight = e
            },
            get brushHeightMin() {
                return brushHeightMin
            },
            set brushHeightMin(e) {
                brushHeightMin = e
            },
            get brushHeightMax() {
                return brushHeightMax
            },
            set brushHeightMax(e) {
                brushHeightMax = e
            },
            get brushAngle() {
                return brushAngle
            },
            set brushAngle(e) {
                brushAngle = e
            },
            get brushSizeMin() {
                return brushSizeMin
            },
            set brushSizeMin(e) {
                brushSizeMin = e
            },
            get brushSizeMax() {
                return brushSizeMax
            },
            set brushSizeMax(e) {
                brushSizeMax = e
            },
            get selectBrush() {
                return rL
            },
            set selectBrush(e) {
                rL = e
            },
            get setBrushSize() {
                return lL
            },
            set setBrushSize(e) {
                lL = e
            },
            get setBrushStrength() {
                return cL
            },
            set setBrushStrength(e) {
                cL = e
            },
            get setBrushAngle() {
                return uL
            },
            set setBrushAngle(e) {
                uL = e
            },
            get setBrushHeight() {
                return dL
            },
            set setBrushHeight(e) {
                dL = e
            }
        });
        const mL = "toolbar";
        var hL, gL;
        !function(e) {
            e[e.asset = 0] = "asset",
            e[e.menu = 1] = "menu"
        }(hL || (hL = {})),
        function(e) {
            e[e.Disabled = 0] = "Disabled",
            e[e.Child = 1] = "Child",
            e[e.Teen = 2] = "Teen",
            e[e.Adult = 4] = "Adult",
            e[e.Elderly = 8] = "Elderly"
        }(gL || (gL = {}));
        var pL = $r(mL, "toolbarGroups")
          , fL = Xr(mL, "assetCategories")
          , xL = Xr(mL, "assets")
          , vL = $r(mL, "themes")
          , _L = $r(mL, "selectedThemes")
          , bL = $r(mL, "themes")
          , TL = $r(mL, "assetPacks")
          , EL = $r(mL, "selectedAssetPacks")
          , IL = $r(mL, "selectedAssetMenu")
          , SL = $r(mL, "selectedAssetCategory")
          , yL = $r(mL, "selectedAsset")
          , jL = $r(mL, "ageMask")
          , CL = el(mL, "setAgeMask")
          , NL = el(mL, "setSelectedThemes")
          , wL = el(mL, "setSelectedAssetPacks")
          , OL = el(mL, "selectAssetMenu")
          , PL = el(mL, "selectAssetCategory")
          , LL = el(mL, "selectAsset")
          , AL = Jr(mL, "clearAssetSelection")
          , ML = el(mL, "toggleToolOptions")
          , RL = (e,t)=>e.priority - t.priority;
        X.add("game-ui/game/data-binding/toolbar-bindings.ts", {
            get ToolbarItemType() {
                return hL
            },
            set ToolbarItemType(e) {
                hL = e
            },
            get AgeMask() {
                return gL
            },
            set AgeMask(e) {
                gL = e
            },
            get toolbarGroups() {
                return toolbarGroups
            },
            set toolbarGroups(e) {
                toolbarGroups = e
            },
            get assetCategories() {
                return assetCategories
            },
            set assetCategories(e) {
                assetCategories = e
            },
            get assets() {
                return assets
            },
            set assets(e) {
                assets = e
            },
            get themes() {
                return themes
            },
            set themes(e) {
                themes = e
            },
            get selectedThemes() {
                return selectedThemes
            },
            set selectedThemes(e) {
                selectedThemes = e
            },
            get vegetationAges() {
                return vegetationAges
            },
            set vegetationAges(e) {
                vegetationAges = e
            },
            get assetPacks() {
                return assetPacks
            },
            set assetPacks(e) {
                assetPacks = e
            },
            get selectedAssetPacks() {
                return selectedAssetPacks
            },
            set selectedAssetPacks(e) {
                selectedAssetPacks = e
            },
            get selectedAssetMenu() {
                return selectedAssetMenu
            },
            set selectedAssetMenu(e) {
                selectedAssetMenu = e
            },
            get selectedAssetCategory() {
                return selectedAssetCategory
            },
            set selectedAssetCategory(e) {
                selectedAssetCategory = e
            },
            get selectedAsset() {
                return selectedAsset
            },
            set selectedAsset(e) {
                selectedAsset = e
            },
            get ageMask() {
                return ageMask
            },
            set ageMask(e) {
                ageMask = e
            },
            get setAgeMask() {
                return CL
            },
            set setAgeMask(e) {
                CL = e
            },
            get setSelectedThemes() {
                return NL
            },
            set setSelectedThemes(e) {
                NL = e
            },
            get setSelectedAssetPacks() {
                return wL
            },
            set setSelectedAssetPacks(e) {
                wL = e
            },
            get selectAssetMenu() {
                return OL
            },
            set selectAssetMenu(e) {
                OL = e
            },
            get selectAssetCategory() {
                return PL
            },
            set selectAssetCategory(e) {
                PL = e
            },
            get selectAsset() {
                return LL
            },
            set selectAsset(e) {
                LL = e
            },
            get clearAssetSelection() {
                return AL
            },
            set clearAssetSelection(e) {
                AL = e
            },
            get toggleToolOptions() {
                return ML
            },
            set toggleToolOptions(e) {
                ML = e
            },
            get CompareAssetsByPriority() {
                return RL
            },
            set CompareAssetsByPriority(e) {
                RL = e
            }
        });
        var kL = $r("toolbarBottom", "population")
          , DL = $r("toolbarBottom", "populationDelta")
          , FL = $r("toolbarBottom", "money")
          , UL = $r("toolbarBottom", "moneyDelta")
          , BL = $r("toolbarBottom", "cityName")
          , GL = $r("toolbarBottom", "unlimitedMoney")
          , VL = $r("toolbarBottom", "populationTrendThresholds")
          , HL = $r("toolbarBottom", "moneyTrendThresholds");
        function KL(e) {
            tl("toolbarBottom", "setCityName", e)
        }
        X.add("game-ui/game/data-binding/toolbar-bottom-bindings.ts", {
            get population() {
                return population
            },
            set population(e) {
                population = e
            },
            get populationDelta() {
                return populationDelta
            },
            set populationDelta(e) {
                populationDelta = e
            },
            get money() {
                return money
            },
            set money(e) {
                money = e
            },
            get moneyDelta() {
                return moneyDelta
            },
            set moneyDelta(e) {
                moneyDelta = e
            },
            get cityName() {
                return cityName
            },
            set cityName(e) {
                cityName = e
            },
            get unlimitedMoney() {
                return unlimitedMoney
            },
            set unlimitedMoney(e) {
                unlimitedMoney = e
            },
            get populationTrendThresholds() {
                return populationTrendThresholds
            },
            set populationTrendThresholds(e) {
                populationTrendThresholds = e
            },
            get moneyTrendThresholds() {
                return moneyTrendThresholds
            },
            set moneyTrendThresholds(e) {
                moneyTrendThresholds = e
            },
            get setCityName() {
                return KL
            },
            set setCityName(e) {
                KL = e
            }
        });
        const WL = "transportationOverview";
        var zL = $r(WL, "passengerTypes")
          , YL = $r(WL, "cargoTypes")
          , $L = $r(WL, "lines")
          , qL = $r(WL, "selectedPassengerType")
          , XL = $r(WL, "selectedCargoType")
          , QL = el(WL, "select")
          , ZL = el(WL, "delete")
          , JL = el(WL, "rename")
          , eA = el(WL, "setColor")
          , tA = el(WL, "setActive")
          , nA = el(WL, "showLine")
          , sA = el(WL, "hideLine")
          , iA = el(WL, "setSchedule")
          , aA = Jr(WL, "resetVisibility")
          , oA = el(WL, "toggleHighlight")
          , rA = el(WL, "setSelectedPassengerType")
          , lA = el(WL, "setSelectedCargoType");
        X.add("game-ui/game/data-binding/transport-bindings.ts", {
            get passengerTypes() {
                return passengerTypes
            },
            set passengerTypes(e) {
                passengerTypes = e
            },
            get cargoTypes() {
                return cargoTypes
            },
            set cargoTypes(e) {
                cargoTypes = e
            },
            get transportLines() {
                return transportLines
            },
            set transportLines(e) {
                transportLines = e
            },
            get selectedPassengerType() {
                return selectedPassengerType
            },
            set selectedPassengerType(e) {
                selectedPassengerType = e
            },
            get selectedCargoType() {
                return selectedCargoType
            },
            set selectedCargoType(e) {
                selectedCargoType = e
            },
            get selectLine() {
                return QL
            },
            set selectLine(e) {
                QL = e
            },
            get deleteLine() {
                return ZL
            },
            set deleteLine(e) {
                ZL = e
            },
            get renameLine() {
                return JL
            },
            set renameLine(e) {
                JL = e
            },
            get setLineColor() {
                return eA
            },
            set setLineColor(e) {
                eA = e
            },
            get setLineActive() {
                return tA
            },
            set setLineActive(e) {
                tA = e
            },
            get showLine() {
                return nA
            },
            set showLine(e) {
                nA = e
            },
            get hideLine() {
                return sA
            },
            set hideLine(e) {
                sA = e
            },
            get setLineSchedule() {
                return iA
            },
            set setLineSchedule(e) {
                iA = e
            },
            get resetVisibility() {
                return aA
            },
            set resetVisibility(e) {
                aA = e
            },
            get toggleHighlight() {
                return oA
            },
            set toggleHighlight(e) {
                oA = e
            },
            get setSelectedPassengerType() {
                return rA
            },
            set setSelectedPassengerType(e) {
                rA = e
            },
            get setSelectedCargoType() {
                return lA
            },
            set setSelectedCargoType(e) {
                lA = e
            }
        });
        const cA = "upgradeMenu";
        var uA = Xr(cA, "upgrades")
          , dA = Xr(cA, "upgradeDetails")
          , mA = $r(cA, "selectedUpgrade")
          , hA = $r(cA, "upgrading");
        function gA(e, t) {
            tl(cA, "selectUpgrade", e, t)
        }
        function pA() {
            tl(cA, "clearUpgradeSelection")
        }
        X.add("game-ui/game/data-binding/upgrade-bindings.ts", {
            get upgrades() {
                return upgrades
            },
            set upgrades(e) {
                upgrades = e
            },
            get upgradeDetails() {
                return upgradeDetails
            },
            set upgradeDetails(e) {
                upgradeDetails = e
            },
            get selectedUpgrade() {
                return selectedUpgrade
            },
            set selectedUpgrade(e) {
                selectedUpgrade = e
            },
            get upgrading() {
                return upgrading
            },
            set upgrading(e) {
                upgrading = e
            },
            get selectUpgrade() {
                return gA
            },
            set selectUpgrade(e) {
                gA = e
            },
            get clearUpgradeSelection() {
                return pA
            },
            set clearUpgradeSelection(e) {
                pA = e
            }
        });
        const fA = X.find
          , xA = X.get;
        Object.defineProperties(window, {
            React: {
                value: Y
            },
            ReactDOM: {
                value: Z
            },
            ReactDOMClient: {
                value: Q
            },
            "cs2/api": {
                value: t
            },
            "cs2/bindings": {
                value: V
            },
            "cs2/l10n": {
                value: s
            },
            "cs2/ui": {
                value: l
            },
            "cs2/utils": {
                value: H
            },
            "cs2/input": {
                value: K
            },
            "cs2/modding": {
                value: W
            },
            "cohtml/cohtml": {
                value: Rr()
            },
            "chart.js": {
                value: e
            }
        });
        var vA = (e,t)=>{
            const n = new XMLHttpRequest;
            n.open("GET", e, !0),
            n.onreadystatechange = ()=>{
                if (200 === n.status) {
                    n.onreadystatechange = null,
                    n.abort();
                    const s = document.createElement("link");
                    s.rel = "stylesheet",
                    s.id = e.split("/").pop()?.replace(".css", "") || "",
                    s.href = e,
                    s.onload = ()=>{
                        t(e),
                        s.onload = null
                    }
                    ,
                    document.head.appendChild(s)
                }
            }
            ,
            n.send()
        }
        ;
        X.add("game-ui/modding/utils/load-css.tsx", {
            get loadCss() {
                return vA
            },
            set loadCss(e) {
                vA = e
            }
        });
        const _A = []
          , bA = new Set
          , TA = e=>{
            X.reset(),
            bA.clear();
            for (const t of e)
                t(X)
        }
        ;
        function EA(e) {
            for (let e = document.body.classList.length - 1; e >= 0; e--) {
                const t = document.body.classList[e];
                t.startsWith("style--") && document.body.classList.remove(t)
            }
            document.body.classList.add("style--" + e)
        }
        function IA(e) {
            const t = 1 - .75 * SA(e, 1);
            document.documentElement.style.setProperty("--panelOpacityNormal", t.toString().replace(",", "."));
            const n = SA(t, .66);
            document.documentElement.style.setProperty("--panelOpacityDark", n.toString().replace(",", ".")),
            0 === e ? document.body.classList.add("no-panel-blur") : document.body.classList.remove("no-panel-blur")
        }
        function SA(e, t) {
            return -t * e * e + (1 + t) * e
        }
        function yA(e) {
            document.documentElement.style.setProperty("--fontScale", e.toString().replace(",", ".")),
            document.documentElement.style.setProperty("--fontScaleChange", (e - 1).toString().replace(",", "."))
        }
        function jA(e) {
            document.documentElement.style.fontSize = e ? "" : "1px"
        }
        X.add("game-ui/common/app/interface.ts", {
            get applyInterfaceStyle() {
                return EA
            },
            set applyInterfaceStyle(e) {
                EA = e
            },
            get applyInterfaceTransparency() {
                return IA
            },
            set applyInterfaceTransparency(e) {
                IA = e
            },
            get applyTextScale() {
                return yA
            },
            set applyTextScale(e) {
                yA = e
            },
            get applyInterfaceScalingEnabled() {
                return jA
            },
            set applyInterfaceScalingEnabled(e) {
                jA = e
            }
        });
        let CA = {
            slider: "slider_pUS",
            "track-bounds": "track-bounds_H8_",
            trackBounds: "track-bounds_H8_",
            "range-bounds": "range-bounds_lNt",
            rangeBounds: "range-bounds_lNt",
            range: "range_iUN",
            "thumb-container": "thumb-container_aso",
            thumbContainer: "thumb-container_aso",
            hint: "hint_oU0",
            wrapper: "wrapper_TUT"
        };
        X.add("game-ui/common/input/slider/slider.module.scss", {
            get classes() {
                return CA
            },
            set classes(e) {
                Object.assign(CA, e)
            }
        });
        const NA = CA;
        let wA = {
            slider: "slider_g0V slider_pUS",
            compact: "compact_pTl",
            thumb: "thumb_WZt",
            range: "range_K3G range_iUN"
        };
        X.add("game-ui/common/input/slider/themes/default.module.scss", {
            get classes() {
                return wA
            },
            set classes(e) {
                Object.assign(wA, e)
            }
        });
        const OA = wA;
        var PA = {
            dragStart: lp.grabSlider,
            drag: lp.dragSlider
        }
          , LA = {
            dragStart: lp.grabSlider,
            drag: lp.dragSlider,
            scaleDragVolume: !0
        }
          , AA = Y.forwardRef((function({focusKey: e, debugName: t="Slider", value: n, start: s, end: i, gamepadStep: a, disabled: o, vertical: r=!1, sounds: l=PA, thumb: c, theme: u=OA, className: d, style: m, children: h, noFill: g, hideHint: p=!1, showHint: f=!1, valueTransformer: x=MA, onChange: v, onDragStart: _, onDragEnd: b, onMouseOver: T, onMouseLeave: E}, I) {
            const S = wh((0,
            Y.useContext)(Ju))
              , y = (0,
            Y.useMemo)((()=>({
                ...NA,
                ...u
            })), [u])
              , j = c ?? (y.thumb ? (0,
            z.jsx)("div", {
                className: y.thumb
            }) : void 0)
              , C = (0,
            Y.useRef)(null)
              , N = gd(I, C)
              , w = gp(jg(e ?? (o ? Sg : yg), t), C)
              , O = wh(w)
              , P = Dm()
              , L = i - s
              , A = 0 !== L ? (n - s) / L : 0
              , M = 0 !== L ? null != a && a > 0 ? a / L : .05 : 0
              , R = (0,
            Y.useMemo)((()=>({
                "Change Slider Value": null != v ? e=>{
                    if (0 !== e) {
                        s > i && (e *= -1);
                        const t = x(s, i, A + e * M);
                        t !== n && C.current && (v(t),
                        cp(l?.drag, l?.scaleDragVolume && 0 !== L ? (n - s) / L : 1))
                    }
                }
                : null
            })), [v, x, s, i, A, M, n, l?.drag, l?.scaleDragVolume, L])
              , k = (0,
            Y.useRef)(null)
              , D = (0,
            Y.useRef)(0)
              , F = (0,
            Y.useCallback)((({clientX: e, clientY: t})=>{
                if (o || !k.current)
                    return !1;
                if (document.activeElement instanceof HTMLElement && document.activeElement.blur(),
                cp(l?.dragStart),
                _ && _(),
                v) {
                    const a = x(s, i, DA(k.current, e, t, D.current, r));
                    a !== n && v(a)
                }
                return !0
            }
            ), [o, i, v, _, s, l?.dragStart, n, x, r])
              , U = (0,
            Y.useCallback)((({clientX: e, clientY: t})=>{
                if (o || !v || !k.current)
                    return;
                const a = x(s, i, DA(k.current, e, t, D.current, r));
                a !== n && (v(a),
                cp(l?.drag, l?.scaleDragVolume && 0 !== L ? (n - s) / L : 1))
            }
            ), [o, v, x, s, i, r, n, l?.drag, l?.scaleDragVolume, L])
              , B = (0,
            Y.useCallback)((()=>{
                D.current = 0,
                b && b()
            }
            ), [b])
              , [G,V] = rb(F, U, B)
              , H = (0,
            Y.useCallback)((e=>{
                if (k.current)
                    if (r) {
                        const {top: t, height: n} = k.current.getBoundingClientRect()
                          , s = t + n * (1 - A);
                        D.current = e.clientY - s
                    } else {
                        const {left: t, width: n} = k.current.getBoundingClientRect()
                          , s = t + n * A;
                        D.current = e.clientX - s
                    }
            }
            ), [A, r])
              , K = `${100 * Od(A, 0, 1) || 0}%`;
            return (0,
            z.jsxs)("div", {
                className: Zu()(NA.wrapper, d),
                children: [(0,
                z.jsx)(UT, {
                    action: O ? "Change Slider Value" : S && f && !p ? "Select" : void 0,
                    active: !p,
                    className: NA.hint
                }), (0,
                z.jsx)(Mg, {
                    actions: R,
                    disabled: o,
                    children: (0,
                    z.jsx)(Lh, {
                        controller: w,
                        children: (0,
                        z.jsxs)("div", {
                            ref: N,
                            className: Zu()(y.slider, r ? "vertical" : "horizontal", o && "disabled", O && P && "focused", G && "dragging"),
                            style: m,
                            onMouseDown: o ? void 0 : V,
                            children: [h, (0,
                            z.jsx)("div", {
                                ref: k,
                                className: y.trackBounds,
                                onMouseOver: T,
                                onMouseLeave: E,
                                children: (0,
                                z.jsxs)("div", {
                                    className: y.rangeBounds,
                                    style: {
                                        [r ? "height" : "width"]: K
                                    },
                                    children: [!g && (0,
                                    z.jsx)("div", {
                                        className: y.range
                                    }), j && (0,
                                    z.jsx)("div", {
                                        className: y.thumbContainer,
                                        onClick: o ? void 0 : Db,
                                        onMouseDown: o ? void 0 : H,
                                        onMouseOver: T,
                                        onMouseLeave: E,
                                        children: j
                                    })]
                                })
                            })]
                        })
                    })
                }), (0,
                z.jsx)(UT, {
                    action: "Back",
                    active: !p && O && f,
                    className: NA.hint
                })]
            })
        }
        ));
        function MA(e, t, n) {
            return Od(e + n * (t - e), Math.min(e, t), Math.max(e, t))
        }
        function RA(e, t, n) {
            return Od(Math.round(e + n * (t - e)), Math.min(e, t), Math.max(e, t))
        }
        function kA(e) {
            return (0,
            Y.useCallback)(((t,n,s)=>Od(t + Math.round(s * (n - t) / e) * e, Math.min(t, n), Math.max(t, n))), [e])
        }
        function DA(e, t, n, s, i) {
            const {top: a, left: o, width: r, height: l} = e.getBoundingClientRect();
            return i ? (l - (n - a - s)) / l : (t - o - s) / r
        }
        X.add("game-ui/common/input/slider/slider.tsx", {
            get defaultSliderSounds() {
                return PA
            },
            set defaultSliderSounds(e) {
                PA = e
            },
            get volumeSliderSounds() {
                return LA
            },
            set volumeSliderSounds(e) {
                LA = e
            },
            get Slider() {
                return AA
            },
            set Slider(e) {
                AA = e
            },
            get intTransformer() {
                return RA
            },
            set intTransformer(e) {
                RA = e
            },
            get useStepTransformer() {
                return kA
            },
            set useStepTransformer(e) {
                kA = e
            }
        });
        let FA = {
            "slider-wrapper": "slider-wrapper_uhm",
            sliderWrapper: "slider-wrapper_uhm"
        };
        X.add("game-ui/debug/components/text-scale-slider/text-scale-slider.module.scss", {
            get classes() {
                return FA
            },
            set classes(e) {
                Object.assign(FA, e)
            }
        });
        const UA = FA;
        var BA = ({scale: e})=>{
            const [t,n] = (0,
            Y.useState)(e)
              , s = kA(.1);
            return (0,
            Y.useEffect)((()=>yA(Math.round(10 * t) / 10)), [t]),
            (0,
            Y.useEffect)((()=>n(e)), [e]),
            (0,
            z.jsxs)("div", {
                className: UA.sliderWrapper,
                children: [(0,
                z.jsx)(AA, {
                    focusKey: Sg,
                    value: t,
                    start: 1,
                    end: 2,
                    valueTransformer: s,
                    onChange: n
                }), (0,
                z.jsxs)("span", {
                    children: [Math.round(100 * t), "%"]
                })]
            })
        }
        ;
        function GA(e=!0) {
            (0,
            Y.useEffect)((()=>{
                if (e) {
                    const e = e=>{
                        82 !== e.keyCode && 116 !== e.keyCode || !e.metaKey && !e.ctrlKey || window.location.reload()
                    }
                    ;
                    return window.addEventListener("keydown", e),
                    ()=>window.removeEventListener("keydown", e)
                }
            }
            ), [e])
        }
        X.add("game-ui/debug/components/text-scale-slider/text-scale-slider.tsx", {
            get TextScaleSlider() {
                return BA
            },
            set TextScaleSlider(e) {
                BA = e
            }
        }),
        X.add("game-ui/debug/debug-shortcuts.ts", {
            get useDebugShortcuts() {
                return GA
            },
            set useDebugShortcuts(e) {
                GA = e
            }
        });
        const VA = "menu";
        var HA, KA, WA;
        function zA(e) {
            return void 0 !== e.mapName
        }
        !function(e) {
            e[e.Menu = 0] = "Menu",
            e[e.NewGame = 1] = "NewGame",
            e[e.LoadGame = 2] = "LoadGame",
            e[e.Options = 3] = "Options",
            e[e.Credits = 4] = "Credits"
        }(HA || (HA = {})),
        function(e) {
            e[e.None = -1] = "None",
            e[e.Default = 0] = "Default",
            e[e.Custom = 1] = "Custom"
        }(KA || (KA = {})),
        function(e) {
            e.EasyMode = "EasyMode",
            e.NormalMode = "NormalMode"
        }(WA || (WA = {}));
        var YA, $A = $r(VA, "activeScreen"), qA = $r(VA, "gameVersion"), XA = $r(VA, "hasCompletedTutorials"), QA = $r(VA, "showTutorials"), ZA = $r(VA, "modsEnabled"), JA = $r(VA, "pdxModsUIEnabled"), eM = $r(VA, "hideEditorButton"), tM = $r(VA, "hideModsUIButton"), nM = $r(VA, "displayModdingBetaBanners"), sM = $r(VA, "savePreview"), iM = $r(VA, "mapName"), aM = $r(VA, "lastSaveName"), oM = $r(VA, "defaultGameOptions"), rM = $r(VA, "gameOptions"), lM = $r(VA, "canExitGame"), cM = $r(VA, "saveGameSlots"), uM = $r(VA, "isModsUIActive"), dM = $r(VA, "gameModes"), mM = $r(VA, "gameMode"), hM = $r(VA, "themes"), gM = $r(VA, "maps"), pM = $r(VA, "availableMapFilters"), fM = $r(VA, "selectedMapFilter"), xM = $r(VA, "saves"), vM = $r(VA, "creditFiles"), _M = $r(VA, "saveabilityStatus");
        function bM(e) {
            tl(VA, "setActiveScreen", e)
        }
        function TM() {
            tl(VA, "continueGame")
        }
        function EM(e) {
            tl(VA, "newGame", e)
        }
        function IM(e, t) {
            tl(VA, "loadGame", e, t)
        }
        function SM(e) {
            tl(VA, "saveGame", e)
        }
        function yM(e) {
            tl(VA, "deleteSave", e)
        }
        function jM(e) {
            tl(VA, "shareSave", e)
        }
        function CM(e) {
            tl(VA, "shareMap", e)
        }
        function NM() {
            tl(VA, "startEditor")
        }
        function wM() {
            tl(VA, "exitToMainMenu")
        }
        function OM() {
            tl(VA, "showPdxModsUI")
        }
        function PM(e) {
            tl(VA, "onSaveGameScreenVisibilityChanged", e)
        }
        function LM(e) {
            tl(VA, "applyTutorialSettings", e === YA.Continue || e === YA.Reset, e === YA.Reset)
        }
        function AM() {
            const e = sl(QA);
            return (0,
            Y.useState)(e ? YA.Continue : YA.Disable)
        }
        !function(e) {
            e[e.Continue = 0] = "Continue",
            e[e.Reset = 1] = "Reset",
            e[e.Disable = 2] = "Disable"
        }(YA || (YA = {}));
        var MM = Jr(VA, "quicksave")
          , RM = el(VA, "quickload")
          , kM = $r(VA, "availableCloudTargets")
          , DM = $r(VA, "selectedCloudTarget")
          , FM = $r(VA, "dismissLoadGameConfirmation")
          , UM = el(VA, "selectCloudTarget")
          , BM = el(VA, "selectMapFilter");
        X.add("game-ui/menu/data-binding/menu-bindings.ts", {
            get MenuScreen() {
                return HA
            },
            set MenuScreen(e) {
                HA = e
            },
            get isSave() {
                return zA
            },
            set isSave(e) {
                zA = e
            },
            get MapFilter() {
                return KA
            },
            set MapFilter(e) {
                KA = e
            },
            get GameMode() {
                return WA
            },
            set GameMode(e) {
                WA = e
            },
            get activeMenuScreen() {
                return activeMenuScreen
            },
            set activeMenuScreen(e) {
                activeMenuScreen = e
            },
            get gameVersion() {
                return gameVersion
            },
            set gameVersion(e) {
                gameVersion = e
            },
            get hasCompletedTutorials() {
                return hasCompletedTutorials
            },
            set hasCompletedTutorials(e) {
                hasCompletedTutorials = e
            },
            get tutorialsEnabled() {
                return tutorialsEnabled
            },
            set tutorialsEnabled(e) {
                tutorialsEnabled = e
            },
            get modsEnabled() {
                return modsEnabled
            },
            set modsEnabled(e) {
                modsEnabled = e
            },
            get pdxModsUIEnabled() {
                return pdxModsUIEnabled
            },
            set pdxModsUIEnabled(e) {
                pdxModsUIEnabled = e
            },
            get hideEditor() {
                return hideEditor
            },
            set hideEditor(e) {
                hideEditor = e
            },
            get hideModsUI() {
                return hideModsUI
            },
            set hideModsUI(e) {
                hideModsUI = e
            },
            get displayModdingBetaBanners() {
                return displayModdingBetaBanners
            },
            set displayModdingBetaBanners(e) {
                displayModdingBetaBanners = e
            },
            get savePreview() {
                return savePreview
            },
            set savePreview(e) {
                savePreview = e
            },
            get mapName() {
                return mapName
            },
            set mapName(e) {
                mapName = e
            },
            get lastSaveName() {
                return lastSaveName
            },
            set lastSaveName(e) {
                lastSaveName = e
            },
            get defaultGameOptions() {
                return defaultGameOptions
            },
            set defaultGameOptions(e) {
                defaultGameOptions = e
            },
            get gameOptions() {
                return gameOptions
            },
            set gameOptions(e) {
                gameOptions = e
            },
            get canExitGame() {
                return canExitGame
            },
            set canExitGame(e) {
                canExitGame = e
            },
            get saveGameSlots() {
                return saveGameSlots
            },
            set saveGameSlots(e) {
                saveGameSlots = e
            },
            get modsUIActive() {
                return modsUIActive
            },
            set modsUIActive(e) {
                modsUIActive = e
            },
            get gameModes() {
                return gameModes
            },
            set gameModes(e) {
                gameModes = e
            },
            get gameMode() {
                return gameMode
            },
            set gameMode(e) {
                gameMode = e
            },
            get themes() {
                return themes
            },
            set themes(e) {
                themes = e
            },
            get maps() {
                return maps
            },
            set maps(e) {
                maps = e
            },
            get availableMapFilters() {
                return availableMapFilters
            },
            set availableMapFilters(e) {
                availableMapFilters = e
            },
            get selectedMapFilter() {
                return selectedMapFilter
            },
            set selectedMapFilter(e) {
                selectedMapFilter = e
            },
            get saves() {
                return saves
            },
            set saves(e) {
                saves = e
            },
            get creditFiles() {
                return creditFiles
            },
            set creditFiles(e) {
                creditFiles = e
            },
            get saveability() {
                return saveability
            },
            set saveability(e) {
                saveability = e
            },
            get setActiveMenuScreen() {
                return bM
            },
            set setActiveMenuScreen(e) {
                bM = e
            },
            get continueGame() {
                return TM
            },
            set continueGame(e) {
                TM = e
            },
            get newGame() {
                return EM
            },
            set newGame(e) {
                EM = e
            },
            get loadGame() {
                return IM
            },
            set loadGame(e) {
                IM = e
            },
            get saveGame() {
                return SM
            },
            set saveGame(e) {
                SM = e
            },
            get deleteSave() {
                return yM
            },
            set deleteSave(e) {
                yM = e
            },
            get shareSave() {
                return jM
            },
            set shareSave(e) {
                jM = e
            },
            get shareMap() {
                return CM
            },
            set shareMap(e) {
                CM = e
            },
            get startEditor() {
                return NM
            },
            set startEditor(e) {
                NM = e
            },
            get exitToMainMenu() {
                return wM
            },
            set exitToMainMenu(e) {
                wM = e
            },
            get showPdxModsUI() {
                return OM
            },
            set showPdxModsUI(e) {
                OM = e
            },
            get onSaveGameScreenVisibilityChanged() {
                return PM
            },
            set onSaveGameScreenVisibilityChanged(e) {
                PM = e
            },
            get TutorialState() {
                return YA
            },
            set TutorialState(e) {
                YA = e
            },
            get applyTutorialSettings() {
                return LM
            },
            set applyTutorialSettings(e) {
                LM = e
            },
            get useTutorialSettingsState() {
                return AM
            },
            set useTutorialSettingsState(e) {
                AM = e
            },
            get quicksave() {
                return MM
            },
            set quicksave(e) {
                MM = e
            },
            get quickload() {
                return RM
            },
            set quickload(e) {
                RM = e
            },
            get availableCloudTargets() {
                return availableCloudTargets
            },
            set availableCloudTargets(e) {
                availableCloudTargets = e
            },
            get selectedCloudTarget() {
                return selectedCloudTarget
            },
            set selectedCloudTarget(e) {
                selectedCloudTarget = e
            },
            get dismissLoadGameConfirmation() {
                return dismissLoadGameConfirmation
            },
            set dismissLoadGameConfirmation(e) {
                dismissLoadGameConfirmation = e
            },
            get selectCloudTarget() {
                return UM
            },
            set selectCloudTarget(e) {
                UM = e
            },
            get selectMapFilter() {
                return BM
            },
            set selectMapFilter(e) {
                BM = e
            }
        });
        var GM = ({children: e})=>(0,
        z.jsx)(VM, {
            binding: nM,
            children: e
        })
          , VM = ({children: e, binding: t})=>sl(t) ? (0,
        z.jsx)(z.Fragment, {
            children: e
        }) : null;
        X.add("game-ui/common/beta-element/beta-element.tsx", {
            get ModdingBetaElement() {
                return GM
            },
            set ModdingBetaElement(e) {
                GM = e
            },
            get BetaElement() {
                return VM
            },
            set BetaElement(e) {
                VM = e
            }
        });
        let HM = {
            "beta-banner": "beta-banner_qiZ",
            betaBanner: "beta-banner_qiZ"
        };
        X.add("game-ui/common/beta-element/beta-banner/beta-banner.module.scss", {
            get classes() {
                return HM
            },
            set classes(e) {
                Object.assign(HM, e)
            }
        });
        const KM = HM;
        var WM = ()=>(0,
        z.jsx)(GM, {
            children: (0,
            z.jsx)(zM, {
                children: (0,
                z.jsx)(_c.Editor.BETA_BANNER, {})
            })
        })
          , zM = ({children: e})=>(0,
        z.jsx)("div", {
            className: KM.betaBanner,
            children: e
        });
        function YM(e, t) {
            return (0,
            Y.useCallback)(((...n)=>e(t, ...n)), [e, t])
        }
        X.add("game-ui/common/beta-element/beta-banner/beta-banner.tsx", {
            get ModdingBetaBanner() {
                return WM
            },
            set ModdingBetaBanner(e) {
                WM = e
            },
            get BetaBanner() {
                return zM
            },
            set BetaBanner(e) {
                zM = e
            }
        }),
        X.add("game-ui/common/utils/element-callback.ts", {
            get useElementCallback() {
                return YM
            },
            set useElementCallback(e) {
                YM = e
            }
        });
        var $M, qM, XM, QM = "editorPanel";
        !function(e) {
            e.EditorSection = "Game.UI.Editor.EditorSection",
            e.Compass = "Game.UI.Editor.Compass",
            e.TimeOfDayWeightsChart = "Game.UI.Editor.TimeOfDayWeightsChart",
            e.ItemPicker = "Game.UI.Editor.ItemPicker",
            e.ItemPickerFooter = "Game.UI.Editor.ItemPickerFooter",
            e.SearchField = "Game.UI.Editor.SearchField",
            e.PopupSearchField = "Game.UI.Editor.PopupSearchField",
            e.LocalizationField = "Game.UI.Editor.LocalizationField",
            e.FilterMenu = "Game.UI.Editor.FilterMenu",
            e.HierarchyMenu = "Game.UI.Editor.HierarchyMenu",
            e.SeasonsField = "Game.UI.Editor.SeasonsField",
            e.ModdingBetaBanner = "Game.UI.Editor.ModdingBetaBanner",
            e.ErrorLabel = "Game.UI.Editor.ErrorLabel",
            e.StringInputFieldWithError = "Game.UI.Editor.StringInputFieldWithError",
            e.ExternalLinkField = "Game.UI.Editor.ExternalLinkField",
            e.ProgressIndicator = "Game.UI.Editor.ProgressIndicator",
            e.LargeIconButton = "Game.UI.Editor.LargeIconButton",
            e.ListField = "Game.UI.Editor.ListField",
            e.DLCInfoField = "Game.UI.Editor.DLCInfoField"
        }($M || ($M = {})),
        function(e) {
            e[e.Loading = 0] = "Loading",
            e[e.Success = 1] = "Success",
            e[e.Failure = 2] = "Failure"
        }(qM || (qM = {})),
        function(e) {
            e[e.Editor = 0] = "Editor",
            e[e.PhotoMode = 1] = "PhotoMode"
        }(XM || (XM = {}));
        var ZM = $r(QM, "active")
          , JM = $r(QM, "title")
          , eR = $r(QM, "width")
          , tR = $r(QM, "children")
          , nR = $r(QM, "widgetRenderer")
          , sR = el(QM, "setWidth")
          , iR = Jr(QM, "cancel")
          , aR = Jr(QM, "close");
        function oR({group: e, path: t}) {
            tl(e, "deleteEditorSection", t)
        }
        function rR({group: e, path: t}, n) {
            tl(e, "setEditorSectionActive", t, n)
        }
        function lR({group: e, path: t}, n) {
            tl(e, "setSelectedSeason", t, n)
        }
        function cR({group: e, path: t}, n, s) {
            tl(e, "setSeasonStartTimeOfYear", t, n, s)
        }
        function uR({group: e, path: t}, n, s) {
            tl(e, "setVisibleItemRange", t, n, s)
        }
        function dR({group: e, path: t}, n) {
            tl(e, "setItemSelected", t, n)
        }
        function mR({group: e, path: t}, n, s) {
            tl(e, "setItemFavorite", t, n, s)
        }
        function hR({group: e, path: t}, n, s) {
            tl(e, "setSearchFavorite", t, n, s)
        }
        function gR({group: e, path: t}, n, s, i) {
            tl(e, "setLocalizationEntry", t, n, s, i)
        }
        function pR({group: e, path: t}) {
            tl(e, "addLocalizationEntry", t)
        }
        function fR({group: e, path: t}, n) {
            tl(e, "removeLocalizationEntry", t, n)
        }
        function xR({group: e, path: t}, n, s) {
            tl(e, "toggleFilter", t, n, s)
        }
        function vR({group: e, path: t}) {
            tl(e, "clearFilters", t)
        }
        function _R({group: e, path: t}, n, s) {
            tl(e, "setHierarchyItemExpanded", t, n, s)
        }
        function bR({group: e, path: t}, n, s) {
            tl(e, "setHierarchyItemSelected", t, n, s)
        }
        function TR({group: e, path: t}, n, s) {
            tl(e, "setHierarchyRenderedRange", t, n, s)
        }
        function ER({group: e, path: t}) {
            tl(e, "addExternalLink", t)
        }
        function IR({group: e, path: t}, n) {
            tl(e, "removeExternalLink", t, n)
        }
        function SR({group: e, path: t}, n, s, i) {
            tl(e, "setExternalLink", t, n, s, i)
        }
        function yR({group: e, path: t}, n) {
            tl(e, "removeListItem", t, n)
        }
        X.add("game-ui/editor/data-binding/editor-panel-bindings.ts", {
            get editorPanelGroup() {
                return QM
            },
            set editorPanelGroup(e) {
                QM = e
            },
            get EditorWidgetType() {
                return $M
            },
            set EditorWidgetType(e) {
                $M = e
            },
            get ProgressIndicatorState() {
                return qM
            },
            set ProgressIndicatorState(e) {
                qM = e
            },
            get EditorPanelWidgetRenderer() {
                return XM
            },
            set EditorPanelWidgetRenderer(e) {
                XM = e
            },
            get editorPanelActive() {
                return editorPanelActive
            },
            set editorPanelActive(e) {
                editorPanelActive = e
            },
            get editorPanelTitle() {
                return editorPanelTitle
            },
            set editorPanelTitle(e) {
                editorPanelTitle = e
            },
            get editorPanelWidth() {
                return editorPanelWidth
            },
            set editorPanelWidth(e) {
                editorPanelWidth = e
            },
            get editorPanelChildren() {
                return editorPanelChildren
            },
            set editorPanelChildren(e) {
                editorPanelChildren = e
            },
            get editorPanelWidgetRenderer() {
                return editorPanelWidgetRenderer
            },
            set editorPanelWidgetRenderer(e) {
                editorPanelWidgetRenderer = e
            },
            get setWidth() {
                return sR
            },
            set setWidth(e) {
                sR = e
            },
            get cancel() {
                return iR
            },
            set cancel(e) {
                iR = e
            },
            get close() {
                return aR
            },
            set close(e) {
                aR = e
            },
            get deleteEditorSection() {
                return oR
            },
            set deleteEditorSection(e) {
                oR = e
            },
            get setEditorSectionActive() {
                return rR
            },
            set setEditorSectionActive(e) {
                rR = e
            },
            get setSelectedSeason() {
                return lR
            },
            set setSelectedSeason(e) {
                lR = e
            },
            get setSeasonStartTimeOfYear() {
                return cR
            },
            set setSeasonStartTimeOfYear(e) {
                cR = e
            },
            get setVisibleItemRange() {
                return uR
            },
            set setVisibleItemRange(e) {
                uR = e
            },
            get setItemSelected() {
                return dR
            },
            set setItemSelected(e) {
                dR = e
            },
            get setItemFavorite() {
                return mR
            },
            set setItemFavorite(e) {
                mR = e
            },
            get setSearchFavorite() {
                return hR
            },
            set setSearchFavorite(e) {
                hR = e
            },
            get setLocalizationEntry() {
                return gR
            },
            set setLocalizationEntry(e) {
                gR = e
            },
            get addLocalizationEntry() {
                return pR
            },
            set addLocalizationEntry(e) {
                pR = e
            },
            get removeLocalizationEntry() {
                return fR
            },
            set removeLocalizationEntry(e) {
                fR = e
            },
            get toggleFilter() {
                return xR
            },
            set toggleFilter(e) {
                xR = e
            },
            get clearFilters() {
                return vR
            },
            set clearFilters(e) {
                vR = e
            },
            get setHierarchyItemExpanded() {
                return _R
            },
            set setHierarchyItemExpanded(e) {
                _R = e
            },
            get setHierarchyItemSelected() {
                return bR
            },
            set setHierarchyItemSelected(e) {
                bR = e
            },
            get setHierarchyVisibleRange() {
                return TR
            },
            set setHierarchyVisibleRange(e) {
                TR = e
            },
            get addExternalLink() {
                return ER
            },
            set addExternalLink(e) {
                ER = e
            },
            get removeExternalLink() {
                return IR
            },
            set removeExternalLink(e) {
                IR = e
            },
            get setExternalLink() {
                return SR
            },
            set setExternalLink(e) {
                SR = e
            },
            get removeAssetItem() {
                return yR
            },
            set removeAssetItem(e) {
                yR = e
            }
        });
        let jR = {
            button: "button_WPv",
            hint: "hint_EbX"
        };
        X.add("game-ui/editor/themes/editor-button.module.scss", {
            get classes() {
                return jR
            },
            set classes(e) {
                Object.assign(jR, e)
            }
        });
        const CR = jR;
        var NR, wR, OR;
        function PR(e, t) {
            return [...e, t]
        }
        function LR(e) {
            return (0,
            Y.useMemo)((()=>e.join(".")), [e])
        }
        function AR({displayName: e, value: t, disabled: n}) {
            return {
                displayName: e,
                value: lm(t),
                disabled: n
            }
        }
        function MR({group: e, path: t}) {
            tl(e, "invoke", t)
        }
        function RR({group: e, path: t}, n) {
            tl(e, "setValue", t, n)
        }
        function kR({group: e, path: t}, n) {
            tl(e, "setExpanded", t, n)
        }
        function DR({group: e, path: t}) {
            tl(e, "invoke", t)
        }
        function FR({group: e, path: t}) {
            tl(e, "addListElement", t)
        }
        function UR({group: e, path: t}, n) {
            tl(e, "duplicateListElement", t, n)
        }
        function BR({group: e, path: t}, n, s) {
            tl(e, "moveListElement", t, n, s)
        }
        function GR({group: e, path: t}, n) {
            tl(e, "deleteListElement", t, n)
        }
        function VR({group: e, path: t}) {
            tl(e, "clearList", t)
        }
        function HR({group: e, path: t}, n) {
            tl(e, "setCurrentPageIndex", t, n)
        }
        function KR(e, t, n, s, i=!1, a=0) {
            return nl(e, "moveKeyframe", t, n, s, i, a)
        }
        function WR(e, t, n, s, i=0) {
            return nl(e, "addKeyframe", t, n, s, i)
        }
        function zR(e, t, n, s=0) {
            tl(e, "removeKeyframe", t, n, s)
        }
        function YR(e, t, n, s=0) {
            tl(e, "setKeyframes", t, n, s)
        }
        function $R(e, t, n) {
            return nl(e, "addSeason", t, n)
        }
        function qR(e, t, n) {
            return nl(e, "onUpdateSeason", t, n)
        }
        function XR(e, t, n) {
            tl(e, "deleteSeason", t, n)
        }
        function QR(e) {
            return (0,
            Y.useMemo)((()=>({
                group: e,
                path: []
            })), [e])
        }
        function ZR(e, t) {
            return (0,
            Y.useMemo)((()=>({
                group: e.group,
                path: PR(e.path, t)
            })), [e.group, e.path, t])
        }
        !function(e) {
            e.Column = "Game.UI.Widgets.Column",
            e.Row = "Game.UI.Widgets.Row",
            e.Scrollable = "Game.UI.Widgets.Scrollable",
            e.PageView = "Game.UI.Widgets.PageView",
            e.PageLayout = "Game.UI.Widgets.PageLayout",
            e.Divider = "Game.UI.Widgets.Divider",
            e.Label = "Game.UI.Widgets.Label",
            e.MultilineText = "Game.UI.Widgets.MultilineText",
            e.Breadcrumbs = "Game.UI.Widgets.Breadcrumbs",
            e.Button = "Game.UI.Widgets.Button",
            e.ButtonRow = "Game.UI.Widgets.ButtonRow",
            e.IconButton = "Game.UI.Widgets.IconButton",
            e.IconButtonGroup = "Game.UI.Widgets.IconButtonGroup",
            e.Group = "Game.UI.Widgets.Group",
            e.ExpandableGroup = "Game.UI.Widgets.ExpandableGroup",
            e.PagedList = "Game.UI.Widgets.PagedList",
            e.ValueField = "Game.UI.Widgets.ValueField",
            e.LocalizedValueField = "Game.UI.Widgets.LocalizedValueField",
            e.ToggleField = "Game.UI.Widgets.ToggleField",
            e.IntInputField = "Game.UI.Widgets.IntInputField",
            e.IntSliderField = "Game.UI.Widgets.IntSliderField",
            e.Int2InputField = "Game.UI.Widgets.Int2InputField",
            e.Int3InputField = "Game.UI.Widgets.Int3InputField",
            e.Int4InputField = "Game.UI.Widgets.Int4InputField",
            e.UIntInputField = "Game.UI.Widgets.UIntInputField",
            e.UIntSliderField = "Game.UI.Widgets.UIntSliderField",
            e.TimeSliderField = "Game.UI.Widgets.TimeSliderField",
            e.TimeBoundsSliderField = "Game.UI.Widgets.TimeBoundsSliderField",
            e.FloatInputField = "Game.UI.Widgets.FloatInputField",
            e.FloatSliderField = "Game.UI.Widgets.FloatSliderField",
            e.Float2InputField = "Game.UI.Widgets.Float2InputField",
            e.Float2SliderField = "Game.UI.Widgets.Float2SliderField",
            e.Float3InputField = "Game.UI.Widgets.Float3InputField",
            e.Float3SliderField = "Game.UI.Widgets.Float3SliderField",
            e.EulerAnglesField = "Game.UI.Widgets.EulerAnglesField",
            e.Float4InputField = "Game.UI.Widgets.Float4InputField",
            e.Float4SliderField = "Game.UI.Widgets.Float4SliderField",
            e.Bounds1SliderField = "Game.UI.Widgets.Bounds1SliderField",
            e.Bounds1InputField = "Game.UI.Widgets.Bounds1InputField",
            e.Bounds2InputField = "Game.UI.Widgets.Bounds2InputField",
            e.Bounds3InputField = "Game.UI.Widgets.Bounds3InputField",
            e.Bezier4x3Field = "Game.UI.Widgets.Bezier4x3Field",
            e.RangedSliderField = "Game.UI.Widgets.RangedSliderField",
            e.StringInputField = "Game.UI.Widgets.StringInputField",
            e.ColorField = "Game.UI.Widgets.ColorField",
            e.GradientSliderField = "Game.UI.Widgets.GradientSliderField",
            e.AnimationCurveField = "Game.UI.Widgets.AnimationCurveField",
            e.EnumField = "Game.UI.Widgets.EnumField",
            e.FlagsField = "Game.UI.Widgets.FlagsField",
            e.PopupValueField = "Game.UI.Widgets.PopupValueField",
            e.DropdownField = "Game.UI.Widgets.DropdownField",
            e.DirectoryPickerButton = "Game.UI.Widgets.DirectoryPickerButton",
            e.SeasonsField = "Game.UI.Widgets.SeasonsField",
            e.ImageField = "Game.UI.Widgets.ImageField"
        }(NR || (NR = {})),
        function(e) {
            e[e.Vertical = 0] = "Vertical",
            e[e.Horizontal = 1] = "Horizontal"
        }(wR || (wR = {})),
        function(e) {
            e[e.Title = 0] = "Title",
            e[e.Container = 1] = "Container"
        }(OR || (OR = {})),
        X.add("game-ui/widgets/data-binding/widget-bindings.ts", {
            get WidgetType() {
                return NR
            },
            set WidgetType(e) {
                NR = e
            },
            get combinePath() {
                return PR
            },
            set combinePath(e) {
                PR = e
            },
            get usePathFocusKey() {
                return LR
            },
            set usePathFocusKey(e) {
                LR = e
            },
            get ScrollableDirection() {
                return wR
            },
            set ScrollableDirection(e) {
                wR = e
            },
            get TooltipPos() {
                return OR
            },
            set TooltipPos(e) {
                OR = e
            },
            get toBigIntMember() {
                return AR
            },
            set toBigIntMember(e) {
                AR = e
            },
            get invoke() {
                return MR
            },
            set invoke(e) {
                MR = e
            },
            get setValue() {
                return RR
            },
            set setValue(e) {
                RR = e
            },
            get setExpanded() {
                return kR
            },
            set setExpanded(e) {
                kR = e
            },
            get openDirectory() {
                return DR
            },
            set openDirectory(e) {
                DR = e
            },
            get addListElement() {
                return FR
            },
            set addListElement(e) {
                FR = e
            },
            get duplicateListElement() {
                return UR
            },
            set duplicateListElement(e) {
                UR = e
            },
            get moveListElement() {
                return BR
            },
            set moveListElement(e) {
                BR = e
            },
            get deleteListElement() {
                return GR
            },
            set deleteListElement(e) {
                GR = e
            },
            get clearList() {
                return VR
            },
            set clearList(e) {
                VR = e
            },
            get setCurrentPageIndex() {
                return HR
            },
            set setCurrentPageIndex(e) {
                HR = e
            },
            get moveKeyframe() {
                return KR
            },
            set moveKeyframe(e) {
                KR = e
            },
            get addKeyframe() {
                return WR
            },
            set addKeyframe(e) {
                WR = e
            },
            get removeKeyframe() {
                return zR
            },
            set removeKeyframe(e) {
                zR = e
            },
            get setKeyframes() {
                return YR
            },
            set setKeyframes(e) {
                YR = e
            },
            get addSeason() {
                return $R
            },
            set addSeason(e) {
                $R = e
            },
            get updateSeason() {
                return qR
            },
            set updateSeason(e) {
                qR = e
            },
            get deleteSeason() {
                return XR
            },
            set deleteSeason(e) {
                XR = e
            }
        }),
        X.add("game-ui/widgets/components/widget-props.ts", {
            get useRootId() {
                return QR
            },
            set useRootId(e) {
                QR = e
            },
            get useWidgetId() {
                return ZR
            },
            set useWidgetId(e) {
                ZR = e
            }
        });
        let JR = {
            "editor-icon-button-group": "editor-icon-button-group_Qiw editor-widget_QQl",
            editorIconButtonGroup: "editor-icon-button-group_Qiw editor-widget_QQl",
            button: "button_qdd",
            "large-icon-button": "large-icon-button_sBX",
            largeIconButton: "large-icon-button_sBX"
        };
        X.add("game-ui/editor/widgets/icon-button/icon-button.module.scss", {
            get classes() {
                return JR
            },
            set classes(e) {
                Object.assign(JR, e)
            }
        });
        const ek = JR;
        var tk = e=>(0,
        z.jsx)(ik, {
            children: (0,
            z.jsx)(sk, {
                ...e
            })
        })
          , nk = ({parent: e, path: t, children: n})=>{
            const s = ZR(e, t);
            return (0,
            z.jsx)(ik, {
                children: n.map((({path: e, ...t})=>(0,
                z.jsx)(sk, {
                    parent: s,
                    path: e,
                    ...t
                }, e)))
            })
        }
        ;
        const sk = ({parent: e, path: t, props: n})=>{
            const s = YM(MR, ZR(e, t));
            return (0,
            z.jsx)(Eg, {
                tooltip: n.tooltip && (0,
                z.jsx)(gu, {
                    value: n.tooltip
                }),
                children: (0,
                z.jsx)(ak, {
                    src: n.icon,
                    selected: n.selected,
                    disabled: n.disabled,
                    onSelect: s
                })
            })
        }
        ;
        var ik = ({children: e})=>(0,
        z.jsx)("div", {
            className: ek.editorIconButtonGroup,
            children: e
        })
          , ak = ({src: e, selected: t, disabled: n, tinted: s, className: i, onSelect: a, ...o})=>(0,
        z.jsx)(tb, {
            src: e,
            selected: t,
            disabled: n,
            theme: CR,
            className: Zu()(ek.button, i),
            onSelect: a,
            tinted: s,
            ...o
        });
        X.add("game-ui/editor/widgets/icon-button/icon-button.tsx", {
            get BoundIconButton() {
                return tk
            },
            set BoundIconButton(e) {
                tk = e
            },
            get BoundIconButtonGroup() {
                return nk
            },
            set BoundIconButtonGroup(e) {
                nk = e
            },
            get EditorIconButtonGroup() {
                return ik
            },
            set EditorIconButtonGroup(e) {
                ik = e
            },
            get EditorIconButton() {
                return ak
            },
            set EditorIconButton(e) {
                ak = e
            }
        });
        let ok = {
            pickerMinHeight: "400rem",
            "editor-item-base": "editor-item-base_sYx editor-widget_QQl",
            editorItemBase: "editor-item-base_sYx editor-widget_QQl",
            centered: "centered_t1M",
            "editor-item": "editor-item_VnW editor-item-base_sYx editor-widget_QQl",
            editorItem: "editor-item_VnW editor-item-base_sYx editor-widget_QQl",
            row: "row_d2o",
            label: "label_BbZ",
            control: "control_Hds",
            children: "children_ab1",
            toggle: "toggle_wf6",
            input: "input_Wfi",
            "picker-toggle": "picker-toggle_d6k",
            pickerToggle: "picker-toggle_d6k",
            "dropdown-toggle": "dropdown-toggle_kaj",
            dropdownToggle: "dropdown-toggle_kaj",
            "directory-button": "directory-button_ayP",
            directoryButton: "directory-button_ayP",
            "directory-icon": "directory-icon_NVL",
            directoryIcon: "directory-icon_NVL",
            "vector-label": "vector-label_fxy",
            vectorLabel: "vector-label_fxy",
            "vector-input": "vector-input_B11 input_Wfi",
            vectorInput: "vector-input_B11 input_Wfi",
            "slider-container": "slider-container_Q_K",
            sliderContainer: "slider-container_Q_K",
            slider: "slider_ROT",
            "slider-input": "slider-input_DXM input_Wfi",
            sliderInput: "slider-input_DXM input_Wfi",
            picker: "picker_Ij2",
            "picker-popup": "picker-popup_pUb",
            pickerPopup: "picker-popup_pUb",
            swatch: "swatch_wOH",
            alpha: "alpha_Sth",
            "group-children": "group-children_Zwx",
            groupChildren: "group-children_Zwx",
            "expandable-header": "expandable-header_hQZ",
            expandableHeader: "expandable-header_hQZ",
            "header-label": "header-label_H79",
            headerLabel: "header-label_H79",
            "header-summary": "header-summary_U_C",
            headerSummary: "header-summary_U_C",
            "expandable-children": "expandable-children_e7j",
            expandableChildren: "expandable-children_e7j",
            "color-picker-container": "color-picker-container_bUs",
            colorPickerContainer: "color-picker-container_bUs",
            "details-block": "details-block_E_n",
            detailsBlock: "details-block_E_n",
            "error-label": "error-label_Tqk",
            errorLabel: "error-label_Tqk",
            "error-border": "error-border_idd",
            errorBorder: "error-border_idd",
            "label-right": "label-right__bo",
            labelRight: "label-right__bo",
            "gradient-slider": "gradient-slider_iFK",
            gradientSlider: "gradient-slider_iFK",
            "ranged-slider": "ranged-slider_zaP",
            rangedSlider: "ranged-slider_zaP",
            icon: "icon_D21",
            "tick-mark": "tick-mark_bLv",
            tickMark: "tick-mark_bLv"
        };
        X.add("game-ui/editor/widgets/item/editor-item.module.scss", {
            get classes() {
                return ok
            },
            set classes(e) {
                Object.assign(ok, e)
            }
        });
        const rk = ok;
        var lk = ({disabled: e, centered: t, className: n, children: s})=>(0,
        z.jsx)(np, {
            children: (0,
            z.jsx)("div", {
                className: Zu()(rk.editorItem, e && "disabled", t && rk.centered, n),
                children: s
            })
        })
          , ck = ({disabled: e, centered: t, className: n, focusKey: s=yg, onFocusChange: i, children: a})=>(0,
        z.jsx)(Sp, {
            focusKey: s,
            className: Zu()(rk.editorItem, e && "disabled", t && rk.centered, n),
            onFocusChange: i,
            children: a
        })
          , uk = ({label: e, summary: t, expanded: n, disabled: s, centered: i, className: a, tooltip: o, children: r, onExpandedChange: l})=>{
            const c = (0,
            Y.useCallback)((()=>l(!n)), [n, l]);
            return (0,
            z.jsx)(Sp, {
                focusKey: s ? Sg : yg,
                className: Zu()(rk.editorItemBase, s && "disabled", i && rk.centered, a),
                children: (0,
                z.jsxs)(np, {
                    children: [(0,
                    z.jsx)(Eg, {
                        tooltip: o && (0,
                        z.jsx)(gu, {
                            value: o
                        }),
                        children: (0,
                        z.jsxs)(tb, {
                            tinted: !0,
                            src: n ? "Media/Glyphs/ThickStrokeArrowDown.svg" : "Media/Glyphs/ThickStrokeArrowRight.svg",
                            className: Zu()(rk.expandableHeader, n && rk.expanded),
                            onSelect: c,
                            children: [(0,
                            z.jsx)("div", {
                                className: rk.headerLabel,
                                children: e
                            }), null != t && (0,
                            z.jsx)("div", {
                                className: rk.headerSummary,
                                children: t
                            })]
                        })
                    }), n && (0,
                    z.jsx)("div", {
                        className: rk.expandableChildren,
                        children: r
                    })]
                })
            })
        }
          , dk = ({label: e, onSelect: t, children: n})=>(0,
        z.jsxs)("div", {
            className: rk.row,
            children: [(0,
            z.jsx)("div", {
                className: rk.label,
                onClick: t,
                children: e
            }), n && (0,
            z.jsx)("div", {
                className: rk.control,
                children: n
            })]
        })
          , mk = ({visible: e, children: t})=>e ? (0,
        z.jsx)("div", {
            className: rk.detailsBlock,
            children: t
        }) : null;
        X.add("game-ui/editor/widgets/item/editor-item.tsx", {
            get EditorItem() {
                return lk
            },
            set EditorItem(e) {
                lk = e
            },
            get FocusableEditorItem() {
                return ck
            },
            set FocusableEditorItem(e) {
                ck = e
            },
            get ExpandableEditorItem() {
                return uk
            },
            set ExpandableEditorItem(e) {
                uk = e
            },
            get EditorItemControl() {
                return dk
            },
            set EditorItemControl(e) {
                dk = e
            },
            get EditorItemDetails() {
                return mk
            },
            set EditorItemDetails(e) {
                mk = e
            }
        }),
        X.add("game-ui/editor/widgets/item/index.ts", {});
        let hk = {
            column: "column_Dex",
            row: "row_bJ0",
            label: "label_jyM",
            "remove-button": "remove-button_kUX",
            removeButton: "remove-button_kUX",
            "sub-item": "sub-item_nMN",
            subItem: "sub-item_nMN"
        };
        X.add("game-ui/editor/widgets/asset-list-field/asset-list-field.module.scss", {
            get classes() {
                return hk
            },
            set classes(e) {
                Object.assign(hk, e)
            }
        });
        const gk = hk;
        var pk = ({parent: e, path: t, props: n})=>{
            const s = YM(yR, ZR(e, t));
            return (0,
            z.jsx)(fk, {
                data: n,
                onRemove: s
            })
        }
          , fk = ({data: e, onRemove: t})=>(0,
        z.jsx)(z.Fragment, {
            children: e.items.map(((e,n)=>(0,
            z.jsx)(xk, {
                item: e,
                index: n,
                onRemove: t
            }, n)))
        })
          , xk = ({item: e, index: t, onRemove: n})=>{
            const s = (0,
            Y.useCallback)((()=>n && n(t)), [t, n]);
            return (0,
            z.jsx)(lk, {
                children: (0,
                z.jsxs)("div", {
                    className: gk.column,
                    children: [(0,
                    z.jsxs)("div", {
                        className: gk.row,
                        children: [(0,
                        z.jsx)("div", {
                            className: gk.label,
                            children: e.label
                        }), e.removable && (0,
                        z.jsx)(ak, {
                            src: "Media/Glyphs/Trash.svg",
                            onSelect: s,
                            className: gk.removeButton,
                            tinted: !0
                        })]
                    }), e.subItems?.map(((e,t)=>(0,
                    z.jsx)("div", {
                        className: gk.subItem,
                        children: e
                    }, t)))]
                })
            })
        }
        ;
        X.add("game-ui/editor/widgets/asset-list-field/asset-list-field.tsx", {
            get BoundAssetListField() {
                return pk
            },
            set BoundAssetListField(e) {
                pk = e
            },
            get AssetListField() {
                return fk
            },
            set AssetListField(e) {
                fk = e
            },
            get AssetListItem() {
                return xk
            },
            set AssetListItem(e) {
                xk = e
            }
        });
        let vk = {
            container: "container_uJ9",
            "image-container": "image-container_BGC",
            imageContainer: "image-container_BGC",
            image: "image_i4D",
            "label-container": "label-container_e_F",
            labelContainer: "label-container_e_F"
        };
        X.add("game-ui/editor/widgets/dlc-info-field/dlc-info-field.module.scss", {
            get classes() {
                return vk
            },
            set classes(e) {
                Object.assign(vk, e)
            }
        });
        const _k = vk;
        var bk = e=>(0,
        z.jsx)(Tk, {
            ...e.props
        })
          , Tk = ({displayName: e, type: t, image: n})=>{
            const s = (0,
            Y.useMemo)((()=>"url(" + n + ")"), [n]);
            return (0,
            z.jsxs)("div", {
                className: _k.container,
                children: [(0,
                z.jsx)("div", {
                    style: {
                        backgroundImage: s,
                        backgroundRepeat: "no-repeat",
                        backgroundSize: "contain",
                        backgroundPosition: "50% 50%"
                    },
                    className: _k.image
                }), (0,
                z.jsxs)("div", {
                    className: _k.labelContainer,
                    children: [(0,
                    z.jsx)("div", {
                        children: (0,
                        z.jsx)(gu, {
                            value: e
                        })
                    }), (0,
                    z.jsx)("div", {
                        children: (0,
                        z.jsx)(gu, {
                            value: t
                        })
                    })]
                })]
            })
        }
        ;
        X.add("game-ui/editor/widgets/dlc-info-field/dlc-info-field.tsx", {
            get BoundDLCInfoField() {
                return bk
            },
            set BoundDLCInfoField(e) {
                bk = e
            },
            get DLCInfoField() {
                return Tk
            },
            set DLCInfoField(e) {
                Tk = e
            }
        });
        let Ek = {
            "editor-button-row": "editor-button-row_NuZ editor-widget_QQl",
            editorButtonRow: "editor-button-row_NuZ editor-widget_QQl",
            button: "button_dLA"
        };
        X.add("game-ui/editor/widgets/button/button.module.scss", {
            get classes() {
                return Ek
            },
            set classes(e) {
                Object.assign(Ek, e)
            }
        });
        const Ik = Ek;
        var Sk = e=>(0,
        z.jsx)(Ck, {
            children: (0,
            z.jsx)(mT, {
                uiTag: e.props.uiTag || void 0,
                editor: !0,
                children: (0,
                z.jsx)(jk, {
                    ...e
                })
            })
        })
          , yk = ({parent: e, path: t, children: n})=>{
            const s = ZR(e, t);
            return (0,
            z.jsx)(Ck, {
                children: n.map((({path: e, ...t})=>(0,
                z.jsx)(jk, {
                    parent: s,
                    path: e,
                    ...t
                }, e)))
            })
        }
        ;
        const jk = ({parent: e, path: t, props: n})=>{
            const s = YM(MR, ZR(e, t));
            return n.hidden ? null : (0,
            z.jsx)(Nk, {
                disabled: n.disabled,
                onSelect: s,
                tooltip: n.tooltip,
                children: (0,
                z.jsx)(gu, {
                    value: n.displayName
                })
            })
        }
        ;
        var Ck = ({children: e})=>(0,
        z.jsx)("div", {
            className: Ik.editorButtonRow,
            children: e
        })
          , Nk = ({disabled: e, className: t, children: n, onSelect: s, tooltip: i})=>(0,
        z.jsx)(Eg, {
            tooltip: te(i) ? null : (0,
            z.jsx)(gu, {
                value: i
            }),
            children: (0,
            z.jsx)(U_, {
                disabled: e,
                theme: CR,
                className: Zu()(Ik.button, t),
                onSelect: s,
                children: n
            })
        });
        X.add("game-ui/editor/widgets/button/button.tsx", {
            get BoundButton() {
                return Sk
            },
            set BoundButton(e) {
                Sk = e
            },
            get BoundButtonRow() {
                return yk
            },
            set BoundButtonRow(e) {
                yk = e
            },
            get EditorButtonRow() {
                return Ck
            },
            set EditorButtonRow(e) {
                Ck = e
            },
            get EditorButton() {
                return Nk
            },
            set EditorButton(e) {
                Nk = e
            }
        });
        let wk = {
            "dropdown-toggle": "dropdown-toggle_Iei dropdown-toggle_prl",
            dropdownToggle: "dropdown-toggle_Iei dropdown-toggle_prl",
            indicator: "indicator_Not",
            "dropdown-menu": "dropdown-menu_cSm dropdown-menu_Swd",
            dropdownMenu: "dropdown-menu_cSm dropdown-menu_Swd",
            "dropdown-item": "dropdown-item_Hjk undefined",
            dropdownItem: "dropdown-item_Hjk undefined",
            "toggle-flags-button": "toggle-flags-button_T7X undefined",
            toggleFlagsButton: "toggle-flags-button_T7X undefined",
            "dropdown-flag-item": "dropdown-flag-item_uJx dropdown-flag-item_EcT",
            dropdownFlagItem: "dropdown-flag-item_uJx dropdown-flag-item_EcT",
            toggle: "toggle_qtt toggle_RyX",
            label: "label_tNr"
        };
        X.add("game-ui/editor/themes/editor-dropdown.module.scss", {
            get classes() {
                return wk
            },
            set classes(e) {
                Object.assign(wk, e)
            }
        });
        const Ok = wk;
        let Pk = {
            button: "button_MqD",
            hint: "hint_Rzc"
        };
        X.add("game-ui/editor/widgets/fields/dropdown-toggle.module.scss", {
            get classes() {
                return Pk
            },
            set classes(e) {
                Object.assign(Pk, e)
            }
        });
        const Lk = Pk;
        function Ak({parent: e, path: t, props: n}) {
            const s = YM(RR, ZR(e, t));
            return (0,
            z.jsx)(Rk, {
                data: n,
                onChange: s
            })
        }
        function Mk({items: e, value: t, disabled: n=!1, onChange: s}) {
            const i = (0,
            Y.useMemo)((()=>e.find((e=>e.value === t))), [e, t]);
            return (0,
            z.jsx)(fS, {
                theme: Ok,
                content: e.map(((e,n)=>(0,
                z.jsx)(bS, {
                    focusKey: n,
                    value: e.value,
                    selected: t === e.value,
                    onChange: s,
                    children: (0,
                    z.jsx)(gu, {
                        value: e.displayName
                    })
                }, n))),
                children: (0,
                z.jsx)(xS, {
                    showHint: !0,
                    buttonTheme: Lk,
                    sounds: kk,
                    className: rk.dropdownToggle,
                    disabled: n,
                    children: i?.displayName && (0,
                    z.jsx)(gu, {
                        value: i.displayName
                    })
                })
            })
        }
        function Rk({data: e, onChange: t}) {
            return (0,
            z.jsx)(ck, {
                disabled: e.disabled,
                children: (0,
                z.jsxs)("div", {
                    className: rk.row,
                    children: [(0,
                    z.jsx)("div", {
                        className: rk.label,
                        children: (0,
                        z.jsx)(gu, {
                            value: e.displayName
                        })
                    }), (0,
                    z.jsx)("div", {
                        className: rk.control,
                        children: (0,
                        z.jsx)(Mk, {
                            items: e.items,
                            value: e.value,
                            disabled: e.disabled,
                            onChange: t
                        })
                    })]
                })
            })
        }
        const kk = {
            ...F_,
            hover: null,
            focus: null
        };
        X.add("game-ui/editor/widgets/fields/dropdown-field.tsx", {
            get BoundDropdownField() {
                return Ak
            },
            set BoundDropdownField(e) {
                Ak = e
            },
            get DropdownField() {
                return Mk
            },
            set DropdownField(e) {
                Mk = e
            }
        });
        var Dk = ({parent: e, path: t, props: n})=>{
            const s = YM(RR, ZR(e, t));
            return n.hidden ? null : (0,
            z.jsx)(ck, {
                disabled: n.disabled,
                children: (0,
                z.jsx)(Eg, {
                    tooltip: n.tooltip && (0,
                    z.jsx)(gu, {
                        value: n.tooltip
                    }),
                    children: (0,
                    z.jsxs)("div", {
                        className: rk.row,
                        children: [(0,
                        z.jsx)("div", {
                            className: rk.label,
                            children: (0,
                            z.jsx)(gu, {
                                value: n.displayName
                            })
                        }), (0,
                        z.jsx)("div", {
                            className: rk.control,
                            children: (0,
                            z.jsx)(Fk, {
                                ...n,
                                onChange: s,
                                multiline: n.multiline >= 1 ? n.multiline : void 0,
                                maxLength: n.maxLength > 0 ? n.maxLength : void 0
                            })
                        })]
                    })
                })
            })
        }
          , Fk = ({value: e, disabled: t, onChange: n, onChangeStart: s, onChangeEnd: i, className: a, multiline: o, maxLength: r})=>{
            const l = (0,
            Y.useCallback)((e=>n(e.target.value || "")), [n]);
            return (0,
            z.jsx)(oI, {
                showHint: !0,
                value: e,
                disabled: t,
                className: Zu()(rk.input, a),
                onChange: l,
                onFocus: s,
                onBlur: i,
                multiline: o,
                maxLength: r
            })
        }
        ;
        X.add("game-ui/editor/widgets/fields/string-input-field.tsx", {
            get BoundEditorStringInputField() {
                return Dk
            },
            set BoundEditorStringInputField(e) {
                Dk = e
            },
            get StringInputField() {
                return Fk
            },
            set StringInputField(e) {
                Fk = e
            }
        });
        let Uk = {
            label: "label_FW0",
            control: "control_jRy",
            input: "input_Qzq"
        };
        X.add("game-ui/editor/widgets/external-link-field/external-link-field.module.scss", {
            get classes() {
                return Uk
            },
            set classes(e) {
                Object.assign(Uk, e)
            }
        });
        const Bk = Uk;
        let Gk = {
            button: "button_N5R",
            hint: "hint_Izr"
        };
        X.add("game-ui/editor/widgets/external-link-field/external-link-field-button.module.scss", {
            get classes() {
                return Gk
            },
            set classes(e) {
                Object.assign(Gk, e)
            }
        });
        const Vk = Gk;
        var Hk = ({parent: e, path: t, props: n})=>{
            const s = ZR(e, t)
              , i = YM(ER, s)
              , a = YM(SR, s)
              , o = YM(IR, s);
            return (0,
            z.jsx)(Kk, {
                data: n,
                onAdd: i,
                onChange: a,
                onRemove: o
            })
        }
          , Kk = ({data: e, onAdd: t, onChange: n, onRemove: s})=>{
            const i = (0,
            Y.useMemo)((()=>e.acceptedTypes.map((e=>({
                value: e,
                displayName: iu("Menu.ASSET_EXTERNAL_LINK_TYPE[" + e + "]")
            })))), [e.acceptedTypes]);
            return (0,
            z.jsxs)(z.Fragment, {
                children: [e.links.map(((e,t)=>(0,
                z.jsx)(Wk, {
                    link: e,
                    index: t,
                    items: i,
                    onChange: n,
                    onRemove: s
                }, t))), (0,
                z.jsx)(Nk, {
                    onSelect: t,
                    disabled: e.links.length >= e.maxLinks,
                    children: (0,
                    z.jsx)(_c.Menu.ASSET_ADD_EXTERNAL_LINK, {})
                })]
            })
        }
          , Wk = ({index: e, link: t, items: n, onChange: s, onRemove: i})=>{
            const a = (0,
            Y.useCallback)((n=>s(e, n, t.url)), [e, t.url, s])
              , o = (0,
            Y.useCallback)((n=>s(e, t.type, n)), [e, t.type, s])
              , r = (0,
            Y.useCallback)((()=>i && i(e)), [e, i]);
            return (0,
            z.jsx)(lk, {
                children: (0,
                z.jsxs)("div", {
                    className: rk.row,
                    children: [(0,
                    z.jsx)("div", {
                        className: Bk.label,
                        children: (0,
                        z.jsx)(Mk, {
                            items: n,
                            value: t.type,
                            disabled: t.lockType,
                            onChange: a
                        })
                    }), (0,
                    z.jsxs)("div", {
                        className: Bk.control,
                        children: [(0,
                        z.jsx)(Fk, {
                            value: t.url,
                            onChange: o,
                            className: Zu()(Bk.input, t.error && rk.errorBorder)
                        }), (0,
                        z.jsx)(ak, {
                            src: "Media/Glyphs/Trash.svg",
                            onSelect: r,
                            disabled: void 0 === i,
                            theme: Vk,
                            tinted: !0
                        })]
                    })]
                })
            })
        }
        ;
        X.add("game-ui/editor/widgets/external-link-field/external-link-field.tsx", {
            get BoundExternalLinkField() {
                return Hk
            },
            set BoundExternalLinkField(e) {
                Hk = e
            },
            get ExternalLinkField() {
                return Kk
            },
            set ExternalLinkField(e) {
                Kk = e
            },
            get ExternalLinkItem() {
                return Wk
            },
            set ExternalLinkItem(e) {
                Wk = e
            }
        });
        var zk = ({props: e})=>(0,
        z.jsx)(Yk, {
            ...e
        })
          , Yk = e=>e.visible ? (0,
        z.jsx)("div", {
            className: Zu()(rk.errorLabel, e.className),
            children: (0,
            z.jsx)(gu, {
                value: e.displayName
            })
        }) : null;
        X.add("game-ui/editor/widgets/label/error-label.tsx", {
            get BoundErrorLabel() {
                return zk
            },
            set BoundErrorLabel(e) {
                zk = e
            },
            get ErrorLabel() {
                return Yk
            },
            set ErrorLabel(e) {
                Yk = e
            }
        });
        var $k = ({parent: e, path: t, props: n})=>{
            const s = YM(RR, ZR(e, t));
            return (0,
            z.jsxs)(ck, {
                disabled: n.disabled,
                children: [(0,
                z.jsxs)("div", {
                    className: rk.row,
                    children: [(0,
                    z.jsx)("div", {
                        className: rk.label,
                        children: (0,
                        z.jsx)(gu, {
                            value: n.displayName
                        })
                    }), (0,
                    z.jsx)("div", {
                        className: rk.control,
                        children: (0,
                        z.jsx)(Fk, {
                            className: n.error ? rk.errorBorder : void 0,
                            value: n.value,
                            onChange: s,
                            multiline: n.multiline >= 1 ? n.multiline : void 0,
                            maxLength: n.maxLength > 0 ? n.maxLength : void 0
                        })
                    })]
                }), (0,
                z.jsx)(Yk, {
                    visible: n.error,
                    displayName: n.errorMessage,
                    level: 0,
                    className: rk.labelRight
                })]
            })
        }
        ;
        X.add("game-ui/editor/widgets/fields/string-input-field-with-error.tsx", {
            get BoundStringInputFieldWithError() {
                return $k
            },
            set BoundStringInputFieldWithError(e) {
                $k = e
            }
        });
        var qk = ({parent: e, path: t, props: n})=>{
            const s = YM(MR, ZR(e, t))
              , i = (0,
            Y.useMemo)((()=>"url(" + n.icon + ")"), [n.icon]);
            return (0,
            z.jsx)(ck, {
                children: (0,
                z.jsx)(Eg, {
                    tooltip: n.tooltip && (0,
                    z.jsx)(gu, {
                        value: n.tooltip
                    }),
                    children: (0,
                    z.jsx)(U_, {
                        style: {
                            backgroundImage: i
                        },
                        className: ek.largeIconButton,
                        onSelect: s,
                        theme: CR
                    })
                })
            })
        }
        ;
        X.add("game-ui/editor/widgets/icon-button/large-icon-button.tsx", {
            get BoundLargeIconButton() {
                return qk
            },
            set BoundLargeIconButton(e) {
                qk = e
            }
        });
        var Xk = ({props: e})=>(0,
        z.jsx)(lk, {
            children: (0,
            z.jsx)(gu, {
                value: e.displayName
            })
        });
        X.add("game-ui/editor/widgets/label/label.tsx", {
            get BoundLabel() {
                return Xk
            },
            set BoundLabel(e) {
                Xk = e
            }
        });
        let Qk = {
            strokeWidth: "5",
            "progress-circle": "progress-circle_OLN",
            progressCircle: "progress-circle_OLN",
            indeterminate: "indeterminate_UIQ",
            rotate: "rotate_UME",
            image: "image_AKd",
            progress: "progress_mlv"
        };
        X.add("game-ui/common/progress-circle/progress-circle.module.scss", {
            get classes() {
                return Qk
            },
            set classes(e) {
                Object.assign(Qk, e)
            }
        });
        const Zk = Qk;
        var Jk = ({progress: e, max: t, indeterminate: n, theme: s, className: i})=>{
            const a = (0,
            Y.useMemo)((()=>({
                ...Zk,
                ...s
            })), [s])
              , o = 50
              , r = parseFloat(a.strokeWidth)
              , l = (100 - r) / 2
              , c = 2 * Math.PI * Od(e / t, 0, .9999)
              , u = o + l * Math.sin(c)
              , d = o - l * Math.cos(c)
              , m = c > Math.PI ? 1 : 0;
            return (0,
            z.jsx)("div", {
                className: Zu()(a.progressCircle, n && a.indeterminate, i),
                children: (0,
                z.jsxs)("svg", {
                    viewBox: "0 0 100 100",
                    className: a.image,
                    children: [a.circle && (0,
                    z.jsx)("circle", {
                        cx: o,
                        cy: o,
                        r: l,
                        strokeWidth: r,
                        className: a.circle
                    }), n ? (0,
                    z.jsx)("path", {
                        d: eD(o, l, 10),
                        strokeWidth: r,
                        className: a.progress
                    }) : (0,
                    z.jsx)("path", {
                        d: `M 50 ${o - l} A ${l} ${l}, 0, ${m} 1, ${u} ${d}`,
                        strokeWidth: r,
                        className: a.progress
                    })]
                })
            })
        }
        ;
        function eD(e, t, n) {
            let s = "";
            for (let i = 0; i < n; i++) {
                const a = 2 * Math.PI * i / n
                  , o = e + t * Math.sin(a)
                  , r = e - t * Math.cos(a)
                  , l = 2 * Math.PI * (i + .3) / n;
                s += `M ${o} ${r} A ${t} ${t}, 0, 0 1, ${e + t * Math.sin(l)} ${e - t * Math.cos(l)} `
            }
            return s
        }
        X.add("game-ui/common/progress-circle/progress-circle.tsx", {
            get ProgressCircle() {
                return Jk
            },
            set ProgressCircle(e) {
                Jk = e
            }
        });
        let tD = {
            "progress-circle": "progress-circle_VWp progress-circle_OLN",
            progressCircle: "progress-circle_VWp progress-circle_OLN",
            progress: "progress_sD7 progress_mlv",
            complete: "complete_om7",
            failure: "failure_ryc",
            container: "container_YQJ"
        };
        X.add("game-ui/editor/widgets/progress-indicator/progress-indicator.module.scss", {
            get classes() {
                return tD
            },
            set classes(e) {
                Object.assign(tD, e)
            }
        });
        const nD = tD;
        var sD = ({props: e})=>(0,
        z.jsx)(iD, {
            ...e
        })
          , iD = ({progress: e, indeterminate: t, state: n, hidden: s})=>s ? null : (0,
        z.jsx)("div", {
            className: nD.container,
            children: (0,
            z.jsx)(Jk, {
                progress: n === qM.Loading ? e : 1,
                max: 1,
                theme: nD,
                indeterminate: n === qM.Loading && t,
                className: Zu()(n === qM.Success && nD.complete, n === qM.Failure && nD.failure)
            })
        });
        X.add("game-ui/editor/widgets/progress-indicator/progress-indicator.tsx", {
            get BoundProgressIndicator() {
                return sD
            },
            set BoundProgressIndicator(e) {
                sD = e
            },
            get ProgressIndicator() {
                return iD
            },
            set ProgressIndicator(e) {
                iD = e
            }
        });
        const aD = {};
        function oD(e, t) {
            return t
        }
        function rD(e) {
            return Dr(e.entity)
        }
        function lD({components: e, data: t, props: n}) {
            const s = e[t.__Type];
            return null != s ? (0,
            z.jsx)(s, {
                ...t,
                ...n || aD
            }) : (0,
            z.jsx)(dD, {
                typeName: t.__Type
            })
        }
        function cD({components: e, data: t, props: n, keyProvider: s=oD}) {
            return (0,
            z.jsx)(z.Fragment, {
                children: t.map(((t,i)=>{
                    if (null == t)
                        return;
                    const a = s(t, i)
                      , o = e[t.__Type];
                    return null != o ? (0,
                    z.jsx)(o, {
                        ...t,
                        ...n || aD
                    }, a) : (0,
                    z.jsx)(dD, {
                        typeName: t.__Type
                    }, a)
                }
                ))
            })
        }
        function uD(e, t, n, s) {
            const i = e[t.__Type];
            return null != i ? (0,
            z.jsx)(i, {
                ...t,
                ...n || aD
            }, s) : void 0
        }
        var dD = ({typeName: e})=>(0,
        z.jsx)("div", {
            style: {
                backgroundColor: "red",
                color: "yellow"
            },
            children: `Unknown element type ${e}`
        });
        function mD({parent: e, components: t, data: n}) {
            const s = n.props.__Type
              , i = t[s];
            return null != i ? (0,
            z.jsx)(gD.Provider, {
                value: t,
                children: (0,
                z.jsx)(i, {
                    parent: e,
                    ...n
                })
            }) : (0,
            z.jsx)(dD, {
                typeName: s
            })
        }
        function hD({parent: e, components: t, data: n}) {
            return (0,
            z.jsx)(gD.Provider, {
                value: t,
                children: null != n?.map ? n.map(((n,s)=>{
                    if (null == n || n.props.hidden)
                        return;
                    const i = n.path || `item-${s}`
                      , a = n.props.__Type
                      , o = t[a];
                    return null != o ? (0,
                    z.jsx)(o, {
                        parent: e,
                        ...n
                    }, i) : (0,
                    z.jsx)(dD, {
                        typeName: a
                    }, i)
                }
                )) : JSON.stringify(n)
            })
        }
        X.add("game-ui/common/typed-renderer/typed-renderer.tsx", {
            get entityKeyProvider() {
                return rD
            },
            set entityKeyProvider(e) {
                rD = e
            },
            get TypedRenderer() {
                return lD
            },
            set TypedRenderer(e) {
                lD = e
            },
            get TypedListRenderer() {
                return cD
            },
            set TypedListRenderer(e) {
                cD = e
            },
            get renderTyped() {
                return uD
            },
            set renderTyped(e) {
                uD = e
            },
            get UnknownElement() {
                return dD
            },
            set UnknownElement(e) {
                dD = e
            }
        });
        var gD = (0,
        Y.createContext)({});
        function pD(e, t) {
            return (0,
            Y.useMemo)((()=>({
                flex: `${e.grow} ${e.shrink} ${fD(e.basis)}`,
                flexWrap: t ? "wrap" : "nowrap"
            })), [e.basis, e.grow, e.shrink, t])
        }
        function fD(e) {
            return e < 0 ? "auto" : 0 === e ? "0" : `${e}rem`
        }
        X.add("game-ui/widgets/components/widget-renderer.tsx", {
            get WidgetRenderer() {
                return mD
            },
            set WidgetRenderer(e) {
                mD = e
            },
            get WidgetListRenderer() {
                return hD
            },
            set WidgetListRenderer(e) {
                hD = e
            },
            get WidgetComponentMapContext() {
                return gD
            },
            set WidgetComponentMapContext(e) {
                gD = e
            }
        }),
        X.add("game-ui/widgets/components/flex-layout.ts", {
            get useFlexStyle() {
                return pD
            },
            set useFlexStyle(e) {
                pD = e
            }
        });
        let xD = {
            column: "column_iuw editor-widget_QQl"
        };
        X.add("game-ui/editor/widgets/column/column.module.scss", {
            get classes() {
                return xD
            },
            set classes(e) {
                Object.assign(xD, e)
            }
        });
        const vD = xD;
        var _D = ({parent: e, path: t, props: n, children: s})=>{
            const i = ZR(e, t)
              , a = pD(n.flex)
              , o = (0,
            Y.useContext)(gD);
            return (0,
            z.jsx)(bD, {
                style: a,
                children: (0,
                z.jsx)(hD, {
                    parent: i,
                    components: o,
                    data: s
                })
            })
        }
          , bD = ({className: e, style: t, children: n})=>(0,
        z.jsx)("div", {
            className: Zu()(vD.column, e),
            style: t,
            children: (0,
            z.jsx)(np, {
                children: n
            })
        });
        X.add("game-ui/editor/widgets/column/column.tsx", {
            get BoundColumn() {
                return _D
            },
            set BoundColumn(e) {
                _D = e
            },
            get Column() {
                return bD
            },
            set Column(e) {
                bD = e
            }
        });
        let TD = {
            compass: "compass_DU0",
            north: "north_meN",
            needle: "needle_PzX"
        };
        X.add("game-ui/editor/widgets/compass/compass.module.scss", {
            get classes() {
                return TD
            },
            set classes(e) {
                Object.assign(TD, e)
            }
        });
        const ED = TD;
        var ID = ({props: e})=>(0,
        z.jsx)(lk, {
            centered: !0,
            children: (0,
            z.jsx)(SD, {
                angle: e.angle
            })
        })
          , SD = ({angle: e, className: t})=>(0,
        z.jsxs)("div", {
            className: Zu()(ED.compass, t),
            children: [(0,
            z.jsx)("div", {
                className: ED.north,
                children: "N"
            }), (0,
            z.jsx)("img", {
                src: "Media/Editor/CompassNeedle.svg",
                className: ED.needle,
                style: {
                    transform: `rotate(${e}deg)`
                }
            })]
        });
        X.add("game-ui/editor/widgets/compass/compass.tsx", {
            get BoundCompass() {
                return ID
            },
            set BoundCompass(e) {
                ID = e
            },
            get Compass() {
                return SD
            },
            set Compass(e) {
                SD = e
            }
        });
        let yD = {
            divider: "divider_FEz"
        };
        X.add("game-ui/editor/widgets/divider/divider.module.scss", {
            get classes() {
                return yD
            },
            set classes(e) {
                Object.assign(yD, e)
            }
        });
        const jD = yD;
        var CD = ()=>(0,
        z.jsx)("div", {
            className: jD.divider
        });
        X.add("game-ui/editor/widgets/divider/divider.tsx", {
            get Divider() {
                return CD
            },
            set Divider(e) {
                CD = e
            }
        });
        var ND = (0,
        Y.createContext)({})
          , wD = ()=>(0,
        Y.useContext)(ND);
        X.add("game-ui/common/svg/svg-context.ts", {
            get SVGContext() {
                return ND
            },
            set SVGContext(e) {
                ND = e
            },
            get useSVG() {
                return wD
            },
            set useSVG(e) {
                wD = e
            }
        });
        const OD = {
            x: 0,
            y: 0
        };
        var PD = (e,t,n)=>{
            const {events: {bindElement: s}, viewport: i} = wD()
              , {onDrag: a, onWindowMouseMove: o} = e
              , r = (0,
            Y.useRef)(!1)
              , [l,c] = (0,
            Y.useState)(!1)
              , [u,d] = (0,
            Y.useState)(!1)
              , m = (0,
            Y.useRef)(i);
            m.current = i,
            (0,
            Y.useEffect)((()=>{
                if (!e)
                    return;
                const i = {
                    ...e
                }
                  , a = i.onMouseDown;
                if (i.onMouseDown = (e,t)=>{
                    OD.x = e.clientX,
                    OD.y = e.clientY,
                    a?.(e, t)
                }
                ,
                i.onDrag) {
                    const e = i.onMouseDown;
                    i.onMouseDown = (t,n)=>{
                        e?.(t, n),
                        n && 0 === t.button && !t.propagationStopped && (t.propagationStopped = !0,
                        c(!0))
                    }
                }
                if (i.onMouseMove || n) {
                    const e = i.onMouseMove
                      , t = i.onMouseEnter
                      , n = i.onMouseLeave;
                    i.onMouseMove = (s,i)=>{
                        i ? r.current || (t?.(s),
                        r.current = !0,
                        d(!0)) : r.current && (n?.(s),
                        r.current = !1,
                        d(!1)),
                        e?.(s, i)
                    }
                }
                if (i.onSelect || i.onClick || i.onDrag) {
                    const e = i.onClick;
                    i.onClick = (t,n)=>{
                        n && !t.propagationStopped && t.clientX === OD.x && t.clientY === OD.y && (t.propagationStopped = !0,
                        i.onSelect?.(t),
                        e?.(t))
                    }
                }
                return s(i, t)
            }
            ), [s, t, n, e]),
            (0,
            Y.useEffect)((()=>{
                if (l) {
                    const e = e=>{
                        const n = m.current;
                        if (e.buttons > 0 && n) {
                            const t = n.posFromMouse(e)
                              , s = n.pointFromPos(t);
                            a?.({
                                point: s,
                                position: t,
                                shiftKey: e.shiftKey,
                                ctrlKey: e.ctrlKey,
                                altKey: e.altKey
                            })
                        } else
                            t()
                    }
                      , t = ()=>{
                        requestAnimationFrame((()=>{
                            c(!1),
                            document.removeEventListener("mousemove", e),
                            document.removeEventListener("mouseup", t)
                        }
                        ))
                    }
                    ;
                    return document.addEventListener("mousemove", e),
                    document.addEventListener("mouseup", t),
                    ()=>{
                        document.removeEventListener("mousemove", e),
                        document.removeEventListener("mouseup", t)
                    }
                }
            }
            ), [l, a]),
            (0,
            Y.useEffect)((()=>{
                if (o) {
                    const e = e=>{
                        const t = m.current;
                        if (t) {
                            const n = t.posFromMouse(e)
                              , s = t.pointFromPos(n);
                            o({
                                ...e,
                                point: s,
                                position: n,
                                shiftKey: e.shiftKey,
                                ctrlKey: e.ctrlKey,
                                altKey: e.altKey
                            })
                        }
                    }
                    ;
                    return document.addEventListener("mousemove", e),
                    ()=>{
                        document.removeEventListener("mousemove", e)
                    }
                }
            }
            ), [o]),
            (0,
            Y.useEffect)((()=>{
                const t = !!(e.focused || e.selected || u);
                n?.(t)
            }
            ), [u, n, e.focused, e.selected])
        }
        ;
        X.add("game-ui/common/svg/utils/use-svg-event-handling.ts", {
            get useSVGEventHandling() {
                return PD
            },
            set useSVGEventHandling(e) {
                PD = e
            }
        });
        var LD = (0,
        Y.forwardRef)((function({interaction: e, viewport: t, children: n, ...s}, i) {
            PD(s);
            const {onWindowMouseMove: a, ...o} = s
              , r = `0 0 ${t?.size.width} ${t?.size.height}`;
            return (0,
            z.jsx)("svg", {
                ref: i,
                width: "100%",
                height: "100%",
                viewBox: r,
                ...o,
                ...e.bindings,
                children: n
            })
        }
        ));
        X.add("game-ui/common/svg/elements/svg.tsx", {
            get SVGcomponent() {
                return LD
            },
            set SVGcomponent(e) {
                LD = e
            }
        });
        var AD = ["onClick", "onContextMenu", "onDoubleClick", "onMouseDown", "onMouseEnter", "onMouseLeave", "onMouseMove", "onMouseOut", "onMouseOver", "onMouseUp"];
        X.add("game-ui/common/svg/types.ts", {
            get INTERACTION_EVENTS() {
                return AD
            },
            set INTERACTION_EVENTS(e) {
                AD = e
            }
        });
        var MD = ()=>{
            const e = (0,
            Y.useRef)();
            return (0,
            Y.useMemo)((()=>{
                const t = {}
                  , n = (n,s)=>{
                    if (e.current) {
                        const i = {
                            ...s,
                            position: e.current.posFromMouse(s),
                            point: e.current.pointFromMouse(s)
                        };
                        [...t[n] || []]?.forEach((e=>e(i)))
                    }
                }
                ;
                return {
                    events: {
                        bindElement: (n,s)=>{
                            const i = [];
                            return Object.entries(n).forEach((([n,a])=>{
                                if (AD.includes(n)) {
                                    const o = t=>{
                                        if (e.current) {
                                            const n = !s || s(e.current?.posFromMouse(t), t);
                                            t.propagationStopped || "function" != typeof a || a(t, n)
                                        }
                                    }
                                    ;
                                    ((e,n)=>{
                                        t[e] = t[e] ? [...t[e], n] : [n]
                                    }
                                    )(n, o),
                                    i.push([n, o])
                                }
                            }
                            )),
                            ()=>{
                                i.forEach((([e,n])=>{
                                    return i = n,
                                    void t[s = e].splice(t[s].indexOf(i), 1);
                                    var s, i
                                }
                                ))
                            }
                        }
                    },
                    bindings: {
                        onWheel: e=>n("onWheel", e),
                        onClick: e=>n("onClick", e),
                        onDoubleClick: e=>n("onDoubleClick", e),
                        onMouseDown: e=>n("onMouseDown", e),
                        onMouseUp: e=>n("onMouseUp", e),
                        onMouseMove: e=>n("onMouseMove", e)
                    },
                    updateViewport: t=>{
                        e.current = t
                    }
                }
            }
            ), [])
        }
        ;
        X.add("game-ui/common/svg/use-svg-interaction.tsx", {
            get useSVGInteraction() {
                return MD
            },
            set useSVGInteraction(e) {
                MD = e
            }
        });
        var RD = (e,t,n,s)=>{
            let i, a, o, r;
            if ("number" == typeof e ? i = a = o = r = t(e) : "x"in e ? (i = o = t(e.y),
            r = a = t(e.x)) : (i = t(e.top),
            a = t(e.right),
            o = t(e.bottom),
            r = t(e.left)),
            r + a >= n || i + o >= s)
                throw new Error("SVG paddings on given axis can't add up to more than the width or height of svg");
            return {
                top: i,
                right: a,
                bottom: o,
                left: r
            }
        }
        ;
        X.add("game-ui/common/svg/utils/parse-paddings.ts", {
            get parsePadding() {
                return RD
            },
            set parsePadding(e) {
                RD = e
            }
        });
        var kD = e=>(...t)=>2 === t.length ? e({
            x: t[0],
            y: t[1]
        }) : e(t[0]);
        X.add("game-ui/common/svg/utils/point-conversion.ts", {
            get createPointConversion() {
                return kD
            },
            set createPointConversion(e) {
                kD = e
            }
        });
        const DD = {
            x: 0,
            y: 0
        };
        var FD = (e,t,n)=>{
            const [s,i] = (0,
            Y.useState)(DD);
            (0,
            Y.useEffect)((()=>{
                if (e.current && t) {
                    const n = e.current;
                    let s, a = {
                        x: 0,
                        y: 0
                    };
                    const o = e=>{
                        const n = e.shiftKey ? 2 : e.ctrlKey ? .5 : 1;
                        i((i=>{
                            s = s || i;
                            return {
                                x: "y" === t ? 0 : s.x + (a.x - e.x) * n,
                                y: "x" === t ? 0 : s.y + (a.y - e.y) * n
                            }
                        }
                        ))
                    }
                      , r = e=>{
                        if (1 === e.button) {
                            a = e;
                            const t = ()=>{
                                s = void 0,
                                window.removeEventListener("mousemove", o),
                                window.removeEventListener("mouseup", o)
                            }
                            ;
                            window.addEventListener("mousemove", o),
                            window.addEventListener("mouseup", t)
                        }
                    }
                    ;
                    return n.addEventListener("mousedown", r),
                    ()=>{
                        n.removeEventListener("mousedown", r)
                    }
                }
            }
            ), [t, e]);
            const a = (0,
            Y.useCallback)((()=>i(DD)), []);
            return C_((0,
            Y.useCallback)((async()=>{
                if (n) {
                    const e = await n()
                      , s = "y" === t ? 0 : e.x
                      , a = "x" === t ? 0 : e.y;
                    i((e=>({
                        x: e.x + 2 * s,
                        y: e.y + 2 * a
                    })))
                }
            }
            ), [n, t]), t && void 0 !== n),
            (0,
            Y.useMemo)((()=>[t ? s : DD, a]), [s, t, a])
        }
        ;
        X.add("game-ui/common/svg/utils/use-pan.ts", {
            get usePan() {
                return FD
            },
            set usePan(e) {
                FD = e
            }
        });
        const UD = {
            x: 1,
            y: 1
        };
        var BD = (e,t,n,s)=>{
            const [i,a] = (0,
            Y.useState)(UD)
              , o = (0,
            Y.useRef)(t)
              , r = (0,
            Y.useCallback)(((e,t,s,i,o=!1)=>{
                a((a=>{
                    let r = a.x
                      , l = a.y;
                    if ("y" !== n && !s)
                        if (o)
                            r = a.x + 10 * e;
                        else {
                            const n = e || t;
                            r = a.x + .25 * Math.sign(n)
                        }
                    "x" === n || i || (l = o ? a.y + 10 * t : a.y + .25 * Math.sign(t));
                    const c = {
                        x: Math.min(100, Math.max(.1, r)),
                        y: Math.min(100, Math.max(.1, l))
                    };
                    return c.x === a.x && c.y === a.y ? a : c
                }
                ))
            }
            ), [n])
              , l = (0,
            Y.useCallback)((()=>a(UD)), []);
            (0,
            Y.useEffect)((()=>{
                if (n) {
                    const t = e.current
                      , n = e=>{
                        e.preventDefault(),
                        r(e.deltaX, e.deltaY, e.ctrlKey, e.shiftKey)
                    }
                    ;
                    return t?.addEventListener("wheel", n),
                    ()=>{
                        t?.removeEventListener("wheel", n)
                    }
                }
            }
            ), [r, e, n]);
            return C_((0,
            Y.useCallback)((async()=>{
                if (s) {
                    const e = await s();
                    r(e.x, e.y, !1, !1, !0)
                }
            }
            ), [r, s]), n && void 0 !== s),
            (0,
            Y.useMemo)((()=>{
                let n = e.current ? ((e,t)=>{
                    const n = (e.max.x - e.min.x) / 2 * t.x
                      , s = (e.max.x + e.min.x) / 2
                      , i = (e.max.y - e.min.y) / 2 * t.y
                      , a = (e.max.y + e.min.y) / 2;
                    return {
                        min: {
                            x: s - n,
                            y: a - i
                        },
                        max: {
                            x: s + n,
                            y: a + i
                        }
                    }
                }
                )(t, i) : t;
                return Kr(o.current, n, 2) ? n = o.current : o.current = n,
                [n, l]
            }
            ), [t, l, e, i])
        }
        ;
        X.add("game-ui/common/svg/utils/use-zoom-bounds.ts", {
            get useZoomBounds() {
                return BD
            },
            set useZoomBounds(e) {
                BD = e
            }
        });
        const GD = 0;
        var VD = (e,t)=>{
            const [n,s] = (0,
            Y.useState)()
              , [i,a] = BD(e, t.bounds, t?.zoomable, t.zoomCallback)
              , [o,r] = FD(e, t.panable, t.panCallback)
              , l = Hm()
              , c = gm(e)
              , {padding: u=GD, inverted: d=!0} = t || {}
              , m = (0,
            Y.useCallback)((()=>{
                a(),
                r()
            }
            ), [a, r]);
            return (0,
            Y.useEffect)((()=>{
                if (!c || !c.width || !c.height)
                    return;
                const e = e=>e * l
                  , {width: t, height: n} = c
                  , a = RD(u, e, t, n);
                let r = i || {
                    min: {
                        x: 0,
                        y: 0
                    },
                    max: {
                        x: t,
                        y: n
                    }
                };
                const h = (t - (a.left + a.right)) / (r.max.x - r.min.x)
                  , g = (n - (a.top + a.bottom)) / (r.max.y - r.min.y);
                if (o && (o.x || o.y)) {
                    const e = {
                        x: o.x / h,
                        y: o.y / g * (d ? -1 : 1)
                    };
                    r = {
                        min: {
                            x: r.min.x + e.x,
                            y: r.min.y + e.y
                        },
                        max: {
                            x: r.max.x + e.x,
                            y: r.max.y + e.y
                        }
                    }
                }
                const p = {
                    x: c.x,
                    y: c.y
                }
                  , f = e=>a.left + (e - r.min.x) * h
                  , x = e=>a.bottom + (e - r.min.y) * g
                  , v = kD((e=>({
                    x: f(e.x),
                    y: x(e.y)
                })))
                  , _ = e=>(e - a.left) / h + r.min.x
                  , b = e=>(e - a.bottom) / g + r.min.y
                  , T = kD((e=>({
                    x: _(e.x),
                    y: b(e.y)
                })))
                  , E = e=>e / h
                  , I = e=>e / g
                  , S = kD((e=>({
                    x: E(e.x),
                    y: I(e.y)
                })))
                  , y = e=>e * h
                  , j = e=>e * g
                  , C = kD((e=>({
                    x: y(e.x),
                    y: j(e.y)
                })))
                  , N = e=>({
                    x: e.clientX - p.x,
                    y: d ? n - (e.clientY - p.y) : e.clientY - p.y
                });
                s({
                    size: {
                        width: t,
                        height: n
                    },
                    bounds: r,
                    offset: p,
                    inverted: d,
                    padding: a,
                    px: _,
                    py: b,
                    vx: f,
                    vy: x,
                    sx: E,
                    sy: I,
                    svx: y,
                    svy: j,
                    rem: e,
                    posFromPoint: v,
                    pointFromPos: T,
                    posFromMouse: N,
                    pointFromMouse: e=>T(N(e)),
                    scaleToPoint: S,
                    scaleToViewport: C,
                    resetViewport: m
                })
            }
            ), [i, u, d, o, l, m, c]),
            n
        }
        ;
        X.add("game-ui/common/svg/use-svg-setup.tsx", {
            get useSVGSetup() {
                return VD
            },
            set useSVGSetup(e) {
                VD = e
            }
        });
        const HD = (0,
        Y.createContext)({
            registerSVGContext: ()=>{}
        });
        var KD = ({children: e})=>{
            const [t,n] = (0,
            Y.useState)()
              , {registerSVGContext: s} = WD();
            return (0,
            Y.useEffect)((()=>{
                t && s && s(t)
            }
            ), [t, s]),
            (0,
            z.jsx)(HD.Provider, {
                value: {
                    registerSVGContext: n,
                    svg: t
                },
                children: e
            })
        }
          , WD = ()=>(0,
        Y.useContext)(HD);
        X.add("game-ui/common/svg/utils/svg-parent-context.tsx", {
            get SVGParentContextProvider() {
                return KD
            },
            set SVGParentContextProvider(e) {
                KD = e
            },
            get useSVGParent() {
                return WD
            },
            set useSVGParent(e) {
                WD = e
            }
        });
        const zD = {
            min: {
                x: 0,
                y: 0
            },
            max: {
                x: 1,
                y: 1
            }
        };
        var YD = ({inverted: e=!0, children: t, bounds: n=zD, zoomable: s, panable: i, padding: a, zoomCallback: o, panCallback: r, ...l})=>{
            const c = (0,
            Y.useRef)(null)
              , u = VD(c, {
                bounds: n,
                inverted: e,
                padding: a,
                zoomable: s,
                panable: i,
                zoomCallback: o,
                panCallback: r
            })
              , d = MD()
              , {registerSVGContext: m} = WD();
            (0,
            Y.useEffect)((()=>{
                d.updateViewport(u)
            }
            ), [d, u]);
            const h = (0,
            Y.useMemo)((()=>{
                const e = {
                    viewport: u,
                    events: d.events
                };
                return requestAnimationFrame((()=>m(e))),
                e
            }
            ), [u, d, m])
              , g = e ? `translate(0 ${u?.size.height}) scale(1 -1)` : "";
            return (0,
            z.jsx)(ND.Provider, {
                value: h,
                children: (0,
                z.jsx)(LD, {
                    interaction: d,
                    viewport: u,
                    ref: c,
                    ...l,
                    children: !!h.viewport && (0,
                    z.jsx)("g", {
                        transform: g,
                        children: t
                    })
                })
            })
        }
        ;
        X.add("game-ui/common/svg/svg.tsx", {
            get SVG() {
                return YD
            },
            set SVG(e) {
                YD = e
            }
        }),
        X.add("game-ui/common/svg/index.ts", {});
        const $D = Math.sqrt(50)
          , qD = Math.sqrt(10)
          , XD = Math.sqrt(2);
        function QD(e, t, n) {
            const s = (t - e) / Math.max(0, n)
              , i = Math.floor(Math.log10(s))
              , a = s / Math.pow(10, i)
              , o = a >= $D ? 10 : a >= qD ? 5 : a >= XD ? 2 : 1;
            let r, l, c;
            return i < 0 ? (c = Math.pow(10, -i) / o,
            r = Math.round(e * c),
            l = Math.round(t * c),
            r / c < e && ++r,
            l / c > t && --l,
            c = -c) : (c = Math.pow(10, i) * o,
            r = Math.round(e / c),
            l = Math.round(t / c),
            r * c < e && ++r,
            l * c > t && --l),
            l < r && .5 <= n && n < 2 ? QD(e, t, 2 * n) : [r, l, c]
        }
        function ZD(e, t, n) {
            return QD(e = +e, t = +t, n = +n)[2]
        }
        function JD(e, t) {
            return null == e || null == t ? NaN : e < t ? -1 : e > t ? 1 : e >= t ? 0 : NaN
        }
        function eF(e, t) {
            return null == e || null == t ? NaN : t < e ? -1 : t > e ? 1 : t >= e ? 0 : NaN
        }
        function tF(e) {
            let t, n, s;
            function i(e, s, i=0, a=e.length) {
                if (i < a) {
                    if (0 !== t(s, s))
                        return a;
                    do {
                        const t = i + a >>> 1;
                        n(e[t], s) < 0 ? i = t + 1 : a = t
                    } while (i < a)
                }
                return i
            }
            return 2 !== e.length ? (t = JD,
            n = (t,n)=>JD(e(t), n),
            s = (t,n)=>e(t) - n) : (t = e === JD || e === eF ? e : nF,
            n = e,
            s = e),
            {
                left: i,
                center: function(e, t, n=0, a=e.length) {
                    const o = i(e, t, n, a - 1);
                    return o > n && s(e[o - 1], t) > -s(e[o], t) ? o - 1 : o
                },
                right: function(e, s, i=0, a=e.length) {
                    if (i < a) {
                        if (0 !== t(s, s))
                            return a;
                        do {
                            const t = i + a >>> 1;
                            n(e[t], s) <= 0 ? i = t + 1 : a = t
                        } while (i < a)
                    }
                    return i
                }
            }
        }
        function nF() {
            return 0
        }
        const sF = tF(JD)
          , iF = sF.right
          , aF = (sF.left,
        tF((function(e) {
            return null === e ? NaN : +e
        }
        )).center,
        iF);
        function oF(e, t, n) {
            e.prototype = t.prototype = n,
            n.constructor = e
        }
        function rF(e, t) {
            var n = Object.create(e.prototype);
            for (var s in t)
                n[s] = t[s];
            return n
        }
        function lF() {}
        var cF = .7
          , uF = 1 / cF
          , dF = "\\s*([+-]?\\d+)\\s*"
          , mF = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*"
          , hF = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*"
          , gF = /^#([0-9a-f]{3,8})$/
          , pF = new RegExp(`^rgb\\(${dF},${dF},${dF}\\)$`)
          , fF = new RegExp(`^rgb\\(${hF},${hF},${hF}\\)$`)
          , xF = new RegExp(`^rgba\\(${dF},${dF},${dF},${mF}\\)$`)
          , vF = new RegExp(`^rgba\\(${hF},${hF},${hF},${mF}\\)$`)
          , _F = new RegExp(`^hsl\\(${mF},${hF},${hF}\\)$`)
          , bF = new RegExp(`^hsla\\(${mF},${hF},${hF},${mF}\\)$`)
          , TF = {
            aliceblue: 15792383,
            antiquewhite: 16444375,
            aqua: 65535,
            aquamarine: 8388564,
            azure: 15794175,
            beige: 16119260,
            bisque: 16770244,
            black: 0,
            blanchedalmond: 16772045,
            blue: 255,
            blueviolet: 9055202,
            brown: 10824234,
            burlywood: 14596231,
            cadetblue: 6266528,
            chartreuse: 8388352,
            chocolate: 13789470,
            coral: 16744272,
            cornflowerblue: 6591981,
            cornsilk: 16775388,
            crimson: 14423100,
            cyan: 65535,
            darkblue: 139,
            darkcyan: 35723,
            darkgoldenrod: 12092939,
            darkgray: 11119017,
            darkgreen: 25600,
            darkgrey: 11119017,
            darkkhaki: 12433259,
            darkmagenta: 9109643,
            darkolivegreen: 5597999,
            darkorange: 16747520,
            darkorchid: 10040012,
            darkred: 9109504,
            darksalmon: 15308410,
            darkseagreen: 9419919,
            darkslateblue: 4734347,
            darkslategray: 3100495,
            darkslategrey: 3100495,
            darkturquoise: 52945,
            darkviolet: 9699539,
            deeppink: 16716947,
            deepskyblue: 49151,
            dimgray: 6908265,
            dimgrey: 6908265,
            dodgerblue: 2003199,
            firebrick: 11674146,
            floralwhite: 16775920,
            forestgreen: 2263842,
            fuchsia: 16711935,
            gainsboro: 14474460,
            ghostwhite: 16316671,
            gold: 16766720,
            goldenrod: 14329120,
            gray: 8421504,
            green: 32768,
            greenyellow: 11403055,
            grey: 8421504,
            honeydew: 15794160,
            hotpink: 16738740,
            indianred: 13458524,
            indigo: 4915330,
            ivory: 16777200,
            khaki: 15787660,
            lavender: 15132410,
            lavenderblush: 16773365,
            lawngreen: 8190976,
            lemonchiffon: 16775885,
            lightblue: 11393254,
            lightcoral: 15761536,
            lightcyan: 14745599,
            lightgoldenrodyellow: 16448210,
            lightgray: 13882323,
            lightgreen: 9498256,
            lightgrey: 13882323,
            lightpink: 16758465,
            lightsalmon: 16752762,
            lightseagreen: 2142890,
            lightskyblue: 8900346,
            lightslategray: 7833753,
            lightslategrey: 7833753,
            lightsteelblue: 11584734,
            lightyellow: 16777184,
            lime: 65280,
            limegreen: 3329330,
            linen: 16445670,
            magenta: 16711935,
            maroon: 8388608,
            mediumaquamarine: 6737322,
            mediumblue: 205,
            mediumorchid: 12211667,
            mediumpurple: 9662683,
            mediumseagreen: 3978097,
            mediumslateblue: 8087790,
            mediumspringgreen: 64154,
            mediumturquoise: 4772300,
            mediumvioletred: 13047173,
            midnightblue: 1644912,
            mintcream: 16121850,
            mistyrose: 16770273,
            moccasin: 16770229,
            navajowhite: 16768685,
            navy: 128,
            oldlace: 16643558,
            olive: 8421376,
            olivedrab: 7048739,
            orange: 16753920,
            orangered: 16729344,
            orchid: 14315734,
            palegoldenrod: 15657130,
            palegreen: 10025880,
            paleturquoise: 11529966,
            palevioletred: 14381203,
            papayawhip: 16773077,
            peachpuff: 16767673,
            peru: 13468991,
            pink: 16761035,
            plum: 14524637,
            powderblue: 11591910,
            purple: 8388736,
            rebeccapurple: 6697881,
            red: 16711680,
            rosybrown: 12357519,
            royalblue: 4286945,
            saddlebrown: 9127187,
            salmon: 16416882,
            sandybrown: 16032864,
            seagreen: 3050327,
            seashell: 16774638,
            sienna: 10506797,
            silver: 12632256,
            skyblue: 8900331,
            slateblue: 6970061,
            slategray: 7372944,
            slategrey: 7372944,
            snow: 16775930,
            springgreen: 65407,
            steelblue: 4620980,
            tan: 13808780,
            teal: 32896,
            thistle: 14204888,
            tomato: 16737095,
            turquoise: 4251856,
            violet: 15631086,
            wheat: 16113331,
            white: 16777215,
            whitesmoke: 16119285,
            yellow: 16776960,
            yellowgreen: 10145074
        };
        function EF() {
            return this.rgb().formatHex()
        }
        function IF() {
            return this.rgb().formatRgb()
        }
        function SF(e) {
            var t, n;
            return e = (e + "").trim().toLowerCase(),
            (t = gF.exec(e)) ? (n = t[1].length,
            t = parseInt(t[1], 16),
            6 === n ? yF(t) : 3 === n ? new NF(t >> 8 & 15 | t >> 4 & 240,t >> 4 & 15 | 240 & t,(15 & t) << 4 | 15 & t,1) : 8 === n ? jF(t >> 24 & 255, t >> 16 & 255, t >> 8 & 255, (255 & t) / 255) : 4 === n ? jF(t >> 12 & 15 | t >> 8 & 240, t >> 8 & 15 | t >> 4 & 240, t >> 4 & 15 | 240 & t, ((15 & t) << 4 | 15 & t) / 255) : null) : (t = pF.exec(e)) ? new NF(t[1],t[2],t[3],1) : (t = fF.exec(e)) ? new NF(255 * t[1] / 100,255 * t[2] / 100,255 * t[3] / 100,1) : (t = xF.exec(e)) ? jF(t[1], t[2], t[3], t[4]) : (t = vF.exec(e)) ? jF(255 * t[1] / 100, 255 * t[2] / 100, 255 * t[3] / 100, t[4]) : (t = _F.exec(e)) ? MF(t[1], t[2] / 100, t[3] / 100, 1) : (t = bF.exec(e)) ? MF(t[1], t[2] / 100, t[3] / 100, t[4]) : TF.hasOwnProperty(e) ? yF(TF[e]) : "transparent" === e ? new NF(NaN,NaN,NaN,0) : null
        }
        function yF(e) {
            return new NF(e >> 16 & 255,e >> 8 & 255,255 & e,1)
        }
        function jF(e, t, n, s) {
            return s <= 0 && (e = t = n = NaN),
            new NF(e,t,n,s)
        }
        function CF(e, t, n, s) {
            return 1 === arguments.length ? ((i = e)instanceof lF || (i = SF(i)),
            i ? new NF((i = i.rgb()).r,i.g,i.b,i.opacity) : new NF) : new NF(e,t,n,null == s ? 1 : s);
            var i
        }
        function NF(e, t, n, s) {
            this.r = +e,
            this.g = +t,
            this.b = +n,
            this.opacity = +s
        }
        function wF() {
            return `#${AF(this.r)}${AF(this.g)}${AF(this.b)}`
        }
        function OF() {
            const e = PF(this.opacity);
            return `${1 === e ? "rgb(" : "rgba("}${LF(this.r)}, ${LF(this.g)}, ${LF(this.b)}${1 === e ? ")" : `, ${e})`}`
        }
        function PF(e) {
            return isNaN(e) ? 1 : Math.max(0, Math.min(1, e))
        }
        function LF(e) {
            return Math.max(0, Math.min(255, Math.round(e) || 0))
        }
        function AF(e) {
            return ((e = LF(e)) < 16 ? "0" : "") + e.toString(16)
        }
        function MF(e, t, n, s) {
            return s <= 0 ? e = t = n = NaN : n <= 0 || n >= 1 ? e = t = NaN : t <= 0 && (e = NaN),
            new kF(e,t,n,s)
        }
        function RF(e) {
            if (e instanceof kF)
                return new kF(e.h,e.s,e.l,e.opacity);
            if (e instanceof lF || (e = SF(e)),
            !e)
                return new kF;
            if (e instanceof kF)
                return e;
            var t = (e = e.rgb()).r / 255
              , n = e.g / 255
              , s = e.b / 255
              , i = Math.min(t, n, s)
              , a = Math.max(t, n, s)
              , o = NaN
              , r = a - i
              , l = (a + i) / 2;
            return r ? (o = t === a ? (n - s) / r + 6 * (n < s) : n === a ? (s - t) / r + 2 : (t - n) / r + 4,
            r /= l < .5 ? a + i : 2 - a - i,
            o *= 60) : r = l > 0 && l < 1 ? 0 : o,
            new kF(o,r,l,e.opacity)
        }
        function kF(e, t, n, s) {
            this.h = +e,
            this.s = +t,
            this.l = +n,
            this.opacity = +s
        }
        function DF(e) {
            return (e = (e || 0) % 360) < 0 ? e + 360 : e
        }
        function FF(e) {
            return Math.max(0, Math.min(1, e || 0))
        }
        function UF(e, t, n) {
            return 255 * (e < 60 ? t + (n - t) * e / 60 : e < 180 ? n : e < 240 ? t + (n - t) * (240 - e) / 60 : t)
        }
        function BF(e, t, n, s, i) {
            var a = e * e
              , o = a * e;
            return ((1 - 3 * e + 3 * a - o) * t + (4 - 6 * a + 3 * o) * n + (1 + 3 * e + 3 * a - 3 * o) * s + o * i) / 6
        }
        oF(lF, SF, {
            copy(e) {
                return Object.assign(new this.constructor, this, e)
            },
            displayable() {
                return this.rgb().displayable()
            },
            hex: EF,
            formatHex: EF,
            formatHex8: function() {
                return this.rgb().formatHex8()
            },
            formatHsl: function() {
                return RF(this).formatHsl()
            },
            formatRgb: IF,
            toString: IF
        }),
        oF(NF, CF, rF(lF, {
            brighter(e) {
                return e = null == e ? uF : Math.pow(uF, e),
                new NF(this.r * e,this.g * e,this.b * e,this.opacity)
            },
            darker(e) {
                return e = null == e ? cF : Math.pow(cF, e),
                new NF(this.r * e,this.g * e,this.b * e,this.opacity)
            },
            rgb() {
                return this
            },
            clamp() {
                return new NF(LF(this.r),LF(this.g),LF(this.b),PF(this.opacity))
            },
            displayable() {
                return -.5 <= this.r && this.r < 255.5 && -.5 <= this.g && this.g < 255.5 && -.5 <= this.b && this.b < 255.5 && 0 <= this.opacity && this.opacity <= 1
            },
            hex: wF,
            formatHex: wF,
            formatHex8: function() {
                return `#${AF(this.r)}${AF(this.g)}${AF(this.b)}${AF(255 * (isNaN(this.opacity) ? 1 : this.opacity))}`
            },
            formatRgb: OF,
            toString: OF
        })),
        oF(kF, (function(e, t, n, s) {
            return 1 === arguments.length ? RF(e) : new kF(e,t,n,null == s ? 1 : s)
        }
        ), rF(lF, {
            brighter(e) {
                return e = null == e ? uF : Math.pow(uF, e),
                new kF(this.h,this.s,this.l * e,this.opacity)
            },
            darker(e) {
                return e = null == e ? cF : Math.pow(cF, e),
                new kF(this.h,this.s,this.l * e,this.opacity)
            },
            rgb() {
                var e = this.h % 360 + 360 * (this.h < 0)
                  , t = isNaN(e) || isNaN(this.s) ? 0 : this.s
                  , n = this.l
                  , s = n + (n < .5 ? n : 1 - n) * t
                  , i = 2 * n - s;
                return new NF(UF(e >= 240 ? e - 240 : e + 120, i, s),UF(e, i, s),UF(e < 120 ? e + 240 : e - 120, i, s),this.opacity)
            },
            clamp() {
                return new kF(DF(this.h),FF(this.s),FF(this.l),PF(this.opacity))
            },
            displayable() {
                return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1
            },
            formatHsl() {
                const e = PF(this.opacity);
                return `${1 === e ? "hsl(" : "hsla("}${DF(this.h)}, ${100 * FF(this.s)}%, ${100 * FF(this.l)}%${1 === e ? ")" : `, ${e})`}`
            }
        }));
        const GF = e=>()=>e;
        function VF(e, t) {
            return function(n) {
                return e + n * t
            }
        }
        function HF(e) {
            return 1 == (e = +e) ? KF : function(t, n) {
                return n - t ? function(e, t, n) {
                    return e = Math.pow(e, n),
                    t = Math.pow(t, n) - e,
                    n = 1 / n,
                    function(s) {
                        return Math.pow(e + s * t, n)
                    }
                }(t, n, e) : GF(isNaN(t) ? n : t)
            }
        }
        function KF(e, t) {
            var n = t - e;
            return n ? VF(e, n) : GF(isNaN(e) ? t : e)
        }
        const WF = function e(t) {
            var n = HF(t);
            function s(e, t) {
                var s = n((e = CF(e)).r, (t = CF(t)).r)
                  , i = n(e.g, t.g)
                  , a = n(e.b, t.b)
                  , o = KF(e.opacity, t.opacity);
                return function(t) {
                    return e.r = s(t),
                    e.g = i(t),
                    e.b = a(t),
                    e.opacity = o(t),
                    e + ""
                }
            }
            return s.gamma = e,
            s
        }(1);
        function zF(e) {
            return function(t) {
                var n, s, i = t.length, a = new Array(i), o = new Array(i), r = new Array(i);
                for (n = 0; n < i; ++n)
                    s = CF(t[n]),
                    a[n] = s.r || 0,
                    o[n] = s.g || 0,
                    r[n] = s.b || 0;
                return a = e(a),
                o = e(o),
                r = e(r),
                s.opacity = 1,
                function(e) {
                    return s.r = a(e),
                    s.g = o(e),
                    s.b = r(e),
                    s + ""
                }
            }
        }
        zF((function(e) {
            var t = e.length - 1;
            return function(n) {
                var s = n <= 0 ? n = 0 : n >= 1 ? (n = 1,
                t - 1) : Math.floor(n * t)
                  , i = e[s]
                  , a = e[s + 1]
                  , o = s > 0 ? e[s - 1] : 2 * i - a
                  , r = s < t - 1 ? e[s + 2] : 2 * a - i;
                return BF((n - s / t) * t, o, i, a, r)
            }
        }
        )),
        zF((function(e) {
            var t = e.length;
            return function(n) {
                var s = Math.floor(((n %= 1) < 0 ? ++n : n) * t)
                  , i = e[(s + t - 1) % t]
                  , a = e[s % t]
                  , o = e[(s + 1) % t]
                  , r = e[(s + 2) % t];
                return BF((n - s / t) * t, i, a, o, r)
            }
        }
        ));
        function YF(e, t) {
            var n, s = t ? t.length : 0, i = e ? Math.min(s, e.length) : 0, a = new Array(i), o = new Array(s);
            for (n = 0; n < i; ++n)
                a[n] = tU(e[n], t[n]);
            for (; n < s; ++n)
                o[n] = t[n];
            return function(e) {
                for (n = 0; n < i; ++n)
                    o[n] = a[n](e);
                return o
            }
        }
        function $F(e, t) {
            var n = new Date;
            return e = +e,
            t = +t,
            function(s) {
                return n.setTime(e * (1 - s) + t * s),
                n
            }
        }
        function qF(e, t) {
            return e = +e,
            t = +t,
            function(n) {
                return e * (1 - n) + t * n
            }
        }
        function XF(e, t) {
            var n, s = {}, i = {};
            for (n in null !== e && "object" == typeof e || (e = {}),
            null !== t && "object" == typeof t || (t = {}),
            t)
                n in e ? s[n] = tU(e[n], t[n]) : i[n] = t[n];
            return function(e) {
                for (n in s)
                    i[n] = s[n](e);
                return i
            }
        }
        var QF = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g
          , ZF = new RegExp(QF.source,"g");
        function JF(e, t) {
            var n, s, i, a = QF.lastIndex = ZF.lastIndex = 0, o = -1, r = [], l = [];
            for (e += "",
            t += ""; (n = QF.exec(e)) && (s = ZF.exec(t)); )
                (i = s.index) > a && (i = t.slice(a, i),
                r[o] ? r[o] += i : r[++o] = i),
                (n = n[0]) === (s = s[0]) ? r[o] ? r[o] += s : r[++o] = s : (r[++o] = null,
                l.push({
                    i: o,
                    x: qF(n, s)
                })),
                a = ZF.lastIndex;
            return a < t.length && (i = t.slice(a),
            r[o] ? r[o] += i : r[++o] = i),
            r.length < 2 ? l[0] ? function(e) {
                return function(t) {
                    return e(t) + ""
                }
            }(l[0].x) : function(e) {
                return function() {
                    return e
                }
            }(t) : (t = l.length,
            function(e) {
                for (var n, s = 0; s < t; ++s)
                    r[(n = l[s]).i] = n.x(e);
                return r.join("")
            }
            )
        }
        function eU(e, t) {
            t || (t = []);
            var n, s = e ? Math.min(t.length, e.length) : 0, i = t.slice();
            return function(a) {
                for (n = 0; n < s; ++n)
                    i[n] = e[n] * (1 - a) + t[n] * a;
                return i
            }
        }
        function tU(e, t) {
            var n, s, i = typeof t;
            return null == t || "boolean" === i ? GF(t) : ("number" === i ? qF : "string" === i ? (n = SF(t)) ? (t = n,
            WF) : JF : t instanceof SF ? WF : t instanceof Date ? $F : (s = t,
            !ArrayBuffer.isView(s) || s instanceof DataView ? Array.isArray(t) ? YF : "function" != typeof t.valueOf && "function" != typeof t.toString || isNaN(t) ? XF : qF : eU))(e, t)
        }
        function nU(e, t) {
            return e = +e,
            t = +t,
            function(n) {
                return Math.round(e * (1 - n) + t * n)
            }
        }
        function sU(e) {
            return +e
        }
        var iU = [0, 1];
        function aU(e) {
            return e
        }
        function oU(e, t) {
            return (t -= e = +e) ? function(n) {
                return (n - e) / t
            }
            : (n = isNaN(t) ? NaN : .5,
            function() {
                return n
            }
            );
            var n
        }
        function rU(e, t, n) {
            var s = e[0]
              , i = e[1]
              , a = t[0]
              , o = t[1];
            return i < s ? (s = oU(i, s),
            a = n(o, a)) : (s = oU(s, i),
            a = n(a, o)),
            function(e) {
                return a(s(e))
            }
        }
        function lU(e, t, n) {
            var s = Math.min(e.length, t.length) - 1
              , i = new Array(s)
              , a = new Array(s)
              , o = -1;
            for (e[s] < e[0] && (e = e.slice().reverse(),
            t = t.slice().reverse()); ++o < s; )
                i[o] = oU(e[o], e[o + 1]),
                a[o] = n(t[o], t[o + 1]);
            return function(t) {
                var n = aF(e, t, 1, s) - 1;
                return a[n](i[n](t))
            }
        }
        function cU() {
            var e, t, n, s, i, a, o = iU, r = iU, l = tU, c = aU;
            function u() {
                var e, t, n, l = Math.min(o.length, r.length);
                return c !== aU && (e = o[0],
                t = o[l - 1],
                e > t && (n = e,
                e = t,
                t = n),
                c = function(n) {
                    return Math.max(e, Math.min(t, n))
                }
                ),
                s = l > 2 ? lU : rU,
                i = a = null,
                d
            }
            function d(t) {
                return null == t || isNaN(t = +t) ? n : (i || (i = s(o.map(e), r, l)))(e(c(t)))
            }
            return d.invert = function(n) {
                return c(t((a || (a = s(r, o.map(e), qF)))(n)))
            }
            ,
            d.domain = function(e) {
                return arguments.length ? (o = Array.from(e, sU),
                u()) : o.slice()
            }
            ,
            d.range = function(e) {
                return arguments.length ? (r = Array.from(e),
                u()) : r.slice()
            }
            ,
            d.rangeRound = function(e) {
                return r = Array.from(e),
                l = nU,
                u()
            }
            ,
            d.clamp = function(e) {
                return arguments.length ? (c = !!e || aU,
                u()) : c !== aU
            }
            ,
            d.interpolate = function(e) {
                return arguments.length ? (l = e,
                u()) : l
            }
            ,
            d.unknown = function(e) {
                return arguments.length ? (n = e,
                d) : n
            }
            ,
            function(n, s) {
                return e = n,
                t = s,
                u()
            }
        }
        function uU(e, t) {
            switch (arguments.length) {
            case 0:
                break;
            case 1:
                this.range(e);
                break;
            default:
                this.range(t).domain(e)
            }
            return this
        }
        var dU, mU = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;
        function hU(e) {
            if (!(t = mU.exec(e)))
                throw new Error("invalid format: " + e);
            var t;
            return new gU({
                fill: t[1],
                align: t[2],
                sign: t[3],
                symbol: t[4],
                zero: t[5],
                width: t[6],
                comma: t[7],
                precision: t[8] && t[8].slice(1),
                trim: t[9],
                type: t[10]
            })
        }
        function gU(e) {
            this.fill = void 0 === e.fill ? " " : e.fill + "",
            this.align = void 0 === e.align ? ">" : e.align + "",
            this.sign = void 0 === e.sign ? "-" : e.sign + "",
            this.symbol = void 0 === e.symbol ? "" : e.symbol + "",
            this.zero = !!e.zero,
            this.width = void 0 === e.width ? void 0 : +e.width,
            this.comma = !!e.comma,
            this.precision = void 0 === e.precision ? void 0 : +e.precision,
            this.trim = !!e.trim,
            this.type = void 0 === e.type ? "" : e.type + ""
        }
        function pU(e, t) {
            if ((n = (e = t ? e.toExponential(t - 1) : e.toExponential()).indexOf("e")) < 0)
                return null;
            var n, s = e.slice(0, n);
            return [s.length > 1 ? s[0] + s.slice(2) : s, +e.slice(n + 1)]
        }
        function fU(e) {
            return (e = pU(Math.abs(e))) ? e[1] : NaN
        }
        function xU(e, t) {
            var n = pU(e, t);
            if (!n)
                return e + "";
            var s = n[0]
              , i = n[1];
            return i < 0 ? "0." + new Array(-i).join("0") + s : s.length > i + 1 ? s.slice(0, i + 1) + "." + s.slice(i + 1) : s + new Array(i - s.length + 2).join("0")
        }
        hU.prototype = gU.prototype,
        gU.prototype.toString = function() {
            return this.fill + this.align + this.sign + this.symbol + (this.zero ? "0" : "") + (void 0 === this.width ? "" : Math.max(1, 0 | this.width)) + (this.comma ? "," : "") + (void 0 === this.precision ? "" : "." + Math.max(0, 0 | this.precision)) + (this.trim ? "~" : "") + this.type
        }
        ;
        const vU = {
            "%": (e,t)=>(100 * e).toFixed(t),
            b: e=>Math.round(e).toString(2),
            c: e=>e + "",
            d: function(e) {
                return Math.abs(e = Math.round(e)) >= 1e21 ? e.toLocaleString("en").replace(/,/g, "") : e.toString(10)
            },
            e: (e,t)=>e.toExponential(t),
            f: (e,t)=>e.toFixed(t),
            g: (e,t)=>e.toPrecision(t),
            o: e=>Math.round(e).toString(8),
            p: (e,t)=>xU(100 * e, t),
            r: xU,
            s: function(e, t) {
                var n = pU(e, t);
                if (!n)
                    return e + "";
                var s = n[0]
                  , i = n[1]
                  , a = i - (dU = 3 * Math.max(-8, Math.min(8, Math.floor(i / 3)))) + 1
                  , o = s.length;
                return a === o ? s : a > o ? s + new Array(a - o + 1).join("0") : a > 0 ? s.slice(0, a) + "." + s.slice(a) : "0." + new Array(1 - a).join("0") + pU(e, Math.max(0, t + a - 1))[0]
            },
            X: e=>Math.round(e).toString(16).toUpperCase(),
            x: e=>Math.round(e).toString(16)
        };
        function _U(e) {
            return e
        }
        var bU, TU, EU, IU = Array.prototype.map, SU = ["y", "z", "a", "f", "p", "n", "µ", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"];
        function yU(e) {
            var t, n, s = void 0 === e.grouping || void 0 === e.thousands ? _U : (t = IU.call(e.grouping, Number),
            n = e.thousands + "",
            function(e, s) {
                for (var i = e.length, a = [], o = 0, r = t[0], l = 0; i > 0 && r > 0 && (l + r + 1 > s && (r = Math.max(1, s - l)),
                a.push(e.substring(i -= r, i + r)),
                !((l += r + 1) > s)); )
                    r = t[o = (o + 1) % t.length];
                return a.reverse().join(n)
            }
            ), i = void 0 === e.currency ? "" : e.currency[0] + "", a = void 0 === e.currency ? "" : e.currency[1] + "", o = void 0 === e.decimal ? "." : e.decimal + "", r = void 0 === e.numerals ? _U : function(e) {
                return function(t) {
                    return t.replace(/[0-9]/g, (function(t) {
                        return e[+t]
                    }
                    ))
                }
            }(IU.call(e.numerals, String)), l = void 0 === e.percent ? "%" : e.percent + "", c = void 0 === e.minus ? "−" : e.minus + "", u = void 0 === e.nan ? "NaN" : e.nan + "";
            function d(e) {
                var t = (e = hU(e)).fill
                  , n = e.align
                  , d = e.sign
                  , m = e.symbol
                  , h = e.zero
                  , g = e.width
                  , p = e.comma
                  , f = e.precision
                  , x = e.trim
                  , v = e.type;
                "n" === v ? (p = !0,
                v = "g") : vU[v] || (void 0 === f && (f = 12),
                x = !0,
                v = "g"),
                (h || "0" === t && "=" === n) && (h = !0,
                t = "0",
                n = "=");
                var _ = "$" === m ? i : "#" === m && /[boxX]/.test(v) ? "0" + v.toLowerCase() : ""
                  , b = "$" === m ? a : /[%p]/.test(v) ? l : ""
                  , T = vU[v]
                  , E = /[defgprs%]/.test(v);
                function I(e) {
                    var i, a, l, m = _, I = b;
                    if ("c" === v)
                        I = T(e) + I,
                        e = "";
                    else {
                        var S = (e = +e) < 0 || 1 / e < 0;
                        if (e = isNaN(e) ? u : T(Math.abs(e), f),
                        x && (e = function(e) {
                            e: for (var t, n = e.length, s = 1, i = -1; s < n; ++s)
                                switch (e[s]) {
                                case ".":
                                    i = t = s;
                                    break;
                                case "0":
                                    0 === i && (i = s),
                                    t = s;
                                    break;
                                default:
                                    if (!+e[s])
                                        break e;
                                    i > 0 && (i = 0)
                                }
                            return i > 0 ? e.slice(0, i) + e.slice(t + 1) : e
                        }(e)),
                        S && 0 == +e && "+" !== d && (S = !1),
                        m = (S ? "(" === d ? d : c : "-" === d || "(" === d ? "" : d) + m,
                        I = ("s" === v ? SU[8 + dU / 3] : "") + I + (S && "(" === d ? ")" : ""),
                        E)
                            for (i = -1,
                            a = e.length; ++i < a; )
                                if (48 > (l = e.charCodeAt(i)) || l > 57) {
                                    I = (46 === l ? o + e.slice(i + 1) : e.slice(i)) + I,
                                    e = e.slice(0, i);
                                    break
                                }
                    }
                    p && !h && (e = s(e, 1 / 0));
                    var y = m.length + e.length + I.length
                      , j = y < g ? new Array(g - y + 1).join(t) : "";
                    switch (p && h && (e = s(j + e, j.length ? g - I.length : 1 / 0),
                    j = ""),
                    n) {
                    case "<":
                        e = m + e + I + j;
                        break;
                    case "=":
                        e = m + j + e + I;
                        break;
                    case "^":
                        e = j.slice(0, y = j.length >> 1) + m + e + I + j.slice(y);
                        break;
                    default:
                        e = j + m + e + I
                    }
                    return r(e)
                }
                return f = void 0 === f ? 6 : /[gprs]/.test(v) ? Math.max(1, Math.min(21, f)) : Math.max(0, Math.min(20, f)),
                I.toString = function() {
                    return e + ""
                }
                ,
                I
            }
            return {
                format: d,
                formatPrefix: function(e, t) {
                    var n = d(((e = hU(e)).type = "f",
                    e))
                      , s = 3 * Math.max(-8, Math.min(8, Math.floor(fU(t) / 3)))
                      , i = Math.pow(10, -s)
                      , a = SU[8 + s / 3];
                    return function(e) {
                        return n(i * e) + a
                    }
                }
            }
        }
        function jU(e, t, n, s) {
            var i, a = function(e, t, n) {
                n = +n;
                const s = (t = +t) < (e = +e)
                  , i = s ? ZD(t, e, n) : ZD(e, t, n);
                return (s ? -1 : 1) * (i < 0 ? 1 / -i : i)
            }(e, t, n);
            switch ((s = hU(null == s ? ",f" : s)).type) {
            case "s":
                var o = Math.max(Math.abs(e), Math.abs(t));
                return null != s.precision || isNaN(i = function(e, t) {
                    return Math.max(0, 3 * Math.max(-8, Math.min(8, Math.floor(fU(t) / 3))) - fU(Math.abs(e)))
                }(a, o)) || (s.precision = i),
                EU(s, o);
            case "":
            case "e":
            case "g":
            case "p":
            case "r":
                null != s.precision || isNaN(i = function(e, t) {
                    return e = Math.abs(e),
                    t = Math.abs(t) - e,
                    Math.max(0, fU(t) - fU(e)) + 1
                }(a, Math.max(Math.abs(e), Math.abs(t)))) || (s.precision = i - ("e" === s.type));
                break;
            case "f":
            case "%":
                null != s.precision || isNaN(i = function(e) {
                    return Math.max(0, -fU(Math.abs(e)))
                }(a)) || (s.precision = i - 2 * ("%" === s.type))
            }
            return TU(s)
        }
        function CU(e) {
            var t = e.domain;
            return e.ticks = function(e) {
                var n = t();
                return function(e, t, n) {
                    if (!((n = +n) > 0))
                        return [];
                    if ((e = +e) == (t = +t))
                        return [e];
                    const s = t < e
                      , [i,a,o] = s ? QD(t, e, n) : QD(e, t, n);
                    if (!(a >= i))
                        return [];
                    const r = a - i + 1
                      , l = new Array(r);
                    if (s)
                        if (o < 0)
                            for (let e = 0; e < r; ++e)
                                l[e] = (a - e) / -o;
                        else
                            for (let e = 0; e < r; ++e)
                                l[e] = (a - e) * o;
                    else if (o < 0)
                        for (let e = 0; e < r; ++e)
                            l[e] = (i + e) / -o;
                    else
                        for (let e = 0; e < r; ++e)
                            l[e] = (i + e) * o;
                    return l
                }(n[0], n[n.length - 1], null == e ? 10 : e)
            }
            ,
            e.tickFormat = function(e, n) {
                var s = t();
                return jU(s[0], s[s.length - 1], null == e ? 10 : e, n)
            }
            ,
            e.nice = function(n) {
                null == n && (n = 10);
                var s, i, a = t(), o = 0, r = a.length - 1, l = a[o], c = a[r], u = 10;
                for (c < l && (i = l,
                l = c,
                c = i,
                i = o,
                o = r,
                r = i); u-- > 0; ) {
                    if ((i = ZD(l, c, n)) === s)
                        return a[o] = l,
                        a[r] = c,
                        t(a);
                    if (i > 0)
                        l = Math.floor(l / i) * i,
                        c = Math.ceil(c / i) * i;
                    else {
                        if (!(i < 0))
                            break;
                        l = Math.ceil(l * i) / i,
                        c = Math.floor(c * i) / i
                    }
                    s = i
                }
                return e
            }
            ,
            e
        }
        function NU() {
            var e = cU()(aU, aU);
            return e.copy = function() {
                return t = e,
                NU().domain(t.domain()).range(t.range()).interpolate(t.interpolate()).clamp(t.clamp()).unknown(t.unknown());
                var t
            }
            ,
            uU.apply(e, arguments),
            CU(e)
        }
        bU = yU({
            thousands: ",",
            grouping: [3],
            currency: ["$", ""]
        }),
        TU = bU.format,
        EU = bU.formatPrefix;
        var wU = e=>{
            const {viewport: t} = wD()
              , {posFromPoint: n, rem: s} = t
              , i = t.width || 1e4
              , a = t.height || 1e4
              , {d: o, strokeWidth: r, fill: l="transparent", ...c} = e
              , u = i && a ? Math.max(i, a) : 1e4
              , d = (0,
            Y.useMemo)((()=>o?.replace(/(-?\d+\.?\d*),(-?\d+\.?\d*)/g, ((e,t,s)=>{
                const i = n(Number(t), Number(s));
                return `${i.x},${i.y}`
            }
            )).replace(/([HhVv])\s*?(-?\d+\.?\d*)/g, ((e,t,s)=>{
                const i = "h" === t.toLowerCase()
                  , a = n(Number(s), Number(s));
                return `${t} ${i ? a.x : a.y}`
            }
            ))), [o, n])
              , m = void 0 !== c.min
              , h = void 0 !== c.max
              , g = m ? n(0, Number(c.min)).y : void 0
              , p = h ? n(0, Number(c.max)).y : void 0
              , f = (0,
            Y.useCallback)(((e,t,s)=>{
                if (!e)
                    return "";
                let i = !1
                  , a = 0;
                return `M 0,0 ${e.replace(/([MLCQSTAHV])([^MLCQSTAHV]*)/g, ((e,s,o)=>{
                    const r = o.trim().split(/[\s,]+/).map(Number)
                      , l = [];
                    for (let e = 0; e < r.length && !(e + 1 >= r.length); e += 2) {
                        const s = n(r[e], r[e + 1]);
                        l.push(`${s.x},${s.y}`),
                        i || (l.unshift(t),
                        i = !0),
                        a = s.x
                    }
                    return `${s} ${l.join(" ")}`
                }
                ))} L ${a},${s} Z`
            }
            ), [n])
              , x = (0,
            Y.useMemo)((()=>h ? f(o, "0,0", 0) : ""), [o, f, h])
              , v = (0,
            Y.useMemo)((()=>m ? f(o, `0,${u}`, u) : ""), [o, f, m, u])
              , _ = r ? s(r) : void 0
              , b = Math.max(s(r || 1), 2)
              , T = (0,
            Y.useId)();
            let E = null;
            return m && h && void 0 !== g && void 0 !== p ? E = (0,
            z.jsx)("rect", {
                x: "0",
                y: g,
                width: u,
                height: p - g,
                fill: "white"
            }) : m && void 0 !== g ? E = (0,
            z.jsx)("rect", {
                x: "0",
                y: g,
                width: u,
                height: u - g,
                fill: "white"
            }) : h && void 0 !== p && (E = (0,
            z.jsx)("rect", {
                x: "0",
                y: "0",
                width: u,
                height: p,
                fill: "white"
            })),
            (0,
            z.jsx)("svg", {
                viewBox: `0 0 ${u} ${u}`,
                ...c,
                children: m || h ? (0,
                z.jsxs)(z.Fragment, {
                    children: [(0,
                    z.jsxs)("defs", {
                        children: [m && (0,
                        z.jsx)("clipPath", {
                            id: `minPathClip-${T}`,
                            children: (0,
                            z.jsx)("path", {
                                d: v,
                                fill: "white"
                            })
                        }), h && (0,
                        z.jsx)("clipPath", {
                            id: `maxPathClip-${T}`,
                            children: (0,
                            z.jsx)("path", {
                                d: x,
                                fill: "white"
                            })
                        }), (0,
                        z.jsx)("clipPath", {
                            id: `pathLimitMask-${T}`,
                            children: E
                        })]
                    }), (0,
                    z.jsxs)("g", {
                        clipPath: `url(#pathLimitMask-${T})`,
                        children: [(0,
                        z.jsx)("path", {
                            d,
                            strokeWidth: _,
                            fill: l
                        }), h && void 0 !== p && (0,
                        z.jsx)("line", {
                            x1: "0",
                            x2: u,
                            y1: p + 1,
                            y2: p + 1,
                            strokeWidth: b,
                            clipPath: `url(#maxPathClip-${T})`
                        }), m && void 0 !== g && (0,
                        z.jsx)("line", {
                            x1: "0",
                            x2: u,
                            y1: g - 1,
                            y2: g - 1,
                            strokeWidth: b,
                            clipPath: `url(#minPathClip-${T})`
                        })]
                    })]
                }) : (0,
                z.jsx)("path", {
                    d,
                    strokeWidth: _,
                    fill: l
                })
            })
        }
        ;
        X.add("game-ui/common/svg/elements/path.tsx", {
            get Path() {
                return wU
            },
            set Path(e) {
                wU = e
            }
        });
        let OU = {
            "grid-lines": "grid-lines_BXH",
            gridLines: "grid-lines_BXH",
            "axis-labels": "axis-labels_IjN",
            axisLabels: "axis-labels_IjN"
        };
        X.add("game-ui/common/svg/svg.module.scss", {
            get classes() {
                return OU
            },
            set classes(e) {
                Object.assign(OU, e)
            }
        });
        const PU = OU;
        var LU = e=>{
            const {label: t, x: n, y: s, fontSize: i, color: a, rotation: o=0, onTop: r, textAnchor: l} = e;
            let c;
            switch (typeof t) {
            case "string":
            case "object":
                c = t;
                break;
            default:
                c = e.label.toString().replace(/^(-)?0/, "$1") || "0"
            }
            return (0,
            z.jsx)("g", {
                transform: `translate(${n + .5 * i} ${s + i * (r ? .5 : -1.5)}) rotate(${o}deg)`,
                children: (0,
                z.jsx)("text", {
                    transform: "scale(1 -1)",
                    fontSize: i,
                    fill: a,
                    textAnchor: l,
                    children: c
                })
            })
        }
          , AU = ({fixed: e, overdraw: t=!1, textScale: n=1, tickWidth: s=100, tickHeight: i=100, formatLabelX: a, formatLabelY: o})=>{
            const {viewport: r} = wD()
              , {size: l, rem: c, bounds: u, posFromPoint: d} = r
              , {axesPath: m, xLabels: h, yLabels: g} = (0,
            Y.useMemo)((()=>{
                if (!u)
                    return {};
                let r = "";
                const m = Number(t) * Math.max(c(s) / l.width, c(i) / l.height) * 2
                  , h = 1 + 2 * m
                  , g = []
                  , p = []
                  , f = Math.ceil(l.width * h / c(s))
                  , x = Math.ceil(l.height * h / c(i))
                  , v = u.max.x - u.min.x
                  , _ = u.max.y - u.min.y
                  , b = u.min.x - v * m
                  , T = u.max.x + v * m
                  , E = u.min.y - _ * m
                  , I = u.max.y + _ * m
                  , S = NU().domain([b, T]).nice().ticks(f);
                for (let t = 0; t < S.length; t++) {
                    const s = d(S[t], 0)
                      , i = a ? a(S[t]) : S[t]
                      , o = t === S.length - 1 ? "end" : "mid";
                    g.push((0,
                    z.jsx)(LU, {
                        x: s.x,
                        y: e ? 0 : s.y,
                        label: i,
                        fontSize: c(11 * n),
                        onTop: e,
                        textAnchor: o
                    }, `${t}-${i}-${s.x}`))
                }
                const y = NU().domain([E, I]).nice().ticks(x);
                for (let t = 0; t < y.length; t++) {
                    const s = d(0, y[t])
                      , i = o ? o(y[t]) : y[t];
                    p.push((0,
                    z.jsx)(LU, {
                        x: e ? 0 : s.x,
                        y: s.y,
                        label: i,
                        fontSize: c(11 * n),
                        onTop: e
                    }, `${t}-${i}-${s.y}`))
                }
                return e || (r += `M ${b},0 L ${T}, 0 `,
                r += `M 0, ${E} L 0, ${I}`),
                {
                    axesPath: r,
                    xLabels: g,
                    yLabels: p
                }
            }
            ), [u, t, c, s, l.width, l.height, i, e, d, a, n, o]);
            return (0,
            z.jsxs)("g", {
                className: PU.axisLabels,
                children: [m && (0,
                z.jsx)(wU, {
                    d: m,
                    strokeWidth: .5,
                    stroke: "#fff7"
                }), (0,
                z.jsx)("g", {
                    children: h
                }), (0,
                z.jsx)("g", {
                    children: g
                })]
            })
        }
        ;
        X.add("game-ui/common/svg/components/axis-labels.tsx", {
            get GridLineAxisTick() {
                return LU
            },
            set GridLineAxisTick(e) {
                LU = e
            },
            get AxisLabels() {
                return AU
            },
            set AxisLabels(e) {
                AU = e
            }
        });
        var MU = ({halfSteps: e, overdraw: t=!1, drawAxes: n=!0, tickWidth: s=100, tickHeight: i=100})=>{
            const {viewport: a} = wD()
              , {size: o, rem: r, bounds: l} = a
              , {gridPath: c, halfStepsGridPath: u} = (0,
            Y.useMemo)((()=>{
                if (!l || !n)
                    return {};
                let a = "\n"
                  , c = "\n";
                const u = Number(t) * Math.max(r(s) / o.width, r(i) / o.height) * 2
                  , d = 1 + 2 * u
                  , m = l.max.x - l.min.x
                  , h = l.max.y - l.min.y
                  , g = l.min.x - m * u
                  , p = l.max.x + m * u
                  , f = l.min.y - h * u
                  , x = l.max.y + h * u;
                if (!0 === n || n.includes("x")) {
                    const t = Math.ceil(o.width * d / r(s))
                      , n = NU().domain([g, p]).nice().ticks(t)
                      , i = (n[1] - n[0]) / 2;
                    for (let t = 0; t < n.length; t++)
                        a += `M ${n[t]},${f} V ${x} `,
                        a += "\n",
                        e && (c += `M ${n[t] + i},${f} V ${x} `,
                        c += "\n");
                    a += "\n",
                    c += "\n"
                }
                if (!0 === n || n.includes("y")) {
                    const t = Math.ceil(o.height * d / r(i))
                      , n = NU().domain([f, x]).nice().ticks(t)
                      , s = (n[1] - n[0]) / 2;
                    for (let t = 0; t < n.length; t++)
                        a += `M ${g},${n[t]} H ${p} `,
                        a += "\n",
                        e && (c += `M ${g},${n[t] + s} H ${p} `,
                        c += "\n")
                }
                return {
                    gridPath: a,
                    halfStepsGridPath: c,
                    xLabels: [],
                    yLabels: []
                }
            }
            ), [l, n, t, r, s, o.width, o.height, i, e]);
            return (0,
            z.jsxs)("g", {
                className: PU.gridLines,
                children: [(0,
                z.jsx)(wU, {
                    d: c,
                    strokeWidth: .5,
                    stroke: "#fff3"
                }), u && (0,
                z.jsx)(wU, {
                    d: u,
                    strokeWidth: .5,
                    stroke: "#fff1"
                })]
            })
        }
        ;
        X.add("game-ui/common/svg/components/grid-lines.tsx", {
            get GridLines() {
                return MU
            },
            set GridLines(e) {
                MU = e
            }
        });
        let RU = {
            "tooltip-base": "tooltip-base_zwi",
            tooltipBase: "tooltip-base_zwi",
            "tooltip-fade-in": "tooltip-fade-in_S9n",
            tooltipFadeIn: "tooltip-fade-in_S9n",
            fadeIn: "fadeIn_VY9",
            tooltip: "tooltip_xe4 tooltip-base_zwi tooltip-fade-in_S9n"
        };
        X.add("game-ui/common/tooltip/floating-mouse-tooltip/floating-mouse-tooltip.module.scss", {
            get classes() {
                return RU
            },
            set classes(e) {
                Object.assign(RU, e)
            }
        });
        const kU = RU
          , DU = 0
          , FU = 16;
        var UU = ({position: e, tooltip: t, disabled: n, theme: s, alwaysVisible: i=!1, forceVisible: a=!1, screenSpacePosition: o=!1, style: r, className: l, children: c})=>{
            if (!o && !Y.isValidElement(c))
                throw new Error("Tooltip requires a single child react element!");
            const u = (0,
            Y.useMemo)((()=>({
                ...kU,
                ...s
            })), [s])
              , [d,m] = (0,
            Y.useState)(i)
              , h = (0,
            Y.useRef)(Ad)
              , g = (0,
            Y.useRef)(null)
              , p = (0,
            Y.useCallback)((t=>{
                g.current = t,
                null != t && BU(t, e || h.current)
            }
            ), [e])
              , f = (0,
            Y.useCallback)((e=>{
                h.current = Yd(e),
                m(i || !0)
            }
            ), [i])
              , x = (0,
            Y.useCallback)((e=>{
                h.current = Yd(e),
                null != g.current && BU(g.current, h.current, o)
            }
            ), [o])
              , v = (0,
            Y.useCallback)((e=>m(i || !1)), [i])
              , _ = (0,
            Y.useCallback)((e=>m(i || !1)), [i])
              , b = (0,
            Y.useRef)(null)
              , T = (0,
            Y.useCallback)((e=>{
                b.current !== e && (null != b.current && (b.current.removeEventListener("mouseover", f),
                b.current.removeEventListener("mousemove", x),
                b.current.removeEventListener("mouseleave", v),
                b.current.removeEventListener("mousedown", _)),
                null != e && (e.addEventListener("mouseover", f),
                e.addEventListener("mousemove", x),
                e.addEventListener("mouseleave", v),
                e.addEventListener("mousedown", _)),
                b.current = e)
            }
            ), [_, v, x, f]);
            (0,
            Y.useEffect)((()=>{
                o && T(document.body)
            }
            ), [o]);
            const E = !!t && (o || Y.Children.count(c) > 0)
              , I = (0,
            Y.useContext)(xg);
            return (0,
            z.jsxs)(z.Fragment, {
                children: [!o && c && (0,
                z.jsx)(vd, {
                    ref: T,
                    children: c
                }), E && !n && (d || a) && !I && (0,
                z.jsx)(zm, {
                    children: (0,
                    z.jsx)("div", {
                        className: Zu()(u.tooltip, l),
                        style: r,
                        ref: p,
                        children: t
                    })
                })]
            })
        }
        ;
        function BU(e, t, n) {
            const s = t.x + DU
              , i = t.y + FU;
            e.style.left = `${s}px`,
            e.style.top = `${i}px`;
            const a = ()=>{
                const t = e.getBoundingClientRect()
                  , n = window.innerWidth - t.width
                  , a = window.innerHeight - t.height;
                e.style.left = `${Math.min(s, n)}px`,
                e.style.top = `${Math.min(i, a)}px`
            }
            ;
            n ? a() : requestAnimationFrame(a)
        }
        X.add("game-ui/common/tooltip/floating-mouse-tooltip/floating-mouse-tooltip.tsx", {
            get FloatingMouseTooltip() {
                return UU
            },
            set FloatingMouseTooltip(e) {
                UU = e
            }
        });
        var GU = (e,t,n,s)=>e + (t - n) * s
          , VU = (e,t)=>e && e.min.y === t.min.y && e.max.y === t.max.y && e.min.x === t.min.x && e.max.x === t.max.x ? e : t;
        const HU = {
            inTangent: 0,
            outTangent: 0,
            inWeight: 0,
            outWeight: 0,
            weightedMode: 0,
            readonly: !0
        };
        var KU = (e,t,n)=>{
            e && t.filter((e=>e.keys.length > 0)).map((t=>{
                const s = t.keys;
                s[0].readonly && s.splice(0, 1),
                s[s.length - 1].readonly && s.splice(s.length - 1, 1);
                const i = s.length - 1
                  , a = s[0]
                  , o = s[1]
                  , r = s[i]
                  , l = s[i - 1];
                if (a.time > n.min.x) {
                    let t;
                    "clamp" === e ? (a.inTangent = 0,
                    t = {
                        ...HU,
                        time: n.min.x,
                        value: a.value
                    }) : "loop" === e ? (t = {
                        ...HU,
                        ...r,
                        time: a.time - (r.time - l.time)
                    },
                    a.inTangent = r.inTangent,
                    a.inWeight = r.inWeight) : (t = {
                        ...HU,
                        ...o,
                        outTangent: -o.inTangent,
                        outWeight: o.inWeight,
                        time: a.time - (o.time - a.time)
                    },
                    a.inTangent = -a.outTangent,
                    a.inWeight = a.outWeight),
                    t && s.unshift(t)
                }
                if (r.time < n.max.x) {
                    let t;
                    "clamp" === e ? (r.outTangent = 0,
                    t = {
                        ...HU,
                        time: n.max.x,
                        value: r.value
                    }) : "loop" === e ? (t = {
                        ...HU,
                        ...a,
                        time: r.time + (o.time - a.time)
                    },
                    r.outTangent = a.outTangent,
                    r.outWeight = a.outWeight) : (t = {
                        ...HU,
                        ...l,
                        inTangent: -l.outTangent,
                        inWeight: l.outWeight,
                        time: r.time + (r.time - l.time)
                    },
                    r.outTangent = -r.inTangent,
                    r.outWeight = r.inWeight),
                    t && s.push(t)
                }
                t.keys = [...s]
            }
            ))
        }
        ;
        X.add("game-ui/editor/widgets/fields/animation-curve-field/utils/helpers.ts", {
            get project() {
                return GU
            },
            set project(e) {
                GU = e
            },
            get newBounds2IfChanged() {
                return VU
            },
            set newBounds2IfChanged(e) {
                VU = e
            },
            get insertDummyWrapModeKeyframes() {
                return KU
            },
            set insertDummyWrapModeKeyframes(e) {
                KU = e
            }
        });
        var WU = e=>e.reduce(((t,n,s)=>{
            if (0 === s)
                t.push(`M ${n.time},${n.value}`);
            else {
                const i = e[s - 1]
                  , a = isFinite(i.outTangent) && isFinite(n.inTangent)
                  , o = i.time
                  , r = i.value
                  , l = n.time
                  , c = n.value
                  , u = i.outTangent
                  , d = n.inTangent
                  , m = i.outWeight
                  , h = 1 - n.inWeight;
                if (a) {
                    const e = GU(o, l, o, m)
                      , n = GU(r, e, o, u)
                      , s = GU(o, l, o, h)
                      , i = GU(c, s, l, d);
                    t.push(`C${e},${n} ${s},${i} ${l},${c}`)
                } else
                    r === c ? t.push(`L${l},${c}`) : u === Number.NEGATIVE_INFINITY && d !== Number.POSITIVE_INFINITY || u !== Number.POSITIVE_INFINITY && d === Number.NEGATIVE_INFINITY ? t.push(`L${o},${c} ${l},${c}`) : t.push(`L ${l},${r} ${l},${c}`)
            }
            return t
        }
        ), []);
        X.add("game-ui/editor/widgets/fields/animation-curve-field/utils/make-curve-path.ts", {
            get makeCurvePath() {
                return WU
            },
            set makeCurvePath(e) {
                WU = e
            }
        });
        let zU = {
            "animation-curve-editor": "animation-curve-editor_sfs",
            animationCurveEditor: "animation-curve-editor_sfs",
            editorItem: "editorItem_DvB",
            editor: "editor_Es7",
            row: "row_GIj row_d2o",
            controls: "controls_RpG",
            column: "column_MrW",
            label: "label_ozJ label_BbZ",
            control: "control_Ivd control_Hds",
            "animation-curve-path": "animation-curve-path_TwV",
            animationCurvePath: "animation-curve-path_TwV",
            "default-stroke": "default-stroke_Bng",
            defaultStroke: "default-stroke_Bng",
            "animation-curve-control-point-arm": "animation-curve-control-point-arm_Wh2",
            animationCurveControlPointArm: "animation-curve-control-point-arm_Wh2",
            "animation-curve-control-point-handle": "animation-curve-control-point-handle_qUn",
            animationCurveControlPointHandle: "animation-curve-control-point-handle_qUn",
            "animation-curve-keyframe": "animation-curve-keyframe_DpO",
            animationCurveKeyframe: "animation-curve-keyframe_DpO",
            "multiple-curves": "multiple-curves_HvS",
            multipleCurves: "multiple-curves_HvS",
            "animation-curve-keyframes": "animation-curve-keyframes_TMk",
            animationCurveKeyframes: "animation-curve-keyframes_TMk",
            "animation-curve-preview-path": "animation-curve-preview-path_VCR",
            animationCurvePreviewPath: "animation-curve-preview-path_VCR",
            hidden: "hidden_prB"
        };
        X.add("game-ui/editor/widgets/fields/animation-curve-field/animation-curve-editor.module.scss", {
            get classes() {
                return zU
            },
            set classes(e) {
                Object.assign(zU, e)
            }
        });
        const YU = zU;
        var $U = ({keys: e=[], base: t, color: n, className: s})=>{
            const i = (0,
            Y.useMemo)((function() {
                const n = WU(e)
                  , s = WU(e.map(((e,n)=>({
                    ...e,
                    value: t[n].value - (e.value - t[n].value)
                }))).reverse());
                return n.concat(s).join(" ").replace(" M", " L") + " z"
            }
            ), [t, e]);
            return (0,
            z.jsx)(wU, {
                d: i,
                fill: n,
                className: Zu()(s, 0 === e.length && YU.hidden)
            })
        }
        ;
        X.add("game-ui/editor/widgets/fields/animation-curve-field/components/animation-curve-deviation.tsx", {
            get AnimationCurveDeviation() {
                return $U
            },
            set AnimationCurveDeviation(e) {
                $U = e
            }
        });
        var qU = ({keys: e=[], bounds: t, color: n, className: s})=>{
            const i = (0,
            Y.useMemo)((function() {
                return WU(e).join(" ")
            }
            ), [e]);
            return (0,
            z.jsx)(wU, {
                d: i,
                stroke: n,
                min: t?.min.y,
                max: t?.max.y,
                className: Zu()(YU.animationCurvePath, s, 0 === e.length && YU.hidden, {
                    [YU.defaultStroke]: !n
                })
            })
        }
        ;
        X.add("game-ui/editor/widgets/fields/animation-curve-field/components/animation-curve-path.tsx", {
            get AnimationCurvePath() {
                return qU
            },
            set AnimationCurvePath(e) {
                qU = e
            }
        });
        let XU = {
            "tooltip-row": "tooltip-row_zpQ",
            tooltipRow: "tooltip-row_zpQ",
            "tooltip-label": "tooltip-label_JO7",
            tooltipLabel: "tooltip-label_JO7"
        };
        X.add("game-ui/editor/widgets/fields/animation-curve-field/components/keyframe.module.scss", {
            get classes() {
                return XU
            },
            set classes(e) {
                Object.assign(XU, e)
            }
        });
        const QU = XU
          , ZU = e=>{
            if (0 === e)
                return "00.000s";
            const t = Math.floor(e / 3600)
              , n = Math.floor((e - 3600 * t) / 60)
              , s = Math.floor(e - 3600 * t - 60 * n)
              , i = (e % 1).toFixed(3).replace("0.", "");
            let a = "";
            return t && (a += t.toString().padStart(2, "0") + ":"),
            n && (a += n.toString().padStart(2, "0") + ":"),
            a += s.toString().padStart(2, "0") + ".",
            a += i,
            a + "s"
        }
        ;
        var JU, eB, tB = ({keyframe: e, hide: t})=>e ? (0,
        z.jsxs)("div", {
            children: ["time" !== t && "number" == typeof e.time && (0,
            z.jsxs)("div", {
                className: QU.tooltipRow,
                children: [(0,
                z.jsxs)("div", {
                    className: QU.tooltipLabel,
                    children: [(0,
                    z.jsx)(_c.AnimationCurve.TIME_LABEL, {}), ":"]
                }), (0,
                z.jsx)("div", {
                    children: ZU(e.time)
                })]
            }), "value" !== t && "number" == typeof e.value && (0,
            z.jsxs)("div", {
                className: QU.tooltipRow,
                children: [(0,
                z.jsxs)("div", {
                    className: QU.tooltipLabel,
                    children: [(0,
                    z.jsx)(_c.AnimationCurve.VALUE_LABEL, {}), ":"]
                }), (0,
                z.jsx)("div", {
                    children: e.value.toFixed(3)
                })]
            })]
        }) : null;
        X.add("game-ui/editor/widgets/fields/animation-curve-field/components/keyframe-tooltip.tsx", {
            get KeyframeTooltip() {
                return tB
            },
            set KeyframeTooltip(e) {
                tB = e
            }
        }),
        function(e) {
            e[e.None = 0] = "None",
            e[e.In = 1] = "In",
            e[e.Out = 2] = "Out",
            e[e.Both = 3] = "Both"
        }(JU || (JU = {})),
        function(e) {
            e[e.Default = 0] = "Default",
            e[e.Clamp = 1] = "Clamp",
            e[e.Once = 1] = "Once",
            e[e.Loop = 2] = "Loop",
            e[e.PingPong = 4] = "PingPong",
            e[e.ClampForever = 8] = "ClampForever"
        }(eB || (eB = {}));
        var nB = {
            time: 0,
            value: 0,
            inTangent: 0,
            outTangent: 0,
            inWeight: 0,
            outWeight: 0,
            weightedMode: JU.None
        };
        X.add("game-ui/editor/data-binding/editor-types.ts", {
            get WeightedMode() {
                return JU
            },
            set WeightedMode(e) {
                JU = e
            },
            get WrapMode() {
                return eB
            },
            set WrapMode(e) {
                eB = e
            },
            get defaultKeyframe() {
                return nB
            },
            set defaultKeyframe(e) {
                nB = e
            }
        });
        const sB = {
            data: {
                curves: [{
                    keys: [],
                    preWrapMode: eB.Default,
                    postWrapMode: eB.Default
                }],
                bounds: {
                    min: {
                        x: 0,
                        y: 0
                    },
                    max: {
                        x: 0,
                        y: 0
                    }
                }
            },
            activeKeyframe: -1,
            draggedKeyframeRef: {
                current: -1
            },
            activeCurve: 0,
            activeProperty: 0,
            canAddKeyframes: !1,
            smoothenOnMove: !1,
            isDraggingKeyframe: !1,
            selectActiveCurve: ()=>{}
            ,
            deselectKeyframes: ()=>{}
            ,
            selectKeyframe: ()=>{}
            ,
            setDraggedKeyframe: ()=>{}
            ,
            removeKeyframe: ()=>{}
            ,
            setKeyframes: ()=>{}
            ,
            updateKeyframe: async()=>-1,
            addKeyframe: async()=>-1
        }
          , iB = (0,
        Y.createContext)(sB);
        var aB = e=>{
            const {children: t, data: n, canAddKeyframes: s, smoothenOnMove: i, hideControlPoints: a, allowEditingAll: o, parseKeyframe: r, keyframeRenderer: l, onMoveKeyframe: c, onAddKeyframe: u, onRemoveKeyframe: d, onSetKeyframes: m, onSetActiveCurve: h, onSetActiveKeyFrame: g} = e
              , [p,f] = (0,
            Y.useState)(-1)
              , [x,v] = (0,
            Y.useState)(!1)
              , [_,b] = (0,
            Y.useState)(0)
              , T = (0,
            Y.useRef)(-1)
              , E = (0,
            Y.useCallback)((e=>{
                T.current = e,
                v(!0);
                const t = ()=>{
                    T.current = -1,
                    document.removeEventListener("mouseup", t),
                    v(!1)
                }
                ;
                document.addEventListener("mouseup", t)
            }
            ), [])
              , I = (0,
            Y.useMemo)((()=>{
                const e = n.curves[_]?.keys[0]
                  , t = e?.readonly ? 1 : 0
                  , s = (e,n)=>{
                    n && _ !== n && b(n),
                    f((t=>t === e ? -1 : e)),
                    g?.(_, e - t)
                }
                ;
                return {
                    selectActiveCurve: (e,t=-1)=>{
                        b(e),
                        h?.(e),
                        s(t, e),
                        g?.(e, t)
                    }
                    ,
                    deselectKeyframes: ()=>{
                        s(-1)
                    }
                    ,
                    selectKeyframe: s,
                    addKeyframe: async(s,i,a)=>{
                        if (!u)
                            throw "onAddKeyframe not provided";
                        if (n.curves[a]) {
                            const n = await u(s, i, a) + (s > e?.time ? t : 0);
                            return f(n),
                            g?.(_, n),
                            n
                        }
                        return -1
                    }
                    ,
                    updateKeyframe: async(n,s,i,a)=>{
                        if (!c)
                            throw "onMoveKeyframe not provided";
                        const o = Math.max(0, n - t)
                          , r = await c(o, s, i, a) + (s.time > e?.time ? t : 0);
                        return f((e=>-1 === e ? -1 : r)),
                        r
                    }
                    ,
                    removeKeyframe: (e,n)=>{
                        if (!d)
                            throw "onRemoveKeyframe not provided";
                        const i = Math.max(0, e - t);
                        d(i, n),
                        s(-1)
                    }
                    ,
                    setKeyframes: async(e,t)=>{
                        if (!m)
                            throw "onSetKeyframes not provided";
                        await m(e, t),
                        s(-1)
                    }
                }
            }
            ), [_, n.curves, u, c, d, h, g, m]);
            (0,
            Y.useEffect)((()=>{
                const e = n.curves[_]?.keys.length - 1 || -1;
                p > e && f(e)
            }
            ), [_, p, n.curves]);
            const S = (0,
            Y.useMemo)((()=>({
                data: n,
                activeKeyframe: p,
                draggedKeyframeRef: T,
                activeCurve: _,
                canAddKeyframes: s,
                smoothenOnMove: i,
                hideControlPoints: a,
                allowEditingAll: o,
                parseKeyframe: r,
                keyframeRenderer: l,
                setDraggedKeyframe: E,
                isDraggingKeyframe: x,
                ...I
            })), [n, p, _, s, i, a, o, r, l, E, x, I]);
            return (0,
            z.jsx)(iB.Provider, {
                value: S,
                children: t
            })
        }
          , oB = ()=>(0,
        Y.useContext)(iB);
        X.add("game-ui/editor/widgets/fields/animation-curve-field/utils/animation-curve-editor-context.tsx", {
            get AnimationCurveEditorProvider() {
                return aB
            },
            set AnimationCurveEditorProvider(e) {
                aB = e
            },
            get useAnimationCurveEditor() {
                return oB
            },
            set useAnimationCurveEditor(e) {
                oB = e
            }
        });
        var rB = (e,t,n,s,i)=>{
            const a = e.offset.x + t
              , o = e.offset.y + (e.inverted ? e.size.height - n : n);
            return {
                x: a,
                y: o,
                width: s,
                height: i,
                left: a,
                top: o,
                right: s > 0 ? a + s : a,
                bottom: i > 0 ? o + i : o
            }
        }
        ;
        X.add("game-ui/common/svg/utils/get-svg-bounding-rect.ts", {
            get getSVGBoundingRect() {
                return rB
            },
            set getSVGBoundingRect(e) {
                rB = e
            }
        });
        var lB = (0,
        Y.forwardRef)((function(e, t) {
            const {cx: n, cy: s, r: i, rh: a, collisionThreshold: o=0, fill: r, fillh: l, stroke: c, strokeh: u, strokeWidth: d, onSelect: m, focused: h, selected: g, className: p, ...f} = e
              , {viewport: x} = wD()
              , {posFromPoint: v, rem: _} = x
              , [b,T] = (0,
            Y.useState)(!1)
              , E = v(n, s)
              , I = _(b && a ? a : i)
              , S = _(d || 1)
              , y = _(o) + S / 2
              , j = S / 2 + y + I;
            (0,
            Y.useEffect)((()=>{
                t && "current"in t && t.current && (t.current.getBoundingClientRect = ()=>rB(x, E.x - j / 2, E.y - j / 2, j, j))
            }
            ), [j, t, E.x, E.y, x]);
            const C = (0,
            Y.useCallback)((e=>Math.sqrt(Math.pow(e.x - E.x, 2) + Math.pow(e.y - E.y, 2)) < I + y), [E.x, E.y, I, y]);
            return PD(e, C, T),
            (0,
            z.jsx)("circle", {
                ref: t,
                cx: E.x,
                cy: E.y,
                r: I,
                fill: b && l ? l : r,
                stroke: b && u ? u : c,
                strokeWidth: S,
                className: Zu()({
                    hovered: b
                }, p),
                ...f
            }, "circle")
        }
        ));
        X.add("game-ui/common/svg/elements/circle.tsx", {
            get Circle() {
                return lB
            },
            set Circle(e) {
                lB = e
            }
        });
        var cB = ({x1: e, y1: t, x2: n, y2: s, strokeWidth: i, stroke: a, strokeh: o, collisionThreshold: r, ...l})=>{
            const {viewport: {posFromPoint: c, rem: u}} = wD()
              , [d,m] = (0,
            Y.useState)(!1)
              , h = c(e, t)
              , g = c(n, s)
              , p = u(i || 1)
              , f = u(r || 5) + p / 2
              , x = (0,
            Y.useCallback)((e=>((e,t,n)=>{
                const s = e.x - t.x
                  , i = e.y - t.y
                  , a = n.x - t.x
                  , o = n.y - t.y
                  , r = a * a + o * o
                  , l = 0 !== r ? (s * a + i * o) / r : -1;
                let c, u;
                l < 0 ? (c = t.x,
                u = t.y) : l > 1 ? (c = n.x,
                u = n.y) : (c = t.x + l * a,
                u = t.y + l * o);
                const d = e.x - c
                  , m = e.y - u;
                return Math.sqrt(d * d + m * m)
            }
            )(e, h, g) < f), [f, h, g]);
            return PD(l, x, m),
            (0,
            z.jsx)("line", {
                x1: h.x,
                y1: h.y,
                x2: g.x,
                y2: g.y,
                strokeWidth: p,
                stroke: d ? o ?? a : a,
                ...l
            })
        }
        ;
        X.add("game-ui/common/svg/elements/line.tsx", {
            get Line() {
                return cB
            },
            set Line(e) {
                cB = e
            }
        });
        var uB = (0,
        Y.forwardRef)((function(e, t) {
            const {x: n, y: s, width: i, height: a, widthh: o, heighth: r, collisionThreshold: l=0, origin: c, fill: u, fillh: d, stroke: m, strokeh: h, strokeWidth: g, onSelect: p, focused: f, selected: x, className: v, transform: _, ...b} = e
              , {viewport: T} = wD()
              , {posFromPoint: E, rem: I} = T
              , [S,y] = (0,
            Y.useState)(!1);
            let j = E(n, s);
            const C = I(S && o ? o : i)
              , N = I(S && r ? r : a);
            "center" === c && (j = {
                x: j.x - C / 2,
                y: j.y - N / 2
            });
            const w = I(g || 1)
              , O = I(l) + w / 2
              , P = (0,
            Y.useCallback)((e=>{
                let t;
                return t = "center" !== c ? {
                    x: (2 * j.x + C) / 2,
                    y: (2 * j.y + N) / 2
                } : j,
                Math.abs(e.x - t.x) <= C / 2 + O && Math.abs(e.y - t.y) <= N / 2 + O
            }
            ), [c, C, O, N, j]);
            (0,
            Y.useEffect)((()=>{
                t && "current"in t && t.current && (t.current.getBoundingClientRect = ()=>rB(T, j.x - O / 2, j.y - O / 2, C + O / 2, N + O / 2))
            }
            ), [O, N, t, T, j.x, j.y, C]),
            PD(e, P, y);
            const L = _?.replace(/rotate\((\d+)\)/, `rotate($1 ${j.x + C / 2} ${j.y + N / 2})`);
            return (0,
            z.jsx)("rect", {
                ref: t,
                x: j.x,
                y: j.y,
                width: C,
                height: N,
                fill: S && d ? d : u,
                stroke: S && h ? h : m,
                strokeWidth: w,
                className: Zu()({
                    hovered: S
                }, v),
                transform: L,
                ...b
            })
        }
        ));
        X.add("game-ui/common/svg/elements/rect.tsx", {
            get Rect() {
                return uB
            },
            set Rect(e) {
                uB = e
            }
        }),
        X.add("game-ui/common/svg/elements/index.ts", {});
        var dB = ({keyframe: e, index: t, pos: n, type: s, isFocused: i})=>{
            const {activeCurve: a, updateKeyframe: o} = oB()
              , {viewport: {rem: r, scaleToViewport: l, scaleToPoint: c, posFromPoint: u, pointFromPos: d}} = wD()
              , m = (0,
            Y.useMemo)((()=>{
                const t = {
                    x: n.x - e.time,
                    y: n.y - e.value
                }
                  , i = l(t)
                  , a = Math.sqrt(i.x * i.x + i.y * i.y)
                  , o = i.x < 0 ? -1 : 1
                  , u = i.x / a
                  , d = isFinite(n.y) ? i.y / a : Math.sign(n.y) * o
                  , m = e["in" === s ? "inWeight" : "outWeight"] || .01
                  , h = r(Pd(15, 75, m))
                  , g = c(u * h, d * h);
                return {
                    x: e.time + g.x,
                    y: e.value + g.y
                }
            }
            ), [n.x, n.y, e, l, s, r, c])
              , h = (0,
            Y.useCallback)((({point: n, position: i, shiftKey: r})=>{
                const l = e.time
                  , c = e.value;
                let d = n.x - l;
                const m = n.y - c
                  , h = Od(Kd(Gd(i, u(l, c))), 15, 75);
                if (h < 15)
                    return;
                const g = Math.max((h - 15) / 60, .01);
                let p, f, x;
                var v, _;
                "in" === s ? (p = "inTangent",
                f = "inWeight",
                d > 0 && (d = 0)) : (p = "outTangent",
                f = "outWeight",
                d < 0 && (d = 0)),
                v = d,
                _ = 0,
                x = Math.abs(_ - v) < Math.max(1e-6 * Math.max(Math.abs(v), Math.abs(_)), 8 * Number.EPSILON) ? n.y > c ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY : m / d,
                o(t, r ? {
                    ...e,
                    inTangent: x,
                    outTangent: x,
                    inWeight: g,
                    outWeight: g
                } : {
                    ...e,
                    [p]: x,
                    [f]: g
                }, !1, a)
            }
            ), [a, t, e, u, s, o])
              , g = Dm();
            return C_((0,
            Y.useCallback)((async()=>{
                const e = await Ly()
                  , t = u(m)
                  , n = {
                    x: t.x + 100 * e[0],
                    y: t.y + 100 * e[1]
                };
                h({
                    point: d(n),
                    position: n
                })
            }
            ), [m, h, d, u]), g && i),
            (0,
            z.jsxs)(z.Fragment, {
                children: [(0,
                z.jsx)(cB, {
                    strokeWidth: .5,
                    x1: e.time,
                    y1: e.value,
                    x2: m.x,
                    y2: m.y,
                    className: YU.animationCurveControlPointArm
                }), (0,
                z.jsx)(uB, {
                    origin: "center",
                    x: m.x,
                    y: m.y,
                    width: i ? 8 : 4,
                    height: i ? 8 : 4,
                    collisionThreshold: 10,
                    onDrag: h,
                    className: YU.animationCurveControlPointHandle
                })]
            })
        }
        ;
        X.add("game-ui/editor/widgets/fields/animation-curve-field/components/keyframe-control-point.tsx", {
            get KeyframeControlPoint() {
                return dB
            },
            set KeyframeControlPoint(e) {
                dB = e
            }
        });
        var mB = ({index: e, data: t, keyframes: n, editTarget: s, curve: i})=>{
            const a = (0,
            Y.useMemo)((()=>((e,t)=>{
                let n, s;
                if (t.length < 2)
                    return {};
                const i = t[e]
                  , a = i.time
                  , o = i.value;
                if (a < t[t.length - 1].time) {
                    const n = t[e + 1].time
                      , r = GU(a, n, a, i.outWeight || .1);
                    s = {
                        x: r,
                        y: GU(o, r, a, i.outTangent)
                    }
                }
                if (a > 0) {
                    const s = t[e - 1].time
                      , r = GU(a, s, a, 1 - i.inWeight || .1);
                    n = {
                        x: r,
                        y: GU(o, r, a, i.inTangent)
                    }
                }
                return {
                    in: n,
                    out: s
                }
            }
            )(e, n)), [e, n])
              , o = Dm()
              , r = n[0].readonly ? 1 : 0
              , l = n[n.length - 1].readonly ? 2 : 1;
            return (0,
            z.jsxs)(z.Fragment, {
                children: [a.in && t.inWeight >= 0 && (e > r || i.preWrapMode !== eB.Clamp && i.preWrapMode !== eB.ClampForever) && (0,
                z.jsx)(dB, {
                    index: e,
                    keyframe: t,
                    type: "in",
                    pos: a.in,
                    isFocused: o && s === vB.LeftTangent
                }), a.out && t.outWeight >= 0 && (e < n.length - l || i.postWrapMode !== eB.Clamp && i.postWrapMode !== eB.ClampForever) && (0,
                z.jsx)(dB, {
                    index: e,
                    keyframe: t,
                    type: "out",
                    pos: a.out,
                    isFocused: o && s === vB.RightTangent
                })]
            })
        }
        ;
        X.add("game-ui/editor/widgets/fields/animation-curve-field/components/keyframe-control-points.tsx", {
            get KeyframeControlPoints() {
                return mB
            },
            set KeyframeControlPoints(e) {
                mB = e
            }
        });
        var hB = e=>{
            const {data: t, keyframes: n, isActive: s, index: i, curveIndex: a=0, curve: o, onSelect: r, onDragStart: l, keyframeRenderer: c, editTarget: u, isFocused: d, onControllerDrag: m, controllerDragCallback: h} = e
              , g = (0,
            Y.useRef)(t)
              , p = wD();
            g.current = t;
            const f = (0,
            Y.useCallback)((()=>{
                t.readonly || r?.(i, a)
            }
            ), [t.readonly, r, i, a])
              , x = (0,
            Y.useCallback)(((e,t)=>{
                t && l?.(i)
            }
            ), [i, l])
              , v = Dm();
            return C_((0,
            Y.useCallback)((async()=>{
                if (m && h) {
                    const e = await h()
                      , n = {
                        x: t.time,
                        y: t.value
                    }
                      , s = p.viewport.posFromPoint(n)
                      , a = {
                        x: s.x + 100 * e.x,
                        y: s.y + 100 * e.y
                    };
                    m(p.viewport.pointFromPos(a), i)
                }
            }
            ), [h, t.time, t.value, i, m, p.viewport]), v && h && m && s && u === vB.Keyframe),
            t.readonly ? null : (0,
            z.jsx)("g", {
                className: Zu()(YU.animationCurveKeyframe, {
                    active: s
                }),
                children: c ? c(e, f, x) : (0,
                z.jsxs)(z.Fragment, {
                    children: [s && (0,
                    z.jsx)(mB, {
                        data: t,
                        index: i,
                        curve: o,
                        keyframes: n,
                        editTarget: u
                    }), (0,
                    z.jsx)(lB, {
                        cx: t.time,
                        cy: t.value,
                        r: gB(s, d, v),
                        rh: 3.5,
                        onSelect: f,
                        onMouseDown: x,
                        collisionThreshold: 12
                    })]
                })
            })
        }
        ;
        const gB = (e,t,n)=>n && e ? 4.5 : !n && e || n && t ? 3.5 : 2.5;
        X.add("game-ui/editor/widgets/fields/animation-curve-field/components/keyframe.tsx", {
            get Keyframe() {
                return hB
            },
            set Keyframe(e) {
                hB = e
            }
        });
        var pB = e=>{
            const {data: t, activeKeyframe: n, activeCurve: s, parseKeyframe: i, setDraggedKeyframe: a, selectKeyframe: o, keyframeRenderer: r} = oB()
              , {curveIndex: l, focusedKeyframe: c, editTarget: u, onControllerDrag: d, controllerDragCallback: m} = e
              , h = t.curves[l]?.keys;
            return (0,
            z.jsx)("g", {
                children: t.curves.map(((e,t)=>(0,
                z.jsx)("g", {
                    className: YU.animationCurveKeyframes,
                    children: l === t && !!e.keys?.length && e.keys.map(((g,p)=>(0,
                    z.jsx)(hB, {
                        data: g,
                        index: p,
                        curveIndex: l,
                        curve: e,
                        keyframes: h,
                        isActive: n === p && s === t,
                        isFocused: c === p && s === t,
                        editTarget: u,
                        onSelect: o,
                        onDragStart: a,
                        parseKeyframe: i,
                        keyframeRenderer: r,
                        onControllerDrag: d,
                        controllerDragCallback: m
                    }, g.time)))
                }, t)))
            })
        }
        ;
        X.add("game-ui/editor/widgets/fields/animation-curve-field/components/keyframes.tsx", {
            get Keyframes() {
                return pB
            },
            set Keyframes(e) {
                pB = e
            }
        });
        const fB = e=>(0,
        z.jsx)(tB, {
            keyframe: e
        })
          , xB = e=>(0,
        z.jsx)(Oc, {
            value: e,
            unit: vc.FloatTwoFractions
        });
        var vB;
        !function(e) {
            e[e.None = 0] = "None",
            e[e.LeftTangent = 1] = "LeftTangent",
            e[e.Keyframe = 2] = "Keyframe",
            e[e.RightTangent = 3] = "RightTangent"
        }(vB || (vB = {}));
        var _B = ({children: e, style: t, zoomable: n, panable: s, padding: i, className: a, gridLines: o=!0, drawPaths: r=!0, showTooltipOnDrag: l=!1, useLimits: c=!1, tooltipKeyframe: u, textScale: d=1, formatTooltip: m=fB, formatLabelX: h=xB, formatLabelY: g=xB, onClick: p, onMouseDown: f, onWindowMouseMove: x, keyframeMoveCallback: v, zoomCallback: _, panCallback: b, OnFocusChange: T, focusKey: E})=>{
            const {data: I, canAddKeyframes: S, activeKeyframe: y, selectKeyframe: j, activeCurve: C, allowEditingAll: N, addKeyframe: w, removeKeyframe: O, deselectKeyframes: P, updateKeyframe: L, isDraggingKeyframe: A, draggedKeyframeRef: M, setDraggedKeyframe: R, parseKeyframe: k, smoothenOnMove: D} = oB()
              , F = (0,
            Y.useRef)(null)
              , U = (0,
            Y.useCallback)((({point: {x: e, y: t}})=>{
                w(e, t, C)
            }
            ), [C, w])
              , B = (0,
            Y.useCallback)((e=>{
                p?.(e),
                P()
            }
            ), [P, p])
              , G = (0,
            Y.useCallback)((async(e,t,n=!1)=>{
                if (t > -1) {
                    const s = I.curves[C].keys
                      , i = s[t]
                      , a = {
                        ...i,
                        time: e.x,
                        value: e.y
                    }
                      , o = k ? k(i, a, t, s, C) : a
                      , r = await L(t, o, !!D, C);
                    n && R(r)
                }
            }
            ), [C, I.curves, k, R, D, L])
              , V = (0,
            Y.useCallback)((e=>{
                x?.(e),
                G(e.point, M.current, !0)
            }
            ), [M, G, x]);
            (0,
            Y.useEffect)((()=>{
                if (-1 !== y) {
                    const e = e=>{
                        "Backspace" !== e.code && "Delete" !== e.code || O(y, C)
                    }
                    ;
                    return document.addEventListener("keydown", e),
                    ()=>{
                        document.removeEventListener("keydown", e)
                    }
                }
            }
            ), [C, y, w, O]),
            (0,
            Y.useEffect)((()=>{
                const e = e=>{
                    e.target?.parentNode !== F.current && P()
                }
                ;
                return document.body.addEventListener("click", e),
                ()=>{
                    document.body.removeEventListener("click", e)
                }
            }
            ), [P]);
            const H = u || (A ? I.curves[C]?.keys[M.current] : void 0)
              , K = H ? m(H) : void 0
              , W = (0,
            Y.useMemo)((()=>C >= 0 && C < I.curves.length ? I.curves[C].keys.findIndex((e=>!e.readonly)) : -1), [C, I.curves])
              , [$,q] = (0,
            Y.useState)(-1)
              , [X,Q] = (0,
            Y.useState)(vB.Keyframe)
              , [Z,J] = (0,
            Y.useState)(!1)
              , ee = (0,
            Y.useCallback)((e=>{
                if (J(e),
                T && T(e),
                e && C >= 0 && C < I.curves.length && W >= 0) {
                    const e = I.curves[C];
                    y >= 0 && y < e.keys.length && !e.keys[y].readonly ? q(y) : ($ < 0 || $ >= e.keys.length || e.keys[$].readonly) && q(W)
                }
            }
            ), [T, C, y, I.curves, W, $])
              , te = (0,
            Y.useMemo)((()=>({
                "Move Horizontal": C >= 0 && C < I.curves.length && I.curves[C].keys.length > 1 ? e=>{
                    if (C >= 0 && C < I.curves.length) {
                        const t = I.curves[C];
                        if (y >= 0) {
                            const n = y > 0 && !t.keys[y - 1].readonly
                              , s = y < t.keys.length - 1 && !t.keys[y + 1].readonly
                              , i = Od(X + Math.sign(e), n ? vB.LeftTangent : vB.Keyframe, s ? vB.RightTangent : vB.Keyframe);
                            if (i !== X)
                                return Q(i),
                                !0
                        } else {
                            const n = t.keys.findIndex((e=>!e.readonly))
                              , s = t.keys.length - Array.from(t.keys).reverse().findIndex((e=>!e.readonly)) - 1;
                            if (n >= 0 && s >= 0 && s >= n) {
                                const t = Od($ + Math.sign(e), n, s);
                                if (t !== $ && !I.curves[C].keys[t].readonly)
                                    return q(t),
                                    !0
                            }
                        }
                    }
                    return !1
                }
                : null,
                Back: ()=>C >= 0 && C < I.curves.length && y >= 0 && y < I.curves[C].keys.length && (P(),
                !0),
                Select: ()=>{
                    j($, C),
                    Q(vB.Keyframe)
                }
            })), [C, y, I.curves, P, X, $, j]);
            return (0,
            z.jsx)(Mg, {
                actions: te,
                children: (0,
                z.jsxs)(ck, {
                    className: Zu()(YU.column, YU.editorItem, a),
                    focusKey: E,
                    onFocusChange: ee,
                    children: [(0,
                    z.jsx)(UU, {
                        disabled: !l,
                        alwaysVisible: !0,
                        screenSpacePosition: !0,
                        tooltip: K
                    }), (0,
                    z.jsx)("div", {
                        className: Zu()(YU.editor, {
                            [YU.multipleCurves]: I.curves.length > 1
                        }),
                        ref: F,
                        children: (0,
                        z.jsxs)(YD, {
                            bounds: I.bounds,
                            padding: i || 12,
                            onDoubleClick: S ? U : void 0,
                            onClick: B,
                            onMouseDown: f,
                            onWindowMouseMove: V,
                            style: t,
                            zoomable: n,
                            panable: s,
                            zoomCallback: Z ? _ : void 0,
                            panCallback: Z ? b : void 0,
                            children: [r && (0,
                            z.jsx)("g", {
                                children: I.curves.filter((e=>!e.hidePath)).map(((e,t)=>"number" == typeof e.deviationFrom ? (0,
                                z.jsx)($U, {
                                    keys: e.keys,
                                    base: I.curves[e.deviationFrom].keys,
                                    color: e.color,
                                    className: Zu()({
                                        active: I.curves.length > 1 && t === C
                                    })
                                }, t) : (0,
                                z.jsx)(qU, {
                                    bounds: c ? I.bounds : void 0,
                                    keys: e.keys,
                                    color: e.color,
                                    className: Zu()({
                                        active: I.curves.length > 1 && t === C
                                    })
                                }, t)))
                            }), (C >= 0 || N) && (0,
                            z.jsx)(pB, {
                                curveIndex: C,
                                focusedKeyframe: Z ? $ : -1,
                                editTarget: Z ? X : vB.None,
                                onControllerDrag: G,
                                controllerDragCallback: v
                            }), e, (0,
                            z.jsx)(AU, {
                                fixed: !0,
                                textScale: d,
                                formatLabelX: h,
                                formatLabelY: g
                            }), o && (0,
                            z.jsx)(MU, {
                                overdraw: !0,
                                halfSteps: !0
                            })]
                        })
                    })]
                })
            })
        }
        ;
        X.add("game-ui/editor/widgets/fields/animation-curve-field/animation-curve-editor.tsx", {
            get KeyframeEditTarget() {
                return vB
            },
            set KeyframeEditTarget(e) {
                vB = e
            },
            get AnimationCurveEditor() {
                return _B
            },
            set AnimationCurveEditor(e) {
                _B = e
            }
        });
        let bB = {
            button: "button_UQQ"
        };
        X.add("game-ui/editor/widgets/fields/animation-curve-field/animation-curve-editor-preview.module.scss", {
            get classes() {
                return bB
            },
            set classes(e) {
                Object.assign(bB, e)
            }
        });
        const TB = bB
          , EB = {
            x: 0,
            y: 2
        };
        var IB = ({data: e, onSelect: t, className: n})=>{
            const s = (0,
            Y.useRef)(null);
            return (0,
            z.jsx)(U_, {
                ref: s,
                theme: TB,
                onSelect: t,
                className: rk.dropdownToggle,
                children: (0,
                z.jsx)(YD, {
                    className: n,
                    bounds: e.bounds,
                    padding: EB,
                    children: e.curves.map(((e,t)=>(0,
                    z.jsx)(qU, {
                        keys: e.keys,
                        className: YU.animationCurvePreviewPath
                    }, t)))
                })
            })
        }
        ;
        X.add("game-ui/editor/widgets/fields/animation-curve-field/animation-curve-editor-preview.tsx", {
            get AnimationCurvePreview() {
                return IB
            },
            set AnimationCurvePreview(e) {
                IB = e
            }
        });
        var SB = ({parent: e, path: t, props: n, children: s})=>{
            const i = ZR(e, t)
              , a = (0,
            Y.useContext)(gD);
            return (0,
            z.jsx)(jB, {
                label: (0,
                z.jsx)(gu, {
                    value: n.displayName
                }),
                children: (0,
                z.jsx)(hD, {
                    parent: i,
                    components: a,
                    data: s
                })
            })
        }
          , yB = ({parent: e, path: t, props: n, children: s})=>{
            const i = ZR(e, t)
              , a = (0,
            Y.useContext)(gD)
              , o = YM(kR, i);
            return (0,
            z.jsx)(CB, {
                label: (0,
                z.jsx)(gu, {
                    value: n.displayName
                }),
                expanded: n.expanded,
                onExpandedChange: o,
                children: (0,
                z.jsx)(hD, {
                    parent: i,
                    components: a,
                    data: s
                })
            })
        }
          , jB = ({label: e, children: t})=>(0,
        z.jsxs)(lk, {
            children: [(0,
            z.jsx)("div", {
                className: rk.row,
                children: (0,
                z.jsx)("div", {
                    className: rk.label,
                    children: e
                })
            }), (0,
            z.jsx)("div", {
                className: rk.groupChildren,
                children: t
            })]
        })
          , CB = ({label: e, expanded: t, tooltip: n, children: s, onExpandedChange: i})=>(0,
        z.jsx)(uk, {
            label: e,
            expanded: t,
            onExpandedChange: i,
            tooltip: n,
            children: (0,
            z.jsx)("div", {
                className: rk.groupChildren,
                children: s
            })
        });
        X.add("game-ui/editor/widgets/group/editor-group.tsx", {
            get BoundGroup() {
                return SB
            },
            set BoundGroup(e) {
                SB = e
            },
            get BoundExpandableGroup() {
                return yB
            },
            set BoundExpandableGroup(e) {
                yB = e
            },
            get EditorGroup() {
                return jB
            },
            set EditorGroup(e) {
                jB = e
            },
            get ExpandableEditorGroup() {
                return CB
            },
            set ExpandableEditorGroup(e) {
                CB = e
            }
        });
        let NB = {
            "draggable-value": "draggable-value_l2t",
            draggableValue: "draggable-value_l2t",
            "draggable-value-cursor": "draggable-value-cursor_v5P",
            draggableValueCursor: "draggable-value-cursor_v5P",
            dragging: "dragging_d8v"
        };
        X.add("game-ui/common/input/draggable-value/draggable-value.module.scss", {
            get classes() {
                return NB
            },
            set classes(e) {
                Object.assign(NB, e)
            }
        });
        const wB = NB;
        function OB(e, t) {
            const {value: n, disabled: s, className: i, dragTransformation: a, onChange: o, onDragStart: r, onDragEnd: l, children: c} = e
              , u = (0,
            Y.useRef)(null)
              , d = (0,
            Y.useCallback)((({clientX: e})=>!s && (document.activeElement instanceof HTMLElement && document.activeElement.blur(),
            u.current = {
                clientX: e,
                value: n
            },
            r && r(),
            !0)), [s, n, r])
              , m = (0,
            Y.useCallback)((({clientX: e})=>{
                if (s || null == u.current)
                    return;
                const t = (e - u.current.clientX) / window.innerWidth;
                o && o(a(u.current.value, t))
            }
            ), [s, a, o])
              , h = (0,
            Y.useCallback)((()=>{
                l && l()
            }
            ), [l])
              , [g,p] = rb(d, m, h);
            return qp(g && !s ? wB.draggableValueCursor : void 0),
            (0,
            z.jsx)("div", {
                ref: t,
                className: Zu()({
                    [wB.draggableValue]: !s,
                    [wB.dragging]: g
                }, i),
                onMouseDown: p,
                children: c
            })
        }
        var PB = (0,
        Y.forwardRef)(OB);
        function LB({value: e, valueFormatter: t, inputValidator: n, inputTransformer: s=AB, inputParser: i, onChange: a, onFocus: o, onBlur: r, ...l}) {
            const [c,u] = (0,
            Y.useState)(null)
              , [d,m] = (0,
            Y.useState)(!1)
              , h = (0,
            Y.useMemo)((()=>t(e)), [e, t])
              , g = Dm()
              , p = (0,
            Y.useCallback)((e=>{
                const t = s(e.target.value || "");
                if (n(t)) {
                    const e = c;
                    if (u(t),
                    a) {
                        const n = null !== e ? i(e) : void 0
                          , s = null !== t ? i(t) : void 0;
                        if (void 0 !== s && s !== n)
                            return a(s)
                    }
                }
            }
            ), [i, s, n, c, a])
              , f = (0,
            Y.useCallback)((n=>{
                m(!0),
                u(t(e)),
                o && o(n)
            }
            ), [o, e, t])
              , x = (0,
            Y.useCallback)((e=>{
                m(!1),
                u(null),
                r && r(e)
            }
            ), [r]);
            return (0,
            Y.useEffect)((()=>{
                !g && d || u(t(e))
            }
            ), [g, d, e, t]),
            (0,
            z.jsx)(oI, {
                ...l,
                value: c ?? h,
                onChange: p,
                onFocus: f,
                onBlur: x
            })
        }
        function AB(e) {
            return e
        }
        X.add("game-ui/common/input/draggable-value/draggable-value.tsx", {
            get DraggableValue() {
                return PB
            },
            set DraggableValue(e) {
                PB = e
            }
        }),
        X.add("game-ui/common/input/text/data-input.tsx", {
            get DataInput() {
                return LB
            },
            set DataInput(e) {
                LB = e
            }
        });
        var MB = ({min: e=Ed, max: t=Id, fractionDigits: n=3, ...s})=>{
            const i = (0,
            Y.useCallback)((n=>function(e, t, n) {
                if ("-" === e || "." === e)
                    return;
                if ("" === e)
                    return t <= 0 && n >= 0 ? 0 : void 0;
                const s = parseFloat(e);
                return isNaN(s) ? void 0 : Od(s, t, n)
            }(n, e, t)), [e, t])
              , a = (0,
            Y.useCallback)((e=>e.toFixed(n)), [n]);
            return (0,
            z.jsx)(LB, {
                ...s,
                valueFormatter: a,
                inputParser: i,
                inputValidator: e < 0 ? RB : kB
            })
        }
        ;
        function RB(e) {
            return /^-?[0-9]*\.?[0-9]*$/.test(e)
        }
        function kB(e) {
            return /^[0-9]*\.?[0-9]*$/.test(e)
        }
        X.add("game-ui/common/input/text/float-input.tsx", {
            get FloatInput() {
                return MB
            },
            set FloatInput(e) {
                MB = e
            }
        });
        var DB = e=>(0,
        z.jsx)(FB, {
            ...e
        })
          , FB = ({disabled: e, value: t, onChange: n, label: s, min: i=Ed, max: a=Id, fractionDigits: o=3, onChangeStart: r, onChangeEnd: l, tooltip: c})=>{
            const u = HB(i, a);
            return (0,
            z.jsx)(ck, {
                disabled: e,
                children: (0,
                z.jsx)(Eg, {
                    tooltip: c && (0,
                    z.jsx)(gu, {
                        value: c
                    }),
                    children: (0,
                    z.jsxs)("div", {
                        className: rk.row,
                        children: [(0,
                        z.jsx)(PB, {
                            value: t,
                            disabled: e,
                            className: rk.label,
                            dragTransformation: u,
                            onChange: n,
                            children: s
                        }), (0,
                        z.jsx)("div", {
                            className: rk.control,
                            children: (0,
                            z.jsx)(MB, {
                                showHint: !0,
                                value: t,
                                min: i,
                                max: a,
                                fractionDigits: o,
                                disabled: e,
                                className: rk.input,
                                onChange: n,
                                onFocus: r,
                                onBlur: l
                            })
                        })]
                    })
                })
            })
        }
          , UB = ({label: e, value: t, min: n=Sd, max: s=yd, disabled: i, onChange: a, ...o})=>{
            const r = (0,
            Y.useCallback)((e=>a({
                ...t,
                x: e
            })), [t, a])
              , l = (0,
            Y.useCallback)((e=>a({
                ...t,
                y: e
            })), [t, a])
              , c = function(e=Sd, t=yd) {
                return (0,
                Y.useCallback)(((n,s)=>{
                    const i = 30;
                    return {
                        x: Od(n.x + s * i, e.x, t.x),
                        y: Od(n.y + s * i, e.y, t.y)
                    }
                }
                ), [t, e])
            }(n, s);
            return (0,
            z.jsx)(ck, {
                disabled: i,
                children: (0,
                z.jsx)(Eg, {
                    tooltip: o.tooltip && (0,
                    z.jsx)(gu, {
                        value: o.tooltip
                    }),
                    children: (0,
                    z.jsxs)("div", {
                        className: rk.row,
                        children: [(0,
                        z.jsx)(PB, {
                            value: t,
                            disabled: i,
                            className: rk.label,
                            dragTransformation: c,
                            onChange: a,
                            children: e
                        }), (0,
                        z.jsx)("div", {
                            className: rk.control,
                            children: (0,
                            z.jsxs)(np, {
                                direction: kg.Horizontal,
                                children: [(0,
                                z.jsx)(VB, {
                                    ...o,
                                    label: "X",
                                    value: t.x,
                                    min: n.x,
                                    max: s.x,
                                    disabled: i,
                                    onChange: r
                                }), (0,
                                z.jsx)(VB, {
                                    ...o,
                                    label: "Y",
                                    value: t.y,
                                    min: n.y,
                                    max: s.y,
                                    disabled: i,
                                    onChange: l
                                })]
                            })
                        })]
                    })
                })
            })
        }
          , BB = ({label: e, value: t, min: n=jd, max: s=Cd, disabled: i, onChange: a, ...o})=>{
            const r = (0,
            Y.useCallback)((e=>a({
                ...t,
                x: e
            })), [t, a])
              , l = (0,
            Y.useCallback)((e=>a({
                ...t,
                y: e
            })), [t, a])
              , c = (0,
            Y.useCallback)((e=>a({
                ...t,
                z: e
            })), [t, a])
              , u = function(e=jd, t=Cd) {
                return (0,
                Y.useCallback)(((n,s)=>{
                    const i = 30;
                    return {
                        x: Od(n.x + s * i, e.x, t.x),
                        y: Od(n.y + s * i, e.y, t.y),
                        z: Od(n.z + s * i, e.z, t.z)
                    }
                }
                ), [t, e])
            }(n, s);
            return (0,
            z.jsx)(ck, {
                disabled: i,
                children: (0,
                z.jsx)(Eg, {
                    tooltip: o.tooltip && (0,
                    z.jsx)(gu, {
                        value: o.tooltip
                    }),
                    children: (0,
                    z.jsxs)("div", {
                        className: rk.row,
                        children: [(0,
                        z.jsx)(PB, {
                            value: t,
                            disabled: i,
                            className: rk.label,
                            dragTransformation: u,
                            onChange: a,
                            children: e
                        }), (0,
                        z.jsx)("div", {
                            className: rk.control,
                            children: (0,
                            z.jsxs)(np, {
                                direction: kg.Horizontal,
                                children: [(0,
                                z.jsx)(VB, {
                                    ...o,
                                    label: "X",
                                    value: t.x,
                                    min: n.x,
                                    max: s.x,
                                    disabled: i,
                                    onChange: r
                                }), (0,
                                z.jsx)(VB, {
                                    ...o,
                                    label: "Y",
                                    value: t.y,
                                    min: n.y,
                                    max: s.y,
                                    disabled: i,
                                    onChange: l
                                }), (0,
                                z.jsx)(VB, {
                                    ...o,
                                    label: "Z",
                                    value: t.z,
                                    min: n.z,
                                    max: s.z,
                                    disabled: i,
                                    onChange: c
                                })]
                            })
                        })]
                    })
                })
            })
        }
          , GB = ({label: e, value: t, min: n=Nd, max: s=wd, disabled: i, onChange: a, ...o})=>{
            const r = (0,
            Y.useCallback)((e=>a({
                ...t,
                x: e
            })), [t, a])
              , l = (0,
            Y.useCallback)((e=>a({
                ...t,
                y: e
            })), [t, a])
              , c = (0,
            Y.useCallback)((e=>a({
                ...t,
                z: e
            })), [t, a])
              , u = (0,
            Y.useCallback)((e=>a({
                ...t,
                w: e
            })), [t, a])
              , d = function(e=Nd, t=wd) {
                return (0,
                Y.useCallback)(((n,s)=>{
                    const i = 30;
                    return {
                        x: Od(n.x + s * i, e.x, t.x),
                        y: Od(n.y + s * i, e.y, t.y),
                        z: Od(n.z + s * i, e.z, t.z),
                        w: Od(n.w + s * i, e.w, t.w)
                    }
                }
                ), [t, e])
            }(n, s);
            return (0,
            z.jsx)(ck, {
                disabled: i,
                children: (0,
                z.jsx)(Eg, {
                    tooltip: o.tooltip && (0,
                    z.jsx)(gu, {
                        value: o.tooltip
                    }),
                    children: (0,
                    z.jsxs)("div", {
                        className: rk.row,
                        children: [(0,
                        z.jsx)(PB, {
                            value: t,
                            disabled: i,
                            className: rk.label,
                            dragTransformation: d,
                            onChange: a,
                            children: e
                        }), (0,
                        z.jsx)("div", {
                            className: rk.control,
                            children: (0,
                            z.jsxs)(np, {
                                direction: kg.Horizontal,
                                children: [(0,
                                z.jsx)(VB, {
                                    ...o,
                                    label: "X",
                                    value: t.x,
                                    min: n.x,
                                    max: s.x,
                                    disabled: i,
                                    onChange: r
                                }), (0,
                                z.jsx)(VB, {
                                    ...o,
                                    label: "Y",
                                    value: t.y,
                                    min: n.y,
                                    max: s.y,
                                    disabled: i,
                                    onChange: l
                                }), (0,
                                z.jsx)(VB, {
                                    ...o,
                                    label: "Z",
                                    value: t.z,
                                    min: n.z,
                                    max: s.z,
                                    disabled: i,
                                    onChange: c
                                }), (0,
                                z.jsx)(VB, {
                                    ...o,
                                    label: "W",
                                    value: t.z,
                                    min: n.w,
                                    max: s.w,
                                    disabled: i,
                                    onChange: u
                                })]
                            })
                        })]
                    })
                })
            })
        }
        ;
        const VB = ({label: e, value: t, disabled: n, onChange: s, onChangeStart: i, onChangeEnd: a, min: o, max: r})=>{
            const l = HB(o, r);
            return (0,
            z.jsxs)(z.Fragment, {
                children: [(0,
                z.jsx)(PB, {
                    value: t,
                    disabled: n,
                    className: rk.vectorLabel,
                    dragTransformation: l,
                    onChange: s,
                    children: e
                }), (0,
                z.jsx)(MB, {
                    showHint: !0,
                    value: t,
                    disabled: n,
                    onChange: s,
                    onFocus: i,
                    onBlur: a,
                    className: rk.vectorInput,
                    min: o,
                    max: r
                })]
            })
        }
        ;
        function HB(e=Ed, t=Id) {
            return (0,
            Y.useCallback)(((n,s)=>function(e, t, n, s) {
                return Od(e + 60 * t, n, s)
            }(n, s, e, t)), [t, e])
        }
        X.add("game-ui/editor/widgets/fields/float-input-field.tsx", {
            get EditorFloatInputField() {
                return DB
            },
            set EditorFloatInputField(e) {
                DB = e
            },
            get FloatInputField() {
                return FB
            },
            set FloatInputField(e) {
                FB = e
            },
            get Float2InputField() {
                return UB
            },
            set Float2InputField(e) {
                UB = e
            },
            get Float3InputField() {
                return BB
            },
            set Float3InputField(e) {
                BB = e
            },
            get Float4InputField() {
                return GB
            },
            set Float4InputField(e) {
                GB = e
            }
        });
        var KB = ()=>{
            const {activeKeyframe: e, activeCurve: t, data: n, canAddKeyframes: s, parseKeyframe: i, updateKeyframe: a, removeKeyframe: o} = oB()
              , r = n.curves[t]?.keys[e]
              , l = (0,
            Y.useMemo)((()=>{
                const s = (s,o)=>{
                    const l = {
                        ...r,
                        [s]: o
                    }
                      , c = i ? i(r, l, e, n.curves[t]?.keys, t) : l;
                    a(e, c, !1, t)
                }
                ;
                return {
                    changeTime: e=>s("time", e),
                    changeValue: e=>s("value", e),
                    changeInTangent: e=>s("inTangent", e),
                    changeInWeight: e=>s("inWeight", e),
                    changeOutTangent: e=>s("outTangent", e),
                    changeOutWeight: e=>s("outWeight", e),
                    smoothenTangents: ()=>a(e, r, !0, t),
                    removeKeyframe: ()=>o(e, t)
                }
            }
            ), [t, e, n.curves, r, i, o, a]);
            if (!r)
                return null;
            const c = n.curves[t];
            return (0,
            z.jsxs)(jB, {
                label: `Keyframe ${e}`,
                children: [(0,
                z.jsx)(FB, {
                    label: (0,
                    z.jsx)(_c.Editor.WIDGETS, {
                        hash: "Time"
                    }),
                    value: r.time,
                    onChange: l.changeTime
                }), (0,
                z.jsx)(FB, {
                    label: (0,
                    z.jsx)(_c.Editor.WIDGETS, {
                        hash: "Value"
                    }),
                    value: r.value,
                    onChange: l.changeValue
                }), e > 0 && (0,
                z.jsxs)(jB, {
                    label: (0,
                    z.jsx)(_c.Editor.WIDGETS, {
                        hash: "In"
                    }),
                    children: [(0,
                    z.jsx)(FB, {
                        label: (0,
                        z.jsx)(_c.Editor.WIDGETS, {
                            hash: "Tangent"
                        }),
                        value: r.inTangent,
                        onChange: l.changeInTangent
                    }), (0,
                    z.jsx)(FB, {
                        label: (0,
                        z.jsx)(_c.Editor.WIDGETS, {
                            hash: "Weight"
                        }),
                        value: r.inWeight,
                        min: 0,
                        max: 1,
                        onChange: l.changeInWeight
                    })]
                }), e < c.keys.length - 1 && (0,
                z.jsxs)(jB, {
                    label: (0,
                    z.jsx)(_c.Editor.WIDGETS, {
                        hash: "Out"
                    }),
                    children: [(0,
                    z.jsx)(FB, {
                        label: (0,
                        z.jsx)(_c.Editor.WIDGETS, {
                            hash: "Tangent"
                        }),
                        value: r.outTangent,
                        onChange: l.changeOutTangent
                    }), (0,
                    z.jsx)(FB, {
                        label: (0,
                        z.jsx)(_c.Editor.WIDGETS, {
                            hash: "Weight"
                        }),
                        value: r.outWeight,
                        min: 0,
                        max: 1,
                        onChange: l.changeOutWeight
                    })]
                }), (0,
                z.jsx)(lk, {
                    children: (0,
                    z.jsxs)("div", {
                        className: Zu()(YU.row, YU.controls),
                        children: [(0,
                        z.jsx)(U_, {
                            theme: CR,
                            onSelect: l.smoothenTangents,
                            children: "Smoothen"
                        }), s && (0,
                        z.jsx)(U_, {
                            disabled: c.keys.length < 3,
                            theme: CR,
                            onSelect: l.removeKeyframe,
                            children: "Delete Keyframe"
                        })]
                    })
                })]
            })
        }
        ;
        X.add("game-ui/editor/widgets/fields/animation-curve-field/keyframe-editor.tsx", {
            get KeyframeEditor() {
                return KB
            },
            set KeyframeEditor(e) {
                KB = e
            }
        });
        const WB = {
            min: {
                x: 0,
                y: 0
            },
            max: {
                x: 1,
                y: 1
            }
        };
        var zB = (e,t)=>{
            const n = (0,
            Y.useRef)()
              , s = (0,
            Y.useRef)()
              , i = (0,
            Y.useRef)()
              , a = (0,
            Y.useRef)()
              , o = (0,
            Y.useRef)()
              , r = (0,
            Y.useRef)()
              , {autoUpdateBounds: l, minX: c, maxX: u, minY: d, maxY: m, wrapMode: h, hash: g} = t || {};
            return (0,
            Y.useMemo)((()=>{
                const t = Array.isArray(e) ? e : [e]
                  , p = t.reduce(((e,t)=>t ? {
                    maxKeysCount: Math.max(t.keys.filter((e=>!e.readonly)).length, e.maxKeysCount),
                    readOnlyCount: t.keys.reduce(((e,t)=>e + Number(!!t.readonly)), 0)
                } : {
                    maxKeysCount: 0,
                    readOnlyCount: 0
                }), {
                    maxKeysCount: 0,
                    readOnlyCount: 0
                });
                let f = WB;
                if (0 === p.maxKeysCount)
                    return f = {
                        min: {
                            x: c ?? 0,
                            y: d ?? 0
                        },
                        max: {
                            x: u ?? 1,
                            y: m ?? 1
                        }
                    },
                    {
                        bounds: f,
                        curves: t
                    };
                const x = s.current !== p.maxKeysCount
                  , v = o.current || {}
                  , _ = v.minX !== c || v.maxX !== u || v.minY !== d || v.maxY !== m
                  , b = t.length !== a.current
                  , T = r.current !== g
                  , E = "number" == typeof c
                  , I = "number" == typeof u
                  , S = "number" == typeof d
                  , y = "number" == typeof m;
                l || !n.current || x || _ || h !== v?.wrapMode || b || T ? p.maxKeysCount > 0 && (f = {
                    min: {
                        x: E ? c : 1 / 0,
                        y: S ? d : 0
                    },
                    max: {
                        x: I ? u : -1 / 0,
                        y: y ? m : 0
                    }
                }) : f = n.current,
                t.forEach((e=>{
                    e.keys.forEach((e=>{
                        e.time < f.min.x && (!E || l) && (f.min.x = e.time),
                        e.time > f.max.x && (!I || l) && (f.max.x = e.time),
                        e.value < f.min.y && (!S || l) && (f.min.y = e.value),
                        e.value > f.max.y && (!y || l) && (f.max.y = e.value)
                    }
                    ))
                }
                ));
                {
                    const e = f.max.x - f.min.x;
                    if (e < 1)
                        f.min.x = Math.floor(f.min.x - (1 - e) / 2),
                        f.max.x = Math.ceil(f.min.x + (1 - e) / 2);
                    else if (0 === e) {
                        const e = Math.max(1, Math.pow(10, Math.round(Math.log10(Math.abs(f.min.x)))));
                        E && I || !E && !I ? (f.min.x -= e / 2,
                        f.max.x += e / 2) : E ? f.max.x += e : I && (f.min.x -= e)
                    }
                }
                {
                    const e = f.max.y - f.min.y;
                    if (e < 1 && 0 !== e)
                        f.min.y = Math.floor(f.min.y - (1 - e) / 2),
                        f.max.y = Math.ceil(f.min.y + (1 - e) / 2);
                    else if (0 === e) {
                        const e = Math.max(1, Math.pow(10, Math.round(Math.log10(Math.abs(f.min.y)))));
                        S && y || !S && !y ? (f.min.y -= e / 2,
                        f.max.y += e / 2) : S ? f.max.y += e : y && (f.min.y -= e)
                    }
                }
                const j = {
                    bounds: VU(n.current, f),
                    curves: t,
                    maxKeysCount: p.maxKeysCount
                };
                return h && KU(h, t, j.bounds),
                n.current = f,
                s.current = p.maxKeysCount,
                i.current = p.readOnlyCount,
                r.current = g,
                a.current = t.length,
                o.current = {
                    maxX: u,
                    minX: c,
                    maxY: m,
                    minY: d,
                    wrapMode: h
                },
                j
            }
            ), [e, c, u, d, m, g, l, h])
        }
        ;
        X.add("game-ui/editor/widgets/fields/animation-curve-field/utils/use-animation-curve-data.tsx", {
            get useAnimationCurveData() {
                return zB
            },
            set useAnimationCurveData(e) {
                zB = e
            }
        });
        var YB = ({label: e, value: t, disabled: n, hidePreview: s, expanded: i, initialEditing: a, autoUpdateBounds: o, bounds: r, smoothenOnMove: l, canAddKeyframes: c=!0, wrapMode: u, parseKeyframe: d, onAddKeyframe: m, onMoveKeyframe: h, onRemoveKeyframe: g, onSetKeyframes: p})=>{
            const f = zB(t, {
                autoUpdateBounds: !0,
                ...r
            })
              , x = zB(t, {
                autoUpdateBounds: o,
                ...r,
                wrapMode: u
            })
              , [v,_] = (0,
            Y.useState)(i || a)
              , b = (0,
            Y.useMemo)((()=>{
                if (!i && !n)
                    return ()=>_((e=>!e))
            }
            ), [i, n]);
            return (0,
            z.jsxs)(z.Fragment, {
                children: [(0,
                z.jsx)(ck, {
                    disabled: n,
                    children: (0,
                    z.jsx)(dk, {
                        label: e,
                        onSelect: b,
                        children: !s && (0,
                        z.jsx)(IB, {
                            data: f,
                            onSelect: b
                        })
                    })
                }), (0,
                z.jsx)(mk, {
                    visible: v,
                    children: (0,
                    z.jsxs)(aB, {
                        data: x,
                        onAddKeyframe: m,
                        onMoveKeyframe: h,
                        onRemoveKeyframe: g,
                        onSetKeyframes: p,
                        parseKeyframe: d,
                        canAddKeyframes: c,
                        smoothenOnMove: l,
                        children: [(0,
                        z.jsx)(_B, {
                            zoomable: !0,
                            panable: !0
                        }), (0,
                        z.jsx)(KB, {})]
                    })
                })]
            })
        }
        ;
        X.add("game-ui/editor/widgets/fields/animation-curve-field/animation-curve-field.tsx", {
            get AnimationCurveField() {
                return YB
            },
            set AnimationCurveField(e) {
                YB = e
            }
        });
        var $B = e=>{
            const t = (({parent: e, path: t})=>{
                const n = (0,
                Y.useMemo)((()=>{
                    const n = PR(e.path, t);
                    return {
                        onAddKeyframe: (t,s,i)=>WR(e.group, n, t, s, i),
                        onMoveKeyframe: (t,s,i,a)=>KR(e.group, n, t, s, i, a),
                        onRemoveKeyframe: (t,s)=>zR(e.group, n, t, s),
                        onSetKeyframes: (t,s)=>YR(e.group, n, t, s)
                    }
                }
                ), [e.group, e.path, t]);
                return n
            }
            )(e);
            return (0,
            z.jsx)(YB, {
                ...e.props,
                ...t,
                smoothenOnMove: !1,
                label: (0,
                z.jsx)(gu, {
                    value: e.props.displayName
                })
            })
        }
        ;
        X.add("game-ui/editor/widgets/fields/animation-curve-field/animation-curve-field.bound.tsx", {
            get BoundAnimationCurveField() {
                return $B
            },
            set BoundAnimationCurveField(e) {
                $B = e
            }
        });
        var qB = ({label: e, value: t, onChange: n, ...s})=>{
            const i = (0,
            Y.useCallback)((e=>n({
                ...t,
                a: e
            })), [n, t])
              , a = (0,
            Y.useCallback)((e=>n({
                ...t,
                b: e
            })), [n, t])
              , o = (0,
            Y.useCallback)((e=>n({
                ...t,
                c: e
            })), [n, t])
              , r = (0,
            Y.useCallback)((e=>n({
                ...t,
                d: e
            })), [n, t]);
            return (0,
            z.jsxs)(jB, {
                label: e,
                children: [(0,
                z.jsx)(BB, {
                    ...s,
                    label: "A",
                    value: t.a,
                    onChange: i
                }), (0,
                z.jsx)(BB, {
                    ...s,
                    label: "B",
                    value: t.b,
                    onChange: a
                }), (0,
                z.jsx)(BB, {
                    ...s,
                    label: "C",
                    value: t.c,
                    onChange: o
                }), (0,
                z.jsx)(BB, {
                    ...s,
                    label: "D",
                    value: t.d,
                    onChange: r
                })]
            })
        }
        ;
        X.add("game-ui/editor/widgets/fields/bezier4x3-field.tsx", {
            get Bezier4x3Field() {
                return qB
            },
            set Bezier4x3Field(e) {
                qB = e
            }
        });
        var XB = ({min: e=_d, max: t=bd, ...n})=>{
            const s = (0,
            Y.useCallback)((n=>function(e, t, n) {
                if ("-" === e)
                    return;
                if ("" === e)
                    return t <= 0 && n >= 0 ? 0 : void 0;
                const s = parseInt(e, 10);
                return isNaN(s) ? void 0 : Od(s, t, n)
            }(n, e, t)), [e, t]);
            return (0,
            z.jsx)(LB, {
                ...n,
                showHint: !0,
                valueFormatter: QB,
                inputParser: s,
                inputValidator: e < 0 ? ZB : JB
            })
        }
        ;
        function QB(e) {
            return Math.trunc(e).toString(10)
        }
        function ZB(e) {
            return /^-?[0-9]*$/.test(e)
        }
        function JB(e) {
            return /^[0-9]*$/.test(e)
        }
        X.add("game-ui/common/input/text/int-input.tsx", {
            get IntInput() {
                return XB
            },
            set IntInput(e) {
                XB = e
            }
        });
        let eG = {
            slider: "slider_KXG slider_pUS",
            compact: "compact_c2g",
            range: "range_nHO range_iUN",
            thumb: "thumb_kkL"
        };
        X.add("game-ui/editor/themes/editor-slider.module.scss", {
            get classes() {
                return eG
            },
            set classes(e) {
                Object.assign(eG, e)
            }
        });
        const tG = eG;
        var nG = ({label: e, value: t, min: n, max: s, disabled: i, tooltip: a, onChange: o, onChangeStart: r, onChangeEnd: l})=>(0,
        z.jsx)(ck, {
            disabled: i,
            children: (0,
            z.jsx)(Eg, {
                tooltip: a && (0,
                z.jsx)(gu, {
                    value: a
                }),
                children: (0,
                z.jsxs)("div", {
                    className: rk.row,
                    children: [(0,
                    z.jsx)("div", {
                        className: rk.label,
                        children: e
                    }), (0,
                    z.jsx)("div", {
                        className: rk.control,
                        children: (0,
                        z.jsxs)(np, {
                            direction: kg.Horizontal,
                            children: [(0,
                            z.jsx)(Ip, {
                                className: rk.sliderContainer,
                                children: (0,
                                z.jsx)(Op, {
                                    children: (0,
                                    z.jsx)(AA, {
                                        showHint: !0,
                                        value: t,
                                        start: n,
                                        end: s,
                                        disabled: i,
                                        theme: tG,
                                        className: rk.slider,
                                        valueTransformer: RA,
                                        onChange: o,
                                        onDragStart: r,
                                        onDragEnd: l
                                    })
                                })
                            }), (0,
                            z.jsx)(XB, {
                                showHint: !0,
                                value: t,
                                min: n,
                                max: s,
                                disabled: i,
                                onChange: o,
                                onFocus: r,
                                onBlur: l,
                                className: rk.sliderInput
                            })]
                        })
                    })]
                })
            })
        })
          , sG = e=>(0,
        z.jsx)(nG, {
            ...e,
            updateOnDragEnd: !1
        })
          , iG = ({label: e, value: t, min: n, max: s, fractionDigits: i=3, disabled: a, tooltip: o, onChange: r, onChangeStart: l, onChangeEnd: c})=>{
            const u = kA(Math.pow(10, -i));
            return (0,
            z.jsx)(ck, {
                disabled: a,
                children: (0,
                z.jsx)(Eg, {
                    tooltip: o && (0,
                    z.jsx)(gu, {
                        value: o
                    }),
                    children: (0,
                    z.jsxs)("div", {
                        className: rk.row,
                        children: [(0,
                        z.jsx)("div", {
                            className: rk.label,
                            children: e
                        }), (0,
                        z.jsx)("div", {
                            className: rk.control,
                            children: (0,
                            z.jsxs)(np, {
                                direction: kg.Horizontal,
                                children: [(0,
                                z.jsx)(Ip, {
                                    className: rk.sliderContainer,
                                    children: (0,
                                    z.jsx)(Op, {
                                        children: (0,
                                        z.jsx)(AA, {
                                            showHint: !0,
                                            value: t,
                                            start: n,
                                            end: s,
                                            disabled: a,
                                            theme: tG,
                                            className: rk.slider,
                                            valueTransformer: u,
                                            onChange: r,
                                            onDragStart: l,
                                            onDragEnd: c
                                        })
                                    })
                                }), (0,
                                z.jsx)(MB, {
                                    showHint: !0,
                                    value: t,
                                    min: n,
                                    max: s,
                                    fractionDigits: i,
                                    disabled: a,
                                    onChange: r,
                                    onFocus: l,
                                    onBlur: c,
                                    className: rk.sliderInput
                                })]
                            })
                        })]
                    })
                })
            })
        }
        ;
        X.add("game-ui/editor/widgets/fields/number-slider-field.tsx", {
            get IntSliderField() {
                return nG
            },
            set IntSliderField(e) {
                nG = e
            },
            get UIntSliderField() {
                return sG
            },
            set UIntSliderField(e) {
                sG = e
            },
            get FloatSliderField() {
                return iG
            },
            set FloatSliderField(e) {
                iG = e
            }
        });
        var aG = ({min: e=0, max: t=1439 / 1440, ...n})=>{
            const s = (0,
            Y.useCallback)((n=>function(e, t, n) {
                if ("-" === e)
                    return;
                if ("" === e)
                    return t <= 0 && n >= 0 ? 0 : void 0;
                const s = /^(-?)(\d+):(\d+)$/g.exec(e);
                if (null != s) {
                    const e = ("-" === s[1] ? -1 : 1) * (60 * parseInt(s[2]) + parseInt(s[3])) / 1440;
                    if (!isNaN(e))
                        return Od(e, t, n)
                }
                const i = parseInt(e, 10) / 24;
                return isNaN(i) ? void 0 : Od(i, t, n)
            }(n, e, t)), [e, t]);
            return (0,
            z.jsx)(LB, {
                ...n,
                valueFormatter: oG,
                inputParser: s,
                inputValidator: e < 0 ? rG : lG
            })
        }
        ;
        function oG(e) {
            const t = -1 === Math.sign(e) ? "-" : ""
              , n = Math.floor(24 * (Math.abs(e) + 1e-5))
              , s = Math.round(1440 * Math.abs(e)) % 60;
            return `${t}${Tu(n, 2)}:${Tu(s, 2)}`
        }
        function rG(e) {
            return /^-?[0-9]*:?[0-9]*$/.test(e)
        }
        function lG(e) {
            return /^[0-9]*:?[0-9]*$/.test(e)
        }
        X.add("game-ui/common/input/text/time-input.tsx", {
            get TimeInput() {
                return aG
            },
            set TimeInput(e) {
                aG = e
            }
        });
        var cG = ({label: e, value: t, min: n, max: s, disabled: i, tooltip: a, onChange: o, onChangeStart: r, onChangeEnd: l})=>(0,
        z.jsx)(ck, {
            disabled: i,
            children: (0,
            z.jsx)(Eg, {
                tooltip: a && (0,
                z.jsx)(gu, {
                    value: a
                }),
                children: (0,
                z.jsxs)("div", {
                    className: rk.row,
                    children: [(0,
                    z.jsx)("div", {
                        className: rk.label,
                        children: e
                    }), (0,
                    z.jsx)("div", {
                        className: rk.control,
                        children: (0,
                        z.jsxs)(np, {
                            direction: kg.Horizontal,
                            children: [(0,
                            z.jsx)(Ip, {
                                className: rk.sliderContainer,
                                children: (0,
                                z.jsx)(Op, {
                                    children: (0,
                                    z.jsx)(AA, {
                                        showHint: !0,
                                        value: t,
                                        start: n,
                                        end: s,
                                        disabled: i,
                                        theme: tG,
                                        className: rk.slider,
                                        valueTransformer: uG,
                                        onChange: o,
                                        onDragStart: r,
                                        onDragEnd: l
                                    })
                                })
                            }), (0,
                            z.jsx)(aG, {
                                showHint: !0,
                                value: t,
                                min: n,
                                max: s,
                                disabled: i,
                                onChange: o,
                                onFocus: r,
                                onBlur: l,
                                className: rk.sliderInput
                            })]
                        })
                    })]
                })
            })
        });
        function uG(e, t, n) {
            return Od(Math.round(96 * (e + n * (t - e))) / 96, Math.min(e, t), Math.max(e, t))
        }
        X.add("game-ui/editor/widgets/fields/time-slider-field.tsx", {
            get TimeSliderField() {
                return cG
            },
            set TimeSliderField(e) {
                cG = e
            },
            get quarterHourTransformer() {
                return uG
            },
            set quarterHourTransformer(e) {
                uG = e
            }
        });
        var dG = ({label: e, value: t, allowMinGreaterMax: n, onChange: s, ...i})=>{
            const a = (0,
            Y.useCallback)((e=>s({
                ...t,
                min: n ? e : Math.min(e, t.max)
            })), [s, n, t])
              , o = (0,
            Y.useCallback)((e=>s({
                ...t,
                max: n ? e : Math.max(e, t.min)
            })), [s, n, t]);
            return (0,
            z.jsxs)(jB, {
                label: e,
                children: [(0,
                z.jsx)(DB, {
                    ...i,
                    label: (0,
                    z.jsx)(_c.Editor.WIDGETS, {
                        hash: "Min"
                    }),
                    value: t.min,
                    onChange: a
                }), (0,
                z.jsx)(DB, {
                    ...i,
                    label: (0,
                    z.jsx)(_c.Editor.WIDGETS, {
                        hash: "Max"
                    }),
                    value: t.max,
                    onChange: o
                })]
            })
        }
          , mG = ({label: e, value: t, allowMinGreaterMax: n, onChange: s, ...i})=>{
            const a = (0,
            Y.useCallback)((e=>{
                s({
                    ...t,
                    min: {
                        x: n ? e.x : Math.min(e.x, t.max.x),
                        y: n ? e.y : Math.min(e.y, t.max.y)
                    }
                })
            }
            ), [s, n, t])
              , o = (0,
            Y.useCallback)((e=>{
                s({
                    ...t,
                    max: {
                        x: n ? e.x : Math.max(e.x, t.min.x),
                        y: n ? e.y : Math.max(e.y, t.min.y)
                    }
                })
            }
            ), [s, n, t]);
            return (0,
            z.jsxs)(jB, {
                label: e,
                children: [(0,
                z.jsx)(UB, {
                    ...i,
                    label: (0,
                    z.jsx)(_c.Editor.WIDGETS, {
                        hash: "Min"
                    }),
                    value: t.min,
                    onChange: a
                }), (0,
                z.jsx)(UB, {
                    ...i,
                    label: (0,
                    z.jsx)(_c.Editor.WIDGETS, {
                        hash: "Max"
                    }),
                    value: t.max,
                    onChange: o
                })]
            })
        }
          , hG = ({label: e, value: t, allowMinGreaterMax: n, onChange: s, ...i})=>{
            const a = (0,
            Y.useCallback)((e=>{
                s({
                    ...t,
                    min: {
                        x: n ? e.x : Math.min(e.x, t.max.x),
                        y: n ? e.y : Math.min(e.y, t.max.y),
                        z: n ? e.z : Math.min(e.z, t.max.z)
                    }
                })
            }
            ), [s, n, t])
              , o = (0,
            Y.useCallback)((e=>{
                s({
                    ...t,
                    max: {
                        x: n ? e.x : Math.max(e.x, t.min.x),
                        y: n ? e.y : Math.max(e.y, t.min.y),
                        z: n ? e.z : Math.max(e.z, t.min.z)
                    }
                })
            }
            ), [s, n, t]);
            return (0,
            z.jsxs)(jB, {
                label: e,
                children: [(0,
                z.jsx)(BB, {
                    ...i,
                    label: (0,
                    z.jsx)(_c.Editor.WIDGETS, {
                        hash: "Min"
                    }),
                    value: t.min,
                    onChange: a
                }), (0,
                z.jsx)(BB, {
                    ...i,
                    label: (0,
                    z.jsx)(_c.Editor.WIDGETS, {
                        hash: "Max"
                    }),
                    value: t.max,
                    onChange: o
                })]
            })
        }
          , gG = ({label: e, value: t, allowMinGreaterMax: n, onChange: s, ...i})=>{
            const a = (0,
            Y.useCallback)((e=>s({
                ...t,
                min: n ? e : Math.min(e, t.max)
            })), [s, n, t])
              , o = (0,
            Y.useCallback)((e=>s({
                ...t,
                max: n ? e : Math.max(e, t.min)
            })), [s, n, t]);
            return (0,
            z.jsxs)(jB, {
                label: e,
                children: [(0,
                z.jsx)(iG, {
                    ...i,
                    label: (0,
                    z.jsx)(_c.Editor.WIDGETS, {
                        hash: "Min"
                    }),
                    value: t.min,
                    onChange: a,
                    updateOnDragEnd: !1
                }), (0,
                z.jsx)(iG, {
                    ...i,
                    label: (0,
                    z.jsx)(_c.Editor.WIDGETS, {
                        hash: "Max"
                    }),
                    value: t.max,
                    onChange: o,
                    updateOnDragEnd: !1
                })]
            })
        }
          , pG = ({label: e, value: t, allowMinGreaterMax: n, onChange: s, ...i})=>{
            const a = (0,
            Y.useCallback)((e=>s({
                ...t,
                min: n ? e : Math.min(e, t.max)
            })), [n, s, t])
              , o = (0,
            Y.useCallback)((e=>s({
                ...t,
                max: n ? e : Math.max(e, t.min)
            })), [n, s, t]);
            return (0,
            z.jsxs)(jB, {
                label: e,
                children: [(0,
                z.jsx)(cG, {
                    ...i,
                    label: (0,
                    z.jsx)(_c.Editor.WIDGETS, {
                        hash: "Min"
                    }),
                    value: t.min,
                    onChange: a
                }), (0,
                z.jsx)(cG, {
                    ...i,
                    label: (0,
                    z.jsx)(_c.Editor.WIDGETS, {
                        hash: "Max"
                    }),
                    value: t.max,
                    onChange: o
                })]
            })
        }
        ;
        X.add("game-ui/editor/widgets/fields/bounds-field.tsx", {
            get Bounds1InputField() {
                return dG
            },
            set Bounds1InputField(e) {
                dG = e
            },
            get Bounds2InputField() {
                return mG
            },
            set Bounds2InputField(e) {
                mG = e
            },
            get Bounds3InputField() {
                return hG
            },
            set Bounds3InputField(e) {
                hG = e
            },
            get Bounds1SliderField() {
                return gG
            },
            set Bounds1SliderField(e) {
                gG = e
            },
            get TimeBoundsSliderField() {
                return pG
            },
            set TimeBoundsSliderField(e) {
                pG = e
            }
        });
        var fG = e=>(0,
        z.jsx)(LB, {
            ...e,
            valueFormatter: xG,
            inputParser: vG,
            inputTransformer: _G,
            inputValidator: bG
        });
        function xG(e) {
            return _N(e)
        }
        function vG(e) {
            return TN(e) || void 0
        }
        function _G(e) {
            return e.toUpperCase()
        }
        function bG(e) {
            return /^#?([a-f0-9]{0,6})$/i.test(e)
        }
        X.add("game-ui/common/input/text/hex-color-input.tsx", {
            get HexColorInput() {
                return fG
            },
            set HexColorInput(e) {
                fG = e
            }
        });
        var TG = EG();
        function EG({s: e, v: t}={
            h: 1,
            s: 1,
            v: 1,
            a: 1
        }, n=36) {
            return jG({
                h: 0,
                s: e,
                v: t,
                a: 1
            }, {
                h: 1,
                s: e,
                v: t,
                a: 1
            }, n)
        }
        function IG({h: e, v: t}) {
            return jG({
                h: e,
                s: 0,
                v: t,
                a: 1
            }, {
                h: e,
                s: 1,
                v: t,
                a: 1
            }, 2)
        }
        function SG({h: e, s: t}) {
            return jG({
                h: e,
                s: t,
                v: 0,
                a: 1
            }, {
                h: e,
                s: t,
                v: 1,
                a: 1
            }, 2)
        }
        function yG({h: e, s: t, v: n}) {
            return jG({
                h: e,
                s: t,
                v: n,
                a: 0
            }, {
                h: e,
                s: t,
                v: n,
                a: 1
            }, 2)
        }
        function jG(e, t, n) {
            const s = [];
            for (let i = 0; i <= n; i++)
                s.push({
                    offset: i / n,
                    color: xN(EN(yN(e, t, i / n)))
                });
            return {
                stops: s
            }
        }
        function CG(e, t) {
            return {
                stops: [{
                    offset: 0,
                    color: xN(e)
                }, {
                    offset: 1,
                    color: xN(t)
                }]
            }
        }
        X.add("game-ui/common/input/color-picker/color-slider/slider-backgrounds.ts", {
            get hueSliderBackground() {
                return TG
            },
            set hueSliderBackground(e) {
                TG = e
            },
            get buildHueSliderBackground() {
                return EG
            },
            set buildHueSliderBackground(e) {
                EG = e
            },
            get buildSaturationSliderBackground() {
                return IG
            },
            set buildSaturationSliderBackground(e) {
                IG = e
            },
            get buildValueSliderBackground() {
                return SG
            },
            set buildValueSliderBackground(e) {
                SG = e
            },
            get buildAlphaSliderBackground() {
                return yG
            },
            set buildAlphaSliderBackground(e) {
                yG = e
            },
            get buildHsvGradient() {
                return jG
            },
            set buildHsvGradient(e) {
                jG = e
            },
            get buildRgbGradient() {
                return CG
            },
            set buildRgbGradient(e) {
                CG = e
            }
        });
        let NG = {
            edge: "edge_xBb",
            "start-edge": "start-edge_nii edge_xBb",
            startEdge: "start-edge_nii edge_xBb",
            "end-edge": "end-edge_egi edge_xBb",
            endEdge: "end-edge_egi edge_xBb",
            "track-bounds": "track-bounds_hs9 track-bounds_H8_",
            trackBounds: "track-bounds_hs9 track-bounds_H8_"
        };
        X.add("game-ui/common/input/slider/gradient-slider/gradient-slider.module.scss", {
            get classes() {
                return NG
            },
            set classes(e) {
                Object.assign(NG, e)
            }
        });
        const wG = NG;
        var OG = ({gradient: e, theme: t, ...n})=>{
            const s = (0,
            Y.useMemo)((()=>({
                ...wG,
                ...t
            })), [t])
              , i = e.stops.find((e=>0 === e.offset))
              , a = i?.color ?? "grey"
              , o = e.stops.find((e=>1 === e.offset))
              , r = o?.color ?? "grey"
              , l = (0,
            Y.useMemo)((()=>({
                "--startColor": "string" == typeof a ? a : xN(a),
                "--endColor": "string" == typeof r ? r : xN(r),
                "--gradient": jN(e)
            })), [a, r, e]);
            return (0,
            z.jsxs)(AA, {
                ...n,
                theme: s,
                style: l,
                children: [(0,
                z.jsx)("div", {
                    className: s.startEdge
                }), (0,
                z.jsx)("div", {
                    className: s.endEdge
                })]
            })
        }
        ;
        X.add("game-ui/common/input/slider/gradient-slider/gradient-slider.tsx", {
            get GradientSlider() {
                return OG
            },
            set GradientSlider(e) {
                OG = e
            }
        });
        let PG = {
            slider: "slider_fer slider_pUS",
            "gamepad-active": "gamepad-active_Elg",
            gamepadActive: "gamepad-active_Elg",
            thumb: "thumb_z1a"
        };
        X.add("game-ui/common/input/color-picker/color-slider/color-slider.module.scss", {
            get classes() {
                return PG
            },
            set classes(e) {
                Object.assign(PG, e)
            }
        });
        const LG = PG;
        let AG = {
            "color-component-input": "color-component-input_WeK",
            colorComponentInput: "color-component-input_WeK",
            label: "label_GH4",
            "slider-container": "slider-container_NuQ",
            sliderContainer: "slider-container_NuQ",
            slider: "slider_xgT",
            alpha: "alpha_N_s",
            input: "input_zfe"
        };
        X.add("game-ui/common/input/color-picker/component-input/component-input.module.scss", {
            get classes() {
                return AG
            },
            set classes(e) {
                Object.assign(AG, e)
            }
        });
        const MG = AG;
        var RG = ({label: e, value: t, scale: n, step: s, gradient: i, alpha: a, onChange: o, textField: r=!0})=>{
            const l = (0,
            Y.useCallback)((e=>o(Od(e / n, 0, 1))), [o, n])
              , c = kA(s)
              , u = Dm();
            return (0,
            z.jsxs)("div", {
                className: MG.colorComponentInput,
                children: [r && (0,
                z.jsx)("div", {
                    className: MG.label,
                    children: e
                }), (0,
                z.jsx)("div", {
                    className: Zu()(MG.slider, a && MG.alpha),
                    children: (0,
                    z.jsx)("div", {
                        className: MG.sliderContainer,
                        children: (0,
                        z.jsx)(OG, {
                            value: t * n,
                            start: 0,
                            end: n,
                            theme: LG,
                            gradient: i,
                            gamepadStep: n / 50,
                            valueTransformer: c,
                            className: Zu()(u && LG.gamepadActive),
                            onChange: l
                        })
                    })
                }), r && (1 !== s ? (0,
                z.jsx)(MB, {
                    value: t * n,
                    onChange: l,
                    className: MG.input
                }) : (0,
                z.jsx)(XB, {
                    value: Math.round(t * n),
                    onChange: l,
                    className: MG.input
                }))]
            })
        }
        ;
        X.add("game-ui/common/input/color-picker/component-input/component-input.tsx", {
            get ComponentInput() {
                return RG
            },
            set ComponentInput(e) {
                RG = e
            }
        });
        var kG = ({color: e, onChange: t, textField: n=!0})=>{
            const s = (0,
            Y.useCallback)((n=>t({
                ...e,
                h: n
            })), [e, t])
              , i = (0,
            Y.useCallback)((n=>t({
                ...e,
                s: n
            })), [e, t])
              , a = (0,
            Y.useCallback)((n=>t({
                ...e,
                v: n
            })), [e, t]);
            return (0,
            z.jsxs)(z.Fragment, {
                children: [(0,
                z.jsx)(RG, {
                    label: "H",
                    value: e.h,
                    scale: 360,
                    step: 1,
                    gradient: TG,
                    onChange: s,
                    textField: n
                }), (0,
                z.jsx)(RG, {
                    label: "S",
                    value: e.s,
                    scale: 100,
                    step: 1,
                    gradient: IG(e),
                    onChange: i,
                    textField: n
                }), (0,
                z.jsx)(RG, {
                    label: "V",
                    value: e.v,
                    scale: 100,
                    step: 1,
                    gradient: SG(e),
                    onChange: a,
                    textField: n
                })]
            })
        }
          , DG = ({color: e, onChange: t, scale: n=255, step: s=1, textField: i=!0})=>{
            const a = EN(e)
              , o = e.h
              , r = (0,
            Y.useCallback)((e=>t(IN({
                ...a,
                r: e
            }, o))), [a, o, t])
              , l = (0,
            Y.useCallback)((e=>t(IN({
                ...a,
                g: e
            }, o))), [a, o, t])
              , c = (0,
            Y.useCallback)((e=>t(IN({
                ...a,
                b: e
            }, o))), [a, o, t]);
            return (0,
            z.jsxs)(z.Fragment, {
                children: [(0,
                z.jsx)(RG, {
                    label: "R",
                    value: a.r,
                    scale: n,
                    step: s,
                    gradient: CG({
                        ...a,
                        r: 0,
                        a: 1
                    }, {
                        ...a,
                        r: 1,
                        a: 1
                    }),
                    onChange: r,
                    textField: i
                }), (0,
                z.jsx)(RG, {
                    label: "G",
                    value: a.g,
                    scale: n,
                    step: s,
                    gradient: CG({
                        ...a,
                        g: 0,
                        a: 1
                    }, {
                        ...a,
                        g: 1,
                        a: 1
                    }),
                    onChange: l,
                    textField: i
                }), (0,
                z.jsx)(RG, {
                    label: "B",
                    value: a.b,
                    scale: n,
                    step: s,
                    gradient: CG({
                        ...a,
                        b: 0,
                        a: 1
                    }, {
                        ...a,
                        b: 1,
                        a: 1
                    }),
                    onChange: c,
                    textField: i
                })]
            })
        }
          , FG = ({color: e, scale: t=100, step: n=1, onChange: s, textField: i=!0})=>{
            const a = (0,
            Y.useCallback)((t=>s({
                ...e,
                a: t
            })), [e, s]);
            return (0,
            z.jsx)(RG, {
                label: "A",
                value: e.a,
                scale: t,
                step: n,
                gradient: yG(e),
                alpha: !0,
                onChange: a,
                textField: i
            })
        }
        ;
        X.add("game-ui/common/input/color-picker/component-input/component-inputs.tsx", {
            get HsvComponentInputs() {
                return kG
            },
            set HsvComponentInputs(e) {
                kG = e
            },
            get RgbComponentInputs() {
                return DG
            },
            set RgbComponentInputs(e) {
                DG = e
            },
            get AlphaComponentInput() {
                return FG
            },
            set AlphaComponentInput(e) {
                FG = e
            }
        });
        var UG = ({s: e=1, v: t=1, outerRadius: n, innerRadius: s, className: i})=>(0,
        Y.useMemo)((()=>{
            const a = 2 * Math.PI / 360 + .02
              , o = n - 1
              , r = s + 1
              , l = 2 * n;
            return (0,
            z.jsx)("svg", {
                width: l,
                height: l,
                viewBox: `0 0 ${l} ${l}`,
                className: i,
                children: (0,
                z.jsx)("g", {
                    transform: `translate(${n} ${n})`,
                    children: [...Array(360)].map(((n,s)=>{
                        const i = s / 360
                          , l = 2 * Math.PI * i
                          , c = l + a
                          , u = Math.sin(l)
                          , d = Math.cos(l)
                          , m = Math.sin(c)
                          , h = Math.cos(c)
                          , g = xN(EN({
                            h: i,
                            s: e,
                            v: t,
                            a: 1
                        }))
                          , p = [[u * o, -d * o], [u * o, -d * o], [m * o, -h * o], [m * r, -h * r]];
                        return (0,
                        z.jsx)("path", {
                            d: `M${p.join(" L")}z`,
                            fill: g,
                            stroke: g,
                            strokeWidth: 2
                        }, s)
                    }
                    ))
                })
            })
        }
        ), [i, s, n, e, t]);
        X.add("game-ui/common/input/color-picker/radial-hue-picker/radial-hue-wheel.tsx", {
            get RadialHueWheel() {
                return UG
            },
            set RadialHueWheel(e) {
                UG = e
            }
        });
        let BG = {
            "radial-hue-picker": "radial-hue-picker_TbV",
            radialHuePicker: "radial-hue-picker_TbV",
            active: "active_JI3",
            wheel: "wheel_aXq",
            thumb: "thumb_ydk"
        };
        X.add("game-ui/common/input/color-picker/radial-hue-picker/radial-hue-picker.module.scss", {
            get classes() {
                return BG
            },
            set classes(e) {
                Object.assign(BG, e)
            }
        });
        const GG = BG;
        var VG = ({h: e, s: t=1, v: n=1, decimalPrecision: s=3, outerRadius: i, innerRadius: a, className: o, onChange: r, onDragStart: l, onDragEnd: c})=>{
            const u = (0,
            Y.useRef)(null)
              , d = (0,
            Y.useCallback)((({clientX: e, clientY: t})=>!(!u.current || !function(e, t, n, s, i) {
                const {left: a, top: o, width: r, height: l} = e.getBoundingClientRect()
                  , c = t - a - r / 2
                  , u = n - o - l / 2
                  , d = c * c + u * u
                  , m = s * s
                  , h = i * i;
                return d >= m && d <= h
            }(u.current, e, t, a, i)) && (document.activeElement instanceof HTMLElement && document.activeElement.blur(),
            cp(lp.grabSlider),
            l && l(),
            r && r(HG(u.current, e, t, s)),
            !0)), [a, i, l, r, s])
              , m = (0,
            Y.useCallback)((({clientX: e, clientY: t})=>{
                u.current && r && (cp(lp.dragSlider),
                r(HG(u.current, e, t, s)))
            }
            ), [r, s])
              , h = (0,
            Y.useCallback)((()=>{
                c && c()
            }
            ), [c])
              , [g,p] = rb(d, m, h)
              , f = {
                width: 2 * i,
                height: 2 * i
            }
              , x = (a + i) / 2
              , v = 2 * e * Math.PI
              , _ = {
                transform: `translate(${x * Math.sin(v)}px, ${-x * Math.cos(v)}px) translate(-50%, -50%)`,
                top: i,
                left: i,
                backgroundColor: xN(EN({
                    h: e,
                    s: t,
                    v: n,
                    a: 1
                }))
            };
            return (0,
            z.jsxs)("div", {
                ref: u,
                className: Zu()(GG.radialHuePicker, g && GG.active, o),
                style: f,
                onMouseDown: p,
                children: [(0,
                z.jsx)(UG, {
                    s: t,
                    v: n,
                    outerRadius: i,
                    innerRadius: a,
                    className: GG.wheel
                }), (0,
                z.jsx)("div", {
                    className: GG.thumb,
                    style: _
                })]
            })
        }
        ;
        function HG(e, t, n, s) {
            const {left: i, top: a, width: o, height: r} = e.getBoundingClientRect()
              , l = t - i - o / 2
              , c = n - a - r / 2;
            return Od(Ld(Math.atan2(-l, c) / (2 * Math.PI) + .5, s), 0, 1)
        }
        X.add("game-ui/common/input/color-picker/radial-hue-picker/radial-hue-picker.tsx", {
            get RadialHuePicker() {
                return VG
            },
            set RadialHuePicker(e) {
                VG = e
            }
        });
        var KG = ({h: e, width: t, height: n, className: s})=>{
            const i = (0,
            Y.useId)()
              , a = (0,
            Y.useMemo)((()=>{
                const a = Math.round(n / 1);
                return (0,
                z.jsx)("svg", {
                    width: t,
                    height: n,
                    viewBox: `0 0 ${t} ${n}`,
                    className: s,
                    children: [...Array(a)].map(((n,s)=>{
                        const o = 1 - s / a
                          , r = xN(EN({
                            h: e,
                            s: 0,
                            v: o,
                            a: 1
                        }))
                          , l = xN(EN({
                            h: e,
                            s: 1,
                            v: o,
                            a: 1
                        }))
                          , c = `g-${i}-${s}`
                          , u = 1 * s;
                        return (0,
                        z.jsxs)("g", {
                            children: [(0,
                            z.jsxs)("linearGradient", {
                                id: `${c}`,
                                gradientTransform: "rotate(90)",
                                children: [(0,
                                z.jsx)("stop", {
                                    offset: "0%",
                                    stopColor: r
                                }), (0,
                                z.jsx)("stop", {
                                    offset: "100%",
                                    stopColor: l
                                })]
                            }), (0,
                            z.jsx)("rect", {
                                y: u,
                                width: 2 * t,
                                height: 1,
                                fill: `url(#${c})`
                            })]
                        }, s)
                    }
                    ))
                })
            }
            ), [s, e, n, i, t]);
            return a
        }
        ;
        X.add("game-ui/common/input/color-picker/saturation-value-picker/saturation-value-gradient.tsx", {
            get SaturationValueGradient() {
                return KG
            },
            set SaturationValueGradient(e) {
                KG = e
            }
        });
        let WG = {
            "saturation-gradient-picker": "saturation-gradient-picker_tkk",
            saturationGradientPicker: "saturation-gradient-picker_tkk",
            active: "active_LF5",
            gradient: "gradient_LME",
            thumb: "thumb_l7W"
        };
        X.add("game-ui/common/input/color-picker/saturation-value-picker/saturation-value-picker.module.scss", {
            get classes() {
                return WG
            },
            set classes(e) {
                Object.assign(WG, e)
            }
        });
        const zG = WG;
        var YG = ({h: e, s: t, v: n, decimalPrecision: s=3, width: i, height: a, className: o, onChange: r, onDragStart: l, onDragEnd: c})=>{
            const u = (0,
            Y.useRef)(null)
              , d = (0,
            Y.useCallback)((({clientX: t, clientY: n})=>!!u.current && (document.activeElement instanceof HTMLElement && document.activeElement.blur(),
            cp(lp.grabSlider),
            l && l(),
            r && r(...$G(u.current, t, n, e, s)),
            !0)), [l, r, e, s])
              , m = (0,
            Y.useCallback)((({clientX: t, clientY: n})=>{
                u.current && r && (cp(lp.dragSlider),
                r(...$G(u.current, t, n, e, s)))
            }
            ), [r, e, s])
              , h = (0,
            Y.useCallback)((()=>{
                c && c()
            }
            ), [c])
              , [g,p] = rb(d, m, h)
              , f = Zu()(zG.saturationGradientPicker, g && zG.active, o)
              , x = {
                width: i,
                height: a
            }
              , v = {
                transform: `translate(${t * i}px, ${(1 - n) * a}px) translate(-50%, -50%)`,
                backgroundColor: xN(EN({
                    h: e,
                    s: t,
                    v: n,
                    a: 1
                }))
            };
            return (0,
            z.jsxs)("div", {
                ref: u,
                className: f,
                style: x,
                onMouseDown: p,
                children: [(0,
                z.jsx)(KG, {
                    h: e,
                    width: i,
                    height: a,
                    className: zG.gradient
                }), (0,
                z.jsx)("div", {
                    className: zG.thumb,
                    style: v
                })]
            })
        }
        ;
        function $G(e, t, n, s, i) {
            const {left: a, top: o, width: r, height: l} = e.getBoundingClientRect();
            return [Od(Ld((t - a) / r, i), 0, 1), Od(Ld(1 - (n - o) / l, i), 0, 1)]
        }
        X.add("game-ui/common/input/color-picker/saturation-value-picker/saturation-value-picker.tsx", {
            get SaturationValuePicker() {
                return YG
            },
            set SaturationValuePicker(e) {
                YG = e
            }
        });
        let qG = {
            "color-picker": "color-picker_aNX",
            colorPicker: "color-picker_aNX",
            section: "section_cwE",
            preview: "preview_HmH",
            "preview-swatch": "preview-swatch_fDW",
            previewSwatch: "preview-swatch_fDW",
            wheel: "wheel_lpH",
            sv: "sv_Nf5",
            "sv-picker": "sv-picker_DTa",
            svPicker: "sv-picker_DTa",
            modes: "modes_ZSt",
            "mode-dropdown": "mode-dropdown_fGC",
            modeDropdown: "mode-dropdown_fGC",
            sliders: "sliders_sCL",
            hex: "hex_c98",
            "hex-label": "hex-label_yqK",
            hexLabel: "hex-label_yqK",
            "hex-input": "hex-input_hFc",
            hexInput: "hex-input_hFc"
        };
        X.add("game-ui/common/input/color-picker/color-picker/color-picker.module.scss", {
            get classes() {
                return qG
            },
            set classes(e) {
                Object.assign(qG, e)
            }
        });
        const XG = qG;
        var QG, ZG;
        !function(e) {
            e[e.None = 0] = "None",
            e[e.Current = 1] = "Current",
            e[e.CurrentAndLast = 2] = "CurrentAndLast"
        }(QG || (QG = {})),
        function(e) {
            e.Hsv = "Hsv",
            e.RgbFloat = "RgbFloat",
            e.RgbByte = "RgbByte"
        }(ZG || (ZG = {}));
        var JG = ({focusKey: e, color: t, alpha: n, colorWheel: s=!0, sliderTextInput: i=!0, preview: a=QG.None, mode: o, hexInput: r=!0, onChange: l, allowFocusExit: c=!0})=>{
            t = {
                ...t,
                a: n ? t.a : 1
            };
            const u = (0,
            Y.useRef)(t)
              , [d,m] = (0,
            Y.useState)(o || ZG.Hsv)
              , h = (0,
            Y.useCallback)((e=>l({
                ...t,
                h: e
            })), [l, t])
              , g = (0,
            Y.useCallback)(((e,n)=>l({
                ...t,
                s: e,
                v: n
            })), [l, t])
              , p = (0,
            Y.useCallback)((e=>l(IN({
                ...e,
                a: t.a
            }, t.h))), [l, t])
              , f = (0,
            Y.useCallback)((()=>l(u.current)), [l])
              , x = Hm();
            return (0,
            z.jsx)(mb, {
                children: (0,
                z.jsx)(np, {
                    focusKey: e,
                    allowFocusExit: c,
                    children: (0,
                    z.jsxs)("div", {
                        className: XG.colorPicker,
                        children: [a !== QG.None && (0,
                        z.jsxs)("div", {
                            className: XG.preview,
                            children: [a === QG.CurrentAndLast && (0,
                            z.jsx)("div", {
                                className: XG.previewSwatch,
                                style: {
                                    backgroundColor: xN(EN(u.current))
                                },
                                onClick: f
                            }), (0,
                            z.jsx)("div", {
                                className: XG.previewSwatch,
                                style: {
                                    backgroundColor: xN(EN(t))
                                }
                            })]
                        }), s && (0,
                        z.jsxs)("div", {
                            className: Zu()(XG.section, XG.wheel),
                            children: [(0,
                            z.jsx)(VG, {
                                h: t.h,
                                outerRadius: 93 * x,
                                innerRadius: 70 * x,
                                onChange: h
                            }), (0,
                            z.jsx)("div", {
                                className: XG.sv,
                                children: (0,
                                z.jsx)(YG, {
                                    ...t,
                                    width: 94 * x,
                                    height: 94 * x,
                                    onChange: g,
                                    className: XG.svPicker
                                })
                            })]
                        }), void 0 === o && (0,
                        z.jsx)("div", {
                            className: Zu()(XG.modes, XG.section),
                            children: (0,
                            z.jsx)(fS, {
                                theme: Ok,
                                content: Object.values(ZG).map((e=>(0,
                                z.jsx)(bS, {
                                    focusKey: e,
                                    value: e,
                                    selected: d === e,
                                    onChange: m,
                                    children: eV(e)
                                }, e))),
                                children: (0,
                                z.jsx)(xS, {
                                    className: XG.modeDropdown,
                                    children: eV(d)
                                })
                            })
                        }), (0,
                        z.jsx)("div", {
                            className: Zu()(XG.sliders, XG.section),
                            children: (0,
                            z.jsx)(tV, {
                                mode: d,
                                color: t,
                                alpha: n,
                                onChange: l,
                                textField: i
                            })
                        }), r && (0,
                        z.jsxs)("div", {
                            className: Zu()(XG.hex, XG.section),
                            children: [(0,
                            z.jsx)("div", {
                                className: XG.hexLabel,
                                children: "Hex"
                            }), (0,
                            z.jsx)(fG, {
                                value: EN(t),
                                onChange: p,
                                className: XG.hexInput
                            })]
                        })]
                    })
                })
            })
        }
        ;
        function eV(e) {
            switch (e) {
            case ZG.Hsv:
                return "HSV";
            case ZG.RgbFloat:
                return "RGB 0-1.0";
            case ZG.RgbByte:
                return "RGB 0-255"
            }
        }
        const tV = ({mode: e, color: t, alpha: n, onChange: s, textField: i=!0})=>{
            switch (e) {
            case ZG.Hsv:
                return (0,
                z.jsxs)(z.Fragment, {
                    children: [(0,
                    z.jsx)(kG, {
                        color: t,
                        onChange: s,
                        textField: i
                    }), n && (0,
                    z.jsx)(FG, {
                        color: t,
                        scale: 100,
                        step: 1,
                        onChange: s,
                        textField: i
                    })]
                });
            case ZG.RgbFloat:
                return (0,
                z.jsxs)(z.Fragment, {
                    children: [(0,
                    z.jsx)(DG, {
                        color: t,
                        scale: 1,
                        step: .001,
                        onChange: s,
                        textField: i
                    }), n && (0,
                    z.jsx)(FG, {
                        color: t,
                        scale: 1,
                        step: .001,
                        onChange: s,
                        textField: i
                    })]
                });
            case ZG.RgbByte:
                return (0,
                z.jsxs)(z.Fragment, {
                    children: [(0,
                    z.jsx)(DG, {
                        color: t,
                        scale: 255,
                        step: 1,
                        onChange: s,
                        textField: i
                    }), n && (0,
                    z.jsx)(FG, {
                        color: t,
                        scale: 255,
                        step: 1,
                        onChange: s,
                        textField: i
                    })]
                })
            }
        }
        ;
        X.add("game-ui/common/input/color-picker/color-picker/color-picker.tsx", {
            get ColorPickerPreview() {
                return QG
            },
            set ColorPickerPreview(e) {
                QG = e
            },
            get ColorPickerSliderMode() {
                return ZG
            },
            set ColorPickerSliderMode(e) {
                ZG = e
            },
            get ColorPicker() {
                return JG
            },
            set ColorPicker(e) {
                JG = e
            }
        });
        const nV = new Ig("swatch")
          , sV = new Ig("picker");
        var iV = ({label: e, value: t, showAlpha: n, disabled: s, onChange: i})=>{
            const [a,o] = (0,
            Y.useState)(!1)
              , r = (0,
            Y.useCallback)((()=>o((e=>!e))), []);
            (0,
            Y.useEffect)((()=>{
                s && o(!1)
            }
            ), [s]);
            const [l,c] = (0,
            Y.useState)(0)
              , u = (0,
            Y.useCallback)((e=>{
                c(e.h),
                i(EN(e))
            }
            ), [i])
              , d = (0,
            Y.useMemo)((()=>function(e, t) {
                const n = IN(e, t);
                if (0 === n.h && t > .99)
                    return {
                        ...n,
                        h: 1
                    };
                return n
            }(t, l)), [l, t]);
            return (0,
            z.jsx)(ck, {
                disabled: s,
                children: (0,
                z.jsxs)(op, {
                    focused: a ? sV : nV,
                    children: [(0,
                    z.jsxs)("div", {
                        className: rk.row,
                        children: [(0,
                        z.jsx)("div", {
                            className: rk.label,
                            children: e
                        }), (0,
                        z.jsx)("div", {
                            className: rk.control,
                            children: (0,
                            z.jsx)(U_, {
                                focusKey: nV,
                                className: Zu()(rk.swatch, t.a < 1 && rk.alpha),
                                onSelect: s ? void 0 : r,
                                children: (0,
                                z.jsx)("div", {
                                    style: {
                                        backgroundColor: xN(t)
                                    }
                                })
                            })
                        })]
                    }), a && (0,
                    z.jsx)("div", {
                        className: rk.colorPickerContainer,
                        children: (0,
                        z.jsx)(JG, {
                            focusKey: sV,
                            color: d,
                            alpha: n,
                            onChange: u
                        })
                    })]
                })
            })
        }
        ;
        X.add("game-ui/editor/widgets/fields/color-field.tsx", {
            get ColorField() {
                return iV
            },
            set ColorField(e) {
                iV = e
            }
        });
        var aV = "​";
        function oV(e, t) {
            return e.split(" ").map((e=>{
                if (e.length > t) {
                    let n = "";
                    for (let s = 0; s < e.length; s += t)
                        n += e.substring(s, s + t) + " ";
                    return n.trim()
                }
                return e
            }
            )).join(" ")
        }
        var rV = e=>e.replaceAll(/(\\|\/)/g, ((...e)=>`${"\\" === e[1] ? "\\\\" : e[1]}${aV}`));
        X.add("game-ui/common/utils/strings.ts", {
            get ZERO_WIDTH_SPACE() {
                return aV
            },
            set ZERO_WIDTH_SPACE(e) {
                aV = e
            },
            get breakLongWords() {
                return oV
            },
            set breakLongWords(e) {
                oV = e
            },
            get locPathTransformer() {
                return rV
            },
            set locPathTransformer(e) {
                rV = e
            }
        });
        const lV = new Ig("FIELD");
        var cV = ({parent: e, path: t, props: n})=>{
            const s = YM(DR, ZR(e, t));
            return cg(vT.value?.assetImportButton),
            (0,
            z.jsx)(mT, {
                uiTag: n.uiTag || void 0,
                editor: !0,
                children: (0,
                z.jsx)(uV, {
                    label: (0,
                    z.jsx)(gu, {
                        value: n.displayName
                    }),
                    value: n.displayValue,
                    disabled: n.disabled,
                    tooltip: n.tooltip && (0,
                    z.jsx)(gu, {
                        value: n.tooltip,
                        transformer: rV
                    }),
                    onOpenDirectoryBrowser: s
                })
            })
        }
          , uV = ({label: e, value: t, disabled: n, tooltip: s, className: i, theme: a, onOpenDirectoryBrowser: o})=>{
            const r = (0,
            Y.useCallback)((()=>o()), [o]);
            return (0,
            z.jsx)(ck, {
                disabled: n,
                className: i,
                children: (0,
                z.jsx)(op, {
                    focused: lV,
                    children: (0,
                    z.jsxs)("div", {
                        className: rk.row,
                        children: [(0,
                        z.jsx)("div", {
                            className: Zu()(rk.label, a?.label),
                            children: e
                        }), (0,
                        z.jsx)("div", {
                            className: Zu()(rk.control, a?.control),
                            children: (0,
                            z.jsx)(Eg, {
                                tooltip: s ?? t,
                                children: (0,
                                z.jsxs)(U_, {
                                    focusKey: lV,
                                    className: Zu()(rk.pickerToggle, rk.directoryButton, a?.button),
                                    disabled: n,
                                    onSelect: r,
                                    children: [(0,
                                    z.jsx)("div", {
                                        children: t
                                    }), (0,
                                    z.jsx)("img", {
                                        src: "Media/Editor/Folder.svg",
                                        className: rk.directoryIcon
                                    })]
                                })
                            })
                        })]
                    })
                })
            })
        }
        ;
        X.add("game-ui/editor/widgets/fields/directory-picker-button.tsx", {
            get BoundDirectoryPickerButton() {
                return cV
            },
            set BoundDirectoryPickerButton(e) {
                cV = e
            },
            get DirectoryPickerButton() {
                return uV
            },
            set DirectoryPickerButton(e) {
                uV = e
            }
        });
        let dV = {
            "dropdown-flag-item": "dropdown-flag-item_EcT",
            dropdownFlagItem: "dropdown-flag-item_EcT",
            toggle: "toggle_RyX",
            label: "label_PwM"
        };
        X.add("game-ui/common/input/dropdown/items/dropdown-flag-item.module.scss", {
            get classes() {
                return dV
            },
            set classes(e) {
                Object.assign(dV, e)
            }
        });
        const mV = dV;
        function hV({focusKey: e, value: t, checked: n, theme: s=mV, toggleComponent: i=Hb, className: a, onChange: o, children: r}) {
            const l = (0,
            Y.useCallback)((()=>{
                o && o(t, !n)
            }
            ), [n, o, t]);
            return (0,
            z.jsx)(Dg, {
                onAction: l,
                children: (0,
                z.jsxs)(Sp, {
                    focusKey: e,
                    className: Zu()(s.dropdownFlagItem, n && "checked", a),
                    onClick: l,
                    children: [Y.createElement(i, {
                        checked: n,
                        className: s.toggle
                    }), (0,
                    z.jsx)("div", {
                        className: s.label,
                        children: r
                    })]
                })
            })
        }
        X.add("game-ui/common/input/dropdown/items/dropdown-flag-item.tsx", {
            get DropdownFlagItem() {
                return hV
            },
            set DropdownFlagItem(e) {
                hV = e
            }
        });
        var gV = ({parent: e, path: t, props: n})=>{
            const s = ZR(e, t)
              , i = (0,
            Y.useMemo)((()=>n.enumMembers.map(AR)), [n.enumMembers])
              , a = (0,
            Y.useCallback)((e=>RR(s, cm(e))), [s]);
            return (0,
            z.jsx)(fV, {
                label: (0,
                z.jsx)(gu, {
                    value: n.displayName
                }),
                value: lm(n.value),
                enumMembers: i,
                disabled: n.disabled,
                tooltip: n.tooltip,
                onChange: a
            })
        }
          , pV = ({parent: e, path: t, props: n})=>{
            const s = ZR(e, t)
              , i = (0,
            Y.useMemo)((()=>n.enumMembers.map(AR)), [n.enumMembers])
              , a = (0,
            Y.useCallback)((e=>RR(s, cm(e))), [s]);
            return (0,
            z.jsx)(xV, {
                label: (0,
                z.jsx)(gu, {
                    value: n.displayName
                }),
                value: lm(n.value),
                enumMembers: i,
                disabled: n.disabled,
                onChange: a
            })
        }
          , fV = ({label: e, value: t, enumMembers: n, disabled: s, onChange: i, tooltip: a})=>{
            const o = sc()
              , r = (0,
            Y.useMemo)((()=>_V(o, n, t)), [o, n, t]);
            return (0,
            z.jsx)(ck, {
                disabled: s,
                children: (0,
                z.jsx)(Eg, {
                    tooltip: a && (0,
                    z.jsx)(gu, {
                        value: a
                    }),
                    children: (0,
                    z.jsxs)("div", {
                        className: rk.row,
                        children: [(0,
                        z.jsx)("div", {
                            className: rk.label,
                            children: e
                        }), (0,
                        z.jsx)("div", {
                            className: rk.control,
                            children: (0,
                            z.jsx)(fS, {
                                theme: Ok,
                                initialFocused: r,
                                content: n?.map(((e,n)=>(0,
                                z.jsx)(bS, {
                                    focusKey: n,
                                    value: e.value,
                                    selected: t === e.value,
                                    onChange: i,
                                    children: (0,
                                    z.jsx)(gu, {
                                        value: e.displayName
                                    })
                                }, n))),
                                children: (0,
                                z.jsx)(xS, {
                                    sounds: vV,
                                    className: rk.dropdownToggle,
                                    disabled: s,
                                    children: r
                                })
                            })
                        })]
                    })
                })
            })
        }
          , xV = ({label: e, value: t, enumMembers: n, disabled: s, onChange: i})=>{
            const a = sc()
              , o = (0,
            Y.useMemo)((()=>function(e, t, n) {
                if (0n !== n) {
                    const s = t.map((e=>e.value)).find((e=>e === n));
                    return s ? _V(e, t, s) : t.filter((e=>0n !== e.value && (n & e.value) === e.value)).map((t=>pu(e, t.displayName))).join(", ") || " "
                }
                return _V(e, t, 0n)
            }(a, n, t)), [a, n, t])
              , r = (0,
            Y.useCallback)(((e,n)=>{
                i(n ? t | e : t & ~e)
            }
            ), [i, t])
              , l = (0,
            Y.useMemo)((()=>n.map((e=>e.value)).reduce(((e,t)=>e | t))), [n])
              , c = l === t
              , u = (0,
            Y.useCallback)((()=>i(l)), [l, i])
              , d = (0,
            Y.useCallback)((()=>i(0n)), [i]);
            return (0,
            z.jsx)(ck, {
                disabled: s,
                children: (0,
                z.jsxs)("div", {
                    className: rk.row,
                    children: [(0,
                    z.jsx)("div", {
                        className: rk.label,
                        children: e
                    }), (0,
                    z.jsx)("div", {
                        className: rk.control,
                        children: (0,
                        z.jsx)(fS, {
                            theme: Ok,
                            initialFocused: 0,
                            content: (0,
                            z.jsxs)(z.Fragment, {
                                children: [(0,
                                z.jsx)(U_, {
                                    onSelect: c ? d : u,
                                    selected: c,
                                    className: Ok.toggleFlagsButton,
                                    children: (0,
                                    z.jsx)(_c.Editor.SELECT_NOTHING_EVERYTHING, {})
                                }), n.map(((e,n)=>(0,
                                z.jsx)(hV, {
                                    theme: Ok,
                                    focusKey: n,
                                    value: e.value,
                                    checked: (e.value & t) === e.value,
                                    onChange: r,
                                    children: (0,
                                    z.jsx)(gu, {
                                        value: e.displayName
                                    })
                                }, n)))]
                            }),
                            children: (0,
                            z.jsx)(xS, {
                                sounds: vV,
                                className: rk.dropdownToggle,
                                children: o
                            })
                        })
                    })]
                })
            })
        }
        ;
        const vV = {
            ...F_,
            hover: null,
            focus: null
        };
        function _V(e, t, n) {
            const s = t.find((e=>e.value === n));
            return null != s ? pu(e, s.displayName) : " "
        }
        function bV(e) {
            return Object.entries(e).filter((e=>"number" == typeof e[1])).map((([e,t])=>({
                displayName: au(e),
                value: BigInt(t)
            })))
        }
        X.add("game-ui/editor/widgets/fields/enum-field.tsx", {
            get BoundEnumField() {
                return gV
            },
            set BoundEnumField(e) {
                gV = e
            },
            get BoundFlagsField() {
                return pV
            },
            set BoundFlagsField(e) {
                pV = e
            },
            get EnumField() {
                return fV
            },
            set EnumField(e) {
                fV = e
            },
            get FlagsField() {
                return xV
            },
            set FlagsField(e) {
                xV = e
            },
            get getEnumMembers() {
                return bV
            },
            set getEnumMembers(e) {
                bV = e
            }
        });
        var TV = ({gradient: e, iconSrc: t, label: n, value: s, min: i, max: a, tooltip: o, onChange: r})=>{
            const l = kA(Math.pow(10, -1));
            return (0,
            z.jsx)(ck, {
                children: (0,
                z.jsx)(Eg, {
                    tooltip: o && (0,
                    z.jsx)(gu, {
                        value: o
                    }),
                    children: (0,
                    z.jsxs)("div", {
                        className: rk.row,
                        children: [(0,
                        z.jsx)("div", {
                            className: rk.label,
                            children: n
                        }), (0,
                        z.jsx)("div", {
                            className: rk.control,
                            children: (0,
                            z.jsxs)(np, {
                                direction: kg.Horizontal,
                                children: [(0,
                                z.jsx)(Ip, {
                                    className: rk.sliderContainer,
                                    children: (0,
                                    z.jsx)(Op, {
                                        children: (0,
                                        z.jsx)(OG, {
                                            gradient: e,
                                            value: s,
                                            start: i,
                                            end: a,
                                            theme: LG,
                                            className: rk.gradientSlider,
                                            valueTransformer: l,
                                            onChange: r,
                                            showHint: !0
                                        })
                                    })
                                }), (0,
                                z.jsx)(MB, {
                                    showHint: !0,
                                    value: s,
                                    min: i,
                                    max: a,
                                    fractionDigits: 1,
                                    onChange: r,
                                    className: rk.sliderInput
                                })]
                            })
                        }), t && (0,
                        z.jsx)(Z_, {
                            src: t,
                            className: rk.icon
                        })]
                    })
                })
            })
        }
        ;
        X.add("game-ui/editor/widgets/fields/gradient-slider-field.tsx", {
            get GradientSliderField() {
                return TV
            },
            set GradientSliderField(e) {
                TV = e
            }
        });
        var EV = e=>(0,
        z.jsx)(IV, {
            ...e
        })
          , IV = ({disabled: e, value: t, onChange: n, label: s, min: i=_d, max: a=bd, onChangeStart: o, onChangeEnd: r, tooltip: l})=>{
            const c = (0,
            Y.useCallback)(((e,t)=>wV(e, t, i, a)), [i, a]);
            return (0,
            z.jsx)(ck, {
                disabled: e,
                children: (0,
                z.jsx)(Eg, {
                    tooltip: l && (0,
                    z.jsx)(gu, {
                        value: l
                    }),
                    children: (0,
                    z.jsxs)("div", {
                        "data-type": "field",
                        className: rk.row,
                        children: [(0,
                        z.jsx)(PB, {
                            value: t,
                            disabled: e,
                            className: rk.label,
                            dragTransformation: c,
                            onChange: n,
                            children: s
                        }), (0,
                        z.jsx)("div", {
                            className: rk.control,
                            children: (0,
                            z.jsx)(XB, {
                                showHint: !0,
                                value: t,
                                min: i,
                                max: a,
                                disabled: e,
                                className: rk.input,
                                onChange: n,
                                onFocus: o,
                                onBlur: r
                            })
                        })]
                    })
                })
            })
        }
          , SV = ({min: e=0, max: t=Td, ...n})=>(0,
        z.jsx)(EV, {
            ...n,
            min: e,
            max: t
        })
          , yV = ({label: e, value: t, onChange: n, ...s})=>{
            const i = (0,
            Y.useCallback)((e=>n({
                ...t,
                x: e
            })), [t, n])
              , a = (0,
            Y.useCallback)((e=>n({
                ...t,
                y: e
            })), [t, n])
              , o = function(e=_d, t=bd) {
                return (0,
                Y.useCallback)(((n,s)=>{
                    const i = 60;
                    return {
                        x: Od(Math.trunc(n.x + s * i), e, t),
                        y: Od(Math.trunc(n.y + s * i), e, t)
                    }
                }
                ), [t, e])
            }(s.min, s.max);
            return (0,
            z.jsx)(ck, {
                disabled: s.disabled,
                children: (0,
                z.jsx)(Eg, {
                    tooltip: s.tooltip && (0,
                    z.jsx)(gu, {
                        value: s.tooltip
                    }),
                    children: (0,
                    z.jsxs)("div", {
                        className: rk.row,
                        children: [(0,
                        z.jsx)(PB, {
                            value: t,
                            disabled: s.disabled,
                            className: rk.label,
                            dragTransformation: o,
                            onChange: n,
                            children: e
                        }), (0,
                        z.jsx)("div", {
                            className: rk.control,
                            children: (0,
                            z.jsxs)(np, {
                                direction: kg.Horizontal,
                                children: [(0,
                                z.jsx)(NV, {
                                    ...s,
                                    label: "X",
                                    value: t.x,
                                    onChange: i
                                }), (0,
                                z.jsx)(NV, {
                                    ...s,
                                    label: "Y",
                                    value: t.y,
                                    onChange: a
                                })]
                            })
                        })]
                    })
                })
            })
        }
          , jV = ({label: e, value: t, onChange: n, ...s})=>{
            const i = (0,
            Y.useCallback)((e=>n({
                ...t,
                x: e
            })), [t, n])
              , a = (0,
            Y.useCallback)((e=>n({
                ...t,
                y: e
            })), [t, n])
              , o = (0,
            Y.useCallback)((e=>n({
                ...t,
                z: e
            })), [t, n])
              , r = function(e=_d, t=bd) {
                return (0,
                Y.useCallback)(((n,s)=>{
                    const i = 60;
                    return {
                        x: Od(Math.trunc(n.x + s * i), e, t),
                        y: Od(Math.trunc(n.y + s * i), e, t),
                        z: Od(Math.trunc(n.z + s * i), e, t)
                    }
                }
                ), [t, e])
            }(s.min, s.max);
            return (0,
            z.jsx)(ck, {
                disabled: s.disabled,
                children: (0,
                z.jsx)(Eg, {
                    tooltip: s.tooltip && (0,
                    z.jsx)(gu, {
                        value: s.tooltip
                    }),
                    children: (0,
                    z.jsxs)("div", {
                        className: rk.row,
                        children: [(0,
                        z.jsx)(PB, {
                            value: t,
                            disabled: s.disabled,
                            className: rk.label,
                            dragTransformation: r,
                            onChange: n,
                            children: e
                        }), (0,
                        z.jsx)("div", {
                            className: rk.control,
                            children: (0,
                            z.jsxs)(np, {
                                direction: kg.Horizontal,
                                children: [(0,
                                z.jsx)(NV, {
                                    ...s,
                                    label: "X",
                                    value: t.x,
                                    onChange: i
                                }), (0,
                                z.jsx)(NV, {
                                    ...s,
                                    label: "Y",
                                    value: t.y,
                                    onChange: a
                                }), (0,
                                z.jsx)(NV, {
                                    ...s,
                                    label: "Z",
                                    value: t.z,
                                    onChange: o
                                })]
                            })
                        })]
                    })
                })
            })
        }
          , CV = ({label: e, value: t, onChange: n, ...s})=>{
            const i = (0,
            Y.useCallback)((e=>n({
                ...t,
                x: e
            })), [t, n])
              , a = (0,
            Y.useCallback)((e=>n({
                ...t,
                y: e
            })), [t, n])
              , o = (0,
            Y.useCallback)((e=>n({
                ...t,
                z: e
            })), [t, n])
              , r = (0,
            Y.useCallback)((e=>n({
                ...t,
                w: e
            })), [t, n])
              , l = function(e=_d, t=bd) {
                return (0,
                Y.useCallback)(((n,s)=>{
                    const i = 60;
                    return {
                        x: Od(Math.trunc(n.x + s * i), e, t),
                        y: Od(Math.trunc(n.y + s * i), e, t),
                        z: Od(Math.trunc(n.z + s * i), e, t),
                        w: Od(Math.trunc(n.w + s * i), e, t)
                    }
                }
                ), [t, e])
            }(s.min, s.max);
            return (0,
            z.jsx)(ck, {
                disabled: s.disabled,
                children: (0,
                z.jsx)(Eg, {
                    tooltip: s.tooltip && (0,
                    z.jsx)(gu, {
                        value: s.tooltip
                    }),
                    children: (0,
                    z.jsxs)("div", {
                        className: rk.row,
                        children: [(0,
                        z.jsx)(PB, {
                            value: t,
                            disabled: s.disabled,
                            className: rk.label,
                            dragTransformation: l,
                            onChange: n,
                            children: e
                        }), (0,
                        z.jsx)("div", {
                            className: rk.control,
                            children: (0,
                            z.jsxs)(np, {
                                direction: kg.Horizontal,
                                children: [(0,
                                z.jsx)(NV, {
                                    ...s,
                                    label: "X",
                                    value: t.x,
                                    onChange: i
                                }), (0,
                                z.jsx)(NV, {
                                    ...s,
                                    label: "Y",
                                    value: t.y,
                                    onChange: a
                                }), (0,
                                z.jsx)(NV, {
                                    ...s,
                                    label: "Z",
                                    value: t.z,
                                    onChange: o
                                }), (0,
                                z.jsx)(NV, {
                                    ...s,
                                    label: "W",
                                    value: t.w,
                                    onChange: r
                                })]
                            })
                        })]
                    })
                })
            })
        }
        ;
        const NV = ({label: e, value: t, disabled: n, onChange: s, onChangeStart: i, onChangeEnd: a, min: o, max: r})=>{
            const l = function(e=_d, t=bd) {
                return (0,
                Y.useCallback)(((n,s)=>wV(n, s, e, t)), [t, e])
            }(o, r);
            return (0,
            z.jsxs)(z.Fragment, {
                children: [(0,
                z.jsx)(PB, {
                    value: t,
                    disabled: n,
                    className: rk.vectorLabel,
                    dragTransformation: l,
                    onChange: s,
                    onDragStart: i,
                    onDragEnd: a,
                    children: e
                }), (0,
                z.jsx)(XB, {
                    showHint: !0,
                    value: t,
                    disabled: n,
                    className: rk.vectorInput,
                    onChange: s,
                    onFocus: i,
                    onBlur: a,
                    min: o,
                    max: r
                })]
            })
        }
        ;
        function wV(e, t, n, s) {
            return Od(Math.trunc(e + 30 * t), n, s)
        }
        X.add("game-ui/editor/widgets/fields/int-input-field.tsx", {
            get EditorIntInputField() {
                return EV
            },
            set EditorIntInputField(e) {
                EV = e
            },
            get IntInputField() {
                return IV
            },
            set IntInputField(e) {
                IV = e
            },
            get UIntInputField() {
                return SV
            },
            set UIntInputField(e) {
                SV = e
            },
            get Int2InputField() {
                return yV
            },
            set Int2InputField(e) {
                yV = e
            },
            get Int3InputField() {
                return jV
            },
            set Int3InputField(e) {
                jV = e
            },
            get Int4InputField() {
                return CV
            },
            set Int4InputField(e) {
                CV = e
            }
        });
        const OV = new Ig("FIELD")
          , PV = new Ig("PICKER");
        var LV = ({parent: e, path: t, props: n, children: s})=>{
            const i = ZR(e, t)
              , a = (0,
            Y.useContext)(gD)
              , o = YM(kR, i);
            return n.hidden ? null : (0,
            z.jsx)(mT, {
                uiTag: n.uiTag || void 0,
                editor: !0,
                children: (0,
                z.jsx)(AV, {
                    label: (0,
                    z.jsx)(gu, {
                        value: n.displayName
                    }),
                    value: (0,
                    z.jsx)(gu, {
                        value: n.displayValue
                    }),
                    expanded: n.expanded,
                    disabled: n.disabled,
                    tooltip: n.tooltip,
                    onExpandedChange: o,
                    children: (0,
                    z.jsx)(hD, {
                        parent: i,
                        components: a,
                        data: s
                    })
                })
            })
        }
          , AV = ({label: e, value: t, expanded: n, disabled: s, children: i, tooltip: a, onExpandedChange: o})=>{
            const r = (0,
            Y.useCallback)((()=>o(!n)), [n, o])
              , l = (0,
            Y.useCallback)((()=>o(!1)), [o])
              , c = Vm(rk.pickerMinHeight)
              , u = (0,
            z.jsx)(Fg, {
                onAction: r,
                children: (0,
                z.jsx)(np, {
                    focusKey: PV,
                    allowFocusExit: !1,
                    children: i
                })
            })
              , d = u_();
            return (0,
            z.jsxs)(z.Fragment, {
                children: [n && (0,
                z.jsx)(h_, {
                    onClick: l
                }), (0,
                z.jsx)(ck, {
                    disabled: s,
                    children: (0,
                    z.jsx)(Eg, {
                        tooltip: a && (0,
                        z.jsx)(gu, {
                            value: a
                        }),
                        children: (0,
                        z.jsx)(op, {
                            focused: n ? PV : OV,
                            activation: n ? qu.Always : qu.FocusedChild,
                            children: (0,
                            z.jsx)(rS, {
                                visible: n,
                                minHeight: c,
                                content: u,
                                className: rk.pickerPopup,
                                style: d,
                                minWidth: !0,
                                children: (0,
                                z.jsxs)("div", {
                                    className: rk.row,
                                    children: [(0,
                                    z.jsx)("div", {
                                        className: rk.label,
                                        children: e
                                    }), (0,
                                    z.jsx)("div", {
                                        className: rk.control,
                                        children: (0,
                                        z.jsx)(U_, {
                                            focusKey: OV,
                                            className: Zu()(rk.pickerToggle, n && rk.expanded),
                                            disabled: s,
                                            onSelect: r,
                                            children: t
                                        })
                                    })]
                                })
                            })
                        })
                    })
                })]
            })
        }
        ;
        X.add("game-ui/editor/widgets/fields/popup-value-field.tsx", {
            get BoundPopupValueField() {
                return LV
            },
            set BoundPopupValueField(e) {
                LV = e
            },
            get PopupValueField() {
                return AV
            },
            set PopupValueField(e) {
                AV = e
            }
        });
        var MV = ({label: e, iconSrc: t, value: n, min: s, max: i, fractionDigits: a=3, disabled: o, tooltip: r, onChange: l, onChangeStart: c, onChangeEnd: u})=>{
            const d = kA(Math.pow(10, -a))
              , m = ((e,t,n)=>{
                const s = [];
                for (let i = e; i <= t; i += n)
                    s.push((0,
                    z.jsx)("div", {
                        className: rk.tickMark,
                        style: {
                            left: (i - e) / (t - e) * 100 + "%"
                        }
                    }, i));
                return s
            }
            )(s, i, (i - s) / 10);
            return (0,
            z.jsx)(ck, {
                disabled: o,
                children: (0,
                z.jsx)(Eg, {
                    tooltip: r && (0,
                    z.jsx)(gu, {
                        value: r
                    }),
                    children: (0,
                    z.jsxs)("div", {
                        className: rk.row,
                        children: [(0,
                        z.jsx)("div", {
                            className: rk.label,
                            children: e
                        }), (0,
                        z.jsx)("div", {
                            className: rk.control,
                            children: (0,
                            z.jsxs)(np, {
                                direction: kg.Horizontal,
                                children: [(0,
                                z.jsx)(Ip, {
                                    className: rk.sliderContainer,
                                    children: (0,
                                    z.jsx)(Op, {
                                        children: (0,
                                        z.jsx)(AA, {
                                            showHint: !0,
                                            value: n,
                                            start: s,
                                            end: i,
                                            disabled: o,
                                            theme: tG,
                                            className: Zu()(rk.slider, rk.rangedSlider),
                                            valueTransformer: d,
                                            onChange: l,
                                            onDragStart: c,
                                            onDragEnd: u,
                                            children: m
                                        })
                                    })
                                }), (0,
                                z.jsx)(MB, {
                                    showHint: !0,
                                    value: n,
                                    min: s,
                                    max: i,
                                    fractionDigits: a,
                                    disabled: o,
                                    onChange: l,
                                    onFocus: c,
                                    onBlur: u,
                                    className: rk.sliderInput
                                })]
                            })
                        }), t && (0,
                        z.jsx)(Z_, {
                            src: t,
                            className: rk.icon
                        })]
                    })
                })
            })
        }
        ;
        X.add("game-ui/editor/widgets/fields/ranged-slider-field.tsx", {
            get RangedSliderField() {
                return MV
            },
            set RangedSliderField(e) {
                MV = e
            }
        });
        var RV = ({seasons: e, tickHeight: t=50})=>{
            const {viewport: n} = wD()
              , {padding: s, rem: i, bounds: a, posFromPoint: o} = n;
            return (0,
            z.jsxs)("g", {
                children: [e.map(((e,t)=>{
                    const n = o(e.startTime, a.max.y);
                    return (0,
                    z.jsxs)("g", {
                        children: [(0,
                        z.jsx)(cB, {
                            x1: e.startTime,
                            x2: e.startTime,
                            y1: a.min.y - s.bottom,
                            y2: a.max.y + s.top,
                            stroke: "#fff3",
                            strokeWidth: 1
                        }), (0,
                        z.jsx)(LU, {
                            fontSize: i(12),
                            x: Math.max(n.x - i(10), i(10)),
                            y: n.y + i(s.top - 10),
                            label: e.name,
                            color: "#fff6",
                            rotation: 90,
                            textAnchor: "end"
                        })]
                    }, `${e.name}${t}`)
                }
                )), (0,
                z.jsx)(MU, {
                    overdraw: !0,
                    halfSteps: !0,
                    drawAxes: "y",
                    tickHeight: t
                })]
            })
        }
        ;
        X.add("game-ui/editor/widgets/fields/seasons-field/seasons-grid-lines.tsx", {
            get SeasonsGridLines() {
                return RV
            },
            set SeasonsGridLines(e) {
                RV = e
            }
        });
        const kV = {
            left: 0,
            bottom: 10,
            top: 40,
            right: 0
        }
          , DV = ()=>"";
        var FV = e=>{
            const {label: t, data: n, type: s, seasons: i, editorClassName: a, curveDataOptions: o, gridLinesTickHeight: r, onAddKeyframe: l, onRemoveKeyframe: c, onUpdateSeasonProperty: u} = e
              , d = zB(n[s], {
                minX: 0,
                maxX: 1,
                minY: 0,
                maxY: 100,
                autoUpdateBounds: !1,
                wrapMode: "loop",
                ...o
            })
              , m = (0,
            Y.useCallback)((async(e,t,n,i)=>u(e, s, i || 0, t)), [u, s]);
            return (0,
            z.jsxs)("div", {
                children: [(0,
                z.jsx)("p", {
                    children: t
                }), (0,
                z.jsx)(aB, {
                    data: d,
                    onRemoveKeyframe: c,
                    onAddKeyframe: l,
                    onMoveKeyframe: m,
                    canAddKeyframes: !0,
                    hideControlPoints: !0,
                    allowEditingAll: !0,
                    children: (0,
                    z.jsx)(_B, {
                        padding: kV,
                        gridLines: !1,
                        formatLabelX: DV,
                        className: a,
                        children: (0,
                        z.jsx)(RV, {
                            seasons: i,
                            tickHeight: r
                        })
                    })
                })]
            })
        }
        ;
        X.add("game-ui/editor/widgets/fields/seasons-field/seasons-curve-editor.tsx", {
            get SeasonsCurveEditor() {
                return FV
            },
            set SeasonsCurveEditor(e) {
                FV = e
            }
        });
        let UV = {
            "seasons-field": "seasons-field_wTf",
            seasonsField: "seasons-field_wTf",
            "cloudiness-editor": "cloudiness-editor_bcT",
            cloudinessEditor: "cloudiness-editor_bcT",
            "fog-editor": "fog-editor_FS_",
            fogEditor: "fog-editor_FS_",
            "temperature-gradient": "temperature-gradient_hNT",
            temperatureGradient: "temperature-gradient_hNT"
        };
        X.add("game-ui/editor/widgets/fields/seasons-field/seasons.module.scss", {
            get classes() {
                return UV
            },
            set classes(e) {
                Object.assign(UV, e)
            }
        });
        const BV = UV;
        var GV = ({value: e, seasons: t, label: n, ...s})=>(0,
        z.jsxs)("div", {
            className: BV.seasonsField,
            children: [n && (0,
            z.jsx)("p", {
                children: n
            }), (0,
            z.jsx)(FV, {
                data: e,
                label: "Temperature",
                type: "temperature",
                curveDataOptions: {
                    minY: -40,
                    maxY: 40
                },
                seasons: t,
                ...s
            }), (0,
            z.jsx)(FV, {
                data: e,
                label: "Fog",
                type: "fog",
                seasons: t,
                gridLinesTickHeight: 75,
                editorClassName: BV.fogEditor,
                ...s
            }), (0,
            z.jsx)(FV, {
                data: e,
                label: "Cloudiness",
                type: "cloudiness",
                seasons: t,
                editorClassName: BV.cloudinessEditor,
                ...s
            }), (0,
            z.jsx)(FV, {
                data: e,
                label: "Percipitation",
                type: "precipitation",
                seasons: t,
                ...s
            }), (0,
            z.jsx)(FV, {
                data: e,
                label: "Aurora",
                type: "aurora",
                seasons: t,
                ...s
            })]
        });
        X.add("game-ui/editor/widgets/fields/seasons-field/seasons-field.tsx", {
            get SeasonsField() {
                return GV
            },
            set SeasonsField(e) {
                GV = e
            }
        });
        const VV = {
            inTangent: 0,
            outTangent: 0,
            inWeight: .33,
            outWeight: .33,
            weightedMode: JU.None
        }
          , HV = {
            temperature: ["final", "tempNightDay.y", "tempDeviationNightDay.y", "tempNightDay.x", "tempDeviationNightDay.x"],
            cloudiness: ["final", "cloudAmount", "cloudAmountDeviation", "cloudChance", "turbulence"],
            precipitation: ["final", "precipitationAmount", "precipitationAmountDeviation", "precipitationChance", "turbulence"],
            aurora: ["final", "auroraAmount", "auroraChance"],
            fog: ["final"]
        };
        var KV = (e,t)=>HV[e][t]
          , WV = (e,t,n,s)=>({
            label: e,
            color: t,
            keys: [],
            preWrapMode: eB.Loop,
            postWrapMode: eB.Loop,
            deviationFrom: n,
            readonly: s
        });
        const zV = ()=>({
            temperature: [WV("final", "#f3f3f3", void 0, !0), WV("day", "#f00f"), WV("dayDeviation", "#f967", 1), WV("night", "#00ff"), WV("nightDeviation", "#74f7", 3)],
            cloudiness: [WV("final", "#f3f3f3", void 0, !0), WV("amount", "#00ff"), WV("amountDeviation", "#aaf7", 1), WV("chance", "#0f0a"), WV("turbulence", "#fffa")],
            precipitation: [WV("final", "#f3f3f3", void 0, !0), WV("amount", "#00ff"), WV("amountDeviation", "#44f7", 1), WV("chance", "#0f0a"), WV("turbulence", "#fffa")],
            aurora: [WV("final", "#f3f3f3", void 0, !0), WV("amount", "#00ff"), WV("chance", "#0f0a")],
            fog: [WV("final", "#f3f3f3", void 0, !0)]
        })
          , YV = (e,t)=>({
            ...VV,
            time: e,
            value: t
        });
        var $V = e=>(0,
        Y.useMemo)((()=>{
            if (e && e.seasons) {
                const t = zV();
                return t.temperature[0].keys = e.curves?.temperature.keys || [],
                t.temperature[0].keys.forEach((e=>e.time = e.time / 12)),
                t.fog[0].keys = e.curves?.fog.keys || [],
                t.fog[0].keys.forEach((e=>{
                    e.time = e.time / 12,
                    e.value = 100 * e.value
                }
                )),
                t.cloudiness[0].keys = e.curves?.cloudiness.keys || [],
                t.cloudiness[0].keys.forEach((e=>{
                    e.time = e.time / 12,
                    e.value = 100 * e.value
                }
                )),
                t.precipitation[0].keys = e.curves?.precipitation.keys || [],
                t.precipitation[0].keys.forEach((e=>{
                    e.time = e.time / 12,
                    e.value = 100 * e.value
                }
                )),
                t.aurora[0].keys = e.curves?.aurora.keys || [],
                t.aurora[0].keys.forEach((e=>{
                    e.time = e.time / 12,
                    e.value = 100 * e.value
                }
                )),
                e.seasons.reduce(((t,n,s)=>{
                    const i = ((s < e.seasons.length - 1 ? e.seasons[s + 1].startTime : 1 + e.seasons[0].startTime) + n.startTime) / 2;
                    return t.temperature[1].keys.push(YV(i, n.tempNightDay.y)),
                    t.temperature[2].keys.push(YV(i, n.tempNightDay.y + n.tempDeviationNightDay.y)),
                    t.temperature[3].keys.push(YV(i, n.tempNightDay.x)),
                    t.temperature[4].keys.push(YV(i, n.tempNightDay.x + n.tempDeviationNightDay.x)),
                    t.cloudiness[1].keys.push(YV(i, n.cloudAmount)),
                    t.cloudiness[2].keys.push(YV(i, n.cloudAmount + n.cloudAmountDeviation)),
                    t.cloudiness[3].keys.push(YV(i, n.cloudChance)),
                    t.cloudiness[4].keys.push(YV(i, 100 * n.turbulence)),
                    t.precipitation[1].keys.push(YV(i, n.precipitationAmount)),
                    t.precipitation[2].keys.push(YV(i, n.precipitationAmount + n.precipitationAmountDeviation)),
                    t.precipitation[3].keys.push(YV(i, n.precipitationChance)),
                    t.precipitation[4].keys.push(YV(i, 100 * n.turbulence)),
                    t.aurora[1].keys.push(YV(i, 100 * n.auroraAmount)),
                    t.aurora[2].keys.push(YV(i, n.auroraChance)),
                    t
                }
                ), t)
            }
            return zV()
        }
        ), [e]);
        X.add("game-ui/editor/widgets/fields/seasons-field/utils.ts", {
            get getSeasonProperty() {
                return KV
            },
            set getSeasonProperty(e) {
                KV = e
            },
            get makeSeasonPropertyCurve() {
                return WV
            },
            set makeSeasonPropertyCurve(e) {
                WV = e
            },
            get useCurvesForSeasonsData() {
                return $V
            },
            set useCurvesForSeasonsData(e) {
                $V = e
            }
        });
        var qV = e=>{
            const t = e.props
              , n = $V(t)
              , s = (({parent: e, path: t, props: n})=>{
                const s = (0,
                Y.useMemo)((()=>{
                    const s = PR(e.path, t);
                    return {
                        onAddKeyframe: async t=>$R(e.group, s, t),
                        onRemoveKeyframe: t=>{
                            XR(e.group, s, t)
                        }
                        ,
                        onUpdateSeasonProperty: async(t,i,a,o)=>{
                            const r = n.seasons
                              , [l,c] = KV(i, a).split(".")
                              , u = r[t];
                            let d = o.value;
                            if (l.includes("Deviation")) {
                                const e = u[l.replace("Deviation", "")];
                                d -= c && "object" == typeof e ? e[c] : e
                            }
                            "turbulence" !== l && "auroraAmount" !== l || (d /= 100);
                            const m = ((t < r.length - 1 ? r[t + 1].startTime : 1 + r[0].startTime) + u.startTime) / 2
                              , h = {
                                ...u,
                                [l]: c ? {
                                    ...u[l],
                                    [c]: d
                                } : d,
                                startTime: u.startTime + (o.time - m)
                            };
                            return qR(e.group, s, h)
                        }
                    }
                }
                ), [e.group, e.path, t, n]);
                return s
            }
            )(e);
            return (0,
            z.jsx)("div", {
                children: (0,
                z.jsx)(GV, {
                    ...e.props,
                    ...s,
                    value: n,
                    seasons: t.seasons,
                    label: (0,
                    z.jsx)(gu, {
                        value: au("Climate settings")
                    })
                })
            })
        }
        ;
        X.add("game-ui/editor/widgets/fields/seasons-field/seasons-field.bound.tsx", {
            get updateSeasonProperty() {
                return updateSeasonProperty
            },
            set updateSeasonProperty(e) {
                updateSeasonProperty = e
            },
            get BoundSeasonsField() {
                return qV
            },
            set BoundSeasonsField(e) {
                qV = e
            }
        });
        var XV = ({label: e, value: t, disabled: n, tooltip: s, onChange: i})=>(0,
        z.jsx)(ck, {
            disabled: n,
            children: (0,
            z.jsx)(Eg, {
                tooltip: s && (0,
                z.jsx)(gu, {
                    value: s
                }),
                children: (0,
                z.jsxs)("div", {
                    className: rk.row,
                    children: [(0,
                    z.jsx)("div", {
                        className: rk.label,
                        children: e
                    }), (0,
                    z.jsx)(Hb, {
                        showHint: !0,
                        checked: t,
                        disabled: n,
                        onChange: i,
                        className: rk.toggle
                    })]
                })
            })
        });
        X.add("game-ui/editor/widgets/fields/toggle-field.tsx", {
            get ToggleField() {
                return XV
            },
            set ToggleField(e) {
                XV = e
            }
        });
        var QV = e=>(0,
        z.jsx)(ZV, {
            ...e.props
        });
        const ZV = ({value: e, hidden: t})=>t ? null : (0,
        z.jsx)(lk, {
            children: (0,
            z.jsx)(gu, {
                value: e
            })
        });
        X.add("game-ui/editor/widgets/fields/value-field.tsx", {
            get BoundLocalizedValueField() {
                return QV
            },
            set BoundLocalizedValueField(e) {
                QV = e
            }
        });
        let JV = {
            "popup-content": "popup-content_QLL",
            popupContent: "popup-content_QLL",
            "popup-content-scrollable": "popup-content-scrollable_clr",
            popupContentScrollable: "popup-content-scrollable_clr"
        };
        X.add("game-ui/editor/widgets/filter-menu/filter-menu.module.scss", {
            get classes() {
                return JV
            },
            set classes(e) {
                Object.assign(JV, e)
            }
        });
        const eH = JV;
        var tH = ({parent: e, path: t, props: n})=>{
            const s = ZR(e, t)
              , i = YM(xR, s)
              , a = YM(vR, s);
            return (0,
            z.jsx)(nH, {
                availableFilters: n.availableFilters,
                activeFilters: n.activeFilters,
                onToggleFilter: i,
                onClear: a
            })
        }
          , nH = ({availableFilters: e, activeFilters: t, onToggleFilter: n, onClear: s})=>{
            const [i,a] = (0,
            Y.useState)(!1)
              , o = iH(e, t)
              , r = (0,
            Y.useMemo)((()=>t.length > 0 ? t.join(", ") : (0,
            z.jsx)(_c.Common.NONE, {})), [t]);
            return (0,
            z.jsx)(AV, {
                label: (0,
                z.jsx)(_c.Editor.FILTERS, {}),
                value: r,
                expanded: i,
                onExpandedChange: a,
                children: (0,
                z.jsxs)("div", {
                    className: eH.popupContent,
                    children: [(0,
                    z.jsx)(mb, {
                        className: eH.popupContentScrollable,
                        children: o.map((e=>(0,
                        z.jsx)(sH, {
                            filter: e.filter,
                            active: e.active,
                            onToggle: n
                        }, e.filter)))
                    }), (0,
                    z.jsx)(Nk, {
                        onSelect: s,
                        children: (0,
                        z.jsx)(_c.Editor.CLEAR_ALL, {})
                    })]
                })
            })
        }
        ;
        const sH = ({filter: e, active: t, onToggle: n})=>{
            const s = (0,
            Y.useCallback)((()=>n(e, !t)), [t, e, n]);
            return (0,
            z.jsx)(XV, {
                label: e,
                value: t,
                onChange: s
            })
        }
          , iH = (e,t)=>(0,
        Y.useMemo)((()=>e.map((e=>({
            filter: e,
            active: t.includes(e)
        })))), [t, e]);
        X.add("game-ui/editor/widgets/filter-menu/filter-menu.tsx", {
            get BoundFilterMenu() {
                return tH
            },
            set BoundFilterMenu(e) {
                tH = e
            },
            get FilterMenu() {
                return nH
            },
            set FilterMenu(e) {
                nH = e
            }
        });
        let aH = {
            "virtual-list": "virtual-list_Amj",
            virtualList: "virtual-list_Amj",
            vertical: "vertical_RRQ",
            horizontal: "horizontal_QEG"
        };
        X.add("game-ui/common/scrolling/virtual-list/virtual-list.module.scss", {
            get classes() {
                return aH
            },
            set classes(e) {
                Object.assign(aH, e)
            }
        });
        const oH = aH;
        var rH = Y.forwardRef((function({sizeProvider: e, direction: t="vertical", controller: n, smooth: s, className: i, style: a, renderItem: o, onRenderedRangeChange: r, onScrollChange: l, initialScrollPos: c}, u) {
            const d = (0,
            Y.useRef)(null)
              , m = gd(u, d)
              , {list: h, onScroll: g} = lH(d, e, t, void 0, o, r, l, c)
              , p = "vertical" === t;
            return (0,
            z.jsx)(mb, {
                ref: m,
                vertical: p,
                horizontal: !p,
                controller: n,
                smooth: s,
                className: i,
                style: a,
                onScroll: g,
                children: h
            })
        }
        ));
        function lH(e, t, n, s, i, a, o, r) {
            const l = hm(e, dm)
              , c = Um()
              , u = l ?? c
              , d = "vertical" === n
              , m = d ? u.y : u.x
              , [h,g] = (0,
            Y.useState)(r || 0)
              , p = (0,
            Y.useMemo)((()=>t.getRenderedRange(h, m)), [m, h, t]);
            (0,
            Y.useEffect)((()=>{
                null != a && a(p.startIndex, p.endIndex)
            }
            ), [a, p.endIndex, p.startIndex]);
            const f = (0,
            Y.useCallback)((()=>{
                if (!e.current)
                    return;
                const t = d ? e.current.scrollTop : e.current.scrollLeft;
                g(t),
                o?.(t)
            }
            ), [e, o, d]);
            (0,
            Y.useEffect)((()=>{
                let t = 0;
                return e.current && "number" == typeof r && (d ? e.current.scrollTop = r : e.current.scrollLeft = r),
                function e() {
                    f(),
                    t = window.requestAnimationFrame(e)
                }(),
                ()=>window.cancelAnimationFrame(t)
            }
            ), [e, r, f, d]);
            const x = (0,
            Y.useMemo)((()=>{
                const e = [];
                for (let t = 0; t < p.endIndex - p.startIndex; t++)
                    e[t] = i(p.startIndex + t, t);
                const n = t.getTotalSize() + "px"
                  , a = p.offset + "px";
                return (0,
                z.jsx)("div", {
                    className: Zu()(oH.virtualList, s, d ? oH.vertical : oH.horizontal),
                    style: d ? {
                        height: n,
                        paddingTop: a
                    } : {
                        width: n,
                        paddingLeft: a
                    },
                    children: e
                })
            }
            ), [p.endIndex, p.startIndex, p.offset, t, s, d, i]);
            return (0,
            Y.useMemo)((()=>({
                list: x,
                onScroll: f
            })), [x, f])
        }
        X.add("game-ui/common/scrolling/virtual-list/virtual-list.tsx", {
            get VirtualList() {
                return rH
            },
            set VirtualList(e) {
                rH = e
            },
            get useVirtualList() {
                return lH
            },
            set useVirtualList(e) {
                lH = e
            }
        });
        var cH = {
            getRenderedRange: ()=>({
                offset: 0,
                size: 0,
                startIndex: 0,
                endIndex: 0
            }),
            getTotalSize: ()=>0
        };
        function uH(e, t, n) {
            return (0,
            Y.useMemo)((()=>({
                getRenderedRange: (s,i)=>{
                    const a = Od(Math.floor(s / e) - n, 0, t)
                      , o = Od(Math.ceil((s + i) / e) + n, a, t);
                    return {
                        offset: e * a,
                        startIndex: a,
                        endIndex: o
                    }
                }
                ,
                getTotalSize: ()=>e * t
            })), [t, e, n])
        }
        function dH(e, t, n) {
            return (0,
            Y.useMemo)((()=>{
                const s = function(e, t) {
                    const n = [];
                    let s = 0;
                    for (let i = 0; i < t; ++i) {
                        const t = s;
                        s += e(i),
                        n.push({
                            x: t,
                            y: s
                        })
                    }
                    return n
                }((n=>e(t[n], n)), t.length);
                return {
                    getRenderedRange: (e,i)=>{
                        const a = Od(mH(s, e) - n, 0, t.length)
                          , o = Od(mH(s, i + e) + n, a, t.length);
                        return {
                            offset: s[a].x,
                            startIndex: a,
                            endIndex: o
                        }
                    }
                    ,
                    getTotalSize: ()=>s[s.length - 1].y
                }
            }
            ), [t, n, e])
        }
        function mH(e, t) {
            for (let n = e.length - 1; n >= 0; --n)
                if (t >= e[n].x)
                    return n;
            return 0
        }
        X.add("game-ui/common/scrolling/virtual-list/virtual-list-size-provider.ts", {
            get emptySizeProvider() {
                return cH
            },
            set emptySizeProvider(e) {
                cH = e
            },
            get useUniformSizeProvider() {
                return uH
            },
            set useUniformSizeProvider(e) {
                uH = e
            },
            get useArraySizeProvider() {
                return dH
            },
            set useArraySizeProvider(e) {
                dH = e
            }
        });
        let hH = {
            listItemHeight: "24rem",
            imageSize: "20rem",
            dirArrowSrc: "Media/Glyphs/ThickStrokeArrowRight.svg",
            "hierarchy-menu": "hierarchy-menu_Tm_ editor-widget_QQl",
            hierarchyMenu: "hierarchy-menu_Tm_ editor-widget_QQl",
            item: "item_qWj",
            "list-item": "list-item_eZG item_qWj",
            listItem: "list-item_eZG item_qWj",
            image: "image_IPH",
            name: "name_Mx8",
            "icon-container": "icon-container_OHi",
            iconContainer: "icon-container_OHi",
            "arrow-expanded": "arrow-expanded_Df1",
            arrowExpanded: "arrow-expanded_Df1",
            "placeholder-margin": "placeholder-margin_S8d",
            placeholderMargin: "placeholder-margin_S8d",
            "single-selection": "single-selection_s_l",
            singleSelection: "single-selection_s_l"
        };
        X.add("game-ui/editor/widgets/hierarchy-menu/hierarchy-menu.module.scss", {
            get classes() {
                return hH
            },
            set classes(e) {
                Object.assign(hH, e)
            }
        });
        const gH = hH;
        var pH, fH = ({parent: e, path: t, props: n})=>{
            const s = ZR(e, t)
              , i = YM(_R, s)
              , a = YM(bR, s)
              , o = YM(TR, s);
            return (0,
            z.jsx)(xH, {
                ...n,
                onSetExpanded: i,
                onSelect: a,
                onRenderedRangeChange: o
            })
        }
        , xH = ({viewport: e, flex: t, visibleCount: n, onSelect: s, onSetExpanded: i, singleSelection: a, onRenderedRangeChange: o})=>{
            const r = uH(Vm(gH.listItemHeight), n, 10)
              , l = pD(t)
              , c = (0,
            Y.useCallback)(((t,n)=>{
                if (n < 0 || n >= e.length)
                    return null;
                const o = e[n];
                return (0,
                z.jsx)(vH, {
                    ...o,
                    viewportIndex: n,
                    singleSelection: a,
                    onSelect: s,
                    onSetExpanded: i
                }, t)
            }
            ), [s, i, a, e]);
            return (0,
            z.jsx)(rH, {
                style: l,
                className: gH.hierarchyMenu,
                sizeProvider: r,
                renderItem: c,
                onRenderedRangeChange: o
            })
        }
        ;
        !function(e) {
            e[e.None = 0] = "None",
            e[e.Icon = 1] = "Icon",
            e[e.ExpandArrow = 2] = "ExpandArrow"
        }(pH || (pH = {}));
        const vH = ({displayName: e, icon: t, tooltip: n, level: s, selectable: i, viewportIndex: a, selected: o, expandable: r, onSelect: l, expanded: c, onSetExpanded: u, singleSelection: d})=>{
            const m = (0,
            Y.useCallback)((()=>{
                r && u && u(a, !c)
            }
            ), [r, c, u, a])
              , h = (0,
            Y.useCallback)((()=>{
                !i || !l || d && o || l(a, !o)
            }
            ), [i, l, d, o, a])
              , g = r ? pH.ExpandArrow : Vr(t) ? pH.None : pH.Icon
              , p = (0,
            Y.useMemo)((()=>({
                [c ? "Collapse Group" : "Expand Group"]: r ? m : null
            })), [c, r, m])
              , f = (0,
            z.jsxs)(U_, {
                style: {
                    "--level": s
                },
                className: Zu()(gH.listItem, d && gH.singleSelection),
                onSelect: h,
                selected: o,
                children: [(0,
                z.jsx)("div", {
                    className: Zu()(gH.name, g === pH.None && gH.placeholderMargin),
                    children: (0,
                    z.jsx)(gu, {
                        value: e
                    })
                }), g === pH.Icon ? (0,
                z.jsx)("img", {
                    src: t,
                    className: gH.image
                }) : null, g === pH.ExpandArrow ? (0,
                z.jsx)(_H, {
                    expanded: c,
                    onSelect: m
                }) : null]
            });
            return (0,
            z.jsx)(Mg, {
                actions: p,
                children: null != n ? (0,
                z.jsx)(Eg, {
                    tooltip: (0,
                    z.jsx)(gu, {
                        value: n
                    }),
                    children: f
                }) : f
            })
        }
          , _H = ({expanded: e, onSelect: t})=>(0,
        z.jsx)("div", {
            className: gH.iconContainer,
            children: (0,
            z.jsx)("img", {
                src: gH.dirArrowSrc,
                className: Zu()(gH.image, e && gH.arrowExpanded),
                onClick: t
            })
        });
        X.add("game-ui/editor/widgets/hierarchy-menu/hierarchy-menu.tsx", {
            get BoundHierarchyMenu() {
                return fH
            },
            set BoundHierarchyMenu(e) {
                fH = e
            },
            get HierarchyMenu() {
                return xH
            },
            set HierarchyMenu(e) {
                xH = e
            }
        });
        let bH = {
            "image-field": "image-field_PPC",
            imageField: "image-field_PPC",
            label: "label_dKE",
            "image-container": "image-container_jpQ",
            imageContainer: "image-container_jpQ",
            image: "image_xoS"
        };
        X.add("game-ui/editor/widgets/image/image-field.module.scss", {
            get classes() {
                return bH
            },
            set classes(e) {
                Object.assign(bH, e)
            }
        });
        const TH = bH;
        var EH = e=>(0,
        z.jsx)(IH, {
            ...e.props
        })
          , IH = ({uri: e, label: t, tooltip: n})=>(0,
        z.jsx)(Eg, {
            tooltip: n && (0,
            z.jsx)(gu, {
                value: n
            }),
            children: (0,
            z.jsxs)("div", {
                className: TH.imageField,
                children: [(0,
                z.jsx)("div", {
                    className: TH.label,
                    children: (0,
                    z.jsx)(gu, {
                        value: t
                    })
                }), (0,
                z.jsx)("div", {
                    className: TH.imageContainer,
                    children: (0,
                    z.jsx)("img", {
                        src: e,
                        className: TH.image
                    })
                })]
            })
        });
        function SH(e, t) {
            const [n,s] = (0,
            Y.useState)(!1);
            return (0,
            Y.useEffect)((()=>{
                const t = t=>{
                    t.button === e && s(!1)
                }
                ;
                return window.addEventListener("mouseup", t),
                ()=>window.removeEventListener("mouseup", t)
            }
            ), [e]),
            (0,
            Y.useMemo)((()=>null != t ? {
                mouseDown: n,
                onMouseDown: t=>{
                    t.button === e && s(!0)
                }
                ,
                onMouseUp: i=>{
                    n && i.button === e && (s(!1),
                    t(i))
                }
            } : {
                mouseDown: n
            }), [e, t, n])
        }
        X.add("game-ui/editor/widgets/image/image-field.tsx", {
            get BoundImageField() {
                return EH
            },
            set BoundImageField(e) {
                EH = e
            },
            get ImageField() {
                return IH
            },
            set ImageField(e) {
                IH = e
            }
        }),
        X.add("game-ui/common/hooks/use-secondary-click.tsx", {
            get useSecondaryClick() {
                return SH
            },
            set useSecondaryClick(e) {
                SH = e
            }
        });
        let yH = {
            row: "row_ZqL",
            col: "col_zHI"
        };
        X.add("game-ui/ui/layout.module.scss", {
            get classes() {
                return yH
            },
            set classes(e) {
                Object.assign(yH, e)
            }
        });
        const jH = yH;
        var CH = e=>(0,
        z.jsx)("div", {
            style: e.style,
            className: Zu()(jH.row, e.className),
            children: e.children
        })
          , NH = e=>(0,
        z.jsx)("div", {
            style: e.style,
            className: Zu()(jH.col, e.className),
            children: e.children
        });
        X.add("game-ui/ui/layout.tsx", {
            get Row() {
                return CH
            },
            set Row(e) {
                CH = e
            },
            get Col() {
                return NH
            },
            set Col(e) {
                NH = e
            }
        });
        let wH = {
            "theme-icon": "theme-icon_OYQ",
            themeIcon: "theme-icon_OYQ",
            icon: "icon_gHd"
        };
        X.add("game-ui/common/image/small-icon.module.scss", {
            get classes() {
                return wH
            },
            set classes(e) {
                Object.assign(wH, e)
            }
        });
        const OH = wH;
        var PH = e=>{
            e.currentTarget.src = "Media/.svg"
        }
          , LH = ({src: e, className: t})=>(0,
        z.jsx)(xd, {
            children: (0,
            z.jsx)("div", {
                className: Zu()(OH.themeIcon, t),
                children: (0,
                z.jsx)("img", {
                    src: e,
                    className: OH.icon
                })
            })
        });
        X.add("game-ui/common/image/small-icon.tsx", {
            get handleIconError() {
                return PH
            },
            set handleIconError(e) {
                PH = e
            },
            get SmallIcon() {
                return LH
            },
            set SmallIcon(e) {
                LH = e
            }
        });
        let AH = {
            "full-width-digits": "full-width-digits_dns",
            fullWidthDigits: "full-width-digits_dns",
            digits: "digits_a1g",
            blind: "blind_u0R"
        };
        X.add("game-ui/common/text/full-width-digits/full-width-digits.module.scss", {
            get classes() {
                return AH
            },
            set classes(e) {
                Object.assign(AH, e)
            }
        });
        const MH = AH
          , RH = /([\d:-]+)|([^\d:-]+)/g
          , kH = /\d/g;
        var DH = ({className: e, children: t})=>{
            const n = ic(t)
              , s = (0,
            Y.useMemo)((()=>n.match(RH)?.map(((e,t)=>kH.test(e) ? (0,
            z.jsxs)("div", {
                className: MH.digits,
                children: [e, (0,
                z.jsx)("div", {
                    className: MH.blind,
                    children: e.replace(kH, "0")
                })]
            }, t) : e))), [n]);
            return (0,
            z.jsx)("div", {
                className: Zu()(MH.fullWidthDigits, e),
                children: s
            })
        }
        ;
        X.add("game-ui/common/text/full-width-digits/full-width-digits.tsx", {
            get FullWidthDigits() {
                return DH
            },
            set FullWidthDigits(e) {
                DH = e
            }
        });
        let FH = {
            wrapper: "wrapper_dff wrapper_onO",
            container: "container_Hgg container_kOI",
            input: "input_sYI",
            label: "label_FEo"
        };
        X.add("game-ui/common/input/text/ellipsis-text-input/themes/default.module.scss", {
            get classes() {
                return FH
            },
            set classes(e) {
                Object.assign(FH, e)
            }
        });
        const UH = FH;
        function BH(e) {
            return (0,
            Y.useMemo)((()=>({
                ...UH,
                ...e
            })), [e])
        }
        X.add("game-ui/common/input/text/ellipsis-text-input/ellipsis-text-input-theme.tsx", {
            get useTextInputTheme() {
                return BH
            },
            set useTextInputTheme(e) {
                BH = e
            }
        });
        let GH = {
            wrapper: "wrapper_onO",
            container: "container_kOI",
            input: "input_MMV",
            label: "label_qsp",
            hint: "hint_aHi"
        };
        X.add("game-ui/common/input/text/ellipsis-text-input/ellipsis-text-input.module.scss", {
            get classes() {
                return GH
            },
            set classes(e) {
                Object.assign(GH, e)
            }
        });
        const VH = GH;
        var HH = Y.forwardRef((function({value: e, maxLength: t=64, theme: n=UH, disableHint: s=!1, forceHint: i=!1, className: a, onFocus: o, onBlur: r, ...l}, c) {
            const [u,d] = (0,
            Y.useState)(!1)
              , [m,h] = (0,
            Y.useState)(!1)
              , g = BH(n)
              , p = (0,
            Y.useCallback)((e=>{
                d(!0),
                o && o(e)
            }
            ), [o])
              , f = (0,
            Y.useCallback)((e=>{
                d(!1),
                r && r(e)
            }
            ), [r]);
            return (0,
            z.jsxs)("div", {
                className: Zu()(VH.wrapper, g.wrapper, a),
                children: [(0,
                z.jsx)(UT, {
                    action: u ? "Back" : "Select",
                    active: !s && (m || i),
                    className: VH.hint
                }), (0,
                z.jsxs)(Ip, {
                    onFocusChange: h,
                    className: Zu()(VH.container, g.container),
                    children: [(0,
                    z.jsx)(oI, {
                        ref: c,
                        value: e,
                        maxLength: t,
                        className: Zu()(VH.input, g.input),
                        onFocus: p,
                        onBlur: f,
                        ...l
                    }), (0,
                    z.jsx)("div", {
                        className: Zu()(VH.label, g.label),
                        children: e || " "
                    })]
                })]
            })
        }
        ));
        X.add("game-ui/common/input/text/ellipsis-text-input/ellipsis-text-input.tsx", {
            get EllipsisTextInput() {
                return HH
            },
            set EllipsisTextInput(e) {
                HH = e
            }
        });
        var KH = (e,t)=>{
            let n = null
              , s = -1;
            const i = a=>{
                n || (n = a);
                a - n >= t ? e() : s = requestAnimationFrame(i)
            }
            ;
            return s = requestAnimationFrame(i),
            ()=>{
                cancelAnimationFrame(s)
            }
        }
        ;
        X.add("game-ui/common/utils/wait.ts", {
            get wait() {
                return KH
            },
            set wait(e) {
                KH = e
            }
        });
        var WH = ({action: e="Switch Tab", children: t, hidden: n})=>{
            const s = Lp(e, Dm())
              , i = 2 === s?.items.length
              , a = !!s?.items.length && (i || 2 === s?.items[0]?.bindings.length);
            return n || !a ? (0,
            z.jsx)(z.Fragment, {
                children: t
            }) : (0,
            z.jsxs)(z.Fragment, {
                children: [(0,
                z.jsx)(PT, {
                    modifiers: s.items[0].modifiers,
                    bindings: [s.items[0].bindings[0]],
                    className: OT.leftTab
                }), t, (0,
                z.jsx)(PT, {
                    modifiers: s.items[i ? 1 : 0].modifiers,
                    bindings: [s.items[i ? 1 : 0].bindings[i ? 0 : 1]],
                    className: OT.rightTab
                })]
            })
        }
        ;
        X.add("game-ui/common/input-events/action-hints/input-hint/tab-hint-icons.tsx", {
            get TabHintIcons() {
                return WH
            },
            set TabHintIcons(e) {
                WH = e
            }
        });
        var zH = function(e, t) {
            return e < t ? -1 : e > t ? 1 : 0
        }
          , YH = function(e, t) {
            var n = e.localeCompare(t);
            return n ? n / Math.abs(n) : 0
        }
          , $H = /(^0x[\da-fA-F]+$|^([+-]?(?:\d+(?:\.\d*)?|\.\d+)(?:[eE][+-]?\d+)?(?!\.\d+)(?=\D|\s|$))|\d+)/g
          , qH = /^\s+|\s+$/g
          , XH = /\s+/g
          , QH = /^[+-]?(?:\d+(?:\.\d*)?|\.\d+)(?:[eE][+-]?\d+)?$/
          , ZH = /(^([\w ]+,?[\w ]+)?[\w ]+,?[\w ]+\d+:\d+(:\d+)?[\w ]?|^\d{1,4}[/-]\d{1,4}[/-]\d{1,4}|^\w+, \w+ \d+, \d{4})/
          , JH = /^0+[1-9]{1}[0-9]*$/
          , eK = /[^\x00-\x80]/
          , tK = function(e, t) {
            return e < t ? -1 : e > t ? 1 : 0
        }
          , nK = function(e, t) {
            return e.value === t.value ? 0 : void 0 !== e.parsedNumber && void 0 !== t.parsedNumber ? zH(e.parsedNumber, t.parsedNumber) : e.chunks && t.chunks ? function(e, t) {
                for (var n = e.length, s = t.length, i = Math.min(n, s), a = 0; a < i; a++) {
                    var o = e[a]
                      , r = t[a];
                    if (o.normalizedString !== r.normalizedString) {
                        if ("" === o.normalizedString != ("" === r.normalizedString))
                            return "" === o.normalizedString ? -1 : 1;
                        if (void 0 !== o.parsedNumber && void 0 !== r.parsedNumber) {
                            var l = zH(o.parsedNumber, r.parsedNumber);
                            return 0 === l ? tK(o.normalizedString, r.normalizedString) : l
                        }
                        return void 0 !== o.parsedNumber || void 0 !== r.parsedNumber ? void 0 !== o.parsedNumber ? -1 : 1 : eK.test(o.normalizedString + r.normalizedString) ? YH(o.normalizedString, r.normalizedString) : tK(o.normalizedString, r.normalizedString)
                    }
                }
                return n > i || s > i ? n <= i ? -1 : 1 : 0
            }(e.chunks, t.chunks) : function(e, t) {
                return (e.chunks ? !t.chunks : t.chunks) ? e.chunks ? -1 : 1 : (e.isNaN ? !t.isNaN : t.isNaN) ? e.isNaN ? -1 : 1 : (e.isSymbol ? !t.isSymbol : t.isSymbol) ? e.isSymbol ? -1 : 1 : (e.isObject ? !t.isObject : t.isObject) ? e.isObject ? -1 : 1 : (e.isArray ? !t.isArray : t.isArray) ? e.isArray ? -1 : 1 : (e.isFunction ? !t.isFunction : t.isFunction) ? e.isFunction ? -1 : 1 : (e.isNull ? !t.isNull : t.isNull) ? e.isNull ? -1 : 1 : 0
            }(e, t)
        }
          , sK = function(e) {
            return e.replace(XH, " ").replace(qH, "")
        }
          , iK = function(e) {
            if (0 !== e.length) {
                var t = Number(e);
                if (!Number.isNaN(t))
                    return t
            }
        }
          , aK = function(e, t, n) {
            if (QH.test(e) && (!JH.test(e) || 0 === t || "." !== n[t - 1]))
                return iK(e) || 0
        }
          , oK = function(e, t, n) {
            return {
                parsedNumber: aK(e, t, n),
                normalizedString: sK(e)
            }
        }
          , rK = function(e) {
            var t = function(e) {
                return e.replace($H, "\0$1\0").replace(/\0$/, "").replace(/^\0/, "").split("\0")
            }(e).map(oK);
            return t
        }
          , lK = function(e) {
            return "function" == typeof e
        }
          , cK = function(e) {
            return Number.isNaN(e) || e instanceof Number && Number.isNaN(e.valueOf())
        }
          , uK = function(e) {
            return null === e
        }
          , dK = function(e) {
            return !(null === e || "object" != typeof e || Array.isArray(e) || e instanceof Number || e instanceof String || e instanceof Boolean || e instanceof Date)
        }
          , mK = function(e) {
            return "symbol" == typeof e
        }
          , hK = function(e) {
            return void 0 === e
        }
          , gK = function(e) {
            var t = iK(e);
            return void 0 !== t ? t : function(e) {
                if (ZH.test(e)) {
                    var t = Date.parse(e);
                    if (!Number.isNaN(t))
                        return t
                }
            }(e)
        }
          , pK = function(e) {
            if ("string" == typeof e || e instanceof String || ("number" == typeof e || e instanceof Number) && !cK(e) || "boolean" == typeof e || e instanceof Boolean || e instanceof Date) {
                var t = function(e) {
                    return "boolean" == typeof e || e instanceof Boolean ? Number(e).toString() : "number" == typeof e || e instanceof Number ? e.toString() : e instanceof Date ? e.getTime().toString() : "string" == typeof e || e instanceof String ? e.toLowerCase().replace(qH, "") : ""
                }(e)
                  , n = gK(t);
                return {
                    parsedNumber: n,
                    chunks: rK(n ? "" + n : t),
                    value: e
                }
            }
            return {
                isArray: Array.isArray(e),
                isFunction: lK(e),
                isNaN: cK(e),
                isNull: uK(e),
                isObject: dK(e),
                isSymbol: mK(e),
                isUndefined: hK(e),
                value: e
            }
        }
          , fK = function(e) {
            return function(t, n) {
                var s = pK(t)
                  , i = pK(n);
                return nK(s, i) * ("desc" === e.order ? -1 : 1)
            }
        }
          , xK = function(e) {
            return "string" == typeof e && ("asc" === e || "desc" === e)
        }
          , vK = function(e) {
            var t = "asc";
            return "string" == typeof e && xK(e) ? t = e : e && "object" == typeof e && e.order && xK(e.order) && (t = e.order),
            {
                order: t
            }
        };
        function _K(e) {
            var t = vK(e);
            return fK(t)
        }
        var bK;
        function TK(e, t) {
            const n = _K();
            return (t === bK.Downloaded || t === bK.Name ? TK(e, bK.LastModified) : e).sort(((e,s)=>{
                switch (t) {
                case bK.LastModified:
                    return new Date(s.lastModified).getTime() - new Date(e.lastModified).getTime() || n(e.displayName, s.displayName);
                case bK.Population:
                    return s.population - e.population || n(e.displayName, s.displayName);
                case bK.Downloaded:
                    return "ParadoxMods" === s.cloudTarget ? 1 : -1;
                default:
                    return n(e.displayName, s.displayName)
                }
            }
            ))
        }
        !function(e) {
            e[e.Name = 0] = "Name",
            e[e.LastModified = 1] = "LastModified",
            e[e.Population = 2] = "Population",
            e[e.Downloaded = 3] = "Downloaded"
        }(bK || (bK = {})),
        X.add("game-ui/menu/components/shared/save-list-header/save-list-ordering.ts", {
            get Ordering() {
                return bK
            },
            set Ordering(e) {
                bK = e
            },
            get sort() {
                return TK
            },
            set sort(e) {
                TK = e
            }
        });
        let EK = {
            "save-list-header": "save-list-header_f5S",
            saveListHeader: "save-list-header_f5S",
            "sort-label": "sort-label_KDJ",
            sortLabel: "sort-label_KDJ",
            "sort-buttons": "sort-buttons_vQU",
            sortButtons: "sort-buttons_vQU",
            "sort-button": "sort-button_UDY",
            sortButton: "sort-button_UDY"
        };
        X.add("game-ui/menu/components/shared/save-list-header/save-list-header.module.scss", {
            get classes() {
                return EK
            },
            set classes(e) {
                Object.assign(EK, e)
            }
        });
        const IK = EK;
        var SK = [bK.Name, bK.Population, bK.LastModified, bK.Downloaded]
          , yK = ({selectedOrdering: e, className: t, options: n, onSelectOrdering: s})=>(0,
        z.jsx)(NK, {
            label: (0,
            z.jsx)(_c.Menu.SAVE_ORDERING_LABEL, {}),
            options: n,
            selectedOption: e,
            onSelectOption: s,
            getOptionLabel: e=>(0,
            z.jsx)(_c.Menu.SAVE_ORDERING, {
                hash: bK[e]
            }),
            className: t
        })
          , jK = ({targets: e, selectedTarget: t, className: n, onSelectTarget: s})=>(0,
        z.jsx)(NK, {
            label: (0,
            z.jsx)(_c.Menu.CLOUD_TARGET_LABEL, {}),
            options: e,
            selectedOption: t,
            onSelectOption: s,
            getOptionLabel: e=>(0,
            z.jsx)(_c.Menu.CLOUD_TARGET, {
                hash: e
            }),
            className: n
        })
          , CK = ({categories: e, selectedCategory: t, className: n, onSelectCategory: s})=>(0,
        z.jsx)(NK, {
            label: "",
            options: e,
            selectedOption: t,
            onSelectOption: s,
            getOptionLabel: e=>(0,
            z.jsx)(_c.GameListScreen.MAP_FILTER, {
                hash: KA[e]
            }),
            className: n
        });
        function NK({label: e, options: t, selectedOption: n, className: s, onSelectOption: i, getOptionLabel: a}) {
            return (0,
            z.jsxs)("div", {
                className: Zu()(IK.saveListHeader, s),
                children: [(0,
                z.jsx)("div", {
                    className: IK.sortLabel,
                    children: e
                }), (0,
                z.jsx)(WH, {
                    children: (0,
                    z.jsx)("div", {
                        className: IK.sortButtons,
                        children: t.map(((e,t)=>(0,
                        z.jsx)(U_, {
                            focusKey: Sg,
                            selected: n === e,
                            className: IK.sortButton,
                            onSelect: ()=>i(e),
                            children: a(e)
                        }, t)))
                    })
                })]
            })
        }
        X.add("game-ui/menu/components/shared/save-list-header/save-list-header.tsx", {
            get orderings() {
                return SK
            },
            set orderings(e) {
                SK = e
            },
            get OrderingSaveListHeader() {
                return yK
            },
            set OrderingSaveListHeader(e) {
                yK = e
            },
            get CloudTargetSaveListHeader() {
                return jK
            },
            set CloudTargetSaveListHeader(e) {
                jK = e
            },
            get NewGameMapsSaveListHeader() {
                return CK
            },
            set NewGameMapsSaveListHeader(e) {
                CK = e
            }
        });
        let wK = {
            wrapper: "wrapper_P37",
            container: "container_W62",
            input: "input_AhI",
            label: "label_quF"
        };
        X.add("game-ui/menu/themes/save-list-input-field.module.scss", {
            get classes() {
                return wK
            },
            set classes(e) {
                Object.assign(wK, e)
            }
        });
        const OK = wK;
        var PK = ({title: e, message: t, onConfirm: n})=>{
            const s = (0,
            Y.useContext)(vE)
              , i = (0,
            Y.useCallback)((()=>{
                s.onClose(),
                n && n()
            }
            ), [s, n])
              , a = Dm();
            return (0,
            z.jsx)(gE, {
                title: e,
                buttons: (0,
                z.jsx)("div", {
                    className: hE.buttons,
                    children: (0,
                    z.jsx)(U_, {
                        theme: ZE,
                        className: hE.buttonOk,
                        onSelect: i,
                        selected: !a,
                        shortcut: a ? void 0 : "Confirm",
                        children: (0,
                        z.jsx)(_c.Common.OK, {})
                    })
                }),
                onClose: s.onClose,
                children: (0,
                z.jsx)(Cb, {
                    theme: hE,
                    children: t
                })
            })
        }
        ;
        X.add("game-ui/common/panel/dialog/message-dialog.tsx", {
            get MessageDialog() {
                return PK
            },
            set MessageDialog(e) {
                PK = e
            }
        });
        let LK = {
            enter: "enter_vUK enter_kO6",
            "enter-active": "enter-active_K1n enter-active_lrI",
            enterActive: "enter-active_K1n enter-active_lrI",
            exit: "exit_NNr exit_Von",
            "exit-active": "exit-active_kYK exit-active_jtN",
            exitActive: "exit-active_kYK exit-active_jtN",
            base: "base_V9Q"
        };
        X.add("game-ui/menu/transitions/shrink-fade-children.module.scss", {
            get classes() {
                return LK
            },
            set classes(e) {
                Object.assign(LK, e)
            }
        });
        const AK = LK
          , MK = "overlay";
        var RK;
        !function(e) {
            e[e.None = 0] = "None",
            e[e.Splash1 = 1] = "Splash1",
            e[e.Splash2 = 2] = "Splash2",
            e[e.Splash3 = 3] = "Splash3",
            e[e.Splash4 = 4] = "Splash4",
            e[e.PiracyDisclaimer = 5] = "PiracyDisclaimer",
            e[e.PhotosensitivityDisclaimer = 6] = "PhotosensitivityDisclaimer",
            e[e.Wait = 7] = "Wait",
            e[e.UserLoggedOut = 8] = "UserLoggedOut",
            e[e.ControllerDisconnected = 9] = "ControllerDisconnected",
            e[e.ControllerPairingChanged = 10] = "ControllerPairingChanged",
            e[e.Engagement = 11] = "Engagement",
            e[e.Loading = 12] = "Loading",
            e[e.CorruptSaveData = 13] = "CorruptSaveData",
            e[e.Validation = 14] = "Validation"
        }(RK || (RK = {}));
        var kK = $r(MK, "activeScreen")
          , DK = $r(MK, "progress")
          , FK = $r(MK, "hintMessages")
          , UK = $r(MK, "corruptDataMessages");
        X.add("game-ui/overlay/overlay-bindings.tsx", {
            get OverlayScreen() {
                return RK
            },
            set OverlayScreen(e) {
                RK = e
            },
            get activeScreen() {
                return activeScreen
            },
            set activeScreen(e) {
                activeScreen = e
            },
            get progress() {
                return progress
            },
            set progress(e) {
                progress = e
            },
            get hintMessages() {
                return hintMessages
            },
            set hintMessages(e) {
                hintMessages = e
            },
            get corruptDataMessages() {
                return corruptDataMessages
            },
            set corruptDataMessages(e) {
                corruptDataMessages = e
            }
        });
        let BK = {
            "sub-screen": "sub-screen__iU",
            subScreen: "sub-screen__iU",
            header: "header_DFK child-opacity-transition_nkS",
            "header-title": "header-title_Lr3",
            headerTitle: "header-title_Lr3",
            title: "title_TgD",
            "header-button": "header-button_Hid",
            headerButton: "header-button_Hid",
            "back-button": "back-button_sEa header-button_Hid",
            backButton: "back-button_sEa header-button_Hid",
            content: "content_Ds0",
            "header-aside": "header-aside_Pkh",
            headerAside: "header-aside_Pkh"
        };
        X.add("game-ui/menu/components/shared/sub-screen/sub-screen.module.scss", {
            get classes() {
                return BK
            },
            set classes(e) {
                Object.assign(BK, e)
            }
        });
        const GK = BK;
        var VK = new Ig("SUB_SCREEN_CONTENT_KEY");
        const HK = {
            setFocusedKey: ()=>{}
        };
        var KK = Y.createContext(HK)
          , WK = Y.forwardRef((function({focusKey: e, title: t, header: n, className: s, children: i, onClose: a, onFocusChanged: o=(()=>{}
        )}, r) {
            mp(kK.value !== RK.Loading ? dp : void 0);
            const [l,c] = (0,
            Y.useState)(VK)
              , u = (0,
            Y.useContext)(KK);
            (0,
            Y.useEffect)((()=>{
                u.setFocusedKey = c
            }
            ), [u]);
            const d = Dm();
            return (0,
            z.jsx)(ap, {
                focusKey: e,
                children: (0,
                z.jsx)(yp, {
                    children: (0,
                    z.jsx)(Fg, {
                        onAction: a,
                        children: (0,
                        z.jsx)(mh, {
                            styles: AK,
                            children: (0,
                            z.jsx)(Sp, {
                                ref: r,
                                className: Zu()(GK.subScreen, s),
                                children: (0,
                                z.jsxs)(Zg, {
                                    focused: l,
                                    onChange: e=>{
                                        c(e),
                                        o(e)
                                    }
                                    ,
                                    children: [(0,
                                    z.jsxs)("div", {
                                        className: GK.header,
                                        children: [(0,
                                        z.jsxs)("div", {
                                            className: GK.headerTitle,
                                            children: [!d && (0,
                                            z.jsx)(Eg, {
                                                tooltip: (0,
                                                z.jsx)(_c.Menu.BACK, {}),
                                                children: (0,
                                                z.jsx)(tb, {
                                                    tinted: !0,
                                                    focusKey: Sg,
                                                    src: "Media/Glyphs/TriangleArrowLeft.svg",
                                                    className: GK.backButton,
                                                    onSelect: a
                                                })
                                            }), (0,
                                            z.jsx)("div", {
                                                className: GK.title,
                                                children: t
                                            })]
                                        }), !!n && (0,
                                        z.jsx)("div", {
                                            className: GK.headerAside,
                                            children: n
                                        })]
                                    }), (0,
                                    z.jsx)(Sp, {
                                        focusKey: VK,
                                        className: GK.content,
                                        children: i
                                    })]
                                })
                            })
                        })
                    })
                })
            })
        }
        ));
        X.add("game-ui/menu/components/shared/sub-screen/sub-screen.tsx", {
            get SUB_SCREEN_CONTENT_KEY() {
                return VK
            },
            set SUB_SCREEN_CONTENT_KEY(e) {
                VK = e
            },
            get SubScreenContext() {
                return KK
            },
            set SubScreenContext(e) {
                KK = e
            },
            get SubScreen() {
                return WK
            },
            set SubScreen(e) {
                WK = e
            }
        });
        let zK = {
            "detail-section": "detail-section_aIw child-opacity-transition_nkS",
            detailSection: "detail-section_aIw child-opacity-transition_nkS",
            title: "title_eSB",
            image: "image_xzf",
            scrollable: "scrollable_zgX",
            "scrollable-content": "scrollable-content_lJB",
            scrollableContent: "scrollable-content_lJB",
            description: "description_dxc",
            field: "field_rvA",
            label: "label_Sfx",
            value: "value_TJa",
            ellipsis: "ellipsis_MBL",
            multiline: "multiline_Db9",
            icons: "icons_rAd",
            "dlc-icon": "dlc-icon_kKz",
            dlcIcon: "dlc-icon_kKz",
            "theme-icon": "theme-icon_mTh",
            themeIcon: "theme-icon_mTh",
            "humidity-icon": "humidity-icon_jtJ",
            humidityIcon: "humidity-icon_jtJ",
            "scrollable-footer": "scrollable-footer_VMh",
            scrollableFooter: "scrollable-footer_VMh",
            footer: "footer_uQp",
            "footer-button": "footer-button_d4A",
            footerButton: "footer-button_d4A",
            "achievement-warning-banner": "achievement-warning-banner_lKw",
            achievementWarningBanner: "achievement-warning-banner_lKw",
            "achievement-warning-banner-container": "achievement-warning-banner-container_e0d",
            achievementWarningBannerContainer: "achievement-warning-banner-container_e0d",
            "current-preview": "current-preview_WlX",
            currentPreview: "current-preview_WlX",
            "preview-wrapper": "preview-wrapper_gbB",
            previewWrapper: "preview-wrapper_gbB",
            overlay: "overlay_oTY"
        };
        X.add("game-ui/menu/components/shared/detail-section/detail-section.module.scss", {
            get classes() {
                return zK
            },
            set classes(e) {
                Object.assign(zK, e)
            }
        });
        const YK = zK;
        var $K = ({title: e, preview: t, overlay: n, currentPreview: s, content: i, footer: a, className: o, autoScroll: r=!0})=>{
            const l = Y.Children.count(e) > 0
              , c = Y.Children.count(i) > 0
              , u = Y.Children.count(a) > 0;
            return (0,
            z.jsxs)("div", {
                className: Zu()(YK.detailSection, o),
                children: [l && (0,
                z.jsx)("div", {
                    className: YK.title,
                    children: e
                }), t && (0,
                z.jsxs)("div", {
                    className: YK.previewWrapper,
                    children: [null != t && (0,
                    z.jsx)(Y_, {
                        src: t,
                        className: YK.image
                    }), s && t !== s && (0,
                    z.jsx)(Y_, {
                        src: s,
                        className: YK.currentPreview
                    }), n && (0,
                    z.jsx)(Y_, {
                        src: n,
                        className: YK.overlay
                    })]
                }), (0,
                z.jsx)(mb, {
                    autoScroll: r,
                    className: YK.scrollable,
                    children: c && (0,
                    z.jsxs)("div", {
                        className: YK.scrollableContent,
                        children: [i, !u && (0,
                        z.jsx)("div", {
                            className: YK.scrollableFooter
                        })]
                    })
                }), u && (0,
                z.jsx)("div", {
                    className: YK.footer,
                    children: a
                })]
            })
        }
          , qK = ({label: e, ellipsis: t, multiline: n, children: s})=>(0,
        z.jsxs)("div", {
            className: YK.field,
            children: [(0,
            z.jsx)("div", {
                className: YK.label,
                children: e
            }), (0,
            z.jsx)("div", {
                className: Zu()(YK.value, {
                    [YK.ellipsis]: t,
                    [YK.multiline]: n
                }),
                children: s
            })]
        })
          , XK = ({disabled: e, children: t, className: n, selected: s, shortcut: i, focusKey: a=Sg, onSelect: o})=>(0,
        z.jsx)(U_, {
            focusKey: a,
            theme: JI,
            className: Zu()(YK.footerButton, n),
            disabled: e,
            onSelect: o,
            selected: s,
            shortcut: i,
            children: t
        });
        X.add("game-ui/menu/components/shared/detail-section/detail-section.tsx", {
            get DetailSection() {
                return $K
            },
            set DetailSection(e) {
                $K = e
            },
            get Field() {
                return qK
            },
            set Field(e) {
                qK = e
            },
            get FooterButton() {
                return XK
            },
            set FooterButton(e) {
                XK = e
            }
        });
        var QK = ({className: e, save: t, onSaveGameSelect: n, saveName: s})=>{
            const i = Dm()
              , a = sl(Mv)
              , o = sl(mM)
              , r = sl(sM)
              , l = sl(BL)
              , c = sl(kL)
              , u = sl(FL)
              , d = sl(AN)
              , m = sl(iM)
              , h = eP(sl(GO), sl(VO))
              , g = sl(GL)
              , p = sl(_M)
              , f = {
                preview: t?.preview ?? r,
                population: t?.population ?? c,
                money: t?.money ?? u,
                cityName: t?.cityName ?? l,
                totalXP: t?.xp ?? d,
                mapName: t?.mapName ?? m,
                gameMode: t ? t.gameMode || WA.NormalMode : o,
                simulationDate: t?.simulationDate ?? h,
                unlimitedMoney: t ? void 0 : g
            };
            return (0,
            z.jsx)($K, {
                className: e,
                title: oV(f.cityName, 28),
                preview: f.preview,
                currentPreview: r,
                content: (0,
                z.jsxs)(z.Fragment, {
                    children: [(0,
                    z.jsx)(qK, {
                        label: (0,
                        z.jsx)(_c.Menu.CITY_NAME_LABEL, {}),
                        ellipsis: !0,
                        children: f.cityName
                    }), (0,
                    z.jsx)(qK, {
                        label: (0,
                        z.jsx)(_c.Menu.GAME_MODE, {}),
                        children: (0,
                        z.jsx)(_c.Menu.GAME_MODE_NAME, {
                            hash: f.gameMode
                        })
                    }), (0,
                    z.jsx)(qK, {
                        label: (0,
                        z.jsx)(_c.GameListScreen.POPULATION_LABEL, {}),
                        children: (0,
                        z.jsx)(Oc, {
                            value: f.population,
                            unit: vc.Integer
                        })
                    }), (0,
                    z.jsx)(qK, {
                        label: (0,
                        z.jsx)(_c.Menu.SIMULATION_DATE_LABEL, {}),
                        children: (0,
                        z.jsx)(Lu, {
                            value: f.simulationDate
                        })
                    }), (0,
                    z.jsx)(qK, {
                        label: (0,
                        z.jsx)(_c.GameListScreen.MONEY_LABEL, {}),
                        children: f.unlimitedMoney ? (0,
                        z.jsx)(_c.Menu.UNLIMITED_MONEY_LABEL, {}) : (0,
                        z.jsx)(Oc, {
                            value: f.money,
                            unit: vc.Money
                        })
                    }), (0,
                    z.jsx)(qK, {
                        label: (0,
                        z.jsx)(_c.GameListScreen.XP_LABEL, {}),
                        children: (0,
                        z.jsx)(Oc, {
                            value: f.totalXP,
                            unit: vc.Integer
                        })
                    }), null != f.mapName && (0,
                    z.jsx)(qK, {
                        label: (0,
                        z.jsx)(_c.GameListScreen.MAP_LABEL, {}),
                        children: (0,
                        z.jsx)(_c.Maps.MAP_TITLE, {
                            hash: f.mapName
                        })
                    })]
                }),
                footer: i ? void 0 : (0,
                z.jsx)(Eg, {
                    tooltip: p.reasonHash && (0,
                    z.jsx)(_c.Common.SAVEABILITY_REASON, {
                        hash: p.reasonHash
                    }),
                    children: (0,
                    z.jsx)(XK, {
                        onSelect: n,
                        disabled: !s?.trim() || !p.canSave || !a,
                        selected: !i,
                        shortcut: i ? void 0 : "Confirm",
                        children: t ? (0,
                        z.jsx)(_c.GameListScreen.OVERWRITE_SAVE_GAME_BUTTON, {}) : (0,
                        z.jsx)(_c.GameListScreen.SAVE_GAME_BUTTON, {})
                    })
                })
            })
        }
        ;
        X.add("game-ui/menu/components/save-game-screen/game-detail/game-detail.tsx", {
            get GameDetail() {
                return QK
            },
            set GameDetail(e) {
                QK = e
            }
        });
        let ZK = {
            container: "container_vNp",
            input: "input_Lfn",
            label: "label_F5D"
        };
        X.add("game-ui/menu/themes/save-slot-list-item-input-field.module.scss", {
            get classes() {
                return ZK
            },
            set classes(e) {
                Object.assign(ZK, e)
            }
        });
        const JK = ZK;
        let eW = {
            "save-slot-item": "save-slot-item_oai",
            saveSlotItem: "save-slot-item_oai",
            locked: "locked_k9Y",
            "theme-icon": "theme-icon_tB3",
            themeIcon: "theme-icon_tB3",
            title: "title_Y9K",
            "population-value": "population-value_XhI",
            populationValue: "population-value_XhI",
            "population-icon": "population-icon_aqa",
            populationIcon: "population-icon_aqa",
            date: "date_Oac",
            "state-icon": "state-icon_zkF",
            stateIcon: "state-icon_zkF",
            "title-inner": "title-inner_nf4",
            titleInner: "title-inner_nf4",
            space: "space_evY",
            tooltip: "tooltip_N74",
            hint: "hint_iLn"
        };
        X.add("game-ui/menu/components/shared/save-slot-item/save-slot-item.module.scss", {
            get classes() {
                return eW
            },
            set classes(e) {
                Object.assign(eW, e)
            }
        });
        const tW = eW;
        var nW = ({focusKey: e, locked: t=!1, selected: n=!1, saveName: s, saveGame: i, slotId: a, inputAction: o, onSaveNameChange: r, onSelectSave: l, onSelect: c})=>{
            const u = (0,
            Y.useRef)(null)
              , [d,m] = (0,
            Y.useState)(!1)
              , h = _W()
              , g = sl(hM).find((e=>e.id === i?.theme))
              , p = i ? RW(i.cloudTarget, i.isReadonly) : null;
            (0,
            Y.useEffect)((()=>{
                if (n) {
                    if (u.current) {
                        u.current.focus();
                        const e = u.current.value.length;
                        u.current.setSelectionRange(0, e)
                    }
                    i ? (r && r(i.displayName),
                    l && l(i)) : s && r && r(s)
                }
            }
            ), [r, c, l, i, s, n]);
            const f = (0,
            Y.useCallback)((e=>r && r(e.target.value)), [r])
              , x = (0,
            Y.useCallback)((e=>{
                e && (i && (l && l(i),
                r && r(i.displayName)),
                c && c(a)),
                m(e)
            }
            ), [r, c, l, i, a])
              , v = (0,
            Y.useCallback)((()=>{
                i && (t || l && l(i),
                r && r(i.displayName)),
                t || c && c(a)
            }
            ), [t, r, c, l, i, a])
              , _ = (0,
            Y.useCallback)((()=>{
                s || r && r(h)
            }
            ), [h, r, s]);
            return (0,
            z.jsxs)(Sp, {
                onClick: v,
                focusKey: t ? Sg : e || Sg,
                className: Zu()(tW.saveSlotItem, t && tW.locked, n && "selected"),
                onFocusChange: x,
                children: [(0,
                z.jsx)(UT, {
                    action: o,
                    active: d,
                    className: tW.hint
                }), i && (0,
                z.jsx)(LH, {
                    src: g?.icon ?? "",
                    className: tW.themeIcon
                }), null != p && (0,
                z.jsx)(Z_, {
                    src: p,
                    className: tW.stateIcon
                }), (0,
                z.jsx)("div", {
                    className: tW.title,
                    children: !i && n ? (0,
                    z.jsx)(HH, {
                        ref: u,
                        maxLength: 85,
                        placeholder: (0,
                        z.jsx)(_c.Menu.NAME_FIELD_PLACEHOLDER, {}),
                        value: s || h,
                        onChange: f,
                        onBlur: _,
                        vkTitle: (0,
                        z.jsx)(_c.VirtualKeyboard.TITLE, {
                            hash: "SaveName"
                        }),
                        theme: JK
                    }) : (0,
                    z.jsx)("div", {
                        className: tW.titleInner,
                        children: i ? i.displayName : (0,
                        z.jsx)(_c.Menu.EMPTY_SLOT, {})
                    })
                }), i && (0,
                z.jsxs)(z.Fragment, {
                    children: [(0,
                    z.jsx)("div", {
                        className: tW.populationValue,
                        children: (0,
                        z.jsx)(Oc, {
                            value: i.population,
                            unit: vc.Integer
                        })
                    }), (0,
                    z.jsx)(Z_, {
                        src: "Media/Game/Icons/Citizen.svg",
                        className: tW.populationIcon
                    }), (0,
                    z.jsx)(DH, {
                        className: tW.date,
                        children: (0,
                        z.jsx)(Ru, {
                            value: i.lastModified
                        })
                    })]
                })]
            })
        }
        ;
        X.add("game-ui/menu/components/shared/save-slot-item/save-slot-item.tsx", {
            get SaveSlotItem() {
                return nW
            },
            set SaveSlotItem(e) {
                nW = e
            }
        });
        let sW = {
            "save-slot-list": "save-slot-list_MCn child-opacity-transition_nkS",
            saveSlotList: "save-slot-list_MCn child-opacity-transition_nkS",
            scrollable: "scrollable_W3E",
            "name-field": "name-field__Sm",
            nameField: "name-field__Sm",
            "name-input": "name-input_khn",
            nameInput: "name-input_khn"
        };
        X.add("game-ui/menu/components/save-game-screen/save-slot-list/save-slot-list.module.scss", {
            get classes() {
                return sW
            },
            set classes(e) {
                Object.assign(sW, e)
            }
        });
        const iW = sW;
        var aW = Y.forwardRef((function({sortedSaves: e, saveName: t, cloudTarget: n, slots: s, selectedSlotId: i, className: a, onSaveNameChange: o, onSelectCloudTarget: r, onSelectSlot: l}, c) {
            const u = sl(kM)
              , d = (0,
            Y.useMemo)((()=>u.length > 1 ? {
                "Switch Savegame Location": e=>{
                    cp(lp.dragSlider),
                    e < 0 ? (cp(lp.selectPreviousItem),
                    r(Ew(u, u.indexOf(n), !0) ?? n)) : e > 0 && (cp(lp.selectNextItem),
                    r(bw(u, u.indexOf(n), !0) ?? n))
                }
            } : {}), [r, u, n]);
            return (0,
            z.jsx)(Mg, {
                actions: d,
                children: (0,
                z.jsxs)("div", {
                    ref: c,
                    className: Zu()(iW.saveSlotList, a),
                    children: [u.length > 1 && (0,
                    z.jsx)(jK, {
                        targets: u,
                        selectedTarget: n,
                        onSelectTarget: r
                    }), (0,
                    z.jsx)(np, {
                        initialFocused: i > e.length - 1 ? `Save->Empty:${i}` : `Save->${e[i].id}`,
                        children: (0,
                        z.jsx)(mb, {
                            className: iW.scrollable,
                            children: Array.from({
                                length: s
                            }, ((n,s)=>s > e.length - 1 ? (0,
                            z.jsx)(nW, {
                                focusKey: `Save->Empty:${s}`,
                                slotId: s,
                                selected: i === s,
                                inputAction: "Save Game",
                                onSaveNameChange: o,
                                onSelect: l
                            }, s) : (0,
                            z.jsx)(nW, {
                                focusKey: `Save->${e[s].id}`,
                                slotId: s,
                                selected: i === s,
                                saveGame: e[s],
                                saveName: t,
                                inputAction: "Save Game",
                                onSaveNameChange: o,
                                onSelect: l
                            }, s)))
                        })
                    })]
                })
            })
        }
        ));
        X.add("game-ui/menu/components/save-game-screen/save-slot-list/save-slot-list.tsx", {
            get SaveSlotList() {
                return aW
            },
            set SaveSlotList(e) {
                aW = e
            }
        });
        let oW = {
            container: "container_K3P",
            input: "input_f_x",
            label: "label_OFp"
        };
        X.add("game-ui/menu/themes/save-slot-input-field.module.scss", {
            get classes() {
                return oW
            },
            set classes(e) {
                Object.assign(oW, e)
            }
        });
        const rW = oW;
        let lW = {
            "save-slot": "save-slot_vY4 child-opacity-transition_nkS",
            saveSlot: "save-slot_vY4 child-opacity-transition_nkS",
            locked: "locked_GCS",
            "theme-icon": "theme-icon_lGm",
            themeIcon: "theme-icon_lGm",
            "humidity-icon": "humidity-icon_zZV",
            humidityIcon: "humidity-icon_zZV",
            title: "title_L43",
            field: "field_Yxz",
            "population-icon": "population-icon_mlk",
            populationIcon: "population-icon_mlk",
            date: "date_tTu",
            "empty-label": "empty-label_OR4",
            emptyLabel: "empty-label_OR4",
            input: "input_q53",
            "title-content": "title-content_SFM",
            titleContent: "title-content_SFM",
            image: "image_u6c",
            scrollable: "scrollable_khn",
            "scrollable-content": "scrollable-content_hzP",
            scrollableContent: "scrollable-content_hzP",
            description: "description_DTi",
            label: "label_out",
            value: "value_wmH",
            "scrollable-footer": "scrollable-footer_nav",
            scrollableFooter: "scrollable-footer_nav"
        };
        X.add("game-ui/menu/components/save-game-screen/save-slots/save-slot/save-slot.module.scss", {
            get classes() {
                return lW
            },
            set classes(e) {
                Object.assign(lW, e)
            }
        });
        const cW = lW;
        var uW = ({focusKey: e, slotId: t, saveName: n, saveGame: s, selected: i=!1, className: a, onSaveNameChange: o, onSelect: r})=>{
            const l = _W()
              , c = (0,
            Y.useRef)(null);
            (0,
            Y.useEffect)((()=>{
                if (i) {
                    if (c.current) {
                        c.current.focus();
                        const e = c.current.value.length;
                        c.current.setSelectionRange(0, e)
                    }
                    s ? o && o(s.displayName) : n && o && o(n)
                }
            }
            ), [o, r, s, n, i]);
            const u = sl(sM)
              , d = sl(BL)
              , m = sl(kL)
              , h = sl(FL)
              , g = sl(AN)
              , p = sl(iM)
              , f = eP(sl(GO), sl(VO))
              , x = sl(GL)
              , v = (0,
            Y.useCallback)((e=>o && o(e.target.value)), [o])
              , _ = (0,
            Y.useCallback)((e=>{
                e && (r(t),
                s && o && o(s.displayName))
            }
            ), [o, r, s, t])
              , b = (0,
            Y.useCallback)((()=>{
                s && o && o(s.displayName),
                c.current && c.current.focus(),
                r(t)
            }
            ), [o, r, s, t])
              , T = (0,
            Y.useCallback)((()=>{
                n || o && o(l)
            }
            ), [o, n, l]);
            return (0,
            z.jsxs)(Sp, {
                focusKey: e,
                onFocusChange: _,
                onClick: b,
                className: Zu()(cW.saveSlot, i && "selected", a),
                children: [(s || i) && (0,
                z.jsx)("div", {
                    className: cW.title,
                    children: (0,
                    z.jsx)("div", {
                        className: cW.titleContent,
                        children: !s && i ? (0,
                        z.jsx)(HH, {
                            ref: c,
                            maxLength: 85,
                            placeholder: (0,
                            z.jsx)(_c.Menu.NAME_FIELD_PLACEHOLDER, {}),
                            value: n,
                            onChange: v,
                            onBlur: T,
                            vkTitle: (0,
                            z.jsx)(_c.VirtualKeyboard.TITLE, {
                                hash: "SaveName"
                            }),
                            theme: rW
                        }) : s?.displayName
                    })
                }), s ? i ? null != u && (0,
                z.jsx)(Y_, {
                    src: u,
                    className: cW.image
                }) : (0,
                z.jsx)(Y_, {
                    src: s?.preview,
                    className: cW.image
                }) : null != u && i && (0,
                z.jsx)(Y_, {
                    src: u,
                    className: cW.image
                }), (0,
                z.jsx)(mb, {
                    autoScroll: !0,
                    className: cW.scrollable,
                    children: (0,
                    z.jsxs)("div", {
                        className: cW.scrollableContent,
                        children: [s || i ? (0,
                        z.jsxs)(z.Fragment, {
                            children: [(0,
                            z.jsx)(dW, {
                                label: (0,
                                z.jsx)(_c.Menu.CITY_NAME_LABEL, {}),
                                children: s?.cityName ?? d
                            }), (0,
                            z.jsx)(dW, {
                                label: (0,
                                z.jsx)(_c.GameListScreen.POPULATION_LABEL, {}),
                                children: (0,
                                z.jsx)(Oc, {
                                    value: s?.population ?? m,
                                    unit: vc.Integer
                                })
                            }), (0,
                            z.jsx)(dW, {
                                label: (0,
                                z.jsx)(_c.Menu.SIMULATION_DATE_LABEL, {}),
                                children: (0,
                                z.jsx)(Lu, {
                                    value: s?.simulationDate ?? f
                                })
                            }), (0,
                            z.jsx)(dW, {
                                label: (0,
                                z.jsx)(_c.GameListScreen.MONEY_LABEL, {}),
                                children: !s && x ? (0,
                                z.jsx)(_c.Menu.UNLIMITED_MONEY_LABEL, {}) : (0,
                                z.jsx)(Oc, {
                                    value: s?.money ?? h,
                                    unit: vc.Money
                                })
                            }), (0,
                            z.jsx)(dW, {
                                label: (0,
                                z.jsx)(_c.GameListScreen.XP_LABEL, {}),
                                children: (0,
                                z.jsx)(Oc, {
                                    value: s?.xp ?? g,
                                    unit: vc.Integer
                                })
                            }), null != s?.mapName ? (0,
                            z.jsx)(dW, {
                                label: (0,
                                z.jsx)(_c.GameListScreen.MAP_LABEL, {}),
                                children: (0,
                                z.jsx)(_c.Maps.MAP_TITLE, {
                                    hash: s.mapName,
                                    fallback: s.mapName
                                })
                            }) : null != p && (0,
                            z.jsx)(dW, {
                                label: (0,
                                z.jsx)(_c.GameListScreen.MAP_LABEL, {}),
                                children: (0,
                                z.jsx)(_c.Maps.MAP_TITLE, {
                                    hash: p,
                                    fallback: p
                                })
                            })]
                        }) : (0,
                        z.jsx)("div", {
                            className: cW.emptyLabel,
                            children: (0,
                            z.jsx)(_c.Menu.EMPTY_SLOT, {})
                        }), (0,
                        z.jsx)("div", {
                            className: cW.scrollableFooter
                        })]
                    })
                })]
            })
        }
        ;
        const dW = ({label: e, children: t})=>(0,
        z.jsxs)("div", {
            className: cW.field,
            children: [(0,
            z.jsx)("div", {
                className: cW.label,
                children: e
            }), (0,
            z.jsx)("div", {
                className: cW.value,
                children: t
            })]
        });
        X.add("game-ui/menu/components/save-game-screen/save-slots/save-slot/save-slot.tsx", {
            get SaveSlot() {
                return uW
            },
            set SaveSlot(e) {
                uW = e
            }
        });
        let mW = {
            "save-game-slots": "save-game-slots_y4R",
            saveGameSlots: "save-game-slots_y4R",
            header: "header_iE9 child-opacity-transition_nkS",
            slots: "slots_s__",
            slot: "slot_DnC",
            "name-field": "name-field_E4B child-opacity-transition_nkS",
            nameField: "name-field_E4B child-opacity-transition_nkS",
            footer: "footer_TH2 child-opacity-transition_nkS",
            "footer-button": "footer-button_qPc",
            footerButton: "footer-button_qPc"
        };
        X.add("game-ui/menu/components/save-game-screen/save-slots/save-slots.module.scss", {
            get classes() {
                return mW
            },
            set classes(e) {
                Object.assign(mW, e)
            }
        });
        const hW = mW;
        var gW = ({sortedSaves: e, saveName: t, cloudTarget: n, slots: s, selectedSlotId: i, className: a, onSaveNameChange: o, onSelectCloudTarget: r, onSelectSlot: l})=>{
            const c = sl(kM)
              , u = (0,
            Y.useMemo)((()=>c.length > 1 ? {
                "Switch Savegame Location": e=>{
                    cp(lp.dragSlider),
                    e < 0 ? (cp(lp.selectPreviousItem),
                    r(Ew(c, c.indexOf(n), !0) ?? n)) : e > 0 && (cp(lp.selectNextItem),
                    r(bw(c, c.indexOf(n), !0) ?? n))
                }
            } : {}), [r, c, n])
              , d = (0,
            Y.useMemo)((()=>!e || 0 === e.length || i > e.length - 1 ? `Save->Empty:${i}` : `Save->${e[i]?.id}`), [i, e]);
            return (0,
            z.jsx)(Mg, {
                actions: u,
                children: (0,
                z.jsxs)("div", {
                    className: Zu()(hW.saveGameSlots, a),
                    children: [c.length > 1 && (0,
                    z.jsx)(jK, {
                        targets: c,
                        selectedTarget: n,
                        onSelectTarget: r,
                        className: hW.header
                    }), (0,
                    z.jsx)("div", {
                        className: hW.slots,
                        children: (0,
                        z.jsx)(np, {
                            initialFocused: d,
                            children: Array.from({
                                length: s
                            }, ((n,s)=>!e || 0 === e.length || s > e.length - 1 ? (0,
                            z.jsx)(uW, {
                                slotId: s,
                                saveName: t,
                                focusKey: `Save->Empty:${s}`,
                                className: hW.slot,
                                selected: i === s,
                                onSelect: l,
                                onSaveNameChange: o
                            }, s) : (0,
                            z.jsx)(uW, {
                                slotId: s,
                                focusKey: `Save->${e[s].id}`,
                                saveGame: e[s],
                                selected: i === s,
                                className: hW.slot,
                                onSelect: l,
                                onSaveNameChange: o
                            }, s)))
                        })
                    })]
                })
            })
        }
        ;
        X.add("game-ui/menu/components/save-game-screen/save-slots/save-slots.tsx", {
            get SaveSlots() {
                return gW
            },
            set SaveSlots(e) {
                gW = e
            }
        });
        let pW = {
            content: "content_ZK4",
            list: "list_Lyo",
            detail: "detail_LOs"
        };
        X.add("game-ui/menu/components/save-game-screen/save-game-screen.module.scss", {
            get classes() {
                return pW
            },
            set classes(e) {
                Object.assign(pW, e)
            }
        });
        const fW = pW;
        var xW = Y.forwardRef((function({focusKey: e, className: t, onClose: n}, s) {
            (0,
            Y.useEffect)((()=>(PM(!0),
            ()=>PM(!1))), []);
            const i = sl(xM)
              , a = sl(cM)
              , o = sl(DM)
              , r = (0,
            Y.useMemo)((()=>TK(i.filter((e=>!e.isReadonly && e.cloudTarget === o && !e.autoSave)), bK.LastModified)), [o, i])
              , l = _W(r)
              , [c,u] = (0,
            Y.useState)(l)
              , d = c.trim()
              , [m,h] = (0,
            Y.useState)(function(e, t) {
                const n = e.findIndex((e=>e.displayName === t));
                return n > 0 ? n : 0
            }(r, d))
              , g = (0,
            Y.useContext)(xE)
              , p = r.find((e=>e.displayName === d));
            (0,
            Y.useEffect)((()=>{
                u((e=>e?.trim() ? e : l))
            }
            ), [l]);
            const f = (0,
            Y.useCallback)((()=>{
                Vr(d) ? g.showDialog((0,
                z.jsx)(PK, {
                    title: (0,
                    z.jsx)(_c.Common.ERROR, {}),
                    message: (0,
                    z.jsx)(_c.GameListScreen.INVALID_NAME_MESSAGE, {})
                })) : SM(d)
            }
            ), [g, d])
              , x = sl(_M)
              , v = (0,
            Y.useMemo)((()=>x.canSave ? {
                "Save Game": p ? void 0 : ()=>{
                    cp(lp.selectItem),
                    f()
                }
                ,
                "Overwrite Save": p ? ()=>{
                    cp(lp.selectItem),
                    f()
                }
                : void 0
            } : {}), [f, x.canSave, p]);
            return (0,
            z.jsx)(WK, {
                ref: s,
                focusKey: e,
                title: (0,
                z.jsx)(_c.Menu.SAVE_GAME, {}),
                className: t,
                onClose: n,
                children: (0,
                z.jsx)(Mg, {
                    actions: v,
                    children: (0,
                    z.jsx)("div", {
                        className: fW.content,
                        children: a > 3 ? (0,
                        z.jsxs)(z.Fragment, {
                            children: [(0,
                            z.jsx)(aW, {
                                slots: a,
                                selectedSlotId: m,
                                sortedSaves: r,
                                saveName: c,
                                cloudTarget: o,
                                onSelectCloudTarget: UM,
                                onSaveNameChange: u,
                                onSelectSlot: h,
                                className: fW.list
                            }), (0,
                            z.jsx)(QK, {
                                className: fW.detail,
                                onSaveGameSelect: f
                            })]
                        }) : a > 0 ? (0,
                        z.jsx)(gW, {
                            slots: a,
                            selectedSlotId: m,
                            sortedSaves: r,
                            saveName: c,
                            cloudTarget: o,
                            onSaveNameChange: u,
                            onSelectCloudTarget: UM,
                            onSelectSlot: h
                        }) : (0,
                        z.jsxs)(np, {
                            children: [(0,
                            z.jsx)(yW, {
                                saveName: c,
                                cloudTarget: o,
                                onSelectCloudTarget: UM,
                                onSaveNameChange: u,
                                onSaveGameSelect: f,
                                className: fW.list
                            }), (0,
                            z.jsx)(QK, {
                                className: fW.detail,
                                onSaveGameSelect: f,
                                save: p,
                                saveName: c
                            })]
                        })
                    })
                })
            })
        }
        ));
        function vW() {
            return aM.value ?? BL.value
        }
        function _W(e) {
            const t = sl(BL).trim()
              , n = sl(aM)
              , s = sc();
            let i = t
              , a = 2;
            if (e)
                for (; e?.find((e=>e.displayName === i)); )
                    i = `${t} ${a}`,
                    a++;
            return i || n || _c.GameListScreen.NEW_SAVE.renderString(s, {})
        }
        function bW() {
            const e = sl(aM);
            return (0,
            Y.useCallback)((()=>{
                Vr(e) ? Av(Ov.saveGame) : MM()
            }
            ), [e])
        }
        X.add("game-ui/menu/components/save-game-screen/save-game-screen.tsx", {
            get SaveGameScreen() {
                return xW
            },
            set SaveGameScreen(e) {
                xW = e
            },
            get getInitialSaveName() {
                return vW
            },
            set getInitialSaveName(e) {
                vW = e
            },
            get useInitialSaveName() {
                return _W
            },
            set useInitialSaveName(e) {
                _W = e
            },
            get useQuicksave() {
                return bW
            },
            set useQuicksave(e) {
                bW = e
            }
        });
        let TW = {
            itemHeight: "50rem",
            "save-list": "save-list_zHX child-opacity-transition_nkS",
            saveList: "save-list_zHX child-opacity-transition_nkS",
            scrollable: "scrollable_t4Z",
            "name-field": "name-field_FGr",
            nameField: "name-field_FGr"
        };
        X.add("game-ui/menu/components/save-game-screen/save-list/save-list.module.scss", {
            get classes() {
                return TW
            },
            set classes(e) {
                Object.assign(TW, e)
            }
        });
        const EW = TW
          , IW = new Ig("nameField");
        var SW = "NEW_SAVE"
          , yW = Y.forwardRef((function({saveName: e, cloudTarget: t, className: n, onSaveNameChange: s, onSelectCloudTarget: i, onSaveGameSelect: a}, o) {
            const r = sl(kM)
              , [l,c] = (0,
            Y.useState)(yg)
              , u = sl(xM)
              , d = (0,
            Y.useMemo)((()=>TK(u.filter((e=>!e.isReadonly && e.cloudTarget === t && !e.autoSave)), bK.LastModified)), [t, u])
              , m = _W(d)
              , [h,g] = (0,
            Y.useState)(d.find((t=>t.displayName === e))?.id || "")
              , p = d.find((e=>e.id === l))
              , f = d.find((e=>e.id === h))
              , x = e.trim()
              , v = x !== p?.displayName && (l !== IW || x !== f?.displayName) && !1 === d.some((e=>e.displayName === x))
              , _ = (0,
            Y.useRef)(null)
              , b = uH(Vm(EW.itemHeight), d.length || 1, 3)
              , T = Dm()
              , E = (0,
            Y.useMemo)((()=>r.length > 1 ? {
                "Switch Savegame Location": e=>{
                    cp(lp.dragSlider),
                    e < 0 ? (cp(lp.selectPreviousItem),
                    i(Ew(r, r.indexOf(t), !0) ?? t)) : e > 0 && (cp(lp.selectNextItem),
                    i(bw(r, r.indexOf(t), !0) ?? t))
                }
            } : {}), [r, i, t])
              , I = (0,
            Y.useCallback)((e=>{
                if ("string" != typeof e)
                    g(l),
                    c(IW),
                    _.current && (s(m),
                    _.current.focus());
                else if (e === SW)
                    "string" == typeof h && s(m),
                    g(l),
                    c(e);
                else {
                    const t = d.find((t=>t.id === e));
                    null != t && (l !== IW && g(l),
                    c(e),
                    s(t.displayName),
                    _.current && _.current.blur())
                }
            }
            ), [l, m, h, s, d])
              , S = (0,
            Y.useCallback)((e=>{
                if (e) {
                    if (e.id === p?.id && _.current?.value === e.displayName)
                        return void _.current?.focus();
                    c(e.id),
                    s(e.displayName)
                } else
                    s(m),
                    c(IW);
                KH((()=>{
                    _.current && _.current.focus()
                }
                ), 10)
            }
            ), [p?.id, m, s])
              , y = (0,
            Y.useCallback)((e=>{
                e ? g(e.id) : (g(SW),
                s(m)),
                c(IW),
                KH((()=>{
                    _.current && _.current.focus()
                }
                ), 10)
            }
            ), [m, s])
              , j = (0,
            Y.useCallback)((e=>{
                s(e.target.value)
            }
            ), [s])
              , C = (0,
            Y.useCallback)((()=>{
                T && c(h)
            }
            ), [T, h])
              , N = (0,
            Y.useCallback)((()=>{
                KH(a, 1)
            }
            ), [a])
              , w = (0,
            Y.useCallback)((e=>{
                const t = d[e]
                  , n = d.findIndex((e=>e.displayName === x)) === e
                  , s = !!t && (n && (x === t.displayName || l === IW && x === t.displayName));
                return (0,
                z.jsxs)(Y.Fragment, {
                    children: [0 === e && (0,
                    z.jsx)(FW, {
                        selected: v,
                        onSelect: T ? ()=>y() : void 0,
                        onClick: ()=>y(),
                        onDoubleClick: N,
                        inputAction: "Save Game"
                    }), t && (0,
                    z.jsx)(AW, {
                        save: t,
                        selected: s,
                        locked: !1,
                        tooltipsInactive: !0,
                        inputAction: "Save Game",
                        onClick: S,
                        onDoubleClick: N,
                        onSelect: T ? y : void 0
                    })]
                }, t?.id || "New save")
            }
            ), [d, x, l, v, T, N, S, y]);
            return (0,
            Y.useEffect)((()=>{
                t && (s(m),
                c(SW),
                g(""))
            }
            ), [t]),
            (0,
            z.jsx)(Mg, {
                actions: E,
                children: (0,
                z.jsxs)("div", {
                    ref: o,
                    className: Zu()(EW.saveList, n),
                    children: [r.length > 1 && (0,
                    z.jsx)(jK, {
                        targets: r,
                        selectedTarget: t,
                        onSelectTarget: i
                    }), (0,
                    z.jsxs)(Zg, {
                        focused: l,
                        onChange: I,
                        onRefocus: ep,
                        allowLooping: !0,
                        children: [(0,
                        z.jsx)(rH, {
                            className: Zu()(EW.scrollable),
                            sizeProvider: b,
                            renderItem: w
                        }), (0,
                        z.jsx)("div", {
                            className: EW.nameField,
                            children: (0,
                            z.jsx)(HH, {
                                ref: _,
                                maxLength: 85,
                                focusKey: IW,
                                placeholder: (0,
                                z.jsx)(_c.Menu.NAME_FIELD_PLACEHOLDER, {}),
                                value: e,
                                onChange: j,
                                onBlur: C,
                                vkTitle: (0,
                                z.jsx)(_c.VirtualKeyboard.TITLE, {
                                    hash: "SaveName"
                                }),
                                theme: OK,
                                forceHint: !0
                            })
                        })]
                    })]
                })
            })
        }
        ));
        X.add("game-ui/menu/components/save-game-screen/save-list/save-list.tsx", {
            get NEW_SAVE_ID() {
                return SW
            },
            set NEW_SAVE_ID(e) {
                SW = e
            },
            get SaveList() {
                return yW
            },
            set SaveList(e) {
                yW = e
            }
        });
        let jW = {
            "prerequesites-list": "prerequesites-list_A14",
            prerequesitesList: "prerequesites-list_A14",
            prerequesites: "prerequesites_N98",
            prerequesite: "prerequesite_wAf",
            bullet: "bullet_tav",
            name: "name_fwE",
            "scroll-hint": "scroll-hint_Ct1",
            scrollHint: "scroll-hint_Ct1",
            "scroll-hint-label": "scroll-hint-label_hfN",
            scrollHintLabel: "scroll-hint-label_hfN",
            "dialog-content": "dialog-content_Bbm",
            dialogContent: "dialog-content_Bbm",
            "dialog-text": "dialog-text_ilA",
            dialogText: "dialog-text_ilA"
        };
        X.add("game-ui/menu/components/shared/prerequisites/prerequisites.module.scss", {
            get classes() {
                return jW
            },
            set classes(e) {
                Object.assign(jW, e)
            }
        });
        const CW = jW;
        var NW = ({prerequisites: e})=>(0,
        z.jsx)(NH, {
            className: CW.prerequesites,
            children: e.map(((e,t)=>(0,
            z.jsxs)("div", {
                className: CW.prerequesite,
                children: [(0,
                z.jsx)("div", {
                    className: CW.bullet,
                    children: "•"
                }), (0,
                z.jsx)("div", {
                    className: CW.name,
                    cohinline: "cohinline",
                    children: (0,
                    z.jsx)(_c.Content.NAME, {
                        hash: e,
                        fallback: e
                    })
                })]
            }, t)))
        });
        X.add("game-ui/menu/components/shared/prerequisites/prerequisites-list.tsx", {
            get PrerequisitesList() {
                return NW
            },
            set PrerequisitesList(e) {
                NW = e
            }
        });
        var wW = e=>{
            const t = sl(FE);
            return (0,
            Y.useMemo)((()=>e ? t && e.contentPrerequisites ? e.contentPrerequisites.filter((e=>!t.includes(e))) : e.contentPrerequisites ?? [] : []), [e, t])
        }
        ;
        X.add("game-ui/menu/components/shared/prerequisites/use-missing-prerequisites.ts", {
            get useMissingPrerequisites() {
                return wW
            },
            set useMissingPrerequisites(e) {
                wW = e
            }
        });
        let OW = {
            item: "item_OsC",
            locked: "locked_Yoi",
            "theme-icon": "theme-icon_yUd",
            themeIcon: "theme-icon_yUd",
            title: "title_qyE",
            "population-value": "population-value_yQT",
            populationValue: "population-value_yQT",
            "population-icon": "population-icon_PF9",
            populationIcon: "population-icon_PF9",
            date: "date_OyK",
            "warning-icon": "warning-icon_c5o",
            warningIcon: "warning-icon_c5o",
            "state-icon": "state-icon_YfD",
            stateIcon: "state-icon_YfD",
            "title-inner": "title-inner_io2",
            titleInner: "title-inner_io2",
            space: "space_Mad",
            tooltip: "tooltip_cZx",
            hint: "hint_s2u",
            "item-new": "item-new_owe",
            itemNew: "item-new_owe",
            "item-new-selected": "item-new-selected_XrB",
            itemNewSelected: "item-new-selected_XrB",
            prerequesite: "prerequesite_Y84",
            bullet: "bullet_HsN"
        };
        X.add("game-ui/menu/components/shared/save-item/save-item.module.scss", {
            get classes() {
                return OW
            },
            set classes(e) {
                Object.assign(OW, e)
            }
        });
        const PW = OW;
        var LW = (e,t)=>{
            let n = e.displayName;
            return e.autoSave && (n = `${t.translate("Options.AUTOSAVE")} - ${n.replace(/^AutoSave/, "")}`),
            n
        }
          , AW = ({save: e, selected: t, locked: n, tooltipsInactive: s, inputAction: i, checkPrerequesites: a, onClick: o, onDoubleClick: r, onSelect: l})=>{
            const c = sc()
              , u = (0,
            Y.useCallback)((()=>o(e)), [e, o])
              , d = (0,
            Y.useCallback)((()=>r?.(e)), [e, r])
              , m = sl(hM).find((t=>t.id === e.theme))
              , h = RW(e.cloudTarget, e.isReadonly)
              , g = MW(e.cloudTarget)
              , [p,f] = (0,
            Y.useState)(!1)
              , x = (0,
            Y.useCallback)((()=>l && l(e)), [l, e])
              , v = LW(e, c)
              , _ = Dm()
              , [b,T] = (0,
            Y.useState)(!0)
              , E = wW(e);
            return (0,
            Y.useEffect)((()=>{
                if (a) {
                    (async()=>{
                        const t = await UE(e.contentPrerequisites);
                        T(t)
                    }
                    )()
                }
            }
            ), [a, e.contentPrerequisites]),
            (0,
            z.jsx)(Ah, {
                onFocusChange: f,
                children: (0,
                z.jsxs)(U_, {
                    disableHint: !0,
                    focusKey: e?.id || SW,
                    selected: t,
                    className: Zu()(PW.item, n && PW.locked),
                    onClick: u,
                    onDoubleClick: r && d,
                    onSelect: l && x,
                    children: [!b && E && (0,
                    z.jsx)(Eg, {
                        tooltip: (0,
                        z.jsxs)(NH, {
                            children: [(0,
                            z.jsx)(_c.GameListScreen.TOOLTIP_MISSING_REQUIRED_CONTENT, {}), (0,
                            z.jsx)(NW, {
                                prerequisites: E
                            })]
                        }),
                        disabled: _ && !p,
                        forceVisible: _ && p,
                        children: (0,
                        z.jsx)("img", {
                            className: PW.warningIcon,
                            src: "Media/Misc/Warning.svg"
                        })
                    }), (0,
                    z.jsx)(UT, {
                        action: i,
                        active: p,
                        className: PW.hint
                    }), (0,
                    z.jsx)(LH, {
                        src: m?.icon ?? "",
                        className: PW.themeIcon
                    }), null != h && (0,
                    z.jsx)(Eg, {
                        tooltip: kW(e),
                        disabled: _ && s,
                        className: PW.tooltip,
                        children: (0,
                        z.jsx)(ZS, {
                            src: h,
                            className: PW.stateIcon,
                            tinted: g
                        })
                    }), (0,
                    z.jsx)("div", {
                        className: PW.title,
                        children: (0,
                        z.jsx)(UU, {
                            tooltip: DW(e.path),
                            disabled: s,
                            className: PW.tooltip,
                            style: {
                                maxWidth: screen.availWidth
                            },
                            children: (0,
                            z.jsx)("div", {
                                className: PW.titleInner,
                                children: v
                            })
                        })
                    }), (0,
                    z.jsx)("div", {
                        className: PW.populationValue,
                        children: (0,
                        z.jsx)(Oc, {
                            value: e.population,
                            unit: vc.Integer
                        })
                    }), (0,
                    z.jsx)(Z_, {
                        src: "Media/Game/Icons/Citizen.svg",
                        className: PW.populationIcon
                    }), (0,
                    z.jsx)(DH, {
                        className: PW.date,
                        children: (0,
                        z.jsx)(Ru, {
                            value: e.lastModified
                        })
                    })]
                })
            })
        }
        ;
        function MW(e) {
            return "ParadoxMods" !== e
        }
        function RW(e, t) {
            return "ParadoxMods" === e ? "Media/Glyphs/ParadoxModsCloud.svg" : "PdxSdk" === e ? "Media/Glyphs/PDXCloud.svg" : "Steamworks" === e ? "Media/Glyphs/SteamCloud.svg" : "Gdk" === e ? "Media/Glyphs/GdkCloud.svg" : t ? "Media/Glyphs/Lock.svg" : null
        }
        function kW(e) {
            return "ParadoxMods" === e.cloudTarget ? (0,
            z.jsx)(_c.Menu.PARADOXMODS_SAVE, {}) : "PdxSdk" === e.cloudTarget ? (0,
            z.jsx)(_c.Menu.PARADOXCLOUD_SAVE, {}) : "Steamworks" === e.cloudTarget ? (0,
            z.jsx)(_c.Menu.STEAMCLOUD_SAVE, {}) : "Gdk" === e.cloudTarget ? (0,
            z.jsx)(_c.Menu.GDKCLOUD_SAVE, {}) : e.isReadonly ? (0,
            z.jsx)(_c.Menu.READONLY_SAVE, {}) : null
        }
        function DW(e) {
            return e?.replaceAll(/([/\\])/g, "$1​")
        }
        var FW = ({selected: e, inputAction: t, onSelect: n, onClick: s, onDoubleClick: i})=>{
            const [a,o] = (0,
            Y.useState)(!1);
            return (0,
            z.jsx)(Ah, {
                onFocusChange: o,
                children: (0,
                z.jsxs)(U_, {
                    disableHint: !0,
                    focusKey: SW,
                    selected: e,
                    className: Zu()(PW.item, PW.itemNew, {
                        [PW.itemNewSelected]: e
                    }),
                    onSelect: n,
                    onClick: s,
                    onDoubleClick: i,
                    children: [(0,
                    z.jsx)(UT, {
                        action: t,
                        active: a || e,
                        className: PW.hint
                    }), (0,
                    z.jsx)("div", {
                        className: PW.title,
                        children: (0,
                        z.jsx)("div", {
                            className: PW.titleInner,
                            children: (0,
                            z.jsx)(_c.GameListScreen.NEW_SAVE, {})
                        })
                    })]
                })
            })
        }
        ;
        X.add("game-ui/menu/components/shared/save-item/save-item.tsx", {
            get getSaveName() {
                return LW
            },
            set getSaveName(e) {
                LW = e
            },
            get SaveItem() {
                return AW
            },
            set SaveItem(e) {
                AW = e
            },
            get getStateTintedIcon() {
                return MW
            },
            set getStateTintedIcon(e) {
                MW = e
            },
            get getStateIcon() {
                return RW
            },
            set getStateIcon(e) {
                RW = e
            },
            get withZeroSpaces() {
                return DW
            },
            set withZeroSpaces(e) {
                DW = e
            },
            get NewSaveItem() {
                return FW
            },
            set NewSaveItem(e) {
                FW = e
            }
        });
        let UW = {
            listItemHeight: "24rem",
            horizontalPadding: "26rem",
            defaultImageSrc: "Media/Editor/DefaultObject.svg",
            dirArrowSrc: "Media/Glyphs/ThickStrokeArrowRight.svg",
            "item-picker": "item-picker_ORP editor-widget_QQl",
            itemPicker: "item-picker_ORP editor-widget_QQl",
            item: "item_H00",
            "item-container": "item-container_NoI",
            itemContainer: "item-container_NoI",
            "favorite-icon": "favorite-icon_bgV",
            favoriteIcon: "favorite-icon_bgV",
            "grid-mode": "grid-mode_bUv",
            gridMode: "grid-mode_bUv",
            favorite: "favorite_pLV",
            "grid-row": "grid-row_Uxw",
            gridRow: "grid-row_Uxw",
            "list-item": "list-item_qRg item_H00",
            listItem: "list-item_qRg item_H00",
            image: "image_scT",
            badge: "badge_H2J",
            name: "name_u39",
            "dir-arrow": "dir-arrow_DVY",
            dirArrow: "dir-arrow_DVY",
            "grid-item": "grid-item_qEa item_H00",
            gridItem: "grid-item_qEa item_H00",
            "badge-padding": "badge-padding_KbI",
            badgePadding: "badge-padding_KbI"
        };
        X.add("game-ui/editor/widgets/item-picker/item-picker.module.scss", {
            get classes() {
                return UW
            },
            set classes(e) {
                Object.assign(UW, e)
            }
        });
        const BW = UW;
        let GW = {
            button: "button_bUk",
            hint: "hint_zzq"
        };
        X.add("game-ui/editor/widgets/item-picker/item-picker-button.module.scss", {
            get classes() {
                return GW
            },
            set classes(e) {
                Object.assign(GW, e)
            }
        });
        const VW = GW;
        var HW = ({parent: e, path: t, props: n})=>{
            const s = ZR(e, t)
              , i = (0,
            Y.useMemo)((()=>({
                length: n.length,
                get: e=>{
                    const t = e - n.visibleStartIndex;
                    return t >= 0 && t < n.visibleItems.length ? n.visibleItems[t] : null
                }
            })), [n.length, n.visibleItems, n.visibleStartIndex])
              , a = (0,
            Y.useCallback)(((e,t)=>{
                const i = e - e % 64
                  , a = Math.min(t - t % 64 + 64, n.length);
                uR(s, i, a)
            }
            ), [s, n.length])
              , o = YM(dR, s)
              , r = (0,
            Y.useCallback)(((e,t)=>{
                mR(s, e, t),
                e === n.selectedIndex && l.current && l.current.scrollToSelected()
            }
            ), [s, n.selectedIndex])
              , l = (0,
            Y.useRef)(null)
              , c = (0,
            Y.useContext)(oS);
            (0,
            Y.useLayoutEffect)((()=>{
                c && l.current && l.current.scrollToSelected()
            }
            ), [n.columnCount, n.length, c]);
            const u = pD(n.flex);
            return (0,
            z.jsx)(KW, {
                ref: l,
                selectedIndex: n.selectedIndex,
                columnCount: n.columnCount,
                hasImages: n.hasImages,
                data: i,
                style: u,
                onRenderedRangeChange: a,
                onSelect: o,
                onToggleFavorite: n.hasFavorites ? r : void 0,
                selectOnFocus: n.selectOnFocus
            })
        }
          , KW = Y.forwardRef((function({focusKey: e, selectedIndex: t, columnCount: n, hasImages: s=!0, data: i, className: a, style: o, onRenderedRangeChange: r, onSelect: l, onToggleFavorite: c, selectOnFocus: u=!0}, d) {
            const m = (0,
            Y.useRef)(null)
              , h = XE()
              , g = (0,
            Y.useCallback)((e=>{
                u && "number" == typeof e && l(e)
            }
            ), [l, u])
              , p = 1 === n
              , f = Vm(BW.listItemHeight)
              , x = uH(f, i.length, 2)
              , v = (0,
            Y.useCallback)(((e,n)=>{
                const a = i.get(e);
                return (0,
                z.jsx)(WW, {
                    index: e,
                    name: null != a ? (0,
                    z.jsx)(gu, {
                        value: a.displayName
                    }) : " ",
                    image: a?.image ?? null,
                    tinted: a?.tinted ?? !1,
                    hasImage: s,
                    directory: a?.directory ?? !1,
                    favorite: a?.favorite ?? !1,
                    selected: t === e,
                    className: BW.listItem,
                    onSelect: l,
                    onToggleFavorite: c,
                    tooltip: (a && a.tooltip && (0,
                    z.jsx)(gu, {
                        value: a.tooltip,
                        transformer: rV
                    })) ?? null,
                    listMode: !0,
                    badge: a?.badge ?? null
                }, n)
            }
            ), [i, s, t, l, c])
              , _ = hm(m)
              , b = Vm(BW.horizontalPadding)
              , T = (null != _ ? _.x - b : n) / n
              , E = null != _ ? Math.ceil(i.length / n) : 0
              , I = uH(T, E, 2)
              , S = (0,
            Y.useCallback)(((e,a)=>{
                const o = e * n
                  , r = Math.min((e + 1) * n, i.length);
                return (0,
                z.jsx)("div", {
                    className: BW.gridRow,
                    style: {
                        "--itemSize": T + "px"
                    },
                    children: [...Array(r - o).keys()].map((e=>{
                        const n = o + e
                          , a = i.get(n);
                        return (0,
                        z.jsx)(WW, {
                            index: n,
                            name: null != a ? (0,
                            z.jsx)(gu, {
                                value: a.displayName
                            }) : " ",
                            image: a?.image ?? null,
                            tinted: a?.tinted ?? !1,
                            hasImage: s,
                            directory: a?.directory ?? !1,
                            favorite: a?.favorite ?? !1,
                            selected: t === n,
                            className: BW.gridItem,
                            onSelect: l,
                            onToggleFavorite: c,
                            tooltip: (a && a.tooltip && (0,
                            z.jsx)(gu, {
                                value: a.tooltip
                            })) ?? null,
                            listMode: !1,
                            badge: a?.badge ?? null
                        }, e)
                    }
                    ))
                }, a)
            }
            ), [n, i, T, s, t, l, c])
              , y = (0,
            Y.useCallback)(((e,t)=>{
                r && r(e * n, t * n)
            }
            ), [n, r])
              , j = (0,
            Y.useRef)(0);
            j.current = -1 === t || null === _ ? 0 : p ? f * (t + .5) - _.y / 2 : T * (Math.floor(t / n) + .5) - _.y / 2;
            const C = (0,
            Y.useRef)(0);
            return (0,
            Y.useImperativeHandle)(d, (()=>({
                scrollToSelected: ()=>{
                    window.cancelAnimationFrame(C.current),
                    h.scrollTo(0, j.current),
                    C.current = window.requestAnimationFrame((()=>{
                        h.scrollTo(0, j.current),
                        C.current = window.requestAnimationFrame((()=>{
                            h.scrollTo(0, j.current)
                        }
                        ))
                    }
                    ))
                }
            }))),
            (0,
            Y.useEffect)((()=>()=>window.cancelAnimationFrame(C.current)), []),
            (0,
            z.jsx)(np, {
                focusKey: e,
                initialFocused: t,
                onChange: g,
                children: (0,
                z.jsx)(rH, {
                    ref: m,
                    controller: h,
                    smooth: !1,
                    className: Zu()(BW.itemPicker, a),
                    style: o,
                    sizeProvider: null != _ ? p ? x : I : cH,
                    renderItem: p ? v : S,
                    onRenderedRangeChange: y
                })
            })
        }
        ));
        const WW = ({index: e, name: t, image: n, tinted: s, hasImage: i, directory: a, favorite: o, selected: r, className: l, onSelect: c, onToggleFavorite: u, tooltip: d, listMode: m, badge: h})=>{
            const g = (0,
            Y.useCallback)((()=>c(e)), [e, c])
              , p = (0,
            Y.useMemo)((()=>{
                if (u)
                    return ()=>{
                        u(e, !o),
                        cp(lp.selectToggle)
                    }
            }
            ), [e, o, u])
              , {onMouseUp: f, onMouseDown: x} = SH(2, p)
              , [v,_] = (0,
            Y.useMemo)((()=>{
                if (!h)
                    return [null, !1];
                const e = RW(h, !1);
                return e ? [e, MW(h)] : [h, !1]
            }
            ), [h])
              , b = n || BW.defaultImageSrc;
            return (0,
            z.jsx)(Eg, {
                tooltip: d,
                children: (0,
                z.jsxs)("div", {
                    className: Zu()(BW.itemContainer),
                    children: [(0,
                    z.jsxs)(U_, {
                        focusKey: e,
                        selected: r,
                        className: Zu()(l, {
                            [BW.favorite]: o
                        }),
                        onSelect: g,
                        onMouseDown: x,
                        onMouseUp: f,
                        theme: VW,
                        children: [i && (0,
                        z.jsx)(ZS, {
                            src: b,
                            className: BW.image,
                            tinted: s,
                            children: !m && v && v !== b && (0,
                            z.jsx)(ZS, {
                                src: v,
                                className: BW.badge,
                                tinted: _
                            })
                        }), m && v && v !== b && (0,
                        z.jsx)(ZS, {
                            src: v,
                            className: BW.badge,
                            tinted: _
                        }), (0,
                        z.jsx)("div", {
                            className: BW.name,
                            children: t
                        }), a && (0,
                        z.jsx)(Z_, {
                            src: BW.dirArrowSrc,
                            className: BW.dirArrow
                        })]
                    }), u && (0,
                    z.jsx)(Z_, {
                        className: Zu()(l, BW.favoriteIcon, {
                            [BW.gridMode]: !m,
                            [BW.favorite]: o
                        }),
                        onClick: p,
                        src: o ? "Media/Glyphs/StarFilled.svg" : "Media/Glyphs/StarOutline.svg"
                    })]
                })
            })
        }
        ;
        X.add("game-ui/editor/widgets/item-picker/item-picker.tsx", {
            get BoundItemPicker() {
                return HW
            },
            set BoundItemPicker(e) {
                HW = e
            },
            get ItemPicker() {
                return KW
            },
            set ItemPicker(e) {
                KW = e
            }
        });
        let zW = {
            "item-picker-footer": "item-picker-footer_Hi4 editor-widget_QQl",
            itemPickerFooter: "item-picker-footer_Hi4 editor-widget_QQl",
            summary: "summary_gnF",
            slider: "slider_iLE"
        };
        X.add("game-ui/editor/widgets/item-picker-footer/item-picker-footer.module.scss", {
            get classes() {
                return zW
            },
            set classes(e) {
                Object.assign(zW, e)
            }
        });
        const YW = zW;
        var $W = ({parent: e, path: t, props: n})=>{
            const s = YM(RR, ZR(e, t));
            return (0,
            z.jsx)(qW, {
                length: n.length,
                columnCount: n.columnCount,
                onColumnCountChange: s
            })
        }
          , qW = ({length: e, columnCount: t, onColumnCountChange: n})=>{
            const s = (0,
            Y.useCallback)((e=>n(e <= 10 ? e : 1)), [n]);
            return (0,
            z.jsx)(ck, {
                children: (0,
                z.jsxs)("div", {
                    className: YW.itemPickerFooter,
                    children: [(0,
                    z.jsx)("div", {
                        className: YW.summary,
                        children: (0,
                        z.jsx)(_c.Editor.ELEMENT_COUNT, {
                            COUNT: e.toString()
                        })
                    }), (0,
                    z.jsx)(Op, {
                        children: (0,
                        z.jsx)(AA, {
                            value: 1 === t ? 11 : t,
                            start: 11,
                            end: 4,
                            theme: tG,
                            className: Zu()(tG.compact, YW.slider),
                            valueTransformer: RA,
                            onChange: s,
                            gamepadStep: 1
                        })
                    })]
                })
            })
        }
        ;
        X.add("game-ui/editor/widgets/item-picker-footer/item-picker-footer.tsx", {
            get BoundItemPickerFooter() {
                return $W
            },
            set BoundItemPickerFooter(e) {
                $W = e
            },
            get ItemPickerFooter() {
                return qW
            },
            set ItemPickerFooter(e) {
                qW = e
            }
        });
        let XW = {
            summary: "summary_sOH",
            section: "section_KBF",
            controls: "controls_kKZ",
            control: "control_p7u",
            children: "children_oyd section_KBF",
            "list-item": "list-item_zT4",
            listItem: "list-item_zT4",
            header: "header_jkI",
            label: "label_Mi4",
            toggle: "toggle_IOi",
            action: "action_AoQ",
            "toggle-label": "toggle-label_UK9",
            toggleLabel: "toggle-label_UK9"
        };
        X.add("game-ui/editor/widgets/list/list.module.scss", {
            get classes() {
                return XW
            },
            set classes(e) {
                Object.assign(XW, e)
            }
        });
        const QW = XW;
        var ZW = ({parent: e, path: t, props: n, children: s})=>{
            const i = ZR(e, t)
              , a = YM(FR, i)
              , o = YM(VR, i)
              , r = YM(kR, i)
              , l = YM(HR, i);
            return (0,
            z.jsx)(sz, {
                expanded: n.expanded,
                tooltip: n.tooltip,
                label: (0,
                z.jsx)(gu, {
                    value: n.displayName
                }),
                length: n.length,
                currentPageIndex: n.currentPageIndex,
                pageCount: n.pageCount,
                onAddItem: n.resizable ? a : void 0,
                onClear: n.resizable ? o : void 0,
                onExpandedChange: r,
                onCurrentPageChange: l,
                disabled: n.disabled,
                children: s.map(((e,t)=>e.props.__Type === NR.ExpandableGroup ? (0,
                z.jsx)(ez, {
                    parent: i,
                    index: n.childStartIndex + t,
                    length: n.length,
                    resizable: n.resizable,
                    sortable: n.sortable,
                    data: e,
                    disabled: n.disabled
                }, n.childStartIndex + t) : (0,
                z.jsx)(JW, {
                    parent: i,
                    index: n.childStartIndex + t,
                    length: n.length,
                    resizable: n.resizable,
                    sortable: n.sortable,
                    data: e,
                    disabled: n.disabled
                }, n.childStartIndex + t)))
            })
        }
        ;
        const JW = ({parent: e, index: t, length: n, resizable: s, sortable: i, data: a, disabled: o})=>{
            const r = (0,
            Y.useContext)(gD)
              , l = tz(e, t, i, s);
            return (0,
            z.jsx)(iz, {
                focusKey: t,
                first: 0 === t,
                last: t === n - 1,
                ...l,
                onExpandedChange: void 0,
                disabled: o,
                children: (0,
                z.jsx)(mD, {
                    parent: e,
                    components: r,
                    data: a
                })
            })
        }
          , ez = ({parent: e, index: t, length: n, resizable: s, sortable: i, data: a, disabled: o})=>{
            const r = tz(e, t, i, s)
              , l = ZR(e, a.path)
              , c = (0,
            Y.useContext)(gD)
              , u = YM(kR, l);
            return (0,
            z.jsx)(iz, {
                focusKey: t,
                label: (0,
                z.jsx)(gu, {
                    value: a.props.displayName
                }),
                first: 0 === t,
                last: t === n - 1,
                expanded: a.props.expanded,
                ...r,
                onExpandedChange: u,
                disabled: o,
                children: (0,
                z.jsx)(hD, {
                    parent: l,
                    components: c,
                    data: a.children
                })
            })
        }
        ;
        function tz(e, t, n, s) {
            return (0,
            Y.useMemo)((()=>({
                onMoveUp: n ? ()=>BR(e, t, t - 1) : void 0,
                onMoveDown: n ? ()=>BR(e, t, t + 1) : void 0,
                onDuplicate: s ? ()=>UR(e, t) : void 0,
                onDelete: s ? ()=>GR(e, t) : void 0
            })), [e, t, n, s])
        }
        var nz = ({label: e, disabled: t, children: n, onAddItem: s, onClear: i})=>{
            const a = Y.Children.count(n);
            return (0,
            z.jsxs)(lk, {
                disabled: t,
                children: [(0,
                z.jsxs)("div", {
                    className: rk.row,
                    children: [(0,
                    z.jsx)("div", {
                        className: rk.label,
                        children: e
                    }), (0,
                    z.jsx)("div", {
                        className: QW.summary,
                        children: (0,
                        z.jsx)(_c.Editor.LIST_COUNT, {
                            COUNT: (0,
                            z.jsx)(Oc, {
                                value: a,
                                unit: vc.Integer
                            })
                        })
                    })]
                }), a > 0 && (0,
                z.jsx)("div", {
                    className: QW.children,
                    children: n
                }), (null != s || null != i) && (0,
                z.jsxs)("div", {
                    className: QW.controls,
                    children: [null != s && (0,
                    z.jsx)(U_, {
                        disabled: t,
                        theme: CR,
                        onSelect: s,
                        children: (0,
                        z.jsx)(_c.Editor.LIST_ADD_ITEM, {})
                    }), null != i && (0,
                    z.jsx)(U_, {
                        disabled: t || 0 === a,
                        theme: CR,
                        onSelect: i,
                        children: (0,
                        z.jsx)(_c.Editor.CLEAR, {})
                    })]
                })]
            })
        }
          , sz = ({label: e, expanded: t, tooltip: n, length: s, currentPageIndex: i, pageCount: a, disabled: o, children: r, onAddItem: l, onClear: c, onExpandedChange: u, onCurrentPageChange: d})=>{
            const m = (0,
            Y.useCallback)((()=>d(i - 1)), [i, d])
              , h = (0,
            Y.useCallback)((()=>d(i + 1)), [i, d])
              , g = t && a > 1 ? (0,
            z.jsx)(_c.Editor.LIST_PAGE_COUNT, {
                PAGE: bu(i + 1),
                PAGE_COUNT: bu(a),
                COUNT: bu(s)
            }) : (0,
            z.jsx)(_c.Editor.LIST_COUNT, {
                COUNT: bu(s)
            });
            return (0,
            z.jsxs)(uk, {
                label: e,
                tooltip: n,
                summary: g,
                expanded: t,
                disabled: o,
                onExpandedChange: u,
                children: [a > 1 && (0,
                z.jsxs)("div", {
                    className: QW.controls,
                    children: [(0,
                    z.jsx)(U_, {
                        disabled: 0 === i,
                        theme: CR,
                        className: QW.control,
                        onSelect: m,
                        children: (0,
                        z.jsx)(_c.Editor.PREVIOUS_PAGE, {})
                    }), (0,
                    z.jsx)(U_, {
                        disabled: i >= a - 1,
                        theme: CR,
                        className: QW.control,
                        onSelect: h,
                        children: (0,
                        z.jsx)(_c.Editor.NEXT_PAGE, {})
                    })]
                }), s > 0 && (0,
                z.jsx)("div", {
                    className: QW.children,
                    children: r
                }), (null != l || null != c) && (0,
                z.jsxs)("div", {
                    className: QW.controls,
                    children: [null != l && (0,
                    z.jsx)(U_, {
                        disabled: o,
                        theme: CR,
                        className: QW.control,
                        onSelect: l,
                        children: (0,
                        z.jsx)(_c.Editor.LIST_ADD_ITEM, {})
                    }), null != c && (0,
                    z.jsx)(U_, {
                        disabled: o || 0 === s,
                        theme: CR,
                        className: QW.control,
                        onSelect: c,
                        children: (0,
                        z.jsx)(_c.Editor.CLEAR, {})
                    })]
                })]
            })
        }
          , iz = ({focusKey: e, label: t, disabled: n, first: s, last: i, expanded: a=!0, children: o, onMoveUp: r, onMoveDown: l, onDuplicate: c, onDelete: u, onExpandedChange: d})=>{
            const m = null != d
              , h = (0,
            Y.useCallback)((()=>{
                null != d && d(!a)
            }
            ), [a, d]);
            return (0,
            z.jsxs)("div", {
                className: QW.listItem,
                children: [(0,
                z.jsx)("div", {
                    className: QW.header,
                    children: (0,
                    z.jsxs)(np, {
                        focusKey: e,
                        direction: kg.Horizontal,
                        children: [m ? (0,
                        z.jsx)(tb, {
                            tinted: !0,
                            src: a ? "Media/Glyphs/ThickStrokeArrowDown.svg" : "Media/Glyphs/ThickStrokeArrowRight.svg",
                            className: Zu()(QW.toggle, a && QW.expanded),
                            onSelect: h,
                            children: (0,
                            z.jsx)("div", {
                                className: QW.toggleLabel,
                                children: t
                            })
                        }) : (0,
                        z.jsx)("div", {
                            className: QW.label,
                            children: t
                        }), r && (0,
                        z.jsx)(Eg, {
                            tooltip: (0,
                            z.jsx)(_c.Editor.LIST_ITEM_MOVE_UP, {}),
                            children: (0,
                            z.jsx)(tb, {
                                tinted: !0,
                                src: "Media/Glyphs/StrokeArrowUp.svg",
                                disabled: s || n,
                                className: QW.action,
                                onSelect: r
                            })
                        }), l && (0,
                        z.jsx)(Eg, {
                            tooltip: (0,
                            z.jsx)(_c.Editor.LIST_ITEM_MOVE_DOWN, {}),
                            children: (0,
                            z.jsx)(tb, {
                                tinted: !0,
                                src: "Media/Glyphs/StrokeArrowDown.svg",
                                disabled: i || n,
                                className: QW.action,
                                onSelect: l
                            })
                        }), c && (0,
                        z.jsx)(Eg, {
                            tooltip: (0,
                            z.jsx)(_c.Editor.LIST_ITEM_DUPLICATE, {}),
                            children: (0,
                            z.jsx)(tb, {
                                tinted: !0,
                                src: "Media/Glyphs/Copy.svg",
                                disabled: n,
                                className: QW.action,
                                onSelect: c
                            })
                        }), u && (0,
                        z.jsx)(Eg, {
                            tooltip: (0,
                            z.jsx)(_c.Editor.LIST_ITEM_DELETE, {}),
                            children: (0,
                            z.jsx)(tb, {
                                tinted: !0,
                                src: "Media/Glyphs/Trash.svg",
                                disabled: n,
                                className: QW.action,
                                onSelect: u
                            })
                        })]
                    })
                }), o]
            })
        }
        ;
        X.add("game-ui/editor/widgets/list/list.tsx", {
            get BoundPagedList() {
                return ZW
            },
            set BoundPagedList(e) {
                ZW = e
            },
            get EditorList() {
                return nz
            },
            set EditorList(e) {
                nz = e
            },
            get EditorPagedList() {
                return sz
            },
            set EditorPagedList(e) {
                sz = e
            },
            get EditorListItem() {
                return iz
            },
            set EditorListItem(e) {
                iz = e
            }
        });
        let az = {
            "dropdown-toggle": "dropdown-toggle_ODx dropdown-toggle_prl",
            dropdownToggle: "dropdown-toggle_ODx dropdown-toggle_prl",
            indicator: "indicator_JII",
            "dropdown-menu": "dropdown-menu_xq2 dropdown-menu_Swd",
            dropdownMenu: "dropdown-menu_xq2 dropdown-menu_Swd",
            "dropdown-item": "dropdown-item_R_l undefined",
            dropdownItem: "dropdown-item_R_l undefined"
        };
        X.add("game-ui/game/themes/game-dropdown.module.scss", {
            get classes() {
                return az
            },
            set classes(e) {
                Object.assign(az, e)
            }
        });
        const oz = az;
        let rz = {
            dropdown: "dropdown_zWC",
            item: "item_Bmu",
            thumb: "thumb_eC2",
            label: "label_jXx",
            hint: "hint_hNH",
            "pad-left": "pad-left_jYb",
            padLeft: "pad-left_jYb",
            "dropdown-gamepad": "dropdown-gamepad_HFi",
            dropdownGamepad: "dropdown-gamepad_HFi",
            "pad-right": "pad-right_o6g",
            padRight: "pad-right_o6g",
            "pad-thumbnail": "pad-thumbnail_pWJ",
            padThumbnail: "pad-thumbnail_pWJ"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/route-sections/select-vehicles-section.module.scss", {
            get classes() {
                return rz
            },
            set classes(e) {
                Object.assign(rz, e)
            }
        });
        const lz = rz;
        var cz = {
            ...F_,
            hover: null,
            focus: null
        };
        function uz(e, t) {
            tl("SelectVehiclesSection", "selectVehicles", e, t)
        }
        var dz = ({group: e, tooltipKeys: t, tooltipTags: n, primaryVehicle: s, secondaryVehicle: i, primaryVehicles: a, secondaryVehicles: o})=>{
            const r = (0,
            Y.useCallback)((e=>{
                uz(e, i?.entity ?? Zp)
            }
            ), [i?.entity])
              , l = (0,
            Y.useCallback)((e=>{
                uz(s?.entity ?? Zp, e)
            }
            ), [s?.entity])
              , c = tO(e, t, n, !0)
              , u = s ?? a[0]
              , d = (0,
            Y.useMemo)((()=>null != i ? i : null != o && o.length > 0 ? o[0] : null), [i, o])
              , [m,h] = (0,
            Y.useState)(!1)
              , [g,p] = (0,
            Y.useState)(!1)
              , f = Dm();
            return (0,
            z.jsxs)(yS, {
                disableFocus: !0,
                className: lz.selectVehiclesSection,
                tooltip: c && (0,
                z.jsx)(Cb, {
                    text: c
                }),
                children: [(0,
                z.jsx)(KS, {
                    uppercase: !0,
                    disableFocus: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.SELECT_VEHICLE, {})
                }), (0,
                z.jsx)(KS, {
                    disableFocus: !0,
                    className: Zu()(lz.dropdownGamepad, f && lz.padRight, f && !m && lz.padLeft),
                    left: (0,
                    z.jsxs)(z.Fragment, {
                        children: [(0,
                        z.jsx)(UT, {
                            action: g ? "Back" : "Select",
                            active: m,
                            className: lz.hint
                        }), (0,
                        z.jsx)(Ah, {
                            onFocusChange: h,
                            children: (0,
                            z.jsx)(fS, {
                                focusKey: yg,
                                theme: oz,
                                initialFocused: Dr(u.entity),
                                onToggle: p,
                                content: a?.map((e=>(0,
                                z.jsx)(mz, {
                                    vehicle: e,
                                    onSelect: r
                                }, Dr(e.entity)))),
                                children: (0,
                                z.jsx)(xS, {
                                    sounds: cz,
                                    className: lz.dropdown,
                                    children: (0,
                                    z.jsxs)("div", {
                                        className: lz.item,
                                        children: [(0,
                                        z.jsx)("img", {
                                            src: u.thumbnail,
                                            className: lz.thumb
                                        }), (0,
                                        z.jsxs)("div", {
                                            className: lz.label,
                                            children: [(0,
                                            z.jsx)(_c.Assets.NAME, {
                                                hash: u.id
                                            }), " "]
                                        })]
                                    })
                                })
                            })
                        })]
                    })
                }), d && (0,
                z.jsxs)(z.Fragment, {
                    children: [(0,
                    z.jsx)(KS, {
                        uppercase: !0,
                        disableFocus: !0,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.SELECT_VEHICLE_SECONDARY, {
                            hash: "Train"
                        })
                    }), (0,
                    z.jsx)(fS, {
                        theme: oz,
                        initialFocused: Dr(d.entity),
                        content: o?.map((e=>(0,
                        z.jsx)(mz, {
                            vehicle: e,
                            onSelect: l
                        }, Dr(e.entity)))),
                        children: (0,
                        z.jsx)(xS, {
                            sounds: cz,
                            className: lz.dropdown,
                            children: (0,
                            z.jsxs)("div", {
                                className: lz.item,
                                children: [(0,
                                z.jsx)("img", {
                                    src: d.thumbnail,
                                    className: lz.thumb
                                }), (0,
                                z.jsxs)("div", {
                                    className: lz.label,
                                    children: [(0,
                                    z.jsx)(_c.Assets.NAME, {
                                        hash: d.id
                                    }), " "]
                                })]
                            })
                        })
                    })]
                })]
            })
        }
        ;
        const mz = ({vehicle: e, onSelect: t})=>{
            const [n,s] = (0,
            Y.useState)(!1)
              , i = Dm();
            return (0,
            z.jsx)(Ah, {
                onFocusChange: s,
                children: (0,
                z.jsx)(bS, {
                    value: e.entity,
                    focusKey: e.id,
                    onChange: t,
                    className: Zu()(i && lz.padRight, i && !n && lz.padLeft),
                    children: (0,
                    z.jsxs)("div", {
                        className: lz.item,
                        children: [(0,
                        z.jsx)(UT, {
                            action: "Select",
                            active: n,
                            className: lz.hint
                        }), (0,
                        z.jsx)("img", {
                            src: e.thumbnail,
                            className: Zu()(lz.thumb, i && lz.padThumbnail)
                        }), (0,
                        z.jsxs)("div", {
                            className: lz.label,
                            children: [(0,
                            z.jsx)(_c.Assets.NAME, {
                                hash: e.id
                            }), " "]
                        })]
                    })
                }, Dr(e.entity))
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/route-sections/select-vehicles-section.tsx", {
            get dropdownSounds() {
                return cz
            },
            set dropdownSounds(e) {
                cz = e
            },
            get SelectVehiclesSection() {
                return dz
            },
            set SelectVehiclesSection(e) {
                dz = e
            }
        });
        let hz = {
            left: "left_vb1",
            right: "right_wuq",
            "delete-button": "delete-button_iT6",
            deleteButton: "delete-button_iT6",
            input: "input_xcv"
        };
        X.add("game-ui/editor/widgets/localization-field/localization-field.module.scss", {
            get classes() {
                return hz
            },
            set classes(e) {
                Object.assign(hz, e)
            }
        });
        const gz = hz;
        var pz = ({parent: e, path: t, props: n})=>{
            const s = ZR(e, t)
              , i = (0,
            Y.useCallback)(((e,t,n)=>{
                gR(s, e, t, n)
            }
            ), [s])
              , a = sl(Jc)
              , o = (0,
            Y.useCallback)((e=>{
                fR(s, e)
            }
            ), [s])
              , r = (0,
            Y.useCallback)((()=>{
                pR(s)
            }
            ), [s]);
            return (0,
            z.jsx)(fz, {
                ...n,
                supportedLocales: a,
                onChange: i,
                onAdd: r,
                onRemove: o
            })
        }
          , fz = ({localization: e, supportedLocales: t, onChange: n, onAdd: s, onRemove: i, placeholder: a, mandatoryId: o, disabled: r})=>{
            const l = (0,
            Y.useMemo)((()=>t.filter((t=>e.findIndex((e=>e.localeId === t)) < 0))), [e, t]);
            return (0,
            z.jsxs)(lk, {
                children: [e.map(((e,t)=>(0,
                z.jsx)(xz, {
                    index: t,
                    localeId: e.localeId,
                    text: e.text,
                    unusedLocales: l,
                    onChange: n,
                    onRemove: i,
                    placeholder: a,
                    mandatory: e.localeId === o,
                    disabled: r
                }, t))), (0,
                z.jsx)("div", {
                    children: (0,
                    z.jsx)(Ck, {
                        children: (0,
                        z.jsx)(Nk, {
                            disabled: r || 0 === l.length,
                            onSelect: s,
                            children: (0,
                            z.jsx)(_c.Editor.ADD_TRANSLATION, {})
                        })
                    })
                })]
            })
        }
        ;
        const xz = ({index: e, localeId: t, text: n, unusedLocales: s, onChange: i, onRemove: a, placeholder: o, mandatory: r, disabled: l})=>{
            const c = (0,
            Y.useMemo)((()=>[t, ...s]), [t, s])
              , u = (0,
            Y.useCallback)((t=>i(e, c[t], n)), [e, c, i, n])
              , d = (0,
            Y.useCallback)((n=>i(e, t, n.target.value || "")), [e, t, i])
              , m = (0,
            Y.useCallback)((()=>a(e)), [e, a])
              , h = (0,
            Y.useMemo)((()=>c.findIndex((e=>e === t))), [t, c]);
            return (0,
            z.jsx)(ck, {
                className: rk.row,
                children: (0,
                z.jsxs)(np, {
                    direction: kg.Horizontal,
                    children: [(0,
                    z.jsx)("div", {
                        className: gz.left,
                        children: (0,
                        z.jsx)(fS, {
                            theme: Ok,
                            initialFocused: e,
                            content: c.map(((e,t)=>(0,
                            z.jsx)(bS, {
                                focusKey: t,
                                value: t,
                                selected: h === t,
                                onChange: u,
                                children: (0,
                                z.jsx)(gu, {
                                    value: au(e)
                                })
                            }, t))),
                            children: (0,
                            z.jsx)(xS, {
                                sounds: cz,
                                className: rk.dropdownToggle,
                                disabled: l || r || c.length <= 1,
                                children: t
                            })
                        })
                    }), (0,
                    z.jsxs)("div", {
                        className: gz.right,
                        children: [(0,
                        z.jsx)(oI, {
                            showHint: !0,
                            value: n,
                            className: Zu()(rk.input, gz.input),
                            onChange: d,
                            placeholder: (0,
                            z.jsx)(gu, {
                                value: o
                            }),
                            disabled: l
                        }), (0,
                        z.jsx)(ak, {
                            className: gz.deleteButton,
                            src: "Media/Glyphs/Trash.svg",
                            selected: !1,
                            disabled: l,
                            onSelect: m,
                            tinted: !0
                        })]
                    })]
                })
            })
        }
        ;
        X.add("game-ui/editor/widgets/localization-field/localization-field.tsx", {
            get BoundLocalizationField() {
                return pz
            },
            set BoundLocalizationField(e) {
                pz = e
            },
            get LocalizationField() {
                return fz
            },
            set LocalizationField(e) {
                fz = e
            }
        });
        let vz = {
            backSrc: "Media/Glyphs/ThickStrokeArrowLeft.svg",
            "page-layout": "page-layout_JSP editor-widget_QQl",
            pageLayout: "page-layout_JSP editor-widget_QQl",
            header: "header_u77",
            "back-button": "back-button_rnO",
            backButton: "back-button_rnO",
            title: "title_zOE"
        };
        X.add("game-ui/editor/widgets/page-layout/page-layout.module.scss", {
            get classes() {
                return vz
            },
            set classes(e) {
                Object.assign(vz, e)
            }
        });
        const _z = vz;
        var bz = ({parent: e, path: t, props: n, children: s})=>{
            const i = ZR(e, t)
              , a = pD(n.flex)
              , o = (0,
            Y.useContext)(gD)
              , r = YM(MR, i);
            return (0,
            z.jsx)(Tz, {
                title: (0,
                z.jsx)(gu, {
                    value: n.title
                }),
                style: a,
                onBack: n.hasBackAction ? r : void 0,
                children: (0,
                z.jsx)(hD, {
                    parent: i,
                    components: o,
                    data: s
                })
            })
        }
          , Tz = ({title: e, className: t, style: n, children: s, onBack: i})=>{
            const a = Dm();
            return (0,
            z.jsx)(Fg, {
                onAction: i,
                children: (0,
                z.jsxs)("div", {
                    className: Zu()(_z.pageLayout, t),
                    style: n,
                    children: [(0,
                    z.jsxs)("div", {
                        className: _z.header,
                        children: [!a && null != i && (0,
                        z.jsx)(Eg, {
                            tooltip: (0,
                            z.jsx)(_c.Common.GO_BACK_TOOLTIP, {}),
                            children: (0,
                            z.jsx)(tb, {
                                tinted: !0,
                                focusKey: Sg,
                                src: _z.backSrc,
                                className: _z.backButton,
                                onSelect: i
                            })
                        }), (0,
                        z.jsx)("div", {
                            className: _z.title,
                            children: e
                        })]
                    }), s]
                })
            })
        }
        ;
        X.add("game-ui/editor/widgets/page-layout/page-layout.tsx", {
            get BoundPageLayout() {
                return bz
            },
            set BoundPageLayout(e) {
                bz = e
            },
            get PageLayout() {
                return Tz
            },
            set PageLayout(e) {
                Tz = e
            }
        });
        var Ez = n(262)
          , Iz = n.n(Ez);
        function Sz(e, t, n, s) {
            const i = yz(e, n ?? t, s);
            return (0,
            Y.useEffect)((()=>{
                i.setEndValue(t)
            }
            ), [i, t]),
            jz(i)
        }
        function yz(e, t=0, n=!1) {
            const s = (0,
            Y.useRef)(t)
              , i = (0,
            Y.useMemo)((()=>(new (Iz().SpringSystem)).createSpring().setCurrentValue(s.current).setAtRest()), [])
              , a = Pp(e);
            return (0,
            Y.useEffect)((()=>{
                i.setSpringConfig(a)
            }
            ), [i, a]),
            (0,
            Y.useEffect)((()=>{
                i.setOvershootClampingEnabled(n)
            }
            ), [i, n]),
            i
        }
        function jz(e) {
            const [t,n] = (0,
            Y.useState)(e.getCurrentValue());
            return (0,
            Y.useEffect)((()=>{
                const t = {
                    onSpringUpdate(e) {
                        n(e.getCurrentValue())
                    }
                };
                return e.addListener(t),
                ()=>{
                    e.removeListener(t)
                }
            }
            ), [e]),
            t
        }
        X.add("game-ui/common/animations/spring-hooks.tsx", {
            get useSpringAnimation() {
                return Sz
            },
            set useSpringAnimation(e) {
                Sz = e
            },
            get useSpring() {
                return yz
            },
            set useSpring(e) {
                yz = e
            },
            get useSpringValue() {
                return jz
            },
            set useSpringValue(e) {
                jz = e
            }
        });
        let Cz = {
            "page-view": "page-view_PUO editor-widget_QQl",
            pageView: "page-view_PUO editor-widget_QQl",
            page: "page_hHC",
            active: "active_xN8"
        };
        X.add("game-ui/editor/widgets/page-view/page-view.module.scss", {
            get classes() {
                return Cz
            },
            set classes(e) {
                Object.assign(Cz, e)
            }
        });
        const Nz = Cz;
        var wz = ({parent: e, path: t, props: n, children: s})=>{
            const i = ZR(e, t)
              , a = pD(n.flex)
              , o = (0,
            Y.useContext)(gD)
              , r = (0,
            Y.useMemo)((()=>s.map((e=>(0,
            z.jsx)(mD, {
                parent: i,
                components: o,
                data: e
            }, e.path)))), [s, i, o]);
            return (0,
            z.jsx)(Pz, {
                currentPage: n.currentPage,
                pages: r,
                style: a
            })
        }
        ;
        const Oz = {
            tension: 150,
            friction: 15
        };
        var Pz = ({currentPage: e, pages: t, className: n, style: s})=>{
            const i = Sz(Oz, e, void 0, !0);
            return (0,
            z.jsx)("div", {
                className: Zu()(Nz.pageView, n),
                style: s,
                children: (0,
                z.jsx)(op, {
                    focused: e,
                    children: t.map(((t,n)=>(0,
                    z.jsx)("div", {
                        className: Zu()(Nz.page, n === e && Nz.active),
                        style: {
                            "--offset": n - i
                        },
                        children: (0,
                        z.jsx)(np, {
                            focusKey: n,
                            children: t
                        })
                    }, n)))
                })
            })
        }
        ;
        X.add("game-ui/editor/widgets/page-view/page-view.tsx", {
            get BoundPageView() {
                return wz
            },
            set BoundPageView(e) {
                wz = e
            },
            get PageView() {
                return Pz
            },
            set PageView(e) {
                Pz = e
            }
        });
        let Lz = {
            row: "row_uw4 editor-widget_QQl"
        };
        X.add("game-ui/editor/widgets/Row/row.module.scss", {
            get classes() {
                return Lz
            },
            set classes(e) {
                Object.assign(Lz, e)
            }
        });
        const Az = Lz;
        var Mz = ({parent: e, path: t, props: n, children: s})=>{
            const i = ZR(e, t)
              , a = pD(n.flex)
              , o = (0,
            Y.useContext)(gD);
            return (0,
            z.jsx)(Rz, {
                style: a,
                children: (0,
                z.jsx)(hD, {
                    parent: i,
                    components: o,
                    data: s
                })
            })
        }
          , Rz = ({className: e, style: t, children: n})=>(0,
        z.jsx)("div", {
            className: Zu()(Az.row, e),
            style: t,
            children: (0,
            z.jsx)(np, {
                children: n
            })
        });
        X.add("game-ui/editor/widgets/Row/row.tsx", {
            get BoundRow() {
                return Mz
            },
            set BoundRow(e) {
                Mz = e
            },
            get Row() {
                return Rz
            },
            set Row(e) {
                Rz = e
            }
        });
        let kz = {
            scrollable: "scrollable_VJQ editor-widget_QQl"
        };
        X.add("game-ui/editor/widgets/scrollable/scrollable.module.scss", {
            get classes() {
                return kz
            },
            set classes(e) {
                Object.assign(kz, e)
            }
        });
        const Dz = kz;
        var Fz = ({parent: e, path: t, props: n, children: s})=>{
            const i = ZR(e, t)
              , a = pD(n.flex)
              , o = (0,
            Y.useContext)(gD);
            return (0,
            z.jsx)(Uz, {
                style: a,
                children: (0,
                z.jsx)(hD, {
                    parent: i,
                    components: o,
                    data: s
                })
            })
        }
          , Uz = ({className: e, style: t, children: n, vertical: s=!0, horizontal: i=!1})=>(0,
        z.jsx)(mb, {
            trackVisibility: "scrollable",
            className: Zu()(Dz.scrollable, e),
            style: t,
            vertical: s,
            horizontal: i,
            children: (0,
            z.jsx)(np, {
                children: n
            })
        });
        X.add("game-ui/editor/widgets/scrollable/scrollable.tsx", {
            get BoundScrollable() {
                return Fz
            },
            set BoundScrollable(e) {
                Fz = e
            },
            get EditorScrollable() {
                return Uz
            },
            set EditorScrollable(e) {
                Uz = e
            }
        });
        let Bz = {
            popupMinHeight: "300rem",
            "search-field": "search-field_jRt editor-widget_QQl",
            searchField: "search-field_jRt editor-widget_QQl",
            input: "input_UVn",
            actions: "actions_qt8",
            action: "action_Qra",
            popup: "popup_OTO",
            item: "item_NeK",
            value: "value_Mug",
            "favorite-action": "favorite-action_s2e",
            favoriteAction: "favorite-action_s2e",
            "favorite-icon": "favorite-icon_JvS",
            favoriteIcon: "favorite-icon_JvS"
        };
        X.add("game-ui/editor/widgets/search-field/search-field.module.scss", {
            get classes() {
                return Bz
            },
            set classes(e) {
                Object.assign(Bz, e)
            }
        });
        const Gz = Bz;
        var Vz = ({parent: e, path: t, props: n})=>{
            const s = ZR(e, t)
              , i = YM(RR, s)
              , a = YM(hR, s);
            return (0,
            z.jsx)(Hz, {
                value: n.value,
                valueIsFavorite: n.valueIsFavorite,
                suggestions: n.suggestions,
                onChange: i,
                onChangeFavorite: n.hasFavorites ? a : void 0
            })
        }
          , Hz = ({value: e, valueIsFavorite: t, suggestions: n, onChange: s, onChangeFavorite: i})=>{
            const a = Dm()
              , o = (0,
            Y.useRef)(null)
              , [r,l] = (0,
            Y.useState)(!1)
              , c = (0,
            Y.useCallback)((e=>s(e.target.value || "")), [s])
              , u = (0,
            Y.useCallback)((()=>l(!0)), [])
              , d = (0,
            Y.useCallback)((()=>l(!1)), [])
              , m = (0,
            Y.useMemo)((()=>null != i ? ()=>i(e, !t) : null), [t, e, i])
              , h = (0,
            Y.useCallback)((()=>s("")), [s])
              , g = (0,
            Y.useCallback)((e=>{
                s(e),
                o.current?.blur()
            }
            ), [s])
              , p = Vm(Gz.popupMinHeight)
              , f = (0,
            z.jsx)(mb, {
                className: Gz.scrollable,
                children: n.map(((e,t)=>(0,
                z.jsx)(Kz, {
                    value: e.value,
                    favorite: e.favorite,
                    onSelect: g,
                    onChangeFavorite: i
                }, t)))
            });
            return (0,
            z.jsx)(rS, {
                visible: !a && r && n.length > 0,
                direction: "down",
                minHeight: p,
                className: Gz.popup,
                content: f,
                minWidth: !0,
                children: (0,
                z.jsx)(xd, {
                    children: (0,
                    z.jsxs)("div", {
                        className: Gz.searchField,
                        children: [(0,
                        z.jsx)(oI, {
                            ref: o,
                            value: e,
                            placeholder: (0,
                            z.jsx)(_c.Editor.SEARCH_PLACEHOLDER, {}),
                            className: Gz.input,
                            onChange: c,
                            onFocus: u,
                            onBlur: d
                        }), !a && e && (0,
                        z.jsxs)("div", {
                            className: Gz.actions,
                            children: [(0,
                            z.jsx)(Eg, {
                                tooltip: (0,
                                z.jsx)(_c.Common.CLEAR_SEARCH_TOOLTIP, {}),
                                children: (0,
                                z.jsx)(tb, {
                                    tinted: !0,
                                    focusKey: Sg,
                                    src: "Media/Glyphs/Clear.svg",
                                    className: Gz.action,
                                    onSelect: h,
                                    onMouseDown: r ? Wz : void 0
                                })
                            }), null != m && (0,
                            z.jsx)(Eg, {
                                tooltip: t ? (0,
                                z.jsx)(_c.Editor.REMOVE_FAVORITE, {}) : (0,
                                z.jsx)(_c.Editor.ADD_FAVORITE, {}),
                                children: (0,
                                z.jsx)(tb, {
                                    tinted: !0,
                                    focusKey: Sg,
                                    src: t ? "Media/Glyphs/StarFilled.svg" : "Media/Glyphs/StarOutline.svg",
                                    className: Gz.action,
                                    onSelect: m,
                                    onMouseDown: r ? Wz : void 0
                                })
                            })]
                        })]
                    })
                })
            })
        }
        ;
        const Kz = ({value: e, favorite: t, onSelect: n, onChangeFavorite: s})=>{
            const i = YM(n, e)
              , a = (0,
            Y.useMemo)((()=>null != s ? ()=>s(e, !t) : null), [t, e, s]);
            return (0,
            z.jsxs)("div", {
                className: Gz.item,
                children: [(0,
                z.jsx)("div", {
                    className: Gz.value,
                    onMouseDown: Wz,
                    onClick: i,
                    children: e
                }), null != a && (0,
                z.jsx)("div", {
                    className: Gz.favoriteAction,
                    onMouseDown: Wz,
                    onClick: a,
                    children: (0,
                    z.jsx)(Z_, {
                        src: t ? "Media/Glyphs/StarFilled.svg" : "Media/Glyphs/StarOutline.svg",
                        className: Gz.favoriteIcon
                    })
                })]
            })
        }
        ;
        function Wz(e) {
            e.preventDefault()
        }
        X.add("game-ui/editor/widgets/search-field/popup-search-field.tsx", {
            get BoundPopupSearchField() {
                return Vz
            },
            set BoundPopupSearchField(e) {
                Vz = e
            },
            get PopupSearchField() {
                return Hz
            },
            set PopupSearchField(e) {
                Hz = e
            }
        });
        var zz = ({parent: e, path: t, props: n})=>{
            const s = YM(RR, ZR(e, t));
            return (0,
            z.jsx)(Yz, {
                value: n.value,
                onChange: s
            })
        }
          , Yz = ({value: e, onChange: t})=>{
            const n = Dm()
              , s = (0,
            Y.useCallback)((e=>t(e.target.value || "")), [t])
              , i = (0,
            Y.useCallback)((()=>t("")), [t]);
            return (0,
            z.jsxs)("div", {
                className: Gz.searchField,
                children: [(0,
                z.jsx)(oI, {
                    value: e,
                    placeholder: (0,
                    z.jsx)(_c.Editor.SEARCH_PLACEHOLDER, {}),
                    className: Gz.input,
                    onChange: s
                }), !n && e && (0,
                z.jsx)("div", {
                    className: Gz.actions,
                    children: (0,
                    z.jsx)(Eg, {
                        tooltip: (0,
                        z.jsx)(_c.Common.CLEAR_SEARCH_TOOLTIP, {}),
                        children: (0,
                        z.jsx)(tb, {
                            tinted: !0,
                            focusKey: Sg,
                            src: "Media/Glyphs/Clear.svg",
                            className: Gz.action,
                            onSelect: i,
                            onMouseDown: $z
                        })
                    })
                })]
            })
        }
        ;
        function $z(e) {
            e.preventDefault()
        }
        X.add("game-ui/editor/widgets/search-field/search-field.tsx", {
            get BoundSearchField() {
                return zz
            },
            set BoundSearchField(e) {
                zz = e
            },
            get SearchField() {
                return Yz
            },
            set SearchField(e) {
                Yz = e
            }
        });
        let qz = {
            toggle: "toggle_GUy",
            checkmark: "checkmark_Bc3"
        };
        X.add("game-ui/editor/themes/editor-small-checkbox.module.scss", {
            get classes() {
                return qz
            },
            set classes(e) {
                Object.assign(qz, e)
            }
        });
        const Xz = qz;
        let Qz = {
            "editor-section": "editor-section_zoX",
            editorSection: "editor-section_zoX",
            header: "header_MLk",
            primary: "primary_j00",
            toggle: "toggle_XlP",
            action: "action_T_m",
            icon: "icon_v5n",
            label: "label_OqN",
            "action-checkbox": "action-checkbox_Z8G",
            actionCheckbox: "action-checkbox_Z8G",
            content: "content_yUv"
        };
        X.add("game-ui/editor/widgets/section/editor-section.module.scss", {
            get classes() {
                return Qz
            },
            set classes(e) {
                Object.assign(Qz, e)
            }
        });
        const Zz = Qz;
        var Jz = ({parent: e, path: t, props: n, children: s})=>{
            const i = ZR(e, t)
              , a = (0,
            Y.useContext)(gD)
              , o = YM(oR, i)
              , r = YM(kR, i)
              , l = YM(rR, i);
            return (0,
            z.jsx)(tY, {
                title: (0,
                z.jsx)(gu, {
                    value: n.displayName
                }),
                tooltip: n.tooltip,
                active: n.active,
                primary: n.primary,
                headerColor: null != n.color ? xN(n.color) : void 0,
                expanded: n.expanded,
                onDelete: n.deletable ? o : void 0,
                onActiveChange: n.activatable ? l : void 0,
                onExpandedChange: n.expandable ? r : void 0,
                disabled: n.disabled,
                children: (0,
                z.jsx)(hD, {
                    parent: i,
                    components: a,
                    data: s
                })
            })
        }
          , eY = e=>{
            const [t,n] = (0,
            Y.useState)(!0);
            return (0,
            z.jsx)(tY, {
                ...e,
                expanded: t,
                onExpandedChange: n
            })
        }
          , tY = ({title: e, active: t=!0, primary: n, headerColor: s, expanded: i, className: a, tooltip: o, children: r, onDelete: l, onActiveChange: c, onExpandedChange: u, disabled: d})=>{
            const m = (0,
            Y.useCallback)((()=>{
                null != u && u(!i)
            }
            ), [i, u])
              , h = (0,
            Y.useCallback)((()=>{
                null != c && c(!t)
            }
            ), [t, c]);
            return (0,
            z.jsxs)("div", {
                className: Zu()(Zz.editorSection, n && Zz.primary, a),
                children: [(0,
                z.jsx)("div", {
                    className: Zz.header,
                    style: {
                        backgroundColor: s
                    },
                    children: (0,
                    z.jsx)(Eg, {
                        tooltip: o && (0,
                        z.jsx)(gu, {
                            value: o
                        }),
                        children: (0,
                        z.jsxs)(np, {
                            direction: kg.Horizontal,
                            children: [null != u ? (0,
                            z.jsx)(qI, {
                                src: i ? "Media/Glyphs/ThickStrokeArrowDown.svg" : "Media/Glyphs/ThickStrokeArrowRight.svg",
                                theme: Zz,
                                className: Zz.toggle,
                                onSelect: m,
                                children: e
                            }) : (0,
                            z.jsx)(qI, {
                                src: "Media/Glyphs/Circle.svg",
                                theme: Zz,
                                className: Zz.toggle,
                                disabled: !0,
                                children: e
                            }), l && (0,
                            z.jsx)(Eg, {
                                tooltip: (0,
                                z.jsx)(_c.Common.DELETE_TOOLTIP, {}),
                                children: (0,
                                z.jsx)(tb, {
                                    tinted: !0,
                                    src: "Media/Glyphs/Trash.svg",
                                    className: Zz.action,
                                    onSelect: l,
                                    disabled: d
                                })
                            }), c && (0,
                            z.jsx)(Eg, {
                                tooltip: (0,
                                z.jsx)(_c.Editor.ACTIVE_TOOLTIP, {}),
                                children: (0,
                                z.jsx)(U_, {
                                    className: Zz.action,
                                    onSelect: h,
                                    disabled: d,
                                    children: (0,
                                    z.jsx)(Hb, {
                                        focusKey: Sg,
                                        checked: t,
                                        theme: Xz,
                                        className: Zz.actionCheckbox,
                                        onChange: c,
                                        disabled: d
                                    })
                                })
                            })]
                        })
                    })
                }), null != u && i && (0,
                z.jsx)("div", {
                    className: Zz.content,
                    children: r
                })]
            })
        }
        ;
        function nY({type: e, data: t, options: n, mergeCallback: s=iY, ...i}) {
            const a = (0,
            Y.useRef)(null)
              , o = (0,
            Y.useRef)(null)
              , r = (0,
            Y.useRef)(null)
              , l = hm(r) ?? Ad
              , c = l.x > 0 && l.y > 0
              , u = Hm()
              , d = (0,
            Y.useCallback)((e=>{
                e.canvas.style.width = 100 * Math.trunc(l.x) / l.x + "%",
                e.canvas.style.height = 100 * Math.trunc(l.y) / l.y + "%"
            }
            ), [l])
              , m = (0,
            Y.useMemo)((()=>({
                ...n,
                responsive: !1,
                maintainAspectRatio: !1,
                devicePixelRatio: u,
                onResize: d
            })), [u, d, n]);
            (0,
            Y.useEffect)((()=>{
                if (c)
                    if (null != o.current && (o.current.canvas === a.current && o.current.config.type === e || (o.current.destroy(),
                    o.current = null)),
                    null == o.current) {
                        if (null == a.current)
                            return;
                        const n = {
                            datasets: []
                        };
                        sY(n, t, s),
                        o.current = new Pa(a.current,{
                            type: e,
                            data: n,
                            options: m
                        })
                    } else
                        sY(o.current.data, t, s),
                        o.current.options = m,
                        o.current.update()
            }
            ), [c, e, t, m, s]),
            (0,
            Y.useEffect)((()=>{
                null != o.current && c && (o.current.resize(l.x / u, l.y / u),
                o.current.update("none"),
                d(o.current))
            }
            ), [c, l, u, d]),
            (0,
            Y.useEffect)((()=>()=>{
                null != o.current && o.current.destroy()
            }
            ), []);
            const h = (0,
            Y.useMemo)((()=>({
                width: "300px",
                height: "150px",
                display: "flex"
            })), []);
            return (0,
            z.jsx)("div", {
                ref: r,
                ...i,
                children: (0,
                z.jsx)("canvas", {
                    ref: a,
                    style: h
                })
            })
        }
        function sY(e, t, n) {
            t !== e && Object.assign(e, {
                ...t,
                datasets: t.datasets.map((t=>{
                    const s = e.datasets.find((e=>e.label === t.label && e.type === t.type));
                    if (null != s) {
                        if (t !== s) {
                            const e = n(s.data, t.data);
                            Object.assign(s, {
                                ...t,
                                mergedData: e
                            })
                        }
                        return s
                    }
                    return {
                        ...t,
                        data: [...t.data]
                    }
                }
                ))
            })
        }
        function iY(e, t) {
            const n = new Array(t.length);
            return Object.assign(n, e, t),
            n
        }
        function aY(e, t) {
            let n = 0;
            for (let s = 0; s < t.length; s++) {
                const i = {
                    ...t[s]
                };
                let a = 0;
                for (; n < e.length && !(e[n].x > i.x); n++)
                    e[n].x !== i.x && a++;
                n > 0 && e[n - 1].x === i.x ? (e[n - 1] = i,
                0 !== a && (e.splice(n - 1 - a, a),
                n -= a)) : (e.splice(n - a, a, i),
                n++,
                n -= a)
            }
            const s = e.length - n;
            return s > 0 && e.splice(n, s),
            e
        }
        X.add("game-ui/editor/widgets/section/editor-section.tsx", {
            get BoundEditorSection() {
                return Jz
            },
            set BoundEditorSection(e) {
                Jz = e
            },
            get EditorSection() {
                return eY
            },
            set EditorSection(e) {
                eY = e
            },
            get EditorSectionBase() {
                return tY
            },
            set EditorSectionBase(e) {
                tY = e
            }
        }),
        Pa.register(Wa, eo, Ya, Qs, ei, ii, nr, or, wo, Zo, Ao),
        Pa.defaults.font.family = "Overpass",
        Pa.defaults.responsive = !1,
        Pa.defaults.maintainAspectRatio = !1,
        Pa.defaults.animation = !1,
        Pa.defaults.plugins.tooltip.enabled = !1,
        Pa.defaults.plugins.legend.display = !1,
        Pa.defaults.events = [],
        Pa.defaults.transitions.resize.animation.duration = 0,
        Pa.defaults.scales.linear.ticks.callback = e=>e.toString(),
        X.add("game-ui/common/charts/responsive-chart/responsive-chart.tsx", {
            get ResponsiveChart() {
                return nY
            },
            set ResponsiveChart(e) {
                nY = e
            },
            get defaultMergeCallback() {
                return iY
            },
            set defaultMergeCallback(e) {
                iY = e
            },
            get xyMergeCallback() {
                return aY
            },
            set xyMergeCallback(e) {
                aY = e
            }
        });
        let oY = {
            chart: "chart_SQk"
        };
        X.add("game-ui/editor/widgets/time-of-day-weights-chart/time-of-day-weights-chart.module.scss", {
            get classes() {
                return oY
            },
            set classes(e) {
                Object.assign(oY, e)
            }
        });
        const rY = oY;
        var lY = ({props: e})=>{
            const t = (0,
            Y.useMemo)((()=>({
                datasets: [{
                    data: [e.value.x, e.value.y, e.value.z, e.value.w, e.value.x]
                }]
            })), [e.value.x, e.value.y, e.value.z, e.value.w])
              , n = function() {
                const e = sl(Ll);
                return (0,
                Y.useMemo)((()=>({
                    layout: {
                        padding: {
                            top: 8,
                            right: 8,
                            bottom: 0,
                            left: 8
                        }
                    },
                    elements: {
                        line: {
                            fill: !0,
                            tension: 0,
                            borderWidth: 2,
                            borderColor: "#ffb543",
                            backgroundColor: "rgba(255, 181, 67, 0.3)"
                        },
                        point: {
                            radius: 4,
                            backgroundColor: "#ffb543"
                        }
                    },
                    scales: {
                        y: {
                            display: !1,
                            min: 0,
                            suggestedMax: 1,
                            labels: [],
                            grid: {
                                color: "rgba(255, 255, 255, 0.5)",
                                lineWidth: e=>0 === e.tick.value ? 2 : 1
                            }
                        },
                        x: {
                            labels: ["00", "06", "12", "18", "00"],
                            grid: {
                                color: "rgba(255, 255, 255, 0.4)",
                                borderColor: "rgba(255, 255, 255, 0.4)",
                                lineWidth: 1,
                                borderWidth: 1
                            },
                            ticks: {
                                font: {
                                    size: 14 * e,
                                    weight: "bold"
                                },
                                color: "rgba(255, 255, 255, 0.6)",
                                padding: 0,
                                autoSkip: !1
                            },
                            beginAtZero: !0
                        }
                    }
                })), [e])
            }();
            return (0,
            z.jsx)(lk, {
                children: (0,
                z.jsx)(nY, {
                    type: "line",
                    data: t,
                    options: n,
                    className: rY.chart
                })
            })
        }
        ;
        X.add("game-ui/editor/widgets/time-of-day-weights-chart/time-of-day-weights-chart.tsx", {
            get TimeOfDayWeightsChart() {
                return lY
            },
            set TimeOfDayWeightsChart(e) {
                lY = e
            }
        });
        var cY = ({parent: e, data: t})=>(0,
        z.jsx)(hD, {
            parent: e,
            components: uY,
            data: t
        })
          , uY = {
            [NR.Column]: _D,
            [NR.Row]: Mz,
            [NR.Scrollable]: Fz,
            [NR.PageView]: wz,
            [NR.PageLayout]: bz,
            [$M.ItemPicker]: HW,
            [$M.ItemPickerFooter]: $W,
            [$M.SearchField]: zz,
            [$M.PopupSearchField]: Vz,
            [NR.Divider]: CD,
            [NR.Button]: Sk,
            [NR.ButtonRow]: yk,
            [NR.IconButton]: tk,
            [NR.IconButtonGroup]: nk,
            [NR.Group]: SB,
            [NR.ExpandableGroup]: yB,
            [NR.PagedList]: ZW,
            [NR.ValueField]: ({props: e})=>(0,
            z.jsx)(ck, {
                children: (0,
                z.jsxs)("div", {
                    style: {
                        color: "red",
                        whiteSpace: "pre",
                        fontSize: "12px"
                    },
                    children: [(0,
                    z.jsx)(gu, {
                        value: e.displayName
                    }), e.value]
                })
            }),
            [NR.ToggleField]: dY(XV),
            [NR.IntInputField]: dY(EV),
            [NR.IntSliderField]: dY(nG),
            [NR.UIntInputField]: dY(SV),
            [NR.UIntSliderField]: dY(sG),
            [NR.TimeBoundsSliderField]: dY(pG),
            [NR.Int2InputField]: dY(yV),
            [NR.Int3InputField]: dY(jV),
            [NR.Int4InputField]: dY(CV),
            [NR.FloatInputField]: dY(DB),
            [NR.FloatSliderField]: dY(iG),
            [NR.RangedSliderField]: dY(MV),
            [NR.GradientSliderField]: dY(TV),
            [NR.TimeSliderField]: dY(cG),
            [NR.Float2InputField]: dY(UB),
            [NR.Float3InputField]: dY(BB),
            [NR.EulerAnglesField]: dY(BB),
            [NR.Float4InputField]: dY(GB),
            [NR.StringInputField]: Dk,
            [NR.Bounds1SliderField]: dY(gG),
            [NR.Bounds1InputField]: dY(dG),
            [NR.Bounds2InputField]: dY(mG),
            [NR.Bounds3InputField]: dY(hG),
            [NR.ColorField]: dY(iV),
            [NR.Bezier4x3Field]: dY(qB),
            [NR.EnumField]: gV,
            [NR.FlagsField]: pV,
            [NR.DropdownField]: Ak,
            [NR.AnimationCurveField]: $B,
            [NR.PopupValueField]: LV,
            [NR.DirectoryPickerButton]: cV,
            [NR.ImageField]: EH,
            [NR.LocalizedValueField]: QV,
            [NR.Label]: Xk,
            [$M.EditorSection]: Jz,
            [$M.Compass]: ID,
            [$M.TimeOfDayWeightsChart]: lY,
            [$M.LocalizationField]: pz,
            [$M.FilterMenu]: tH,
            [$M.HierarchyMenu]: fH,
            [$M.SeasonsField]: qV,
            [$M.ModdingBetaBanner]: WM,
            [$M.ErrorLabel]: zk,
            [$M.StringInputFieldWithError]: $k,
            [$M.ExternalLinkField]: Hk,
            [$M.ProgressIndicator]: sD,
            [$M.LargeIconButton]: qk,
            [$M.ListField]: pk,
            [$M.DLCInfoField]: bk
        };
        function dY(e) {
            const t = ({parent: t, path: n, props: s})=>{
                const i = YM(RR, ZR(t, n));
                return (0,
                z.jsx)(e, {
                    ...s,
                    label: (0,
                    z.jsx)(gu, {
                        value: s.displayName
                    }),
                    onChange: i
                })
            }
            ;
            return t.displayName = e.displayName ?? e.name,
            t
        }
        X.add("game-ui/editor/widgets/editor-widget-renderer.tsx", {
            get EditorWidgetListRenderer() {
                return cY
            },
            set EditorWidgetListRenderer(e) {
                cY = e
            },
            get editorWidgetComponents() {
                return uY
            },
            set editorWidgetComponents(e) {
                uY = e
            }
        });
        var mY = ({titleId: e, messageId: t, options: n})=>{
            const s = sc()
              , i = rV(s.translate(t, t) || "");
            return (0,
            z.jsx)(UI, {
                onClose: void 0,
                children: (0,
                z.jsxs)(np, {
                    children: [e && (0,
                    z.jsx)("div", {
                        className: FI.title,
                        children: (0,
                        z.jsx)(cc, {
                            id: e,
                            fallback: e
                        })
                    }), t && (0,
                    z.jsx)(Cb, {
                        children: i
                    }), (0,
                    z.jsx)("div", {
                        className: FI.buttonColumn,
                        children: n.map(((e,t)=>(0,
                        z.jsx)(hY, {
                            id: e.id,
                            index: t
                        }, t)))
                    })]
                })
            })
        }
        ;
        const hY = ({id: e, index: t})=>{
            const n = (0,
            Y.useCallback)((()=>II(t)), [t]);
            return (0,
            z.jsx)(U_, {
                theme: eI,
                onSelect: n,
                children: (0,
                z.jsx)(cc, {
                    id: e,
                    fallback: e
                })
            }, e)
        }
        ;
        X.add("game-ui/menu/components/paradox/dialogs/multi-option-dialog.tsx", {
            get MultiOptionDialog() {
                return mY
            },
            set MultiOptionDialog(e) {
                mY = e
            }
        });
        var gY = e=>(0,
        z.jsxs)(BI, {
            ...e,
            children: [(0,
            z.jsxs)("div", {
                className: FI.buttonRow,
                children: [(0,
                z.jsx)(U_, {
                    theme: nI,
                    onSelect: RI,
                    children: (0,
                    z.jsx)(_c.Paradox.TERMS_OF_USE, {})
                }), (0,
                z.jsx)(U_, {
                    theme: nI,
                    onSelect: kI,
                    children: (0,
                    z.jsx)(_c.Paradox.PRIVACY_POLICY, {})
                })]
            }), (0,
            z.jsxs)("div", {
                className: FI.buttonRow,
                children: [(0,
                z.jsx)(U_, {
                    theme: eI,
                    onSelect: LI,
                    children: (0,
                    z.jsx)(_c.Paradox.LINK_ACCOUNT_BUTTON, {})
                }), (0,
                z.jsx)(U_, {
                    theme: nI,
                    onSelect: EI,
                    children: (0,
                    z.jsx)(_c.Paradox.SKIP_BUTTON, {})
                })]
            })]
        });
        X.add("game-ui/menu/components/paradox/dialogs/account-link-dialog.tsx", {
            get AccountLinkDialog() {
                return gY
            },
            set AccountLinkDialog(e) {
                gY = e
            }
        });
        var pY = e=>(0,
        z.jsx)(BI, {
            ...e,
            children: (0,
            z.jsxs)("div", {
                className: FI.buttonRow,
                children: [(0,
                z.jsx)(U_, {
                    theme: eI,
                    onSelect: AI,
                    children: (0,
                    z.jsx)(_c.Common.YES, {})
                }), (0,
                z.jsx)(U_, {
                    theme: nI,
                    onSelect: EI,
                    children: (0,
                    z.jsx)(_c.Common.NO, {})
                })]
            })
        });
        X.add("game-ui/menu/components/paradox/dialogs/account-link-overwrite-dialog.tsx", {
            get AccountLinkOverwriteDialog() {
                return pY
            },
            set AccountLinkOverwriteDialog(e) {
                pY = e
            }
        });
        var fY = e=>(0,
        z.jsx)(BI, {
            ...e,
            children: (0,
            z.jsx)("div", {
                className: FI.buttonRow,
                children: (0,
                z.jsx)(U_, {
                    theme: eI,
                    onSelect: EI,
                    children: (0,
                    z.jsx)(_c.Common.OK, {})
                })
            })
        });
        X.add("game-ui/menu/components/paradox/dialogs/confirmation-dialog.tsx", {
            get ConfirmationDialog() {
                return fY
            },
            set ConfirmationDialog(e) {
                fY = e
            }
        });
        var xY = ({messageId: e, message: t})=>{
            const n = ic((0,
            z.jsx)(_c.Paradox.UNKNOWN_ERROR, {}));
            return (0,
            z.jsxs)(UI, {
                onClose: EI,
                children: [null != e && (0,
                z.jsx)("p", {
                    children: (0,
                    z.jsx)(cc, {
                        id: e,
                        fallback: n
                    })
                }), null != t && (0,
                z.jsx)("p", {
                    children: t
                }), null == e && null == t && (0,
                z.jsx)("p", {
                    children: n
                }), (0,
                z.jsx)("div", {
                    className: FI.buttonRow,
                    children: (0,
                    z.jsx)(U_, {
                        theme: eI,
                        onSelect: EI,
                        children: (0,
                        z.jsx)(_c.Common.CLOSE, {})
                    })
                })]
            })
        }
        ;
        X.add("game-ui/menu/components/paradox/dialogs/error-dialog.tsx", {
            get ErrorDialog() {
                return xY
            },
            set ErrorDialog(e) {
                xY = e
            }
        });
        var vY, _Y = ({text: e, agreementRequired: t, confirmLabel: n})=>{
            const s = XE()
              , i = ny();
            return (0,
            Y.useEffect)((()=>s.scrollTo(0, 0)), [s, e]),
            (0,
            z.jsx)(UI, {
                wide: !0,
                onClose: t ? void 0 : EI,
                children: (0,
                z.jsx)(sI, {
                    controller: s,
                    children: (0,
                    z.jsxs)(np, {
                        initialFocused: "ok",
                        children: [(0,
                        z.jsx)(hb, {
                            controller: s,
                            className: FI.documentScrollable,
                            trackVisibility: "always",
                            hintClassName: FI.scrollHint,
                            labelClassName: FI.scrollHintLabel,
                            focusableItems: !0,
                            children: (0,
                            z.jsx)("div", {
                                className: FI.documentText,
                                children: (0,
                                z.jsx)(Cb, {
                                    renderer: i,
                                    onLinkSelect: OI,
                                    children: e
                                })
                            })
                        }), (0,
                        z.jsx)("div", {
                            className: FI.buttonRow,
                            children: (0,
                            z.jsx)(U_, {
                                focusKey: "ok",
                                theme: eI,
                                onSelect: t ? MI : EI,
                                children: null != n ? (0,
                                z.jsx)(cc, {
                                    id: n
                                }) : (0,
                                z.jsx)(_c.Common.OK, {})
                            })
                        })]
                    })
                })
            })
        }
        ;
        function bY(e) {
            return /^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i.test(e)
        }
        function TY(e) {
            return e.replace(/[<>:;,?"*|/\\]/g, "")
        }
        function EY(e) {
            return !Vr(e) && /^[^<>:;,?"*|/\\]+$/g.test(e)
        }
        X.add("game-ui/menu/components/paradox/dialogs/legal-document-dialog.tsx", {
            get LegalDocumentDialog() {
                return _Y
            },
            set LegalDocumentDialog(e) {
                _Y = e
            }
        }),
        X.add("game-ui/common/utils/validation.ts", {
            get validateEmailAddress() {
                return bY
            },
            set validateEmailAddress(e) {
                bY = e
            },
            get sanitizeFileName() {
                return TY
            },
            set sanitizeFileName(e) {
                TY = e
            },
            get validateFileName() {
                return EY
            },
            set validateFileName(e) {
                EY = e
            }
        }),
        function(e) {
            e[e.None = 0] = "None",
            e[e.ForgotPassword = 1] = "ForgotPassword",
            e[e.Login = 2] = "Login"
        }(vY || (vY = {}));
        var IY = ()=>{
            const [e,t] = (0,
            Y.useState)("")
              , n = !bY(e)
              , [s,i] = (0,
            Y.useState)("")
              , a = 0 === s.length
              , [o,r] = (0,
            Y.useState)(vY.None)
              , l = (0,
            Y.useCallback)((()=>{
                n || a ? r(vY.Login) : (r(vY.None),
                jI({
                    email: e,
                    password: s
                }))
            }
            ), [e, n, s, a])
              , c = (0,
            Y.useCallback)((()=>{
                n ? r(vY.ForgotPassword) : (r(vY.None),
                yI(e))
            }
            ), [e, n]);
            return (0,
            z.jsx)(UI, {
                onClose: EI,
                children: (0,
                z.jsx)("div", {
                    className: FI.formContainer,
                    children: (0,
                    z.jsxs)(np, {
                        children: [(0,
                        z.jsx)("div", {
                            className: FI.iconRow,
                            children: (0,
                            z.jsx)("img", {
                                src: "Media/Menu/Paradox/ParadoxLogoNoText.svg",
                                className: FI.icon
                            })
                        }), (0,
                        z.jsx)("div", {
                            className: FI.title,
                            children: (0,
                            z.jsx)(_c.Paradox.LOGIN_FORM_TITLE, {})
                        }), (0,
                        z.jsx)(GI, {
                            type: "email",
                            value: e,
                            placeholder: (0,
                            z.jsx)(_c.Paradox.EMAIL_FIELD_LABEL, {}),
                            vkTitle: (0,
                            z.jsx)(_c.VirtualKeyboard.TITLE, {
                                hash: "ParadoxAccountEmail"
                            }),
                            invalid: o !== vY.None && n,
                            onChange: t,
                            className: Zu()(FI.formRow, FI.flexRow, FI.lightField)
                        }), (0,
                        z.jsx)(GI, {
                            type: "password",
                            placeholder: (0,
                            z.jsx)(_c.Paradox.PASSWORD_FIELD_LABEL, {}),
                            vkTitle: (0,
                            z.jsx)(_c.VirtualKeyboard.TITLE, {
                                hash: "ParadoxAccountPassword"
                            }),
                            value: s,
                            invalid: o === vY.Login && a,
                            onChange: i,
                            className: Zu()(FI.formRow, FI.flexRow, FI.lightField),
                            children: (0,
                            z.jsx)(U_, {
                                onSelect: c,
                                className: FI.forgotPasswordLink,
                                children: (0,
                                z.jsx)(_c.Paradox.FORGOT_PASSWORD_LINK, {})
                            })
                        }), (0,
                        z.jsx)(Sp, {
                            className: FI.buttonRow,
                            style: {
                                justifyContent: "flex-end"
                            },
                            children: (0,
                            z.jsx)(U_, {
                                theme: eI,
                                onSelect: l,
                                children: (0,
                                z.jsx)(_c.Paradox.LOGIN_BUTTON, {})
                            })
                        }), (0,
                        z.jsx)("div", {
                            className: FI.divider
                        }), (0,
                        z.jsxs)("div", {
                            className: FI.buttonRow,
                            children: [(0,
                            z.jsx)("div", {
                                className: FI.registrationHint,
                                children: (0,
                                z.jsx)(_c.Paradox.REGISTRATION_HINT, {})
                            }), (0,
                            z.jsx)(U_, {
                                theme: nI,
                                onSelect: wI,
                                children: (0,
                                z.jsx)(_c.Paradox.REGISTRATION_FROM_LOGIN_LINK, {})
                            })]
                        })]
                    })
                })
            })
        }
        ;
        function SY(e, t) {
            return new Date(t,e,0).getDate()
        }
        function yY(e, t, n) {
            return `${Tu(e, 4)}-${Tu(t, 2)}-${Tu(n, 2)}`
        }
        X.add("game-ui/menu/components/paradox/dialogs/login-dialog.tsx", {
            get LoginDialog() {
                return IY
            },
            set LoginDialog(e) {
                IY = e
            }
        }),
        X.add("game-ui/common/utils/date.ts", {
            get getDaysInMonth() {
                return SY
            },
            set getDaysInMonth(e) {
                SY = e
            },
            get formatIso8601Date() {
                return yY
            },
            set formatIso8601Date(e) {
                yY = e
            }
        });
        let jY = {
            "dropdown-toggle": "dropdown-toggle_th2 dropdown-toggle_prl",
            dropdownToggle: "dropdown-toggle_th2 dropdown-toggle_prl",
            invalid: "invalid_rQd",
            label: "label_Mje label_l_4",
            indicator: "indicator_Iwz",
            "dropdown-menu": "dropdown-menu_uEW dropdown-menu_Swd",
            dropdownMenu: "dropdown-menu_uEW dropdown-menu_Swd",
            scrollable: "scrollable_NAI undefined",
            "dropdown-item": "dropdown-item_IIB undefined",
            dropdownItem: "dropdown-item_IIB undefined"
        };
        X.add("game-ui/menu/components/paradox/dialogs/paradox-dropdown.module.scss", {
            get classes() {
                return jY
            },
            set classes(e) {
                Object.assign(jY, e)
            }
        });
        const CY = jY
          , NY = new Ig("COUNTRY_KEY")
          , wY = new Ig("DATE_KEY")
          , OY = new Ig("DAY_KEY")
          , PY = new Ig("MONTH_KEY")
          , LY = new Ig("YEAR_KEY");
        var AY = ()=>{
            const [e,t] = (0,
            Y.useState)("")
              , n = !bY(e)
              , [s,i] = (0,
            Y.useState)("")
              , a = 0 === s.length
              , {translate: o} = sc()
              , r = sl(NI).sort(((e,t)=>o(`ISO.COUNTRY[${e}]`)?.localeCompare(o(`ISO.COUNTRY[${t}]`) || "") || 1))
              , [l,c] = (0,
            Y.useState)(null)
              , [u,d] = (0,
            Y.useState)(null)
              , [m,h] = (0,
            Y.useState)(null)
              , [g,p] = (0,
            Y.useState)(null)
              , f = null != m && null != u ? SY(m, u) : 31
              , x = Math.min((new Date).getFullYear(), 2020);
            (0,
            Y.useEffect)((()=>{
                null != g && g > f && p(null)
            }
            ), [g, f]);
            const [v,_] = (0,
            Y.useState)(!1)
              , [b,T] = (0,
            Y.useState)(!1)
              , E = (0,
            Y.useCallback)((()=>{
                if (n || a || null == l || null == u || null == m || null == g)
                    return void T(!0);
                T(!1);
                const t = yY(u ?? 0, m, g);
                PI({
                    email: e,
                    password: s,
                    country: l,
                    dateOfBirth: t,
                    marketingPermission: v
                })
            }
            ), [n, a, u, m, g, e, s, l, v])
              , [I,S] = (0,
            Y.useState)(null)
              , [y,j] = (0,
            Y.useState)(null)
              , [C,N] = (0,
            Y.useState)(l)
              , [w,O] = (0,
            Y.useState)(null);
            return (0,
            z.jsx)(UI, {
                onClose: EI,
                children: (0,
                z.jsx)("div", {
                    className: FI.formContainer,
                    children: (0,
                    z.jsxs)(np, {
                        onChange: S,
                        children: [(0,
                        z.jsx)("div", {
                            className: FI.iconRow,
                            children: (0,
                            z.jsx)("img", {
                                src: "Media/Menu/Paradox/ParadoxLogoNoText.svg",
                                className: FI.icon
                            })
                        }), (0,
                        z.jsx)("div", {
                            className: FI.title,
                            children: (0,
                            z.jsx)(_c.Paradox.REGISTRATION_FORM_TITLE, {})
                        }), (0,
                        z.jsx)(GI, {
                            value: e,
                            placeholder: (0,
                            z.jsx)(_c.Paradox.EMAIL_FIELD_LABEL, {}),
                            onChange: t,
                            vkTitle: (0,
                            z.jsx)(_c.VirtualKeyboard.TITLE, {
                                hash: "ParadoxAccountEmail"
                            }),
                            invalid: b && n,
                            className: Zu()(FI.formRow, FI.flexRow, FI.darkField)
                        }), (0,
                        z.jsx)(GI, {
                            type: "password",
                            value: s,
                            placeholder: (0,
                            z.jsx)(_c.Paradox.PASSWORD_FIELD_LABEL, {}),
                            onChange: i,
                            vkTitle: (0,
                            z.jsx)(_c.VirtualKeyboard.TITLE, {
                                hash: "ParadoxAccountPassword"
                            }),
                            invalid: b && a,
                            className: Zu()(FI.formRow, FI.flexRow, FI.darkField)
                        }), (0,
                        z.jsx)(Sp, {
                            focusKey: NY,
                            className: Zu()(FI.formRow, FI.darkField),
                            children: (0,
                            z.jsx)(fS, {
                                theme: CY,
                                initialFocused: l,
                                content: (0,
                                z.jsx)(np, {
                                    initialFocused: l,
                                    onChange: N,
                                    allowLooping: !0,
                                    children: r.map(((e,t)=>(0,
                                    z.jsxs)(bS, {
                                        focusKey: e,
                                        value: e,
                                        onChange: c,
                                        className: FI.dropdownItem,
                                        children: [(0,
                                        z.jsx)("p", {
                                            children: (0,
                                            z.jsx)(_c.ISO.COUNTRY, {
                                                hash: e
                                            })
                                        }), (0,
                                        z.jsx)(UT, {
                                            action: "Select",
                                            active: I === NY && C === e,
                                            className: FI.dropdownItemHint
                                        })]
                                    }, t)))
                                }),
                                onToggle: ()=>O(NY),
                                children: (0,
                                z.jsx)(xS, {
                                    openIconComponent: (0,
                                    z.jsx)(UT, {
                                        action: "Select",
                                        active: I === NY && w !== NY,
                                        className: FI.hint
                                    }),
                                    closeIconComponent: (0,
                                    z.jsx)(UT, {
                                        action: "Back",
                                        active: I === NY && w === NY,
                                        className: FI.hint
                                    }),
                                    className: Zu()(b && null == l && CY.invalid),
                                    children: null == l ? (0,
                                    z.jsx)(_c.Paradox.COUNTRY_FIELD_LABEL, {}) : (0,
                                    z.jsx)(_c.ISO.COUNTRY, {
                                        hash: l
                                    })
                                })
                            })
                        }), (0,
                        z.jsxs)("div", {
                            className: FI.formRow,
                            children: [(0,
                            z.jsx)("div", {
                                className: FI.formRowLabel,
                                children: (0,
                                z.jsx)(_c.Paradox.BIRTH_DATE_FIELD_LABEL, {})
                            }), (0,
                            z.jsx)(Sp, {
                                focusKey: wY,
                                className: FI.flexRow,
                                children: (0,
                                z.jsxs)(Zg, {
                                    focused: y,
                                    onRefocus: ()=>LY,
                                    onChange: j,
                                    direction: kg.Horizontal,
                                    children: [(0,
                                    z.jsx)("div", {
                                        className: Zu()(FI.yearField, FI.darkField),
                                        children: (0,
                                        z.jsx)(fS, {
                                            focusKey: LY,
                                            initialFocused: u,
                                            theme: CY,
                                            content: (0,
                                            z.jsx)(np, {
                                                onChange: N,
                                                allowLooping: !0,
                                                children: [...Array(x - 1901).keys()].map(((e,t)=>(0,
                                                z.jsxs)(bS, {
                                                    focusKey: x - e,
                                                    value: x - e,
                                                    onChange: d,
                                                    className: FI.dropdownItem,
                                                    children: [(0,
                                                    z.jsx)("p", {
                                                        children: bu(x - e)
                                                    }), (0,
                                                    z.jsx)(UT, {
                                                        action: "Select",
                                                        active: y === LY && C === x - e,
                                                        className: FI.dropdownItemHint
                                                    })]
                                                }, t)))
                                            }),
                                            onToggle: ()=>O(LY),
                                            children: (0,
                                            z.jsx)(xS, {
                                                openIconComponent: (0,
                                                z.jsx)(UT, {
                                                    action: "Select",
                                                    active: I === wY && y === LY && w !== LY,
                                                    className: FI.hint
                                                }),
                                                closeIconComponent: (0,
                                                z.jsx)(UT, {
                                                    action: "Back",
                                                    active: y === LY && w === LY,
                                                    className: FI.hint
                                                }),
                                                className: Zu()(b && null == u && CY.invalid),
                                                children: null == u ? (0,
                                                z.jsx)(_c.Paradox.BIRTH_DATE_YEAR_FIELD_LABEL, {}) : bu(u)
                                            })
                                        })
                                    }), (0,
                                    z.jsx)("div", {
                                        className: Zu()(FI.monthField, FI.darkField),
                                        children: (0,
                                        z.jsx)(fS, {
                                            focusKey: PY,
                                            initialFocused: m,
                                            theme: CY,
                                            content: (0,
                                            z.jsx)(np, {
                                                onChange: N,
                                                allowLooping: !0,
                                                children: [...Array(12).keys()].map(((e,t)=>(0,
                                                z.jsxs)(bS, {
                                                    focusKey: e + 1,
                                                    value: e + 1,
                                                    onChange: h,
                                                    className: FI.dropdownItem,
                                                    children: [(0,
                                                    z.jsx)("p", {
                                                        children: (0,
                                                        z.jsx)(_c.Common.MONTH, {
                                                            index: e
                                                        })
                                                    }), (0,
                                                    z.jsx)(UT, {
                                                        action: "Select",
                                                        active: y === PY && C === e + 1,
                                                        className: FI.dropdownItemHint
                                                    })]
                                                }, t)))
                                            }),
                                            onToggle: ()=>O(PY),
                                            children: (0,
                                            z.jsx)(xS, {
                                                openIconComponent: (0,
                                                z.jsx)(UT, {
                                                    action: "Select",
                                                    active: I === wY && y === PY && w !== PY,
                                                    className: FI.hint
                                                }),
                                                closeIconComponent: (0,
                                                z.jsx)(UT, {
                                                    action: "Back",
                                                    active: y === PY && w === PY,
                                                    className: FI.hint
                                                }),
                                                className: Zu()(b && null == m && CY.invalid),
                                                children: null == m ? (0,
                                                z.jsx)(_c.Paradox.BIRTH_DATE_MONTH_FIELD_LABEL, {}) : (0,
                                                z.jsx)(_c.Common.MONTH, {
                                                    index: m - 1
                                                })
                                            })
                                        })
                                    }), (0,
                                    z.jsx)("div", {
                                        className: Zu()(FI.dayField, FI.darkField),
                                        children: (0,
                                        z.jsx)(fS, {
                                            focusKey: OY,
                                            initialFocused: g,
                                            theme: CY,
                                            content: (0,
                                            z.jsx)(np, {
                                                onChange: N,
                                                allowLooping: !0,
                                                children: [...Array(f).keys()].map(((e,t)=>(0,
                                                z.jsxs)(bS, {
                                                    focusKey: e + 1,
                                                    value: e + 1,
                                                    onChange: p,
                                                    className: FI.dropdownItem,
                                                    children: [(0,
                                                    z.jsx)("p", {
                                                        children: bu(e + 1)
                                                    }), (0,
                                                    z.jsx)(UT, {
                                                        action: "Select",
                                                        active: y === OY && C === e + 1,
                                                        className: FI.dropdownItemHint
                                                    })]
                                                }, t)))
                                            }),
                                            onToggle: ()=>O(OY),
                                            children: (0,
                                            z.jsx)(xS, {
                                                openIconComponent: (0,
                                                z.jsx)(UT, {
                                                    action: "Select",
                                                    active: I === wY && y === OY && w !== OY,
                                                    className: FI.hint
                                                }),
                                                closeIconComponent: (0,
                                                z.jsx)(UT, {
                                                    action: "Back",
                                                    active: y === OY && w === OY,
                                                    className: FI.hint
                                                }),
                                                className: Zu()(b && null == g && CY.invalid),
                                                children: null == g ? (0,
                                                z.jsx)(_c.Paradox.BIRTH_DATE_DAY_FIELD_LABEL, {}) : bu(g)
                                            })
                                        })
                                    })]
                                })
                            })]
                        }), (0,
                        z.jsx)(VI, {
                            value: v,
                            label: (0,
                            z.jsx)(_c.Paradox.MARKETING_PERMISSION_TOGGLE_LABEL, {}),
                            onChange: _
                        }), (0,
                        z.jsx)(Sp, {
                            activation: qu.AnyChildren,
                            children: (0,
                            z.jsx)(Eb, {
                                text: (0,
                                z.jsx)(_c.Paradox.TERMS_PRIVACY_NOTICE, {}),
                                className: FI.terms,
                                onLinkSelect: OI
                            })
                        }), (0,
                        z.jsx)(Sp, {
                            className: FI.buttonRow,
                            children: (0,
                            z.jsx)(U_, {
                                theme: eI,
                                onSelect: E,
                                children: (0,
                                z.jsx)(_c.Paradox.SUBMIT_REGISTRATION_BUTTON, {})
                            })
                        }), (0,
                        z.jsx)("div", {
                            className: FI.divider
                        }), (0,
                        z.jsx)("div", {
                            className: FI.buttonRow,
                            children: (0,
                            z.jsx)(U_, {
                                theme: nI,
                                onSelect: SI,
                                children: (0,
                                z.jsx)(_c.Paradox.LOGIN_FROM_REGISTRATION_LINK, {})
                            })
                        })]
                    })
                })
            })
        }
        ;
        X.add("game-ui/menu/components/paradox/dialogs/registration-dialog.tsx", {
            get RegistrationDialog() {
                return AY
            },
            set RegistrationDialog(e) {
                AY = e
            }
        });
        let MY = {
            "loading-overlay": "loading-overlay_ica",
            loadingOverlay: "loading-overlay_ica",
            disabled: "disabled_AdS"
        };
        X.add("game-ui/menu/components/paradox/paradox-dialog-renderer.module.scss", {
            get classes() {
                return MY
            },
            set classes(e) {
                Object.assign(MY, e)
            }
        });
        const RY = MY
          , kY = new Ig("CHILDREN")
          , DY = {
            [bI.Login]: IY,
            [bI.Registration]: AY,
            [bI.AccountLink]: gY,
            [bI.AccountLinkOverwrite]: pY,
            [bI.LegalDocument]: _Y,
            [bI.Confirmation]: fY,
            [bI.Error]: xY,
            [bI.MultiOption]: mY
        };
        var FY = ({children: e})=>{
            const t = sl(lI)
              , n = UY();
            let s;
            return s = t ? null : n.length > 0 ? n.length - 1 : kY,
            (0,
            z.jsxs)(op, {
                focused: s,
                children: [(0,
                z.jsx)(ap, {
                    focusKey: kY,
                    children: e
                }), n.map(((e,t)=>(0,
                z.jsx)(ap, {
                    focusKey: t,
                    children: (0,
                    z.jsx)(l_, {
                        children: e
                    })
                }, t))), t && (0,
                z.jsx)(BY, {})]
            })
        }
          , UY = ()=>{
            const e = sl(TI);
            return (0,
            Y.useMemo)((()=>e.map((e=>uD(DY, e, void 0))).filter((e=>null != e))), [e])
        }
        ;
        const BY = ()=>(0,
        z.jsx)("div", {
            className: RY.loadingOverlay,
            children: (0,
            z.jsx)(_c.Paradox.LOADING, {})
        });
        X.add("game-ui/menu/components/paradox/paradox-dialog-renderer.tsx", {
            get ParadoxDialogRenderer() {
                return FY
            },
            set ParadoxDialogRenderer(e) {
                FY = e
            },
            get useParadoxDialogs() {
                return UY
            },
            set useParadoxDialogs(e) {
                UY = e
            }
        });
        const GY = "assetUploadPanel";
        var VY = $r(GY, "children")
          , HY = $r(GY, "visible")
          , KY = Jr(GY, "close");
        X.add("game-ui/menu/data-binding/asset-upload-bindings.ts", {
            get assetUploadWidgets() {
                return assetUploadWidgets
            },
            set assetUploadWidgets(e) {
                assetUploadWidgets = e
            },
            get assetUploadPanelVisible() {
                return assetUploadPanelVisible
            },
            set assetUploadPanelVisible(e) {
                assetUploadPanelVisible = e
            },
            get closeAssetUploadPanel() {
                return closeAssetUploadPanel
            },
            set closeAssetUploadPanel(e) {
                closeAssetUploadPanel = e
            }
        });
        let WY = {
            panel: "panel_ezY"
        };
        X.add("game-ui/menu/components/asset-upload-panel/asset-upload-panel-renderer.module.scss", {
            get classes() {
                return WY
            },
            set classes(e) {
                Object.assign(WY, e)
            }
        });
        const zY = WY
          , YY = new Ig("DIALOG")
          , $Y = new Ig("CHILDREN");
        var qY = ({children: e})=>{
            const t = sl(HY);
            return (0,
            z.jsxs)(op, {
                focused: t ? YY : $Y,
                children: [(0,
                z.jsx)(ap, {
                    focusKey: $Y,
                    children: e
                }), t && (0,
                z.jsx)(ap, {
                    focusKey: YY,
                    children: (0,
                    z.jsx)(XY, {})
                })]
            })
        }
        ;
        const XY = ()=>(0,
        z.jsx)(zm, {
            children: (0,
            z.jsx)(l_, {
                children: (0,
                z.jsx)(FY, {
                    children: (0,
                    z.jsx)(rE, {
                        theme: uE,
                        className: zY.panel,
                        onClose: KY,
                        header: (0,
                        z.jsx)(dE, {
                            children: (0,
                            z.jsx)(_c.Menu.ASSET_UPLOAD, {})
                        }),
                        children: (0,
                        z.jsx)(QY, {})
                    })
                })
            })
        }, "AssetUploadPanel")
          , QY = ()=>{
            const e = QR("assetUploadPanel")
              , t = sl(VY);
            return (0,
            z.jsx)(cY, {
                parent: e,
                data: t
            })
        }
        ;
        X.add("game-ui/menu/components/asset-upload-panel/asset-upload-panel-renderer.tsx", {
            get AssetUploadPanelRenderer() {
                return qY
            },
            set AssetUploadPanelRenderer(e) {
                qY = e
            }
        });
        const ZY = new Ig("DIALOG")
          , JY = new Ig("CHILDREN")
          , e$ = new Ig("NO_KEY");
        var t$ = ({children: e})=>{
            const t = sl(Cl)
              , n = sl(Nl);
            return (0,
            z.jsxs)(op, {
                focused: t ? ZY : JY,
                children: [t && (0,
                z.jsx)(zm, {
                    children: (0,
                    z.jsx)(l_, {
                        children: (0,
                        z.jsxs)(rE, {
                            focusKey: ZY,
                            theme: uE,
                            className: hE.dialog,
                            children: [(0,
                            z.jsx)("div", {
                                className: hE.message,
                                children: (0,
                                z.jsx)(_c.Options.DISPLAY_SETTINGS_PROMPT, {})
                            }), (0,
                            z.jsx)("div", {
                                className: hE.buttons,
                                children: (0,
                                z.jsxs)(np, {
                                    initialFocused: e$,
                                    children: [(0,
                                    z.jsx)(U_, {
                                        theme: ZE,
                                        className: hE.button,
                                        onSelect: ql,
                                        children: (0,
                                        z.jsx)(_c.Options.DISPLAY_SETTINGS_CONFIRM, {})
                                    }), (0,
                                    z.jsx)(U_, {
                                        focusKey: e$,
                                        theme: ZE,
                                        className: Zu()(hE.button, ZE.negative),
                                        onSelect: Xl,
                                        children: (0,
                                        z.jsx)(_c.Options.DISPLAY_SETTINGS_REVERT, {
                                            TIME: (0,
                                            z.jsx)(Oc, {
                                                value: n,
                                                unit: vc.Integer
                                            })
                                        })
                                    })]
                                })
                            })]
                        })
                    })
                }, "displayConfirmationDialog"), (0,
                z.jsx)(ap, {
                    focusKey: JY,
                    children: e
                })]
            })
        }
        ;
        X.add("game-ui/menu/components/options-screen/display-confirmation-dialog/display-confirmation-dialog.tsx", {
            get DisplayConfirmationDialogRenderer() {
                return t$
            },
            set DisplayConfirmationDialogRenderer(e) {
                t$ = e
            }
        });
        const n$ = "inputRebinding";
        var s$ = $r(n$, "activeRebinding")
          , i$ = $r(n$, "activeConflict")
          , a$ = Jr(n$, "cancelRebinding")
          , o$ = Jr(n$, "completeAndSwapConflicts")
          , r$ = Jr(n$, "completeAndUnsetConflicts");
        X.add("game-ui/menu/data-binding/input-rebinding-bindings.ts", {
            get activeRebinding() {
                return activeRebinding
            },
            set activeRebinding(e) {
                activeRebinding = e
            },
            get activeConflict() {
                return activeConflict
            },
            set activeConflict(e) {
                activeConflict = e
            },
            get cancelRebinding() {
                return a$
            },
            set cancelRebinding(e) {
                a$ = e
            },
            get completeRebindAndSwapConflicts() {
                return o$
            },
            set completeRebindAndSwapConflicts(e) {
                o$ = e
            },
            get completeRebindAndUnsetConflicts() {
                return r$
            },
            set completeRebindAndUnsetConflicts(e) {
                r$ = e
            }
        });
        let l$ = {
            divider: "divider_KxA",
            "conflict-group": "conflict-group_bSf",
            conflictGroup: "conflict-group_bSf",
            "conflict-title": "conflict-title_uNI",
            conflictTitle: "conflict-title_uNI",
            "conflict-item": "conflict-item_Nnu",
            conflictItem: "conflict-item_Nnu",
            "title-control-text": "title-control-text_tgr button_ehL",
            titleControlText: "title-control-text_tgr button_ehL",
            "message-keyboard": "message-keyboard_Ows",
            messageKeyboard: "message-keyboard_Ows",
            "first-p": "first-p_O8f",
            firstP: "first-p_O8f",
            "second-p": "second-p_RhP",
            secondP: "second-p_RhP",
            "message-gamepad": "message-gamepad_ZoB",
            messageGamepad: "message-gamepad_ZoB"
        };
        X.add("game-ui/menu/components/options-screen/input-rebinding-dialog/input-rebinding-dialog.module.scss", {
            get classes() {
                return l$
            },
            set classes(e) {
                Object.assign(l$, e)
            }
        });
        const c$ = l$
          , u$ = {
            button: c$.titleControlText
        }
          , d$ = new Ig("CHILDREN_KEY")
          , m$ = new Ig("DIALOG_KEY");
        var h$ = ({children: e})=>{
            const t = sl(s$)
              , n = sl(i$)
              , s = null != t && null == n;
            return (0,
            z.jsx)(z.Fragment, {
                children: (0,
                z.jsx)(Np, {
                    excludes: [],
                    disabled: !s,
                    children: (0,
                    z.jsxs)(op, {
                        focused: null != t ? m$ : d$,
                        children: [(0,
                        z.jsx)(ap, {
                            focusKey: d$,
                            children: e
                        }), null != t && (0,
                        z.jsx)(zm, {
                            children: (0,
                            z.jsx)(ap, {
                                focusKey: m$,
                                children: null == n ? (0,
                                z.jsx)(g$, {
                                    binding: t,
                                    onClose: a$
                                }) : (0,
                                z.jsx)(x$, {
                                    binding: n.binding,
                                    conflicts: n.conflicts,
                                    unsolved: n.unsolved,
                                    onConfirmSwap: n.swap ? o$ : void 0,
                                    onConfirmBatchSwap: n.batchSwap ? o$ : void 0,
                                    onConfirmUnset: n.unset ? r$ : void 0,
                                    onClose: a$
                                })
                            })
                        }, "inputRebindingDialog")]
                    })
                })
            })
        }
        ;
        const g$ = ({binding: e, onClose: t})=>{
            const n = Dm()
              , s = jT()
              , i = f$(n, s, e)
              , a = new pb(((t,n,s)=>{
                const i = {
                    name: t,
                    device: e.device
                };
                return (0,
                z.jsx)(LT, {
                    bindings: [i],
                    modifiers: [],
                    theme: u$
                })
            }
            ));
            return (0,
            z.jsx)(l_, {
                children: (0,
                z.jsx)(Fg, {
                    disabled: n && "Gamepad" === e.device,
                    onAction: t,
                    children: (0,
                    z.jsx)(rE, {
                        theme: uE,
                        className: hE.dialog,
                        header: (0,
                        z.jsx)(dE, {
                            onCloseOverride: "Mouse" !== e.device ? t : void 0,
                            children: (0,
                            z.jsx)(_c.Options.INPUT_REBIND_TITLE, {
                                BINDING: (0,
                                z.jsx)(cc, {
                                    id: `Options.OPTION[${e.title}]`,
                                    fallback: `Options.OPTION[${e.title}]`
                                })
                            })
                        }),
                        children: (0,
                        z.jsx)(Cb, {
                            theme: hE,
                            renderer: a,
                            className: Zu()(hE.message, c$.secondP, "Gamepad" === e.device ? c$.messageGamepad : c$.messageKeyboard),
                            children: i
                        })
                    })
                })
            })
        }
          , p$ = {
            LSP: "<leftStickPress>",
            RSP: "<rightStickPress>",
            SHIFT: "<shift>",
            ALT: "<alt>",
            CTRL: "<ctrl>"
        }
          , f$ = (e,t,n)=>"Gamepad" !== n.device ? n.allowModifiers ? (0,
        z.jsx)(_c.Options.INPUT_REBIND_PROMPT_NEW, {
            hash: n.device,
            ...p$
        }) : (0,
        z.jsx)(_c.Options.INPUT_REBIND_PROMPT_NO_MODIFIERS, {
            hash: n.device
        }) : e ? t === _m.PS ? n.allowModifiers ? (0,
        z.jsx)(_c.Options.INPUT_REBIND_PROMPT_NEW_PS, {
            hash: n.device,
            ...p$
        }) : (0,
        z.jsx)(_c.Options.INPUT_REBIND_PROMPT_NO_MODIFIERS_PS, {
            hash: n.device
        }) : t === _m.Xbox ? n.allowModifiers ? (0,
        z.jsx)(_c.Options.INPUT_REBIND_PROMPT_NEW_XBOX, {
            hash: n.device,
            ...p$
        }) : (0,
        z.jsx)(_c.Options.INPUT_REBIND_PROMPT_NO_MODIFIERS_XBOX, {
            hash: n.device
        }) : void 0 : n.allowModifiers ? (0,
        z.jsx)(_c.Options.INPUT_REBIND_PROMPT_NEW, {
            hash: n.device,
            ...p$
        }) : (0,
        z.jsx)(_c.Options.INPUT_REBIND_PROMPT_NO_MODIFIERS, {
            hash: n.device
        })
          , x$ = ({binding: e, conflicts: t, unsolved: n, onConfirmSwap: s, onConfirmBatchSwap: i, onConfirmUnset: a, onClose: o})=>{
            const r = {
                BINDING: (0,
                z.jsx)(_c.Options.OPTION, {
                    hash: e.title,
                    showIdOnFail: !0
                }),
                CONTROL: "<CONTROL>"
            }
              , l = new pb(((t,n,s)=>(0,
            z.jsx)(LT, {
                bindings: [e.binding],
                modifiers: e.modifiers,
                shortName: wp.FallbackToLong,
                theme: u$
            })))
              , c = t.reduce(((e,t)=>{
                const n = t.resolution.binding.name + t.resolution.modifiers.map((e=>e.name)).join() + t.binding.isRebindable;
                return e[n] || (e[n] = {
                    canBeRebound: t.binding.isRebindable,
                    binding: t.resolution.binding,
                    modifiers: t.resolution.modifiers,
                    group: t.resolution.device,
                    conflicts: []
                }),
                e[n].conflicts.push(t.resolution),
                e
            }
            ), {})
              , u = Object.values(c)
              , d = XE();
            return (0,
            z.jsx)(l_, {
                children: (0,
                z.jsx)(Fg, {
                    onAction: o,
                    children: (0,
                    z.jsx)(sI, {
                        controller: d,
                        children: (0,
                        z.jsxs)(rE, {
                            theme: uE,
                            className: hE.dialog,
                            header: (0,
                            z.jsx)(dE, {
                                children: (0,
                                z.jsx)(_c.Options.INPUT_CONFLICT_TITLE, {})
                            }),
                            onClose: a$,
                            children: [(0,
                            z.jsx)(Cb, {
                                theme: hE,
                                renderer: l,
                                className: Zu()(hE.message, c$.firstP, "Gamepad" === e.device ? c$.messageGamepad : c$.messageKeyboard),
                                children: n ? i ? (0,
                                z.jsx)(_c.Options.INPUT_CONFLICT_BATCH_NO_RESOLUTION, {
                                    ...r
                                }) : (0,
                                z.jsx)(_c.Options.INPUT_CONFLICT_NO_RESOLUTION, {
                                    ...r
                                }) : i ? (0,
                                z.jsx)(_c.Options.INPUT_CONFLICT_BATCH_RESOLUTION, {
                                    ...r
                                }) : (0,
                                z.jsx)(_c.Options.INPUT_CONFLICT_PROMPT, {
                                    ...r
                                })
                            }), (0,
                            z.jsxs)(np, {
                                initialFocused: "cancel",
                                children: [(0,
                                z.jsx)("div", {
                                    className: hE.errorDetails,
                                    style: {
                                        flexDirection: "column"
                                    },
                                    children: (0,
                                    z.jsx)(hb, {
                                        controller: d,
                                        className: hE.content,
                                        hintClassName: hE.scrollHint,
                                        labelClassName: hE.scrollHintLabel,
                                        children: u.map(((e,t)=>(0,
                                        z.jsxs)(Y.Fragment, {
                                            children: [(0,
                                            z.jsxs)(Sp, {
                                                className: c$.conflictGroup,
                                                children: [i && (0,
                                                z.jsx)(Cb, {
                                                    theme: hE,
                                                    renderer: new pb(((t,n,s)=>(0,
                                                    z.jsx)(LT, {
                                                        bindings: [e.binding],
                                                        modifiers: e.modifiers,
                                                        shortName: wp.FallbackToLong,
                                                        theme: u$
                                                    }))),
                                                    className: Zu()(c$.conflictTitle, c$.firstP, "Gamepad" === e.binding.device ? c$.messageGamepad : c$.messageKeyboard),
                                                    children: e.binding.name ? e.canBeRebound ? n ? (0,
                                                    z.jsx)(_c.Options.BATCH_SWAP_GROUP_BLOCK_RESOLUTION, {
                                                        ...r
                                                    }) : (0,
                                                    z.jsx)(_c.Options.BATCH_SWAP_GROUP_RESOLUTION, {
                                                        ...r
                                                    }) : (0,
                                                    z.jsx)(_c.Options.BATCH_SWAP_GROUP_NO_RESOLUTION, {
                                                        ...r
                                                    }) : (0,
                                                    z.jsx)(_c.Options.BATCH_SWAP_GROUP_RESET_PROMT, {})
                                                }), e.conflicts.map(((e,n)=>(0,
                                                z.jsxs)("div", {
                                                    className: c$.conflictItem,
                                                    children: [(0,
                                                    z.jsx)("p", {
                                                        children: (0,
                                                        z.jsx)(_c.Options.INPUT_MAP, {
                                                            hash: e.optionGroup,
                                                            showIdOnFail: !0
                                                        })
                                                    }), (0,
                                                    z.jsx)("p", {
                                                        children: (0,
                                                        z.jsx)(_c.Options.OPTION, {
                                                            hash: e.title,
                                                            showIdOnFail: !0
                                                        })
                                                    })]
                                                }, `${t} ${n}`)))]
                                            }), t < u.length - 1 && (0,
                                            z.jsx)("div", {
                                                className: c$.divider
                                            })]
                                        }, t)))
                                    })
                                }), (0,
                                z.jsxs)("div", {
                                    className: hE.buttonsVertical,
                                    children: [!n && s && (0,
                                    z.jsx)(U_, {
                                        theme: ZE,
                                        className: hE.button,
                                        onSelect: s,
                                        children: (0,
                                        z.jsx)(_c.Options.SWAP_BINDINGS, {})
                                    }), !n && i && (0,
                                    z.jsx)(U_, {
                                        theme: ZE,
                                        className: hE.button,
                                        onSelect: i,
                                        children: (0,
                                        z.jsx)(_c.Options.BATCH_SWAP_BINDINGS, {})
                                    }), !n && a && (0,
                                    z.jsx)(U_, {
                                        theme: ZE,
                                        className: hE.button,
                                        onSelect: a,
                                        children: (0,
                                        z.jsx)(_c.Options.UNSET_BINDINGS, {})
                                    }), (0,
                                    z.jsx)(U_, {
                                        focusKey: "cancel",
                                        theme: ZE,
                                        className: Zu()(hE.button, ZE.negative),
                                        onSelect: o,
                                        children: (0,
                                        z.jsx)(_c.Common.CANCEL, {})
                                    })]
                                })]
                            })]
                        })
                    })
                })
            })
        }
        ;
        X.add("game-ui/menu/components/options-screen/input-rebinding-dialog/input-rebinding-dialog.tsx", {
            get InputRebindingDialogRenderer() {
                return h$
            },
            set InputRebindingDialogRenderer(e) {
                h$ = e
            }
        });
        const v$ = ({children: e, activeUiClassName: t})=>{
            const n = sl(wl);
            (0,
            Y.useEffect)((()=>EA(n)), [n]);
            const s = sl(Ol);
            (0,
            Y.useEffect)((()=>IA(s)), [s]);
            const i = sl(Ll);
            (0,
            Y.useEffect)((()=>yA(i)), [i]);
            const a = sl(Pl);
            return (0,
            Y.useEffect)((()=>jA(a)), [a]),
            _$(t),
            GA(false),
            (0,
            z.jsx)(t$, {
                children: (0,
                z.jsx)(qY, {
                    children: (0,
                    z.jsxs)(h$, {
                        children: [e, false]
                    })
                })
            })
        }
        ;
        function _$(e) {
            const t = sl(NE)
              , n = Dm();
            qp(Zu()(t, e, n ? "gamepad" : "keyboard"))
        }
        var b$ = ({metadata: e, ...t})=>{
            const n = XE()
              , s = wW(e)
              , i = zA(e) ? (0,
            z.jsx)(_c.GameListScreen.SAVEGAME_MISSING_REQUIRED_CONTENT, {}) : (0,
            z.jsx)(_c.GameListScreen.MAP_MISSING_REQUIRED_CONTENT, {});
            return (0,
            z.jsx)(sI, {
                controller: n,
                children: (0,
                z.jsx)(zI, {
                    zIndex: 100,
                    title: (0,
                    z.jsx)(_c.Common.WARNING, {}),
                    ...t,
                    children: (0,
                    z.jsxs)("div", {
                        className: CW.dialogContent,
                        children: [(0,
                        z.jsx)(Cb, {
                            className: CW.dialogText,
                            children: i
                        }), (0,
                        z.jsx)(hb, {
                            controller: n,
                            className: CW.prerequesitesList,
                            hintClassName: CW.scrollHint,
                            labelClassName: CW.scrollHintLabel,
                            children: (0,
                            z.jsx)(NW, {
                                prerequisites: s
                            })
                        }), (0,
                        z.jsx)(Cb, {
                            className: CW.dialogText,
                            children: (0,
                            z.jsx)(_c.GameListScreen.CONFIRM_MISSING_REQUIRED_CONTENT, {})
                        })]
                    })
                })
            })
        }
        ;
        X.add("game-ui/menu/components/shared/prerequisites/prerequisites-missing-dialog.tsx", {
            get PrerequisitesMissingDialog() {
                return b$
            },
            set PrerequisitesMissingDialog(e) {
                b$ = e
            }
        });
        let T$ = {
            "engagement-screen": "engagement-screen_EQg",
            engagementScreen: "engagement-screen_EQg",
            pulse: "pulse_kns",
            icon: "icon_D4A"
        };
        X.add("game-ui/overlay/engagement-screen/engagement-screen.module.scss", {
            get classes() {
                return T$
            },
            set classes(e) {
                Object.assign(T$, e)
            }
        });
        const E$ = T$;
        var I$ = ()=>{
            const e = S$();
            return (0,
            z.jsx)(yT, {
                className: E$.engagementScreen,
                children: e
            })
        }
        ;
        const S$ = ()=>{
            const e = Dm()
              , t = ic((0,
            z.jsx)(_c.Overlay.ENGAGEMENT_PROMPT_KEYBOARD, {}))
              , n = ic((0,
            z.jsx)(_c.Overlay.ENGAGEMENT_PROMPT_GAMEPAD, {}));
            return (0,
            Y.useMemo)((()=>e ? y$(n, "<KEY>", (0,
            z.jsx)(UT, {
                action: "Select",
                className: E$.icon
            })) : t), [e, n, t])
        }
          , y$ = (e,t,n)=>{
            const s = e.indexOf(t);
            return s >= 0 ? (0,
            z.jsxs)(z.Fragment, {
                children: [e.substring(0, s), n, e.substring(s + t.length)]
            }) : e
        }
        ;
        X.add("game-ui/overlay/engagement-screen/engagement-screen.tsx", {
            get Engagement() {
                return I$
            },
            set Engagement(e) {
                I$ = e
            }
        });
        let j$ = {
            "overlay-action": "overlay-action_CD_",
            overlayAction: "overlay-action_CD_",
            icon: "icon_Cu3",
            "action-hints": "action-hints_TjM",
            actionHints: "action-hints_TjM"
        };
        X.add("game-ui/overlay/overlay-actions/action/overlay-action.module.scss", {
            get classes() {
                return j$
            },
            set classes(e) {
                Object.assign(j$, e)
            }
        });
        const C$ = j$;
        var N$ = ({displayButtonHints: e=!0, text: t, className: n})=>(0,
        z.jsxs)("div", {
            className: Zu()(C$.overlayAction, n),
            children: [e ? (0,
            z.jsx)(IT, {
                className: C$.actionHints
            }) : null, t]
        });
        X.add("game-ui/overlay/overlay-actions/action/overlay-action.tsx", {
            get OverlayAction() {
                return N$
            },
            set OverlayAction(e) {
                N$ = e
            }
        });
        let w$ = {
            "overlay-actions": "overlay-actions_epi",
            overlayActions: "overlay-actions_epi"
        };
        X.add("game-ui/overlay/overlay-actions/overlay-actions.module.scss", {
            get classes() {
                return w$
            },
            set classes(e) {
                Object.assign(w$, e)
            }
        });
        const O$ = w$;
        var P$ = ({className: e, children: t})=>(0,
        z.jsx)("div", {
            className: Zu()(O$.overlayActions, e),
            children: t
        });
        X.add("game-ui/overlay/overlay-actions/overlay-actions.tsx", {
            get OverlayActions() {
                return P$
            },
            set OverlayActions(e) {
                P$ = e
            }
        });
        let L$ = {
            "overlay-content": "overlay-content_AYd",
            overlayContent: "overlay-content_AYd",
            content: "content_HTa"
        };
        X.add("game-ui/overlay/overlay-content/overlay-content.module.scss", {
            get classes() {
                return L$
            },
            set classes(e) {
                Object.assign(L$, e)
            }
        });
        const A$ = L$;
        var M$ = ({actions: e, className: t, children: n})=>(0,
        z.jsxs)("div", {
            className: Zu()(A$.overlayContent, t),
            children: [(0,
            z.jsx)("div", {
                className: A$.content,
                children: n
            }), e && e]
        });
        X.add("game-ui/overlay/overlay-content/overlay-content.tsx", {
            get OverlayScreen() {
                return M$
            },
            set OverlayScreen(e) {
                M$ = e
            }
        });
        let R$ = {
            "overlay-text": "overlay-text_AzR",
            overlayText: "overlay-text_AzR"
        };
        X.add("game-ui/overlay/overlay-text/overlay-text.module.scss", {
            get classes() {
                return R$
            },
            set classes(e) {
                Object.assign(R$, e)
            }
        });
        const k$ = R$;
        var D$ = ({className: e, children: t})=>(0,
        z.jsx)("div", {
            className: Zu()(k$.overlayText, e),
            children: t
        });
        X.add("game-ui/overlay/overlay-text/overlay-text.tsx", {
            get OverlayText() {
                return D$
            },
            set OverlayText(e) {
                D$ = e
            }
        });
        var F$ = ()=>{
            const e = kE(yE.PS, (0,
            z.jsx)(_c.Overlay.CONTROLLER_DISCONNECTED_PS, {}), (0,
            z.jsx)(_c.Overlay.CONTROLLER_DISCONNECTED, {}));
            return (0,
            z.jsx)(M$, {
                actions: (0,
                z.jsx)(P$, {
                    children: (0,
                    z.jsx)(N$, {})
                }),
                children: (0,
                z.jsx)(D$, {
                    children: e
                })
            })
        }
        ;
        X.add("game-ui/overlay/logo-screen/controller-disconnected.tsx", {
            get ControllerDisconnected() {
                return F$
            },
            set ControllerDisconnected(e) {
                F$ = e
            }
        });
        var U$ = ()=>{
            const e = kE(yE.PS, (0,
            z.jsx)(_c.Overlay.CONTROLLER_PAIRING_CHANGED_PS, {}), (0,
            z.jsx)(_c.Overlay.CONTROLLER_PAIRING_CHANGED, {}));
            return (0,
            z.jsx)(M$, {
                actions: (0,
                z.jsx)(P$, {
                    children: (0,
                    z.jsx)(N$, {})
                }),
                children: (0,
                z.jsxs)(D$, {
                    children: [e, (0,
                    z.jsx)(_c.Overlay.SWITCH_USER, {})]
                })
            })
        }
        ;
        X.add("game-ui/overlay/logo-screen/controller-pairing-changed.tsx", {
            get ControllerPairingChanged() {
                return U$
            },
            set ControllerPairingChanged(e) {
                U$ = e
            }
        });
        let B$ = {
            title: "title_oqw",
            messages: "messages_v_4",
            message: "message_LOu"
        };
        X.add("game-ui/overlay/logo-screen/corrupt-save-data/corrupt-save-data.module.scss", {
            get classes() {
                return B$
            },
            set classes(e) {
                Object.assign(B$, e)
            }
        });
        const G$ = B$;
        var V$ = ()=>{
            const e = sl(UK)
              , t = (0,
            Y.useRef)(null)
              , n = Hm();
            return (0,
            Y.useEffect)((()=>{
                const e = performance.now();
                let s = 0;
                const i = a=>{
                    if (!t.current)
                        return;
                    const o = t.current.scrollHeight;
                    t.current.scrollTop = .08 * (a - e) * n % (o / 2),
                    s = window.requestAnimationFrame(i)
                }
                ;
                return s = window.requestAnimationFrame(i),
                ()=>window.cancelAnimationFrame(s)
            }
            ), [n]),
            (0,
            z.jsxs)(M$, {
                actions: (0,
                z.jsx)(P$, {
                    children: (0,
                    z.jsx)(N$, {
                        displayButtonHints: !1,
                        text: (0,
                        z.jsx)(_c.Overlay.PRESS_ANY_KEY_ACTION, {})
                    })
                }),
                children: [(0,
                z.jsxs)(D$, {
                    children: [(0,
                    z.jsx)(_c.Overlay.CORRUPT_SAVE_DATA, {}), (0,
                    z.jsx)("div", {
                        className: G$.title,
                        children: (0,
                        z.jsx)(_c.Overlay.DELETED_ITEMS, {})
                    })]
                }), (0,
                z.jsx)("div", {
                    ref: t,
                    className: G$.messages,
                    children: e?.map(((e,t)=>(0,
                    z.jsx)("div", {
                        className: G$.message,
                        children: e
                    }, t)))
                })]
            })
        }
        ;
        X.add("game-ui/overlay/logo-screen/corrupt-save-data/corrupt-save-data.tsx", {
            get CorruptSaveData() {
                return V$
            },
            set CorruptSaveData(e) {
                V$ = e
            }
        });
        const H$ = {
            tension: 30,
            friction: 10
        };
        var K$ = ({size: e, lineWidth: t, progress: n, progressColors: s, className: i})=>{
            const a = Od(Sz(H$, n[0], 0), .01, 1)
              , o = Od(Sz(H$, n[1], 0), .01, 1)
              , r = Od(Sz(H$, n[2], 0), .01, 1)
              , l = n.length > 0 ? n.reduce(((e,t)=>e + t)) / n.length : 0
              , c = Hm()
              , u = e * c
              , d = Math.ceil(u)
              , m = (0,
            Y.useRef)(null);
            return (0,
            Y.useEffect)((()=>{
                if (!m.current)
                    return;
                const e = m.current.getContext("2d");
                e.clearRect(0, 0, d, d);
                let n = .5 * d - t * c;
                const i = .5 * d;
                e.lineCap = "round",
                e.lineWidth = t * c;
                const l = [a, o, r];
                for (let a = 0; a < l.length; ++a) {
                    e.beginPath();
                    const o = a * Math.PI;
                    e.arc(i, i, n, o, o + 2 * l[a] * Math.PI),
                    e.strokeStyle = s[a],
                    e.stroke(),
                    n -= (t + 2) * c
                }
            }
            ), [d, t, s, c, a, o, r]),
            (0,
            z.jsx)("div", {
                children: (0,
                z.jsx)("canvas", {
                    ref: m,
                    width: d,
                    height: d,
                    className: i,
                    style: {
                        width: u,
                        height: u,
                        opacity: Od(20 * l, 0, 1)
                    }
                })
            })
        }
        ;
        X.add("game-ui/overlay/logo-screen/loading/loading-progress.tsx", {
            get LoadingProgress() {
                return K$
            },
            set LoadingProgress(e) {
                K$ = e
            }
        });
        let W$ = {
            "overlay-loading": "overlay-loading_xAc",
            overlayLoading: "overlay-loading_xAc",
            title: "title_xw2",
            progress: "progress_xKD",
            hint: "hint_KWz"
        };
        X.add("game-ui/overlay/logo-screen/loading/loading.module.scss", {
            get classes() {
                return W$
            },
            set classes(e) {
                Object.assign(W$, e)
            }
        });
        const z$ = W$
          , Y$ = ["#E1F8FF", "#84E2FF", "#12C8FF"];
        var $$ = ()=>{
            const e = sl(DK)
              , t = sl(FK)
              , [n,s] = (0,
            Y.useState)(0)
              , {setBackdropVisible: i} = pq()
              , a = (0,
            Y.useRef)(!1)
              , o = e.reduce(((e,t)=>t + e), 0) / e.length;
            return o > .5 && !a.current && (a.current = !0),
            (0,
            Y.useEffect)((()=>{
                if (o > .5)
                    return i(),
                    ()=>{
                        i(!1)
                    }
            }
            ), [i, a.current]),
            (0,
            Y.useEffect)((()=>{
                s(Math.floor(Math.random() * t.length));
                const e = window.setInterval((()=>{
                    s(Math.floor(Math.random() * t.length))
                }
                ), 1e4);
                return ()=>{
                    window.clearInterval(e)
                }
            }
            ), [t.length]),
            (0,
            z.jsx)(z.Fragment, {
                children: (0,
                z.jsxs)("div", {
                    className: z$.overlayLoading,
                    children: [(0,
                    z.jsx)("div", {
                        className: z$.title,
                        children: (0,
                        z.jsx)(_c.Loading.LOADING_TITLE, {})
                    }), (0,
                    z.jsx)(K$, {
                        progress: e,
                        progressColors: Y$,
                        size: 128,
                        lineWidth: 8,
                        className: z$.progress
                    }), (0,
                    z.jsx)("div", {
                        className: z$.hint,
                        children: t.length > n && (0,
                        z.jsx)(cc, {
                            id: t[n]
                        })
                    })]
                })
            })
        }
        ;
        X.add("game-ui/overlay/logo-screen/loading/loading.tsx", {
            get LoadingScreen() {
                return $$
            },
            set LoadingScreen(e) {
                $$ = e
            }
        });
        let q$ = {
            "logo-screen": "logo-screen_KLI",
            logoScreen: "logo-screen_KLI",
            "backdrop-visible": "backdrop-visible_Sfr",
            backdropVisible: "backdrop-visible_Sfr",
            logo: "logo_IpH",
            content: "content_sOm",
            backdrop: "backdrop__Hj"
        };
        X.add("game-ui/overlay/logo-screen/logo-screen.module.scss", {
            get classes() {
                return q$
            },
            set classes(e) {
                Object.assign(q$, e)
            }
        });
        const X$ = q$;
        var Q$ = ({children: e})=>{
            const {backdrop: t, visible: n, clearBackdrop: s} = pq();
            return (0,
            Y.useEffect)((()=>{
                if (t)
                    return ()=>{
                        s()
                    }
            }
            ), [t, s]),
            (0,
            z.jsxs)("div", {
                className: Zu()(X$.logoScreen, t && n && X$.backdropVisible),
                children: [t && (0,
                z.jsx)("div", {
                    className: X$.backdrop,
                    style: {
                        "--backdropImage": `url('${t}')`
                    }
                }), (0,
                z.jsx)("img", {
                    src: "Media/Menu/GameLogo.svg",
                    className: X$.logo
                }), (0,
                z.jsx)("div", {
                    className: Zu()(X$.content, t && n && "has-custom-backdrop"),
                    children: e
                })]
            })
        }
        ;
        X.add("game-ui/overlay/logo-screen/logo-screen.tsx", {
            get LogoScreen() {
                return Q$
            },
            set LogoScreen(e) {
                Q$ = e
            }
        });
        var Z$ = ()=>(0,
        z.jsx)(M$, {
            children: (0,
            z.jsxs)(D$, {
                children: [(0,
                z.jsx)(_c.Overlay.USER_LOGGED_OUT, {}), (0,
                z.jsx)(_c.Overlay.PLEASE_LOG_IN, {})]
            })
        });
        X.add("game-ui/overlay/logo-screen/user-logged-out.tsx", {
            get UserLoggedOut() {
                return Z$
            },
            set UserLoggedOut(e) {
                Z$ = e
            }
        });
        var J$ = ()=>(0,
        z.jsx)(M$, {
            actions: (0,
            z.jsx)(P$, {
                children: (0,
                z.jsx)(N$, {})
            }),
            children: (0,
            z.jsx)(D$, {
                children: (0,
                z.jsx)(_c.Overlay.VALIDATION, {})
            })
        });
        X.add("game-ui/overlay/logo-screen/validation.tsx", {
            get Validation() {
                return J$
            },
            set Validation(e) {
                J$ = e
            }
        });
        var eq = ()=>(0,
        z.jsx)(M$, {
            children: (0,
            z.jsx)(D$, {
                children: (0,
                z.jsx)(_c.Overlay.PLEASE_WAIT, {})
            })
        });
        X.add("game-ui/overlay/logo-screen/wait.tsx", {
            get Wait() {
                return eq
            },
            set Wait(e) {
                eq = e
            }
        });
        let tq = {
            enter: "enter_Hgx",
            "enter-active": "enter-active_hYc",
            enterActive: "enter-active_hYc",
            exit: "exit_mhm",
            "exit-active": "exit-active_via",
            exitActive: "exit-active_via"
        };
        X.add("game-ui/overlay/transitions/screen.module.scss", {
            get classes() {
                return tq
            },
            set classes(e) {
                Object.assign(tq, e)
            }
        });
        const nq = tq;
        let sq = {
            "splash-screen": "splash-screen_vso",
            splashScreen: "splash-screen_vso",
            "step-container": "step-container_CQz",
            stepContainer: "step-container_CQz",
            enter: "enter_A2e",
            "enter-active": "enter-active_IRn",
            enterActive: "enter-active_IRn",
            exit: "exit_qYD",
            "exit-active": "exit-active_Fge",
            exitActive: "exit-active_Fge",
            logo: "logo_ceO",
            splashLogoScale: "splashLogoScale_CGf",
            "splash3-container": "splash3-container_iqq",
            splash3Container: "splash3-container_iqq",
            "legal-text": "legal-text_p0a",
            legalText: "legal-text_p0a",
            "disclaimer-text": "disclaimer-text_uUS",
            disclaimerText: "disclaimer-text_uUS",
            "coherent-logo": "coherent-logo_ykj logo_ceO",
            coherentLogo: "coherent-logo_ykj logo_ceO",
            "didimo-logo": "didimo-logo_ar3 logo_ceO",
            didimoLogo: "didimo-logo_ar3 logo_ceO",
            "instalod-logo": "instalod-logo_Iyq logo_ceO",
            instalodLogo: "instalod-logo_Iyq logo_ceO",
            "unity-logo": "unity-logo_WZ0 logo_ceO",
            unityLogo: "unity-logo_WZ0 logo_ceO",
            "colossal-logo": "colossal-logo_gge logo_ceO",
            colossalLogo: "colossal-logo_gge logo_ceO",
            "paradox-logo": "paradox-logo_FKO logo_ceO",
            paradoxLogo: "paradox-logo_FKO logo_ceO",
            "sega-logo": "sega-logo_yCR logo_ceO",
            segaLogo: "sega-logo_yCR logo_ceO"
        };
        X.add("game-ui/overlay/splash-screen/splash-screen.module.scss", {
            get classes() {
                return sq
            },
            set classes(e) {
                Object.assign(sq, e)
            }
        });
        const iq = sq;
        var aq = ({screen: e})=>(0,
        z.jsx)(mh, {
            styles: nq,
            children: (0,
            z.jsx)("div", {
                className: iq.splashScreen,
                children: (0,
                z.jsx)(ud, {
                    skipInitial: !1,
                    children: (0,
                    z.jsx)(mh, {
                        styles: iq,
                        children: (0,
                        z.jsxs)("div", {
                            className: iq.stepContainer,
                            children: [e === RK.Splash1 && (0,
                            z.jsx)("img", {
                                src: "Media/Menu/ParadoxLogo.svg",
                                className: iq.paradoxLogo
                            }), e === RK.Splash2 && (0,
                            z.jsx)("img", {
                                src: "Media/Menu/ColossalLogo.svg",
                                className: iq.colossalLogo
                            }), e === RK.Splash3 && (0,
                            z.jsx)("img", {
                                src: "Media/Menu/SegaLogo.svg",
                                className: iq.segaLogo
                            }), e === RK.Splash4 && (0,
                            z.jsxs)(z.Fragment, {
                                children: [(0,
                                z.jsxs)("div", {
                                    className: iq.splash3Container,
                                    children: [(0,
                                    z.jsx)("img", {
                                        src: "Media/Menu/CL_logo_full_horizontal_white.svg",
                                        className: iq.coherentLogo
                                    }), (0,
                                    z.jsx)("img", {
                                        src: "Media/Menu/InstaLOD-Logo-BW-WhiteOnBlack.svg",
                                        className: iq.instalodLogo
                                    }), (0,
                                    z.jsx)("img", {
                                        src: "Media/Menu/U_Logo_MadeWith_RichBlack_Knockout_RGB.svg",
                                        className: iq.unityLogo
                                    }), (0,
                                    z.jsx)("img", {
                                        src: "Media/Menu/Didimo_logo_White_Flat.svg",
                                        className: iq.didimoLogo
                                    })]
                                }), (0,
                                z.jsxs)("div", {
                                    className: iq.legalText,
                                    children: [(0,
                                    z.jsx)("p", {
                                        children: "Cities: Skylines II uses Coherent Labs user interface technology. Copyright © 2012-2024 Coherent Labs. All Rights Reserved."
                                    }), (0,
                                    z.jsx)("p", {
                                        children: "Cities: Skylines II uses Didimo Popul8™ characters technology. Copyright © 2023 Didimo, Inc. All Rights Reserved."
                                    }), (0,
                                    z.jsx)("p", {
                                        children: "Cities: Skylines II uses InstaLOD. Copyright © 2016-2024 InstaLOD GmbH. All Rights Reserved."
                                    }), (0,
                                    z.jsx)("p", {
                                        children: "Powered by the Unity Engine. Copyright © 2024 Unity Technologies. All Rights Reserved."
                                    })]
                                })]
                            }), e === RK.PiracyDisclaimer && (0,
                            z.jsxs)("div", {
                                className: iq.disclaimerText,
                                children: [(0,
                                z.jsx)("p", {
                                    children: "＜ご注意＞"
                                }), (0,
                                z.jsx)("p", {
                                    children: "ゲームソフトを権利者の許諾なく、インターネットを通じて配信、"
                                }), (0,
                                z.jsx)("p", {
                                    children: "配布する行為、また、違法なインターネット配信と知りながら"
                                }), (0,
                                z.jsx)("p", {
                                    children: "ダウンロードする行為は、法律で固く禁じられております。"
                                }), (0,
                                z.jsx)("p", {
                                    children: "みなさまのご理解とご協力をお願いいたします。"
                                })]
                            }), e === RK.PhotosensitivityDisclaimer && (0,
                            z.jsxs)("div", {
                                className: iq.disclaimerText,
                                children: [(0,
                                z.jsx)("p", {
                                    children: "このゲームには、画面の点滅やフラッシュ効果などを利用した演出が登場します。"
                                }), (0,
                                z.jsx)("p", {
                                    children: "ごくまれに、強い光の刺激や点滅、テレビ画面などを見ていて、"
                                }), (0,
                                z.jsx)("p", {
                                    children: "一時的に筋肉のけいれん、意識の喪失などの症状を起こす人がいます。"
                                }), (0,
                                z.jsx)("p", {
                                    children: "こうした経験のある方は、このソフトをプレイする前に必ず医師と相談してください。"
                                }), (0,
                                z.jsx)("p", {
                                    children: "また、プレイ中にこのような症状が起きた時はすぐにプレイをやめ、"
                                }), (0,
                                z.jsx)("p", {
                                    children: "医師の診察を受けてください。"
                                })]
                            })]
                        })
                    }, e)
                })
            })
        });
        X.add("game-ui/overlay/splash-screen/splash-screen.tsx", {
            get SplashScreen() {
                return aq
            },
            set SplashScreen(e) {
                aq = e
            }
        });
        let oq = {
            "overlay-ui": "overlay-ui_UIz",
            overlayUi: "overlay-ui_UIz",
            base: "base_rnY",
            exit: "exit_Bve",
            enter: "enter_FuQ",
            "enter-active": "enter-active_QSz",
            enterActive: "enter-active_QSz",
            "exit-active": "exit-active_iXm",
            exitActive: "exit-active_iXm"
        };
        X.add("game-ui/overlay/overlay-ui.module.scss", {
            get classes() {
                return oq
            },
            set classes(e) {
                Object.assign(oq, e)
            }
        });
        const rq = oq
          , lq = [RK.Engagement, RK.Wait, RK.Validation, RK.Splash1, RK.Splash2, RK.Splash3, RK.Splash4, RK.None, RK.PiracyDisclaimer, RK.PhotosensitivityDisclaimer];
        var cq = ({forcedScreen: e, uiReady: t})=>{
            const n = sl(kK);
            let s = e || n;
            return t || lq.includes(s) && s || (s = RK.Loading),
            _$(),
            (0,
            z.jsx)(uq, {
                screen: s
            })
        }
        ;
        const uq = (0,
        Y.memo)((function({screen: e}) {
            const t = (0,
            Y.useRef)(e);
            t.current = e;
            const n = e !== RK.None;
            return (0,
            z.jsx)(wS, {
                in: n,
                children: (0,
                z.jsx)(mh, {
                    styles: rq,
                    enterDuration: 400,
                    exitDuration: 400,
                    children: (0,
                    z.jsx)("div", {
                        className: rq.overlayUi,
                        children: (0,
                        z.jsx)(Rp, {
                            children: dq(t.current)
                        })
                    }, "overlay")
                })
            })
        }
        ));
        function dq(e) {
            switch (e) {
            case RK.Splash1:
            case RK.Splash2:
            case RK.Splash3:
            case RK.Splash4:
            case RK.PiracyDisclaimer:
            case RK.PhotosensitivityDisclaimer:
                return (0,
                z.jsx)(aq, {
                    screen: e
                }, "splashScreen");
            case RK.None:
                return null;
            default:
                return (0,
                z.jsx)(Q$, {
                    children: mq(e)
                }, "logoScreen")
            }
        }
        function mq(e) {
            switch (e) {
            case RK.Loading:
                return (0,
                z.jsx)($$, {}, RK[RK.Loading]);
            case RK.Engagement:
                return (0,
                z.jsx)(I$, {}, RK[RK.Engagement]);
            case RK.Wait:
                return (0,
                z.jsx)(eq, {}, RK[RK.Wait]);
            case RK.Validation:
                return (0,
                z.jsx)(J$, {}, RK[RK.Validation]);
            case RK.ControllerDisconnected:
                return (0,
                z.jsx)(F$, {}, RK[RK.ControllerDisconnected]);
            case RK.ControllerPairingChanged:
                return (0,
                z.jsx)(U$, {}, RK[RK.ControllerPairingChanged]);
            case RK.UserLoggedOut:
                return (0,
                z.jsx)(Z$, {}, RK[RK.UserLoggedOut]);
            case RK.CorruptSaveData:
                return (0,
                z.jsx)(V$, {}, RK[RK.CorruptSaveData]);
            default:
                return null
            }
        }
        const hq = (0,
        Y.createContext)({
            backdrop: void 0,
            visible: !1,
            setBackdrop: ()=>{}
            ,
            clearBackdrop: ()=>{}
            ,
            setBackdropVisible: ()=>{}
        });
        var gq = ({children: e})=>{
            const [t,n] = (0,
            Y.useState)()
              , [s,i] = (0,
            Y.useState)(!1)
              , a = (0,
            Y.useCallback)((()=>{
                n(void 0),
                i(!1)
            }
            ), [])
              , o = (0,
            Y.useCallback)(((e=!0)=>{
                i(e)
            }
            ), [])
              , r = (0,
            Y.useMemo)((()=>({
                backdrop: t,
                visible: s,
                setBackdrop: n,
                clearBackdrop: a,
                setBackdropVisible: o
            })), [t, a, o, s]);
            return (0,
            z.jsx)(hq.Provider, {
                value: r,
                children: e
            })
        }
          , pq = ()=>(0,
        Y.useContext)(hq);
        X.add("game-ui/overlay/overlay-ui.tsx", {
            get OverlayUI() {
                return cq
            },
            set OverlayUI(e) {
                cq = e
            },
            get renderLogoScreenContent() {
                return mq
            },
            set renderLogoScreenContent(e) {
                mq = e
            },
            get OverlayBackdropProvider() {
                return gq
            },
            set OverlayBackdropProvider(e) {
                gq = e
            },
            get useOverlayBackdrop() {
                return pq
            },
            set useOverlayBackdrop(e) {
                pq = e
            }
        });
        const fq = ({save: e})=>{
            const {setBackdrop: t} = pq();
            return (0,
            Y.useEffect)((()=>{
                t(e.preview)
            }
            ), [e, t]),
            (0,
            z.jsx)(b$, {
                zIndex: 2e4,
                metadata: e,
                title: (0,
                z.jsx)(_c.Common.WARNING, {}),
                onConfirm: TM,
                onCancel: wM
            })
        }
        ;
        var xq = ()=>{
            const {setBackdrop: e} = pq()
              , t = (0,
            Y.useContext)(xE)
              , n = sl(DE)
              , s = wW(n)
              , i = n && !!s.length;
            return (0,
            Y.useEffect)((()=>{
                const s = BE.subscribe((()=>{
                    i ? t.showDialog((0,
                    z.jsx)(fq, {
                        save: n
                    })) : n ? (e(n.preview),
                    TM()) : wM()
                }
                ));
                return ()=>s?.dispose()
            }
            ), [n, t, i, s, e]),
            null
        }
        ;
        X.add("game-ui/common/app/content-prerequisites-checker/content-prerequisites-checker.tsx", {
            get ContentPrerequisitesChecker() {
                return xq
            },
            set ContentPrerequisitesChecker(e) {
                xq = e
            }
        });
        var vq = (0,
        Y.createContext)(void 0);
        function _q({children: e}) {
            const [t,n] = (0,
            Y.useState)({})
              , s = (0,
            Y.useCallback)(((e,t)=>{
                n((n=>({
                    ...n,
                    [e]: t
                })))
            }
            ), [])
              , i = (0,
            Y.useCallback)(((e,n)=>t[e] ?? n), [t]);
            return (0,
            z.jsx)(vq.Provider, {
                value: {
                    getState: i,
                    setState: s
                },
                children: e
            })
        }
        function bq() {
            const e = (0,
            Y.useContext)(vq);
            if (!e)
                throw new Error("useToggleState must be used within ToggleStateProvider");
            return e
        }
        X.add("game-ui/common/hooks/use-toggle-state.tsx", {
            get ToggleStateContext() {
                return vq
            },
            set ToggleStateContext(e) {
                vq = e
            },
            get ToggleStateProvider() {
                return _q
            },
            set ToggleStateProvider(e) {
                _q = e
            },
            get useToggleState() {
                return bq
            },
            set useToggleState(e) {
                bq = e
            }
        });
        const Tq = {
            default: "Overpass",
            "ru-RU": "Noto Sans",
            "ko-KR": "Noto Sans KR",
            "ja-JP": "Noto Sans JP",
            "zh-HANS": "Noto Sans SC",
            "zh-HANT": "Noto Sans TC"
        };
        var Eq = ({children: e})=>{
            const t = sl(eu)
              , n = sl(Ul)
              , s = sl(PE)
              , i = (0,
            Y.useMemo)((()=>function(e) {
                switch (e) {
                case Qc.Id:
                    return Sq;
                case Qc.Fallback:
                    return yq;
                default:
                    return Iq
                }
            }(t)), [t])
              , [a,o] = (0,
            Y.useState)({
                translate: i,
                unitSettings: n
            });
            return (0,
            Y.useEffect)((()=>o({
                translate: i,
                unitSettings: n
            })), [n, i]),
            (0,
            Y.useEffect)((()=>{
                const e = tu.subscribe((()=>o((e=>({
                    ...e
                })))));
                return ()=>e.dispose()
            }
            ), []),
            Pa.defaults.font.family = Tq[s] || Tq.default,
            function(e) {
                qp(`locale-${e}`)
            }(s),
            (0,
            z.jsx)(nc.Provider, {
                value: a,
                children: e
            })
        }
        ;
        function Iq(e, t) {
            const n = Rr().translate(e);
            return n === e ? t ?? null : n
        }
        function Sq(e, t) {
            return e
        }
        function yq(e, t) {
            return t ?? null
        }
        X.add("game-ui/common/localization/localization-provider.tsx", {
            get LocalizationProvider() {
                return Eq
            },
            set LocalizationProvider(e) {
                Eq = e
            }
        });
        const jq = new Ig("CONTINUE_KEY");
        var Cq = ({error: e, severity: t=IE.Error, title: n, message: s, errorDetails: i, canQuit: a=!0, canSaveAndQuit: o=!0, canSaveAndContinue: r=!1})=>{
            const l = (0,
            Y.useContext)(vE)
              , c = sc()
              , u = (0,
            Y.useCallback)((()=>{
                zE([pu(c, e.localizedTitle), pu(c, e.localizedMessage), i].filter((e=>!!e)).join("\n\n"))
            }
            ), [c, e.localizedTitle, e.localizedMessage, i])
              , d = (0,
            Y.useCallback)((()=>{
                l.onClose(),
                WE()
            }
            ), [l])
              , m = XE()
              , [h,g] = (0,
            Y.useState)(0)
              , p = Dm()
              , f = (0,
            Y.useMemo)((()=>{
                const e = [0];
                return a && e.push(1),
                o && e.push(2),
                r && e.push(3),
                e
            }
            ), [a, r, o])
              , x = (0,
            Y.useMemo)((()=>({
                "Select Popup Button": e=>{
                    g(e >= 0 ? (h + 1) % f.length : (h + f.length - 1) % f.length)
                }
            })), [h, f]);
            return (0,
            z.jsx)(l_, {
                children: (0,
                z.jsx)(sI, {
                    controller: m,
                    children: (0,
                    z.jsx)(Mg, {
                        actions: x,
                        disabled: p,
                        children: (0,
                        z.jsx)(rE, {
                            theme: uE,
                            header: (0,
                            z.jsx)(dE, {
                                children: null != n ? n : (0,
                                z.jsx)(_c.Common.ERROR_DIALOG_TITLE, {})
                            }),
                            className: hE.errorDialog,
                            onClose: l.onClose,
                            children: (0,
                            z.jsxs)(np, {
                                initialFocused: jq,
                                children: [(0,
                                z.jsxs)("div", {
                                    className: hE.iconLayout,
                                    children: [(0,
                                    z.jsx)("img", {
                                        src: Nq(t),
                                        className: hE.icon
                                    }), (0,
                                    z.jsxs)("div", {
                                        className: hE.mainColumn,
                                        children: [(0,
                                        z.jsx)("div", {
                                            className: hE.errorMessage,
                                            style: {
                                                maxHeight: .5 * screen.availHeight
                                            },
                                            children: s
                                        }), null != i && (0,
                                        z.jsxs)("div", {
                                            className: hE.errorDetails,
                                            children: [(0,
                                            z.jsx)(hb, {
                                                controller: m,
                                                className: hE.content,
                                                hintClassName: hE.scrollHint,
                                                labelClassName: hE.scrollHintLabel,
                                                children: i
                                            }), (0,
                                            z.jsx)(tb, {
                                                tinted: !0,
                                                src: "Media/Glyphs/Copy.svg",
                                                className: hE.copyButton,
                                                onSelect: u
                                            })]
                                        })]
                                    })]
                                }), (0,
                                z.jsxs)("div", {
                                    className: hE.buttons,
                                    children: [(0,
                                    z.jsx)(U_, {
                                        focusKey: jq,
                                        theme: ZE,
                                        className: hE.button,
                                        onSelect: l.onClose,
                                        selected: !p && 0 === f[h],
                                        shortcut: p || 0 !== f[h] ? void 0 : "Confirm",
                                        children: (0,
                                        z.jsx)(_c.Common.ERROR_DIALOG_CONTINUE, {})
                                    }), a && (0,
                                    z.jsx)(U_, {
                                        theme: ZE,
                                        className: hE.button,
                                        onSelect: HE,
                                        selected: !p && 1 === f[h],
                                        shortcut: p || 1 !== f[h] ? void 0 : "Confirm",
                                        children: (0,
                                        z.jsx)(_c.Common.ERROR_DIALOG_QUIT_GAME, {})
                                    }), o && (0,
                                    z.jsx)(U_, {
                                        theme: ZE,
                                        className: hE.button,
                                        onSelect: KE,
                                        selected: !p && 2 === f[h],
                                        shortcut: p || 2 !== f[h] ? void 0 : "Confirm",
                                        children: (0,
                                        z.jsx)(_c.Common.ERROR_DIALOG_SAVE_QUIT_GAME, {})
                                    }), r && (0,
                                    z.jsx)(U_, {
                                        theme: ZE,
                                        className: hE.button,
                                        onSelect: d,
                                        selected: !p && 3 === f[h],
                                        shortcut: p || 3 !== f[h] ? void 0 : "Confirm",
                                        children: (0,
                                        z.jsx)(_c.Common.ERROR_DIALOG_SAVE_CONTINUE, {})
                                    })]
                                })]
                            })
                        })
                    })
                })
            })
        }
        ;
        function Nq(e) {
            return e === IE.Warning ? "Media/Misc/Warning.svg" : "Media/Misc/Error.svg"
        }
        X.add("game-ui/common/panel/dialog/error-dialog.tsx", {
            get ErrorDialog() {
                return Cq
            },
            set ErrorDialog(e) {
                Cq = e
            }
        });
        const wq = new Ig("CHILDREN_KEY")
          , Oq = new Ig("DIALOG_KEY");
        var Pq = ({children: e})=>{
            const t = sl(LE)
              , n = (0,
            Y.useMemo)((()=>({
                onClose: ()=>YE()
            })), []);
            return (0,
            z.jsxs)(op, {
                focused: null != t ? Oq : wq,
                children: [(0,
                z.jsx)(ap, {
                    focusKey: wq,
                    children: e
                }), (0,
                z.jsx)(ap, {
                    focusKey: Oq,
                    children: (0,
                    z.jsx)(vE.Provider, {
                        value: n,
                        children: null != t && (0,
                        z.jsx)(Cq, {
                            error: t,
                            severity: t.severity,
                            title: Lq(t),
                            message: (s = t,
                            (0,
                            z.jsx)(Cb, {
                                children: (0,
                                z.jsx)(gu, {
                                    value: s.localizedMessage
                                })
                            })),
                            errorDetails: t.errorDetails,
                            canQuit: 0 != (t.actions & SE.Quit),
                            canSaveAndQuit: 0 != (t.actions & SE.SaveAndQuit),
                            canSaveAndContinue: 0 != (t.actions & SE.SaveAndContinue)
                        })
                    })
                })]
            });
            var s
        }
        ;
        function Lq(e) {
            return (0,
            z.jsx)(gu, {
                value: e.localizedTitle
            })
        }
        X.add("game-ui/common/panel/dialog/error-dialog-renderer.tsx", {
            get ErrorDialogRenderer() {
                return Pq
            },
            set ErrorDialogRenderer(e) {
                Pq = e
            }
        });
        const Aq = "debug";
        var Mq, Rq, kq = $r(Aq, "enabled"), Dq = $r(Aq, "visible"), Fq = $r(Aq, "panels"), Uq = $r(Aq, "selectedIndex"), Bq = $r(Aq, "selectedPanel"), Gq = $r(Aq, "children"), Vq = $r(Aq, "observedBinding"), Hq = Zr(Aq, "bindingTriggered"), Kq = $r(Aq, "developerInfoVisible"), Wq = $r(Aq, "watches");
        function zq() {
            tl(Aq, "show")
        }
        function Yq() {
            tl(Aq, "hide")
        }
        function $q() {
            tl(Aq, "selectPreviousPanel")
        }
        function qq(e) {
            tl(Aq, "selectPanel", e)
        }
        function Xq() {
            tl(Aq, "selectNextPanel")
        }
        !function(e) {
            e[e.Unknown = 0] = "Unknown",
            e[e.Trigger = 1] = "Trigger",
            e[e.Event = 2] = "Event",
            e[e.Value = 3] = "Value"
        }(Mq || (Mq = {})),
        function(e) {
            e.History = "debug.HistoryWatch",
            e.Distribution = "debug.DistributionWatch"
        }(Rq || (Rq = {})),
        X.add("game-ui/debug/data-binding/debug-bindings.ts", {
            get enabled() {
                return enabled
            },
            set enabled(e) {
                enabled = e
            },
            get visible() {
                return visible
            },
            set visible(e) {
                visible = e
            },
            get panels() {
                return panels
            },
            set panels(e) {
                panels = e
            },
            get selectedIndex() {
                return selectedIndex
            },
            set selectedIndex(e) {
                selectedIndex = e
            },
            get selectedPanel() {
                return selectedPanel
            },
            set selectedPanel(e) {
                selectedPanel = e
            },
            get debugChildren() {
                return debugChildren
            },
            set debugChildren(e) {
                debugChildren = e
            },
            get observedBinding() {
                return observedBinding
            },
            set observedBinding(e) {
                observedBinding = e
            },
            get bindingTriggered() {
                return bindingTriggered
            },
            set bindingTriggered(e) {
                bindingTriggered = e
            },
            get developerInfoVisible() {
                return developerInfoVisible
            },
            set developerInfoVisible(e) {
                developerInfoVisible = e
            },
            get watches() {
                return watches
            },
            set watches(e) {
                watches = e
            },
            get showDebugUI() {
                return zq
            },
            set showDebugUI(e) {
                zq = e
            },
            get hideDebugUI() {
                return Yq
            },
            set hideDebugUI(e) {
                Yq = e
            },
            get selectPreviousPanel() {
                return $q
            },
            set selectPreviousPanel(e) {
                $q = e
            },
            get selectPanel() {
                return qq
            },
            set selectPanel(e) {
                qq = e
            },
            get selectNextPanel() {
                return Xq
            },
            set selectNextPanel(e) {
                Xq = e
            },
            get DebugBindingType() {
                return Mq
            },
            set DebugBindingType(e) {
                Mq = e
            },
            get DebugWatchType() {
                return Rq
            },
            set DebugWatchType(e) {
                Rq = e
            }
        });
        let Qq = {
            button: "button_BNH"
        };
        X.add("game-ui/debug/themes/tab.module.scss", {
            get classes() {
                return Qq
            },
            set classes(e) {
                Object.assign(Qq, e)
            }
        });
        const Zq = Qq;
        var Jq;
        !function(e) {
            e.IntArrowField = "Game.UI.Debug.IntArrowField",
            e.UIntArrowField = "Game.UI.Debug.UIntArrowField",
            e.FloatArrowField = "Game.UI.Debug.FloatArrowField",
            e.Image = "Game.UI.Debug.Image"
        }(Jq || (Jq = {})),
        X.add("game-ui/debug/data-binding/debug-widgets.ts", {
            get DebugWidgetType() {
                return Jq
            },
            set DebugWidgetType(e) {
                Jq = e
            }
        });
        let eX = {
            button: "button_hxl button_k8s"
        };
        X.add("game-ui/debug/widgets/button/button.module.scss", {
            get classes() {
                return eX
            },
            set classes(e) {
                Object.assign(eX, e)
            }
        });
        const tX = eX;
        var nX = ({parent: e, path: t, props: n})=>{
            const s = ZR(e, t)
              , i = YM(MR, s)
              , a = LR(s.path);
            return (0,
            z.jsx)(sX, {
                onSelect: i,
                focusKey: a,
                children: (0,
                z.jsx)(gu, {
                    value: n.displayName
                })
            })
        }
        ;
        function sX({focusKey: e, children: t, onSelect: n}) {
            return (0,
            z.jsx)(U_, {
                focusKey: e,
                theme: tX,
                onSelect: n,
                children: t || " "
            })
        }
        X.add("game-ui/debug/widgets/button/button.tsx", {
            get BoundDebugButton() {
                return nX
            },
            set BoundDebugButton(e) {
                nX = e
            }
        });
        let iX = {
            title: "title_Xkf",
            children: "children_HxX"
        };
        X.add("game-ui/debug/widgets/container/container.module.scss", {
            get classes() {
                return iX
            },
            set classes(e) {
                Object.assign(iX, e)
            }
        });
        const aX = iX;
        var oX = ({parent: e, path: t, children: n, props: s})=>{
            const i = ZR(e, t)
              , a = (0,
            Y.useContext)(gD);
            return (0,
            z.jsx)(rX, {
                title: (0,
                z.jsx)(gu, {
                    value: s.displayName
                }),
                children: (0,
                z.jsx)(hD, {
                    parent: i,
                    components: a,
                    data: n
                })
            })
        }
          , rX = ({title: e, children: t})=>(0,
        z.jsxs)("div", {
            className: aX.container,
            children: [e && (0,
            z.jsx)("div", {
                className: aX.title,
                children: e
            }), (0,
            z.jsx)("div", {
                className: aX.children,
                children: t
            })]
        });
        X.add("game-ui/debug/widgets/container/container.tsx", {
            get BoundContainer() {
                return oX
            },
            set BoundContainer(e) {
                oX = e
            },
            get Container() {
                return rX
            },
            set Container(e) {
                rX = e
            }
        });
        let lX = {
            button: "button__Wn",
            value: "value_fMT"
        };
        X.add("game-ui/debug/widgets/fields/arrow-control/arrow-control.module.scss", {
            get classes() {
                return lX
            },
            set classes(e) {
                Object.assign(lX, e)
            }
        });
        const cX = lX;
        var uX = ({onSelectLeft: e, onSelectRight: t, children: n})=>{
            const s = (0,
            Y.useRef)(!1)
              , [i,a] = (0,
            Y.useState)(!1);
            (0,
            Y.useEffect)((()=>{
                i || (s.current = !1)
            }
            ), [i]);
            const o = (0,
            Y.useMemo)((()=>({
                "Debug Change Field": n=>{
                    n < 0 ? e(s.current) : t(s.current)
                }
                ,
                "Debug Multiplier": e=>{
                    s.current = e > 0
                }
            })), [e, t])
              , r = (0,
            Y.useCallback)((()=>e(s.current)), [e])
              , l = (0,
            Y.useCallback)((()=>t(s.current)), [t]);
            return (0,
            z.jsx)(Ah, {
                onFocusChange: a,
                children: (0,
                z.jsxs)(Mg, {
                    actions: o,
                    children: [(0,
                    z.jsx)(U_, {
                        focusKey: Sg,
                        className: cX.button,
                        onSelect: r,
                        children: "<"
                    }), (0,
                    z.jsx)(Sp, {
                        className: cX.value,
                        children: n
                    }), (0,
                    z.jsx)(U_, {
                        focusKey: Sg,
                        className: cX.button,
                        onSelect: l,
                        children: ">"
                    })]
                })
            })
        }
        ;
        X.add("game-ui/debug/widgets/fields/arrow-control/arrow-control.tsx", {
            get ArrowControl() {
                return uX
            },
            set ArrowControl(e) {
                uX = e
            }
        });
        let dX = {
            field: "field_vGA",
            label: "label_KyX",
            control: "control_b3l",
            icon: "icon_vAF"
        };
        X.add("game-ui/debug/widgets/fields/field-layout/field-layout.module.scss", {
            get classes() {
                return dX
            },
            set classes(e) {
                Object.assign(dX, e)
            }
        });
        const mX = dX;
        var hX = ({label: e, children: t})=>(0,
        z.jsxs)(Sp, {
            className: mX.field,
            children: [(0,
            z.jsx)("div", {
                className: mX.label,
                children: e || " "
            }), (0,
            z.jsx)("div", {
                className: mX.control,
                children: t
            })]
        });
        X.add("game-ui/debug/widgets/fields/field-layout/field-layout.tsx", {
            get FieldLayout() {
                return hX
            },
            set FieldLayout(e) {
                hX = e
            }
        });
        var gX = ({label: e, value: t, min: n, max: s, step: i=1, stepMultiplier: a=10, onChange: o})=>{
            const r = (0,
            Y.useCallback)((e=>{
                let r = t - (e ? a : i);
                null != n && (r = Math.max(n, r)),
                null != s && (r = Math.min(r, s)),
                r !== t && o(r)
            }
            ), [i, a, s, n, o, t])
              , l = (0,
            Y.useCallback)((e=>{
                let r = t + (e ? a : i);
                null != n && (r = Math.max(n, r)),
                null != s && (r = Math.min(r, s)),
                r !== t && o(r)
            }
            ), [i, a, s, n, o, t]);
            return (0,
            z.jsx)(hX, {
                label: e,
                children: (0,
                z.jsx)(uX, {
                    onSelectLeft: r,
                    onSelectRight: l,
                    children: `${t}`
                })
            })
        }
          , pX = ({label: e, value: t, min: n, max: s, step: i=1, stepMultiplier: a=10, fractionDigits: o=0, onChange: r})=>{
            const l = (0,
            Y.useCallback)((e=>{
                let o = t - (e ? a : i);
                null != n && (o = Math.max(n, o)),
                null != s && (o = Math.min(o, s)),
                o !== t && r(o)
            }
            ), [i, a, s, n, r, t])
              , c = (0,
            Y.useCallback)((e=>{
                let o = t + (e ? a : i);
                null != n && (o = Math.max(n, o)),
                null != s && (o = Math.min(o, s)),
                o !== t && r(o)
            }
            ), [i, a, s, n, r, t]);
            return (0,
            z.jsx)(hX, {
                label: e,
                children: (0,
                z.jsx)(uX, {
                    onSelectLeft: l,
                    onSelectRight: c,
                    children: `${t.toFixed(o)}`
                })
            })
        }
        ;
        X.add("game-ui/debug/widgets/fields/arrow-field.tsx", {
            get IntArrowField() {
                return gX
            },
            set IntArrowField(e) {
                gX = e
            },
            get FloatArrowField() {
                return pX
            },
            set FloatArrowField(e) {
                pX = e
            }
        });
        let fX = {
            "foldout-button": "foldout-button_Ugi",
            foldoutButton: "foldout-button_Ugi",
            arrow: "arrow_wFy",
            expanded: "expanded_S2V",
            label: "label_qS_",
            value: "value_ypy"
        };
        X.add("game-ui/debug/widgets/foldout/foldout.module.scss", {
            get classes() {
                return fX
            },
            set classes(e) {
                Object.assign(fX, e)
            }
        });
        const xX = fX;
        var vX = ({parent: e, path: t, children: n, props: s})=>{
            const i = ZR(e, t)
              , a = (0,
            Y.useContext)(gD)
              , o = YM(kR, i);
            return (0,
            z.jsx)(_X, {
                title: (0,
                z.jsx)(gu, {
                    value: s.displayName
                }),
                opened: s.expanded,
                onOpenedChange: o,
                children: (0,
                z.jsx)(hD, {
                    parent: i,
                    components: a,
                    data: n
                })
            })
        }
          , _X = ({title: e, value: t, opened: n, children: s, onOpenedChange: i})=>{
            const a = (0,
            Y.useCallback)((()=>i(!n)), [i, n]);
            return (0,
            z.jsxs)(z.Fragment, {
                children: [(0,
                z.jsxs)(U_, {
                    onSelect: a,
                    className: Zu()(xX.foldoutButton, n && xX.expanded),
                    children: [(0,
                    z.jsx)("div", {
                        className: xX.arrow
                    }), (0,
                    z.jsx)("div", {
                        className: xX.label,
                        children: e
                    }), t && (0,
                    z.jsx)("div", {
                        className: xX.value,
                        children: t
                    })]
                }), n && (0,
                z.jsx)(rX, {
                    title: null,
                    children: s
                })]
            })
        }
          , bX = ({title: e, value: t, children: n})=>{
            const [s,i] = (0,
            Y.useState)(!1);
            return (0,
            z.jsx)(_X, {
                title: e,
                value: t,
                opened: s,
                onOpenedChange: i,
                children: n
            })
        }
        ;
        X.add("game-ui/debug/widgets/foldout/foldout.tsx", {
            get BoundFoldout() {
                return vX
            },
            set BoundFoldout(e) {
                vX = e
            },
            get Foldout() {
                return _X
            },
            set Foldout(e) {
                _X = e
            },
            get StatefulFoldout() {
                return bX
            },
            set StatefulFoldout(e) {
                bX = e
            }
        });
        let TX = {
            slider: "slider_HvX slider_pUS",
            value: "value_Ob7",
            range: "range_LNR range_iUN"
        };
        X.add("game-ui/debug/themes/slider.module.scss", {
            get classes() {
                return TX
            },
            set classes(e) {
                Object.assign(TX, e)
            }
        });
        const EX = TX;
        var IX = ({label: e, value: t, min: n, max: s, step: i=1, onChange: a})=>{
            const o = kA(i);
            return (0,
            z.jsx)(hX, {
                label: e,
                children: (0,
                z.jsx)(AA, {
                    value: t,
                    start: n,
                    end: s,
                    valueTransformer: o,
                    theme: EX,
                    onChange: a,
                    children: (0,
                    z.jsx)("div", {
                        className: EX.value,
                        children: `${t}`
                    })
                })
            })
        }
          , SX = ({label: e, value: t, min: n, max: s, step: i, fractionDigits: a, onChange: o})=>{
            const r = kA(i || 1);
            return (0,
            z.jsx)(hX, {
                label: e,
                children: (0,
                z.jsx)(AA, {
                    value: t,
                    start: n,
                    end: s,
                    valueTransformer: r,
                    theme: EX,
                    onChange: o,
                    children: (0,
                    z.jsx)("div", {
                        className: EX.value,
                        children: `${t.toFixed(a)}`
                    })
                })
            })
        }
          , yX = ({label: e, value: t, step: n, fractionDigits: s, min: i, max: a, onChange: o})=>{
            const r = (0,
            Y.useCallback)((e=>o({
                ...t,
                x: e
            })), [o, t])
              , l = (0,
            Y.useCallback)((e=>o({
                ...t,
                y: e
            })), [o, t]);
            return (0,
            z.jsxs)(bX, {
                title: e,
                value: zd(t, s ?? 1),
                children: [(0,
                z.jsx)(SX, {
                    label: "X",
                    value: t.x,
                    min: i,
                    max: a,
                    onChange: r,
                    step: n,
                    fractionDigits: s
                }), (0,
                z.jsx)(SX, {
                    label: "Y",
                    value: t.y,
                    min: i,
                    max: a,
                    onChange: l,
                    step: n,
                    fractionDigits: s
                })]
            })
        }
          , jX = ({label: e, value: t, step: n, fractionDigits: s, min: i, max: a, onChange: o})=>{
            const r = (0,
            Y.useCallback)((e=>o({
                ...t,
                x: e
            })), [o, t])
              , l = (0,
            Y.useCallback)((e=>o({
                ...t,
                y: e
            })), [o, t])
              , c = (0,
            Y.useCallback)((e=>o({
                ...t,
                z: e
            })), [o, t]);
            return (0,
            z.jsxs)(bX, {
                title: e,
                value: Xd(t, s ?? 1),
                children: [(0,
                z.jsx)(SX, {
                    label: "X",
                    value: t.x,
                    min: i,
                    max: a,
                    onChange: r,
                    step: n,
                    fractionDigits: s
                }), (0,
                z.jsx)(SX, {
                    label: "Y",
                    value: t.y,
                    min: i,
                    max: a,
                    onChange: l,
                    step: n,
                    fractionDigits: s
                }), (0,
                z.jsx)(SX, {
                    label: "Z",
                    value: t.z,
                    min: i,
                    max: a,
                    onChange: c,
                    step: n,
                    fractionDigits: s
                })]
            })
        }
          , CX = ({label: e, value: t, step: n, fractionDigits: s, min: i, max: a, onChange: o})=>{
            const r = (0,
            Y.useCallback)((e=>o({
                ...t,
                x: e
            })), [o, t])
              , l = (0,
            Y.useCallback)((e=>o({
                ...t,
                y: e
            })), [o, t])
              , c = (0,
            Y.useCallback)((e=>o({
                ...t,
                z: e
            })), [o, t])
              , u = (0,
            Y.useCallback)((e=>o({
                ...t,
                w: e
            })), [o, t]);
            return (0,
            z.jsxs)(bX, {
                title: e,
                value: Jd(t, s ?? 1),
                children: [(0,
                z.jsx)(SX, {
                    label: "X",
                    value: t.x,
                    min: i,
                    max: a,
                    onChange: r,
                    step: n,
                    fractionDigits: s
                }), (0,
                z.jsx)(SX, {
                    label: "Y",
                    value: t.y,
                    min: i,
                    max: a,
                    onChange: l,
                    step: n,
                    fractionDigits: s
                }), (0,
                z.jsx)(SX, {
                    label: "Z",
                    value: t.z,
                    min: i,
                    max: a,
                    onChange: c,
                    step: n,
                    fractionDigits: s
                }), (0,
                z.jsx)(SX, {
                    label: "W",
                    value: t.w,
                    min: i,
                    max: a,
                    onChange: u,
                    step: n,
                    fractionDigits: s
                })]
            })
        }
        ;
        X.add("game-ui/debug/widgets/fields/slider-field.tsx", {
            get IntSliderField() {
                return IX
            },
            set IntSliderField(e) {
                IX = e
            },
            get FloatSliderField() {
                return SX
            },
            set FloatSliderField(e) {
                SX = e
            },
            get Float2SliderField() {
                return yX
            },
            set Float2SliderField(e) {
                yX = e
            },
            get Float3SliderField() {
                return jX
            },
            set Float3SliderField(e) {
                jX = e
            },
            get Float4SliderField() {
                return CX
            },
            set Float4SliderField(e) {
                CX = e
            }
        });
        let NX = {
            "swatch-title": "swatch-title_d15",
            swatchTitle: "swatch-title_d15",
            "swatch-alpha": "swatch-alpha_MYB",
            swatchAlpha: "swatch-alpha_MYB",
            swatch: "swatch_OaZ",
            label: "label_FVu"
        };
        X.add("game-ui/debug/widgets/fields/color-field/color-field.module.scss", {
            get classes() {
                return NX
            },
            set classes(e) {
                Object.assign(NX, e)
            }
        });
        const wX = NX;
        var OX = ({label: e, value: t, showAlpha: n, onChange: s})=>{
            const i = (0,
            Y.useCallback)((e=>s({
                ...t,
                r: e
            })), [s, t])
              , a = (0,
            Y.useCallback)((e=>s({
                ...t,
                g: e
            })), [s, t])
              , o = (0,
            Y.useCallback)((e=>s({
                ...t,
                b: e
            })), [s, t])
              , r = (0,
            Y.useCallback)((e=>s({
                ...t,
                a: e
            })), [s, t]);
            return (0,
            z.jsxs)(bX, {
                title: (0,
                z.jsxs)("div", {
                    className: wX.swatchTitle,
                    children: [(0,
                    z.jsx)("div", {
                        className: wX.swatchAlpha,
                        children: (0,
                        z.jsx)("div", {
                            className: wX.swatch,
                            style: {
                                backgroundColor: xN(t)
                            }
                        })
                    }), (0,
                    z.jsx)("div", {
                        className: wX.label,
                        children: e
                    })]
                }),
                children: [(0,
                z.jsx)(SX, {
                    label: "Red",
                    value: t.r,
                    onChange: i,
                    min: 0,
                    max: 1,
                    step: .001,
                    fractionDigits: 3
                }), (0,
                z.jsx)(SX, {
                    label: "Green",
                    value: t.g,
                    onChange: a,
                    min: 0,
                    max: 1,
                    step: .001,
                    fractionDigits: 3
                }), (0,
                z.jsx)(SX, {
                    label: "Blue",
                    value: t.b,
                    onChange: o,
                    min: 0,
                    max: 1,
                    step: .001,
                    fractionDigits: 3
                }), n && (0,
                z.jsx)(SX, {
                    label: "Alpha",
                    value: t.a,
                    onChange: r,
                    min: 0,
                    max: 1,
                    step: .001,
                    fractionDigits: 3
                })]
            })
        }
        ;
        X.add("game-ui/debug/widgets/fields/color-field/color-field.tsx", {
            get ColorField() {
                return OX
            },
            set ColorField(e) {
                OX = e
            }
        });
        let PX = {
            toggle: "toggle_x2y"
        };
        X.add("game-ui/debug/widgets/fields/toggle-field/toggle-field.module.scss", {
            get classes() {
                return PX
            },
            set classes(e) {
                Object.assign(PX, e)
            }
        });
        const LX = PX;
        var AX = ({label: e, value: t, onChange: n})=>(0,
        z.jsx)(hX, {
            label: e,
            children: (0,
            z.jsx)(Hb, {
                checked: t,
                className: LX.toggle,
                onChange: n
            })
        });
        X.add("game-ui/debug/widgets/fields/toggle-field/toggle-field.tsx", {
            get ToggleField() {
                return AX
            },
            set ToggleField(e) {
                AX = e
            }
        });
        var MX = ({label: e, value: t, enumMembers: n, onChange: s})=>{
            const i = (0,
            Y.useMemo)((()=>n.findIndex((e=>rm(e.value, t)))), [n, t])
              , a = (0,
            Y.useCallback)((()=>{
                const e = Ew(n, i, !0);
                null != e && s(e.value)
            }
            ), [n, s, i])
              , o = (0,
            Y.useCallback)((()=>{
                const e = bw(n, i, !0);
                null != e && s(e.value)
            }
            ), [n, s, i]);
            return (0,
            z.jsx)(hX, {
                label: e,
                children: (0,
                z.jsx)(uX, {
                    onSelectLeft: a,
                    onSelectRight: o,
                    children: -1 !== i ? (0,
                    z.jsx)(gu, {
                        value: n[i].displayName
                    }) : `${i}`
                })
            })
        }
          , RX = ({label: e, value: t, enumMembers: n, onChange: s})=>{
            const i = (0,
            Y.useCallback)(((e,n)=>{
                s(cm(n ? lm(t) | lm(e.value) : lm(t) & ~lm(e.value)))
            }
            ), [s, t]);
            return (0,
            z.jsx)(bX, {
                title: e,
                children: n.filter((e=>!rm(e.value, om))).map(((e,n)=>(0,
                z.jsx)(kX, {
                    enumMember: e,
                    checked: (lm(t) & lm(e.value)) === lm(e.value),
                    onChange: i
                }, n)))
            })
        }
        ;
        const kX = ({enumMember: e, checked: t, onChange: n})=>{
            const s = (0,
            Y.useCallback)((t=>n(e, t)), [e, n]);
            return (0,
            z.jsx)(AX, {
                label: (0,
                z.jsx)(gu, {
                    value: e.displayName
                }),
                value: t,
                onChange: s
            })
        }
        ;
        X.add("game-ui/debug/widgets/fields/enum-field.tsx", {
            get EnumField() {
                return MX
            },
            set EnumField(e) {
                MX = e
            },
            get BitField() {
                return RX
            },
            set BitField(e) {
                RX = e
            }
        });
        let DX = {
            "text-input": "text-input_Y20",
            textInput: "text-input_Y20"
        };
        X.add("game-ui/debug/widgets/fields/input-field/input-field.module.scss", {
            get classes() {
                return DX
            },
            set classes(e) {
                Object.assign(DX, e)
            }
        });
        const FX = DX;
        var UX = ({label: e, value: t, onChange: n})=>{
            const [s,i] = (0,
            Y.useState)(t);
            (0,
            Y.useEffect)((()=>i(t)), [t]);
            const a = (0,
            Y.useCallback)((()=>{
                n(s)
            }
            ), [n, s])
              , o = (0,
            Y.useCallback)((e=>{
                i(e.target.value)
            }
            ), []);
            return (0,
            z.jsx)(hX, {
                label: e,
                children: (0,
                z.jsx)(oI, {
                    value: s,
                    className: FX.textInput,
                    onChange: o,
                    onBlur: a
                })
            })
        }
          , BX = ({label: e, value: t, onChange: n})=>{
            const [s,i] = (0,
            Y.useState)(t.toString());
            (0,
            Y.useEffect)((()=>i(t.toString())), [t]);
            const a = (0,
            Y.useCallback)((()=>{
                const e = Number(s);
                isNaN(e) || n(e)
            }
            ), [n, s])
              , o = (0,
            Y.useCallback)((e=>{
                "" !== e.target.value && isNaN(Number(e.target.value)) || i(e.target.value)
            }
            ), []);
            return (0,
            z.jsx)(hX, {
                label: e,
                children: (0,
                z.jsx)(oI, {
                    value: s,
                    className: FX.textInput,
                    onChange: o,
                    onBlur: a
                })
            })
        }
        ;
        X.add("game-ui/debug/widgets/fields/input-field/input-field.tsx", {
            get StringInputField() {
                return UX
            },
            set StringInputField(e) {
                UX = e
            },
            get IntInputField() {
                return BX
            },
            set IntInputField(e) {
                BX = e
            }
        });
        let GX = {
            balloon: "balloon_rZ1 balloon_H23",
            container: "container_drF container_jfe",
            arrow: "arrow_oej arrow_Xfn",
            content: "content_bal content_JQV"
        };
        X.add("game-ui/debug/themes/tooltip.module.scss", {
            get classes() {
                return GX
            },
            set classes(e) {
                Object.assign(GX, e)
            }
        });
        const VX = GX;
        let HX = {
            content: "content_EQJ"
        };
        X.add("game-ui/debug/widgets/fields/value-field.module.scss", {
            get classes() {
                return HX
            },
            set classes(e) {
                Object.assign(HX, e)
            }
        });
        const KX = HX;
        var WX = ({props: e})=>{
            const [t,n] = (0,
            Y.useState)(!1)
              , s = (0,
            Y.useRef)(null);
            return (0,
            Y.useEffect)((()=>{
                if (s.current) {
                    const e = s.current
                      , t = requestAnimationFrame((()=>n(e.offsetWidth < e.scrollWidth)));
                    return ()=>cancelAnimationFrame(t)
                }
            }
            ), [e.value]),
            (0,
            z.jsx)(hX, {
                label: (0,
                z.jsx)(gu, {
                    value: e.displayName
                }),
                children: (0,
                z.jsx)(Eg, {
                    disabled: !t,
                    tooltip: e.value,
                    theme: VX,
                    children: (0,
                    z.jsx)("div", {
                        className: KX.content,
                        ref: s,
                        children: e.value
                    })
                })
            })
        }
        ;
        X.add("game-ui/debug/widgets/fields/value-field.tsx", {
            get BoundValueField() {
                return WX
            },
            set BoundValueField(e) {
                WX = e
            }
        });
        let zX = {
            image: "image_BEo"
        };
        X.add("game-ui/debug/widgets/image/image.module.scss", {
            get classes() {
                return zX
            },
            set classes(e) {
                Object.assign(zX, e)
            }
        });
        const YX = zX;
        var $X = ({props: e})=>(0,
        z.jsx)(hX, {
            label: (0,
            z.jsx)(gu, {
                value: e.displayName
            }),
            children: (0,
            z.jsx)("img", {
                src: e.uri,
                className: YX.image
            })
        });
        X.add("game-ui/debug/widgets/image/image.tsx", {
            get BoundImage() {
                return $X
            },
            set BoundImage(e) {
                $X = e
            }
        });
        var qX = ({parent: e, data: t})=>(0,
        z.jsx)(hD, {
            parent: e,
            components: XX,
            data: t
        })
          , XX = {
            [NR.Group]: oX,
            [NR.ExpandableGroup]: vX,
            [NR.Button]: nX,
            [NR.ValueField]: WX,
            [NR.ToggleField]: QX(AX),
            [NR.IntSliderField]: QX(IX),
            [Jq.IntArrowField]: QX(gX),
            [NR.IntInputField]: QX(BX),
            [NR.UIntSliderField]: QX(IX),
            [Jq.UIntArrowField]: QX(gX),
            [NR.FloatSliderField]: QX(SX),
            [Jq.FloatArrowField]: QX(pX),
            [NR.Float2SliderField]: QX(yX),
            [NR.Float3SliderField]: QX(jX),
            [NR.Float4SliderField]: QX(CX),
            [NR.EnumField]: QX(MX),
            [NR.FlagsField]: QX(RX),
            [NR.ColorField]: QX(OX),
            [NR.StringInputField]: QX(UX),
            [Jq.Image]: $X
        };
        function QX(e) {
            const t = ({parent: t, path: n, props: s})=>{
                const i = YM(RR, ZR(t, n));
                return (0,
                z.jsx)(e, {
                    ...s,
                    label: (0,
                    z.jsx)(gu, {
                        value: s.displayName
                    }),
                    onChange: i
                })
            }
            ;
            return t.displayName = e.displayName ?? e.name,
            t
        }
        X.add("game-ui/debug/widgets/debug-widget-renderer.tsx", {
            get DebugWidgetListRenderer() {
                return qX
            },
            set DebugWidgetListRenderer(e) {
                qX = e
            },
            get debugWidgetComponents() {
                return XX
            },
            set debugWidgetComponents(e) {
                XX = e
            }
        });
        let ZX = {
            title: "title_f1a",
            value: "value_bvH"
        };
        X.add("game-ui/debug/components/debug-binding-output/debug-binding-output.module.scss", {
            get classes() {
                return ZX
            },
            set classes(e) {
                Object.assign(ZX, e)
            }
        });
        const JX = ZX;
        var eQ = ({binding: e, className: t})=>{
            const [n,s] = (0,
            Y.useState)(0)
              , [i,a] = (0,
            Y.useState)("");
            return (0,
            Y.useEffect)((()=>{
                const t = e=>{
                    a(JSON.stringify(e, null, 2)),
                    s((e=>e + 1))
                }
                ;
                if (e.debugType === Mq.Event) {
                    const n = Zr(e.group, e.name)
                      , s = n.subscribe(t);
                    return ()=>{
                        s.dispose(),
                        n.dispose()
                    }
                }
                if (e.debugType === Mq.Value) {
                    const n = $r(e.group, e.name, "undefined")
                      , i = n.subscribe();
                    return a(JSON.stringify(i.value, null, 2)),
                    s(0),
                    i.setChangeListener(t),
                    ()=>{
                        i.dispose(),
                        n.dispose()
                    }
                }
            }
            ), [e.group, e.name, e.debugType]),
            (0,
            z.jsxs)("div", {
                className: Zu()(JX.debugBindingOutput, t),
                children: [(0,
                z.jsx)("div", {
                    className: JX.title,
                    children: `${e.group}.${e.name}, Update Count: ${n}`
                }), (0,
                z.jsx)("div", {
                    className: JX.value,
                    children: i
                })]
            })
        }
        ;
        X.add("game-ui/debug/components/debug-binding-output/debug-binding-output.tsx", {
            get DebugBindingOutput() {
                return eQ
            },
            set DebugBindingOutput(e) {
                eQ = e
            }
        });
        let tQ = {
            "fps-display": "fps-display_t30",
            fpsDisplay: "fps-display_t30",
            value: "value_vNu",
            graph: "graph_EEa"
        };
        X.add("game-ui/debug/components/fps-display/fps-display.module.scss", {
            get classes() {
                return tQ
            },
            set classes(e) {
                Object.assign(tQ, e)
            }
        });
        const nQ = tQ;
        var sQ = ()=>{
            switch (sl(wE)) {
            case EE.Simple:
                return (0,
                z.jsx)(iQ, {});
            case EE.Advanced:
                return (0,
                z.jsx)(rQ, {});
            case EE.Precise:
                return (0,
                z.jsx)(lQ, {});
            default:
                return null
            }
        }
        ;
        const iQ = ()=>{
            const e = sl(OE);
            return (0,
            z.jsx)("div", {
                className: nQ.fpsDisplay,
                children: (0,
                z.jsx)("div", {
                    className: nQ.value,
                    children: `${e.fps.toFixed(0).padStart(3, " ")} FPS`
                })
            })
        }
          , aQ = 250
          , oQ = 50
          , rQ = ()=>{
            const e = sl(OE)
              , t = e.fps > 0 ? 1e3 / e.fps : 0
              , n = al(OE)
              , s = (0,
            Y.useRef)(null);
            return (0,
            Y.useEffect)((()=>{
                const e = new Array(aQ);
                let t = e.length - 1
                  , i = 30;
                for (let t = 0; t < e.length; t++)
                    e[t] = 0;
                let a = 0;
                return function o() {
                    t = (t + 1) % e.length,
                    e[t] = n.current.fps,
                    i = Math.max(n.current.fps, i);
                    const r = s.current?.getContext("2d");
                    if (null != r) {
                        r.fillStyle = "rgb(0, 0, 0)",
                        r.fillRect(0, 0, r.canvas.width, r.canvas.height);
                        for (let n = 0; n < e.length; n++) {
                            const s = e[(e.length + t - n) % e.length]
                              , a = s / i * oQ;
                            r.fillStyle = xN(gQ(s)),
                            r.fillRect(aQ - n - 1, oQ - a, 1, a)
                        }
                    }
                    a = window.requestAnimationFrame(o)
                }(),
                ()=>window.cancelAnimationFrame(a)
            }
            ), [n]),
            (0,
            z.jsx)(z.Fragment, {
                children: (0,
                z.jsxs)("div", {
                    className: nQ.fpsDisplay,
                    children: [(0,
                    z.jsx)("canvas", {
                        ref: s,
                        className: nQ.graph,
                        width: aQ,
                        height: oQ
                    }), (0,
                    z.jsxs)("div", {
                        className: nQ.value,
                        children: [`Frame: ${t.toFixed(2).padStart(7, " ")}ms`, `${e.fps.toFixed(2)} FPS`]
                    })]
                })
            })
        }
          , lQ = ()=>{
            const e = sl(OE)
              , t = al(OE)
              , n = (0,
            Y.useRef)(null);
            return (0,
            Y.useEffect)((()=>{
                const e = new Array(aQ);
                let s = e.length - 1
                  , i = 30;
                for (let t = 0; t < e.length; t++)
                    e[t] = 0;
                let a = 0;
                return function o() {
                    s = (s + 1) % e.length,
                    e[s] = t.current.fps,
                    i = Math.max(t.current.fps, i);
                    const r = n.current?.getContext("2d");
                    if (null != r) {
                        r.fillStyle = "rgb(0, 0, 0)",
                        r.fillRect(0, 0, r.canvas.width, r.canvas.height);
                        for (let t = 0; t < e.length; t++) {
                            const n = e[(e.length + s - t) % e.length]
                              , a = n / i * oQ;
                            r.fillStyle = xN(gQ(n)),
                            r.fillRect(aQ - t - 1, oQ - a, 1, a)
                        }
                    }
                    a = window.requestAnimationFrame(o)
                }(),
                ()=>window.cancelAnimationFrame(a)
            }
            ), [t]),
            (0,
            z.jsx)(z.Fragment, {
                children: (0,
                z.jsxs)("div", {
                    className: nQ.fpsDisplay,
                    children: [(0,
                    z.jsx)("canvas", {
                        ref: n,
                        className: nQ.graph,
                        width: aQ,
                        height: oQ
                    }), (0,
                    z.jsxs)("div", {
                        className: nQ.value,
                        children: [`CPU Main: ${e.cpuMainThreadTime.toFixed(2).padStart(5, " ")}ms    Render: ${e.cpuRenderThreadTime.toFixed(2).padStart(5, " ")}ms`, `GPU: ${e.gpuTime.toFixed(2).padStart(5, " ")}ms     Total: ${e.fullFameTime.toFixed(2).padStart(5, " ")}ms`, `${e.fps.toFixed(2)} FPS`]
                    })]
                })
            })
        }
          , cQ = 20
          , uQ = 4
          , dQ = {
            r: 0,
            g: 1,
            b: 0,
            a: 1
        }
          , mQ = {
            r: 1,
            g: 1,
            b: 0,
            a: 1
        }
          , hQ = {
            r: 1,
            g: 0,
            b: 0,
            a: 1
        };
        function gQ(e) {
            const t = Od((e - uQ) / (cQ - uQ), 0, 1);
            return t < .5 ? SN(hQ, mQ, 2 * t) : SN(mQ, dQ, 2 * t - 1)
        }
        X.add("game-ui/debug/components/fps-display/fps-display.tsx", {
            get FpsDisplay() {
                return sQ
            },
            set FpsDisplay(e) {
                sQ = e
            }
        });
        let pQ = {
            "color-legend": "color-legend_Bzi",
            colorLegend: "color-legend_Bzi",
            symbol: "symbol_aAH",
            label: "label_kfd",
            value: "value_rfe"
        };
        X.add("game-ui/common/charts/legends/color-legend.module.scss", {
            get classes() {
                return pQ
            },
            set classes(e) {
                Object.assign(pQ, e)
            }
        });
        const fQ = pQ;
        var xQ = ({color: e, label: t, className: n, children: s})=>(0,
        z.jsxs)("div", {
            className: Zu()(fQ.colorLegend, n),
            children: [(0,
            z.jsx)(vQ, {
                color: e
            }), (0,
            z.jsx)("div", {
                className: fQ.label,
                children: t
            }), Y.Children.count(s) > 0 && (0,
            z.jsx)("div", {
                className: fQ.value,
                children: s
            })]
        })
          , vQ = ({color: e, className: t})=>(0,
        z.jsx)("div", {
            className: Zu()(fQ.symbol, t),
            style: {
                backgroundColor: e
            }
        });
        X.add("game-ui/common/charts/legends/color-legend.tsx", {
            get ColorLegend() {
                return xQ
            },
            set ColorLegend(e) {
                xQ = e
            },
            get ColorLegendSymbol() {
                return vQ
            },
            set ColorLegendSymbol(e) {
                vQ = e
            }
        });
        let _Q = {
            "watches-output": "watches-output_GMe",
            watchesOutput: "watches-output_GMe",
            chart: "chart_u1n",
            legend: "legend_obt",
            "legend-item": "legend-item_Osn",
            legendItem: "legend-item_Osn"
        };
        X.add("game-ui/debug/components/watches-output/watches-output.module.scss", {
            get classes() {
                return _Q
            },
            set classes(e) {
                Object.assign(_Q, e)
            }
        });
        const bQ = _Q;
        var TQ = ({watches: e, className: t})=>{
            const n = e.filter((e=>e.__Type === Rq.History))
              , s = e.filter((e=>e.__Type === Rq.Distribution));
            return (0,
            z.jsxs)("div", {
                className: Zu()(bQ.watchesOutput, t),
                children: [n.length > 0 && (0,
                z.jsxs)(z.Fragment, {
                    children: [(0,
                    z.jsx)(EQ, {
                        watches: n
                    }), (0,
                    z.jsx)("div", {
                        className: bQ.legend,
                        children: n.map(((e,t)=>(0,
                        z.jsx)(xQ, {
                            color: e.color,
                            label: e.name,
                            className: bQ.legendItem
                        }, t)))
                    })]
                }), s.length > 0 && (0,
                z.jsxs)(z.Fragment, {
                    children: [(0,
                    z.jsx)(IQ, {
                        watches: s
                    }), (0,
                    z.jsx)("div", {
                        className: bQ.legend,
                        children: s.map(((e,t)=>(0,
                        z.jsx)(xQ, {
                            color: e.color,
                            label: e.name,
                            className: bQ.legendItem
                        }, t)))
                    })]
                })]
            })
        }
          , EQ = ({watches: e})=>{
            const t = (0,
            Y.useMemo)((()=>({
                datasets: e.map(((e,t)=>({
                    label: e.name,
                    showLine: !0,
                    data: e.history.filter((e=>0 !== e.x)),
                    borderColor: e.color
                })))
            })), [e])
              , n = function() {
                const e = sl(Ll);
                return (0,
                Y.useMemo)((()=>({
                    layout: {
                        padding: {
                            top: 15,
                            right: 30,
                            left: 30,
                            bottom: 30
                        }
                    },
                    elements: {
                        line: {
                            tension: 0,
                            borderWidth: 2,
                            backgroundColor: "transparent"
                        },
                        point: {
                            radius: 0
                        }
                    },
                    scales: {
                        x: {
                            type: "linear",
                            beginAtZero: !1,
                            grid: {
                                display: !1
                            },
                            ticks: {
                                display: !1
                            }
                        },
                        y: {
                            beginAtZero: !0,
                            ticks: {
                                font: {
                                    size: 10 * e
                                },
                                color: "white",
                                maxTicksLimit: 10,
                                callback: e=>bu(e)
                            }
                        }
                    }
                })), [e])
            }();
            return (0,
            z.jsx)(nY, {
                type: "scatter",
                data: t,
                options: n,
                className: bQ.chart
            })
        }
          , IQ = ({watches: e})=>{
            const t = (0,
            Y.useMemo)((()=>({
                datasets: e.map(((e,t)=>({
                    label: e.name,
                    showLine: !0,
                    data: e.buckets.map((e=>({
                        x: Pd(e.min, e.max, .5),
                        y: e.count
                    }))),
                    borderColor: e.color,
                    stepped: "middle"
                })))
            })), [e])
              , n = function() {
                const e = sl(Ll);
                return (0,
                Y.useMemo)((()=>({
                    layout: {
                        padding: {
                            top: 15,
                            right: 30,
                            left: 30,
                            bottom: 30
                        }
                    },
                    elements: {
                        line: {
                            tension: 0,
                            borderWidth: 2,
                            backgroundColor: "transparent"
                        },
                        point: {
                            radius: 0
                        }
                    },
                    scales: {
                        x: {
                            type: "linear",
                            beginAtZero: !1,
                            ticks: {
                                font: {
                                    size: 10 * e
                                },
                                color: "white",
                                maxTicksLimit: 25,
                                callback: e=>bu(e)
                            }
                        },
                        y: {
                            beginAtZero: !0,
                            ticks: {
                                font: {
                                    size: 10 * e
                                },
                                color: "white",
                                maxTicksLimit: 10,
                                callback: e=>bu(e)
                            }
                        }
                    }
                })), [e])
            }();
            return (0,
            z.jsx)(nY, {
                type: "scatter",
                data: t,
                options: n,
                className: bQ.chart
            })
        }
        ;
        X.add("game-ui/debug/components/watches-output/watches-output.tsx", {
            get WatchesOutput() {
                return TQ
            },
            set WatchesOutput(e) {
                TQ = e
            },
            get HistoryChart() {
                return EQ
            },
            set HistoryChart(e) {
                EQ = e
            },
            get DistributionChart() {
                return IQ
            },
            set DistributionChart(e) {
                IQ = e
            }
        });
        let SQ = {
            debugging: "debugging_dvz",
            "debug-ui": "debug-ui_M_y",
            debugUi: "debug-ui_M_y",
            inspector: "inspector_GbW",
            "output-column": "output-column_py9",
            outputColumn: "output-column_py9",
            output: "output_NHr",
            "tab-bar": "tab-bar_b_c",
            tabBar: "tab-bar_b_c",
            "title-bar": "title-bar_Yno",
            titleBar: "title-bar_Yno",
            title: "title_HzQ",
            scrollable: "scrollable_ivK"
        };
        X.add("game-ui/debug/components/debug-ui.module.scss", {
            get classes() {
                return SQ
            },
            set classes(e) {
                Object.assign(SQ, e)
            }
        });
        const yQ = SQ
          , jQ = new Ig("CHILDREN")
          , CQ = new Ig("DEBUG_UI");
        var NQ = ({children: e})=>{
            const t = sl(kq)
              , n = sl(Dq)
              , s = (0,
            Y.useMemo)((()=>({
                "Debug UI": ()=>{
                    n ? Yq() : zq()
                }
            })), [n]);
            return t ? (0,
            z.jsx)(Mg, {
                actions: s,
                children: (0,
                z.jsxs)(op, {
                    focused: n ? CQ : jQ,
                    children: [(0,
                    z.jsx)(ap, {
                        focusKey: jQ,
                        children: e
                    }), (0,
                    z.jsxs)("div", {
                        className: yQ.debugging,
                        children: [n && (0,
                        z.jsx)(wQ, {
                            focusKey: CQ
                        }), (0,
                        z.jsx)(sQ, {})]
                    })]
                })
            }) : (0,
            z.jsx)(z.Fragment, {
                children: e
            })
        }
          , wQ = ({focusKey: e})=>{
            const t = sl(Fq)
              , n = sl(Uq)
              , s = sl(Bq)
              , i = sl(Gq)
              , a = sl(WO)
              , o = (0,
            Y.useMemo)((()=>({
                Back: Yq,
                "Switch Tab": e=>{
                    e < 0 ? $q() : Xq()
                }
                ,
                "Pause Simulation": a ? null : ()=>{
                    cp(lp.pauseSimulation),
                    $O(!0)
                }
                ,
                "Resume Simulation": a ? ()=>{
                    cp(lp.resumeSimulation),
                    $O(!1)
                }
                : null
            })), [a]);
            (0,
            Y.useEffect)((()=>{
                const e = e=>{
                    e.repeat || (37 === e.keyCode ? ($q(),
                    e.preventDefault()) : 39 === e.keyCode && (Xq(),
                    e.preventDefault()))
                }
                ;
                return document.addEventListener("keydown", e),
                ()=>document.removeEventListener("keydown", e)
            }
            ), []),
            (0,
            Y.useEffect)((()=>{
                const e = Hq.subscribe((e=>{
                    e.debugType === Mq.Trigger && tl(e.group, e.name)
                }
                ));
                return ()=>e.dispose()
            }
            ), []);
            const r = sl(Vq)
              , l = sl(Wq)
              , c = QR("debug");
            return (0,
            z.jsx)(Mg, {
                actions: o,
                children: (0,
                z.jsxs)(Sp, {
                    focusKey: e,
                    className: yQ.debugUi,
                    children: [(0,
                    z.jsxs)("div", {
                        className: yQ.inspector,
                        children: [(0,
                        z.jsx)("div", {
                            className: yQ.tabBar,
                            children: t.map(((e,t)=>(0,
                            z.jsx)(OQ, {
                                index: t,
                                name: e,
                                selected: t === n
                            }, t)))
                        }), (0,
                        z.jsx)(mb, {
                            smooth: !1,
                            className: yQ.scrollable,
                            children: (0,
                            z.jsx)(np, {
                                children: null != i && (0,
                                z.jsx)(qX, {
                                    parent: c,
                                    data: i
                                })
                            })
                        }, s?.displayName)]
                    }), (0,
                    z.jsxs)(mb, {
                        className: yQ.outputColumn,
                        children: [null != r && (0,
                        z.jsx)(eQ, {
                            binding: r,
                            className: yQ.output
                        }), l.length > 0 && (0,
                        z.jsx)(TQ, {
                            watches: l,
                            className: yQ.output
                        })]
                    })]
                })
            })
        }
        ;
        const OQ = ({index: e, name: t, selected: n})=>{
            const s = (0,
            Y.useCallback)((()=>qq(e)), [e]);
            return (0,
            z.jsx)(U_, {
                focusKey: Sg,
                selected: n,
                theme: Zq,
                onSelect: s,
                children: t
            })
        }
        ;
        X.add("game-ui/debug/components/debug-ui.tsx", {
            get DebugUIRenderer() {
                return NQ
            },
            set DebugUIRenderer(e) {
                NQ = e
            },
            get DebugUI() {
                return wQ
            },
            set DebugUI(e) {
                wQ = e
            }
        });
        const PQ = "editor";
        var LQ;
        !function(e) {
            e[e.main = 0] = "main",
            e[e.pauseMenu = 1] = "pauseMenu",
            e[e.options = 2] = "options",
            e[e.freeCamera = 3] = "freeCamera"
        }(LQ || (LQ = {}));
        var AQ = $r(PQ, "activeScreen")
          , MQ = el(PQ, "setActiveScreen");
        function RQ() {
            MQ(LQ.main)
        }
        function kQ() {
            MQ(LQ.pauseMenu)
        }
        function DQ() {
            MQ(LQ.freeCamera)
        }
        X.add("game-ui/editor/data-binding/editor-bindings.ts", {
            get EditorScreen() {
                return LQ
            },
            set EditorScreen(e) {
                LQ = e
            },
            get activeEditorScreen() {
                return activeEditorScreen
            },
            set activeEditorScreen(e) {
                activeEditorScreen = e
            },
            get setActiveEditorScreen() {
                return MQ
            },
            set setActiveEditorScreen(e) {
                MQ = e
            },
            get showMainScreen() {
                return RQ
            },
            set showMainScreen(e) {
                RQ = e
            },
            get showPauseScreen() {
                return kQ
            },
            set showPauseScreen(e) {
                kQ = e
            },
            get showFreeCameraScreen() {
                return DQ
            },
            set showFreeCameraScreen(e) {
                DQ = e
            }
        });
        let FQ = {
            header: "header_HpJ",
            title: "title_lCJ",
            shortcut: "shortcut_Sez",
            description: "description_dNa",
            content: "content_OhK"
        };
        X.add("game-ui/common/tooltip/description-tooltip/description-tooltip.module.scss", {
            get classes() {
                return FQ
            },
            set classes(e) {
                Object.assign(FQ, e)
            }
        });
        const UQ = FQ;
        var BQ = ({title: e, description: t, content: n, shortcut: s, children: i, ...a})=>{
            const o = (0,
            z.jsx)(GQ, {
                title: e,
                description: t,
                content: n,
                shortcut: s
            });
            return (0,
            z.jsx)(Eg, {
                ...a,
                tooltip: o,
                children: i
            })
        }
          , GQ = ({title: e, description: t, content: n, shortcut: s, className: i})=>{
            const a = Y.Children.count(e) > 0
              , o = Y.Children.count(t) > 0
              , r = Y.Children.count(n) > 0
              , l = Y.Children.count(s) > 0;
            return (0,
            z.jsxs)("div", {
                className: Zu()(UQ.layout, i),
                children: [(0,
                z.jsxs)("div", {
                    className: UQ.header,
                    children: [a && (0,
                    z.jsx)("div", {
                        className: UQ.title,
                        children: e
                    }), l && (0,
                    z.jsx)("div", {
                        className: UQ.shortcut,
                        children: s
                    })]
                }), o && (0,
                z.jsx)(Cb, {
                    className: UQ.description,
                    children: t
                }), r && (0,
                z.jsx)("div", {
                    className: UQ.content,
                    children: n
                })]
            })
        }
        ;
        X.add("game-ui/common/tooltip/description-tooltip/description-tooltip.tsx", {
            get DescriptionTooltip() {
                return BQ
            },
            set DescriptionTooltip(e) {
                BQ = e
            },
            get TooltipLayout() {
                return GQ
            },
            set TooltipLayout(e) {
                GQ = e
            }
        });
        let VQ = {
            field: "field_eKJ",
            blinkOnSelect: "blinkOnSelect_Lbx",
            content: "content_syM",
            selectable: "selectable_otQ",
            divider: "divider_GbU"
        };
        X.add("game-ui/game/components/toolbar/components/field/field.module.scss", {
            get classes() {
                return VQ
            },
            set classes(e) {
                Object.assign(VQ, e)
            }
        });
        const HQ = VQ;
        var KQ = ({contentClassName: e, className: t, children: n, onSelect: s, shortcut: i})=>{
            const a = Zu()(HQ.field, null != s && HQ.selectable, t)
              , o = (0,
            z.jsx)("div", {
                className: Zu()(HQ.content, e),
                children: n
            });
            return null != s ? (0,
            z.jsx)(U_, {
                disableHint: !0,
                className: a,
                onSelect: s,
                shortcut: i,
                children: o
            }) : (0,
            z.jsx)(Sp, {
                className: a,
                children: o
            })
        }
          , WQ = ()=>(0,
        z.jsx)("div", {
            className: HQ.divider
        });
        X.add("game-ui/game/components/toolbar/components/field/field.tsx", {
            get Field() {
                return KQ
            },
            set Field(e) {
                KQ = e
            },
            get Divider() {
                return WQ
            },
            set Divider(e) {
                WQ = e
            }
        });
        let zQ = {
            hint: "hint_gUV",
            "hint-right": "hint-right_jg4",
            hintRight: "hint-right_jg4"
        };
        X.add("game-ui/game/components/toolbar/bottom/hint-theme.module.scss", {
            get classes() {
                return zQ
            },
            set classes(e) {
                Object.assign(zQ, e)
            }
        });
        const YQ = zQ;
        let $Q = {
            "time-controls": "time-controls_TVa field_eKJ",
            timeControls: "time-controls_TVa field_eKJ",
            period: "period_iJ_",
            button: "button_w1a",
            paused: "paused_DLu",
            "secondary-active": "secondary-active_X5T",
            secondaryActive: "secondary-active_X5T",
            "play-pause": "play-pause_Z_u",
            playPause: "play-pause_Z_u",
            speed: "speed_O0e",
            "date-time-container": "date-time-container_UTv",
            dateTimeContainer: "date-time-container_UTv",
            "date-time": "date-time_mlZ",
            dateTime: "date-time_mlZ",
            alternate2: "alternate2_ZMf",
            "disable-pause-animation": "disable-pause-animation_GSc",
            disablePauseAnimation: "disable-pause-animation_GSc",
            "paused-label": "paused-label_YTz",
            pausedLabel: "paused-label_YTz",
            "time-hours": "time-hours_w20",
            timeHours: "time-hours_w20",
            "time-colon": "time-colon_t_C",
            timeColon: "time-colon_t_C",
            "time-minutes": "time-minutes_QOr",
            timeMinutes: "time-minutes_QOr",
            "time-period": "time-period_Qyj",
            timePeriod: "time-period_Qyj",
            "date-container": "date-container_Avy",
            dateContainer: "date-container_Avy",
            date: "date_fBv",
            alternate1: "alternate1_Am9"
        };
        X.add("game-ui/game/components/toolbar/bottom/time-controls/time-controls.module.scss", {
            get classes() {
                return $Q
            },
            set classes(e) {
                Object.assign($Q, e)
            }
        });
        const qQ = $Q;
        var XQ = YT({
            pause: "Media/Glyphs/SimulationPause.svg",
            play: "Media/Glyphs/SimulationPlay.svg",
            speed1: "Media/Glyphs/SimulationSpeed1.svg",
            speed2: "Media/Glyphs/SimulationSpeed2.svg",
            speed3: "Media/Glyphs/SimulationSpeed3.svg"
        })
          , QQ = ({disablePauseAnimation: e, editor: t=!1})=>{
            const [n,s] = (0,
            Y.useState)(!1)
              , [i,a] = (0,
            Y.useState)(!1)
              , o = sl(WO)
              , r = sl(zO)
              , l = sl(Ul).timeFormat === Wl.TwentyFourHours
              , c = SH(2, tZ);
            return (0,
            z.jsxs)("div", {
                className: Zu()(qQ.timeControls, {
                    [qQ.period]: !l,
                    [qQ.disablePauseAnimation]: e
                }),
                children: [(0,
                z.jsx)(UT, {
                    action: "Select",
                    active: i,
                    className: YQ.hint
                }), (0,
                z.jsx)(mT, {
                    uiTag: vT.value?.toolbarSimulationToggle,
                    editor: t,
                    children: (0,
                    z.jsx)(BQ, {
                        title: o ? (0,
                        z.jsx)(_c.Main.TOOLTIP_TITLE_PLAY, {}) : (0,
                        z.jsx)(_c.Main.TOOLTIP_TITLE_PAUSE, {}),
                        description: o ? (0,
                        z.jsx)(_c.Main.TOOLTIP_DESCRIPTION_PLAY, {}) : (0,
                        z.jsx)(_c.Main.TOOLTIP_DESCRIPTION_PAUSE, {}),
                        shortcut: (0,
                        z.jsx)(BT, {
                            action: "Pause Simulation",
                            shortName: wp.FallbackToControl
                        }),
                        children: (0,
                        z.jsx)(Ah, {
                            onFocusChange: a,
                            children: (0,
                            z.jsx)(tb, {
                                disableHint: !0,
                                tinted: !0,
                                src: o ? XQ.pause : XQ.play,
                                selectSound: null,
                                className: Zu()(qQ.button, qQ.playPause, o && qQ.paused),
                                onSelect: JQ
                            })
                        })
                    })
                }), (0,
                z.jsx)(WQ, {}), (0,
                z.jsx)(mT, {
                    uiTag: vT.value?.toolbarSimulationDateTime,
                    children: (0,
                    z.jsx)(BQ, {
                        title: (0,
                        z.jsx)(_c.Main.TOOLTIP_TITLE_DATE, {}),
                        description: (0,
                        z.jsx)(_c.Main.TOOLTIP_DESCRIPTION_DATE, {}),
                        children: (0,
                        z.jsx)(ZQ, {
                            tf: l,
                            paused: o
                        })
                    })
                }), (0,
                z.jsx)(WQ, {}), (0,
                z.jsx)(mT, {
                    uiTag: vT.value?.toolbarSimulationSpeed,
                    children: (0,
                    z.jsx)(BQ, {
                        title: (0,
                        z.jsx)(_c.Main.TOOLTIP_TITLE_GAME_SPEED, {}),
                        description: (0,
                        z.jsx)(_c.Main.TOOLTIP_DESCRIPTION_GAME_SPEED, {}),
                        shortcut: (0,
                        z.jsx)(BT, {
                            action: "Switch Speed",
                            shortName: wp.FallbackToControl
                        }),
                        children: (0,
                        z.jsx)(Ah, {
                            onFocusChange: s,
                            children: (0,
                            z.jsx)(tb, {
                                disableHint: !0,
                                tinted: !0,
                                src: rZ(r),
                                selectSound: null,
                                className: Zu()(qQ.button, qQ.speed, o && qQ.paused, c.mouseDown && qQ.secondaryActive),
                                onSelect: eZ,
                                onMouseDown: c.onMouseDown,
                                onMouseUp: c.onMouseUp
                            })
                        })
                    })
                }), (0,
                z.jsx)(UT, {
                    action: "Select",
                    active: n,
                    className: YQ.hintRight
                })]
            })
        }
        ;
        const ZQ = ({tf: e, paused: t})=>{
            const n = sl(GO)
              , s = sc()
              , i = (0,
            Y.useRef)(null)
              , a = (0,
            Y.useRef)(null)
              , o = (0,
            Y.useRef)(null)
              , r = (0,
            Y.useRef)(null)
              , l = (0,
            Y.useCallback)((t=>{
                const l = eP(n, t)
                  , c = Tu(e ? l.hour : l.hour % 12 || 12, 2)
                  , u = Tu(l.minute, 2);
                i.current && a.current && r.current && (i.current.innerHTML = c,
                a.current.innerHTML = u,
                r.current.innerHTML = Nu(s, l)),
                o.current && (o.current.innerHTML = (l.hour < 12 ? s.translate("Common.TIME_PERIOD_AM") : s.translate("Common.TIME_PERIOD_PM")) || "")
            }
            ), [s, e, n])
              , c = ol(VO, l)
              , [u] = (0,
            Y.useState)((()=>eP(n, c)))
              , d = (0,
            Y.useMemo)((()=>Tu(e ? u.hour : u.hour % 12 || 12, 2)), [u.hour, e])
              , m = (0,
            Y.useMemo)((()=>Tu(u.minute, 2)), [u.minute]);
            return (0,
            z.jsx)(xd, {
                children: (0,
                z.jsxs)("div", {
                    className: qQ.dateTimeContainer,
                    children: [(0,
                    z.jsxs)("div", {
                        className: Zu()(qQ.dateTime, t && qQ.paused),
                        children: [(0,
                        z.jsx)("div", {
                            className: qQ.timeHours,
                            ref: i,
                            children: d
                        }), (0,
                        z.jsx)("div", {
                            className: qQ.timeColon,
                            children: ":"
                        }), (0,
                        z.jsx)("div", {
                            className: qQ.timeMinutes,
                            ref: a,
                            children: m
                        }), !e && (0,
                        z.jsx)("div", {
                            className: qQ.timePeriod,
                            ref: o,
                            children: u.hour < 12 ? (0,
                            z.jsx)(_c.Common.TIME_PERIOD_AM, {}) : (0,
                            z.jsx)(_c.Common.TIME_PERIOD_PM, {})
                        }), (0,
                        z.jsx)("div", {
                            className: qQ.date,
                            ref: r,
                            children: (0,
                            z.jsx)(ju, {
                                value: u
                            })
                        })]
                    }), t && (0,
                    z.jsx)("div", {
                        className: qQ.pausedLabel,
                        children: (0,
                        z.jsx)(_c.Toolbar.SIMULATION_PAUSED, {})
                    })]
                })
            })
        }
        ;
        function JQ() {
            const e = !WO.value;
            cp(e ? lp.pauseSimulation : lp.resumeSimulation),
            $O(e)
        }
        function eZ() {
            oZ(zO.value + 1)
        }
        function tZ() {
            oZ(zO.value + 3 - 1)
        }
        function nZ() {
            oZ(0)
        }
        function sZ() {
            oZ(1)
        }
        function iZ() {
            oZ(2)
        }
        function aZ() {
            if (WO.value)
                cp(lp.resumeSimulation),
                qO(0);
            else {
                const e = zO.value;
                e < 2 ? oZ(e + 1) : (cp(lp.pauseSimulation),
                $O(!0))
            }
        }
        function oZ(e) {
            const t = e % 3;
            cp(function(e) {
                return e < .5 ? lp.simulationSpeed1 : e < 1.5 ? lp.simulationSpeed2 : lp.simulationSpeed3
            }(t)),
            qO(t)
        }
        function rZ(e) {
            return e < .5 ? XQ.speed1 : e < 1.5 ? XQ.speed2 : XQ.speed3
        }
        function lZ() {
            const e = sl(Lv)
              , t = sl(iP)
              , n = sl(xP)
              , s = sl(ef)
              , i = cZ()
              , a = (0,
            Y.useCallback)((()=>NP(function(e) {
                const t = e.modes.reduce(((t,n)=>n.index > e.modeIndex && (void 0 === t || n.index < t) ? n.index : t), void 0);
                if (void 0 !== t)
                    return t;
                const n = e.modes.reduce(((e,t)=>void 0 === e || t.index < e ? t.index : e), void 0);
                return void 0 !== n ? n : e.modeIndex
            }(t))), [t])
              , o = sl(vC)
              , r = sl(lP)
              , l = sl(rP)
              , c = (0,
            Y.useCallback)((()=>{
                RP((l & r) === r ? l & ~r : l | r)
            }
            ), [r, l]);
            return (0,
            Y.useMemo)((()=>({
                ...i,
                Back: t.id !== GP || o ? ()=>{
                    t.id === BP && cp(lp.bulldozeEnd),
                    o && CC(!1),
                    CP(GP)
                }
                : null,
                "Leave Underground Mode": n ? ()=>{
                    cp(lp.increaseElevation),
                    FP(!1)
                }
                : null,
                "Leave Info View": null != s ? sf : null,
                "Pause Menu": e !== Ov.pauseMenu ? kv : null,
                "Switch Toolmode": a,
                "Toggle Snapping": c,
                "Hide UI": ()=>Av(Lv.value !== Ov.freeCamera ? Ov.freeCamera : Ov.main)
            })), [i, t.id, n, s, e, a, c, o])
        }
        function cZ() {
            const e = sl(WO);
            return (0,
            Y.useMemo)((()=>({
                "Switch Speed": aZ,
                "Speed 1": nZ,
                "Speed 2": sZ,
                "Speed 3": iZ,
                "Pause Simulation": e ? null : ()=>{
                    cp(lp.pauseSimulation),
                    $O(!0)
                }
                ,
                "Resume Simulation": e ? ()=>{
                    cp(lp.resumeSimulation),
                    $O(!1)
                }
                : null
            })), [e])
        }
        X.add("game-ui/game/components/toolbar/bottom/time-controls/time-controls.tsx", {
            get images() {
                return XQ
            },
            set images(e) {
                XQ = e
            },
            get TimeControls() {
                return QQ
            },
            set TimeControls(e) {
                QQ = e
            },
            get togglePause() {
                return JQ
            },
            set togglePause(e) {
                JQ = e
            },
            get switchSpeed() {
                return eZ
            },
            set switchSpeed(e) {
                eZ = e
            },
            get switchSpeedReverse() {
                return tZ
            },
            set switchSpeedReverse(e) {
                tZ = e
            },
            get speed1() {
                return nZ
            },
            set speed1(e) {
                nZ = e
            },
            get speed2() {
                return sZ
            },
            set speed2(e) {
                sZ = e
            },
            get speed3() {
                return iZ
            },
            set speed3(e) {
                iZ = e
            },
            get switchSpeedOrPause() {
                return aZ
            },
            set switchSpeedOrPause(e) {
                aZ = e
            }
        }),
        X.add("game-ui/game/components/game-input-actions.tsx", {
            get useGameInputActions() {
                return lZ
            },
            set useGameInputActions(e) {
                lZ = e
            },
            get useSimSpeedInputActions() {
                return cZ
            },
            set useSimSpeedInputActions(e) {
                cZ = e
            }
        });
        var uZ = ({onClose: e, focusKey: t})=>{
            const n = sl(nC)
              , [s] = (0,
            Y.useState)(n);
            dZ(),
            (0,
            Y.useEffect)((()=>{
                if (sC(!0),
                !s)
                    return ()=>sC(!1)
            }
            ), [s]);
            const i = cZ()
              , a = (0,
            Y.useMemo)((()=>({
                Back: e,
                "Take Photo": ()=>{
                    cp(lp.takePhoto),
                    oC()
                }
                ,
                "Hide UI": e,
                ...i
            })), [e, i]);
            return (0,
            z.jsx)(Np, {
                children: (0,
                z.jsx)(Mg, {
                    actions: a,
                    children: (0,
                    z.jsx)(op, {
                        focusKey: t,
                        focused: null,
                        activation: qu.Always
                    })
                })
            })
        }
        ;
        function dZ(e=!0) {
            Xp(e ? "hide-ui" : void 0)
        }
        X.add("game-ui/game/components/free-camera-screen/free-camera-screen.tsx", {
            get FreeCameraScreen() {
                return uZ
            },
            set FreeCameraScreen(e) {
                uZ = e
            },
            get useUIHidden() {
                return dZ
            },
            set useUIHidden(e) {
                dZ = e
            }
        });
        const mZ = new Ig("NO_KEY");
        function hZ() {
            const e = (0,
            Y.useContext)(xE);
            return (0,
            Y.useCallback)((()=>e.showDialog((0,
            z.jsx)(gZ, {}))), [e])
        }
        var gZ = ()=>{
            const e = (0,
            Y.useContext)(vE)
              , t = (0,
            Y.useCallback)((()=>{
                e.onClose(),
                wM()
            }
            ), [e])
              , n = (0,
            Y.useCallback)((()=>{
                e.onClose(),
                HE()
            }
            ), [e])
              , s = sl(lM)
              , [i,a] = (0,
            Y.useState)(2)
              , o = (0,
            Y.useMemo)((()=>({
                "Select Popup Button": e=>{
                    a(e >= 0 ? (i + 1) % 3 : (i + 3 - 1) % 3)
                }
            })), [i])
              , r = Dm();
            return (0,
            z.jsx)(Mg, {
                actions: o,
                disabled: r,
                children: (0,
                z.jsx)(gE, {
                    wide: !0,
                    title: (0,
                    z.jsx)(_c.Common.EXIT_DIALOG_TITLE, {}),
                    buttons: (0,
                    z.jsx)(z.Fragment, {
                        children: (0,
                        z.jsxs)("div", {
                            className: hE.buttons,
                            children: [(0,
                            z.jsx)(U_, {
                                theme: ZE,
                                className: hE.button,
                                onSelect: t,
                                selected: !r && 0 === i,
                                shortcut: r || 0 !== i ? void 0 : "Confirm",
                                children: (0,
                                z.jsx)(_c.Common.EXIT_TO_MENU, {})
                            }), s && (0,
                            z.jsx)(U_, {
                                theme: ZE,
                                className: hE.button,
                                onSelect: n,
                                selected: !r && 1 === i,
                                shortcut: r || 1 !== i ? void 0 : "Confirm",
                                children: (0,
                                z.jsx)(_c.Common.EXIT_TO_DESKTOP, {})
                            }), (0,
                            z.jsx)(U_, {
                                focusKey: mZ,
                                theme: ZE,
                                className: Zu()(hE.button, ZE.negative),
                                onSelect: e.onClose,
                                selected: !r && 2 === i,
                                shortcut: r || 2 !== i ? void 0 : "Confirm",
                                children: (0,
                                z.jsx)(_c.Common.CANCEL, {})
                            })]
                        })
                    }),
                    onClose: e.onClose,
                    initialFocus: mZ,
                    children: (0,
                    z.jsx)(Cb, {
                        theme: hE,
                        children: (0,
                        z.jsx)(_c.Common.EXIT_DIALOG_TEXT, {})
                    })
                })
            })
        }
        ;
        X.add("game-ui/menu/components/pause-menu/exit-dialog/exit-dialog.tsx", {
            get useExitDialogCallback() {
                return hZ
            },
            set useExitDialogCallback(e) {
                hZ = e
            },
            get ExitDialog() {
                return gZ
            },
            set ExitDialog(e) {
                gZ = e
            }
        });
        let pZ = {
            enter: "enter_eIx enter_kO6",
            "enter-active": "enter-active_Y4y enter-active_lrI",
            enterActive: "enter-active_Y4y enter-active_lrI",
            exit: "exit_PzK exit_Von",
            "exit-active": "exit-active_jCs exit-active_jtN",
            exitActive: "exit-active_jCs exit-active_jtN",
            base: "base_D7z"
        };
        X.add("game-ui/menu/transitions/expand-fade-children.module.scss", {
            get classes() {
                return pZ
            },
            set classes(e) {
                Object.assign(pZ, e)
            }
        });
        const fZ = pZ;
        let xZ = {
            "master-screen": "master-screen_B69",
            masterScreen: "master-screen_B69"
        };
        X.add("game-ui/menu/components/shared/master-screen/master-screen.module.scss", {
            get classes() {
                return xZ
            },
            set classes(e) {
                Object.assign(xZ, e)
            }
        });
        const vZ = xZ;
        var _Z = Y.forwardRef((function({focusKey: e, className: t, children: n}, s) {
            return (0,
            z.jsx)(ap, {
                focusKey: e,
                children: (0,
                z.jsx)(yp, {
                    children: (0,
                    z.jsx)(mh, {
                        styles: fZ,
                        children: (0,
                        z.jsx)("div", {
                            ref: s,
                            className: Zu()(vZ.masterScreen, t),
                            children: n
                        })
                    })
                })
            })
        }
        ));
        X.add("game-ui/menu/components/shared/master-screen/master-screen.tsx", {
            get MasterScreen() {
                return _Z
            },
            set MasterScreen(e) {
                _Z = e
            }
        });
        let bZ = {
            content: "content_Y6b",
            menu: "menu_ZQW",
            item: "item_Psh"
        };
        X.add("game-ui/menu/components/editor-pause-screen/editor-pause-screen.module.scss", {
            get classes() {
                return bZ
            },
            set classes(e) {
                Object.assign(bZ, e)
            }
        });
        const TZ = bZ;
        var EZ = Y.forwardRef((function({focusKey: e, className: t, onSelectScreen: n, onClose: s, onNewMap: i}, a) {
            const o = (0,
            Y.useMemo)((()=>({
                "Pause Menu": s,
                Back: s
            })), [s])
              , r = hZ();
            return (0,
            z.jsx)(_Z, {
                ref: a,
                focusKey: e,
                className: t,
                children: (0,
                z.jsx)(Np, {
                    children: (0,
                    z.jsx)(Mg, {
                        actions: o,
                        children: (0,
                        z.jsx)("div", {
                            className: TZ.content,
                            children: (0,
                            z.jsx)("div", {
                                className: TZ.menu,
                                children: (0,
                                z.jsxs)(np, {
                                    direction: kg.Vertical,
                                    children: [(0,
                                    z.jsx)(qI, {
                                        tinted: !0,
                                        src: "Media/Glyphs/ArrowRight.svg",
                                        theme: tS,
                                        onSelect: s,
                                        children: (0,
                                        z.jsx)(_c.Editor.BACK_TO_EDITOR, {})
                                    }), (0,
                                    z.jsx)(qI, {
                                        tinted: !0,
                                        src: "Media/Glyphs/Pen.svg",
                                        theme: tS,
                                        onSelect: i,
                                        children: (0,
                                        z.jsx)(_c.Editor.NEW_MAP, {})
                                    }), (0,
                                    z.jsx)(qI, {
                                        tinted: !0,
                                        src: "Media/Glyphs/Gear.svg",
                                        theme: tS,
                                        onSelect: ()=>n(LQ.options),
                                        children: (0,
                                        z.jsx)(_c.Menu.OPTIONS, {})
                                    }), (0,
                                    z.jsx)(qI, {
                                        tinted: !0,
                                        src: "Media/Glyphs/Close.svg",
                                        theme: tS,
                                        onSelect: r,
                                        children: (0,
                                        z.jsx)(_c.Menu.EXIT_GAME, {})
                                    })]
                                })
                            })
                        })
                    })
                })
            })
        }
        ));
        X.add("game-ui/menu/components/editor-pause-screen/editor-pause-screen.tsx", {
            get EditorPauseScreen() {
                return EZ
            },
            set EditorPauseScreen(e) {
                EZ = e
            }
        });
        let IZ = {
            "beta-pill": "beta-pill_OSA",
            betaPill: "beta-pill_OSA"
        };
        X.add("game-ui/common/beta-element/beta-pill/beta-pill.module.scss", {
            get classes() {
                return IZ
            },
            set classes(e) {
                Object.assign(IZ, e)
            }
        });
        const SZ = IZ;
        var yZ = e=>(0,
        z.jsx)(GM, {
            children: (0,
            z.jsx)(jZ, {
                ...e,
                children: (0,
                z.jsx)(_c.Menu.BETA_LABEL, {})
            })
        })
          , jZ = ({children: e, className: t})=>(0,
        z.jsx)("div", {
            className: Zu()(SZ.betaPill, t),
            children: e
        });
        X.add("game-ui/common/beta-element/beta-pill/beta-pill.tsx", {
            get ModdingBetaPill() {
                return yZ
            },
            set ModdingBetaPill(e) {
                yZ = e
            },
            get BetaPill() {
                return jZ
            },
            set BetaPill(e) {
                jZ = e
            }
        });
        let CZ = {
            "locked-badge": "locked-badge_zT4",
            lockedBadge: "locked-badge_zT4"
        };
        X.add("game-ui/game/components/item-grid/badges/locked-badge.module.scss", {
            get classes() {
                return CZ
            },
            set classes(e) {
                Object.assign(CZ, e)
            }
        });
        const NZ = CZ
          , wZ = YT({
            Lock: "Media/Glyphs/Lock.svg"
        });
        var OZ = ({style: e, className: t})=>(0,
        z.jsx)(Z_, {
            src: wZ.Lock,
            className: Zu()(NZ.lockedBadge, t),
            style: e
        });
        X.add("game-ui/game/components/item-grid/badges/locked-badge.tsx", {
            get LockedBadge() {
                return OZ
            },
            set LockedBadge(e) {
                OZ = e
            }
        });
        let PZ = {
            "tab-bar": "tab-bar_oPw",
            tabBar: "tab-bar_oPw",
            tab: "tab_Hrb",
            lock: "lock_F5I"
        };
        X.add("game-ui/common/tabs/tabs.module.scss", {
            get classes() {
                return PZ
            },
            set classes(e) {
                Object.assign(PZ, e)
            }
        });
        const LZ = PZ;
        function AZ({tabs: e, selectedTab: t, selectPreviousSound: n=lp.selectPreviousItem, selectNextSound: s=lp.selectNextItem, children: i, onSelect: a}) {
            const o = 0 === e.length || 1 === e.length && e[0] === t
              , r = (0,
            Y.useMemo)((()=>({
                "Switch Tab": i=>{
                    if (0 !== i) {
                        const o = null != t ? e.indexOf(t) : -1
                          , r = i < 0 ? Ew(e, o, !0) : bw(e, o, !0);
                        null != r && r !== t && (a(r),
                        cp(i < 0 ? n : s))
                    }
                }
            })), [a, s, n, t, e]);
            return (0,
            z.jsx)(Mg, {
                actions: r,
                disabled: o,
                children: i
            })
        }
        var MZ = ({className: e, children: t})=>(0,
        z.jsx)("div", {
            className: Zu()(LZ.tabBar, e),
            children: (0,
            z.jsx)(WH, {
                children: t
            })
        });
        function RZ({id: e, selectedId: t, uiTag: n, disabled: s, locked: i, selectSound: a, className: o, children: r, onSelect: l}) {
            const c = e === t
              , u = (0,
            Y.useCallback)((()=>{
                l(e),
                n && ag(n)
            }
            ), [e, l, n]);
            return (0,
            z.jsx)(mT, {
                uiTag: n,
                active: !s,
                children: (0,
                z.jsxs)(U_, {
                    disableHint: !0,
                    focusKey: Sg,
                    disabled: s,
                    selectSound: a,
                    className: Zu()(LZ.tab, c && "selected", o),
                    onSelect: u,
                    children: [r, i && (0,
                    z.jsx)(OZ, {
                        className: LZ.lock
                    })]
                })
            })
        }
        X.add("game-ui/common/tabs/tabs.tsx", {
            get TabNav() {
                return AZ
            },
            set TabNav(e) {
                AZ = e
            },
            get TabBar() {
                return MZ
            },
            set TabBar(e) {
                MZ = e
            },
            get Tab() {
                return RZ
            },
            set Tab(e) {
                RZ = e
            }
        });
        var kZ = Y.createContext({
            onOptionMouseEnter: ()=>{}
            ,
            onOptionMouseLeave: ()=>{}
            ,
            onFocusSet: ()=>{}
            ,
            onFocusReset: ()=>{}
        });
        X.add("game-ui/menu/components/options-screen/option-page/option-page-context.ts", {
            get OptionSectionContext() {
                return kZ
            },
            set OptionSectionContext(e) {
                kZ = e
            }
        });
        let DZ = {
            field: "field_MBO field_UuC",
            label: "label_DGc label_ZLb",
            "warning-icon": "warning-icon_Q8e",
            warningIcon: "warning-icon_Q8e"
        };
        X.add("game-ui/menu/widgets/field/row-field.module.scss", {
            get classes() {
                return DZ
            },
            set classes(e) {
                Object.assign(DZ, e)
            }
        });
        const FZ = DZ;
        var UZ = {
            ...F_,
            hover: null,
            focus: null
        };
        function BZ(e) {
            return (0,
            z.jsx)(VZ, {
                ...e.props,
                id: e.path,
                label: (0,
                z.jsx)(gu, {
                    value: e.props.displayName
                }),
                warning: e.props.warning,
                children: e.props.value
            })
        }
        function GZ(e) {
            return (0,
            z.jsx)(VZ, {
                ...e.props,
                id: e.path,
                label: (0,
                z.jsx)(gu, {
                    value: e.props.displayName
                }),
                warning: e.props.warning,
                children: (0,
                z.jsx)(gu, {
                    value: e.props.value
                })
            })
        }
        var VZ = ({id: e, label: t, warning: n, theme: s=FZ, disabled: i, className: a, children: o, onClick: r})=>{
            const l = (0,
            Y.useContext)(kZ)
              , c = (0,
            Y.useCallback)((()=>{
                "string" == typeof e && l.onOptionMouseEnter(e),
                cp(lp.hoverItem)
            }
            ), [e, l])
              , u = (0,
            Y.useCallback)((()=>{
                "string" == typeof e && l.onOptionMouseLeave(e)
            }
            ), [e, l])
              , d = (0,
            Y.useCallback)((e=>{
                !i && r && r(e)
            }
            ), [i, r]);
            return (0,
            z.jsxs)(Sp, {
                className: Zu()(s.field, i && "disabled", a),
                focusKey: e,
                focusSound: lp.hoverItem,
                onMouseEnter: c,
                onMouseLeave: u,
                onClick: d,
                children: [n && (0,
                z.jsx)("img", {
                    className: FZ.warningIcon,
                    src: "Media/Misc/Warning.svg"
                }), t && (0,
                z.jsx)("div", {
                    className: s.label,
                    children: t
                }), o]
            })
        }
        ;
        X.add("game-ui/menu/widgets/field/field.tsx", {
            get optionButtonSounds() {
                return UZ
            },
            set optionButtonSounds(e) {
                UZ = e
            },
            get ValueField() {
                return BZ
            },
            set ValueField(e) {
                BZ = e
            },
            get LocalizedValueField() {
                return GZ
            },
            set LocalizedValueField(e) {
                GZ = e
            },
            get OptionField() {
                return VZ
            },
            set OptionField(e) {
                VZ = e
            }
        });
        let HZ = {
            panel: "panel_sI8",
            backdrop: "backdrop_EtG",
            header: "header_dGi",
            "picker-field": "picker-field_Sfm",
            pickerField: "picker-field_Sfm",
            label: "label_eqn",
            button: "button_SSl",
            control: "control_kH8",
            field: "field_auj value-field_yJi",
            value: "value_T9z value_PW_",
            "directory-button": "directory-button_FNN secondary-button_Kvj",
            directoryButton: "directory-button_FNN secondary-button_Kvj",
            "string-field": "string-field_clR",
            stringField: "string-field_clR",
            hint: "hint_Mwa"
        };
        X.add("game-ui/menu/widgets/directory-picker/bound-directory-picker.module.scss", {
            get classes() {
                return HZ
            },
            set classes(e) {
                Object.assign(HZ, e)
            }
        });
        const KZ = HZ;
        function WZ({parent: e, path: t, props: n}) {
            const s = ZR(e, t)
              , i = YM(DR, s)
              , a = Dm()
              , o = YM(RR, s)
              , r = (0,
            Y.useCallback)((e=>{
                o(e.target.value)
            }
            ), [o])
              , l = (0,
            Y.useMemo)((()=>({
                "Select Directory": i
            })), [i])
              , {setHeader: c} = (0,
            Y.useContext)(qZ);
            (0,
            Y.useEffect)((()=>{
                c(n.displayName)
            }
            ), [n.displayName, c]);
            const [u,d] = (0,
            Y.useState)(!1)
              , [m,h] = (0,
            Y.useState)(!1)
              , g = (0,
            Y.useCallback)((()=>{
                h(!1)
            }
            ), [])
              , p = (0,
            Y.useCallback)((()=>{
                h(!0)
            }
            ), [])
              , f = !n.disabled && u;
            return (0,
            z.jsx)(Mg, {
                actions: l,
                disabled: n.disabled,
                children: (0,
                z.jsx)(Ah, {
                    onFocusChange: d,
                    children: (0,
                    z.jsxs)(VZ, {
                        ...n,
                        id: t,
                        label: (0,
                        z.jsx)(gu, {
                            value: n.displayName
                        }),
                        warning: n.warning,
                        children: [(0,
                        z.jsx)(UT, {
                            action: m ? "Back" : "Select",
                            active: f,
                            className: KZ.hint
                        }), (0,
                        z.jsxs)("div", {
                            className: Zu()(KZ.field, n.disabled && "disabled"),
                            children: [(0,
                            z.jsx)(Eg, {
                                tooltip: (0,
                                z.jsx)(cc, {
                                    id: null,
                                    fallback: n.value.replaceAll("/", "/​").replaceAll(" ", " ")
                                }),
                                children: (0,
                                z.jsx)(oI, {
                                    ...n,
                                    onChange: r,
                                    className: Zu()(KZ.stringField, n.disabled && "disabled"),
                                    value: n.value,
                                    multiline: void 0,
                                    maxLength: void 0,
                                    onBlur: g,
                                    onFocus: p
                                })
                            }), !a && !n.disabled && (0,
                            z.jsx)(tb, {
                                tinted: !0,
                                onSelect: i,
                                focusKey: Sg,
                                src: "Media/Editor/Folder.svg",
                                className: KZ.directoryButton,
                                onClick: Db
                            })]
                        })]
                    })
                })
            })
        }
        const zZ = new Ig("DIRECTORY_PICKER")
          , YZ = new Ig("CHILDREN")
          , $Z = {
            setHeader: ()=>{}
        };
        var qZ = Y.createContext($Z);
        const XZ = ()=>{}
        ;
        function QZ({children: e, focusKey: t}) {
            const n = sl(Zl)
              , s = sl(Ql)
              , i = (0,
            Y.useMemo)((()=>({
                group: "options",
                path: []
            })), [])
              , [a,o] = (0,
            Y.useState)()
              , r = (0,
            Y.useMemo)((()=>({
                setHeader: o
            })), []);
            return (0,
            z.jsx)(Zg, {
                focusKey: t,
                focused: n && s ? zZ : YZ,
                onChange: XZ,
                children: (0,
                z.jsxs)(qZ.Provider, {
                    value: r,
                    children: [(0,
                    z.jsx)(ap, {
                        focusKey: YZ,
                        children: e
                    }), n && s && (0,
                    z.jsx)(ap, {
                        focusKey: zZ,
                        children: (0,
                        z.jsx)(l_, {
                            onMouseDown: Jl,
                            className: KZ.backdrop,
                            children: (0,
                            z.jsx)("div", {
                                className: KZ.panel,
                                children: (0,
                                z.jsx)(Fg, {
                                    onAction: Jl,
                                    children: (0,
                                    z.jsx)(yp, {
                                        children: (0,
                                        z.jsxs)(np, {
                                            children: [a && (0,
                                            z.jsx)("div", {
                                                className: KZ.header,
                                                children: (0,
                                                z.jsx)(gu, {
                                                    value: a
                                                })
                                            }), (0,
                                            z.jsx)(cY, {
                                                parent: i,
                                                data: s
                                            })]
                                        })
                                    })
                                })
                            })
                        })
                    })]
                })
            })
        }
        X.add("game-ui/menu/widgets/directory-picker/bound-directory-picker.tsx", {
            get BoundDirectoryPickerField() {
                return WZ
            },
            set BoundDirectoryPickerField(e) {
                WZ = e
            },
            get DirectoryPickerDialogContext() {
                return qZ
            },
            set DirectoryPickerDialogContext(e) {
                qZ = e
            },
            get DirectoryPickerDialog() {
                return QZ
            },
            set DirectoryPickerDialog(e) {
                QZ = e
            }
        });
        let ZZ = {
            divider: "divider_wuh"
        };
        X.add("game-ui/menu/widgets/divider/divider.module.scss", {
            get classes() {
                return ZZ
            },
            set classes(e) {
                Object.assign(ZZ, e)
            }
        });
        const JZ = ZZ;
        var eJ = ()=>(0,
        z.jsx)("div", {
            className: JZ.divider
        });
        X.add("game-ui/menu/widgets/divider/divider.tsx", {
            get Divider() {
                return eJ
            },
            set Divider(e) {
                eJ = e
            }
        });
        let tJ = {
            "empty-state": "empty-state_GEy",
            emptyState: "empty-state_GEy"
        };
        X.add("game-ui/common/empty-state/empty-state.module.scss", {
            get classes() {
                return tJ
            },
            set classes(e) {
                Object.assign(tJ, e)
            }
        });
        const nJ = tJ;
        var sJ = ({children: e, className: t})=>(0,
        z.jsx)("div", {
            className: Zu()(nJ.emptyState, t),
            children: e
        });
        X.add("game-ui/common/empty-state/empty-state.tsx", {
            get EmptyState() {
                return sJ
            },
            set EmptyState(e) {
                sJ = e
            }
        });
        let iJ = {
            label: "label_sAz",
            container: "container_R_O",
            "beta-pill": "beta-pill_E9M",
            betaPill: "beta-pill_E9M"
        };
        X.add("game-ui/menu/widgets/label/label.module.scss", {
            get classes() {
                return iJ
            },
            set classes(e) {
                Object.assign(iJ, e)
            }
        });
        const aJ = iJ;
        var oJ = ({props: e})=>{
            const t = (0,
            z.jsxs)("div", {
                className: aJ.container,
                children: [(0,
                z.jsx)("div", {
                    className: Zu()(aJ.label, "label-level-" + e.level),
                    children: (0,
                    z.jsx)(gu, {
                        value: e.displayName
                    })
                }), e.beta && (0,
                z.jsx)(yZ, {
                    className: aJ.betaPill
                })]
            });
            return e.tooltip ? (0,
            z.jsx)(Eg, {
                tooltip: (0,
                z.jsx)(gu, {
                    value: e.tooltip
                }),
                children: t
            }) : t
        }
        ;
        X.add("game-ui/menu/widgets/label/Label.tsx", {
            get Label() {
                return oJ
            },
            set Label(e) {
                oJ = e
            }
        });
        let rJ = {
            breadcrumbs: "breadcrumbs_xcd"
        };
        X.add("game-ui/menu/widgets/breadcrumbs/breadcrumbs.module.scss", {
            get classes() {
                return rJ
            },
            set classes(e) {
                Object.assign(rJ, e)
            }
        });
        const lJ = rJ
          , cJ = {
            [NR.Label]: oJ
        };
        var uJ = ({children: e, parent: t})=>(0,
        z.jsx)("div", {
            className: lJ.breadcrumbs,
            children: (0,
            z.jsx)(hD, {
                parent: t,
                data: e,
                components: cJ
            })
        });
        X.add("game-ui/menu/widgets/breadcrumbs/breadcrumbs.tsx", {
            get Breadcrumbs() {
                return uJ
            },
            set Breadcrumbs(e) {
                uJ = e
            }
        });
        let dJ = {
            button: "button_WWa",
            icon: "icon_OPJ",
            label: "label_vrX"
        };
        X.add("game-ui/menu/themes/secondary-button.module.scss", {
            get classes() {
                return dJ
            },
            set classes(e) {
                Object.assign(dJ, e)
            }
        });
        const mJ = dJ;
        let hJ = {
            buttons: "buttons_hd7",
            button: "button_SH8"
        };
        X.add("game-ui/menu/widgets/button/button.module.scss", {
            get classes() {
                return hJ
            },
            set classes(e) {
                Object.assign(hJ, e)
            }
        });
        const gJ = hJ;
        var pJ = e=>(0,
        z.jsx)(z.Fragment, {
            children: !e.props.hidden && (0,
            z.jsx)(vJ, {
                children: (0,
                z.jsx)(_J, {
                    ...e
                })
            })
        })
          , fJ = e=>(0,
        z.jsx)(z.Fragment, {
            children: !e.props.hidden && (0,
            z.jsx)(vJ, {
                children: (0,
                z.jsx)(_J, {
                    ...e
                })
            })
        })
          , xJ = e=>{
            const t = ZR(e.parent, e.path);
            return (0,
            z.jsx)(z.Fragment, {
                children: e.children.some((e=>!e.props.hidden)) && (0,
                z.jsx)(b0, {
                    debugName: "BUTTONROW_" + e.path,
                    direction: kg.Horizontal,
                    children: (0,
                    z.jsx)(vJ, {
                        children: e.children.map((e=>(0,
                        Y.createElement)(_J, {
                            ...e,
                            key: e.path,
                            parent: t,
                            path: e.path
                        })))
                    })
                })
            })
        }
        ;
        const vJ = ({children: e})=>(0,
        z.jsx)(Sp, {
            className: gJ.buttons,
            activation: qu.Always,
            children: (0,
            z.jsx)(np, {
                children: e
            })
        })
          , _J = e=>{
            const t = YM(MR, ZR(e.parent, e.path));
            return (0,
            z.jsx)(bJ, {
                id: e.path,
                disabled: e.props.disabled,
                hidden: e.props.hidden,
                onSelect: t,
                confirmationMessage: null != e.props.confirmationMessage ? (0,
                z.jsx)(gu, {
                    value: e.props.confirmationMessage
                }) : null,
                children: (0,
                z.jsx)(gu, {
                    value: e.props.displayName
                })
            })
        }
          , bJ = ({id: e, disabled: t, hidden: n, confirmationMessage: s, children: i, onSelect: a})=>{
            const o = (0,
            Y.useContext)(xE)
              , r = (0,
            Y.useContext)(kZ)
              , l = (0,
            Y.useCallback)((()=>{
                "string" == typeof e && r.onOptionMouseEnter(e)
            }
            ), [e, r])
              , c = (0,
            Y.useCallback)((()=>{
                "string" == typeof e && r.onOptionMouseLeave(e)
            }
            ), [e, r])
              , u = (0,
            Y.useCallback)((()=>{
                null != s ? o.showDialog((0,
                z.jsx)(zI, {
                    title: (0,
                    z.jsx)(_c.Common.WARNING, {}),
                    message: s,
                    onConfirm: a
                })) : a()
            }
            ), [o, s, a]);
            return (0,
            z.jsx)(z.Fragment, {
                children: !n && (0,
                z.jsx)(U_, {
                    focusKey: e,
                    disabled: t,
                    theme: mJ,
                    className: gJ.button,
                    onSelect: u,
                    onMouseEnter: l,
                    onMouseLeave: c,
                    children: i
                })
            })
        }
        ;
        X.add("game-ui/menu/widgets/button/button.tsx", {
            get BoundButton() {
                return pJ
            },
            set BoundButton(e) {
                pJ = e
            },
            get BoundButtonWithConfirmation() {
                return fJ
            },
            set BoundButtonWithConfirmation(e) {
                fJ = e
            },
            get BoundButtonRow() {
                return xJ
            },
            set BoundButtonRow(e) {
                xJ = e
            }
        });
        let TJ = {
            "dropdown-toggle": "dropdown-toggle_V9z dropdown-toggle_prl value-field_yJi value_PW_",
            dropdownToggle: "dropdown-toggle_V9z dropdown-toggle_prl value-field_yJi value_PW_",
            indicator: "indicator_Xmj",
            "dropdown-menu": "dropdown-menu_jf2 dropdown-menu_Swd",
            dropdownMenu: "dropdown-menu_jf2 dropdown-menu_Swd",
            "dropdown-item": "dropdown-item_sZT undefined",
            dropdownItem: "dropdown-item_sZT undefined"
        };
        X.add("game-ui/menu/themes/dropdown.module.scss", {
            get classes() {
                return TJ
            },
            set classes(e) {
                Object.assign(TJ, e)
            }
        });
        const EJ = TJ;
        let IJ = {
            dropdown: "dropdown_iVn",
            hint: "hint_fnk"
        };
        X.add("game-ui/menu/widgets/dropdown-field/dropdown-field.module.scss", {
            get classes() {
                return IJ
            },
            set classes(e) {
                Object.assign(IJ, e)
            }
        });
        const SJ = IJ;
        function yJ(e) {
            return (0,
            z.jsx)(CJ, {
                items: e.props.enumMembers,
                value: e.props.value,
                ...e
            })
        }
        function jJ(e) {
            return (0,
            z.jsx)(CJ, {
                items: e.props.items,
                value: e.props.value,
                ...e
            })
        }
        function CJ(e) {
            const t = e.items.findIndex((t=>Kr(t.value, e.value)))
              , n = -1 !== t ? e.items[t] : null
              , s = YM(RR, ZR(e.parent, e.path))
              , i = e.items.filter((e=>!e.disabled))
              , a = NJ(n)
              , [o,r] = (0,
            Y.useState)(!1)
              , [l,c] = (0,
            Y.useState)(!1)
              , [u,d] = (0,
            Y.useState)(t)
              , m = !e.props.disabled && o;
            return (0,
            z.jsx)(Ah, {
                onFocusChange: r,
                children: (0,
                z.jsxs)(VZ, {
                    ...e.props,
                    id: e.path,
                    label: (0,
                    z.jsx)(gu, {
                        value: e.props.displayName
                    }),
                    warning: e.props.warning,
                    disabled: e.props.disabled || !i.length,
                    children: [(0,
                    z.jsx)(UT, {
                        action: l ? "Back" : "Select",
                        active: m,
                        className: SJ.hint
                    }), (0,
                    z.jsx)(fS, {
                        focusKey: e.props.disabled ? Sg : yg,
                        initialFocused: t,
                        theme: EJ,
                        content: (0,
                        z.jsx)(np, {
                            initialFocused: t,
                            onChange: d,
                            allowLooping: !0,
                            children: i.map(((e,t)=>(0,
                            z.jsxs)(bS, {
                                focusKey: t,
                                value: e.value,
                                selected: !!n && Kr(n.value, e.value),
                                onChange: s,
                                children: [(0,
                                z.jsx)(UT, {
                                    action: "Select",
                                    active: u === t && m,
                                    className: SJ.hint
                                }), NJ(e)]
                            }, t)))
                        }),
                        onToggle: c,
                        children: (0,
                        z.jsx)(xS, {
                            disabled: e.props.disabled || !i.length,
                            sounds: UZ,
                            className: SJ.dropdown,
                            tooltipLabel: a,
                            children: a
                        })
                    })]
                })
            })
        }
        function NJ(e) {
            return e ? (0,
            z.jsx)(gu, {
                value: e.displayName
            }) : null
        }
        X.add("game-ui/menu/widgets/dropdown-field/dropdown-field.tsx", {
            get BoundEnumField() {
                return yJ
            },
            set BoundEnumField(e) {
                yJ = e
            },
            get BoundDropdownField() {
                return jJ
            },
            set BoundDropdownField(e) {
                jJ = e
            }
        });
        let wJ = {
            field: "field_G2v value-field_yJi",
            value: "value_kpD value_PW_",
            unset: "unset_Ksk",
            "clear-button": "clear-button_wAo secondary-button_Kvj",
            clearButton: "clear-button_wAo secondary-button_Kvj",
            icon: "icon_Y14",
            conflict: "conflict_Wvp",
            "conflict-group": "conflict-group_JaQ",
            conflictGroup: "conflict-group_JaQ",
            "conflict-group-title": "conflict-group-title_UYU",
            conflictGroupTitle: "conflict-group-title_UYU",
            "conflict-item": "conflict-item_r5c",
            conflictItem: "conflict-item_r5c",
            tooltip: "tooltip_ILS",
            "binding-hint": "binding-hint_LTZ",
            bindingHint: "binding-hint_LTZ"
        };
        X.add("game-ui/menu/widgets/input-binding-field/input-binding-field.module.scss", {
            get classes() {
                return wJ
            },
            set classes(e) {
                Object.assign(wJ, e)
            }
        });
        const OJ = wJ;
        let PJ = {
            hint: "hint_CzH",
            button: "button_yXv button_ehL"
        };
        X.add("game-ui/menu/widgets/input-binding-field/input-binding-hint-theme.module.scss", {
            get classes() {
                return PJ
            },
            set classes(e) {
                Object.assign(PJ, e)
            }
        });
        const LJ = PJ;
        function AJ(e) {
            const t = ZR(e.parent, e.path)
              , n = YM(Bl, t)
              , s = YM(Gl, t)
              , i = YM(Vl, t);
            return (0,
            z.jsx)(MJ, {
                ...e.props,
                id: e.path,
                label: (0,
                z.jsx)(gu, {
                    value: e.props.displayName
                }),
                onSelect: n,
                onUnset: e.props.value.canBeEmpty && e.props.value.binding.name ? s : void 0,
                onReset: e.props.value.isOriginal ? void 0 : i
            })
        }
        const MJ = ({value: e, conflicts: t, disabled: n, onSelect: s, onUnset: i, onReset: a, ...o})=>{
            const [r,l] = (0,
            Y.useState)(!1)
              , c = (0,
            Y.useMemo)((()=>({
                "Unset Binding": i,
                "Reset Binding": a
            })), [i, a])
              , u = Dm()
              , d = jT()
              , m = CT()
              , h = NT()
              , g = sl(Ll)
              , p = (0,
            Y.useMemo)((()=>t.filter((e=>e.isBuiltIn))), [t])
              , f = (0,
            Y.useMemo)((()=>t.filter((e=>!e.isBuiltIn))), [t])
              , x = g > 1
              , v = (i || a) && !u
              , _ = x && v ? 0 : x || v ? 1 : 2
              , b = n || !e.isRebindable
              , T = (0,
            Y.useMemo)((()=>(0,
            z.jsxs)(z.Fragment, {
                children: [!!p.length && (0,
                z.jsxs)("div", {
                    className: OJ.conflictGroup,
                    children: [(0,
                    z.jsx)("div", {
                        className: OJ.conflictGroupTitle,
                        children: e.isBuiltIn ? (0,
                        z.jsx)(_c.Options.BINDING_CONFLICT_BUILTIN_WITH_BUILTIN_TOOLTIP, {}) : (0,
                        z.jsx)(_c.Options.BINDING_CONFLICT_MOD_WITH_BUILTIN_TOOLTIP, {})
                    }), p.map(((e,t)=>(0,
                    z.jsxs)("div", {
                        className: Zu()(OJ.conflictItem, OJ.tooltip),
                        children: [(0,
                        z.jsx)("p", {
                            children: (0,
                            z.jsx)(_c.Options.INPUT_MAP, {
                                hash: e.optionGroup,
                                showIdOnFail: !0
                            })
                        }), (0,
                        z.jsx)("p", {
                            children: (0,
                            z.jsx)(_c.Options.OPTION, {
                                hash: e.title,
                                showIdOnFail: !0
                            })
                        })]
                    }, t)))]
                }), !e.isBuiltIn && !!f.length && (0,
                z.jsxs)("div", {
                    className: OJ.conflictGroup,
                    children: [(0,
                    z.jsx)("div", {
                        className: OJ.conflictGroupTitle,
                        children: (0,
                        z.jsx)(_c.Options.BINDING_CONFLICT_MOD_WITH_MOD_TOOLTIP, {})
                    }), f.map(((e,t)=>(0,
                    z.jsxs)("div", {
                        className: Zu()(OJ.conflictItem, OJ.tooltip),
                        children: [(0,
                        z.jsx)("p", {
                            children: (0,
                            z.jsx)(_c.Options.INPUT_MAP, {
                                hash: e.optionGroup,
                                showIdOnFail: !0
                            })
                        }), (0,
                        z.jsx)("p", {
                            children: (0,
                            z.jsx)(_c.Options.OPTION, {
                                hash: e.title,
                                showIdOnFail: !0
                            })
                        })]
                    }, t)))]
                })]
            })), [p, f, e.isBuiltIn]);
            return (0,
            z.jsx)(Mg, {
                actions: c,
                disabled: b,
                children: (0,
                z.jsx)(Ah, {
                    onFocusChange: l,
                    children: (0,
                    z.jsxs)(VZ, {
                        ...o,
                        disabled: n,
                        onClick: b ? void 0 : s,
                        children: [(0,
                        z.jsx)(UT, {
                            action: "Select",
                            active: !b && r,
                            theme: LJ
                        }), (e.isBuiltIn && !!(e.hasConflicts & $l.WithBuiltIn) || !e.isBuiltIn && !!e.hasConflicts) && (0,
                        z.jsx)(Eg, {
                            tooltip: T,
                            children: e.hasConflicts & $l.WithBuiltIn ? (0,
                            z.jsx)("img", {
                                className: OJ.icon,
                                src: "Media/Misc/Error.svg"
                            }) : (0,
                            z.jsx)("img", {
                                className: OJ.icon,
                                src: "Media/Misc/Warning.svg"
                            })
                        }), (0,
                        z.jsxs)("div", {
                            className: Zu()(OJ.field, !e.binding.name && OJ.unset, b && "disabled"),
                            children: [(0,
                            z.jsx)(Eg, {
                                disabled: n,
                                forceVisible: u && r,
                                tooltip: "" !== e.binding.name && (0,
                                z.jsxs)(z.Fragment, {
                                    children: [(0,
                                    z.jsx)("div", {
                                        style: {
                                            textAlign: "center"
                                        },
                                        children: (0,
                                        z.jsx)(Ap, {
                                            binding: e.binding,
                                            modifiers: e.modifiers,
                                            gamepadType: d,
                                            keyboardLayout: m,
                                            layoutMap: h
                                        })
                                    }), !e.isRebindable && (0,
                                    z.jsx)(_c.Options.CANNOT_BE_REBOUND, {}), !!e.hasConflicts && u && T]
                                }),
                                children: (0,
                                z.jsxs)(U_, {
                                    disableHint: !0,
                                    className: OJ.value,
                                    onSelect: s,
                                    onClick: Db,
                                    disabled: b,
                                    children: ["" !== e.binding.name && (0,
                                    z.jsx)(PT, {
                                        modifiers: e.modifiers,
                                        bindings: [e.binding],
                                        showName: ("Gamepad" === e.device || "Mouse" === e.device) && e.modifiers.length <= _,
                                        shortName: wp.FallbackToControl,
                                        theme: LJ,
                                        className: OJ.bindingHint
                                    }), "" === e.binding.name && (0,
                                    z.jsx)(_c.Options.INPUT_CONTROL_UNSET, {})]
                                })
                            }), !b && !u && null != i && (0,
                            z.jsx)(Eg, {
                                tooltip: (0,
                                z.jsx)(_c.Options.UNSET_BINDING_TOOLTIP, {}),
                                children: (0,
                                z.jsx)(tb, {
                                    disableHint: !0,
                                    tinted: !0,
                                    focusKey: Sg,
                                    src: "Media/Glyphs/Close.svg",
                                    className: OJ.clearButton,
                                    onSelect: i,
                                    onClick: Db
                                })
                            }), !b && !u && null != a && (0,
                            z.jsx)(Eg, {
                                tooltip: (0,
                                z.jsx)(_c.Options.RESET_BINDING_TOOLTIP, {}),
                                children: (0,
                                z.jsx)(tb, {
                                    disableHint: !0,
                                    tinted: !0,
                                    focusKey: Sg,
                                    src: "Media/Glyphs/ArrowCircular.svg",
                                    className: OJ.clearButton,
                                    onSelect: a,
                                    onClick: Db
                                })
                            })]
                        })]
                    })
                })
            })
        }
        ;
        X.add("game-ui/menu/widgets/input-binding-field/input-binding-field.tsx", {
            get BoundInputBindingField() {
                return AJ
            },
            set BoundInputBindingField(e) {
                AJ = e
            }
        });
        let RJ = {
            expandIcon: '"Media/Glyphs/ThickStrokeArrowDown.svg"',
            collapseIcon: '"Media/Glyphs/ThickStrokeArrowUp.svg"',
            section: "section_gUk",
            content: "content_owQ",
            expandable: "expandable_gK1",
            "title-bar": "title-bar_wU9",
            titleBar: "title-bar_wU9",
            title: "title_bwV",
            "toggle-button": "toggle-button_sQk",
            toggleButton: "toggle-button_sQk",
            "button-space": "button-space_Iht",
            buttonSpace: "button-space_Iht"
        };
        X.add("game-ui/common/section/section.module.scss", {
            get classes() {
                return RJ
            },
            set classes(e) {
                Object.assign(RJ, e)
            }
        });
        const kJ = RJ;
        function DJ(e) {
            return (0,
            Y.useMemo)((()=>({
                ...kJ,
                ...e
            })), [e])
        }
        X.add("game-ui/common/section/section-theme.tsx", {
            get useSectionTheme() {
                return DJ
            },
            set useSectionTheme(e) {
                DJ = e
            }
        });
        let FJ = {
            base: "base_BM7",
            enter: "enter_lhm",
            "exit-active": "exit-active_gO8",
            exitActive: "exit-active_gO8",
            "enter-active": "enter-active_kU5",
            enterActive: "enter-active_kU5",
            exit: "exit_MDH"
        };
        X.add("game-ui/common/section/themes/transition.module.scss", {
            get classes() {
                return FJ
            },
            set classes(e) {
                Object.assign(FJ, e)
            }
        });
        const UJ = FJ;
        let BJ = {
            "progress-container": "progress-container_aIu",
            progressContainer: "progress-container_aIu",
            "progress-label": "progress-label_dOe",
            progressLabel: "progress-label_dOe",
            "progress-circle": "progress-circle_kUT progress-circle_OLN",
            progressCircle: "progress-circle_kUT progress-circle_OLN",
            progress: "progress_Xe2 progress_mlv",
            complete: "complete_pGO",
            failure: "failure_D8R",
            waiting: "waiting_d9O"
        };
        X.add("game-ui/menu/widgets/progress.module.scss", {
            get classes() {
                return BJ
            },
            set classes(e) {
                Object.assign(BJ, e)
            }
        });
        const GJ = BJ;
        let VJ = {
            checkmark: "checkmark_avN",
            icon: "icon_uou",
            dependency: "dependency_kvS",
            "dependency-label": "dependency-label_H4z",
            dependencyLabel: "dependency-label_H4z",
            "dependency-children": "dependency-children_rpG",
            dependencyChildren: "dependency-children_rpG",
            "dependency-field": "dependency-field_HfG",
            dependencyField: "dependency-field_HfG",
            details: "details_G6M",
            row: "row_kQ3",
            "title-bar": "title-bar_CZv",
            titleBar: "title-bar_CZv",
            "button-space": "button-space_vdm",
            buttonSpace: "button-space_vdm",
            "has-children": "has-children_xUg",
            hasChildren: "has-children_xUg",
            "dependency-status": "dependency-status_V5W",
            dependencyStatus: "dependency-status_V5W",
            header: "header_C6q",
            hint: "hint_KKd"
        };
        X.add("game-ui/menu/widgets/modding/modding-toolchain-dependency.module.scss", {
            get classes() {
                return VJ
            },
            set classes(e) {
                Object.assign(VJ, e)
            }
        });
        const HJ = VJ
          , KJ = e=>{
            const {state: t, progress: n} = e;
            switch (t) {
            case El.Installing:
            case El.Downloading:
            case El.Removing:
            case El.Queued:
                return (0,
                z.jsxs)("div", {
                    className: Zu()(GJ.progressContainer, {
                        [GJ.waiting]: t === El.Queued
                    }),
                    children: [(0,
                    z.jsx)(Jk, {
                        progress: t !== El.Queued ? n : 100,
                        max: 100,
                        theme: GJ,
                        indeterminate: -1 === n && t !== El.Queued
                    }), -1 !== n && (0,
                    z.jsx)("div", {
                        className: GJ.progressLabel,
                        children: (0,
                        z.jsx)(Oc, {
                            value: n,
                            unit: vc.Percentage
                        })
                    })]
                });
            case El.Installed:
                return (0,
                z.jsx)("div", {
                    className: HJ.icon,
                    children: (0,
                    z.jsx)(Z_, {
                        className: HJ.checkmark,
                        src: "Media/Glyphs/Checkmark.svg"
                    })
                });
            case El.NotInstalled:
                return (0,
                z.jsx)("img", {
                    className: HJ.icon,
                    src: "Media/Misc/Error.svg"
                });
            case El.Outdated:
            case El.Unknown:
                return (0,
                z.jsx)("img", {
                    className: HJ.icon,
                    src: "Media/Misc/Warning.svg"
                })
            }
            return null
        }
        ;
        var WJ = e=>{
            const {children: t} = e
              , n = DJ(HJ)
              , s = !!t
              , [i,a] = (0,
            Y.useState)(!1)
              , [o,r] = (0,
            Y.useState)(!1)
              , l = (0,
            Y.useCallback)((()=>{
                r((e=>!e)),
                cp(lp.expandPanel)
            }
            ), []);
            return s ? (0,
            z.jsx)(Ip, {
                className: Zu()(n.section, n.expandable, n.expanded, HJ.dependencyField, {
                    [HJ.hasChildren]: s
                }),
                onFocusChange: a,
                children: (0,
                z.jsx)(Bg, {
                    expanded: o,
                    expandable: !0,
                    onAction: l,
                    children: (0,
                    z.jsxs)(np, {
                        debugName: "MAIN_" + e.id,
                        limits: Xu.Bounds,
                        children: [(0,
                        z.jsx)(zJ, {
                            ...e,
                            expanded: o,
                            focused: i,
                            toggleExpanded: l
                        }), (0,
                        z.jsx)(wS, {
                            in: o,
                            children: (0,
                            z.jsx)(NS, {
                                styles: UJ,
                                children: (0,
                                z.jsx)("div", {
                                    children: (0,
                                    z.jsx)("div", {
                                        className: Zu()(HJ.dependencyChildren, n.content, n.last, n.expandable),
                                        children: (0,
                                        z.jsx)(b0, {
                                            debugName: "CHILDREN_" + e.id,
                                            children: t
                                        })
                                    })
                                })
                            })
                        })]
                    })
                })
            }) : (0,
            z.jsx)(zJ, {
                focused: i,
                ...e
            })
        }
        ;
        const zJ = e=>{
            const {id: t, toggleExpanded: n, expanded: s, combined: i, displayName: a, value: o} = e
              , r = !!n
              , l = DJ(HJ)
              , c = (0,
            Y.useContext)(kZ)
              , u = (0,
            Y.useCallback)((()=>{
                "string" == typeof t && c.onOptionMouseEnter(t),
                cp(lp.hoverItem)
            }
            ), [t, c])
              , d = (0,
            Y.useCallback)((()=>{
                "string" == typeof t && c.onOptionMouseLeave(t)
            }
            ), [t, c]);
            Dm();
            return (0,
            z.jsx)(b0, {
                debugName: "HEADER_" + t,
                children: (0,
                z.jsx)(Sp, {
                    focusKey: i ? void 0 : t,
                    className: Zu()(l.header, r && l.expandable, l.first, (!r || !s) && l.last),
                    children: (0,
                    z.jsxs)("div", {
                        className: Zu()(l.titleBar, r && l.expandable),
                        onClick: r ? n : void 0,
                        onMouseEnter: u,
                        onMouseLeave: d,
                        children: [r && (0,
                        z.jsx)("div", {
                            className: l.buttonSpace
                        }), (0,
                        z.jsx)("div", {
                            className: l.title,
                            children: (0,
                            z.jsxs)("div", {
                                className: HJ.dependency,
                                children: [o.icon && (0,
                                z.jsx)("img", {
                                    src: o.icon
                                }), (0,
                                z.jsxs)("div", {
                                    className: HJ.dependencyLabel,
                                    children: [(0,
                                    z.jsx)("div", {
                                        children: (0,
                                        z.jsx)(gu, {
                                            value: a
                                        })
                                    }), (0,
                                    z.jsx)("small", {
                                        children: (0,
                                        z.jsx)(gu, {
                                            value: o.version
                                        })
                                    })]
                                }), (0,
                                z.jsxs)("div", {
                                    className: HJ.dependencyStatus,
                                    children: [(0,
                                    z.jsx)("small", {
                                        children: (0,
                                        z.jsx)(gu, {
                                            value: o.details
                                        })
                                    }), (0,
                                    z.jsx)(KJ, {
                                        ...o
                                    })]
                                })]
                            })
                        }), (0,
                        z.jsx)(UT, {
                            action: s ? "Collapse Group" : "Expand Group",
                            active: !e.disabled && e.focused,
                            className: HJ.hint
                        }), r && (0,
                        z.jsx)(Z_, {
                            src: s ? l.collapseIcon : l.expandIcon,
                            className: l.toggleButton
                        })]
                    })
                })
            })
        }
        ;
        var YJ = e=>{
            const t = ZR(e.parent, e.path);
            return (0,
            z.jsx)(WJ, {
                ...e.props,
                id: e.path,
                combined: e.children.some((e=>e.props.__Type === xl.ModdingToolchainDependency)),
                children: e.children.some((e=>!e.props.hidden)) && (0,
                z.jsx)(u0, {
                    parent: t,
                    data: e.children
                })
            })
        }
        ;
        X.add("game-ui/menu/widgets/modding/modding-toolchain-dependency.tsx", {
            get ModdingToolchainDependency() {
                return WJ
            },
            set ModdingToolchainDependency(e) {
                WJ = e
            },
            get BoundModdingToolchainDependency() {
                return YJ
            },
            set BoundModdingToolchainDependency(e) {
                YJ = e
            }
        });
        let $J = {
            "multiline-text": "multiline-text_INX",
            multilineText: "multiline-text_INX"
        };
        X.add("game-ui/menu/widgets/multiline-text/multiline-text.module.scss", {
            get classes() {
                return $J
            },
            set classes(e) {
                Object.assign($J, e)
            }
        });
        const qJ = $J;
        var XJ = e=>(0,
        z.jsxs)(Sp, {
            className: qJ.multilineText,
            children: [e.props.icon && (0,
            z.jsx)("img", {
                src: e.props.icon
            }), (0,
            z.jsx)(Cb, {
                children: (0,
                z.jsx)(gu, {
                    value: e.props.displayName
                })
            })]
        });
        X.add("game-ui/menu/widgets/multiline-text/multiline-text.tsx", {
            get BoundMultilineText() {
                return XJ
            },
            set BoundMultilineText(e) {
                XJ = e
            }
        });
        let QJ = {
            slider: "slider_fKm slider_pUS",
            range: "range_KXa range_iUN"
        };
        X.add("game-ui/menu/themes/slider.module.scss", {
            get classes() {
                return QJ
            },
            set classes(e) {
                Object.assign(QJ, e)
            }
        });
        const ZJ = QJ;
        let JJ = {
            value: "value_hdd",
            slider: "slider_KjX",
            hint: "hint_HoI"
        };
        X.add("game-ui/menu/widgets/slider-field/slider-field.module.scss", {
            get classes() {
                return JJ
            },
            set classes(e) {
                Object.assign(JJ, e)
            }
        });
        const e0 = JJ;
        function t0(e) {
            return (0,
            z.jsx)(s0, {
                ...e
            })
        }
        function n0(e) {
            return (0,
            z.jsx)(s0, {
                ...e
            })
        }
        const s0 = e=>{
            const t = (0,
            Y.useMemo)((()=>Object.values(vc).find((t=>t === e.props.unit))), [e.props.unit])
              , n = kA(e.props.step ?? 1)
              , s = e.props.scaleDragVolume ? LA : PA
              , [i,a] = (0,
            Y.useState)(e.props.value)
              , o = YM(RR, ZR(e.parent, e.path))
              , r = (0,
            Y.useCallback)((t=>{
                a(t),
                e.props.updateOnDragEnd || o(t)
            }
            ), [o, e.props.updateOnDragEnd])
              , l = (0,
            Y.useCallback)((()=>{
                e.props.updateOnDragEnd && o(i)
            }
            ), [i, o, e.props.updateOnDragEnd]);
            (0,
            Y.useEffect)((()=>{
                a(e.props.value)
            }
            ), [e.props.value]);
            const [c,u] = (0,
            Y.useState)(!1)
              , [d,m] = (0,
            Y.useState)(!1);
            return (0,
            z.jsx)(Ah, {
                onFocusChange: u,
                children: (0,
                z.jsxs)(VZ, {
                    ...e.props,
                    id: e.path,
                    label: (0,
                    z.jsx)(gu, {
                        value: e.props.displayName
                    }),
                    warning: e.props.warning,
                    children: [(0,
                    z.jsx)(UT, {
                        action: "Select",
                        active: !e.props.disabled && !d && c,
                        className: e0.hint
                    }), (0,
                    z.jsx)(UT, {
                        action: "Back",
                        active: !e.props.disabled && d && c,
                        className: e0.hint
                    }), (0,
                    z.jsx)("div", {
                        className: e0.value,
                        children: t !== vc.Custom ? (0,
                        z.jsx)(Oc, {
                            value: e.props.value,
                            unit: t
                        }) : (0,
                        z.jsx)(Pc, {
                            value: e.props.value,
                            unit: t,
                            signed: e.props.signed,
                            fractionDigits: e.props.fractionDigits,
                            separateThousands: e.props.separateThousands,
                            maxValueWithFraction: e.props.maxValueWithFraction,
                            unitFormat: lc("CustomFormat", ((t,n)=>uc(t, `Options.FORMAT[${e.path}]`, "{SIGN}{VALUE}", {
                                VALUE: n.VALUE,
                                SIGN: n.SIGN
                            }, !0)), (()=>!0))
                        })
                    }), (0,
                    z.jsx)(Op, {
                        onSelectedStateChanged: m,
                        children: (0,
                        z.jsx)(AA, {
                            value: i,
                            start: e.props.min,
                            end: e.props.max,
                            gamepadStep: e.props.step,
                            disabled: e.props.disabled,
                            valueTransformer: n,
                            sounds: s,
                            theme: ZJ,
                            className: e0.slider,
                            onChange: r,
                            onDragEnd: l
                        })
                    })]
                })
            })
        }
        ;
        X.add("game-ui/menu/widgets/slider-field/slider-field.tsx", {
            get BoundIntSliderField() {
                return t0
            },
            set BoundIntSliderField(e) {
                t0 = e
            },
            get BoundFloatSliderField() {
                return n0
            },
            set BoundFloatSliderField(e) {
                n0 = e
            }
        });
        let i0 = {
            "string-field": "string-field_qxi",
            stringField: "string-field_qxi",
            hint: "hint_nEs"
        };
        X.add("game-ui/menu/widgets/string-input-field/string-input-field.module.scss", {
            get classes() {
                return i0
            },
            set classes(e) {
                Object.assign(i0, e)
            }
        });
        const a0 = i0;
        var o0 = e=>{
            const t = YM(RR, ZR(e.parent, e.path))
              , n = (0,
            Y.useCallback)((e=>{
                t(e.target.value)
            }
            ), [t])
              , [s,i] = (0,
            Y.useState)(!1)
              , [a,o] = (0,
            Y.useState)(!1)
              , r = (0,
            Y.useCallback)((()=>{
                o(!1)
            }
            ), [])
              , l = (0,
            Y.useCallback)((()=>{
                o(!0)
            }
            ), [])
              , c = !e.props.disabled && s;
            return (0,
            z.jsx)(Ah, {
                onFocusChange: i,
                children: (0,
                z.jsxs)(VZ, {
                    ...e.props,
                    id: e.path,
                    label: (0,
                    z.jsx)(gu, {
                        value: e.props.displayName
                    }),
                    warning: e.props.warning,
                    children: [(0,
                    z.jsx)(UT, {
                        action: a ? "Back" : "Select",
                        active: c,
                        className: a0.hint
                    }), (0,
                    z.jsx)(oI, {
                        ...e.props,
                        onChange: n,
                        className: Zu()(a0.stringField, e.props.disabled && "disabled"),
                        value: e.props.value,
                        multiline: e.props.multiline || void 0,
                        maxLength: e.props.maxLength || void 0,
                        onBlur: r,
                        onFocus: l
                    })]
                })
            })
        }
        ;
        X.add("game-ui/menu/widgets/string-input-field/string-input-field.tsx", {
            get BoundStringInputField() {
                return o0
            },
            set BoundStringInputField(e) {
                o0 = e
            }
        });
        let r0 = {
            toggle: "toggle_th_",
            "radio-toggle": "radio-toggle_M9z toggle_H7r item-mouse-states_Fmi",
            radioToggle: "radio-toggle_M9z toggle_H7r item-mouse-states_Fmi",
            bullet: "bullet_TAG bullet_rDK",
            hint: "hint_hz7"
        };
        X.add("game-ui/menu/widgets/toggle-field/toggle-field.module.scss", {
            get classes() {
                return r0
            },
            set classes(e) {
                Object.assign(r0, e)
            }
        });
        const l0 = r0;
        function c0(e) {
            const t = YM(RR, ZR(e.parent, e.path))
              , n = (0,
            Y.useCallback)((()=>{
                cp(lp.selectToggle),
                t(!e.props.value)
            }
            ), [t, e.props.value])
              , s = Dm()
              , [i,a] = (0,
            Y.useState)(!1);
            return (0,
            z.jsx)(Ah, {
                onFocusChange: a,
                children: (0,
                z.jsxs)(VZ, {
                    ...e.props,
                    id: e.path,
                    label: (0,
                    z.jsx)(gu, {
                        value: e.props.displayName
                    }),
                    warning: e.props.warning,
                    onClick: n,
                    children: [(0,
                    z.jsx)(UT, {
                        action: "Select",
                        active: !e.props.disabled && s && i,
                        className: l0.hint
                    }), (0,
                    z.jsx)(Hb, {
                        checked: e.props.value,
                        className: l0.toggle,
                        onChange: t,
                        disabled: e.props.disabled
                    })]
                })
            })
        }
        X.add("game-ui/menu/widgets/toggle-field/toggle-field.tsx", {
            get BoundToggleField() {
                return c0
            },
            set BoundToggleField(e) {
                c0 = e
            }
        });
        var u0 = ({parent: e, data: t})=>{
            const n = (0,
            Y.useMemo)((()=>{
                let n, s = -1;
                return t.reduce(((t,i,a)=>{
                    if (i.props.__Type === NR.Label) {
                        const o = i.props.level
                          , r = e + ".breadcrumbs." + a;
                        0 === o ? (n = {
                            ...i,
                            path: r,
                            props: {
                                __Type: NR.Breadcrumbs
                            },
                            children: [{
                                ...i,
                                path: r + "." + a
                            }]
                        },
                        t.push(n)) : n && o === s ? (n = {
                            ...n,
                            path: r,
                            children: n.children.filter((e=>e.props.level !== o)).concat(i)
                        },
                        t.push(n)) : n?.children.push({
                            ...i,
                            path: r + "." + a
                        }),
                        s = o
                    } else
                        t.push(i);
                    return t
                }
                ), [])
            }
            ), [t, e]);
            return (0,
            z.jsx)(hD, {
                parent: e,
                components: d0,
                data: n
            })
        }
          , d0 = {
            [NR.Button]: pJ,
            [NR.ButtonRow]: xJ,
            [NR.StringInputField]: o0,
            [NR.MultilineText]: XJ,
            [xl.ButtonWithConfirmation]: fJ,
            [NR.FloatSliderField]: n0,
            [NR.IntSliderField]: t0,
            [NR.Divider]: eJ,
            [NR.Label]: oJ,
            [NR.Breadcrumbs]: uJ,
            [NR.ToggleField]: c0,
            [NR.EnumField]: yJ,
            [xl.InputBindingField]: AJ,
            [xl.DropdownField]: jJ,
            [NR.ValueField]: BZ,
            [NR.LocalizedValueField]: GZ,
            [xl.ScreenResolutionDropdownField]: jJ,
            [xl.ModdingToolchainDependency]: YJ,
            [xl.DirectoryPickerField]: WZ
        };
        X.add("game-ui/menu/widgets/option-widget-renderer.tsx", {
            get OptionWidgetListRenderer() {
                return u0
            },
            set OptionWidgetListRenderer(e) {
                u0 = e
            },
            get optionsWidgetComponents() {
                return d0
            },
            set optionsWidgetComponents(e) {
                d0 = e
            }
        });
        let m0 = {
            "option-page-header": "option-page-header_fSe",
            optionPageHeader: "option-page-header_fSe",
            "option-page-sub-header": "option-page-sub-header_FIo",
            optionPageSubHeader: "option-page-sub-header_FIo",
            "sections-tabs": "sections-tabs_EK2",
            sectionsTabs: "sections-tabs_EK2",
            shrink: "shrink_GWC",
            tab: "tab_P7S",
            first: "first_vLK",
            last: "last_BSJ",
            "warning-icon": "warning-icon_Y_M",
            warningIcon: "warning-icon_Y_M"
        };
        X.add("game-ui/menu/components/options-screen/option-page/option-page-header.module.scss", {
            get classes() {
                return m0
            },
            set classes(e) {
                Object.assign(m0, e)
            }
        });
        const h0 = m0;
        var g0 = ({sections: e, subHeader: t, selectedId: n, className: s, onSelect: i})=>(0,
        z.jsxs)("div", {
            className: Zu()(h0.optionPageHeader, s),
            children: [e.length >= 2 ? (0,
            z.jsx)("div", {
                className: Zu()(h0.sectionsTabs, h0.shrink),
                children: (0,
                z.jsx)(WH, {
                    action: "Switch Tab",
                    children: e.map(((t,s)=>(0,
                    z.jsx)(p0, {
                        section: t,
                        selected: n === t.id,
                        first: 0 === s,
                        last: s === e.length - 1,
                        onSelect: i
                    }, s)))
                })
            }) : (0,
            z.jsx)("div", {}), !!t && (0,
            z.jsx)("div", {
                className: h0.optionPageSubHeader,
                children: t
            })]
        });
        const p0 = ({section: e, selected: t, first: n, last: s, onSelect: i})=>{
            const a = kE(yE.PS, (0,
            z.jsx)(_c.Options.TAB_PS, {
                hash: e.id
            }), (0,
            z.jsx)(_c.Options.TAB, {
                hash: e.id
            }))
              , o = (0,
            Y.useCallback)((()=>i(e.id)), [i, e.id]);
            return (0,
            z.jsx)(Eg, {
                tooltip: a,
                children: (0,
                z.jsxs)(U_, {
                    focusKey: Sg,
                    selected: t,
                    className: Zu()(h0.tab, h0.shrink, n && h0.first, s && h0.last),
                    onSelect: o,
                    children: [e.warning && (0,
                    z.jsx)("img", {
                        className: h0.warningIcon,
                        src: "Media/Misc/Warning.svg"
                    }), a]
                })
            })
        }
        ;
        X.add("game-ui/menu/components/options-screen/option-page/option-page-header.tsx", {
            get OptionPageHeader() {
                return g0
            },
            set OptionPageHeader(e) {
                g0 = e
            }
        });
        let f0 = {
            "option-page": "option-page_CW8",
            optionPage: "option-page_CW8",
            "main-column": "main-column_D0A",
            mainColumn: "main-column_D0A",
            scrollable: "scrollable_Ptf",
            "info-column": "info-column_uQ0",
            infoColumn: "info-column_uQ0",
            "info-title": "info-title_a3p",
            infoTitle: "info-title_a3p",
            "info-description": "info-description_wwd",
            infoDescription: "info-description_wwd"
        };
        X.add("game-ui/menu/components/options-screen/option-page/option-page.module.scss", {
            get classes() {
                return f0
            },
            set classes(e) {
                Object.assign(f0, e)
            }
        });
        const x0 = f0
          , v0 = (e,t)=>{
            if (e) {
                for (let n = 0; n < t.length; n++)
                    if (t[n].path === e)
                        return t[n];
                for (let n = 0; n < t.length; n++)
                    if (t[n].children.length) {
                        const s = v0(e, t[n].children);
                        if (s)
                            return s
                    }
            }
        }
        ;
        var _0 = ({page: e, selectedSectionId: t, className: n, isSearch: s, subHeader: i, onSelectSection: a})=>{
            const o = e.sections.find((e=>e.id === t))
              , [r,l] = (0,
            Y.useState)(!1)
              , [c,u] = (0,
            Y.useState)(null)
              , [d,m] = (0,
            Y.useState)(null)
              , h = (0,
            Y.useCallback)((e=>{
                e && u(e)
            }
            ), [])
              , g = Dm()
              , [p,f] = (0,
            Y.useState)(null)
              , x = g && r ? d ?? c : p
              , v = (0,
            Y.useMemo)((()=>({
                onOptionMouseEnter: f,
                onOptionMouseLeave: e=>f((t=>t === e ? null : t)),
                onFocusSet: m,
                onFocusReset: e=>m((t=>t === e ? null : t))
            })), [])
              , _ = QR("options")
              , b = sl(Sl)
              , T = v0(x, b)
              , E = e.sections.filter((e=>e.isVisible));
            (0,
            Y.useEffect)((()=>()=>{
                ec(e.id)
            }
            ), [e.id]);
            const I = "string" == typeof x ? x : null;
            return (0,
            z.jsx)(Ah, {
                onFocusChange: l,
                children: (0,
                z.jsx)("div", {
                    className: Zu()(x0.optionPage, n),
                    children: (0,
                    z.jsxs)(np, {
                        children: [(0,
                        z.jsx)("div", {
                            className: x0.mainColumn,
                            children: (0,
                            z.jsxs)(Zg, {
                                activation: qu.Always,
                                limits: Xu.Bounds,
                                focused: c,
                                direction: kg.Vertical,
                                onChange: h,
                                onRefocus: Jg,
                                allowLooping: !0,
                                children: [!s && (i || E.length > 1) && (0,
                                z.jsx)(Ah, {
                                    children: (0,
                                    z.jsx)(g0, {
                                        sections: E,
                                        selectedId: t,
                                        className: x0.header,
                                        onSelect: a,
                                        subHeader: i
                                    })
                                }), s && !b.length ? (0,
                                z.jsx)(sJ, {
                                    children: (0,
                                    z.jsx)("div", {
                                        children: (0,
                                        z.jsx)(_c.Options.SEARCH, {
                                            hash: "nothing found"
                                        })
                                    })
                                }) : (0,
                                z.jsx)(mb, {
                                    className: x0.scrollable,
                                    children: null != o && (0,
                                    z.jsx)(kZ.Provider, {
                                        value: v,
                                        children: (0,
                                        z.jsx)(u0, {
                                            parent: _,
                                            data: b
                                        })
                                    })
                                }, t)]
                            })
                        }), (0,
                        z.jsx)("div", {
                            className: x0.infoColumn,
                            children: I && (0,
                            z.jsxs)(z.Fragment, {
                                children: [(0,
                                z.jsx)("div", {
                                    className: x0.infoTitle,
                                    children: T && "displayName"in T.props && T.props.displayName ? (0,
                                    z.jsx)(gu, {
                                        value: T.props.displayName
                                    }) : (0,
                                    z.jsx)(_c.Options.OPTION, {
                                        hash: I
                                    })
                                }), (0,
                                z.jsx)("div", {
                                    className: x0.infoDescription,
                                    children: (0,
                                    z.jsx)(Cb, {
                                        focusKey: Sg,
                                        children: T && "description"in T.props && T.props.description ? (0,
                                        z.jsx)(gu, {
                                            value: T.props.description
                                        }) : (0,
                                        z.jsx)(_c.Options.OPTION_DESCRIPTION, {
                                            hash: I
                                        })
                                    })
                                })]
                            })
                        })]
                    })
                })
            })
        }
          , b0 = ({focusKey: e, direction: t, children: n, debugName: s="OptionPageFocusedKeyOverride"})=>{
            const i = (0,
            Y.useContext)(kZ)
              , [a,o] = (0,
            Y.useState)(null)
              , r = (0,
            Y.useCallback)((e=>{
                "string" == typeof e && (o(e),
                i.onFocusSet(e))
            }
            ), [i])
              , l = (0,
            Y.useCallback)((e=>{
                e || "string" != typeof a || (i.onFocusReset(a),
                o(null))
            }
            ), [a, i]);
            return (0,
            z.jsx)(Ah, {
                onFocusChange: l,
                children: (0,
                z.jsx)(np, {
                    debugName: s,
                    focusKey: e,
                    onChange: r,
                    direction: t,
                    limits: Xu.Bounds,
                    children: n
                })
            })
        }
        ;
        X.add("game-ui/menu/components/options-screen/option-page/option-page.tsx", {
            get OptionPage() {
                return _0
            },
            set OptionPage(e) {
                _0 = e
            },
            get OptionPageFocusedKeyOverride() {
                return b0
            },
            set OptionPageFocusedKeyOverride(e) {
                b0 = e
            }
        });
        let T0 = {
            "search-input": "search-input_Z06",
            searchInput: "search-input_Z06",
            hidden: "hidden_LPB",
            "search-input-clear": "search-input-clear_VxJ",
            searchInputClear: "search-input-clear_VxJ",
            hint: "hint_Oz8",
            "clear-input-hint": "clear-input-hint_m6F",
            clearInputHint: "clear-input-hint_m6F"
        };
        X.add("game-ui/menu/components/options-screen/options-search.module.scss", {
            get classes() {
                return T0
            },
            set classes(e) {
                Object.assign(T0, e)
            }
        });
        const E0 = T0;
        var I0 = new Ig("SEARCH_KEY")
          , S0 = YT({
            Clear: "Media/Glyphs/Clear.svg"
        })
          , y0 = "All results"
          , j0 = ()=>{
            const e = sc()
              , t = sl(Il)
              , [n,s] = (0,
            Y.useState)("")
              , [i,a] = (0,
            Y.useState)()
              , [o,r] = (0,
            Y.useState)((()=>new Set))
              , l = (0,
            Y.useCallback)((e=>{
                e.length < 2 && a(void 0),
                s(e)
            }
            ), []);
            return (0,
            Y.useEffect)((()=>{
                const s = []
                  , a = new Set;
                if (n.length >= 2) {
                    const o = n.trim().toLowerCase();
                    t.forEach((t=>t.sections.forEach((n=>{
                        n.items.forEach((n=>{
                            if (!n.searchHidden) {
                                const r = pu(e, n.displayName).toLowerCase();
                                if (r?.includes(o))
                                    return i && t.id !== i || s.push(n.id),
                                    void a.add(t.id)
                            }
                        }
                        ))
                    }
                    )))),
                    Kl(s, n),
                    r(a)
                } else
                    Kl([]),
                    r(a)
            }
            ), [t, n, i, e]),
            {
                setSearchQuery: l,
                searchQuery: n,
                matchingPages: o,
                focusedPage: i,
                setFocusedPage: a,
                isSearching: n.length >= 2
            }
        }
          , C0 = ({search: e})=>{
            const {isSearching: t, focusedPage: n, setFocusedPage: s, matchingPages: i} = e;
            let a = null;
            if (t && (i.size > 1 || n && !i.has(n) && i.size > 0)) {
                const e = {
                    id: y0,
                    sections: []
                };
                a = (0,
                z.jsx)(k0, {
                    item: e,
                    selected: !n,
                    beta: e.beta,
                    onSelect: ()=>{
                        n && s(void 0)
                    }
                }, e.id)
            }
            return a
        }
          , N0 = Y.forwardRef((function({search: e, focusKey: t, onBack: n=(()=>{}
        ), hidden: s}, i) {
            const {searchQuery: a, setSearchQuery: o} = e
              , r = BH()
              , l = (0,
            Y.useCallback)((e=>{
                o(e)
            }
            ), [o])
              , [c,u] = (0,
            Y.useState)(!1)
              , [d,m] = (0,
            Y.useState)(!1)
              , h = (0,
            Y.useCallback)((()=>{
                m(!1)
            }
            ), [])
              , g = (0,
            Y.useCallback)((()=>{
                m(!0)
            }
            ), []);
            return (0,
            z.jsx)(z.Fragment, {
                children: (0,
                z.jsx)(Ah, {
                    onFocusChange: u,
                    children: (0,
                    z.jsx)(ap, {
                        focusKey: t,
                        children: (0,
                        z.jsxs)(np, {
                            direction: kg.Horizontal,
                            children: [(0,
                            z.jsx)(UT, {
                                action: d ? "Close" : "Select",
                                active: c,
                                showLabel: !0,
                                className: E0.hint
                            }), (0,
                            z.jsx)(oI, {
                                value: a,
                                onChange: e=>o(e.target.value),
                                onBack: ()=>n(),
                                vkTitle: (0,
                                z.jsx)(_c.VirtualKeyboard.TITLE, {
                                    hash: "Search"
                                }),
                                placeholder: (0,
                                z.jsx)(_c.Options.SEARCH, {
                                    hash: "input placeholder"
                                }),
                                className: Zu()(r.input, E0.searchInput, s && E0.hidden),
                                ref: i,
                                onBlur: h,
                                onFocus: g
                            }), (0,
                            z.jsx)(UT, {
                                action: "Clear Search",
                                active: c && e.isSearching,
                                className: Zu()(E0.hint, E0.clearInputHint)
                            }), a && (0,
                            z.jsx)(tb, {
                                tinted: !0,
                                src: S0.Clear,
                                className: E0.searchInputClear,
                                onSelect: ()=>l("")
                            })]
                        })
                    })
                })
            })
        }
        ));
        X.add("game-ui/menu/components/options-screen/options-search.tsx", {
            get SEARCH_KEY() {
                return I0
            },
            set SEARCH_KEY(e) {
                I0 = e
            },
            get images() {
                return S0
            },
            set images(e) {
                S0 = e
            },
            get allResultsId() {
                return y0
            },
            set allResultsId(e) {
                y0 = e
            },
            get useSearch() {
                return j0
            },
            set useSearch(e) {
                j0 = e
            },
            get AllResultsMenuItem() {
                return C0
            },
            set AllResultsMenuItem(e) {
                C0 = e
            },
            get OptionsSearch() {
                return N0
            },
            set OptionsSearch(e) {
                N0 = e
            }
        });
        let w0 = {
            content: "content_Mtn",
            menu: "menu_hb1 child-opacity-transition_nkS",
            scrollable: "scrollable_Fma",
            item: "item_pq7",
            primary: "primary_Q54",
            detail: "detail_eTp child-opacity-transition_nkS",
            "option-section": "option-section_VzQ",
            optionSection: "option-section_VzQ",
            "advanced-toggle": "advanced-toggle_fyX",
            advancedToggle: "advanced-toggle_fyX",
            "advanced-toggle-checked": "advanced-toggle-checked_FFb",
            advancedToggleChecked: "advanced-toggle-checked_FFb",
            "menu-item-left": "menu-item-left_g1u",
            menuItemLeft: "menu-item-left_g1u",
            "menu-item-right": "menu-item-right_vNX",
            menuItemRight: "menu-item-right_vNX",
            "warning-icon": "warning-icon_q2S",
            warningIcon: "warning-icon_q2S"
        };
        X.add("game-ui/menu/components/options-screen/options-screen.module.scss", {
            get classes() {
                return w0
            },
            set classes(e) {
                Object.assign(w0, e)
            }
        });
        const O0 = w0
          , P0 = new Ig("MENU_KEY")
          , L0 = new Ig("CONTENT_KEY");
        let A0 = !1;
        var M0 = Y.forwardRef((function({focusKey: e, className: t, onClose: n}, s) {
            const i = sl(Il)
              , a = sl(yl)
              , o = i.find((e=>e.id === a))
              , r = sl(jl)
              , [l,c] = (0,
            Y.useState)(A0)
              , {translate: u} = sc()
              , d = j0()
              , {isSearching: m, setSearchQuery: h, focusedPage: g, setFocusedPage: p, matchingPages: f} = d
              , [x,v] = (0,
            Y.useState)(P0)
              , [_,b] = (0,
            Y.useState)(!1)
              , [T,E] = (0,
            Y.useState)()
              , I = (0,
            Y.useMemo)((()=>({
                setFocusedKey: ()=>{}
            })), [])
              , S = (0,
            Y.useCallback)((()=>{
                I.setFocusedKey(VK),
                v(L0)
            }
            ), [I])
              , y = (0,
            Y.useCallback)((()=>{
                I.setFocusedKey(VK),
                v(P0)
            }
            ), [I])
              , j = (0,
            Y.useCallback)((()=>{
                T === P0 ? y() : S()
            }
            ), [T, y, S])
              , C = (0,
            Y.useCallback)((()=>{
                h(""),
                n()
            }
            ), [n, h])
              , N = (0,
            Y.useCallback)(((e,t="")=>{
                if (m && e === y0)
                    return void p(void 0);
                const n = i.find((t=>t.id === e))
                  , s = t || null != n && n.sections.length > 0 ? n?.sections[0]?.id : null;
                n && (m ? p(n.id) : s && g !== n.id && Hl(n.id, s, A0))
            }
            ), [g, m, i, p])
              , w = (0,
            Y.useCallback)((e=>{
                if (o) {
                    const t = o.sections.find((t=>t.id === e));
                    t && (Hl(o.id, t.id, A0),
                    S())
                }
            }
            ), [S, o])
              , O = bp(N)
              , P = (0,
            Y.useCallback)((e=>{
                r && (c(e),
                A0 = e,
                w(r))
            }
            ), [w, r])
              , L = (0,
            Y.useMemo)((()=>null != o ? o.sections.filter((e=>e.isVisible)).map((e=>e.id)) : []), [o])
              , A = (0,
            Y.useMemo)((()=>!!o?.sections.some((e=>e.items.some((e=>e.isAdvanced && e.isVisible))))), [o])
              , M = i.filter((e=>(!m || f.has(e.id) || g === e.id) && e.builtIn))
              , R = i.filter((e=>(!m || f.has(e.id) || g === e.id) && !e.builtIn)).sort(((e,t)=>u(`Options.SECTION[${e.id}]`)?.localeCompare(u(`Options.SECTION[${t.id}]`) || "") || 1))
              , k = Dm()
              , D = (0,
            Y.useMemo)((()=>({
                [l ? "Hide Advanced" : "Show Advanced"]: ()=>P(!l)
            })), [P, l])
              , F = (0,
            Y.useRef)(null)
              , U = (0,
            Y.useMemo)((()=>({
                "Search Options": ()=>{
                    document.activeElement !== F.current ? (E(x),
                    F.current?.focus(),
                    b(!0),
                    I.setFocusedKey(I0)) : (F.current?.blur(),
                    b(!1),
                    j())
                }
            })), [j, x, I])
              , B = (0,
            Y.useMemo)((()=>({
                "Clear Search": ()=>{
                    F.current?.blur(),
                    b(!1),
                    h(""),
                    j()
                }
            })), [j, h])
              , G = (0,
            Y.useCallback)((e=>{
                b(e === I0)
            }
            ), [])
              , V = (0,
            Y.useCallback)((()=>{
                b(!1),
                j()
            }
            ), [j])
              , H = (0,
            Y.useMemo)((()=>({
                "Switch Option Section": e=>{
                    let t = M.findIndex((e=>e.id === a));
                    if (-1 === t) {
                        if (t = R.findIndex((e=>e.id === a)),
                        -1 === t)
                            return;
                        t += M.length
                    }
                    const n = M.length + R.length;
                    t = (t + n + e) % n,
                    t < M.length ? N(M[t].id) : N(R[t - M.length].id),
                    S()
                }
            })), [M, R, N, S, a]);
            return (0,
            z.jsx)(QZ, {
                focusKey: e,
                children: (0,
                z.jsx)(Mg, {
                    actions: H,
                    disabled: !k || _ || M.length + R.length <= 1,
                    children: (0,
                    z.jsx)(Mg, {
                        actions: U,
                        disabled: !k || _,
                        children: (0,
                        z.jsx)(Mg, {
                            actions: B,
                            disabled: !k || !m,
                            children: (0,
                            z.jsx)(KK.Provider, {
                                value: I,
                                children: (0,
                                z.jsx)(WK, {
                                    ref: s,
                                    focusKey: e,
                                    title: (0,
                                    z.jsx)(_c.Options.SCREEN_TITLE, {}),
                                    className: t,
                                    onClose: C,
                                    onFocusChanged: G,
                                    header: (0,
                                    z.jsx)(N0, {
                                        search: d,
                                        focusKey: !k || _ ? I0 : Sg,
                                        ref: F,
                                        onBack: V,
                                        hidden: k && !_ && !m
                                    }),
                                    children: (0,
                                    z.jsx)("div", {
                                        className: O0.content,
                                        children: (0,
                                        z.jsx)(AZ, {
                                            tabs: m ? [] : L,
                                            selectedTab: r,
                                            onSelect: w,
                                            children: (0,
                                            z.jsxs)(np, {
                                                forceFocus: x,
                                                direction: kg.Horizontal,
                                                onChange: v,
                                                onRefocus: ()=>x,
                                                children: [(0,
                                                z.jsx)(Ip, {
                                                    className: O0.menu,
                                                    children: (0,
                                                    z.jsx)(mb, {
                                                        className: O0.scrollable,
                                                        children: (0,
                                                        z.jsxs)(Zg, {
                                                            focusKey: P0,
                                                            focused: m ? g || y0 : a,
                                                            allowLooping: !0,
                                                            direction: kg.Vertical,
                                                            onChange: O,
                                                            children: [(0,
                                                            z.jsx)(C0, {
                                                                search: d
                                                            }), M.map((e=>(0,
                                                            z.jsx)(k0, {
                                                                item: e,
                                                                beta: e.beta,
                                                                warning: e.warning && !m,
                                                                selected: g === e.id || !m && a === e.id || M.length + R.length === 1,
                                                                onSelect: N
                                                            }, e.id))), !(!M.length || !R.length) && (0,
                                                            z.jsx)(eJ, {}), R.map((e=>(0,
                                                            z.jsx)(k0, {
                                                                item: e,
                                                                beta: e.beta,
                                                                warning: e.warning && !m,
                                                                selected: g === e.id || !m && a === e.id || M.length + R.length === 1,
                                                                onSelect: N
                                                            }, e.id + "mod")))]
                                                        })
                                                    })
                                                }), (0,
                                                z.jsx)(Ip, {
                                                    className: O0.detail,
                                                    children: (0,
                                                    z.jsx)(ap, {
                                                        focusKey: L0,
                                                        children: null != o && (0,
                                                        z.jsx)(Mg, {
                                                            actions: D,
                                                            disabled: !A || m,
                                                            children: (0,
                                                            z.jsx)(_0, {
                                                                page: o,
                                                                selectedSectionId: r,
                                                                onSelectSection: w,
                                                                className: O0.optionSection,
                                                                isSearch: m,
                                                                subHeader: !k && A && (0,
                                                                z.jsx)(R0, {
                                                                    value: l,
                                                                    onChange: P
                                                                })
                                                            }, a)
                                                        })
                                                    })
                                                })]
                                            })
                                        })
                                    })
                                })
                            })
                        })
                    })
                })
            })
        }
        ));
        const R0 = ({value: e, onChange: t})=>{
            const n = (0,
            Y.useCallback)((()=>t(!e)), [t, e]);
            return (0,
            z.jsx)(U_, {
                className: Zu()(O0.advancedToggle, e && O0.advancedToggleChecked),
                onSelect: n,
                children: (0,
                z.jsx)(_c.Options.SEARCH, {
                    hash: e ? "hide advanced" : "show advanced"
                })
            })
        }
        ;
        var k0 = ({item: e, selected: t, suffix: n, beta: s, warning: i, onSelect: a})=>{
            const o = (0,
            Y.useCallback)((()=>a(e.id)), [e.id, a])
              , r = Dm();
            return (0,
            z.jsxs)(U_, {
                disableHint: !0,
                focusKey: e.id,
                selected: t,
                className: Zu()(O0.item, !r && O0.primary),
                onSelect: o,
                children: [(0,
                z.jsxs)("div", {
                    className: O0.menuItemLeft,
                    children: [(0,
                    z.jsx)("span", {
                        children: (0,
                        z.jsx)(_c.Options.SECTION, {
                            hash: e.id,
                            showIdOnFail: !0
                        })
                    }), n && (0,
                    z.jsx)("span", {
                        children: n
                    })]
                }), (s || i) && (0,
                z.jsxs)("div", {
                    className: O0.menuItemRight,
                    children: [s && (0,
                    z.jsx)(yZ, {}), i && (0,
                    z.jsx)("img", {
                        className: O0.warningIcon,
                        src: "Media/Misc/Warning.svg"
                    })]
                })]
            })
        }
        ;
        X.add("game-ui/menu/components/options-screen/options-screen.tsx", {
            get OptionsScreen() {
                return M0
            },
            set OptionsScreen(e) {
                M0 = e
            },
            get MenuItem() {
                return k0
            },
            set MenuItem(e) {
                k0 = e
            }
        });
        let D0 = {
            base: "base_KL3",
            enter: "enter_VtK",
            "exit-active": "exit-active_ZDb",
            exitActive: "exit-active_ZDb",
            "enter-active": "enter-active_VOn",
            enterActive: "enter-active_VOn",
            exit: "exit_qAg"
        };
        X.add("game-ui/menu/transitions/shrink-fade.module.scss", {
            get classes() {
                return D0
            },
            set classes(e) {
                Object.assign(D0, e)
            }
        });
        const F0 = D0;
        let U0 = {
            "pause-menu": "pause-menu_uzz menu-theme_k91",
            pauseMenu: "pause-menu_uzz menu-theme_k91",
            "content-container": "content-container_Ake",
            contentContainer: "content-container_Ake",
            content: "content_X6U",
            "action-hints": "action-hints_o79 child-opacity-transition_nkS",
            actionHints: "action-hints_o79 child-opacity-transition_nkS",
            version: "version_Vtb"
        };
        X.add("game-ui/menu/components/pause-menu/pause-menu.module.scss", {
            get classes() {
                return U0
            },
            set classes(e) {
                Object.assign(U0, e)
            }
        });
        const B0 = U0;
        var G0 = ({className: e, children: t})=>{
            mp(kK.value !== RK.Loading ? dp : void 0);
            const [n,s] = (0,
            Y.useState)(!1)
              , i = Dm()
              , a = sl(qA);
            return Wp(!n),
            zp(!n),
            (0,
            z.jsx)(Ah, {
                onFocusChange: s,
                children: (0,
                z.jsx)(Np, {
                    children: (0,
                    z.jsx)(mh, {
                        styles: F0,
                        children: (0,
                        z.jsxs)("div", {
                            className: Zu()(B0.pauseMenu, e),
                            children: [(0,
                            z.jsxs)("div", {
                                className: B0.contentContainer,
                                children: [(0,
                                z.jsx)("div", {
                                    className: B0.content,
                                    children: t
                                }), i && (0,
                                z.jsx)(IT, {
                                    className: B0.actionHints
                                })]
                            }), (0,
                            z.jsx)("div", {
                                className: B0.version,
                                children: a
                            })]
                        })
                    })
                })
            })
        }
        ;
        X.add("game-ui/menu/components/pause-menu/pause-menu.tsx", {
            get PauseMenu() {
                return G0
            },
            set PauseMenu(e) {
                G0 = e
            }
        });
        var V0 = e=>(0,
        z.jsx)(ud, {
            children: e.children
        });
        X.add("game-ui/modding/modding-hook.tsx", {
            get ModdingHook() {
                return V0
            },
            set ModdingHook(e) {
                V0 = e
            }
        });
        const H0 = "editorHierarchy";
        var K0, W0;
        !function(e) {
            e[e.None = 0] = "None",
            e[e.Map = 1] = "Map",
            e[e.Climate = 2] = "Climate",
            e[e.Water = 3] = "Water",
            e[e.Resources = 4] = "Resources",
            e[e.ObjectContainer = 5] = "ObjectContainer",
            e[e.Object = 6] = "Object",
            e[e.SubMesh = 7] = "SubMesh"
        }(K0 || (K0 = {})),
        function(e) {
            e[e.Default = 0] = "Default",
            e[e.FirstPerson = 1] = "FirstPerson",
            e[e.Orbit = 2] = "Orbit"
        }(W0 || (W0 = {}));
        var z0 = $r(H0, "width")
          , Y0 = $r(H0, "totalCount")
          , $0 = $r(H0, "selectedId")
          , q0 = $r(H0, "viewport")
          , X0 = el(H0, "setWidth")
          , Q0 = el(H0, "setViewportRange")
          , Z0 = el(H0, "setSelectedId")
          , J0 = el(H0, "setExpanded")
          , e1 = el(H0, "bulldoze")
          , t1 = el(H0, "save")
          , n1 = $r(H0, "cameraMode")
          , s1 = el(H0, "toggleCameraMode")
          , i1 = $r("editorTutorials", "tutorialsEnabled")
          , a1 = Jr("editorTutorials", "toggleTutorials");
        function o1(e, t) {
            return e.type === t.type && Ur(e.entity, t.entity) && e.subIndex === t.subIndex
        }
        X.add("game-ui/editor/data-binding/editor-hierarchy-bindings.ts", {
            get ItemType() {
                return K0
            },
            set ItemType(e) {
                K0 = e
            },
            get EditorCameraMode() {
                return W0
            },
            set EditorCameraMode(e) {
                W0 = e
            },
            get hierarchyWidth() {
                return hierarchyWidth
            },
            set hierarchyWidth(e) {
                hierarchyWidth = e
            },
            get totalCount() {
                return totalCount
            },
            set totalCount(e) {
                totalCount = e
            },
            get selectedId() {
                return selectedId
            },
            set selectedId(e) {
                selectedId = e
            },
            get viewport() {
                return viewport
            },
            set viewport(e) {
                viewport = e
            },
            get setWidth() {
                return X0
            },
            set setWidth(e) {
                X0 = e
            },
            get setViewportRange() {
                return Q0
            },
            set setViewportRange(e) {
                Q0 = e
            },
            get setSelectedId() {
                return Z0
            },
            set setSelectedId(e) {
                Z0 = e
            },
            get setExpanded() {
                return J0
            },
            set setExpanded(e) {
                J0 = e
            },
            get bulldoze() {
                return e1
            },
            set bulldoze(e) {
                e1 = e
            },
            get save() {
                return t1
            },
            set save(e) {
                t1 = e
            },
            get editorCameraMode() {
                return editorCameraMode
            },
            set editorCameraMode(e) {
                editorCameraMode = e
            },
            get toggleEditorCameraMode() {
                return s1
            },
            set toggleEditorCameraMode(e) {
                s1 = e
            },
            get tutorialsEnabled() {
                return tutorialsEnabled
            },
            set tutorialsEnabled(e) {
                tutorialsEnabled = e
            },
            get toggleTutorials() {
                return a1
            },
            set toggleTutorials(e) {
                a1 = e
            },
            get itemIdEquals() {
                return o1
            },
            set itemIdEquals(e) {
                o1 = e
            }
        });
        let r1 = {
            "bulldoze-cursor": "bulldoze-cursor_uNU",
            bulldozeCursor: "bulldoze-cursor_uNU",
            "replace-cursor": "replace-cursor_jgP",
            replaceCursor: "replace-cursor_jgP",
            "complex-curve-cursor": "complex-curve-cursor_N47",
            complexCurveCursor: "complex-curve-cursor_N47",
            "continuous-cursor": "continuous-cursor_wVn",
            continuousCursor: "continuous-cursor_wVn",
            "grid-cursor": "grid-cursor_zBe",
            gridCursor: "grid-cursor_zBe",
            "parallel-mode-cursor": "parallel-mode-cursor_kzY",
            parallelModeCursor: "parallel-mode-cursor_kzY",
            "simple-curve-cursor": "simple-curve-cursor_JKS",
            simpleCurveCursor: "simple-curve-cursor_JKS",
            "straight-cursor": "straight-cursor_AcO",
            straightCursor: "straight-cursor_AcO",
            "no-cursor": "no-cursor_qkL",
            noCursor: "no-cursor_qkL",
            crosshair: "crosshair_gJi",
            "crosshair-default": "crosshair-default_S39",
            crosshairDefault: "crosshair-default_S39",
            "bulldoze-crosshair": "bulldoze-crosshair_C1X",
            bulldozeCrosshair: "bulldoze-crosshair_C1X",
            "replace-crosshair": "replace-crosshair_VpJ",
            replaceCrosshair: "replace-crosshair_VpJ",
            "complex-curve-crosshair": "complex-curve-crosshair_Yhl",
            complexCurveCrosshair: "complex-curve-crosshair_Yhl",
            "continuous-crosshair": "continuous-crosshair_DwR",
            continuousCrosshair: "continuous-crosshair_DwR",
            "grid-crosshair": "grid-crosshair_V69",
            gridCrosshair: "grid-crosshair_V69",
            "parallel-mode-crosshair": "parallel-mode-crosshair_lYy",
            parallelModeCrosshair: "parallel-mode-crosshair_lYy",
            "simple-curve-crosshair": "simple-curve-crosshair_BYp",
            simpleCurveCrosshair: "simple-curve-crosshair_BYp",
            "straight-crosshair": "straight-crosshair_IEJ",
            straightCrosshair: "straight-crosshair_IEJ"
        };
        X.add("game-ui/game/components/tool-cursors/tool-cursors.module.scss", {
            get classes() {
                return r1
            },
            set classes(e) {
                Object.assign(r1, e)
            }
        });
        const l1 = r1;
        function c1(e) {
            const t = sl(iP)
              , n = sl(bm)
              , s = sl(gP)
              , i = sl(IP);
            Xp(!n && e ? m1(s, i, t, "Cursor") : void 0)
        }
        function u1(e) {
            const t = sl(iP)
              , n = m1(sl(gP), sl(IP), t, "Crosshair");
            Xp(e && n ? `${n} ${l1.crosshair}` : void 0)
        }
        var d1 = ({blockingPanelActive: e=!1})=>{
            const t = Dm()
              , n = sl(Tm);
            return c1(!t && !n),
            u1(t && !n && !e),
            null
        }
        ;
        function m1(e, t, n, s) {
            return n.id === KP && e ? "Cursor" === s ? l1.parallelModeCursor : l1.parallelModeCrosshair : n.id === BP ? "Cursor" === s ? l1.bulldozeCursor : l1.bulldozeCrosshair : n.id === WP && t || n.id === KP && "Replace" === n.modes.find((e=>e.index === n.modeIndex))?.id ? "Cursor" === s ? l1.replaceCursor : l1.replaceCrosshair : n.id === KP && "Straight" === n.modes.find((e=>e.index === n.modeIndex))?.id ? "Cursor" === s ? l1.straightCursor : l1.straightCrosshair : n.id === KP && "SimpleCurve" === n.modes.find((e=>e.index === n.modeIndex))?.id ? "Cursor" === s ? l1.simpleCurveCursor : l1.simpleCurveCrosshair : n.id === KP && "ComplexCurve" === n.modes.find((e=>e.index === n.modeIndex))?.id ? "Cursor" === s ? l1.complexCurveCursor : l1.complexCurveCrosshair : n.id === KP && "Continuous" === n.modes.find((e=>e.index === n.modeIndex))?.id ? "Cursor" === s ? l1.continuousCursor : l1.continuousCrosshair : n.id === KP && "Grid" === n.modes.find((e=>e.index === n.modeIndex))?.id ? "Cursor" === s ? l1.gridCursor : l1.gridCrosshair : "Cursor" === s ? void 0 : l1.crosshairDefault
        }
        X.add("game-ui/game/components/tool-cursors/tool-cursors.tsx", {
            get useToolCursor() {
                return c1
            },
            set useToolCursor(e) {
                c1 = e
            },
            get useToolCrosshair() {
                return u1
            },
            set useToolCrosshair(e) {
                u1 = e
            },
            get CursorProvider() {
                return d1
            },
            set CursorProvider(e) {
                d1 = e
            }
        });
        let h1 = {
            "color-field": "color-field_due",
            colorField: "color-field_due",
            alpha: "alpha_R9X",
            disabled: "disabled_QDB",
            wrapper: "wrapper_ZiM",
            "color-picker-container": "color-picker-container_Sj5",
            colorPickerContainer: "color-picker-container_Sj5",
            "bound-color-field": "bound-color-field_RVj",
            boundColorField: "bound-color-field_RVj",
            hint: "hint_v_n"
        };
        X.add("game-ui/common/input/color-picker/color-field/color-field.module.scss", {
            get classes() {
                return h1
            },
            set classes(e) {
                Object.assign(h1, e)
            }
        });
        const g1 = h1
          , p1 = new Ig("BUTTON_KEY")
          , f1 = new Ig("PICKER_KEY");
        function x1(e) {
            const t = YM(RR, ZR(e.parent, e.path));
            return (0,
            z.jsx)(v1, {
                value: e.props.value,
                onChange: t,
                disabled: e.props.disabled,
                alpha: e.props.showAlpha,
                popupDirection: "up",
                className: g1.boundColorField
            })
        }
        var v1 = ({focusKey: e, disabled: t, value: n, className: s, selectAction: i="Select", alpha: a=!1, popupDirection: o="down", hideHint: r=!1, onChange: l, onClick: c, onMouseEnter: u, onMouseLeave: d, onClosePicker: m})=>{
            const [h,g] = (0,
            Y.useState)(!1)
              , p = (0,
            Y.useCallback)((()=>{
                g((e=>!e)),
                h && m && m()
            }
            ), [m, h])
              , f = (0,
            Y.useCallback)((()=>{
                g(!1),
                m && m()
            }
            ), [m]);
            (0,
            Y.useEffect)((()=>{
                t && h && (g(!1),
                m && m())
            }
            ), [t, m, h]);
            const x = (0,
            Y.useRef)(0)
              , v = (0,
            Y.useCallback)((e=>{
                x.current = e.h,
                l(EN(e))
            }
            ), [l])
              , _ = (0,
            Y.useMemo)((()=>({
                [i]: ()=>p(),
                Back: f
            })), [f, p, i])
              , b = (0,
            Y.useRef)(null)
              , T = (0,
            z.jsx)(Mg, {
                actions: _,
                children: (0,
                z.jsx)("div", {
                    ref: b,
                    className: g1.colorPickerContainer,
                    children: (0,
                    z.jsx)(JG, {
                        focusKey: f1,
                        color: _1(n, x.current),
                        alpha: a,
                        onChange: v,
                        colorWheel: !1,
                        sliderTextInput: !1,
                        mode: ZG.Hsv,
                        hexInput: !1,
                        allowFocusExit: !1
                    })
                })
            })
              , E = (0,
            Y.useCallback)((()=>g(!1)), [])
              , [I,S] = (0,
            Y.useState)(!1);
            return (0,
            z.jsxs)("div", {
                className: Zu()(s, g1.wrapper),
                children: [(0,
                z.jsx)(UT, {
                    action: h ? "Back" : "Select",
                    active: (I || h) && !r,
                    className: g1.hint
                }), h && (0,
                z.jsx)(h_, {
                    onClick: E
                }), (0,
                z.jsx)(op, {
                    focusKey: e,
                    focused: h ? f1 : p1,
                    children: (0,
                    z.jsx)(rS, {
                        visible: h,
                        content: T,
                        direction: o,
                        children: (0,
                        z.jsx)(Ah, {
                            onFocusChange: S,
                            children: (0,
                            z.jsx)(U_, {
                                disableHint: !0,
                                focusKey: p1,
                                selectAction: i,
                                onClick: c,
                                onMouseEnter: u,
                                onMouseLeave: d,
                                className: Zu()(g1.colorField, {
                                    [g1.disabled]: t,
                                    [g1.alpha]: n.a < 1
                                }),
                                onSelect: t ? void 0 : p,
                                children: (0,
                                z.jsx)("div", {
                                    style: {
                                        backgroundColor: xN(n)
                                    }
                                })
                            })
                        })
                    })
                })]
            })
        }
        ;
        function _1(e, t) {
            const n = IN(e, t);
            return 0 === n.h && t > .99 ? {
                ...n,
                h: 1
            } : n
        }
        X.add("game-ui/common/input/color-picker/color-field/color-field.tsx", {
            get BoundColorField() {
                return x1
            },
            set BoundColorField(e) {
                x1 = e
            },
            get ColorField() {
                return v1
            },
            set ColorField(e) {
                v1 = e
            },
            get rgbaToHsvaWithStrongFallbackHue() {
                return _1
            },
            set rgbaToHsvaWithStrongFallbackHue(e) {
                _1 = e
            }
        });
        var b1 = ({min: e=_d, max: t=bd, unit: n, ...s})=>{
            const i = (0,
            Y.useCallback)((n=>function(e, t, n) {
                if ("-" === e)
                    return;
                if ("" === e)
                    return t <= 0 && n >= 0 ? 0 : void 0;
                const s = parseInt(e, 10);
                return isNaN(s) ? void 0 : Od(s, t, n)
            }(n, e, t)), [e, t])
              , a = Ac(n, !1);
            return (0,
            z.jsx)(LB, {
                ...s,
                valueFormatter: a,
                inputParser: i,
                inputValidator: e < 0 ? T1 : E1
            })
        }
        ;
        function T1(e) {
            return /^-?[0-9]*$/.test(e)
        }
        function E1(e) {
            return /^[0-9]*$/.test(e)
        }
        X.add("game-ui/common/input/text/localized-int-input.tsx", {
            get LocalizedIntInput() {
                return b1
            },
            set LocalizedIntInput(e) {
                b1 = e
            }
        });
        let I1 = {
            "unlock-highlight-badge": "unlock-highlight-badge_yPU",
            unlockHighlightBadge: "unlock-highlight-badge_yPU"
        };
        X.add("game-ui/game/components/item-grid/badges/unlock-highlight-badge.module.scss", {
            get classes() {
                return I1
            },
            set classes(e) {
                Object.assign(I1, e)
            }
        });
        const S1 = I1;
        var y1 = ({className: e})=>sl(Al) ? (0,
        z.jsx)("div", {
            className: Zu()(S1.unlockHighlightBadge, e)
        }) : null;
        X.add("game-ui/game/components/item-grid/badges/unlock-highlight-badge.tsx", {
            get UnlockHighlightBadge() {
                return y1
            },
            set UnlockHighlightBadge(e) {
                y1 = e
            }
        });
        let j1 = {
            indicatorNormalColor: "#424242",
            indicatorSelectedColor: "#1e83aa",
            button: "button_KVN",
            icon: "icon_Ysc",
            "multi-select": "multi-select_Roq",
            multiSelect: "multi-select_Roq",
            "icon-button": "icon-button_qjP",
            iconButton: "icon-button_qjP",
            badge: "badge_IEE",
            indicator: "indicator_ySy"
        };
        X.add("game-ui/game/components/tool-options/tool-button/tool-button.module.scss", {
            get classes() {
                return j1
            },
            set classes(e) {
                Object.assign(j1, e)
            }
        });
        const C1 = j1;
        var N1 = ({focusKey: e, src: t, selected: n, multiSelect: s, disabled: i, tooltip: a, selectSound: o, uiTag: r, className: l, children: c, onSelect: u, shortcut: d})=>{
            const m = (0,
            Y.useCallback)((()=>{
                u && u(),
                r && ag(r)
            }
            ), [u, r]);
            return (0,
            z.jsx)(mT, {
                uiTag: r,
                children: (0,
                z.jsx)(Eg, {
                    tooltip: a,
                    children: (0,
                    z.jsx)(tb, {
                        disableHint: !0,
                        focusKey: e,
                        src: t,
                        disabled: i,
                        selected: n,
                        theme: C1,
                        selectSound: o,
                        className: Zu()(s && C1.multiSelect, l, C1.iconButton),
                        onSelect: m,
                        shortcut: d,
                        children: c
                    })
                })
            })
        }
        ;
        function w1({focusKey: e, value: t, src: n, selected: s, disabled: i, highlight: a, multiSelect: o, uiTag: r, shortcut: l, className: c, children: u, onSelect: d, onClick: m}) {
            const h = (0,
            Y.useCallback)((()=>{
                d && d(t),
                r && ag(r)
            }
            ), [d, t, r])
              , g = (0,
            Y.useCallback)((e=>{
                m && (e.stopPropagation(),
                m(t))
            }
            ), [t, m]);
            return (0,
            z.jsx)(mT, {
                uiTag: r,
                children: (0,
                z.jsxs)(tb, {
                    disableHint: !0,
                    focusKey: e,
                    src: n,
                    selected: s,
                    theme: C1,
                    disabled: i,
                    className: Zu()(o && C1.multiSelect, c, C1.iconButton),
                    onSelect: h,
                    onClick: g,
                    shortcut: l,
                    children: [u, a && (0,
                    z.jsx)(y1, {
                        className: C1.badge
                    })]
                })
            })
        }
        var O1 = ({focusKey: e, selectedValue: t, values: n, tooltip: s, uiTag: i, onSelect: a})=>{
            const o = (0,
            Y.useCallback)((()=>{
                a(function(e, t) {
                    if (0 === t.length)
                        return e;
                    for (const n of t)
                        if (n < e)
                            return n;
                    return t[0]
                }(t, n)),
                i && ag(i)
            }
            ), [a, t, i, n])
              , r = n.findIndex((e=>e <= t));
            return (0,
            z.jsx)(mT, {
                uiTag: i,
                children: (0,
                z.jsx)(Eg, {
                    tooltip: s,
                    children: (0,
                    z.jsx)(U_, {
                        focusKey: e,
                        theme: C1,
                        className: C1.iconButton,
                        onSelect: o,
                        children: (0,
                        z.jsxs)("svg", {
                            viewBox: "0 0 20 16",
                            className: C1.indicator,
                            children: [(0,
                            z.jsx)("path", {
                                d: "M0,12h4v4h-4Z",
                                fill: r <= 3 ? C1.indicatorSelectedColor : C1.indicatorNormalColor
                            }), (0,
                            z.jsx)("path", {
                                d: "M5,8h4v8h-4Z",
                                fill: r <= 2 ? C1.indicatorSelectedColor : C1.indicatorNormalColor
                            }), (0,
                            z.jsx)("path", {
                                d: "M10,4h4v12h-4Z",
                                fill: r <= 1 ? C1.indicatorSelectedColor : C1.indicatorNormalColor
                            }), (0,
                            z.jsx)("path", {
                                d: "M15,0h4v16h-4Z",
                                fill: r <= 0 ? C1.indicatorSelectedColor : C1.indicatorNormalColor
                            })]
                        })
                    })
                })
            })
        }
        ;
        X.add("game-ui/game/components/tool-options/tool-button/tool-button.tsx", {
            get ToolButton() {
                return N1
            },
            set ToolButton(e) {
                N1 = e
            },
            get ValueToolButton() {
                return w1
            },
            set ValueToolButton(e) {
                w1 = e
            },
            get StepToolButton() {
                return O1
            },
            set StepToolButton(e) {
                O1 = e
            }
        });
        let P1 = {
            item: "item_bZY",
            label: "label_RZX",
            content: "content_ZIz",
            "number-field": "number-field__Hd",
            numberField: "number-field__Hd",
            "number-input-field": "number-input-field_cnU",
            numberInputField: "number-input-field_cnU",
            "start-button": "start-button_F6t",
            startButton: "start-button_F6t",
            "end-button": "end-button_ztm",
            endButton: "end-button_ztm",
            "dropdown-toggle": "dropdown-toggle_ZAi",
            dropdownToggle: "dropdown-toggle_ZAi",
            slider: "slider_k5B"
        };
        X.add("game-ui/game/components/tool-options/mouse-tool-options/mouse-tool-options.module.scss", {
            get classes() {
                return P1
            },
            set classes(e) {
                Object.assign(P1, e)
            }
        });
        const L1 = P1;
        var A1 = ()=>((0,
        Y.useEffect)((()=>ML(!1)), []),
        (0,
        z.jsxs)(np, {
            children: [(0,
            z.jsx)(R1, {}), (0,
            z.jsx)(D1, {}), (0,
            z.jsx)(B1, {}), (0,
            z.jsx)(U1, {}), (0,
            z.jsx)(V1, {}), (0,
            z.jsx)($1, {}), (0,
            z.jsx)(Y1, {}), (0,
            z.jsx)(Q1, {}), (0,
            z.jsx)(K1, {}), (0,
            z.jsx)(Z1, {})]
        }))
          , M1 = ({title: e, uiTag: t, children: n})=>(0,
        z.jsxs)(Sp, {
            className: L1.item,
            children: [(0,
            z.jsx)("div", {
                className: L1.label,
                children: e
            }), (0,
            z.jsx)(mT, {
                uiTag: t,
                children: (0,
                z.jsx)("div", {
                    className: L1.content,
                    children: n
                })
            })]
        });
        const R1 = ()=>{
            const e = Mp(sl(_L))
              , t = Mp(sl(vL))
              , n = Mp(sl(SL))
              , s = Mp(ll(xL, n))
              , i = (0,
            Y.useCallback)((t=>{
                e.length > 1 && void 0 !== e.find((e=>Ur(t, e))) ? NL(e.filter((e=>!Ur(t, e)))) : void 0 === e.find((e=>Ur(t, e))) && NL([...e, t])
            }
            ), [e])
              , a = Mp((0,
            Y.useMemo)((()=>s.reduce(((e,t)=>(t.theme && e.add(t.theme),
            e)), new Set)), [s]));
            return t.length && a.size ? (0,
            z.jsx)(M1, {
                title: (0,
                z.jsx)(_c.Toolbar.THEME_PANEL_TITLE, {}),
                uiTag: vT.value?.toolOptionsThemes,
                children: (0,
                z.jsx)(np, {
                    children: t.map((t=>(0,
                    z.jsx)(BQ, {
                        title: (0,
                        z.jsx)(_c.ToolOptions.TOOLTIP_TITLE, {
                            hash: t.name
                        }),
                        description: (0,
                        z.jsx)(_c.ToolOptions.TOOLTIP_DESCRIPTION, {
                            hash: t.name
                        }),
                        children: (0,
                        z.jsx)(w1, {
                            multiSelect: !0,
                            focusKey: Dr(t.entity),
                            value: t.entity,
                            src: t.icon,
                            selected: void 0 !== e.find((e=>Ur(t.entity, e))),
                            highlight: t.highlight,
                            disabled: 1 === e.length && void 0 !== e.find((e=>Ur(t.entity, e))),
                            onClick: i
                        })
                    }, Dr(t.entity))))
                })
            }) : null
        }
          , k1 = []
          , D1 = ()=>{
            const e = Mp(sl(EL))
              , t = Mp(sl(TL))
              , n = (0,
            Y.useCallback)((n=>{
                Ur(n, Zp) ? e.length > 0 ? wL(k1) : wL(t.map((e=>e.entity))) : void 0 !== e.find((e=>Ur(n, e))) ? wL(e.filter((e=>!Ur(n, e)))) : wL([...e, n])
            }
            ), [e, t]);
            return t.length ? (0,
            z.jsx)(M1, {
                title: (0,
                z.jsx)(_c.Toolbar.ASSET_PACKS_PANEL_TITLE, {}),
                uiTag: vT.value?.toolOptionsAssetPacks,
                children: (0,
                z.jsxs)(np, {
                    direction: kg.Both,
                    children: [t.length > 1 && (0,
                    z.jsx)(Eg, {
                        tooltip: (0,
                        z.jsx)(_c.ToolOptions.TOOLTIP_TITLE, {
                            hash: "AssetPack.All"
                        }),
                        children: (0,
                        z.jsx)(w1, {
                            focusKey: Dr(Zp),
                            value: Zp,
                            src: "Media/Tools/Snap Options/All.svg",
                            selected: Gr(t.map((e=>e.entity)), e),
                            onClick: n
                        })
                    }), t.map(((t,s)=>(0,
                    z.jsx)(Eg, {
                        tooltip: (0,
                        z.jsx)(_c.Assets.NAME, {
                            hash: t.name
                        }),
                        children: (0,
                        z.jsx)(w1, {
                            focusKey: `${Dr(t.entity)}-${s}`,
                            value: t.entity,
                            src: t.icon,
                            selected: void 0 !== e.find((e=>Ur(t.entity, e))),
                            highlight: t.highlight,
                            onClick: n
                        })
                    }, s)))]
                })
            }) : null
        }
        ;
        var F1 = [{
            value: gL.Child,
            src: "Media/Tools/Vegetation Options/TreeChild.svg",
            tooltipHash: "Sapling"
        }, {
            value: gL.Teen,
            src: "Media/Tools/Vegetation Options/TreeTeen.svg",
            tooltipHash: "Young"
        }, {
            value: gL.Adult,
            src: "Media/Tools/Vegetation Options/TreeAdult.svg",
            tooltipHash: "Mature"
        }, {
            value: gL.Elderly,
            src: "Media/Tools/Vegetation Options/TreeElderly.svg",
            tooltipHash: "Elderly"
        }];
        const U1 = ()=>{
            const e = Mp(sl(jL))
              , t = (0,
            Y.useRef)(e);
            t.current = e;
            const n = (0,
            Y.useCallback)((e=>{
                let n = t.current;
                n & e ? n ^= e : n |= e,
                CL(n || 1)
            }
            ), []);
            return e === gL.Disabled ? null : (0,
            z.jsx)(M1, {
                title: (0,
                z.jsx)(_c.Toolbar.VEGETATION_AGE_PANEL_TITLE, {}),
                uiTag: vT.value?.toolOptionsVegatationAge,
                children: (0,
                z.jsx)(np, {
                    children: F1.map((t=>(0,
                    z.jsx)(BQ, {
                        title: null,
                        description: (0,
                        z.jsx)(_c.ToolOptions.TOOLTIP_DESCRIPTION, {
                            hash: t.tooltipHash
                        }),
                        children: (0,
                        z.jsx)(w1, {
                            focusKey: `vegetation-age:${t.value}`,
                            value: t.value,
                            src: t.src,
                            selected: !!(e & t.value),
                            onClick: n
                        })
                    }, t.tooltipHash)))
                })
            })
        }
          , B1 = ()=>{
            lg(vT.value?.toolOptionsModes);
            const e = Mp(sl(iP))
              , t = (0,
            Y.useCallback)((e=>NP(e)), [])
              , n = (0,
            Y.useCallback)((e=>{
                "number" == typeof e && t(e)
            }
            ), [t])
              , s = "Object Tool" === e.id && ("Line" === e.modes.find((t=>t.index === e.modeIndex))?.id || "Curve" === e.modes.find((t=>t.index === e.modeIndex))?.id);
            return e.modes.length < 2 ? null : (0,
            z.jsxs)(z.Fragment, {
                children: [(0,
                z.jsx)(M1, {
                    title: (0,
                    z.jsx)(_c.Toolbar.TOOL_MODE_TITLE, {}),
                    uiTag: vT.value?.toolOptionsModes,
                    children: (0,
                    z.jsx)(Zg, {
                        focused: e.modeIndex,
                        direction: kg.Horizontal,
                        onChange: n,
                        children: e.modes.map((n=>(0,
                        z.jsx)(mT, {
                            uiTag: vT.value?.toolOptionsModes + n.id,
                            children: (0,
                            z.jsx)(BQ, {
                                title: (0,
                                z.jsx)(_c.ToolOptions.TOOLTIP_TITLE, {
                                    hash: n.id
                                }),
                                description: (0,
                                z.jsx)(_c.ToolOptions.TOOLTIP_DESCRIPTION, {
                                    hash: n.id
                                }),
                                children: (0,
                                z.jsx)(w1, {
                                    uiTag: vT.value?.toolOptionsModes + n.id,
                                    focusKey: n.index,
                                    value: n.index,
                                    src: n.icon,
                                    selected: n.index === e.modeIndex,
                                    onSelect: t
                                })
                            })
                        }, n.id)))
                    })
                }), s && (0,
                z.jsx)(G1, {})]
            })
        }
        ;
        var G1 = ()=>{
            const e = Mp(sl(yP))
              , t = Mp(sl(SP))
              , [n,s] = (0,
            Y.useState)(t * e)
              , i = Math.max(Math.floor(1.5 * e), 1.5)
              , a = 6 * e
              , o = Math.max(i / 3, .5)
              , r = kA(o)
              , l = (0,
            Y.useCallback)((()=>{
                UP(n / e)
            }
            ), [e, n])
              , c = Dm()
              , u = (0,
            Y.useCallback)((t=>{
                c && UP(t / e),
                s(t)
            }
            ), [e, c]);
            return (0,
            Y.useEffect)((()=>s(Math.min(Math.max(t * e, i), a))), [t, e, a, i]),
            (0,
            z.jsxs)(M1, {
                title: (0,
                z.jsx)(_c.Toolbar.TOOL_MODE_DISTANCE, {}),
                children: [(0,
                z.jsx)(Pc, {
                    value: n,
                    unit: vc.Length,
                    fractionDigits: 2
                }), (0,
                z.jsx)(BQ, {
                    title: (0,
                    z.jsx)(_c.ToolOptions.TOOLTIP_TITLE_DISTANCE, {}),
                    description: (0,
                    z.jsx)(_c.ToolOptions.TOOLTIP_DESCRIPTION_DISTANCE, {}),
                    children: (0,
                    z.jsx)(AA, {
                        start: i,
                        end: a,
                        value: n,
                        gamepadStep: o,
                        valueTransformer: r,
                        onChange: u,
                        onDragEnd: l,
                        className: L1.slider
                    })
                })]
            })
        }
        ;
        const V1 = ()=>{
            const e = Mp(sl(EP))
              , t = Mp(sl(QP))
              , n = Mp(sl(JP))
              , s = Mp(sl(eL))
              , i = Mp(sl(tL))
              , a = Mp(sl(nL))
              , o = Mp(sl(sL))
              , r = Mp(sl(aL))
              , l = Mp(sl(oL))
              , c = i <= a
              , u = i >= o
              , d = (0,
            Y.useCallback)((()=>dL(Od(H1(i, -10), a, o))), [i, o, a])
              , m = (0,
            Y.useCallback)((()=>dL(Od(H1(i, 10), a, o))), [i, o, a])
              , h = n <= r
              , g = n >= l
              , p = (0,
            Y.useCallback)((()=>{
                let e;
                e = n > 550 ? 100 : n > 125 ? 50 : 10,
                lL(Od(H1(n, -e), r, l))
            }
            ), [n, r, l])
              , f = (0,
            Y.useCallback)((()=>{
                let e;
                e = n > 475 ? 100 : n > 95 ? 50 : 10,
                lL(Od(H1(n, e), r, l))
            }
            ), [n, l, r])
              , x = s <= .01
              , v = s >= 1
              , _ = (0,
            Y.useCallback)((()=>{
                cL(Od(H1(s, -(s > .11 ? .05 : .01)), .01, 1))
            }
            ), [s])
              , b = (0,
            Y.useCallback)((()=>{
                cL(Od(H1(s, +(s > .095 ? .05 : .01)), .01, 1))
            }
            ), [s])
              , T = (0,
            Y.useCallback)((e=>{
                cL(e / 100)
            }
            ), [])
              , E = Mp(sl(ZP))
              , I = (0,
            Y.useMemo)((()=>E.find((e=>Ur(e.entity, t)))), [E, t])
              , S = Mp(sl(iL))
              , y = (0,
            Y.useCallback)((()=>uL(H1(S, 15) % 360)), [S])
              , j = (0,
            Y.useCallback)((()=>uL((H1(S, -15) + 360) % 360)), [S]);
            return Ur(t, Zp) ? null : (0,
            z.jsxs)(z.Fragment, {
                children: [e && (0,
                z.jsx)(M1, {
                    title: (0,
                    z.jsx)(_c.Toolbar.BRUSH, {}),
                    children: (0,
                    z.jsx)(fS, {
                        theme: Ok,
                        content: E.map((e=>(0,
                        z.jsx)(bS, {
                            focusKey: e.name,
                            value: e.entity,
                            selected: Ur(e.entity, t),
                            onChange: rL,
                            children: e.name
                        }, e.name))),
                        children: (0,
                        z.jsx)(xS, {
                            className: Zu()(Ok.dropdownToggle, L1.dropdownToggle),
                            tooltip: (0,
                            z.jsx)(_c.ToolOptions.TOOLTIP_CHANGE_BRUSH, {}),
                            children: I?.name
                        })
                    })
                }), null !== i && (0,
                z.jsx)(M1, {
                    title: (0,
                    z.jsx)(_c.Toolbar.BRUSH_HEIGHT, {}),
                    uiTag: vT.value?.toolOptionsBrushSize,
                    children: (0,
                    z.jsxs)(np, {
                        direction: kg.Horizontal,
                        children: [(0,
                        z.jsx)(N1, {
                            src: "Media/Glyphs/ThickStrokeArrowDown.svg",
                            disabled: c,
                            tooltip: (0,
                            z.jsx)(_c.ToolOptions.TOOLTIP_DECREASE_BRUSH_HEIGHT, {}),
                            selectSound: lp.decreaseElevation,
                            className: L1.startButton,
                            onSelect: d
                        }), (0,
                        z.jsx)("div", {
                            className: L1.numberField,
                            children: (0,
                            z.jsx)(b1, {
                                unit: vc.NetElevation,
                                value: i,
                                className: L1.numberInputField,
                                onChange: dL,
                                min: a,
                                max: o
                            })
                        }), (0,
                        z.jsx)(N1, {
                            src: "Media/Glyphs/ThickStrokeArrowUp.svg",
                            disabled: u,
                            tooltip: (0,
                            z.jsx)(_c.ToolOptions.TOOLTIP_INCREASE_BRUSH_HEIGHT, {}),
                            selectSound: lp.increaseElevation,
                            className: L1.endButton,
                            onSelect: m
                        })]
                    })
                }), (0,
                z.jsx)(M1, {
                    title: (0,
                    z.jsx)(_c.Toolbar.BRUSH_SIZE, {}),
                    uiTag: vT.value?.toolOptionsBrushSize,
                    children: (0,
                    z.jsxs)(np, {
                        direction: kg.Horizontal,
                        children: [(0,
                        z.jsx)(N1, {
                            src: "Media/Glyphs/ThickStrokeArrowDown.svg",
                            disabled: h,
                            tooltip: (0,
                            z.jsx)(_c.ToolOptions.TOOLTIP_DECREASE_BRUSH_SIZE, {}),
                            selectSound: lp.decreaseElevation,
                            className: L1.startButton,
                            onSelect: p
                        }), (0,
                        z.jsx)("div", {
                            className: L1.numberField,
                            children: (0,
                            z.jsx)(b1, {
                                unit: vc.Integer,
                                value: n,
                                className: L1.numberInputField,
                                onChange: lL,
                                min: r,
                                max: l
                            })
                        }), (0,
                        z.jsx)(N1, {
                            src: "Media/Glyphs/ThickStrokeArrowUp.svg",
                            disabled: g,
                            tooltip: (0,
                            z.jsx)(_c.ToolOptions.TOOLTIP_INCREASE_BRUSH_SIZE, {}),
                            selectSound: lp.increaseElevation,
                            className: L1.endButton,
                            onSelect: f
                        })]
                    })
                }), (0,
                z.jsx)(M1, {
                    title: (0,
                    z.jsx)(_c.Toolbar.BRUSH_STRENGTH, {}),
                    uiTag: vT.value?.toolOptionsBrushStrength,
                    children: (0,
                    z.jsxs)(np, {
                        direction: kg.Horizontal,
                        children: [(0,
                        z.jsx)(N1, {
                            src: "Media/Glyphs/ThickStrokeArrowDown.svg",
                            disabled: x,
                            tooltip: (0,
                            z.jsx)(_c.ToolOptions.TOOLTIP_DECREASE_BRUSH_STRENGTH, {}),
                            selectSound: lp.decreaseElevation,
                            className: L1.startButton,
                            onSelect: _
                        }), (0,
                        z.jsx)("div", {
                            className: L1.numberField,
                            children: (0,
                            z.jsx)(b1, {
                                unit: vc.Percentage,
                                value: 100 * s,
                                className: L1.numberInputField,
                                onChange: T,
                                min: 1,
                                max: 100
                            })
                        }), (0,
                        z.jsx)(N1, {
                            src: "Media/Glyphs/ThickStrokeArrowUp.svg",
                            disabled: v,
                            tooltip: (0,
                            z.jsx)(_c.ToolOptions.TOOLTIP_INCREASE_BRUSH_STRENGTH, {}),
                            selectSound: lp.increaseElevation,
                            className: L1.endButton,
                            onSelect: b
                        })]
                    })
                }), e && (0,
                z.jsx)(M1, {
                    title: (0,
                    z.jsx)(_c.Toolbar.BRUSH_ANGLE, {}),
                    children: (0,
                    z.jsxs)(np, {
                        direction: kg.Horizontal,
                        children: [(0,
                        z.jsx)(N1, {
                            src: "Media/Glyphs/ThickStrokeArrowDown.svg",
                            tooltip: (0,
                            z.jsx)(_c.ToolOptions.TOOLTIP_ROTATE_BRUSH_COUNTER_CLOCKWISE, {}),
                            selectSound: lp.decreaseElevation,
                            className: L1.startButton,
                            onSelect: j
                        }), (0,
                        z.jsx)("div", {
                            className: L1.numberField,
                            children: (0,
                            z.jsx)(b1, {
                                unit: vc.Integer,
                                value: S,
                                className: L1.numberInputField,
                                onChange: uL,
                                min: 0,
                                max: 360
                            })
                        }), (0,
                        z.jsx)(N1, {
                            src: "Media/Glyphs/ThickStrokeArrowUp.svg",
                            tooltip: (0,
                            z.jsx)(_c.ToolOptions.TOOLTIP_ROTATE_BRUSH_CLOCKWISE, {}),
                            selectSound: lp.increaseElevation,
                            className: L1.endButton,
                            onSelect: y
                        })]
                    })
                })]
            })
        }
        ;
        function H1(e, t) {
            return t * Math.round(e / t) + t
        }
        const K1 = ()=>{
            const e = Mp(sl(oP))
              , t = Mp(sl(lP))
              , n = Mp(sl(rP))
              , s = Mp(sl(cP))
              , i = W1(e)
              , a = (n & t) === t
              , o = (0,
            Y.useCallback)((()=>{
                RP(a ? n & ~t : n | t)
            }
            ), [a, t, n])
              , r = (0,
            Y.useCallback)((e=>{
                const t = 1 << e;
                RP(0 != (n & t) ? n & ~t : n | t)
            }
            ), [n]);
            if (!i.length)
                return null;
            const l = i.filter((e=>"ContourLines" !== s[e]))
              , c = i.filter((e=>"ContourLines" === s[e]));
            return (0,
            z.jsxs)(z.Fragment, {
                children: [!!l.length && (0,
                z.jsx)(M1, {
                    title: (0,
                    z.jsx)(_c.Toolbar.SNAPPING_TITLE, {}),
                    uiTag: vT.value?.toolOptionsSnapping,
                    children: (0,
                    z.jsxs)(np, {
                        direction: kg.Horizontal,
                        children: [l.length > 1 && (0,
                        z.jsx)(N1, {
                            multiSelect: !0,
                            src: "Media/Tools/Snap Options/All.svg",
                            selected: a,
                            tooltip: (0,
                            z.jsx)(_c.ToolOptions.TOOLTIP_SNAP_ALL, {}),
                            onSelect: o
                        }), l.map((e=>(0,
                        z.jsx)(Eg, {
                            tooltip: (0,
                            z.jsx)(_c.ToolOptions.TOOLTIP, {
                                hash: s[e]
                            }),
                            children: (0,
                            z.jsx)(w1, {
                                focusKey: e,
                                value: e,
                                src: "Media/Tools/Snap Options/" + s[e] + ".svg",
                                selected: 0 != (n & 1 << e),
                                multiSelect: !0,
                                onSelect: r
                            }, e)
                        }, e)))]
                    })
                }), !!c.length && (0,
                z.jsx)(M1, {
                    title: (0,
                    z.jsx)(_c.Toolbar.CONTOUR_LINES_TITLE, {}),
                    children: (0,
                    z.jsx)(np, {
                        direction: kg.Horizontal,
                        children: c.map((e=>(0,
                        z.jsx)(Eg, {
                            tooltip: (0,
                            z.jsx)(_c.ToolOptions.TOOLTIP, {
                                hash: s[e]
                            }),
                            children: (0,
                            z.jsx)(w1, {
                                focusKey: e,
                                value: e,
                                src: "Media/Tools/Snap Options/" + s[e] + ".svg",
                                selected: 0 != (n & 1 << e),
                                multiSelect: !0,
                                shortcut: "Toggle Contour Lines",
                                onSelect: r
                            }, e)
                        }, e)))
                    })
                })]
            })
        }
          , W1 = e=>(0,
        Y.useMemo)((()=>{
            const t = [];
            let n = 0;
            for (; e >> n > 0; )
                0 != (e >> n & 1) && t.push(n),
                n++;
            return t
        }
        ), [e])
          , z1 = [10, 5, 2.5, 1.25]
          , Y1 = ()=>{
            const e = Mp(sl(uP))
              , t = Mp(sl(dP))
              , n = Mp(sl(mP))
              , s = t <= e.min
              , i = t >= e.max
              , a = (0,
            Y.useCallback)((e=>MP(e)), [])
              , o = (0,
            Y.useCallback)((()=>LP()), [])
              , r = (0,
            Y.useCallback)((()=>PP()), []);
            return e.min >= e.max ? null : (0,
            z.jsx)(M1, {
                title: (0,
                z.jsx)(_c.Toolbar.ELEVATION_TITLE, {}),
                uiTag: vT.value?.toolOptionsElevation,
                children: (0,
                z.jsxs)(np, {
                    direction: kg.Horizontal,
                    children: [(0,
                    z.jsx)(N1, {
                        src: "Media/Glyphs/ThickStrokeArrowDown.svg",
                        disabled: s,
                        tooltip: (0,
                        z.jsx)(_c.ToolOptions.TOOLTIP_DECREASE_ELEVATION, {}),
                        selectSound: lp.decreaseElevation,
                        uiTag: vT.value?.toolOptionsElevationDecrease,
                        className: L1.startButton,
                        onSelect: o,
                        shortcut: "Decrease Elevation"
                    }), (0,
                    z.jsx)("div", {
                        className: L1.numberField,
                        children: (0,
                        z.jsx)(Oc, {
                            value: t,
                            unit: vc.NetElevation
                        })
                    }), (0,
                    z.jsx)(N1, {
                        src: "Media/Glyphs/ThickStrokeArrowUp.svg",
                        disabled: i,
                        tooltip: (0,
                        z.jsx)(_c.ToolOptions.TOOLTIP_INCREASE_ELEVATION, {}),
                        selectSound: lp.increaseElevation,
                        uiTag: vT.value?.toolOptionsElevationIncrease,
                        className: L1.endButton,
                        onSelect: r,
                        shortcut: "Increase Elevation"
                    }), (0,
                    z.jsx)(O1, {
                        selectedValue: n,
                        values: z1,
                        uiTag: vT.value?.toolOptionsElevationStep,
                        tooltip: (0,
                        z.jsx)(_c.ToolOptions.TOOLTIP_ELEVATION_STEP, {}),
                        onSelect: a
                    })]
                })
            })
        }
          , $1 = ()=>{
            const e = Mp(sl(iP))
              , t = Mp(sl(fP))
              , n = Mp(sl(xP))
              , s = (0,
            Y.useCallback)((()=>FP(!n)), [n]);
            return e.id !== GP && t ? (0,
            z.jsx)(M1, {
                title: (0,
                z.jsx)(_c.Toolbar.UNDERGROUND_MODE_TITLE, {}),
                children: (0,
                z.jsx)(N1, {
                    src: "Media/Tools/Net Tool/Underground.svg",
                    disabled: !t,
                    selected: n,
                    multiSelect: !0,
                    uiTag: vT.value?.toolOptionsUnderground,
                    tooltip: (0,
                    z.jsx)(_c.Toolbar.TOGGLE_UNDERGROUND_MODE, {}),
                    selectSound: n ? lp.increaseElevation : lp.decreaseElevation,
                    onSelect: s
                })
            }) : null
        }
          , q1 = new Ig("PARALLEL_MODE_TOGGLE")
          , X1 = [2, 4, 8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96]
          , Q1 = ()=>{
            const e = Mp(sl(hP))
              , t = Mp(sl(gP))
              , n = Mp(sl(pP))
              , s = (0,
            Y.useMemo)((()=>X1.sort(((e,t)=>e - t))), [])
              , i = n <= s[0]
              , a = (0,
            Y.useCallback)((()=>{
                for (let e = s.length - 1; e >= 0; e--)
                    if (s[e] < n) {
                        DP(s[e]);
                        break
                    }
            }
            ), [n, s])
              , o = n >= s[s.length - 1]
              , r = (0,
            Y.useCallback)((()=>{
                for (let e = 0; e < s.length; e++)
                    if (s[e] > n) {
                        DP(s[e]);
                        break
                    }
            }
            ), [n, s]);
            return e ? (0,
            z.jsx)(M1, {
                title: (0,
                z.jsx)(_c.Toolbar.PARALLEL_MODE_TITLE, {}),
                children: (0,
                z.jsxs)(np, {
                    initialFocused: q1,
                    direction: kg.Horizontal,
                    children: [t && (0,
                    z.jsxs)(z.Fragment, {
                        children: [(0,
                        z.jsx)(N1, {
                            src: "Media/Tools/Net Tool/ParallelMinus.svg",
                            tooltip: (0,
                            z.jsx)(_c.Toolbar.DECREASE_PARALLEL_OFFSET, {}),
                            className: L1.startButton,
                            disabled: i,
                            onSelect: a,
                            uiTag: vT.value?.toolOptionsParallelModeOffsetDecrease
                        }), (0,
                        z.jsx)(mT, {
                            uiTag: vT.value?.toolOptionsParallelModeOffset,
                            children: (0,
                            z.jsx)("div", {
                                className: L1.numberField,
                                children: (0,
                                z.jsx)(Oc, {
                                    value: n / 8,
                                    unit: vc.FloatTwoFractions
                                })
                            })
                        }), (0,
                        z.jsx)(N1, {
                            src: "Media/Tools/Net Tool/ParallelPlus.svg",
                            tooltip: (0,
                            z.jsx)(_c.Toolbar.INCREASE_PARALLEL_OFFSET, {}),
                            className: L1.endButton,
                            disabled: o,
                            onSelect: r,
                            uiTag: vT.value?.toolOptionsParallelModeOffsetIncrease
                        })]
                    }), (0,
                    z.jsx)(N1, {
                        focusKey: q1,
                        src: "Media/Tools/Net Tool/Parallel.svg",
                        tooltip: (0,
                        z.jsx)(_c.Toolbar.TOGGLE_PARALLEL_MODE, {}),
                        selected: t,
                        multiSelect: !0,
                        onSelect: kP,
                        uiTag: vT.value?.toolOptionsParallelMode
                    })]
                })
            }) : null
        }
          , Z1 = ()=>{
            const e = Mp(sl(iP))
              , t = Mp(sl(bP))
              , n = Mp(sl(TP))
              , s = (0,
            Y.useCallback)((e=>jP(e)), []);
            return e.id !== GP && t ? (0,
            z.jsx)(M1, {
                title: (0,
                z.jsx)(_c.ToolOptions.COLOR_TITLE, {
                    hash: e.id
                }),
                children: (0,
                z.jsx)(Eg, {
                    tooltip: (0,
                    z.jsx)(_c.ToolOptions.COLOR_TOOLTIP, {
                        hash: e.id
                    }),
                    children: (0,
                    z.jsx)(v1, {
                        popupDirection: "up",
                        value: n,
                        onChange: s
                    })
                })
            }) : null
        }
        ;
        X.add("game-ui/game/components/tool-options/mouse-tool-options/mouse-tool-options.tsx", {
            get MouseToolOptions() {
                return A1
            },
            set MouseToolOptions(e) {
                A1 = e
            },
            get Section() {
                return M1
            },
            set Section(e) {
                M1 = e
            },
            get vegetationAgeOptions() {
                return F1
            },
            set vegetationAgeOptions(e) {
                F1 = e
            },
            get DistanceSection() {
                return G1
            },
            set DistanceSection(e) {
                G1 = e
            }
        });
        let J1 = {
            group: "group_fXk",
            item: "item_RBL item-focused_FuT",
            "item-content": "item-content__FJ",
            itemContent: "item-content__FJ",
            readonly: "readonly_jlY",
            label: "label_EcW",
            content: "content_I1Y",
            "arrow-button": "arrow-button_V0s",
            arrowButton: "arrow-button_V0s",
            field: "field_hZA",
            "number-field": "number-field_nkt",
            numberField: "number-field_nkt",
            "wide-field": "wide-field_jm1 field_hZA",
            wideField: "wide-field_jm1 field_hZA",
            hidden: "hidden_o8e",
            "color-field": "color-field_zGk",
            colorField: "color-field_zGk"
        };
        X.add("game-ui/game/components/tool-options/gamepad-tool-options/gamepad-tool-options.module.scss", {
            get classes() {
                return J1
            },
            set classes(e) {
                Object.assign(J1, e)
            }
        });
        const e2 = J1;
        var t2 = ()=>{
            const e = Dm()
              , [t,n] = (0,
            Y.useState)(!1)
              , s = (0,
            Y.useRef)(null)
              , i = e && !t;
            lg(vT.value?.toolOptions, t);
            const a = (0,
            Y.useCallback)((e=>{
                if (!i)
                    return s.current = e,
                    s.current
            }
            ), [i])
              , o = (0,
            Y.useCallback)(((e,t)=>i ? s.current || e.children.keys().next().value || ep(e, t) : s.current && e.children.get(s.current) ? s.current : e.children.keys().next().value || ep(e, t)), [i]);
            return (0,
            Y.useEffect)((()=>{
                e && ML(t)
            }
            ), [t, e]),
            (0,
            z.jsx)(Ah, {
                onFocusChange: n,
                children: (0,
                z.jsxs)(np, {
                    onChange: a,
                    onRefocus: o,
                    children: [(0,
                    z.jsx)(s2, {
                        readonly: i
                    }), (0,
                    z.jsx)(i2, {
                        readonly: i
                    }), (0,
                    z.jsx)(o2, {
                        readonly: i
                    }), (0,
                    z.jsx)(c2, {
                        readonly: i
                    }), (0,
                    z.jsx)(r2, {
                        readonly: i
                    }), (0,
                    z.jsx)(f2, {
                        readonly: i
                    }), (0,
                    z.jsx)(p2, {
                        readonly: i
                    }), (0,
                    z.jsx)(v2, {
                        readonly: i
                    }), (0,
                    z.jsx)(m2, {
                        readonly: i
                    }), (0,
                    z.jsx)(_2, {})]
                })
            })
        }
          , n2 = ({focusKey: e, title: t, readonly: n, hidden: s, leftDisabled: i, rightDisabled: a, hideArrows: o, uiTag: r, uiTagLeft: l, uiTagRight: c, children: u, onSelectLeft: d, onSelectRight: m})=>{
            const h = (i || !d) && (a || !m)
              , g = (0,
            Y.useMemo)((()=>({
                "Change Tool Option": h ? null : e=>{
                    cp(lp.dragSlider),
                    e < 0 ? d && !i && (d(),
                    l && ag(l)) : e > 0 && m && !a && (m(),
                    c && ag(c))
                }
            })), [h, i, d, m, a, l, c]);
            return (0,
            z.jsx)(Mg, {
                actions: g,
                children: (0,
                z.jsx)(Sp, {
                    focusKey: e,
                    className: Zu()(e2.item, n && e2.readonly, s && e2.hidden),
                    children: (0,
                    z.jsxs)("div", {
                        className: e2.itemContent,
                        children: [null != t && (0,
                        z.jsx)("div", {
                            className: e2.label,
                            children: t
                        }), (0,
                        z.jsx)(mT, {
                            uiTag: s ? void 0 : r,
                            disableBlinking: !0,
                            children: (0,
                            z.jsxs)("div", {
                                className: e2.content,
                                children: [!n && !o && (0,
                                z.jsx)(mT, {
                                    uiTag: l,
                                    children: (0,
                                    z.jsx)(tb, {
                                        disableHint: !0,
                                        tinted: !0,
                                        focusKey: Sg,
                                        src: "Media/Glyphs/ThickStrokeArrowLeft.svg",
                                        disabled: i,
                                        className: e2.arrowButton,
                                        onSelect: d
                                    })
                                }), u, !n && !o && (0,
                                z.jsx)(mT, {
                                    uiTag: c,
                                    children: (0,
                                    z.jsx)(tb, {
                                        disableHint: !0,
                                        tinted: !0,
                                        focusKey: Sg,
                                        src: "Media/Glyphs/ThickStrokeArrowRight.svg",
                                        disabled: a,
                                        className: e2.arrowButton,
                                        onSelect: m
                                    })
                                })]
                            })
                        })]
                    })
                })
            })
        }
        ;
        const s2 = ({readonly: e})=>{
            const t = Mp(sl(_L))
              , n = Mp(sl(vL))
              , s = Mp(sl(SL))
              , i = Mp(ll(xL, s))
              , a = (0,
            Y.useCallback)((e=>{
                t.length > 1 && void 0 !== t.find((t=>Ur(e, t))) ? NL(t.filter((t=>!Ur(e, t)))) : void 0 === t.find((t=>Ur(e, t))) && NL([...t, e])
            }
            ), [t])
              , o = (0,
            Y.useMemo)((()=>i.reduce(((e,t)=>(t.theme && e.add(t.theme),
            e)), new Set)), [i]);
            return n.length && o.size ? (0,
            z.jsx)(n2, {
                focusKey: "ThemesSection",
                leftDisabled: !0,
                rightDisabled: !0,
                title: (0,
                z.jsx)(_c.Toolbar.THEME_PANEL_TITLE, {}),
                readonly: e,
                uiTag: vT.value?.toolOptionsThemes,
                children: (0,
                z.jsx)(np, {
                    direction: kg.Horizontal,
                    children: n.map((e=>(0,
                    z.jsx)(BQ, {
                        title: (0,
                        z.jsx)(_c.ToolOptions.TOOLTIP_TITLE, {
                            hash: e.name
                        }),
                        description: (0,
                        z.jsx)(_c.ToolOptions.TOOLTIP_DESCRIPTION, {
                            hash: e.name
                        }),
                        children: (0,
                        z.jsx)(w1, {
                            multiSelect: !0,
                            focusKey: Dr(e.entity),
                            value: e.entity,
                            src: e.icon,
                            highlight: e.highlight,
                            selected: void 0 !== t.find((t=>Ur(e.entity, t))),
                            disabled: 1 === t.length && void 0 !== t.find((t=>Ur(e.entity, t))),
                            onSelect: a
                        })
                    }, Dr(e.entity))))
                })
            }) : null
        }
          , i2 = ({readonly: e})=>{
            const t = Mp(sl(EL))
              , n = Mp(sl(TL))
              , s = (0,
            Y.useCallback)((e=>{
                Ur(e, Zp) ? t.length > 0 ? wL([]) : wL(n.map((e=>e.entity))) : void 0 !== t.find((t=>Ur(e, t))) ? wL(t.filter((t=>!Ur(e, t)))) : wL([...t, e])
            }
            ), [t, n]);
            return n.length ? (0,
            z.jsx)(n2, {
                focusKey: "AssetPacksSection",
                title: (0,
                z.jsx)(_c.Toolbar.ASSET_PACKS_PANEL_TITLE, {}),
                readonly: e,
                uiTag: vT.value?.toolOptionsAssetPacks,
                hideArrows: !0,
                children: (0,
                z.jsxs)(np, {
                    direction: kg.Both,
                    children: [n.length > 1 && (0,
                    z.jsx)(Eg, {
                        tooltip: (0,
                        z.jsx)(_c.ToolOptions.TOOLTIP_TITLE, {
                            hash: "AssetPack.All"
                        }),
                        children: (0,
                        z.jsx)(w1, {
                            multiSelect: !0,
                            focusKey: Dr(Zp),
                            value: Zp,
                            src: "Media/Tools/Snap Options/All.svg",
                            selected: Gr(n.map((e=>e.entity)), t),
                            onSelect: s
                        })
                    }), n.map(((e,n)=>(0,
                    z.jsx)(Eg, {
                        tooltip: (0,
                        z.jsx)(_c.Assets.NAME, {
                            hash: e.name
                        }),
                        children: (0,
                        z.jsx)(w1, {
                            multiSelect: !0,
                            focusKey: `${Dr(e.entity)}-${n}`,
                            value: e.entity,
                            src: e.icon,
                            selected: void 0 !== t.find((t=>Ur(e.entity, t))),
                            highlight: e.highlight,
                            onSelect: s
                        })
                    }, n)))]
                })
            }) : null
        }
          , a2 = ()=>{}
          , o2 = ({readonly: e})=>{
            const t = Mp(sl(iP));
            lg(vT.value?.toolOptionsModes);
            const n = (0,
            Y.useCallback)((e=>NP(e)), [])
              , s = (0,
            Y.useCallback)((()=>{
                const e = Ew(t.modes, t.modes.findIndex((e=>e.index === t.modeIndex)), !0);
                e && n(e.index)
            }
            ), [t.modeIndex, t.modes, n])
              , i = (0,
            Y.useCallback)((()=>{
                const e = bw(t.modes, t.modes.findIndex((e=>e.index === t.modeIndex)), !0);
                e && n(e.index)
            }
            ), [t.modeIndex, t.modes, n]);
            if (t.modes.length < 2)
                return null;
            const a = t.modes.find((e=>e.index === t.modeIndex)) || t.modes[0]
              , o = "Object Tool" === t.id && ("Line" === t.modes.find((e=>e.index === t.modeIndex))?.id || "Curve" === t.modes.find((e=>e.index === t.modeIndex))?.id);
            return (0,
            z.jsxs)(z.Fragment, {
                children: [(0,
                z.jsx)(n2, {
                    focusKey: "ToolModesSection",
                    title: t.modes.length <= 7 ? (0,
                    z.jsx)(_c.Toolbar.TOOL_MODE_TITLE, {}) : null,
                    readonly: e,
                    uiTag: vT.value?.toolOptionsModes,
                    onSelectLeft: s,
                    onSelectRight: i,
                    children: (0,
                    z.jsx)(Zg, {
                        focused: a.id,
                        onChange: a2,
                        children: t.modes.map((e=>(0,
                        z.jsx)(mT, {
                            uiTag: vT.value?.toolOptionsModes + e.id,
                            children: (0,
                            z.jsx)(BQ, {
                                title: (0,
                                z.jsx)(_c.ToolOptions.TOOLTIP_TITLE, {
                                    hash: e.id
                                }),
                                description: (0,
                                z.jsx)(_c.ToolOptions.TOOLTIP_DESCRIPTION, {
                                    hash: e.id
                                }),
                                children: (0,
                                z.jsx)(w1, {
                                    focusKey: e.id,
                                    value: e.index,
                                    src: e.icon,
                                    selected: e.index === t.modeIndex,
                                    onSelect: n,
                                    uiTag: vT.value?.toolOptionsModes + e.id
                                })
                            }, e.id)
                        }, e.id)))
                    })
                }), o && (0,
                z.jsx)(G1, {})]
            })
        }
          , r2 = ({readonly: e})=>{
            const t = Mp(sl(QP))
              , n = Mp(sl(JP))
              , s = Mp(sl(eL))
              , i = Mp(sl(tL))
              , a = Mp(sl(nL))
              , o = Mp(sl(sL))
              , r = Mp(sl(aL))
              , l = Mp(sl(oL))
              , c = i <= a
              , u = i >= o
              , d = (0,
            Y.useCallback)((()=>dL(Od(u2(i, -10), a, o))), [i, o, a])
              , m = (0,
            Y.useCallback)((()=>dL(Od(u2(i, 10), a, o))), [i, o, a])
              , h = n <= r
              , g = n >= l
              , p = (0,
            Y.useCallback)((()=>{
                let e;
                e = n > 550 ? 100 : n > 125 ? 50 : 10,
                lL(Od(u2(n, -e), r, l))
            }
            ), [n, r, l])
              , f = (0,
            Y.useCallback)((()=>{
                let e;
                e = n > 475 ? 100 : n > 95 ? 50 : 10,
                lL(Od(u2(n, e), r, l))
            }
            ), [n, l, r])
              , x = s <= .01
              , v = s >= 1
              , _ = (0,
            Y.useCallback)((()=>{
                cL(Od(u2(s, -(s > .11 ? .05 : .01)), .01, 1))
            }
            ), [s])
              , b = (0,
            Y.useCallback)((()=>{
                cL(Od(u2(s, +(s > .095 ? .05 : .01)), .01, 1))
            }
            ), [s])
              , T = Mp(sl(iL))
              , E = (0,
            Y.useCallback)((()=>uL(u2(T, 15) % 360)), [T])
              , I = (0,
            Y.useCallback)((()=>uL((u2(T, -15) + 360) % 360)), [T])
              , S = Mp(sl(EP));
            return Ur(t, Zp) ? null : (0,
            z.jsxs)(z.Fragment, {
                children: [S && (0,
                z.jsx)(l2, {
                    selectedBrush: t,
                    readonly: e
                }), null != i && (0,
                z.jsx)(n2, {
                    focusKey: "BRUSH_HEIGHT",
                    title: (0,
                    z.jsx)(_c.Toolbar.BRUSH_HEIGHT, {}),
                    readonly: e,
                    uiTag: vT.value?.toolOptionsBrushSize,
                    leftDisabled: c,
                    onSelectLeft: d,
                    rightDisabled: u,
                    onSelectRight: m,
                    children: (0,
                    z.jsx)("div", {
                        className: e2.field,
                        children: (0,
                        z.jsx)(Oc, {
                            value: i,
                            unit: vc.NetElevation
                        })
                    })
                }), (0,
                z.jsx)(n2, {
                    focusKey: "BRUSH_SIZE",
                    title: (0,
                    z.jsx)(_c.Toolbar.BRUSH_SIZE, {}),
                    readonly: e,
                    uiTag: vT.value?.toolOptionsBrushSize,
                    leftDisabled: h,
                    onSelectLeft: p,
                    rightDisabled: g,
                    onSelectRight: f,
                    children: (0,
                    z.jsx)("div", {
                        className: e2.field,
                        children: (0,
                        z.jsx)(Oc, {
                            value: n,
                            unit: vc.Integer
                        })
                    })
                }), (0,
                z.jsx)(n2, {
                    focusKey: "BRUSH_STRENGTH",
                    title: (0,
                    z.jsx)(_c.Toolbar.BRUSH_STRENGTH, {}),
                    readonly: e,
                    uiTag: vT.value?.toolOptionsBrushStrength,
                    leftDisabled: x,
                    onSelectLeft: _,
                    rightDisabled: v,
                    onSelectRight: b,
                    children: (0,
                    z.jsx)("div", {
                        className: e2.field,
                        children: (0,
                        z.jsx)(Oc, {
                            value: 100 * s,
                            unit: vc.Percentage
                        })
                    })
                }), S && (0,
                z.jsx)(n2, {
                    focusKey: "BRUSH_ANGLE",
                    title: (0,
                    z.jsx)(_c.Toolbar.BRUSH_ANGLE, {}),
                    readonly: e,
                    onSelectLeft: I,
                    onSelectRight: E,
                    children: (0,
                    z.jsx)("div", {
                        className: e2.field,
                        children: (0,
                        z.jsx)(Oc, {
                            value: T,
                            unit: vc.Integer
                        })
                    })
                })]
            })
        }
          , l2 = ({selectedBrush: e, readonly: t})=>{
            const n = Mp(sl(ZP))
              , s = (0,
            Y.useMemo)((()=>n.find((t=>Ur(t.entity, e)))), [n, e])
              , i = (0,
            Y.useCallback)((()=>{
                if (n.length > 1) {
                    const t = n.findIndex((t=>Ur(t.entity, e)))
                      , s = Math.max(t + 1, 0) % n.length;
                    rL(n[s].entity)
                }
            }
            ), [n, e])
              , a = (0,
            Y.useCallback)((()=>{
                if (n.length > 1) {
                    const t = n.findIndex((t=>Ur(t.entity, e)))
                      , s = Math.max(t + n.length - 1, 0) % n.length;
                    rL(n[s].entity)
                }
            }
            ), [n, e]);
            return (0,
            z.jsx)(n2, {
                focusKey: "BrushSelectionSection",
                title: (0,
                z.jsx)(_c.Toolbar.BRUSH, {}),
                readonly: t,
                leftDisabled: n.length <= 1,
                onSelectLeft: a,
                rightDisabled: n.length <= 1,
                onSelectRight: i,
                children: (0,
                z.jsx)("div", {
                    className: e2.wideField,
                    children: s?.name
                })
            })
        }
          , c2 = ({readonly: e})=>{
            const t = Mp(sl(jL))
              , n = (0,
            Y.useRef)(t);
            n.current = t;
            const s = (0,
            Y.useCallback)((e=>{
                let t = n.current;
                t & e ? t ^= e : t |= e,
                CL(t || 1)
            }
            ), []);
            return t === gL.Disabled ? null : (0,
            z.jsx)(n2, {
                focusKey: "VegatationAgeSection",
                leftDisabled: !0,
                rightDisabled: !0,
                readonly: e,
                title: (0,
                z.jsx)(_c.Toolbar.VEGETATION_AGE_PANEL_TITLE, {}),
                uiTag: vT.value?.toolOptionsVegatationAge,
                children: (0,
                z.jsx)(np, {
                    direction: kg.Horizontal,
                    children: F1.map((e=>(0,
                    z.jsx)(BQ, {
                        title: null,
                        description: (0,
                        z.jsx)(_c.ToolOptions.TOOLTIP_DESCRIPTION, {
                            hash: e.tooltipHash
                        }),
                        children: (0,
                        z.jsx)(w1, {
                            multiSelect: !0,
                            focusKey: `vegetation-age:${e.value}`,
                            value: e.value,
                            src: e.src,
                            selected: !!(t & e.value),
                            onSelect: s
                        })
                    }, e.tooltipHash)))
                })
            })
        }
        ;
        function u2(e, t) {
            return t * Math.round(e / t) + t
        }
        const d2 = {
            position: "absolute",
            top: "100%",
            pointerEvents: "none",
            opacity: 0
        }
          , m2 = ({readonly: e})=>{
            const t = Mp(sl(oP))
              , n = Mp(sl(lP))
              , s = Mp(sl(rP))
              , i = Mp(sl(cP))
              , a = h2(t)
              , o = (s & n) === n
              , r = (0,
            Y.useCallback)((()=>{
                RP(o ? s & ~n : s | n)
            }
            ), [o, n, s])
              , l = (0,
            Y.useCallback)((e=>{
                const t = 1 << e;
                RP(0 != (s & t) ? s & ~t : s | t)
            }
            ), [s]);
            if (!a.length)
                return null;
            const c = a.filter((e=>"ContourLines" !== i[e]))
              , u = a.filter((e=>"ContourLines" === i[e]))
              , d = (0,
            z.jsxs)("div", {
                style: e ? d2 : void 0,
                children: [c.length > 1 && (0,
                z.jsx)(n2, {
                    title: (0,
                    z.jsx)(_c.ToolOptions.TOOLTIP_SNAP_ALL, {}),
                    focusKey: "SNAP_FOCUS_TOGGLE_ALL",
                    onSelectLeft: r,
                    onSelectRight: r,
                    children: (0,
                    z.jsx)(N1, {
                        src: "Media/Tools/Snap Options/All.svg",
                        selected: o,
                        onSelect: r
                    })
                }), c.map((t=>{
                    const n = ()=>l(t);
                    return (0,
                    z.jsx)(n2, {
                        focusKey: `snap-indice-${t}`,
                        title: (0,
                        z.jsx)(_c.ToolOptions.TOOLTIP, {
                            hash: i[t]
                        }),
                        readonly: e,
                        hidden: e,
                        onSelectLeft: n,
                        onSelectRight: n,
                        children: (0,
                        z.jsx)(w1, {
                            value: t,
                            src: "Media/Tools/Snap Options/" + i[t] + ".svg",
                            selected: 0 != (s & 1 << t),
                            onSelect: l
                        })
                    }, t)
                }
                )), u.map((t=>{
                    const n = ()=>l(t);
                    return (0,
                    z.jsx)(n2, {
                        focusKey: `contour-indice-${t}`,
                        title: (0,
                        z.jsx)(_c.ToolOptions.TOOLTIP, {
                            hash: i[t]
                        }),
                        readonly: e,
                        hidden: e,
                        onSelectLeft: n,
                        onSelectRight: n,
                        children: (0,
                        z.jsx)(w1, {
                            value: t,
                            shortcut: "Toggle Contour Lines",
                            src: "Media/Tools/Snap Options/" + i[t] + ".svg",
                            selected: 0 != (s & 1 << t),
                            onSelect: l
                        })
                    }, t)
                }
                ))]
            })
              , m = (0,
            z.jsxs)("div", {
                style: e ? void 0 : d2,
                children: [!!c.length && (0,
                z.jsxs)(n2, {
                    title: (0,
                    z.jsx)(_c.Toolbar.SNAPPING_TITLE, {}),
                    focusKey: Sg,
                    readonly: !0,
                    children: [c.length > 1 && (0,
                    z.jsx)(N1, {
                        focusKey: Sg,
                        src: "Media/Tools/Snap Options/All.svg",
                        selected: o
                    }), c.map((e=>(0,
                    z.jsx)(w1, {
                        focusKey: Sg,
                        value: e,
                        src: "Media/Tools/Snap Options/" + i[e] + ".svg",
                        selected: 0 != (s & 1 << e)
                    }, e)))]
                }), !!u.length && (0,
                z.jsx)(n2, {
                    focusKey: Sg,
                    title: (0,
                    z.jsx)(_c.Toolbar.CONTOUR_LINES_TITLE, {}),
                    readonly: !0,
                    children: u.map((e=>(0,
                    z.jsx)(w1, {
                        focusKey: Sg,
                        value: e,
                        shortcut: "Toggle Contour Lines",
                        src: "Media/Tools/Snap Options/" + i[e] + ".svg",
                        selected: 0 != (s & 1 << e)
                    }, e)))
                })]
            });
            return (0,
            z.jsx)(mT, {
                uiTag: vT.value?.toolOptionsSnapping,
                children: (0,
                z.jsxs)("div", {
                    children: [m, d]
                })
            })
        }
          , h2 = e=>(0,
        Y.useMemo)((()=>{
            const t = [];
            let n = 0;
            for (; e >> n > 0; )
                0 != (e >> n & 1) && t.push(n),
                n++;
            return t
        }
        ), [e])
          , g2 = [10, 5, 2.5, 1.25]
          , p2 = ({readonly: e})=>{
            const t = Mp(sl(uP))
              , n = Mp(sl(dP))
              , s = Mp(sl(mP))
              , i = n <= t.min
              , a = n >= t.max
              , o = s <= g2[g2.length - 1]
              , r = (0,
            Y.useCallback)((()=>{
                for (let e = 0; e < g2.length; e++)
                    if (g2[e] < s) {
                        MP(g2[e]),
                        cp(lp.decreaseElevation),
                        vT.value?.toolOptionsElevationStep && ag(vT.value?.toolOptionsElevationStep);
                        break
                    }
            }
            ), [s])
              , l = s >= g2[0]
              , c = (0,
            Y.useCallback)((()=>{
                for (let e = g2.length - 1; e >= 0; e--)
                    if (g2[e] > s) {
                        MP(g2[e]),
                        cp(lp.increaseElevation),
                        vT.value?.toolOptionsElevationStep && ag(vT.value?.toolOptionsElevationStep);
                        break
                    }
            }
            ), [s])
              , u = (0,
            Y.useMemo)((()=>({
                "Decrease Elevation": i ? null : ()=>LP(),
                "Increase Elevation": a ? null : ()=>PP()
            })), [i, a]);
            return t.min >= t.max ? null : (0,
            z.jsxs)(Mg, {
                actions: u,
                ignoreFocusState: !0,
                children: [(0,
                z.jsx)(n2, {
                    focusKey: "elevation",
                    title: (0,
                    z.jsx)(_c.Toolbar.ELEVATION_TITLE, {}),
                    uiTag: vT.value?.toolOptionsElevation,
                    uiTagLeft: vT.value?.toolOptionsElevationDecrease,
                    uiTagRight: vT.value?.toolOptionsElevationIncrease,
                    readonly: e,
                    leftDisabled: i,
                    onSelectLeft: LP,
                    rightDisabled: a,
                    onSelectRight: PP,
                    children: (0,
                    z.jsx)("div", {
                        className: e2.numberField,
                        children: (0,
                        z.jsx)(Oc, {
                            value: n,
                            unit: vc.NetElevation
                        })
                    })
                }, "elevation"), (0,
                z.jsx)(n2, {
                    focusKey: "elevationStep",
                    title: (0,
                    z.jsx)(_c.ToolOptions.TOOLTIP_ELEVATION_STEP, {}),
                    hidden: e,
                    uiTag: vT.value?.toolOptionsElevationStep,
                    onSelectLeft: o ? void 0 : r,
                    onSelectRight: l ? void 0 : c,
                    children: (0,
                    z.jsx)("div", {
                        className: e2.numberField,
                        children: (0,
                        z.jsx)(Oc, {
                            value: s,
                            unit: vc.NetElevation
                        })
                    })
                }, "elevationStep")]
            })
        }
          , f2 = ({readonly: e})=>{
            const t = Mp(sl(iP))
              , n = Mp(sl(fP))
              , s = Mp(sl(xP))
              , i = (0,
            Y.useCallback)((()=>{
                FP(!s),
                cp(s ? lp.increaseElevation : lp.decreaseElevation)
            }
            ), [s]);
            return t.id !== GP && n ? (0,
            z.jsx)(n2, {
                focusKey: "UndergroundModeSection",
                title: (0,
                z.jsx)(_c.Toolbar.UNDERGROUND_MODE_TITLE, {}),
                readonly: e,
                uiTag: vT.value?.toolOptionsUnderground,
                onSelectLeft: i,
                onSelectRight: i,
                children: (0,
                z.jsx)(N1, {
                    src: "Media/Tools/Net Tool/Underground.svg",
                    disabled: !n,
                    selected: s,
                    onSelect: i,
                    shortcut: t.id === BP ? s ? "Exit Underground Mode" : "Enter Underground Mode" : void 0
                })
            }) : null
        }
          , x2 = [2, 4, 8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96]
          , v2 = ({readonly: e})=>{
            const t = Mp(sl(hP))
              , n = Mp(sl(gP))
              , s = Mp(sl(pP))
              , i = x2
              , a = s <= i[0]
              , o = (0,
            Y.useCallback)((()=>{
                for (let e = i.length - 1; e >= 0; e--)
                    if (i[e] < s) {
                        DP(i[e]);
                        break
                    }
            }
            ), [s, i])
              , r = s >= i[i.length - 1]
              , l = (0,
            Y.useCallback)((()=>{
                for (let e = 0; e < i.length; e++)
                    if (i[e] > s) {
                        DP(i[e]);
                        break
                    }
            }
            ), [s, i]);
            return t ? (0,
            z.jsxs)("div", {
                className: Zu()(e && !n && e2.hidden),
                children: [(0,
                z.jsx)(n2, {
                    focusKey: "ParallelModeSection",
                    title: (0,
                    z.jsx)(_c.Toolbar.PARALLEL_MODE_TITLE, {}),
                    hidden: e,
                    onSelectLeft: kP,
                    onSelectRight: kP,
                    children: (0,
                    z.jsx)(N1, {
                        src: "Media/Tools/Net Tool/Parallel.svg",
                        selected: n,
                        onSelect: kP,
                        uiTag: e ? void 0 : vT.value?.toolOptionsParallelMode
                    })
                }, "parallelMode"), n && (0,
                z.jsx)(n2, {
                    focusKey: "ParallelOffsetSection",
                    title: (0,
                    z.jsx)(_c.Toolbar.PARALLEL_OFFSET_TITLE, {}),
                    readonly: e,
                    leftDisabled: a,
                    onSelectLeft: o,
                    rightDisabled: r,
                    onSelectRight: l,
                    uiTag: vT.value?.toolOptionsParallelModeOffset,
                    uiTagLeft: vT.value?.toolOptionsParallelModeOffsetDecrease,
                    uiTagRight: vT.value?.toolOptionsParallelModeOffsetIncrease,
                    children: (0,
                    z.jsx)("div", {
                        className: e2.numberField,
                        children: (0,
                        z.jsx)(Oc, {
                            value: s / 8,
                            unit: vc.FloatTwoFractions
                        })
                    })
                }, "parallelOffset")]
            }) : null
        }
          , _2 = ()=>{
            const e = Mp(sl(iP))
              , t = Mp(sl(bP))
              , n = Mp(sl(TP))
              , s = (0,
            Y.useCallback)((e=>jP(e)), []);
            return e.id !== GP && t ? (0,
            z.jsx)(Sp, {
                className: Zu()(e2.item, e2.readonly),
                focusKey: "ColorSection",
                children: (0,
                z.jsxs)("div", {
                    className: e2.itemContent,
                    children: [(0,
                    z.jsx)("div", {
                        className: e2.label,
                        children: (0,
                        z.jsx)(_c.ToolOptions.COLOR_TITLE, {
                            hash: e.id
                        })
                    }), (0,
                    z.jsx)("div", {
                        className: e2.content,
                        children: (0,
                        z.jsx)(v1, {
                            className: e2.colorField,
                            selectAction: "Toggle Tool Color Picker",
                            popupDirection: "up",
                            value: n,
                            onChange: s
                        })
                    })]
                })
            }) : null
        }
        ;
        X.add("game-ui/game/components/tool-options/gamepad-tool-options/gamepad-tool-options.tsx", {
            get GamepadToolOptions() {
                return t2
            },
            set GamepadToolOptions(e) {
                t2 = e
            },
            get Section() {
                return n2
            },
            set Section(e) {
                n2 = e
            }
        });
        let b2 = {
            "tool-options-panel": "tool-options-panel_Se6",
            toolOptionsPanel: "tool-options-panel_Se6",
            "gamepad-active": "gamepad-active_Qvi",
            gamepadActive: "gamepad-active_Qvi",
            enter: "enter_YDH",
            "exit-active": "exit-active_hKG",
            exitActive: "exit-active_hKG",
            "enter-active": "enter-active_bG3",
            enterActive: "enter-active_bG3",
            exit: "exit_oe7",
            wrapper: "wrapper_eKY",
            hints: "hints_R2B",
            hint: "hint_Bep"
        };
        X.add("game-ui/game/components/tool-options/tool-options-panel.module.scss", {
            get classes() {
                return b2
            },
            set classes(e) {
                Object.assign(b2, e)
            }
        });
        const T2 = b2;
        var E2 = Y.forwardRef((function({focusKey: e, className: t, onClose: n, showHint: s}, i) {
            const [a,o] = (0,
            Y.useState)(!1);
            return (0,
            z.jsxs)("div", {
                className: T2.wrapper,
                children: [s && (0,
                z.jsx)("div", {
                    className: T2.hints,
                    children: (0,
                    z.jsx)(UT, {
                        action: a ? "Close" : "Tool Options"
                    })
                }), (0,
                z.jsx)(mT, {
                    uiTag: vT.value?.toolOptions,
                    disableBlinking: !0,
                    children: (0,
                    z.jsx)(mh, {
                        styles: T2,
                        children: (0,
                        z.jsx)(I2, {
                            focusKey: e,
                            className: t,
                            onClose: n,
                            onFocused: o,
                            ref: i
                        })
                    })
                })]
            })
        }
        ))
          , I2 = Y.forwardRef((function({onFocused: e, ...t}, n) {
            const s = (0,
            Y.useRef)(null)
              , i = gd(n, s)
              , [a,o] = (0,
            Y.useState)(!1)
              , r = Dm()
              , l = (0,
            Y.useMemo)((()=>new ResizeObserver((e=>{
                if (e[0]) {
                    const t = Math.round(e[0].borderBoxSize[0].blockSize)
                      , n = r ? 0 : -24;
                    document.documentElement.style.setProperty("--infoLayoutBottom", t - n + "px")
                }
            }
            ))), [r])
              , c = (0,
            Y.useCallback)((t=>{
                e?.(t),
                o(t)
            }
            ), [e]);
            return (0,
            Y.useEffect)((()=>{
                if (s.current)
                    return l.observe(s.current),
                    ()=>l.disconnect()
            }
            ), [l]),
            (0,
            z.jsx)(ap, {
                focusKey: t.focusKey,
                children: (0,
                z.jsx)(Fg, {
                    onAction: t.onClose,
                    children: (0,
                    z.jsxs)(Ip, {
                        ref: i,
                        onFocusChange: c,
                        className: Zu()(T2.toolOptionsPanel, r && T2.gamepadActive, t.className),
                        children: [(0,
                        z.jsx)(Rp, {
                            children: r ? (0,
                            z.jsx)(t2, {}) : (0,
                            z.jsx)(A1, {})
                        }), (0,
                        z.jsx)(UT, {
                            action: "Move Horizontal",
                            active: a,
                            className: T2.hint
                        })]
                    })
                })
            })
        }
        ));
        function S2() {
            const e = sl(vL)
              , t = sl(TL)
              , n = sl(iP)
              , s = sl(QP)
              , i = sl(oP)
              , a = sl(uP)
              , o = sl(hP)
              , r = sl(fP)
              , l = sl(bP);
            return n.id !== $P && (e.length > 0 || t.length > 0 || n.modes.length > 1 || 0 !== i || a.min < a.max || o || l || n.id !== GP && r || !Ur(s, Zp))
        }
        X.add("game-ui/game/components/tool-options/tool-options-panel.tsx", {
            get ToolOptionsPanel() {
                return E2
            },
            set ToolOptionsPanel(e) {
                E2 = e
            },
            get ToolOptions() {
                return I2
            },
            set ToolOptions(e) {
                I2 = e
            },
            get useToolOptionsVisible() {
                return S2
            },
            set useToolOptionsVisible(e) {
                S2 = e
            }
        });
        const y2 = "editorTutorials";
        var j2 = $r(y2, "tutorialsDisabled")
          , C2 = $r(y2, "tutorialsEnabled")
          , N2 = $r(y2, "introActive")
          , w2 = ($r(y2, "activeList"),
        $r(y2, "next"),
        $r(y2, "categories"))
          , O2 = $r(y2, "listIntroActive")
          , P2 = $r(y2, "listOutroActive")
          , L2 = $r(y2, "activeTutorial")
          , A2 = ($r(y2, "activeTutorialPhase"),
        $r(y2, "advisorPanelVisible"),
        el(y2, "completeListIntro"));
        X.add("game-ui/game/data-binding/editor-tutorial-bindings.ts", {
            get tutorialsDisabled() {
                return tutorialsDisabled
            },
            set tutorialsDisabled(e) {
                tutorialsDisabled = e
            },
            get tutorialsEnabled() {
                return tutorialsEnabled
            },
            set tutorialsEnabled(e) {
                tutorialsEnabled = e
            },
            get tutorialIntroActive() {
                return tutorialIntroActive
            },
            set tutorialIntroActive(e) {
                tutorialIntroActive = e
            },
            get activeTutorialList() {
                return activeTutorialList
            },
            set activeTutorialList(e) {
                activeTutorialList = e
            },
            get nextTutorial() {
                return nextTutorial
            },
            set nextTutorial(e) {
                nextTutorial = e
            },
            get tutorialCategories() {
                return tutorialCategories
            },
            set tutorialCategories(e) {
                tutorialCategories = e
            },
            get listIntroActive() {
                return listIntroActive
            },
            set listIntroActive(e) {
                listIntroActive = e
            },
            get listOutroActive() {
                return listOutroActive
            },
            set listOutroActive(e) {
                listOutroActive = e
            },
            get activeTutorial() {
                return activeTutorial
            },
            set activeTutorial(e) {
                activeTutorial = e
            },
            get activeTutorialPhase() {
                return activeTutorialPhase
            },
            set activeTutorialPhase(e) {
                activeTutorialPhase = e
            },
            get advisorPanelVisible() {
                return advisorPanelVisible
            },
            set advisorPanelVisible(e) {
                advisorPanelVisible = e
            },
            get completeListIntro() {
                return A2
            },
            set completeListIntro(e) {
                A2 = e
            }
        });
        let M2 = {
            "background-process-indicator": "background-process-indicator_NS7",
            backgroundProcessIndicator: "background-process-indicator_NS7",
            spinner: "spinner_TZP",
            rotate: "rotate_dOE",
            message: "message_UX3"
        };
        X.add("game-ui/common/background-process-indicator/background-process-indicator.module.scss", {
            get classes() {
                return M2
            },
            set classes(e) {
                Object.assign(M2, e)
            }
        });
        const R2 = M2;
        var k2 = (0,
        Y.memo)((function({className: e}) {
            const t = sl(AE);
            return t ? (0,
            z.jsxs)("div", {
                className: Zu()(R2.backgroundProcessIndicator, e),
                children: [(0,
                z.jsx)("div", {
                    className: R2.message,
                    children: (0,
                    z.jsx)(cc, {
                        id: t
                    })
                }), (0,
                z.jsx)(Z_, {
                    src: "Media/Glyphs/ArrowCircular.svg",
                    className: R2.spinner
                })]
            }) : null
        }
        ));
        X.add("game-ui/common/background-process-indicator/background-process-indicator.tsx", {
            get BackgroundProcessIndicator() {
                return k2
            },
            set BackgroundProcessIndicator(e) {
                k2 = e
            }
        });
        let D2 = {
            "climate-field": "climate-field_dIy field_eKJ",
            climateField: "climate-field_dIy field_eKJ",
            weather: "weather_dXo",
            "weather-container": "weather-container_L1D",
            weatherContainer: "weather-container_L1D",
            "celestial-object": "celestial-object_su7",
            celestialObject: "celestial-object_su7",
            active: "active_k1G",
            obstructed: "obstructed_oBa",
            sun: "sun_XMt celestial-object_su7",
            moon: "moon_TlF celestial-object_su7",
            "weather-icon": "weather-icon_BeV",
            weatherIcon: "weather-icon_BeV",
            temperature: "temperature_CiN",
            season: "season_js3",
            "season-hidden": "season-hidden_Y_1",
            seasonHidden: "season-hidden_Y_1"
        };
        X.add("game-ui/game/components/toolbar/bottom/climate-field/climate-field.module.scss", {
            get classes() {
                return D2
            },
            set classes(e) {
                Object.assign(D2, e)
            }
        });
        const F2 = D2;
        var U2 = ({hideSeason: e, theme: t})=>{
            const n = sl(uj)
              , s = sl(dj)
              , i = ol(mj, ((e,t)=>{
                Math.round(e) !== Math.round(t) && o(e)
            }
            ))
              , [a,o] = (0,
            Y.useState)(i)
              , r = function(e) {
                switch (e) {
                case BO.Sunrise:
                case BO.Day:
                case BO.Sunset:
                    return !1;
                default:
                    return !0
                }
            }(sl(KO));
            return (0,
            z.jsx)(BQ, {
                title: (0,
                z.jsx)(_c.Main.TOOLTIP_TITLE_WEATHER, {}),
                description: (0,
                z.jsx)(_c.Main.TOOLTIP_DESCRIPTION_WEATHER, {}),
                children: (0,
                z.jsxs)(Sp, {
                    className: Zu()(F2.climateField, t?.climateField, {
                        [F2.seasonHidden]: e
                    }),
                    children: [(0,
                    z.jsx)("div", {
                        className: Zu()(F2.weather, t?.weather),
                        children: (0,
                        z.jsxs)("div", {
                            className: F2.weatherContainer,
                            children: [(0,
                            z.jsx)("img", {
                                src: "Media/Game/Climate/Sun.svg",
                                className: Zu()(F2.sun, !r && F2.active, s > cj.Few && F2.obstructed)
                            }), (0,
                            z.jsx)("img", {
                                src: "Media/Game/Climate/Moon.svg",
                                className: Zu()(F2.moon, r && F2.active, s > cj.Few && F2.obstructed)
                            }), (0,
                            z.jsx)("img", {
                                src: "Media/Game/Climate/Few.svg",
                                className: Zu()(F2.weatherIcon, s === cj.Few && F2.active)
                            }), (0,
                            z.jsx)("img", {
                                src: "Media/Game/Climate/Scattered.svg",
                                className: Zu()(F2.weatherIcon, s === cj.Scattered && F2.active)
                            }), (0,
                            z.jsx)("img", {
                                src: "Media/Game/Climate/Broken.svg",
                                className: Zu()(F2.weatherIcon, s === cj.Broken && F2.active)
                            }), (0,
                            z.jsx)("img", {
                                src: "Media/Game/Climate/Overcast.svg",
                                className: Zu()(F2.weatherIcon, s === cj.Overcast && F2.active)
                            }), (0,
                            z.jsx)("img", {
                                src: "Media/Game/Climate/Rain.svg",
                                className: Zu()(F2.weatherIcon, s === cj.Rain && F2.active)
                            }), (0,
                            z.jsx)("img", {
                                src: "Media/Game/Climate/Snow.svg",
                                className: Zu()(F2.weatherIcon, s === cj.Snow && F2.active)
                            }), (0,
                            z.jsx)("img", {
                                src: "Media/Game/Climate/Hail.svg",
                                className: Zu()(F2.weatherIcon, s === cj.Hail && F2.active)
                            }), (0,
                            z.jsx)("img", {
                                src: "Media/Game/Climate/Storm.svg",
                                className: Zu()(F2.weatherIcon, s === cj.Storm && F2.active)
                            }), (0,
                            z.jsx)("div", {
                                className: Zu()(F2.temperature, t?.temperature),
                                children: (0,
                                z.jsx)(Oc, {
                                    value: a,
                                    unit: vc.Temperature
                                })
                            })]
                        })
                    }), !e && (0,
                    z.jsxs)(z.Fragment, {
                        children: [(0,
                        z.jsx)(WQ, {}), (0,
                        z.jsx)("div", {
                            className: Zu()(F2.season, t?.season),
                            children: null != n && (0,
                            z.jsx)(cc, {
                                id: n
                            })
                        })]
                    })]
                })
            })
        }
        ;
        X.add("game-ui/game/components/toolbar/bottom/climate-field/climate-field.tsx", {
            get ClimateField() {
                return U2
            },
            set ClimateField(e) {
                U2 = e
            }
        });
        const B2 = "editorBottomBar";
        var G2 = $r(B2, "timeOfDay", 0)
          , V2 = $r(B2, "date", 0)
          , H2 = $r(B2, "cloudiness", 0)
          , K2 = e=>tl(B2, "setTimeOfDay", e)
          , W2 = ()=>tl(B2, "resetTimeOfDay")
          , z2 = e=>tl(B2, "setDate", e)
          , Y2 = ()=>tl(B2, "resetDate")
          , $2 = e=>tl(B2, "setCloudiness", e)
          , q2 = ()=>tl(B2, "resetCloudiness");
        X.add("game-ui/editor/data-binding/editor-bottom-bar-bindings.ts", {
            get timeOfDay() {
                return timeOfDay
            },
            set timeOfDay(e) {
                timeOfDay = e
            },
            get date() {
                return date
            },
            set date(e) {
                date = e
            },
            get cloudiness() {
                return cloudiness
            },
            set cloudiness(e) {
                cloudiness = e
            },
            get setTimeOfDay() {
                return K2
            },
            set setTimeOfDay(e) {
                K2 = e
            },
            get resetTimeOfDay() {
                return W2
            },
            set resetTimeOfDay(e) {
                W2 = e
            },
            get setDate() {
                return z2
            },
            set setDate(e) {
                z2 = e
            },
            get resetDate() {
                return Y2
            },
            set resetDate(e) {
                Y2 = e
            },
            get setCloudiness() {
                return $2
            },
            set setCloudiness(e) {
                $2 = e
            },
            get resetCloudiness() {
                return q2
            },
            set resetCloudiness(e) {
                q2 = e
            }
        });
        let X2 = {
            "bottom-bar": "bottom-bar_ODl",
            bottomBar: "bottom-bar_ODl",
            "bp-indicator": "bp-indicator_RBs",
            bpIndicator: "bp-indicator_RBs",
            space: "space_u2B",
            button: "button_wKY",
            "button-highlight": "button-highlight_lZc",
            buttonHighlight: "button-highlight_lZc",
            sliders: "sliders_H5X",
            slider: "slider_aPR",
            "slider-container": "slider-container_Fkn",
            sliderContainer: "slider-container_Fkn",
            aside: "aside_uAL",
            controls: "controls_tq0",
            modes: "modes_Bd5",
            "inspector-modes": "inspector-modes_ur5",
            inspectorModes: "inspector-modes_ur5"
        };
        X.add("game-ui/editor/components/bottom-bar/bottom-bar.module.scss", {
            get classes() {
                return X2
            },
            set classes(e) {
                Object.assign(X2, e)
            }
        });
        const Q2 = X2;
        let Z2 = {
            button: "button_MPc",
            hint: "hint_l3s"
        };
        X.add("game-ui/editor/components/bottom-bar/bottom-bar-floating-hint-button.module.scss", {
            get classes() {
                return Z2
            },
            set classes(e) {
                Object.assign(Z2, e)
            }
        });
        const J2 = Z2;
        let e5 = {
            button: "button_hIJ item-mouse-states_Fmi item-focused_FuT",
            hint: "hint_LGc"
        };
        X.add("game-ui/editor/components/bottom-bar/bottom-bar-reset-button.module.scss", {
            get classes() {
                return e5
            },
            set classes(e) {
                Object.assign(e5, e)
            }
        });
        const t5 = e5;
        var n5 = ({className: e, onPauseMenuToggle: t})=>{
            const n = sl(V2)
              , s = sl(G2)
              , i = sl(H2)
              , a = sl(j2);
            return (0,
            z.jsx)(np, {
                allowLooping: !0,
                direction: kg.Horizontal,
                children: (0,
                z.jsxs)("div", {
                    className: Zu()(Q2.bottomBar, e),
                    children: [(0,
                    z.jsxs)("div", {
                        className: Q2.controls,
                        children: [(0,
                        z.jsxs)("div", {
                            className: Q2.aside,
                            children: [(0,
                            z.jsx)(QQ, {
                                disablePauseAnimation: !0,
                                editor: !0
                            }), (0,
                            z.jsx)(Ep, {
                                children: (0,
                                z.jsx)(U2, {
                                    hideSeason: !0
                                })
                            })]
                        }), (0,
                        z.jsxs)("div", {
                            className: Q2.sliders,
                            children: [(0,
                            z.jsx)(mT, {
                                uiTag: vT.value?.resetTODButton,
                                editor: !0,
                                children: (0,
                                z.jsx)(s5, {
                                    value: s,
                                    onChange: K2,
                                    icon: "Media/Editor/Time.svg",
                                    onReset: W2,
                                    sliderTooltip: (0,
                                    z.jsx)(_c.Editor.TIME_OF_DAY, {}),
                                    resetTooltip: (0,
                                    z.jsx)(_c.Editor.RESET_TIME_OF_DAY, {})
                                })
                            }), (0,
                            z.jsx)(s5, {
                                value: n,
                                onChange: z2,
                                icon: "Media/Editor/Date.svg",
                                onReset: Y2,
                                sliderTooltip: (0,
                                z.jsx)(_c.Editor.TIME_OF_YEAR, {}),
                                resetTooltip: (0,
                                z.jsx)(_c.Editor.RESET_TIME_OF_YEAR, {})
                            }), (0,
                            z.jsx)(s5, {
                                value: i,
                                onChange: $2,
                                icon: "Media/Editor/Weather.svg",
                                onReset: q2,
                                sliderTooltip: (0,
                                z.jsx)(_c.Editor.CLOUDINESS, {}),
                                resetTooltip: (0,
                                z.jsx)(_c.Editor.RESET_CLOUDINESS, {})
                            })]
                        }), (0,
                        z.jsx)("div", {
                            children: (0,
                            z.jsx)(k2, {
                                className: Q2.bpIndicator
                            })
                        })]
                    }), (0,
                    z.jsxs)("div", {
                        className: Q2.modes,
                        children: [(0,
                        z.jsxs)("div", {
                            className: Q2.inspectorModes,
                            children: [!a && (0,
                            z.jsx)(mT, {
                                uiTag: vT.value?.tutorialsToggle,
                                editor: !0,
                                children: (0,
                                z.jsx)(a5, {})
                            }), (0,
                            z.jsx)(i5, {
                                cameraMode: W0.FirstPerson,
                                icon: "Media/Editor/CinematicCameraOn.svg",
                                offIcon: "Media/Editor/CinematicCameraOff.svg",
                                tooltip: (0,
                                z.jsx)(_c.PhotoMode.TOGGLE_FIRST_PERSON_MODE, {})
                            }), (0,
                            z.jsx)(i5, {
                                cameraMode: W0.Orbit,
                                icon: "Media/Game/Icons/Orbit.svg",
                                tooltip: (0,
                                z.jsx)(_c.PhotoMode.TOGGLE_ORBIT_MODE, {})
                            })]
                        }), (0,
                        z.jsx)(Eg, {
                            tooltip: (0,
                            z.jsx)(_c.Common.PAUSE_MENU_TOGGLE_TOOLTIP, {}),
                            children: (0,
                            z.jsx)(tb, {
                                tinted: !0,
                                src: "Media/Glyphs/Gear.svg",
                                className: Q2.button,
                                onSelect: t,
                                theme: J2
                            })
                        })]
                    })]
                })
            })
        }
        ;
        const s5 = ({value: e, onChange: t, icon: n, onReset: s, sliderTooltip: i, resetTooltip: a})=>(0,
        z.jsxs)("div", {
            className: Q2.slider,
            children: [(0,
            z.jsx)(Eg, {
                tooltip: a,
                children: (0,
                z.jsx)(tb, {
                    src: n,
                    onSelect: s,
                    theme: t5
                })
            }), (0,
            z.jsx)(Ip, {
                className: Q2.sliderContainer,
                children: (0,
                z.jsx)(Op, {
                    children: (0,
                    z.jsx)(Eg, {
                        tooltip: i,
                        children: (0,
                        z.jsx)(AA, {
                            value: e,
                            start: 0,
                            end: 1,
                            noFill: !0,
                            onChange: t
                        })
                    })
                })
            })]
        })
          , i5 = ({cameraMode: e, icon: t, offIcon: n, tooltip: s})=>{
            const i = sl(n1) === e
              , a = (0,
            Y.useCallback)((()=>{
                s1(i ? W0.Default : e)
            }
            ), [i, e])
              , o = void 0 === n || i ? t : n;
            return (0,
            z.jsx)(Eg, {
                tooltip: s,
                children: (0,
                z.jsx)(tb, {
                    src: o,
                    className: Zu()(Q2.button, i && Q2.buttonHighlight),
                    onSelect: a,
                    theme: J2
                })
            })
        }
          , a5 = ()=>{
            const e = sl(i1)
              , t = "Media/Glyphs/Close.svg"
              , n = (0,
            Y.useCallback)((()=>{
                a1()
            }
            ), [])
              , s = e ? t : "Media/Glyphs/Advisor.svg";
            return (0,
            z.jsx)(Eg, {
                tooltip: (0,
                z.jsx)(_c.Tutorials.ADVISOR_TITLE, {}),
                children: (0,
                z.jsx)(tb, {
                    tinted: !0,
                    src: s,
                    className: Zu()(Q2.button),
                    onSelect: n,
                    theme: J2
                })
            })
        }
        ;
        X.add("game-ui/editor/components/bottom-bar/bottom-bar.tsx", {
            get BottomBar() {
                return n5
            },
            set BottomBar(e) {
                n5 = e
            }
        });
        var o5 = Y.forwardRef((function({theme: e=tE, onClose: t, expanded: n=!0, headerText: s, onToggleExpanded: i, className: a, children: o, isFocusRoot: r, headerIcon: l, togglable: c=!0, ...u}, d) {
            const m = JT(e)
              , [h,g] = (0,
            Y.useState)(n)
              , p = (0,
            Y.useCallback)((()=>{
                cp(lp.expandPanel),
                g((e=>!e)),
                i && i(!h)
            }
            ), [h, i])
              , f = (0,
            Y.useMemo)((()=>({
                theme: m,
                onClose: t,
                expanded: h,
                toggleExpanded: p
            })), [m, t, h, p]);
            (0,
            Y.useEffect)((()=>{
                g(n)
            }
            ), [n]);
            const x = r ? yp : Ah;
            return (0,
            z.jsx)(x, {
                children: (0,
                z.jsx)(Ug, {
                    onAction: t,
                    children: (0,
                    z.jsx)(ZT.Provider, {
                        value: f,
                        children: (0,
                        z.jsx)(rE, {
                            theme: m,
                            ref: d,
                            header: (0,
                            z.jsx)(r5, {
                                togglable: c,
                                icon: l,
                                children: s
                            }),
                            ...u,
                            className: Zu()(h ? "expanded" : "collapsed", "collapsible", a),
                            children: h ? o : void 0
                        })
                    })
                })
            })
        }
        ));
        const r5 = ({icon: e, theme: t, togglable: n=!0, className: s, children: i})=>{
            const a = (0,
            Y.useContext)(ZT)
              , o = !Dm() && null != a.onClose
              , r = t ?? a.theme;
            return (0,
            z.jsxs)("div", {
                onClick: a.toggleExpanded,
                className: Zu()(r.titleBar, s),
                children: [null != e ? "string" == typeof e ? (0,
                z.jsx)("img", {
                    src: e,
                    className: r.icon
                }) : e : o && (0,
                z.jsx)("div", {
                    className: r.iconSpace
                }), (0,
                z.jsx)("div", {
                    className: r.iconSpace
                }), (0,
                z.jsx)("div", {
                    className: r.title,
                    children: i
                }), n && (0,
                z.jsx)(Z_, {
                    className: r.toggle,
                    src: a.expanded ? r.toggleIconExpanded : r.toggleIcon
                }), o ? (0,
                z.jsx)(tb, {
                    tinted: !0,
                    focusKey: Sg,
                    src: r.closeIcon,
                    theme: sb,
                    className: r.closeButton,
                    onSelect: a.onClose,
                    onClick: Db
                }) : null != e && (0,
                z.jsx)("div", {
                    className: r.iconSpace
                })]
            })
        }
        ;
        X.add("game-ui/common/panel/collapsible-panel.tsx", {
            get CollapsiblePanel() {
                return o5
            },
            set CollapsiblePanel(e) {
                o5 = e
            }
        });
        let l5 = {
            panel: "panel_WVw panel_YqS",
            header: "header_IuN header_Bpo child-opacity-transition_nkS",
            content: "content_yeu content_AD7 child-opacity-transition_nkS",
            footer: "footer_j9m footer_pD5 child-opacity-transition_nkS",
            title: "title_q1x title_zQN"
        };
        X.add("game-ui/editor/themes/editor-panel.module.scss", {
            get classes() {
                return l5
            },
            set classes(e) {
                Object.assign(l5, e)
            }
        });
        const c5 = l5;
        let u5 = {
            "foldout-item": "foldout-item_EBr foldout-item_wOF",
            foldoutItem: "foldout-item_EBr foldout-item_wOF",
            category: "category_Zf1",
            header: "header_h0B header_8H_ item-mouse-states_Fmi item-focused_FuT",
            "header-content": "header-content_owU header-content_wUX",
            headerContent: "header-content_owU header-content_wUX",
            icon: "icon_pQQ undefined",
            toggle: "toggle_NYV toggle_yQv"
        };
        X.add("game-ui/common/foldout/themes/advisor-item.module.scss", {
            get classes() {
                return u5
            },
            set classes(e) {
                Object.assign(u5, e)
            }
        });
        const d5 = u5;
        let m5 = {
            "advisor-panel": "advisor-panel_dXi",
            advisorPanel: "advisor-panel_dXi",
            scrollable: "scrollable_jAA",
            content: "content_Q2v",
            icon: "icon_l_s",
            hint: "hint_o1P",
            label: "label_D2b"
        };
        X.add("game-ui/game/components/advisor-panel/advisor-panel.module.scss", {
            get classes() {
                return m5
            },
            set classes(e) {
                Object.assign(m5, e)
            }
        });
        const h5 = m5;
        var g5 = ({expanded: e, className: t, focusKey: n, localization: s, theme: i, onClose: a, onToggle: o})=>{
            const r = sl(s === _c.Tutorials ? Bh : w2)
              , l = sl(s === _c.Tutorials ? Rh : C2)
              , c = Dm();
            return (0,
            z.jsx)(o5, {
                isFocusRoot: !0,
                onClose: s === _c.Tutorials ? a : void 0,
                theme: i,
                expanded: e,
                onToggleExpanded: o,
                focusKey: n,
                headerText: (0,
                z.jsx)(_c.Tutorials.ADVISOR_TITLE, {}),
                transitionSounds: up,
                className: Zu()(h5.advisorPanel, t),
                showCloseHint: !0,
                togglable: !c,
                children: (0,
                z.jsx)(Yp, {
                    ifFocused: !0,
                    ifGamepad: !0,
                    children: (0,
                    z.jsx)(np, {
                        children: (0,
                        z.jsx)(mb, {
                            className: h5.scrollable,
                            children: r.filter((e=>!l || (e.shown || e.force) && !e.locked)).map(((e,t)=>(0,
                            z.jsx)(p5, {
                                category: e,
                                showAll: !l,
                                localization: s
                            }, t)))
                        })
                    })
                })
            })
        }
        ;
        const p5 = ({category: e, localization: t, showAll: n})=>(0,
        z.jsx)(kS, {
            initialExpanded: !0,
            header: t === _c.Tutorials && (0,
            z.jsx)(DS, {
                children: (0,
                z.jsx)(t.TITLE, {
                    hash: e.name
                })
            }),
            theme: d5,
            type: "Category",
            children: e.children.filter((e=>(n || e.shown || e.force) && !e.locked)).map(((e,s)=>e.type === ug.Tutorial ? (0,
            z.jsx)(x5, {
                item: e,
                showAll: n,
                localization: t
            }, s) : (0,
            z.jsx)(f5, {
                item: e,
                showAll: n,
                localization: t
            }, s)))
        })
          , f5 = ({item: e, type: t="Group", nesting: n=1, showAll: s, localization: i})=>{
            const a = (0,
            Y.useMemo)((()=>n + 1), [n]);
            return (0,
            z.jsx)(kS, {
                header: (0,
                z.jsxs)(DS, {
                    children: [e.icon && (0,
                    z.jsx)("img", {
                        src: e.icon,
                        className: h5.icon
                    }), (0,
                    z.jsx)("div", {
                        className: h5.label,
                        children: (0,
                        z.jsx)(i.TITLE, {
                            hash: e.name
                        })
                    })]
                }),
                theme: d5,
                nesting: n,
                type: t,
                children: e.children.filter((e=>(s || e.shown || e.force) && !e.locked)).map(((e,t)=>e.type === ug.Tutorial ? (0,
                z.jsx)(x5, {
                    item: e,
                    showAll: s,
                    nesting: a,
                    localization: i
                }, t) : (0,
                z.jsx)(f5, {
                    item: e,
                    showAll: s,
                    nesting: a,
                    localization: i
                }, t)))
            })
        }
          , x5 = ({item: e, type: t="Item", nesting: n=1, showAll: s, localization: i})=>{
            const [a,o] = (0,
            Y.useState)(!1)
              , r = Dm()
              , l = ll(Kh, e.entity)
              , c = r && 1 === l?.phases.length
              , u = sl(Em)
              , d = (0,
            Y.useMemo)((()=>n + 1), [n])
              , m = (0,
            Y.useCallback)((()=>{
                l?.active ? qh(Zp) : Qh(e.entity, Zp, !0)
            }
            ), [e.entity, l?.active]);
            return (0,
            z.jsx)(z.Fragment, {
                children: l && _5(l, u) ? (0,
                z.jsx)(kS, {
                    header: (0,
                    z.jsxs)(DS, {
                        onFocusChange: o,
                        children: [(0,
                        z.jsx)(UT, {
                            action: "Select",
                            active: a && c,
                            className: h5.hint
                        }), e.icon && (0,
                        z.jsx)("img", {
                            src: e.icon,
                            className: h5.icon
                        }), (0,
                        z.jsx)("div", {
                            className: h5.label,
                            children: (0,
                            z.jsx)(i.TITLE, {
                                hash: e.name
                            })
                        })]
                    }),
                    theme: d5,
                    nesting: n,
                    type: t,
                    onSelect: l.phases.length > 1 ? void 0 : m,
                    children: l.phases.length > 1 ? l.phases.filter((e=>s || e.shown || e.force)).map(((e,t)=>(0,
                    z.jsx)(v5, {
                        tutorial: l,
                        phase: e,
                        nesting: d,
                        localization: i
                    }, t))) : void 0
                }) : void 0
            })
        }
          , v5 = ({tutorial: e, phase: t, nesting: n, localization: s})=>{
            const [i,a] = (0,
            Y.useState)(!1)
              , o = (0,
            Y.useCallback)((()=>{
                t?.active ? qh(Zp) : Qh(e.entity, t.entity, !0)
            }
            ), [e, t])
              , r = e.phases.findIndex((e=>Ur(e.entity, t.entity)))
              , l = e.phases.findIndex((e=>e.trigger?.phaseBranching))
              , c = l >= 0 && r > l ? t.isBranch ? n + 1 : n + 2 : n;
            return (0,
            z.jsx)(kS, {
                header: (0,
                z.jsxs)(DS, {
                    onFocusChange: a,
                    children: [(0,
                    z.jsx)(UT, {
                        action: "Select",
                        active: i,
                        className: h5.hint
                    }), (0,
                    z.jsx)("img", {
                        src: "Media/Game/Icons/TutorialPhase.svg",
                        className: h5.icon
                    }), (0,
                    z.jsx)("div", {
                        className: h5.label,
                        children: (0,
                        z.jsx)(s.TITLE, {
                            hash: t.name
                        })
                    })]
                }),
                theme: d5,
                nesting: c,
                onSelect: o,
                className: Zu()(t?.active && "selected")
            })
        }
          , _5 = (e,t)=>{
            switch (t) {
            case vm.gamepad:
                return !e.filters?.includes("KeyboardAndMouse");
            case vm.keyboardAndMouse:
                return !e.filters?.includes("Gamepad");
            default:
                return !1
            }
        }
        ;
        X.add("game-ui/game/components/advisor-panel/advisor-panel.tsx", {
            get AdvisorPanel() {
                return g5
            },
            set AdvisorPanel(e) {
                g5 = e
            }
        });
        let b5 = {
            button: "button_ECf item_It6 item-mouse-states_Fmi item-selected_tAM item-focused_FuT",
            "toggle-states": "toggle-states_DTm",
            toggleStates: "toggle-states_DTm",
            icon: "icon_soN icon_Iwk",
            locked: "locked_H2O locked_dBl"
        };
        X.add("game-ui/game/themes/transparent-button.module.scss", {
            get classes() {
                return b5
            },
            set classes(e) {
                Object.assign(b5, e)
            }
        });
        const T5 = b5
          , E5 = ["#DF2E3890", "#5D9C5990", "#0081C990"]
          , I5 = ["#DF2E38", "#5D9C59", "#0081C9"];
        var S5 = (e,t=[],n)=>{
            const s = t.length > 1 ? e : 1;
            return n ? I5[s % I5.length] : E5[s % E5.length]
        }
        ;
        X.add("game-ui/editor/widgets/fields/animation-curve-field/utils/animation-curve-colors.ts", {
            get getCurveColorForIndex() {
                return S5
            },
            set getCurveColorForIndex(e) {
                S5 = e
            }
        });
        let y5 = {
            hiddenIcon: '"Media/PhotoMode/Dropdown.svg"',
            visibleIcon: '"Media/PhotoMode/Dropdown.svg"',
            "dropdown-toggle": "dropdown-toggle_oMB dropdown-toggle_prl",
            dropdownToggle: "dropdown-toggle_oMB dropdown-toggle_prl",
            indicator: "indicator_czv",
            "dropdown-menu": "dropdown-menu_m7l dropdown-menu_Swd",
            dropdownMenu: "dropdown-menu_m7l dropdown-menu_Swd",
            "dropdown-item": "dropdown-item_JVW undefined",
            dropdownItem: "dropdown-item_JVW undefined"
        };
        X.add("game-ui/game/components/cinematic-camera/cinematic-camera-dropdown.theme.module.scss", {
            get classes() {
                return y5
            },
            set classes(e) {
                Object.assign(y5, e)
            }
        });
        const j5 = y5;
        let C5 = {
            "cinematic-camera-main-panel": "cinematic-camera-main-panel_jpU",
            cinematicCameraMainPanel: "cinematic-camera-main-panel_jpU",
            "curve-editor": "curve-editor_Ay4",
            curveEditor: "curve-editor_Ay4",
            "curve-editor-wrapper": "curve-editor-wrapper__lJ item-selected_tAM item-focused_FuT",
            curveEditorWrapper: "curve-editor-wrapper__lJ item-selected_tAM item-focused_FuT",
            timeline: "timeline_Zcy",
            title: "title_MaW",
            "curve-selector": "curve-selector_YdT",
            curveSelector: "curve-selector_YdT",
            "curve-controls": "curve-controls_AqW",
            curveControls: "curve-controls_AqW",
            toggle: "toggle_Mkg",
            "button-panel": "button-panel_UUV",
            buttonPanel: "button-panel_UUV",
            button: "button_R8g",
            "controls-group": "controls-group_nLN",
            controlsGroup: "controls-group_nLN",
            "controls-separator": "controls-separator_eet",
            controlsSeparator: "controls-separator_eet",
            icon: "icon__8f",
            label: "label_Heh",
            spacing: "spacing_l1z",
            bottom: "bottom__Hh",
            left: "left_gIb",
            right: "right_fUY",
            "dropdown-toggle": "dropdown-toggle_Fww item-states_QjV",
            dropdownToggle: "dropdown-toggle_Fww item-states_QjV",
            "property-legend": "property-legend_yOI",
            propertyLegend: "property-legend_yOI",
            "property-component": "property-component_Y36 item-states_QjV",
            propertyComponent: "property-component_Y36 item-states_QjV",
            "property-component-indicator": "property-component-indicator_TYv",
            propertyComponentIndicator: "property-component-indicator_TYv",
            hint: "hint_qPd"
        };
        X.add("game-ui/game/components/cinematic-camera/cinematic-camera-main-panel.module.scss", {
            get classes() {
                return C5
            },
            set classes(e) {
                Object.assign(C5, e)
            }
        });
        const N5 = C5;
        var w5 = ({groupedModifierData: e, onSelectProperty: t, activePropertyIndex: n})=>{
            const {selectActiveCurve: s, data: i} = oB()
              , {svg: a} = WD()
              , o = (0,
            Y.useRef)(n)
              , r = (0,
            Y.useRef)(e.length)
              , l = e[n];
            if ((0,
            Y.useEffect)((()=>{
                n !== o.current && (a?.viewport?.resetViewport(),
                s(0),
                o.current = n)
            }
            ), [n, s, a]),
            (0,
            Y.useEffect)((()=>{
                r.current && r.current !== e.length && e.length > 0 && t(e.length - 1),
                r.current = e.length
            }
            ), [e.length, t]),
            !i.curves.length || !l)
                return null;
            const c = !!l?.children;
            return (0,
            z.jsxs)("div", {
                className: N5.curveSelector,
                children: [(0,
                z.jsx)(fS, {
                    theme: j5,
                    content: e.map(((e,s)=>{
                        const i = s === n;
                        return (0,
                        z.jsx)(bS, {
                            focusKey: s,
                            value: s,
                            selected: i,
                            onChange: ()=>t(s),
                            children: (0,
                            z.jsx)(_c.PhotoMode.PROPERTY_TITLE, {
                                hash: e.id
                            })
                        }, s)
                    }
                    )),
                    children: (0,
                    z.jsx)(xS, {
                        className: N5.dropdownToggle,
                        children: (0,
                        z.jsx)(_c.PhotoMode.PROPERTY_TITLE, {
                            hash: l.id
                        })
                    })
                }), c && (0,
                z.jsx)("div", {
                    className: N5.propertyLegend,
                    children: l.children?.map(((e,t)=>(0,
                    z.jsx)(O5, {
                        index: t,
                        onSelect: s,
                        id: e.id,
                        color: S5(t, i.curves, !0)
                    }, e.id)))
                })]
            })
        }
        ;
        const O5 = ({index: e, onSelect: t, id: n, color: s})=>{
            const i = (0,
            Y.useCallback)((()=>t(e)), [e, t])
              , a = (0,
            Y.useMemo)((()=>n.endsWith("/r") ? "Red" : n.endsWith("/g") ? "Green" : n.endsWith("/b") ? "Blue" : n.endsWith("/a") ? "Alpha" : n), [n]);
            return (0,
            z.jsxs)(U_, {
                className: N5.propertyComponent,
                onSelect: i,
                children: [(0,
                z.jsx)("div", {
                    className: N5.propertyComponentIndicator,
                    style: {
                        backgroundColor: s
                    }
                }), (0,
                z.jsx)(_c.PhotoMode.PROPERTY_TITLE, {
                    hash: a
                })]
            })
        }
        ;
        X.add("game-ui/game/components/cinematic-camera/components/curve-selector.tsx", {
            get CurveSelector() {
                return w5
            },
            set CurveSelector(e) {
                w5 = e
            }
        });
        let P5 = {
            button: "button_Ytr item-states_QjV",
            active: "active_Arq",
            inactive: "inactive_Kj2",
            hint: "hint_rNg"
        };
        X.add("game-ui/game/components/cinematic-camera/cinematic-camera-icon-button-theme.module.scss", {
            get classes() {
                return P5
            },
            set classes(e) {
                Object.assign(P5, e)
            }
        });
        const L5 = P5
          , A5 = ()=>""
          , M5 = 100
          , R5 = {
            top: 50,
            left: 10,
            right: 10,
            bottom: 10
        }
          , k5 = new Ig("CINEMATIC CURVE CONTROLS")
          , D5 = new Ig("CINEMATIC CURVE EDITOR");
        var F5 = ({label: e, modifierData: t, canAddKeyframes: n, tutorialTag: s})=>{
            const i = sl(py)
              , [a,o] = (0,
            Y.useState)(0)
              , [r,l] = (0,
            Y.useState)(0)
              , [c,u] = (0,
            Y.useState)(!1)
              , d = sl(Ll)
              , m = t.grouped[r]
              , h = (0,
            Y.useMemo)((()=>m ? m.children ? m.children.map((e=>e.curve)) : [m.curve] : []), [m])
              , g = `${r}-${a}`
              , p = zB(h, {
                minX: 0,
                maxX: i,
                minY: isFinite(m?.min) && m?.min !== m?.max ? m.min : void 0,
                maxY: isFinite(m?.max) && m?.min !== m?.max ? m.max : void 0,
                wrapMode: "clamp",
                hash: g
            })
              , f = zy(e, a)
              , x = (0,
            Y.useCallback)(((e,t)=>{
                let n = t.time;
                return n = Math.max(0, n),
                n = Math.min(i, n),
                {
                    ...t,
                    time: n
                }
            }
            ), [i])
              , [v,_] = (0,
            Y.useState)(k5)
              , b = (0,
            Y.useMemo)((()=>({
                "Move Vertical": ()=>{
                    _((e=>e === k5 ? D5 : k5))
                }
            })), [])
              , T = (0,
            Y.useCallback)((async()=>{
                const e = await Ly();
                return {
                    x: e[0] * M5,
                    y: e[1] * M5
                }
            }
            ), [])
              , E = (0,
            Y.useCallback)((async()=>{
                const e = await My();
                return {
                    x: e[0] * M5,
                    y: e[1] * M5
                }
            }
            ), [])
              , I = (0,
            Y.useCallback)((async()=>{
                const e = await Ay();
                return {
                    x: e * M5,
                    y: e
                }
            }
            ), [])
              , S = Dm();
            return (0,
            z.jsx)(mT, {
                uiTag: s,
                children: (0,
                z.jsxs)(Sp, {
                    className: N5.curveEditorWrapper,
                    children: [(0,
                    z.jsx)(GT, {
                        action: c ? "Back" : "Select",
                        className: N5.hint
                    }), (0,
                    z.jsx)(Op, {
                        onSelectedStateChanged: u,
                        children: (0,
                        z.jsx)(Mg, {
                            actions: b,
                            children: (0,
                            z.jsx)(op, {
                                focused: v,
                                children: (0,
                                z.jsx)(KD, {
                                    children: (0,
                                    z.jsxs)(aB, {
                                        data: p,
                                        parseKeyframe: x,
                                        canAddKeyframes: n,
                                        onSetActiveCurve: e=>{
                                            o(m.index + e)
                                        }
                                        ,
                                        ...f,
                                        children: [(0,
                                        z.jsxs)(np, {
                                            direction: kg.Horizontal,
                                            focusKey: k5,
                                            children: [(h.length > 0 || "Position" === e) && (0,
                                            z.jsx)(U5, {
                                                label: e,
                                                property: m ? m.id : ""
                                            }), (0,
                                            z.jsx)(w5, {
                                                activePropertyIndex: r,
                                                onSelectProperty: e=>{
                                                    o(t.grouped[e].index),
                                                    l(e)
                                                }
                                                ,
                                                groupedModifierData: t.grouped
                                            })]
                                        }), (0,
                                        z.jsx)(_B, {
                                            zoomable: "y",
                                            panable: "y",
                                            showTooltipOnDrag: !0,
                                            className: N5.curveEditor,
                                            padding: R5,
                                            formatLabelX: A5,
                                            textScale: d,
                                            keyframeMoveCallback: S ? T : void 0,
                                            panCallback: S ? E : void 0,
                                            zoomCallback: S ? I : void 0,
                                            OnFocusChange: Ry,
                                            focusKey: D5,
                                            useLimits: "Position" !== e
                                        })]
                                    })
                                })
                            })
                        })
                    })]
                })
            })
        }
        ;
        const U5 = ({label: e, property: t})=>{
            const {activeKeyframe: n, activeCurve: s, removeKeyframe: i} = oB()
              , a = (0,
            Y.useCallback)((()=>{
                i(n, s)
            }
            ), [i, n, s])
              , o = (0,
            Y.useCallback)((()=>{
                jy(e, t)
            }
            ), [e, t]);
            return (0,
            z.jsx)("div", {
                className: N5.curveControls,
                children: (0,
                z.jsx)(mT, {
                    uiTag: vT.value?.cinematicCameraPanelCaptureKey,
                    children: n < 0 ? (0,
                    z.jsx)(Eg, {
                        tooltip: (0,
                        z.jsx)(_c.CinematicCamera.CAPTURE, {}),
                        children: (0,
                        z.jsx)(tb, {
                            src: "Media/PhotoMode/AddKeyframe.svg",
                            onSelect: o,
                            theme: L5
                        })
                    }) : (0,
                    z.jsx)(Eg, {
                        tooltip: (0,
                        z.jsx)(_c.CinematicCamera.DELETE_KEY, {}),
                        children: (0,
                        z.jsx)(tb, {
                            src: "Media/PhotoMode/DeleteKeyframe.svg",
                            onSelect: a,
                            theme: L5
                        })
                    })
                })
            })
        }
        ;
        X.add("game-ui/game/components/cinematic-camera/cinematic-camera-curve-editor.tsx", {
            get CinematicCameraCurveEditor() {
                return F5
            },
            set CinematicCameraCurveEditor(e) {
                F5 = e
            }
        });
        let B5 = {
            "curve-timeline-editor": "curve-timeline-editor_pYg",
            curveTimelineEditor: "curve-timeline-editor_pYg",
            wrapper: "wrapper_aL2 item-selected_tAM item-focused_FuT",
            hint: "hint_liM"
        };
        X.add("game-ui/game/components/cinematic-camera/cinematic-camera-curve-timeline.module.scss", {
            get classes() {
                return B5
            },
            set classes(e) {
                Object.assign(B5, e)
            }
        });
        const G5 = B5
          , V5 = {
            left: 0,
            right: 0,
            top: 0,
            bottom: 15
        }
          , H5 = e=>(0,
        z.jsx)(tB, {
            keyframe: e,
            hide: "value"
        })
          , K5 = ({data: e},t,n)=>(0,
        z.jsx)("g", {
            children: (0,
            z.jsx)(uB, {
                origin: "center",
                x: e.time,
                y: -1.8,
                fill: "#eee",
                width: 10,
                height: 17,
                onSelect: t,
                collisionThreshold: 12,
                children: (0,
                z.jsx)(uB, {
                    x: e.time,
                    y: -.525,
                    origin: "center",
                    fill: "#eee",
                    width: 7.8,
                    height: 7.8,
                    transform: "rotate(45)"
                })
            })
        });
        var W5 = ()=>{
            const [e,t] = (0,
            Y.useState)(!1)
              , n = sl(fy)
              , s = sl(py)
              , i = (0,
            Y.useRef)(!1)
              , [a,o] = (0,
            Y.useState)()
              , r = sl(Ll)
              , {parseKeyframe: l, emptyString: c, labelFormatter: u, goToPoint: d} = (0,
            Y.useMemo)((()=>({
                parseKeyframe: (e,t)=>({
                    ...t,
                    value: 0,
                    time: Math.min(Math.max(t.time, 0), s || 1)
                }),
                emptyString: ()=>"",
                labelFormatter: e=>Math.round(10 * e) / 10 + "s",
                goToPoint: ({point: e})=>{
                    Iy(e.x)
                }
            })), [s])
              , m = (0,
            Y.useCallback)((()=>{
                i.current = !0;
                const e = ()=>{
                    i.current = !1,
                    o(void 0),
                    window.removeEventListener("mouseup", e)
                }
                ;
                window.addEventListener("mouseup", e)
            }
            ), [])
              , h = (0,
            Y.useCallback)((({point: e})=>{
                if (i.current) {
                    const t = Math.max(0, Math.min(e.x, s));
                    Iy(t),
                    o({
                        time: t
                    })
                }
            }
            ), [s])
              , g = (0,
            Y.useMemo)((()=>({
                bounds: {
                    min: {
                        x: 0,
                        y: -1
                    },
                    max: {
                        x: s || 1,
                        y: 1
                    }
                },
                curves: [{
                    keys: [{
                        time: n,
                        value: 0,
                        inTangent: 1 / 0,
                        outTangent: 1 / 0,
                        inWeight: .33,
                        outWeight: .33,
                        weightedMode: JU.Both
                    }],
                    postWrapMode: eB.Default,
                    preWrapMode: eB.Default
                }]
            })), [s, n])
              , p = (0,
            Y.useMemo)((()=>({
                "Move Horizontal": e=>{
                    const t = Od(n + e * (s / 30), 0, s);
                    Iy(t)
                }
            })), [s, n]);
            return (0,
            z.jsxs)(Sp, {
                className: G5.wrapper,
                children: [(0,
                z.jsx)(GT, {
                    action: e ? "Back" : "Select",
                    className: G5.hint
                }), (0,
                z.jsx)(Op, {
                    onSelectedStateChanged: t,
                    children: (0,
                    z.jsx)(Mg, {
                        actions: p,
                        children: (0,
                        z.jsx)(aB, {
                            data: g,
                            parseKeyframe: l,
                            keyframeRenderer: K5,
                            children: (0,
                            z.jsx)(_B, {
                                formatLabelX: u,
                                formatLabelY: c,
                                className: G5.curveTimelineEditor,
                                padding: V5,
                                gridLines: !1,
                                onClick: d,
                                showTooltipOnDrag: !0,
                                tooltipKeyframe: a,
                                formatTooltip: H5,
                                onMouseDown: m,
                                onWindowMouseMove: h,
                                textScale: r,
                                children: (0,
                                z.jsx)(MU, {
                                    drawAxes: "x"
                                })
                            })
                        })
                    })
                })]
            })
        }
        ;
        X.add("game-ui/game/components/cinematic-camera/cinematic-camera-curve-timeline.tsx", {
            get CinematicCameraCurveTimeline() {
                return W5
            },
            set CinematicCameraCurveTimeline(e) {
                W5 = e
            }
        });
        let z5 = {
            "cinematic-camera-slider": "cinematic-camera-slider_yuq",
            cinematicCameraSlider: "cinematic-camera-slider_yuq",
            "slider-container": "slider-container_GDX",
            sliderContainer: "slider-container_GDX",
            value: "value_uvb"
        };
        X.add("game-ui/game/components/cinematic-camera/cinematic-camera-slider.module.scss", {
            get classes() {
                return z5
            },
            set classes(e) {
                Object.assign(z5, e)
            }
        });
        const Y5 = z5;
        var $5 = ({focusKey: e, value: t, start: n, end: s, className: i, onChange: a, onDragEnd: o})=>(0,
        z.jsx)(Eg, {
            tooltip: (0,
            z.jsx)(_c.CinematicCamera.SEGMENT_DURATION, {}),
            children: (0,
            z.jsxs)(Ip, {
                className: Zu()(Y5.cinematicCameraSlider, i),
                children: [(0,
                z.jsx)("div", {
                    className: Y5.sliderContainer,
                    children: (0,
                    z.jsx)(Op, {
                        children: (0,
                        z.jsx)(AA, {
                            showHint: !0,
                            focusKey: e,
                            value: t,
                            start: n,
                            end: s,
                            onChange: a,
                            onDragEnd: o
                        })
                    })
                }), (0,
                z.jsxs)("div", {
                    className: Y5.value,
                    children: [t.toFixed(1), "s"]
                })]
            })
        });
        X.add("game-ui/game/components/cinematic-camera/cinematic-camera-slider.tsx", {
            get CinematicCameraSlider() {
                return $5
            },
            set CinematicCameraSlider(e) {
                $5 = e
            }
        });
        var q5 = ()=>{
            const e = sl(by) ? "Pause" : "Play";
            return (0,
            z.jsxs)(z.Fragment, {
                children: [(0,
                z.jsx)(mT, {
                    uiTag: vT.value?.cinematicCameraPanelPlay,
                    children: (0,
                    z.jsx)(tb, {
                        src: `Media/PhotoMode/${e}.svg`,
                        theme: L5,
                        onSelect: yy
                    })
                }), (0,
                z.jsx)(mT, {
                    uiTag: vT.value?.cinematicCameraPanelStop,
                    children: (0,
                    z.jsx)(tb, {
                        src: "Media/PhotoMode/Stop.svg",
                        theme: L5,
                        onSelect: Sy
                    })
                })]
            })
        }
        ;
        X.add("game-ui/game/components/cinematic-camera/components/cinematic-camera-playback-controls.tsx", {
            get CinematicCameraPlaybackControls() {
                return q5
            },
            set CinematicCameraPlaybackControls(e) {
                q5 = e
            }
        });
        const X5 = /^(Position|Rotation|(\w|\.)+\/)/
          , Q5 = e=>{
            const t = sl(e);
            return (0,
            Y.useMemo)((()=>{
                const e = {}
                  , n = []
                  , s = Array.isArray(t) ? t.reduce(((t,s,i)=>{
                    const a = s.id ? s.id.match(X5)?.[1] : null;
                    let o;
                    if (a) {
                        let n = e[a];
                        e[a] || (n = {
                            ...s,
                            index: i,
                            children: [],
                            id: a.replace("/", "")
                        },
                        e[a] = n,
                        t.push(e[a])),
                        o = {
                            ...s,
                            index: i,
                            groupIndex: t.length - 1,
                            curveIndex: n.children.length
                        },
                        n.children.push(o)
                    } else
                        o = {
                            ...s,
                            index: i,
                            curveIndex: 0
                        },
                        t.push(o);
                    return n.push(o),
                    t
                }
                ), []) : [];
                return {
                    grouped: s,
                    flat: n
                }
            }
            ), [t])
        }
        ;
        var Z5 = ({toggleSaveLoadPopupVisibility: e})=>{
            const t = sl(py)
              , n = sl(vy)
              , s = sl(by)
              , [i,a] = (0,
            Y.useState)(!0)
              , o = Q5(Ky)
              , r = Q5(Wy);
            dZ(s && i),
            (0,
            Y.useEffect)((()=>()=>{
                Sy(),
                tC()
            }
            ), []);
            const l = (0,
            Y.useMemo)((()=>({
                Back: s ? ()=>{
                    Sy()
                }
                : null
            })), [s]);
            return (0,
            z.jsx)(Mg, {
                actions: l,
                children: (0,
                z.jsx)(np, {
                    direction: kg.Vertical,
                    children: (0,
                    z.jsxs)("div", {
                        className: N5.cinematicCameraMainPanel,
                        children: [(0,
                        z.jsx)(np, {
                            direction: kg.Horizontal,
                            children: (0,
                            z.jsxs)("div", {
                                className: N5.buttonPanel,
                                children: [(0,
                                z.jsxs)("div", {
                                    className: N5.controlsGroup,
                                    children: [(0,
                                    z.jsx)(q5, {}), (0,
                                    z.jsx)("div", {
                                        className: N5.controlsSeparator
                                    }), (0,
                                    z.jsx)(mT, {
                                        uiTag: vT.value?.cinematicCameraPanelSaveLoad,
                                        children: (0,
                                        z.jsx)(Eg, {
                                            tooltip: (0,
                                            z.jsx)(_c.CinematicCamera.SAVE_LOAD_TOOLTIP, {}),
                                            children: (0,
                                            z.jsx)(tb, {
                                                src: "Media/Glyphs/Save.svg",
                                                onSelect: e,
                                                theme: L5,
                                                tinted: !0
                                            })
                                        })
                                    }), (0,
                                    z.jsx)(mT, {
                                        uiTag: vT.value?.cinematicCameraPanelReset,
                                        children: (0,
                                        z.jsx)(Eg, {
                                            tooltip: (0,
                                            z.jsx)(_c.CinematicCamera.RESET_TOOLTIP, {}),
                                            children: (0,
                                            z.jsx)(tb, {
                                                src: "Media/Glyphs/Trash.svg",
                                                onSelect: Py,
                                                theme: L5,
                                                tinted: !0
                                            })
                                        })
                                    })]
                                }), (0,
                                z.jsxs)("div", {
                                    className: N5.controlsGroup,
                                    children: [(0,
                                    z.jsx)(mT, {
                                        uiTag: vT.value?.cinematicCameraPanelHideUI,
                                        children: (0,
                                        z.jsx)(Eg, {
                                            tooltip: (0,
                                            z.jsx)(_c.CinematicCamera.HIDE_UI, {}),
                                            children: (0,
                                            z.jsx)(tb, {
                                                src: i ? "Media/PhotoMode/HideUIOn.svg" : "Media/PhotoMode/HideUIOff.svg",
                                                onSelect: ()=>a((e=>!e)),
                                                theme: L5,
                                                className: i ? L5.active : L5.inactive,
                                                tinted: !0
                                            })
                                        })
                                    }), (0,
                                    z.jsx)(Eg, {
                                        tooltip: (0,
                                        z.jsx)(_c.CinematicCamera.LOOP, {}),
                                        children: (0,
                                        z.jsx)(tb, {
                                            src: n ? "Media/PhotoMode/LoopOn.svg" : "Media/PhotoMode/LoopOff.svg",
                                            onSelect: ()=>_y(!n),
                                            theme: L5,
                                            className: n ? L5.active : L5.inactive,
                                            tinted: !0
                                        })
                                    }), (0,
                                    z.jsx)(mT, {
                                        uiTag: vT.value?.cinematicCameraPanelPlaybackDurationSlider,
                                        children: (0,
                                        z.jsx)($5, {
                                            label: (0,
                                            z.jsx)(_c.CinematicCamera.PLAYBACK_DURATION, {}),
                                            value: t,
                                            start: 1,
                                            end: 120,
                                            onChange: Ty,
                                            onDragEnd: Ey
                                        })
                                    })]
                                })]
                            })
                        }), (0,
                        z.jsx)(F5, {
                            label: "Position",
                            canAddKeyframes: !0,
                            modifierData: o,
                            tutorialTag: vT.value?.cinematicCameraPanelTransformCurves
                        }), (0,
                        z.jsx)(F5, {
                            label: "Property",
                            canAddKeyframes: !0,
                            modifierData: r,
                            tutorialTag: vT.value?.cinematicCameraPanelPropertyCurves
                        }), (0,
                        z.jsx)(mT, {
                            uiTag: vT.value?.cinematicCameraPanelTimelineSlider,
                            children: (0,
                            z.jsx)(W5, {})
                        })]
                    })
                })
            })
        }
        ;
        X.add("game-ui/game/components/cinematic-camera/cinematic-camera-main-panel.tsx", {
            get CinematicCameraMainPanel() {
                return Z5
            },
            set CinematicCameraMainPanel(e) {
                Z5 = e
            }
        });
        var J5 = {
            theme: kJ,
            expanded: !1
        }
          , e3 = Y.createContext(J5);
        X.add("game-ui/common/section/section-context.ts", {
            get defaultSectionContext() {
                return J5
            },
            set defaultSectionContext(e) {
                J5 = e
            },
            get SectionContext() {
                return e3
            },
            set SectionContext(e) {
                e3 = e
            }
        });
        let t3 = {
            section: "section_sop section_gUk",
            header: "header_l0j undefined",
            content: "content_flM content_owQ",
            locked: "locked_UXm",
            first: "first_l25",
            last: "last_ZNw",
            "title-bar": "title-bar_J7X title-bar_wU9",
            titleBar: "title-bar_J7X title-bar_wU9",
            title: "title_PYv title_bwV",
            "toggle-button": "toggle-button_UA2 toggle-button_sQk",
            toggleButton: "toggle-button_UA2 toggle-button_sQk"
        };
        X.add("game-ui/common/section/themes/panel-section.module.scss", {
            get classes() {
                return t3
            },
            set classes(e) {
                Object.assign(t3, e)
            }
        });
        const n3 = t3;
        var s3 = Y.forwardRef((function({focusKey: e, header: t, tooltip: n, theme: s=n3, initialFocused: i, direction: a=kg.Vertical, className: o, children: r, onFocusChange: l, onRefocus: c, ...u}, d) {
            const m = DJ(s)
              , h = Y.Children.count(t) > 0
              , g = Y.Children.count(r) > 0
              , p = (0,
            Y.useMemo)((()=>({
                theme: m,
                expanded: g
            })), [g, m]);
            return (0,
            z.jsx)(Eg, {
                tooltip: n,
                children: (0,
                z.jsx)(Sp, {
                    ref: d,
                    focusKey: e,
                    className: Zu()(m.section, o),
                    onFocusChange: l,
                    ...u,
                    children: (0,
                    z.jsx)(e3.Provider, {
                        value: p,
                        children: (0,
                        z.jsxs)(np, {
                            direction: a,
                            initialFocused: i,
                            onRefocus: c,
                            children: [h && (0,
                            z.jsx)("div", {
                                className: Zu()(m.header, m.first),
                                children: t
                            }), (0,
                            z.jsx)("div", {
                                className: Zu()(m.content, !h && m.first, m.last),
                                children: r
                            })]
                        })
                    })
                })
            })
        }
        ));
        X.add("game-ui/common/section/section.tsx", {
            get Section() {
                return s3
            },
            set Section(e) {
                s3 = e
            }
        });
        let i3 = {
            "item-picker-section": "item-picker-section_y66",
            itemPickerSection: "item-picker-section_y66",
            "panel-content": "panel-content_vkN",
            panelContent: "panel-content_vkN",
            "button-row": "button-row_odR",
            buttonRow: "button-row_odR",
            input: "input_xwy item-states_QjV",
            "cloud-picker": "cloud-picker_mqV item-states_QjV",
            cloudPicker: "cloud-picker_mqV item-states_QjV",
            "cloud-picker-dropdown": "cloud-picker-dropdown_ibN",
            cloudPickerDropdown: "cloud-picker-dropdown_ibN",
            "list-hint": "list-hint_bZz",
            listHint: "list-hint_bZz",
            "input-row": "input-row_BgG",
            inputRow: "input-row_BgG"
        };
        X.add("game-ui/game/components/cinematic-camera/cinematic-camera-save-load-panel.module.scss", {
            get classes() {
                return i3
            },
            set classes(e) {
                Object.assign(i3, e)
            }
        });
        const a3 = i3;
        function o3({onClose: e}) {
            const t = sl(By)
              , n = sl(Uy)
              , [s,i] = (0,
            Y.useState)(!1)
              , [a,o] = (0,
            Y.useState)(function(e, t) {
                if (!Vr(e)) {
                    const n = t.findIndex((t=>t.guid === e));
                    return n >= 0 ? n : 0
                }
                return 0
            }(null !== n ? n.guid : null, t))
              , r = function(e) {
                const t = (0,
                Y.useCallback)((t=>{
                    const n = e[t]
                      , s = RW(n.cloudTarget, n.isReadOnly) ?? ""
                      , i = MW(n.cloudTarget);
                    return {
                        displayName: au(n.name),
                        image: s ?? "",
                        tinted: i,
                        directory: !1,
                        favorite: !1,
                        badge: null
                    }
                }
                ), [e]);
                return {
                    length: e.length,
                    get: t
                }
            }(t)
              , l = ic((0,
            z.jsx)(_c.CinematicCamera.NEW_SEQUENCE_PLACEHOLDER, {}))
              , [c,u] = (0,
            Y.useState)(t.length > a ? t[a].name : l)
              , d = (0,
            Y.useContext)(xE)
              , m = sl(Gy)
              , h = sl(Vy)
              , g = (0,
            Y.useCallback)((e=>u(e.target.value)), [])
              , p = (0,
            Y.useCallback)((()=>{
                a >= 0 && a < t.length && d.showDialog((0,
                z.jsx)(zI, {
                    title: (0,
                    z.jsx)(_c.Common.WARNING, {}),
                    message: (0,
                    z.jsx)(_c.CinematicCamera.UNSAVED_DISCLAIMER, {}),
                    onConfirm: ()=>Dy(t[a].guid, t[a].cloudTarget)
                }))
            }
            ), [a, t, d])
              , f = (0,
            Y.useCallback)((()=>{
                a >= 0 && a < t.length && d.showDialog((0,
                z.jsx)(zI, {
                    title: (0,
                    z.jsx)(_c.Common.WARNING, {}),
                    message: (0,
                    z.jsx)(_c.CinematicCamera.DELETE_DISCLAIMER, {
                        NAME: t[a].name
                    }),
                    onConfirm: ()=>Fy(t[a].guid, t[a].cloudTarget)
                }))
            }
            ), [a, t, d])
              , x = (0,
            Y.useCallback)((()=>{
                if (!Vr(c)) {
                    const e = t.find((e=>!e.isReadOnly && e.cloudTarget === h && e.name === c));
                    e ? d.showDialog((0,
                    z.jsx)(zI, {
                        title: (0,
                        z.jsx)(_c.Common.WARNING, {}),
                        message: (0,
                        z.jsx)(_c.CinematicCamera.OVERRIDE_DISCLAIMER, {
                            NAME: c
                        }),
                        onConfirm: ()=>ky(c, e.guid)
                    })) : ky(c, null)
                }
            }
            ), [c, t, d, h])
              , v = (0,
            Y.useCallback)((e=>{
                o(e),
                u(t[e].name)
            }
            ), [t])
              , _ = BH()
              , b = sl(_M);
            return (0,
            z.jsx)(rE, {
                onClose: e,
                header: (0,
                z.jsx)(dE, {
                    children: (0,
                    z.jsx)(_c.CinematicCamera.SAVE_LOAD_TOOLTIP, {})
                }),
                contentClassName: a3.panelContent,
                allowFocusExit: !0,
                children: (0,
                z.jsxs)(np, {
                    children: [(0,
                    z.jsx)(r3, {
                        targets: m,
                        selectedTarget: h,
                        onSelectTarget: Hy
                    }), (0,
                    z.jsx)(s3, {
                        className: a3.itemPickerSection,
                        children: (0,
                        z.jsxs)(Op, {
                            onSelectedStateChanged: i,
                            children: [(0,
                            z.jsx)(GT, {
                                action: s ? "Back" : "Select",
                                className: a3.listHint
                            }), (0,
                            z.jsx)(KW, {
                                selectedIndex: a,
                                columnCount: 1,
                                data: r,
                                onSelect: v,
                                hasImages: !0
                            })]
                        })
                    }), (0,
                    z.jsx)(CH, {
                        className: a3.inputRow,
                        children: (0,
                        z.jsx)(oI, {
                            showHint: !0,
                            value: c,
                            onChange: g,
                            className: Zu()(_.input, a3.input)
                        })
                    }), (0,
                    z.jsxs)("div", {
                        className: a3.buttonRow,
                        children: [(0,
                        z.jsx)(Eg, {
                            tooltip: b.reasonHash ? (0,
                            z.jsx)(_c.Common.SAVEABILITY_REASON, {
                                hash: b.reasonHash
                            }) : (0,
                            z.jsx)(_c.CinematicCamera.SAVE_TOOLTIP, {}),
                            children: (0,
                            z.jsx)(tb, {
                                src: "Media/Glyphs/Save.svg",
                                onSelect: x,
                                disabled: !b.canSave || Vr(c),
                                tinted: !0,
                                theme: L5
                            })
                        }), (0,
                        z.jsx)(Eg, {
                            tooltip: (0,
                            z.jsx)(_c.CinematicCamera.LOAD_TOOLTIP, {}),
                            children: (0,
                            z.jsx)(tb, {
                                src: "Media/Glyphs/School.svg",
                                disabled: a < 0 || a >= t.length,
                                onSelect: p,
                                tinted: !0,
                                theme: L5
                            })
                        }), (0,
                        z.jsx)(Eg, {
                            tooltip: (0,
                            z.jsx)(_c.CinematicCamera.DELETE_TOOLTIP, {}),
                            children: (0,
                            z.jsx)(tb, {
                                src: "Media/Glyphs/Trash.svg",
                                disabled: a < 0 || a >= t.length || t[a].isReadOnly,
                                onSelect: f,
                                tinted: !0,
                                theme: L5
                            })
                        })]
                    })]
                })
            })
        }
        function r3({targets: e, selectedTarget: t, onSelectTarget: n}) {
            return (0,
            z.jsxs)("div", {
                className: a3.cloudPicker,
                children: [(0,
                z.jsx)("div", {
                    children: (0,
                    z.jsx)(_c.Menu.CLOUD_TARGET_LABEL, {})
                }), (0,
                z.jsx)("div", {
                    className: a3.cloudPickerDropdown,
                    children: (0,
                    z.jsx)(fS, {
                        content: e.map(((e,t)=>(0,
                        z.jsx)(bS, {
                            value: e,
                            onChange: n,
                            children: (0,
                            z.jsx)(_c.Menu.CLOUD_TARGET, {
                                hash: e
                            })
                        }, t))),
                        theme: oz,
                        children: (0,
                        z.jsx)(xS, {
                            value: t,
                            showHint: !0,
                            children: (0,
                            z.jsx)(_c.Menu.CLOUD_TARGET, {
                                hash: t
                            })
                        })
                    })
                })]
            })
        }
        X.add("game-ui/game/components/cinematic-camera/cinematic-camera-save-load-panel.tsx", {
            get CinematicCameraSaveLoadPanel() {
                return o3
            },
            set CinematicCameraSaveLoadPanel(e) {
                o3 = e
            }
        });
        let l3 = {
            "cinematic-panel-layout": "cinematic-panel-layout_e2g",
            cinematicPanelLayout: "cinematic-panel-layout_e2g",
            "floating-hint": "floating-hint_yzc",
            floatingHint: "floating-hint_yzc"
        };
        X.add("game-ui/game/components/cinematic-camera/cinematic-camera-panel.module.scss", {
            get classes() {
                return l3
            },
            set classes(e) {
                Object.assign(l3, e)
            }
        });
        const c3 = l3;
        let u3 = {
            base: "base_iGt",
            enter: "enter_F0S",
            "exit-active": "exit-active__9F",
            exitActive: "exit-active__9F",
            "enter-active": "enter-active_Dkv",
            enterActive: "enter-active_Dkv",
            exit: "exit_tDP",
            wrapper: "wrapper_bAS"
        };
        X.add("game-ui/game/components/cinematic-camera/cinematic-camera-panel-transitions.module.scss", {
            get classes() {
                return u3
            },
            set classes(e) {
                Object.assign(u3, e)
            }
        });
        const d3 = u3;
        var m3 = ({isVisible: e, onClose: t})=>{
            rg(vT.value?.cinematicCameraPanel);
            const [n,s] = (0,
            Y.useState)(!1);
            (0,
            Y.useEffect)((()=>{
                e || s(!1)
            }
            ), [e]);
            const i = (0,
            Y.useCallback)((()=>s((e=>!e))), []);
            return (0,
            z.jsxs)("div", {
                className: c3.cinematicPanelLayout,
                children: [(0,
                z.jsx)(ud, {
                    children: n && (0,
                    z.jsx)(o3, {
                        onClose: i
                    }, "CinematicCameraSaveLoad")
                }), (0,
                z.jsx)(ud, {
                    children: e && (0,
                    z.jsx)(mT, {
                        uiTag: vT.value?.cinematicCameraPanel,
                        children: (0,
                        z.jsx)(rE, {
                            transitionSounds: up,
                            onClose: t,
                            transition: d3,
                            allowFocusExit: !0,
                            showCloseHint: !0,
                            unfocusedHintAction: "Close",
                            hintClassName: c3.floatingHint,
                            children: (0,
                            z.jsx)(Z5, {
                                toggleSaveLoadPopupVisibility: i
                            })
                        }, "CinematicCameraPanel")
                    })
                })]
            }, "CinematicCameraLayout")
        }
        ;
        X.add("game-ui/game/components/cinematic-camera/cinematic-camera-panel.tsx", {
            get CinematicCameraPanel() {
                return m3
            },
            set CinematicCameraPanel(e) {
                m3 = e
            }
        });
        let h3 = {
            field: "field_Y9F undefined",
            label: "label_6SZ label_eX_"
        };
        X.add("game-ui/game/widgets/field/row-field.module.scss", {
            get classes() {
                return h3
            },
            set classes(e) {
                Object.assign(h3, e)
            }
        });
        const g3 = h3;
        var p3 = {
            ...F_,
            hover: null,
            focus: null
        };
        function f3(e) {
            return (0,
            z.jsx)(x3, {
                ...e.props,
                children: e.props.value
            })
        }
        var x3 = ({theme: e=g3, disabled: t, className: n, children: s, onClick: i, onFocusChange: a})=>{
            const o = (0,
            Y.useCallback)((e=>{
                !t && i && i(e)
            }
            ), [t, i]);
            return (0,
            z.jsx)(Sp, {
                focusKey: t ? Sg : void 0,
                focusSound: lp.hoverItem,
                className: Zu()(e.field, t && "disabled", n),
                onClick: o,
                onFocusChange: a,
                children: (0,
                z.jsx)("div", {
                    children: s
                })
            })
        }
        ;
        X.add("game-ui/game/widgets/field/field.tsx", {
            get optionButtonSounds() {
                return p3
            },
            set optionButtonSounds(e) {
                p3 = e
            },
            get ValueField() {
                return f3
            },
            set ValueField(e) {
                f3 = e
            },
            get Field() {
                return x3
            },
            set Field(e) {
                x3 = e
            }
        });
        let v3 = {
            container: "container_eL2",
            dropdown: "dropdown_pJu item-states_QjV",
            hint: "hint_t2G"
        };
        X.add("game-ui/game/widgets/dropdown-field/dropdown-field.module.scss", {
            get classes() {
                return v3
            },
            set classes(e) {
                Object.assign(v3, e)
            }
        });
        const _3 = v3;
        function b3(e) {
            return (0,
            z.jsx)(E3, {
                items: e.props.enumMembers,
                value: e.props.value,
                ...e
            })
        }
        function T3(e) {
            return (0,
            z.jsx)(E3, {
                items: e.props.items,
                value: e.props.value,
                ...e
            })
        }
        function E3(e) {
            const t = e.items.findIndex((t=>Kr(t.value, e.value)))
              , n = -1 !== t ? e.items[t] : null
              , s = YM(RR, ZR(e.parent, e.path))
              , [i,a] = (0,
            Y.useState)(!1)
              , [o,r] = (0,
            Y.useState)(!1)
              , [l,c] = (0,
            Y.useState)(t);
            return (0,
            z.jsxs)(x3, {
                ...e.props,
                onFocusChange: a,
                className: _3.container,
                children: [(0,
                z.jsx)(UT, {
                    action: o ? "Back" : "Select",
                    active: !e.props.disabled && i,
                    className: _3.hint
                }), (0,
                z.jsx)(fS, {
                    focusKey: e.props.disabled ? Sg : yg,
                    initialFocused: t,
                    theme: EJ,
                    content: (0,
                    z.jsx)(np, {
                        onChange: c,
                        allowLooping: !0,
                        children: e.items.filter(((e,n)=>!e.disabled && (0 !== n || 0 === t))).map(((t,a)=>(0,
                        z.jsxs)(bS, {
                            focusKey: a,
                            value: t.value,
                            selected: !!n && Kr(n.value, t.value),
                            onChange: s,
                            children: [(0,
                            z.jsx)(UT, {
                                action: "Select",
                                active: !e.props.disabled && l === a && i,
                                className: _3.hint
                            }), I3(t)]
                        }, a)))
                    }),
                    onToggle: r,
                    children: (0,
                    z.jsx)(xS, {
                        disabled: e.props.disabled,
                        sounds: p3,
                        className: _3.dropdown,
                        children: I3(n)
                    })
                })]
            })
        }
        function I3(e) {
            return e ? (0,
            z.jsx)(gu, {
                value: e.displayName
            }) : null
        }
        X.add("game-ui/game/widgets/dropdown-field/dropdown-field.tsx", {
            get BoundEnumField() {
                return b3
            },
            set BoundEnumField(e) {
                b3 = e
            },
            get BoundDropdownField() {
                return T3
            },
            set BoundDropdownField(e) {
                T3 = e
            }
        });
        let S3 = {
            row: "row_l3P",
            input: "input_JvC",
            label: "label_eX_",
            checkbox: "checkbox_mm1",
            container: "container_ex5",
            hint: "hint_zmA"
        };
        X.add("game-ui/game/widgets/field/field.module.scss", {
            get classes() {
                return S3
            },
            set classes(e) {
                Object.assign(S3, e)
            }
        });
        const y3 = S3;
        var j3 = e=>{
            const [t,n] = (0,
            Y.useState)(!1)
              , s = YM(RR, ZR(e.parent, e.path))
              , i = (0,
            Y.useCallback)((()=>{
                n(!0)
            }
            ), [])
              , a = (0,
            Y.useCallback)((()=>{
                n(!1)
            }
            ), [])
              , o = (0,
            Y.useMemo)((()=>({
                "Change Value": t ? t=>{
                    if (t > 0) {
                        const t = e.props.max ? Math.min(e.props.value + e.props.step, e.props.max) : e.props.value + e.props.step;
                        s(t)
                    }
                    if (t < 0) {
                        const t = e.props.min ? Math.max(e.props.value - e.props.step, e.props.min) : e.props.value - e.props.step;
                        s(t)
                    }
                }
                : null
            })), [t, s, e.props.max, e.props.min, e.props.step, e.props.value])
              , [r,l] = (0,
            Y.useState)(!1);
            return (0,
            z.jsx)(Np, {
                disabled: !t,
                children: (0,
                z.jsx)(Mg, {
                    actions: o,
                    children: (0,
                    z.jsxs)("div", {
                        className: y3.container,
                        children: [(0,
                        z.jsx)(UT, {
                            action: t ? "Back" : "Select",
                            active: r,
                            className: y3.hint
                        }), (0,
                        z.jsx)(Ip, {
                            className: `${y3.row} row-number-input`,
                            onFocusChange: l,
                            children: (0,
                            z.jsx)(MB, {
                                focusKey: e.props.disabled ? Sg : yg,
                                value: e.props.value,
                                min: e.props.min,
                                max: e.props.max,
                                fractionDigits: e.props.fractionDigits,
                                disabled: e.props.disabled,
                                className: y3.input,
                                onFocus: i,
                                onBlur: a,
                                onChange: s
                            })
                        })]
                    })
                })
            })
        }
        ;
        X.add("game-ui/game/widgets/field/float-input-field.tsx", {
            get BoundFloatInputField() {
                return j3
            },
            set BoundFloatInputField(e) {
                j3 = e
            }
        });
        var C3 = e=>{
            const [t,n] = (0,
            Y.useState)(!1)
              , s = YM(RR, ZR(e.parent, e.path))
              , i = (0,
            Y.useCallback)((()=>{
                n(!0)
            }
            ), [])
              , a = (0,
            Y.useCallback)((()=>{
                n(!1)
            }
            ), [])
              , o = (0,
            Y.useMemo)((()=>({
                "Change Value": t ? t=>{
                    if (t > 0) {
                        const t = e.props.max ? Math.min(e.props.value + e.props.step, e.props.max) : e.props.value + e.props.step;
                        s(t)
                    }
                    if (t < 0) {
                        const t = e.props.min ? Math.max(e.props.value - e.props.step, e.props.min) : e.props.value - e.props.step;
                        s(t)
                    }
                }
                : null
            })), [t, s, e.props.max, e.props.min, e.props.step, e.props.value])
              , [r,l] = (0,
            Y.useState)(!1);
            return (0,
            z.jsx)(Np, {
                disabled: !t,
                children: (0,
                z.jsx)(Mg, {
                    actions: o,
                    children: (0,
                    z.jsxs)("div", {
                        className: y3.container,
                        children: [(0,
                        z.jsx)(UT, {
                            action: t ? "Back" : "Select",
                            active: r,
                            className: y3.hint
                        }), (0,
                        z.jsx)(Ip, {
                            className: `${y3.row} row-number-input`,
                            onFocusChange: l,
                            children: (0,
                            z.jsx)(XB, {
                                focusKey: e.props.disabled ? Sg : yg,
                                value: e.props.value,
                                min: e.props.min,
                                max: e.props.max,
                                disabled: e.props.disabled,
                                className: y3.input,
                                onFocus: i,
                                onBlur: a,
                                onChange: s
                            })
                        })]
                    })
                })
            })
        }
        ;
        X.add("game-ui/game/widgets/field/int-input-field.tsx", {
            get BoundIntInputField() {
                return C3
            },
            set BoundIntInputField(e) {
                C3 = e
            }
        });
        var N3 = Y.createContext({
            addAction: ()=>({})
        });
        X.add("game-ui/game/widgets/widget-actions-context.tsx", {
            get WidgetActionsContext() {
                return N3
            },
            set WidgetActionsContext(e) {
                N3 = e
            }
        });
        let w3 = {
            "game-icon-button-group": "game-icon-button-group_RE4",
            gameIconButtonGroup: "game-icon-button-group_RE4",
            button: "button_C2v",
            hidden: "hidden_D1T"
        };
        X.add("game-ui/game/widgets/icon-button/icon-button.module.scss", {
            get classes() {
                return w3
            },
            set classes(e) {
                Object.assign(w3, e)
            }
        });
        const O3 = w3;
        var P3 = e=>(0,
        z.jsx)(M3, {
            children: (0,
            z.jsx)(A3, {
                ...e
            })
        })
          , L3 = ({parent: e, path: t, children: n})=>{
            const s = ZR(e, t);
            return (0,
            z.jsx)(M3, {
                children: n.map((({path: e, ...t})=>(0,
                z.jsx)(A3, {
                    parent: s,
                    path: e,
                    ...t
                }, e)))
            })
        }
        ;
        const A3 = ({parent: e, path: t, props: n})=>{
            const s = YM(MR, ZR(e, t))
              , {addAction: i} = (0,
            Y.useContext)(N3)
              , a = sl(uC)
              , o = Dm()
              , r = n.tooltip?.__Type === Zc.String && "PhotoMode.CAPTURE_PROPERTY_TOOLTIP" === n.tooltip.id
              , l = n.tooltip?.__Type === Zc.String && "PhotoMode.RESET_PROPERTY_TOOLTIP" === n.tooltip.id
              , c = o && (l || r);
            return (0,
            Y.useEffect)((()=>{
                (r || l) && i({
                    [r ? "Capture Keyframe" : "Reset Property"]: !r || a ? s : null
                })
            }
            ), [i, r, a, s, l]),
            (0,
            z.jsx)(mT, {
                uiTag: n.tutorialTag || void 0,
                children: (0,
                z.jsx)(Eg, {
                    tooltip: null != n.tooltip ? (0,
                    z.jsx)(gu, {
                        value: n.tooltip
                    }) : null,
                    children: (0,
                    z.jsx)(R3, {
                        src: n.icon,
                        selected: n.selected,
                        disabled: n.disabled,
                        focusKey: r || l ? Sg : void 0,
                        onSelect: s,
                        className: Zu()(c && O3.hidden)
                    })
                })
            })
        }
        ;
        var M3 = ({children: e})=>(0,
        z.jsx)("div", {
            className: O3.gameIconButtonGroup,
            children: e
        })
          , R3 = ({src: e, selected: t, disabled: n, focusKey: s=yg, className: i, onSelect: a})=>(0,
        z.jsx)(tb, {
            focusKey: s,
            tinted: !0,
            src: e,
            selected: t,
            disabled: n,
            theme: T5,
            className: Zu()(O3.button, i),
            onSelect: a
        });
        X.add("game-ui/game/widgets/icon-button/icon-button.tsx", {
            get BoundIconButton() {
                return P3
            },
            set BoundIconButton(e) {
                P3 = e
            },
            get BoundIconButtonGroup() {
                return L3
            },
            set BoundIconButtonGroup(e) {
                L3 = e
            },
            get GameIconButtonGroup() {
                return M3
            },
            set GameIconButtonGroup(e) {
                M3 = e
            },
            get GameIconButton() {
                return R3
            },
            set GameIconButton(e) {
                R3 = e
            }
        });
        let k3 = {
            "toggle-field": "toggle-field_D6P",
            toggleField: "toggle-field_D6P",
            toggle: "toggle_CGE toggle_cca item-mouse-states_Fmi",
            hint: "hint_ef0",
            checkmark: "checkmark_y64 checkmark_NXV"
        };
        X.add("game-ui/game/widgets/toggle-field/toggle-field.module.scss", {
            get classes() {
                return k3
            },
            set classes(e) {
                Object.assign(k3, e)
            }
        });
        const D3 = k3;
        function F3(e) {
            const t = YM(RR, ZR(e.parent, e.path))
              , n = (0,
            Y.useCallback)((()=>{
                t(!e.props.value)
            }
            ), [t, e.props.value])
              , [s,i] = (0,
            Y.useState)(!1);
            return (0,
            z.jsx)(x3, {
                onFocusChange: i,
                ...e.props,
                onClick: n,
                children: (0,
                z.jsx)(mT, {
                    uiTag: e.props.tutorialTag || void 0,
                    active: !e.props.disabled,
                    children: (0,
                    z.jsxs)("div", {
                        className: D3.toggleField,
                        children: [(0,
                        z.jsx)(UT, {
                            action: "Select",
                            active: s,
                            className: D3.hint
                        }), (0,
                        z.jsx)(Eg, {
                            tooltip: e.props.tooltip && (0,
                            z.jsx)(gu, {
                                value: e.props.tooltip
                            }),
                            children: (0,
                            z.jsx)(Hb, {
                                checked: e.props.value,
                                theme: D3,
                                onChange: t,
                                disabled: e.props.disabled
                            })
                        })]
                    })
                })
            })
        }
        X.add("game-ui/game/widgets/toggle-field/toggle-field.tsx", {
            get BoundToggleField() {
                return F3
            },
            set BoundToggleField(e) {
                F3 = e
            }
        });
        let U3 = {
            container: "container_X0Y item-focused_FuT",
            group: "group_exT",
            title: "title_Ymv",
            "group-title": "group-title_kBL",
            groupTitle: "group-title_kBL",
            children: "children_OGU",
            draggable: "draggable_ujB",
            "before-title-group": "before-title-group_QfP",
            beforeTitleGroup: "before-title-group_QfP",
            active: "active_J2S",
            tooltip: "tooltip_Cyv",
            "tooltip-content": "tooltip-content_DIt",
            tooltipContent: "tooltip-content_DIt",
            "tooltip-content-row": "tooltip-content-row_giV",
            tooltipContentRow: "tooltip-content-row_giV",
            "dummy-toggle": "dummy-toggle_QBX",
            dummyToggle: "dummy-toggle_QBX"
        };
        X.add("game-ui/game/components/photo-mode/widgets/photo-mode-container.module.scss", {
            get classes() {
                return U3
            },
            set classes(e) {
                Object.assign(U3, e)
            }
        });
        const B3 = U3;
        var G3 = (0,
        Y.memo)((function({parent: e, path: t, children: n, props: s}) {
            const [i,a] = (0,
            Y.useState)(!1)
              , [o,r] = (0,
            Y.useState)({})
              , l = ZR(e, t);
            let c = !1
              , u = !1;
            const d = -1 !== n.findIndex((e=>"PhotoMode.ENABLE_PROPERTY_TOOLTIP" === e.props?.tooltip?.id && "Game.UI.Widgets.ToggleField" === e.props.__Type && Number(e.path) < 2))
              , [m,h] = n.reduce(((e,t)=>{
                const n = "Game.UI.Widgets.IconButton" === t.props.__Type && "PhotoMode.CAPTURE_PROPERTY_TOOLTIP" === t.props?.tooltip?.id
                  , s = "Game.UI.Widgets.ToggleField" === t.props.__Type && Number(t.path) < 2;
                return n || s ? ("PhotoMode.ENABLE_PROPERTY_TOOLTIP" === t.props?.tooltip?.id && (c = !!t.props.value,
                u = t.props.disabled),
                e[0].find((e=>"PhotoMode.CAPTURE_PROPERTY_TOOLTIP" === e.props?.tooltip?.id)) ? e[1].push(t) : e[0].push(t)) : e[1].push(t),
                e
            }
            ), [[], []])
              , g = (0,
            Y.useCallback)((e=>{
                r((t=>({
                    ...t,
                    ...e
                })))
            }
            ), [])
              , p = (0,
            z.jsx)(gu, {
                value: s.displayName
            })
              , f = s.tooltip && (0,
            z.jsx)(gu, {
                value: s.tooltip
            })
              , x = (0,
            Y.useMemo)((()=>({
                addAction: g
            })), [g]);
            return (0,
            z.jsx)(Mg, {
                actions: c ? o : null,
                children: (0,
                z.jsx)(Sp, {
                    onFocusChange: a,
                    focusKey: 0 === n.length || u ? Sg : void 0,
                    className: Zu()(B3.container, {
                        [B3.active]: c || !d,
                        [B3.group]: !h.length
                    }),
                    children: (0,
                    z.jsx)("div", {
                        className: B3.children,
                        children: (0,
                        z.jsx)(Ep, {
                            disabled: !i,
                            children: (0,
                            z.jsx)(N3.Provider, {
                                value: x,
                                children: (0,
                                z.jsxs)(np, {
                                    direction: kg.Both,
                                    children: [!!m.length && (0,
                                    z.jsxs)("div", {
                                        className: B3.beforeTitleGroup,
                                        children: [1 === m.length && "Game.UI.Widgets.IconButton" === m[0].props.__Type && (0,
                                        z.jsx)("div", {
                                            className: B3.dummyToggle
                                        }), (0,
                                        z.jsx)(hD, {
                                            parent: l,
                                            components: Q3,
                                            data: m
                                        })]
                                    }), (0,
                                    z.jsx)(BQ, {
                                        alignment: "start",
                                        direction: "left",
                                        title: p,
                                        description: f,
                                        className: B3.tooltip,
                                        children: (0,
                                        z.jsx)("div", {
                                            className: Zu()(B3.title, {
                                                [B3.groupTitle]: !h.length
                                            }, u && "disabled"),
                                            children: p
                                        })
                                    }), (0,
                                    z.jsx)(Ep, {
                                        disabled: d && !c,
                                        children: (0,
                                        z.jsx)(hD, {
                                            parent: l,
                                            components: Q3,
                                            data: h
                                        })
                                    })]
                                })
                            })
                        })
                    })
                })
            })
        }
        ), ((e,t)=>Kr(e, t, 20)))
          , V3 = ({title: e, tooltip: t, tooltipPos: n=OR.Container, children: s})=>{
            let i = null;
            e && (i = n === OR.Title && t ? (0,
            z.jsx)(Eg, {
                tooltip: t,
                children: (0,
                z.jsx)("div", {
                    className: B3.title,
                    children: e
                })
            }) : (0,
            z.jsx)("div", {
                className: B3.title,
                children: e
            }));
            const a = (0,
            z.jsx)(Sp, {
                className: B3.container,
                children: (0,
                z.jsx)(np, {
                    children: (0,
                    z.jsxs)("div", {
                        className: B3.children,
                        children: [i, s]
                    })
                })
            });
            return t && n !== OR.Title ? (0,
            z.jsx)(Eg, {
                tooltip: t,
                children: a
            }) : a
        }
        ;
        X.add("game-ui/game/components/photo-mode/widgets/photo-mode-container.tsx", {
            get BoundPhotoModeContainer() {
                return G3
            },
            set BoundPhotoModeContainer(e) {
                G3 = e
            },
            get PhotoModeContainer() {
                return V3
            },
            set PhotoModeContainer(e) {
                V3 = e
            }
        });
        const H3 = 1e4
          , K3 = (e,t)=>[isFinite(e) ? e : Math.sign(e) * H3, isFinite(t) ? t > e ? t : H3 : Math.sign(t) * H3]
          , W3 = (e,t)=>Math.pow(Math.abs(e) / t, 3);
        function z3(e) {
            const [t,n] = (0,
            Y.useMemo)((()=>K3(e.props.min, e.props.max)), [e.props.min, e.props.max])
              , s = (0,
            Y.useCallback)(((e,s)=>Od(e + (s < 0 ? t - e : n - e) * W3(s, .1), t, n)), [t, n]);
            return (0,
            z.jsx)($3, {
                ...e,
                dragTransformation: s
            })
        }
        function Y3(e) {
            const [t,n] = (0,
            Y.useMemo)((()=>K3(e.props.min, e.props.max)), [e.props.min, e.props.max])
              , s = (0,
            Y.useCallback)(((e,s)=>Od(e + (s < 0 ? t - e : n - e) * W3(s, .1), t, n)), [t, n]);
            return (0,
            z.jsx)($3, {
                ...e,
                dragTransformation: s
            })
        }
        const $3 = ({parent: e, path: t, props: n, dragTransformation: s})=>{
            const i = YM(RR, ZR(e, t))
              , a = (0,
            z.jsx)(PB, {
                className: B3.draggable,
                value: n.value,
                disabled: n.disabled,
                dragTransformation: s,
                onChange: i
            })
              , o = (0,
            z.jsx)(gu, {
                value: n.displayName
            })
              , r = n.tooltip && (0,
            z.jsx)(gu, {
                value: n.tooltip
            })
              , l = (0,
            z.jsx)(q3, {
                min: n.min,
                max: n.max,
                fractionDigits: 0
            });
            return o || r || l ? (0,
            z.jsx)(BQ, {
                alignment: "start",
                direction: "left",
                title: o,
                description: r,
                content: l,
                className: B3.tooltip,
                children: a
            }) : a
        }
        ;
        function q3({min: e, max: t, fractionDigits: n}) {
            const s = isFinite(e)
              , i = isFinite(t) && (t > e || !s);
            return s || i ? (0,
            z.jsxs)("div", {
                className: B3.tooltipContent,
                children: [s && (0,
                z.jsxs)("div", {
                    className: B3.tooltipContentRow,
                    children: [(0,
                    z.jsx)("div", {
                        children: (0,
                        z.jsx)(_c.PhotoMode.PROPERTY_LIMIT_MIN, {})
                    }), (0,
                    z.jsx)("div", {
                        children: e.toFixed(n)
                    })]
                }), i && (0,
                z.jsxs)("div", {
                    className: B3.tooltipContentRow,
                    children: [(0,
                    z.jsx)("div", {
                        children: (0,
                        z.jsx)(_c.PhotoMode.PROPERTY_LIMIT_MAX, {})
                    }), (0,
                    z.jsx)("div", {
                        children: t.toFixed(n)
                    })]
                })]
            }) : null
        }
        X.add("game-ui/game/components/photo-mode/widgets/photo-mode-draggable-slider.tsx", {
            get BoundIntDraggableSliderField() {
                return z3
            },
            set BoundIntDraggableSliderField(e) {
                z3 = e
            },
            get BoundFloatDraggableSliderField() {
                return Y3
            },
            set BoundFloatDraggableSliderField(e) {
                Y3 = e
            }
        });
        var X3 = ({displayName: e, parent: t, data: n})=>{
            const {scrollTo: s} = (0,
            Y.useContext)(hp);
            return (0,
            Y.useEffect)((()=>{
                s(0, 0)
            }
            ), [e, s]),
            (0,
            z.jsx)(hD, {
                parent: t,
                components: Q3,
                data: n
            }, e)
        }
          , Q3 = {
            [NR.Group]: G3,
            [NR.FloatSliderField]: Y3,
            [NR.IntSliderField]: z3,
            [NR.ToggleField]: F3,
            [NR.IconButton]: P3,
            [cC.DropdownField]: T3,
            [NR.FloatInputField]: j3,
            [NR.IntInputField]: C3,
            [NR.EnumField]: b3,
            [NR.ColorField]: x1
        };
        X.add("game-ui/game/components/photo-mode/photo-widget-renderer.tsx", {
            get PhotoWidgetListRenderer() {
                return X3
            },
            set PhotoWidgetListRenderer(e) {
                X3 = e
            },
            get photoModeWidgetComponents() {
                return Q3
            },
            set photoModeWidgetComponents(e) {
                Q3 = e
            }
        });
        let Z3 = {
            label: "label_fnL",
            "photo-mode-panel": "photo-mode-panel_oo_",
            photoModePanel: "photo-mode-panel_oo_",
            "photo-mode-content": "photo-mode-content_LMM",
            photoModeContent: "photo-mode-content_LMM",
            "simulation-warning": "simulation-warning_t8O",
            simulationWarning: "simulation-warning_t8O",
            scrollable: "scrollable_eMn",
            "button-panel": "button-panel_dnD",
            buttonPanel: "button-panel_dnD",
            header: "header_TTs",
            "cinematic-camera-button": "cinematic-camera-button_ctq item-states_QjV",
            cinematicCameraButton: "cinematic-camera-button_ctq item-states_QjV",
            "expand-icon": "expand-icon_y2O",
            expandIcon: "expand-icon_y2O",
            "cinematic-camera-icon": "cinematic-camera-icon_thU",
            cinematicCameraIcon: "cinematic-camera-icon_thU",
            "tab-bar": "tab-bar_wDc",
            tabBar: "tab-bar_wDc",
            tabs: "tabs_asW",
            "tab-button": "tab-button_D0T",
            tabButton: "tab-button_D0T",
            icon: "icon_KWo",
            locked: "locked_y0b",
            "footer-button": "footer-button_TNQ",
            footerButton: "footer-button_TNQ",
            "footer-button-hint": "footer-button-hint_poK",
            footerButtonHint: "footer-button-hint_poK",
            hint: "hint_XyY",
            "floating-hint": "floating-hint_k6r",
            floatingHint: "floating-hint_k6r"
        };
        X.add("game-ui/game/components/photo-mode/photo-mode-panel.module.scss", {
            get classes() {
                return Z3
            },
            set classes(e) {
                Object.assign(Z3, e)
            }
        });
        const J3 = Z3;
        var e4 = ({onClose: e})=>{
            const t = sl(uC)
              , n = sl(by);
            cg(vT.value?.photoModePanel);
            const s = (0,
            Y.useCallback)((()=>{
                lC(!t)
            }
            ), [t])
              , i = (0,
            Y.useCallback)((()=>{
                lC(!1)
            }
            ), [])
              , a = (0,
            Y.useCallback)((()=>{
                n ? Sy() : t ? i() : e()
            }
            ), [t, i, e, n])
              , o = (0,
            Y.useMemo)((()=>({
                [t ? "Photo Mode" : "Cinematic Mode"]: s
            })), [t, s]);
            return (0,
            z.jsx)(Fg, {
                onAction: a,
                children: (0,
                z.jsx)(Mg, {
                    actions: o,
                    children: (0,
                    z.jsxs)(np, {
                        children: [(0,
                        z.jsx)(m3, {
                            isVisible: t,
                            onClose: i
                        }), (0,
                        z.jsx)(mT, {
                            uiTag: vT.value?.photoModePanel,
                            children: (0,
                            z.jsx)(rE, {
                                className: J3.photoModePanel,
                                transitionSounds: up,
                                onClose: a,
                                allowFocusExit: !0,
                                header: (0,
                                z.jsx)(n4, {
                                    toggleCinematicCameraPanel: s
                                }),
                                showCloseHint: !t,
                                hintClassName: J3.floatingHint,
                                children: (0,
                                z.jsx)(t4, {})
                            })
                        })]
                    })
                })
            })
        }
          , t4 = ({simulationWarning: e=!0})=>{
            const t = sl(gC)
              , n = QR(eC)
              , s = sl(dC)
              , i = sl(mC)
              , a = (0,
            Y.useCallback)((e=>{
                const t = s.findIndex((e=>e.id === i));
                if (t >= 0) {
                    const n = (t + e) % s.length;
                    rC(s[n < 0 ? n + s.length : n].id)
                } else
                    rC(s[s.length - 1].id)
            }
            ), [i, s])
              , o = (0,
            Y.useMemo)((()=>({
                "Switch Tab": a
            })), [a]);
            return (0,
            Y.useEffect)((()=>(sC(!0),
            ()=>{
                tC(),
                sC(!1)
            }
            )), []),
            (0,
            z.jsx)(Mg, {
                actions: o,
                children: (0,
                z.jsxs)(np, {
                    children: [(0,
                    z.jsx)(s4, {}), (0,
                    z.jsxs)("div", {
                        className: J3.photoModeContent,
                        children: ["Environment" === i && e && (0,
                        z.jsx)("div", {
                            className: J3.simulationWarning,
                            children: (0,
                            z.jsx)(_c.PhotoMode.ENVIRONMENT_DISCLAIMER, {})
                        }), (0,
                        z.jsx)(mb, {
                            className: J3.scrollable,
                            children: null != t && (0,
                            z.jsx)(X3, {
                                displayName: i,
                                parent: n,
                                data: t
                            })
                        }), (0,
                        z.jsx)(i4, {})]
                    })]
                })
            })
        }
        ;
        const n4 = ({toggleCinematicCameraPanel: e})=>{
            const t = sl(uC)
              , n = t ? "ExpandRight" : "ExpandLeft";
            return (0,
            z.jsxs)("div", {
                className: J3.header,
                children: [(0,
                z.jsx)(mT, {
                    uiTag: vT.value?.photoModeCinematicCameraToggle,
                    children: (0,
                    z.jsx)(Eg, {
                        tooltip: (0,
                        z.jsx)(_c.CinematicCamera.TITLE, {}),
                        children: (0,
                        z.jsxs)(sS, {
                            focusKey: Sg,
                            theme: T5,
                            onSelect: e,
                            className: J3.cinematicCameraButton,
                            children: [(0,
                            z.jsx)(UT, {
                                action: t ? "Photo Mode" : "Cinematic Mode",
                                className: J3.hint
                            }), (0,
                            z.jsx)(Z_, {
                                src: `Media/PhotoMode/${n}.svg`,
                                className: J3.expandIcon
                            }), (0,
                            z.jsx)(Z_, {
                                src: "Media/Game/Icons/CinematicCamera.svg",
                                className: J3.cinematicCameraIcon
                            })]
                        })
                    })
                }), (0,
                z.jsx)(mT, {
                    uiTag: vT.value?.photoModePanelTitle,
                    children: (0,
                    z.jsx)(dE, {
                        children: t ? (0,
                        z.jsx)(_c.CinematicCamera.TITLE, {}) : (0,
                        z.jsx)(_c.PhotoMode.TITLE, {})
                    })
                })]
            })
        }
          , s4 = ()=>{
            const e = sl(mC)
              , t = sl(dC)
              , n = (0,
            Y.useCallback)((e=>rC(e)), []);
            return (0,
            z.jsx)("div", {
                className: J3.header,
                children: (0,
                z.jsx)(Ep, {
                    children: (0,
                    z.jsx)("div", {
                        className: J3.tabBar,
                        children: (0,
                        z.jsx)("div", {
                            className: J3.tabs,
                            children: (0,
                            z.jsx)(WH, {
                                children: t.map(((t,s)=>(0,
                                z.jsx)(a4, {
                                    id: t.id,
                                    icon: t.icon,
                                    tooltip: (0,
                                    z.jsx)(_c.PhotoMode.TAB, {
                                        hash: t.id
                                    }),
                                    selected: t.id === e,
                                    onSelect: n,
                                    tutorialTag: 0 === s ? vT.value?.photoModeTab : void 0
                                }, s)))
                            })
                        })
                    })
                })
            })
        }
          , i4 = ()=>{
            const e = sl(iC)
              , t = sl(EP)
              , n = (0,
            Y.useCallback)((()=>{
                t ? MQ(LQ.freeCamera) : Av(Ov.freeCamera)
            }
            ), [t]);
            return (0,
            z.jsx)("div", {
                className: J3.buttonPanel,
                children: (0,
                z.jsxs)(np, {
                    direction: kg.Horizontal,
                    children: [(0,
                    z.jsx)(o4, {
                        tutorialTag: vT.value?.photoModePanelTakePicture,
                        tooltip: (0,
                        z.jsx)(_c.PhotoMode.TAKE_PHOTO, {}),
                        icon: "Media/PhotoMode/TakePicture.svg",
                        onSelect: oC,
                        selectSound: lp.takePhoto
                    }), (0,
                    z.jsx)(o4, {
                        tutorialTag: vT.value?.photoModePanelHideUI,
                        tooltip: (0,
                        z.jsx)(_c.PhotoMode.HIDE_UI, {}),
                        icon: "Media/PhotoMode/HideUIOn.svg",
                        onSelect: n
                    }), (0,
                    z.jsx)(o4, {
                        tooltip: (0,
                        z.jsx)(_c.PhotoMode.TOGGLE_ORBIT_MODE, {}),
                        icon: "Media/Game/Icons/Orbit.svg",
                        selected: e,
                        onSelect: aC
                    })]
                })
            })
        }
          , a4 = ({id: e, icon: t, tooltip: n, selected: s, disabled: i, className: a, onSelect: o, tutorialTag: r})=>{
            const l = (0,
            Y.useCallback)((()=>o(e)), [e, o])
              , c = (0,
            Y.useMemo)((()=>"PhotoModeTab+" + e), [e]);
            return (0,
            z.jsx)(mT, {
                uiTag: r,
                children: (0,
                z.jsx)(mT, {
                    uiTag: c,
                    children: (0,
                    z.jsx)(Eg, {
                        tooltip: n,
                        children: (0,
                        z.jsx)(tb, {
                            src: t,
                            disabled: i,
                            selected: s,
                            className: Zu()(a, J3.tabButton),
                            onSelect: l
                        })
                    })
                })
            })
        }
          , o4 = ({icon: e, tooltip: t, selected: n, tutorialTag: s, selectSound: i, hint: a="Select", onSelect: o})=>{
            const [r,l] = (0,
            Y.useState)(!1);
            return (0,
            z.jsx)(mT, {
                uiTag: s,
                children: (0,
                z.jsx)(Eg, {
                    tooltip: t,
                    children: (0,
                    z.jsx)(Ah, {
                        onFocusChange: l,
                        children: (0,
                        z.jsx)(tb, {
                            disableHint: !0,
                            tinted: !0,
                            theme: T5,
                            src: e,
                            selected: n,
                            onSelect: o,
                            selectSound: i,
                            className: J3.footerButton,
                            children: (0,
                            z.jsx)(UT, {
                                action: a,
                                active: r,
                                className: J3.footerButtonHint
                            })
                        })
                    })
                })
            })
        }
        ;
        X.add("game-ui/game/components/photo-mode/photo-mode-panel.tsx", {
            get PhotoModePanel() {
                return e4
            },
            set PhotoModePanel(e) {
                e4 = e
            },
            get PhotoModePanelContent() {
                return t4
            },
            set PhotoModePanelContent(e) {
                t4 = e
            }
        });
        let r4 = {
            "resize-container": "resize-container_AAw",
            resizeContainer: "resize-container_AAw",
            "drag-handle": "drag-handle_enz",
            dragHandle: "drag-handle_enz",
            left: "left_jHP",
            right: "right_fxN",
            "resize-cursor": "resize-cursor_YOy",
            resizeCursor: "resize-cursor_YOy"
        };
        X.add("game-ui/editor/components/resize-container/resize-container.module.scss", {
            get classes() {
                return r4
            },
            set classes(e) {
                Object.assign(r4, e)
            }
        });
        const l4 = r4;
        var c4 = ({width: e, minWidth: t, maxWidth: n, direction: s, className: i, children: a, onResize: o})=>{
            const r = "left" === s ? -1 : 1
              , [l,c] = (0,
            Y.useState)(0)
              , u = (0,
            Y.useCallback)((e=>c(e)), [])
              , d = (0,
            Y.useCallback)((()=>c(0)), [])
              , m = (0,
            Y.useCallback)((s=>{
                o(Od(e + r * s, t, n)),
                c(0)
            }
            ), [o, e, r, t, n]);
            return (0,
            z.jsxs)("div", {
                className: Zu()(l4.resizeContainer, i),
                style: {
                    width: Od(e + r * l, t, n)
                },
                children: [a, "none" !== s && (0,
                z.jsx)(u4, {
                    className: l4[s],
                    onChange: u,
                    onDragStart: d,
                    onDragEnd: m
                })]
            })
        }
        ;
        const u4 = ({className: e, onChange: t, onDragStart: n, onDragEnd: s})=>{
            const i = (0,
            Y.useRef)(null)
              , a = (0,
            Y.useCallback)((({clientX: e})=>(document.activeElement instanceof HTMLElement && document.activeElement.blur(),
            i.current = e,
            n(),
            !0)), [n])
              , o = (0,
            Y.useCallback)((({clientX: e})=>{
                null != i.current && (s(e - i.current),
                i.current = null)
            }
            ), [s])
              , r = (0,
            Y.useCallback)((({clientX: e})=>{
                null != i.current && t(e - i.current)
            }
            ), [t])
              , [l,c] = rb(a, r, o);
            return qp(l ? l4.resizeCursor : void 0),
            (0,
            z.jsx)("div", {
                className: Zu()(l4.dragHandle, l && "dragging", e),
                onMouseDown: c
            })
        }
        ;
        X.add("game-ui/editor/components/resize-container/resize-container.tsx", {
            get ResizeContainer() {
                return c4
            },
            set ResizeContainer(e) {
                c4 = e
            }
        });
        let d4 = {
            minWidth: "250rem",
            maxWidth: "800rem",
            container: "container_bUn",
            panel: "panel_R8J",
            content: "content_Mxn"
        };
        X.add("game-ui/editor/components/editor-panel/editor-panel.module.scss", {
            get classes() {
                return d4
            },
            set classes(e) {
                Object.assign(d4, e)
            }
        });
        const m4 = d4;
        var h4 = ({active: e, resizeDirection: t, className: n, footer: s, focusKey: i, unfocusedHintAction: a, hideAdvisor: o=!1})=>{
            const [r,l] = (0,
            Y.useState)(!0)
              , c = Vm(m4.minWidth)
              , u = Vm(m4.maxWidth)
              , d = sl(eR)
              , m = Hm()
              , h = (0,
            Y.useCallback)((e=>{
                sR(Math.round(e / m))
            }
            ), [m])
              , g = sl(JM)
              , p = sl(nR)
              , f = sl(j2)
              , x = (0,
            Y.useCallback)((e=>{}
            ), []);
            return (0,
            z.jsx)(c4, {
                width: d * m,
                minWidth: c,
                maxWidth: u,
                direction: r ? t : "none",
                className: n,
                onResize: h,
                children: (0,
                z.jsxs)("div", {
                    className: m4.container,
                    children: [!f && !o && (0,
                    z.jsx)(g5, {
                        focusKey: Sg,
                        expanded: !0,
                        onToggle: x,
                        onClose: gg,
                        theme: c5,
                        localization: _c.EditorTutorials
                    }), e && (0,
                    z.jsx)(o5, {
                        expanded: r,
                        headerText: null != g && (0,
                        z.jsx)(gu, {
                            value: g
                        }),
                        footer: s,
                        theme: c5,
                        className: m4.panel,
                        contentClassName: m4.content,
                        onToggleExpanded: l,
                        onClose: aR,
                        focusKey: i,
                        unfocusedHintAction: a,
                        children: (0,
                        z.jsx)(Fg, {
                            onAction: iR,
                            children: (0,
                            z.jsx)(np, {
                                children: p === XM.Editor ? (0,
                                z.jsx)(g4, {}) : (0,
                                z.jsx)(p4, {})
                            })
                        })
                    })]
                })
            })
        }
        ;
        const g4 = ()=>{
            const e = sl(tR)
              , t = QR(QM);
            return (0,
            z.jsx)(cY, {
                parent: t,
                data: e
            })
        }
          , p4 = ()=>(0,
        z.jsx)(t4, {
            simulationWarning: !1
        });
        function f4(e) {
            const [t,n] = (0,
            Y.useState)(Bv.value?.__Type === e);
            (0,
            Y.useEffect)((()=>{
                const t = Bv.subscribe((t=>{
                    n(Gu(t, e))
                }
                ));
                return ()=>{
                    t.dispose()
                }
            }
            ), [e]);
            const s = (0,
            Y.useCallback)((()=>Hv(e)), [e]);
            return (0,
            Y.useMemo)((()=>({
                visible: t,
                toggle: s
            })), [t, s])
        }
        function x4(e, t) {
            const n = Gu(t, e)
              , s = (0,
            Y.useCallback)((()=>Hv(e)), [e]);
            return (0,
            Y.useMemo)((()=>({
                visible: n,
                toggle: s
            })), [n, s])
        }
        X.add("game-ui/editor/components/editor-panel/editor-panel.tsx", {
            get EditorPanel() {
                return h4
            },
            set EditorPanel(e) {
                h4 = e
            }
        }),
        X.add("game-ui/common/hooks/use-game-panel-state.tsx", {
            get useGamePanelState() {
                return f4
            },
            set useGamePanelState(e) {
                f4 = e
            },
            get useGamePanelStateControlled() {
                return x4
            },
            set useGamePanelStateControlled(e) {
                x4 = e
            }
        });
        let v4 = {
            "infomode-item": "infomode-item_K8b item-focused_FuT item-mouse-states_Fmi",
            infomodeItem: "infomode-item_K8b item-focused_FuT item-mouse-states_Fmi",
            checkbox: "checkbox_JWP",
            header: "header_dAd",
            title: "title_tX0",
            "title-text": "title-text_uCA",
            titleText: "title-text_uCA",
            color: "color_Q5Z",
            legend: "legend_K3N",
            "color-legend": "color-legend_PQU legend_K3N",
            colorLegend: "color-legend_PQU legend_K3N",
            "color-legend-item": "color-legend-item__ty",
            colorLegendItem: "color-legend-item__ty",
            label: "label_oSR",
            gradient: "gradient_HaQ",
            type: "type_puL",
            "active-opacity": "active-opacity_cfv",
            activeOpacity: "active-opacity_cfv",
            active: "active_m64",
            hint: "hint_R8p",
            "hint-icon": "hint-icon_Smd",
            hintIcon: "hint-icon_Smd"
        };
        X.add("game-ui/game/components/infoviews/active-infoview-panel/components/infomode-item/infomode-item.module.scss", {
            get classes() {
                return v4
            },
            set classes(e) {
                Object.assign(v4, e)
            }
        });
        const _4 = v4
          , b4 = {
            icon: _4.hintIcon,
            hint: _4.hint
        };
        var T4 = ({focusKey: e, infomode: t})=>{
            const [n,s] = (0,
            Y.useState)(!1)
              , {id: i, active: a} = t
              , o = (0,
            Y.useCallback)((()=>{
                af(t.entity, !t.active, t.priority)
            }
            ), [t.entity, t.active, t.priority]);
            return (0,
            z.jsx)(Eg, {
                direction: "right",
                tooltip: (0,
                z.jsx)(Cb, {
                    children: (0,
                    z.jsx)(_c.Infoviews.INFOMODE_TOOLTIP, {
                        hash: i
                    })
                }),
                children: (0,
                z.jsx)(Ah, {
                    onFocusChange: s,
                    children: (0,
                    z.jsxs)(U_, {
                        disableHint: !0,
                        focusKey: e,
                        onSelect: o,
                        theme: T5,
                        selectSound: lp.toggleInfoMode,
                        selectAction: a ? "Disable Info Mode" : "Enable Info Mode",
                        className: Zu()(_4.infomodeItem, a && _4.active),
                        children: [(0,
                        z.jsxs)("div", {
                            className: _4.header,
                            children: [(0,
                            z.jsxs)("div", {
                                className: Zu()(_4.title, _4.activeOpacity),
                                children: [t.color && (0,
                                z.jsx)(vQ, {
                                    color: xN(t.color),
                                    className: _4.color
                                }), (0,
                                z.jsx)("div", {
                                    className: _4.titleText,
                                    children: (0,
                                    z.jsx)(_c.Infoviews.INFOMODE, {
                                        hash: i
                                    })
                                })]
                            }), (0,
                            z.jsxs)("div", {
                                className: _4.type,
                                children: [(0,
                                z.jsx)("div", {
                                    className: Zu()(_4.activeOpacity),
                                    children: (0,
                                    z.jsx)(_c.Infoviews.INFOMODE_TYPE, {
                                        hash: t.type
                                    })
                                }), (0,
                                z.jsx)(UT, {
                                    action: a ? "Disable Info Mode" : "Enable Info Mode",
                                    active: n,
                                    theme: b4
                                }), (0,
                                z.jsx)(Hb, {
                                    checked: a,
                                    focusKey: Sg,
                                    className: Zu()(_4.checkbox, _4.activeOpacity)
                                })]
                            })]
                        }), t.gradientLegend && (0,
                        z.jsx)(E4, {
                            ...t.gradientLegend
                        }), t.colorLegends.length > 0 && (0,
                        z.jsx)("div", {
                            className: _4.colorLegend,
                            children: t.colorLegends.map(((e,t)=>(0,
                            z.jsx)(xQ, {
                                color: xN(e.color),
                                label: (0,
                                z.jsx)(gu, {
                                    value: e.label
                                }),
                                className: _4.colorLegendItem
                            }, t)))
                        })]
                    })
                })
            })
        }
        ;
        const E4 = ({lowLabel: e, highLabel: t, gradient: n})=>(0,
        z.jsxs)("div", {
            className: Zu()(_4.legend, _4.activeOpacity),
            children: [e && (0,
            z.jsx)("div", {
                className: _4.label,
                children: (0,
                z.jsx)(gu, {
                    value: e
                })
            }), (0,
            z.jsx)("div", {
                className: _4.gradient,
                style: {
                    backgroundImage: jN(n)
                }
            }), t && (0,
            z.jsx)("div", {
                className: _4.label,
                children: (0,
                z.jsx)(gu, {
                    value: t
                })
            })]
        });
        X.add("game-ui/game/components/infoviews/active-infoview-panel/components/infomode-item/infomode-item.tsx", {
            get InfomodeItem() {
                return T4
            },
            set InfomodeItem(e) {
                T4 = e
            }
        });
        let I4 = {
            "small-space": "small-space_DCq",
            smallSpace: "small-space_DCq",
            space: "space_uKL"
        };
        X.add("game-ui/game/components/infoviews/active-infoview-panel/components/infoview-panel-space.module.scss", {
            get classes() {
                return I4
            },
            set classes(e) {
                Object.assign(I4, e)
            }
        });
        const S4 = I4;
        var y4 = ({small: e=!1})=>(0,
        z.jsx)("div", {
            className: e ? S4.smallSpace : S4.space
        });
        X.add("game-ui/game/components/infoviews/active-infoview-panel/components/infoview-panel-space.tsx", {
            get InfoviewPanelSpace() {
                return y4
            },
            set InfoviewPanelSpace(e) {
                y4 = e
            }
        });
        let j4 = {
            labels: "labels_L7Q",
            row: "row_S2v",
            "left-icon": "left-icon_fKY",
            leftIcon: "left-icon_fKY",
            left: "left_Lgw",
            uppercase: "uppercase_RJI",
            right: "right_k3O",
            centered: "centered_j4I",
            small: "small_ExK",
            label: "label_NuH",
            tiny: "tiny_m9B",
            "icon-label": "icon-label_J_h",
            iconLabel: "icon-label_J_h",
            icon: "icon_W7O"
        };
        X.add("game-ui/game/components/infoviews/active-infoview-panel/components/labels/labels.module.scss", {
            get classes() {
                return j4
            },
            set classes(e) {
                Object.assign(j4, e)
            }
        });
        const C4 = j4;
        var N4 = ({icon: e, text: t, rightText: n, uppercase: s=!1, centered: i=!1, small: a=!1, tiny: o=!1})=>(0,
        z.jsxs)("div", {
            className: Zu()(C4.labels, C4.row, s && C4.uppercase, i && C4.centered, a && C4.small, o && C4.tiny),
            children: [e && (0,
            z.jsx)("img", {
                src: e,
                className: C4.leftIcon
            }), t && (0,
            z.jsx)("div", {
                className: Zu()(C4.left, C4.row),
                children: t
            }), n && (0,
            z.jsx)("div", {
                className: Zu()(C4.right, C4.row),
                children: n
            })]
        })
          , w4 = ({icon: e, label: t})=>(0,
        z.jsxs)("div", {
            className: C4.iconLabel,
            children: [(0,
            z.jsx)(Z_, {
                src: e,
                className: C4.icon
            }), (0,
            z.jsx)("div", {
                className: C4.label,
                children: t
            })]
        });
        X.add("game-ui/game/components/infoviews/active-infoview-panel/components/labels/labels.tsx", {
            get InfoviewPanelLabel() {
                return N4
            },
            set InfoviewPanelLabel(e) {
                N4 = e
            },
            get InfoviewPanelIconLabel() {
                return w4
            },
            set InfoviewPanelIconLabel(e) {
                w4 = e
            }
        });
        var O4 = {
            stops: [{
                color: "#0331fc",
                offset: 0
            }, {
                color: "#0331fc",
                offset: .333
            }, {
                color: "#fcba03",
                offset: .333
            }, {
                color: "#fcba03",
                offset: .666
            }, {
                color: "#a15800",
                offset: .666
            }, {
                color: "#a15800",
                offset: 1
            }]
        }
          , P4 = {
            stops: [{
                color: "#479436",
                offset: 0
            }, {
                color: "#63B506",
                offset: .66
            }, {
                color: "#FF831B",
                offset: .33
            }, {
                color: "#FF4E18",
                offset: 1
            }]
        }
          , L4 = {
            stops: [{
                color: "#FF4E18",
                offset: 0
            }, {
                color: "#FF831B",
                offset: .33
            }, {
                color: "#63B506",
                offset: .66
            }, {
                color: "#479436",
                offset: 1
            }]
        }
          , A4 = {
            stops: [{
                color: "#FF4E18",
                offset: 0
            }, {
                color: "#FF4E18",
                offset: .9
            }, {
                color: "#479436",
                offset: 1
            }]
        }
          , M4 = {
            stops: [{
                color: "#e8f6e5",
                offset: 0
            }, {
                color: "#479436",
                offset: 1
            }]
        }
          , R4 = {
            stops: [{
                color: "#FF4E18",
                offset: 0
            }, {
                color: "#FF4E18",
                offset: .4
            }, {
                color: "#FF831B",
                offset: .4
            }, {
                color: "#FF831B",
                offset: .5
            }, {
                color: "#63B506",
                offset: .5
            }, {
                color: "#63B506",
                offset: .6
            }, {
                color: "#479436",
                offset: .6
            }, {
                color: "#479436",
                offset: 1
            }]
        }
          , k4 = {
            stops: [{
                color: "#FF4E18",
                offset: 0
            }, {
                color: "#FF4E18",
                offset: .8
            }, {
                color: "#FF831B",
                offset: .8
            }, {
                color: "#FF831B",
                offset: .9
            }, {
                color: "#63B506",
                offset: .9
            }, {
                color: "#63B506",
                offset: 1
            }]
        };
        X.add("game-ui/game/components/infoviews/active-infoview-panel/components/infoview-panels-util.tsx", {
            get pollutionGradient() {
                return O4
            },
            set pollutionGradient(e) {
                O4 = e
            },
            get malusGradient() {
                return P4
            },
            set malusGradient(e) {
                P4 = e
            },
            get bonusGradient() {
                return L4
            },
            set bonusGradient(e) {
                L4 = e
            },
            get transmissionGradient() {
                return A4
            },
            set transmissionGradient(e) {
                A4 = e
            },
            get greenGradient() {
                return M4
            },
            set greenGradient(e) {
                M4 = e
            },
            get availabilityGradient() {
                return R4
            },
            set availabilityGradient(e) {
                R4 = e
            },
            get exportGradient() {
                return k4
            },
            set exportGradient(e) {
                k4 = e
            }
        });
        let D4 = {
            bar: "bar_nW3",
            gradient: "gradient_P8C",
            overlay: "overlay_UV7",
            diagonalMask: "diagonalMask_osp",
            pointer: "pointer_SV2",
            pointerIcon: "pointerIcon_i8i"
        };
        X.add("game-ui/game/components/infoviews/active-infoview-panel/components/bars/bars.module.scss", {
            get classes() {
                return D4
            },
            set classes(e) {
                Object.assign(D4, e)
            }
        });
        const F4 = D4;
        var U4 = ({value: e, gradient: t=R4})=>(0,
        z.jsxs)("div", {
            className: F4.bar,
            children: [(0,
            z.jsx)("div", {
                className: Zu()(F4.gradient),
                style: {
                    backgroundImage: jN(t)
                }
            }), (0,
            z.jsx)("div", {
                className: F4.pointer,
                style: G4(e),
                children: (0,
                z.jsx)("img", {
                    src: "Media/Misc/IndicatorBarPointer.svg",
                    className: F4.pointerIcon
                })
            })]
        })
          , B4 = ({gradient: e, value: t})=>{
            const n = (0,
            Y.useMemo)((()=>{
                const e = t.max - t.min;
                return {
                    left: `${(t.current - t.min) / e * 100 || 0}%`
                }
            }
            ), [t]);
            return (0,
            z.jsxs)("div", {
                className: F4.bar,
                children: [(0,
                z.jsx)("div", {
                    className: F4.gradient,
                    style: {
                        backgroundImage: jN(e)
                    }
                }), (0,
                z.jsx)("div", {
                    className: F4.pointer,
                    style: n,
                    children: (0,
                    z.jsx)("img", {
                        src: "Media/Misc/IndicatorBarPointer.svg",
                        className: F4.pointerIcon
                    })
                })]
            })
        }
        ;
        function G4(e) {
            return (0,
            Y.useMemo)((()=>{
                const t = e.max - e.min;
                return {
                    left: `${(e.current - e.min) / t * 100 || 0}%`
                }
            }
            ), [e])
        }
        X.add("game-ui/game/components/infoviews/active-infoview-panel/components/bars/bars.tsx", {
            get AvailabilityBar() {
                return U4
            },
            set AvailabilityBar(e) {
                U4 = e
            },
            get ValueBar() {
                return B4
            },
            set ValueBar(e) {
                B4 = e
            }
        });
        let V4 = {
            "infoview-panel-section": "infoview-panel-section_RXJ",
            infoviewPanelSection: "infoview-panel-section_RXJ",
            content: "content_1xS",
            "focusable-border": "focusable-border_rVm",
            focusableBorder: "focusable-border_rVm",
            focusable: "focusable_GEc item-focused_FuT"
        };
        X.add("game-ui/game/components/infoviews/active-infoview-panel/components/sections/infoview-panel-section.module.scss", {
            get classes() {
                return V4
            },
            set classes(e) {
                Object.assign(V4, e)
            }
        });
        const H4 = V4;
        var K4 = ({disableFocus: e=!1, tooltip: t, focusableBorder: n, children: s})=>{
            const i = Y.Children.count(t) > 0;
            return (0,
            z.jsx)(Eg, {
                tooltip: i ? (0,
                z.jsx)(Cb, {
                    children: t
                }) : void 0,
                direction: "right",
                children: (0,
                z.jsx)("div", {
                    className: H4.infoviewPanelSection,
                    children: e ? (0,
                    z.jsx)("div", {
                        className: H4.content,
                        children: s
                    }) : (0,
                    z.jsx)(Sp, {
                        className: Zu()(H4.content, n ? H4.focusableBorder : H4.focusable),
                        children: s
                    })
                })
            })
        }
        ;
        X.add("game-ui/game/components/infoviews/active-infoview-panel/components/sections/infoview-panel-section.tsx", {
            get InfoviewPanelSection() {
                return K4
            },
            set InfoviewPanelSection(e) {
                K4 = e
            }
        });
        var W4 = ({title: e, value: t, gradient: n, tooltip: s, children: i})=>(0,
        z.jsxs)(K4, {
            tooltip: s,
            children: [e, (0,
            z.jsx)(B4, {
                gradient: n,
                value: t
            }), i]
        });
        X.add("game-ui/game/components/infoviews/active-infoview-panel/components/sections/value-bar-section.tsx", {
            get ValueBarSection() {
                return W4
            },
            set ValueBarSection(e) {
                W4 = e
            }
        });
        var z4 = ()=>{
            const e = sl(mx);
            return (0,
            z.jsx)(W4, {
                title: (0,
                z.jsx)(N4, {
                    uppercase: !0,
                    text: (0,
                    z.jsx)(_c.AirPollutionInfoPanel.AVERAGE_AIR_POLLUTION, {}),
                    rightText: (0,
                    z.jsx)($u, {
                        value: e.current,
                        max: e.max
                    })
                }),
                tooltip: (0,
                z.jsx)(_c.Infoviews.AVERAGE_AIR_POLLUTION_TOOLTIP, {}),
                value: e,
                gradient: O4
            })
        }
        ;
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/air-pollution-infoview-panel.tsx", {
            get AirPollutionInfoviewPanel() {
                return z4
            },
            set AirPollutionInfoviewPanel(e) {
                z4 = e
            }
        });
        var Y4 = ()=>(0,
        z.jsxs)(z.Fragment, {
            children: [(0,
            z.jsx)($4, {}), (0,
            z.jsx)(q4, {}), (0,
            z.jsx)(X4, {})]
        });
        const $4 = ()=>{
            const e = sl(nv);
            return (0,
            z.jsx)(W4, {
                title: (0,
                z.jsx)(N4, {
                    uppercase: !0,
                    text: (0,
                    z.jsx)(_c.CompanyInfoPanel.COMMERCIAL_PROFITABILITY, {}),
                    rightText: (0,
                    z.jsx)($u, {
                        value: e.current,
                        max: e.max
                    })
                }),
                tooltip: (0,
                z.jsx)(_c.Infoviews.AVERAGE_COMMERCIAL_PROFIT_TOOLTIP, {}),
                value: e,
                gradient: L4
            })
        }
          , q4 = ()=>{
            const e = sl(sv);
            return (0,
            z.jsx)(W4, {
                title: (0,
                z.jsx)(N4, {
                    uppercase: !0,
                    text: (0,
                    z.jsx)(_c.CompanyInfoPanel.INDUSTRIAL_PROFITABILITY, {}),
                    rightText: (0,
                    z.jsx)($u, {
                        value: e.current,
                        max: e.max
                    })
                }),
                tooltip: (0,
                z.jsx)(_c.Infoviews.AVERAGE_INDUSTRIAL_PROFIT_TOOLTIP, {}),
                value: e,
                gradient: L4
            })
        }
          , X4 = ()=>{
            const e = sl(iv);
            return (0,
            z.jsx)(W4, {
                title: (0,
                z.jsx)(N4, {
                    uppercase: !0,
                    text: (0,
                    z.jsx)(_c.CompanyInfoPanel.OFFICE_PROFITABILITY, {}),
                    rightText: (0,
                    z.jsx)($u, {
                        value: e.current,
                        max: e.max
                    })
                }),
                tooltip: (0,
                z.jsx)(_c.Infoviews.AVERAGE_OFFICE_PROFIT_TOOLTIP, {}),
                value: e,
                gradient: L4
            })
        }
        ;
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/company-infoview-panel.tsx", {
            get CompanyInfoviewPanel() {
                return Y4
            },
            set CompanyInfoviewPanel(e) {
                Y4 = e
            }
        });
        var Q4 = ()=>{
            const e = sl(Dx)
              , t = sl(Rx)
              , n = sl(kx);
            return (0,
            z.jsxs)(W4, {
                title: (0,
                z.jsx)(N4, {
                    uppercase: !0,
                    text: (0,
                    z.jsx)(_c.DisasterInfoPanel.SHELTER_AVAILABILITY, {}),
                    rightText: (0,
                    z.jsx)($u, {
                        value: e.current,
                        max: e.max
                    })
                }),
                tooltip: (0,
                z.jsx)(_c.Infoviews.SHELTER_AVAILABILITY_TOOLTIP, {}),
                value: e,
                gradient: L4,
                children: [(0,
                z.jsx)(y4, {
                    small: !0
                }), (0,
                z.jsx)(N4, {
                    small: !0,
                    text: (0,
                    z.jsx)(_c.DisasterInfoPanel.EVACUATED, {}),
                    rightText: t
                }), (0,
                z.jsx)(N4, {
                    small: !0,
                    text: (0,
                    z.jsx)(_c.DisasterInfoPanel.CAPACITY, {}),
                    rightText: n
                })]
            })
        }
        ;
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/disaster-infoview-panel.tsx", {
            get DisasterInfoviewPanel() {
                return Q4
            },
            set DisasterInfoviewPanel(e) {
                Q4 = e
            }
        });
        let Z4 = {
            "bar-chart": "bar-chart_tZ6",
            barChart: "bar-chart_tZ6",
            bar: "bar_z48",
            fill: "fill_sr0",
            empty: "empty_HP3"
        };
        X.add("game-ui/common/charts/bar-chart/bar-chart.module.scss", {
            get classes() {
                return Z4
            },
            set classes(e) {
                Object.assign(Z4, e)
            }
        });
        const J4 = Z4;
        var e6 = ({colors: e, data: t, className: n})=>(0,
        z.jsx)("div", {
            className: Zu()(J4.barChart, n),
            children: (0,
            z.jsxs)("div", {
                className: J4.bar,
                children: [0 === t.values.filter((e=>e > 0)).length && (0,
                z.jsx)("div", {
                    className: J4.empty
                }), t.values.map(((n,s)=>(0,
                z.jsx)("div", {
                    style: {
                        backgroundColor: e[s],
                        width: t6(n, t.total) + "%"
                    },
                    className: J4.fill
                }, s)))]
            })
        });
        function t6(e, t) {
            return t > 0 ? 100 * Od(e / t, 0, 1) : 0
        }
        X.add("game-ui/common/charts/bar-chart/bar-chart.tsx", {
            get BarChart() {
                return e6
            },
            set BarChart(e) {
                e6 = e
            }
        });
        let n6 = {
            "info-bar-chart": "info-bar-chart_fj2",
            infoBarChart: "info-bar-chart_fj2",
            content: "content_I1q",
            bar: "bar_yR2",
            legends: "legends_jy_",
            legend: "legend_efO",
            empty: "empty_LPh"
        };
        X.add("game-ui/common/charts/bar-chart/info-bar-chart.module.scss", {
            get classes() {
                return n6
            },
            set classes(e) {
                Object.assign(n6, e)
            }
        });
        const s6 = n6;
        var i6 = ({title: e, colors: t, labels: n, data: s, ignoreZero: i=!1, usePercentageValue: a=!1, customLegend: o, className: r})=>{
            const l = a && s.total > 0 ? 100 / s.total : 1;
            return (0,
            z.jsxs)("div", {
                className: Zu()(s6.infoBarChart, r),
                children: [e && (0,
                z.jsx)(WS, {
                    uppercase: !0,
                    left: e
                }), (0,
                z.jsxs)("div", {
                    className: s6.content,
                    children: [(0,
                    z.jsx)("div", {
                        className: s6.bar,
                        children: (0,
                        z.jsx)(e6, {
                            data: s,
                            colors: t
                        })
                    }), (0,
                    z.jsx)("div", {
                        className: s6.legends,
                        children: o || s.values.filter((e=>!i || e > 0)).map(((e,s)=>(0,
                        z.jsxs)("div", {
                            className: s6.legend,
                            children: [(0,
                            z.jsx)(xQ, {
                                color: t[s],
                                label: n[s]
                            }), (0,
                            z.jsx)(Oc, {
                                value: e * l,
                                unit: a ? vc.PercentageSingleFraction : vc.Integer
                            })]
                        }, s)))
                    })]
                })]
            })
        }
        ;
        X.add("game-ui/common/charts/bar-chart/info-bar-chart.tsx", {
            get InfoBarChart() {
                return i6
            },
            set InfoBarChart(e) {
                i6 = e
            }
        });
        var a6 = ["#808080", "#b09868", "#368a2e", "#b981c0", "#5796d1"]
          , o6 = [(0,
        z.jsx)(_c.EducationInfoPanel.LEVEL, {
            hash: "Uneducated"
        }), (0,
        z.jsx)(_c.EducationInfoPanel.LEVEL, {
            hash: "Poorly Educated"
        }), (0,
        z.jsx)(_c.EducationInfoPanel.LEVEL, {
            hash: "Educated"
        }), (0,
        z.jsx)(_c.EducationInfoPanel.LEVEL, {
            hash: "Well Educated"
        }), (0,
        z.jsx)(_c.EducationInfoPanel.LEVEL, {
            hash: "Highly Educated"
        })];
        X.add("game-ui/common/charts/pie-chart/education-pie-chart.tsx", {
            get educationPieChartColors() {
                return a6
            },
            set educationPieChartColors(e) {
                a6 = e
            },
            get educationPieChartLabels() {
                return o6
            },
            set educationPieChartLabels(e) {
                o6 = e
            }
        });
        var r6 = ({title: e, supplyLabel: t, demandLabel: n, supplyValue: s, demandValue: i, availability: a, gradient: o, tooltip: r, children: l})=>(0,
        z.jsxs)(K4, {
            tooltip: r,
            children: [e, (0,
            z.jsx)(U4, {
                value: a,
                gradient: o
            }), (0,
            z.jsx)(N4, {
                tiny: !0,
                text: (0,
                z.jsx)(_c.Infoviews.LABEL_VALUE_FORMAT, {
                    LABEL: n,
                    VALUE: i
                }),
                rightText: (0,
                z.jsx)(_c.Infoviews.LABEL_VALUE_FORMAT, {
                    LABEL: t,
                    VALUE: s
                })
            }), (0,
            z.jsx)(y4, {
                small: !0
            }), l]
        });
        X.add("game-ui/game/components/infoviews/active-infoview-panel/components/sections/availability-bar-section.tsx", {
            get AvailabilityBarSection() {
                return r6
            },
            set AvailabilityBarSection(e) {
                r6 = e
            }
        });
        var l6 = ()=>{
            const e = sl(Mf)
              , t = sl(Rf)
              , n = sl(kf)
              , s = sl(Df)
              , i = sl(yf)
              , a = sl(jf)
              , o = sl(Cf)
              , r = sl(Nf)
              , l = sl(wf)
              , c = sl(Of)
              , u = sl(Pf)
              , d = sl(Lf)
              , m = sl(Ff)
              , h = sl(Uf)
              , g = sl(Bf)
              , p = sl(Gf)
              , f = sl(Af);
            return (0,
            z.jsxs)(z.Fragment, {
                children: [(0,
                z.jsx)(c6, {
                    localeKey: "Elementary",
                    availability: m,
                    eligible: i,
                    capacity: l,
                    students: e,
                    tooltip: (0,
                    z.jsx)(_c.Infoviews.ELEMENTARY_SCHOOL_AVAILABILITY_TOOLTIP, {})
                }), (0,
                z.jsx)(c6, {
                    localeKey: "High School",
                    availability: h,
                    eligible: a,
                    capacity: c,
                    students: t,
                    tooltip: (0,
                    z.jsx)(_c.Infoviews.HIGH_SCHOOL_AVAILABILITY_TOOLTIP, {})
                }), (0,
                z.jsx)(c6, {
                    localeKey: "College",
                    availability: g,
                    eligible: o,
                    capacity: u,
                    students: n,
                    tooltip: (0,
                    z.jsx)(_c.Infoviews.COLLEGE_AVAILABILITY_TOOLTIP, {})
                }), (0,
                z.jsx)(c6, {
                    localeKey: "University",
                    availability: p,
                    eligible: r,
                    capacity: d,
                    students: s,
                    tooltip: (0,
                    z.jsx)(_c.Infoviews.UNIVERSITY_AVAILABILITY_TOOLTIP, {})
                }), (0,
                z.jsxs)(K4, {
                    tooltip: (0,
                    z.jsx)(_c.Infoviews.EDUCATION_DISTRIBUTION_TOOLTIP, {}),
                    children: [(0,
                    z.jsx)(N4, {
                        uppercase: !0,
                        text: (0,
                        z.jsx)(_c.EducationInfoPanel.EDUCATION_DISTRIBUTION, {})
                    }), (0,
                    z.jsx)(i6, {
                        usePercentageValue: !0,
                        colors: a6,
                        labels: o6,
                        data: f
                    })]
                })]
            })
        }
        ;
        const c6 = ({localeKey: e, availability: t, eligible: n, capacity: s, students: i, tooltip: a})=>(0,
        z.jsx)(z.Fragment, {
            children: (0,
            z.jsx)(r6, {
                title: (0,
                z.jsx)(N4, {
                    uppercase: !0,
                    text: (0,
                    z.jsx)(_c.EducationInfoPanel.EDUCATION_LEVEL, {
                        hash: e
                    }),
                    rightText: (0,
                    z.jsx)(w4, {
                        icon: "Media/Game/Icons/Citizen.svg",
                        label: (0,
                        z.jsx)(Oc, {
                            value: i,
                            unit: vc.Integer
                        })
                    })
                }),
                demandLabel: (0,
                z.jsx)(_c.EducationInfoPanel.ELIGIBLE, {}),
                demandValue: (0,
                z.jsx)(Oc, {
                    value: n,
                    unit: vc.Integer
                }),
                supplyLabel: (0,
                z.jsx)(_c.InfoPanels.CAPACITY, {}),
                supplyValue: (0,
                z.jsx)(Oc, {
                    value: s,
                    unit: vc.Integer
                }),
                availability: t,
                tooltip: a
            })
        });
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/education-infoview-panel.tsx", {
            get EducationInfoviewPanel() {
                return l6
            },
            set EducationInfoviewPanel(e) {
                l6 = e
            }
        });
        var u6 = ()=>{
            const e = sl(of)
              , t = sl(rf)
              , n = sl(cf)
              , s = sl(uf)
              , i = sl(df)
              , a = sl(hf)
              , o = sl(gf);
            return (0,
            z.jsxs)(z.Fragment, {
                children: [(0,
                z.jsx)(r6, {
                    title: (0,
                    z.jsx)(N4, {
                        uppercase: !0,
                        text: (0,
                        z.jsx)(_c.ElectricityInfoPanel.ELECTRICITY_AVAILABILITY, {})
                    }),
                    tooltip: (0,
                    z.jsx)(_c.Infoviews.ELECTRICITY_AVAILABILITY_TOOLTIP, {}),
                    availability: i,
                    supplyLabel: (0,
                    z.jsx)(_c.InfoPanels.PRODUCTION, {}),
                    supplyValue: (0,
                    z.jsx)(Oc, {
                        value: t,
                        unit: vc.Power
                    }),
                    demandLabel: (0,
                    z.jsx)(_c.InfoPanels.CONSUMPTION, {}),
                    demandValue: (0,
                    z.jsx)(Oc, {
                        value: e,
                        unit: vc.Power
                    })
                }), (0,
                z.jsx)(r6, {
                    title: (0,
                    z.jsx)(N4, {
                        uppercase: !0,
                        text: (0,
                        z.jsx)(_c.ElectricityInfoPanel.ELECTRICITY_TRADE, {})
                    }),
                    tooltip: (0,
                    z.jsx)(_c.Infoviews.ELECTRICITY_TRADE_TOOLTIP, {}),
                    availability: a,
                    supplyLabel: (0,
                    z.jsx)(_c.ElectricityInfoPanel.ELECTRICITY_EXPORT, {}),
                    supplyValue: (0,
                    z.jsx)(Oc, {
                        value: n,
                        unit: vc.Power
                    }),
                    demandLabel: (0,
                    z.jsx)(_c.ElectricityInfoPanel.ELECTRICITY_IMPORT, {}),
                    demandValue: (0,
                    z.jsx)(Oc, {
                        value: s,
                        unit: vc.Power
                    })
                }), (0,
                z.jsx)(W4, {
                    title: (0,
                    z.jsx)(N4, {
                        uppercase: !0,
                        text: (0,
                        z.jsx)(_c.ElectricityInfoPanel.BATTERY_CHARGE, {}),
                        rightText: (0,
                        z.jsx)(uu, {
                            value: o.current,
                            total: o.max,
                            unit: vc.Energy
                        })
                    }),
                    tooltip: (0,
                    z.jsx)(_c.Infoviews.BATTERY_CHARGE_TOOLTIP, {}),
                    value: o,
                    gradient: M4
                })]
            })
        }
        ;
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/electricity-infoview-panel.tsx", {
            get ElectricityInfoviewPanel() {
                return u6
            },
            set ElectricityInfoviewPanel(e) {
                u6 = e
            }
        });
        var d6 = ()=>{
            const e = sl(px);
            return (0,
            z.jsx)(mT, {
                uiTag: vT.value?.infoviewsFireHazard,
                children: (0,
                z.jsx)(W4, {
                    title: (0,
                    z.jsx)(N4, {
                        uppercase: !0,
                        text: (0,
                        z.jsx)(_c.FireAndRescueInfoPanel.AVERAGE_FIRE_HAZARD, {}),
                        rightText: (0,
                        z.jsx)($u, {
                            value: e.current,
                            max: e.max
                        })
                    }),
                    value: e,
                    gradient: P4,
                    tooltip: (0,
                    z.jsx)(_c.Infoviews.AVERAGE_FIRE_HAZARD_TOOLTIP, {})
                })
            })
        }
        ;
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/fire-and-rescue-infoview-panel.tsx", {
            get FireAndRescueInfoPanel() {
                return d6
            },
            set FireAndRescueInfoPanel(e) {
                d6 = e
            }
        });
        var m6 = ()=>(0,
        z.jsxs)(z.Fragment, {
            children: [(0,
            z.jsx)(h6, {}), (0,
            z.jsx)(g6, {})]
        });
        const h6 = ()=>{
            const e = sl(ix)
              , t = sl(ex)
              , n = sl(nx);
            return (0,
            z.jsx)(r6, {
                title: (0,
                z.jsx)(N4, {
                    uppercase: !0,
                    text: (0,
                    z.jsx)(_c.GarbageInfoPanel.PROCESSING_STATUS, {})
                }),
                demandLabel: (0,
                z.jsx)(_c.GarbageInfoPanel.GARBAGE_RATE, {}),
                demandValue: (0,
                z.jsx)(Oc, {
                    value: e,
                    unit: vc.WeightPerMonth
                }),
                supplyLabel: (0,
                z.jsx)(_c.InfoPanels.PROCESSING, {}),
                supplyValue: (0,
                z.jsx)(Oc, {
                    value: t,
                    unit: vc.WeightPerMonth
                }),
                availability: n,
                tooltip: (0,
                z.jsx)(_c.Infoviews.GARBAGE_PROCESSING_STATUS_TOOLTIP, {})
            })
        }
          , g6 = ()=>{
            const e = sl(tx)
              , t = sl(ax)
              , n = sl(sx);
            return (0,
            z.jsx)(W4, {
                title: (0,
                z.jsx)(N4, {
                    uppercase: !0,
                    text: (0,
                    z.jsx)(_c.GarbageInfoPanel.LANDFILL_AVAILABILITY, {}),
                    rightText: (0,
                    z.jsx)(Oc, {
                        value: 100 * n.current,
                        unit: vc.Percentage
                    })
                }),
                tooltip: (0,
                z.jsx)(_c.Infoviews.LANDFILL_AVAILABILITY_TOOLTIP, {}),
                value: n,
                gradient: L4,
                children: (0,
                z.jsx)(N4, {
                    tiny: !0,
                    text: (0,
                    z.jsx)(_c.Infoviews.LABEL_VALUE_FORMAT, {
                        LABEL: (0,
                        z.jsx)(_c.GarbageInfoPanel.STORED_GARBAGE, {}),
                        VALUE: (0,
                        z.jsx)(Oc, {
                            value: t,
                            unit: vc.Weight
                        })
                    }),
                    rightText: (0,
                    z.jsx)(_c.Infoviews.LABEL_VALUE_FORMAT, {
                        LABEL: (0,
                        z.jsx)(_c.InfoPanels.CAPACITY, {}),
                        VALUE: (0,
                        z.jsx)(Oc, {
                            value: e,
                            unit: vc.Weight
                        })
                    })
                })
            })
        }
        ;
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/garbage-infoview-panel.tsx", {
            get GarbageInfoviewPanel() {
                return m6
            },
            set GarbageInfoviewPanel(e) {
                m6 = e
            }
        });
        var p6 = ()=>{
            const e = sl(dx);
            return (0,
            z.jsx)(z.Fragment, {
                children: (0,
                z.jsx)(W4, {
                    title: (0,
                    z.jsx)(N4, {
                        uppercase: !0,
                        text: (0,
                        z.jsx)(_c.GroundPollutionInfoPanel.AVERAGE_GROUND_POLLUTION, {}),
                        rightText: (0,
                        z.jsx)($u, {
                            value: e.current,
                            max: e.max
                        })
                    }),
                    tooltip: (0,
                    z.jsx)(_c.Infoviews.AVERAGE_GROUND_POLLUTION_TOOLTIP, {}),
                    value: e,
                    gradient: O4
                })
            })
        }
        ;
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/ground-pollution-infoview-panel.tsx", {
            get GroundPollutionInfoviewPanel() {
                return p6
            },
            set GroundPollutionInfoviewPanel(e) {
                p6 = e
            }
        });
        let f6 = {
            positive: "positive_zrK",
            negative: "negative_YWY"
        };
        X.add("game-ui/game/themes/sign-style-theme.module.scss", {
            get classes() {
                return f6
            },
            set classes(e) {
                Object.assign(f6, e)
            }
        });
        const x6 = f6;
        var v6 = ()=>{
            const e = sl(rj);
            return (0,
            z.jsxs)(K4, {
                tooltip: (0,
                z.jsx)(_c.Infoviews.HAPPINESS_FACTORS_TOOLTIP, {}),
                children: [(0,
                z.jsx)(N4, {
                    uppercase: !0,
                    text: (0,
                    z.jsx)(_c.Common.HAPPINESS_FACTORS, {})
                }), (0,
                z.jsx)(y4, {}), e.map(((e,t)=>(0,
                z.jsx)(N4, {
                    small: !0,
                    text: e.weight > 0 ? (0,
                    z.jsx)(_c.Common.HAPPINESS_FACTOR_POSITIVE, {
                        hash: e.factor
                    }) : (0,
                    z.jsx)(_c.Common.HAPPINESS_FACTOR_NEGATIVE, {
                        hash: e.factor
                    }),
                    rightText: (0,
                    z.jsx)("div", {
                        className: $p(x6, e.weight),
                        children: (0,
                        z.jsx)(Oc, {
                            value: e.weight,
                            signed: !0
                        })
                    })
                }, t)))]
            })
        }
        ;
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/happiness-infoview-panel.tsx", {
            get HappinessInfoviewPanel() {
                return v6
            },
            set HappinessInfoviewPanel(e) {
                v6 = e
            }
        });
        var _6 = ()=>(0,
        z.jsxs)(z.Fragment, {
            children: [(0,
            z.jsx)(b6, {}), (0,
            z.jsx)(T6, {}), (0,
            z.jsx)(E6, {})]
        });
        const b6 = ()=>{
            const e = sl(qf)
              , t = sl(Xf)
              , n = sl(Qf)
              , s = sl(Hf)
              , i = sl($f);
            return (0,
            z.jsxs)(r6, {
                title: (0,
                z.jsx)(N4, {
                    uppercase: !0,
                    text: (0,
                    z.jsx)(_c.HealthcareInfoPanel.HEALTHCARE_AVAILABILITY, {})
                }),
                tooltip: (0,
                z.jsx)(_c.Infoviews.HEALTHCARE_AVAILABILITY_TOOLTIP, {}),
                demandLabel: (0,
                z.jsx)(_c.HealthcareInfoPanel.SICK_OR_INJURED, {}),
                demandValue: (0,
                z.jsx)(Oc, {
                    value: i,
                    unit: vc.Integer
                }),
                supplyLabel: (0,
                z.jsx)(_c.InfoPanels.CAPACITY, {}),
                supplyValue: (0,
                z.jsx)(Oc, {
                    value: t,
                    unit: vc.Integer
                }),
                availability: n,
                children: [(0,
                z.jsx)(N4, {
                    small: !0,
                    text: (0,
                    z.jsx)(_c.HealthcareInfoPanel.AVERAGE_HEALTH, {}),
                    rightText: (0,
                    z.jsx)(Oc, {
                        value: s,
                        unit: vc.Percentage
                    })
                }), (0,
                z.jsx)(N4, {
                    small: !0,
                    text: (0,
                    z.jsx)(_c.HealthcareInfoPanel.PATIENTS, {}),
                    rightText: (0,
                    z.jsx)(Oc, {
                        value: e,
                        unit: vc.Integer
                    })
                })]
            })
        }
          , T6 = ()=>{
            const e = sl(zf)
              , t = sl(Yf)
              , n = sl(Zf);
            return (0,
            z.jsx)(r6, {
                title: (0,
                z.jsx)(N4, {
                    uppercase: !0,
                    text: (0,
                    z.jsx)(_c.HealthcareInfoPanel.CREMATORIUM_AVAILABILITY, {})
                }),
                tooltip: (0,
                z.jsx)(_c.Infoviews.CREMATORIUM_AVAILABILITY_TOOLTIP, {}),
                demandLabel: (0,
                z.jsx)(_c.HealthcareInfoPanel.DEATH_RATE, {}),
                demandValue: (0,
                z.jsx)(Oc, {
                    value: e,
                    unit: vc.IntegerPerMonth
                }),
                supplyLabel: (0,
                z.jsx)(_c.HealthcareInfoPanel.PROCESSING_RATE, {}),
                supplyValue: (0,
                z.jsx)(Oc, {
                    value: t,
                    unit: vc.IntegerPerMonth
                }),
                availability: n
            })
        }
          , E6 = ()=>{
            const e = sl(Kf)
              , t = sl(Wf)
              , n = sl(Jf);
            return (0,
            z.jsx)(W4, {
                title: (0,
                z.jsx)(N4, {
                    uppercase: !0,
                    text: (0,
                    z.jsx)(_c.HealthcareInfoPanel.CEMETERY_AVAILABILITY, {}),
                    rightText: (0,
                    z.jsx)($u, {
                        value: t - e,
                        max: t
                    })
                }),
                tooltip: (0,
                z.jsx)(_c.Infoviews.CEMETERY_AVAILABILITY_TOOLTIP, {}),
                value: n,
                gradient: L4,
                children: (0,
                z.jsx)(N4, {
                    tiny: !0,
                    text: (0,
                    z.jsx)(_c.Infoviews.LABEL_VALUE_FORMAT, {
                        LABEL: (0,
                        z.jsx)(_c.HealthcareInfoPanel.OCCUPIED, {}),
                        VALUE: (0,
                        z.jsx)(Oc, {
                            value: e,
                            unit: vc.Integer
                        })
                    }),
                    rightText: (0,
                    z.jsx)(_c.Infoviews.LABEL_VALUE_FORMAT, {
                        LABEL: (0,
                        z.jsx)(_c.InfoPanels.CAPACITY, {}),
                        VALUE: (0,
                        z.jsx)(Oc, {
                            value: t,
                            unit: vc.Integer
                        })
                    })
                })
            })
        }
        ;
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/healthcare-infoview-panel.tsx", {
            get HealthcareInfoviewPanel() {
                return _6
            },
            set HealthcareInfoviewPanel(e) {
                _6 = e
            }
        });
        var I6 = ()=>{
            const e = sl(Ox);
            return (0,
            z.jsx)(K4, {
                tooltip: (0,
                z.jsx)(_c.Infoviews.AVERAGE_LAND_VALUE_TOOLTIP, {}),
                children: (0,
                z.jsx)(N4, {
                    uppercase: !0,
                    text: (0,
                    z.jsx)(_c.LandValueInfoPanel.AVERAGE_LAND_VALUE, {}),
                    rightText: (0,
                    z.jsx)(Oc, {
                        value: 240 * e,
                        unit: vc.MoneyPerCell
                    })
                })
            })
        }
        ;
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/landvalue-infoview-panel.tsx", {
            get LandValueInfoviewPanel() {
                return I6
            },
            set LandValueInfoviewPanel(e) {
                I6 = e
            }
        });
        let S6 = {
            "requirement-field": "requirement-field_e7h",
            requirementField: "requirement-field_e7h",
            "progress-bounds": "progress-bounds_MkW",
            progressBounds: "progress-bounds_MkW",
            progress: "progress_jYy",
            content: "content_OHh",
            icon: "icon_IKb",
            label: "label_DwS",
            checkmark: "checkmark_Nhp"
        };
        X.add("game-ui/game/components/progression/requirement-field/requirement-field.module.scss", {
            get classes() {
                return S6
            },
            set classes(e) {
                Object.assign(S6, e)
            }
        });
        const y6 = S6;
        var j6 = e=>{
            const t = sl(ON);
            return (0,
            z.jsx)(A6, {
                icon: "Media/Game/Icons/Trophy.svg",
                progress: e.locked ? t : e.index,
                max: e.index,
                locked: e.locked,
                children: (0,
                z.jsx)(_c.Progression.MILESTONE_UNLOCK_REQUIREMENT, {
                    INDEX: (0,
                    z.jsx)(Oc, {
                        value: e.index,
                        unit: vc.Integer
                    }),
                    NAME: (0,
                    z.jsx)(_c.Progression.MILESTONE_NAME, {
                        index: e.index
                    })
                })
            })
        }
          , C6 = e=>(0,
        z.jsx)(A6, {
            icon: "Media/Game/Icons/DevPoint.svg",
            progress: e.locked ? 0 : 1,
            max: 1,
            locked: e.locked,
            children: (0,
            z.jsx)(_c.Progression.NODE_UNLOCK_REQUIREMENT, {
                NAME: (0,
                z.jsx)(_c.Progression.NODE_NAME, {
                    hash: e.name
                })
            })
        })
          , N6 = e=>{
            const t = (0,
            Y.useMemo)((()=>{
                const t = {
                    NAME: e.isUpgrade ? (0,
                    z.jsx)(_c.Assets.UPGRADE_NAME, {
                        hash: e.requirement
                    }) : (0,
                    z.jsx)(_c.Assets.NAME, {
                        hash: e.requirement
                    }),
                    CURRENT: (0,
                    z.jsx)(Oc, {
                        value: e.progress,
                        unit: vc.Integer
                    }),
                    TARGET: (0,
                    z.jsx)(Oc, {
                        value: e.minimumCount,
                        unit: vc.Integer
                    })
                };
                return null != e.labelId ? (0,
                z.jsx)(cc, {
                    id: e.labelId,
                    args: t
                }) : (0,
                z.jsx)(_c.Progression.STRICT_OBJECT_BUILT_REQUIREMENT, {
                    ...t
                })
            }
            ), [e.isUpgrade, e.requirement, e.progress, e.minimumCount, e.labelId]);
            return (0,
            z.jsx)(A6, {
                icon: e.icon,
                progress: e.progress,
                max: e.minimumCount,
                locked: e.locked,
                children: t
            })
        }
          , w6 = e=>{
            const t = (0,
            Y.useMemo)((()=>{
                const t = {
                    ZONE: null != e.requiredZone ? (0,
                    z.jsx)(_c.Assets.NAME, {
                        hash: e.requiredZone
                    }) : "",
                    CURRENT: (0,
                    z.jsx)(Oc, {
                        value: e.progress,
                        unit: vc.Integer
                    }),
                    TARGET: (0,
                    z.jsx)(Oc, {
                        value: e.minimumSquares > 0 ? e.minimumSquares : e.minimumCount,
                        unit: vc.Integer
                    }),
                    LEVEL: (0,
                    z.jsx)(Oc, {
                        value: e.minimumLevel,
                        unit: vc.Integer
                    })
                };
                return null != e.labelId ? (0,
                z.jsx)(cc, {
                    id: e.labelId,
                    args: t
                }) : e.minimumSquares > 0 || 0 === e.minimumCount ? e.minimumLevel > 1 ? (0,
                z.jsx)(_c.Progression.ZONE_BUILT_REQUIREMENT_CELLS_LEVEL, {
                    ...t
                }) : (0,
                z.jsx)(_c.Progression.ZONE_BUILT_REQUIREMENT_CELLS, {
                    ...t
                }) : e.minimumLevel > 1 ? (0,
                z.jsx)(_c.Progression.ZONE_BUILT_REQUIREMENT_COUNT_LEVEL, {
                    ...t
                }) : (0,
                z.jsx)(_c.Progression.ZONE_BUILT_REQUIREMENT_COUNT, {
                    ...t
                })
            }
            ), [e.labelId, e.minimumCount, e.minimumLevel, e.minimumSquares, e.progress, e.requiredZone]);
            return (0,
            z.jsx)(A6, {
                icon: e.icon,
                progress: e.progress,
                max: e.minimumSquares > 0 ? e.minimumSquares : e.minimumCount,
                locked: e.locked,
                children: t
            })
        }
          , O6 = e=>{
            const t = (0,
            Y.useMemo)((()=>{
                if (e.minimumPopulation > 0 || 0 === e.minimumHappiness) {
                    const t = {
                        VALUE: (0,
                        z.jsx)(Oc, {
                            value: e.minimumPopulation,
                            unit: vc.Integer
                        })
                    };
                    return null != e.labelId ? (0,
                    z.jsx)(cc, {
                        id: e.labelId,
                        args: t
                    }) : (0,
                    z.jsx)(_c.Progression.POPULATION_REQUIREMENT, {
                        ...t
                    })
                }
                {
                    const t = {
                        VALUE: (0,
                        z.jsx)(Oc, {
                            value: e.minimumHappiness,
                            unit: vc.PercentageSingleFraction
                        })
                    };
                    return null != e.labelId ? (0,
                    z.jsx)(cc, {
                        id: e.labelId,
                        args: t
                    }) : (0,
                    z.jsx)(_c.Progression.HAPPINESS_REQUIREMENT, {
                        ...t
                    })
                }
            }
            ), [e.minimumPopulation, e.minimumHappiness, e.labelId]);
            return (0,
            z.jsx)(A6, {
                icon: e.minimumPopulation > 0 || 0 === e.minimumHappiness ? "Media/Game/Icons/Citizen.svg" : "Media/Game/Icons/Happy.svg",
                progress: e.progress,
                max: e.minimumPopulation > 0 ? e.minimumPopulation : e.minimumHappiness,
                locked: e.locked,
                children: t
            })
        }
          , P6 = e=>{
            const t = (0,
            Y.useMemo)((()=>{
                const t = {
                    RESOURCE: (0,
                    z.jsx)(_c.Resources.TITLE, {
                        hash: e.resourceType
                    }),
                    CURRENT: (0,
                    z.jsx)(Oc, {
                        value: e.progress,
                        unit: vc.Integer
                    }),
                    TARGET: (0,
                    z.jsx)(Oc, {
                        value: e.minimumProducedAmount,
                        unit: vc.Integer
                    })
                };
                return null != e.labelId ? (0,
                z.jsx)(cc, {
                    id: e.labelId,
                    args: t
                }) : (0,
                z.jsx)(_c.Progression.PROCESSING_REQUIREMENT, {
                    ...t
                })
            }
            ), [e.labelId, e.resourceType, e.progress, e.minimumProducedAmount]);
            return (0,
            z.jsx)(A6, {
                icon: "Media/Game/Icons/Company.svg",
                progress: e.progress,
                max: e.minimumProducedAmount,
                locked: e.locked,
                children: t
            })
        }
          , L6 = e=>{
            const t = (0,
            Y.useMemo)((()=>{
                const t = {
                    CURRENT: (0,
                    z.jsx)(Oc, {
                        value: e.progress,
                        unit: vc.Integer
                    }),
                    TARGET: (0,
                    z.jsx)(Oc, {
                        value: e.minimumCount,
                        unit: vc.Integer
                    })
                };
                return null != e.labelId ? (0,
                z.jsx)(cc, {
                    id: e.labelId,
                    args: t
                }) : (0,
                z.jsx)(_c.Progression.OBJECT_BUILT_REQUIREMENT, {
                    hash: e.name,
                    ...t
                })
            }
            ), [e.labelId, e.name, e.progress, e.minimumCount]);
            return (0,
            z.jsx)(A6, {
                icon: "Media/Game/Icons/Build.svg",
                progress: e.progress,
                max: e.minimumCount,
                locked: e.locked,
                children: t
            })
        }
          , A6 = ({icon: e, progress: t, max: n, locked: s, children: i})=>{
            const a = s ? Od(t / n, 0, 1) : n;
            return (0,
            z.jsxs)("div", {
                className: y6.requirementField,
                children: [(0,
                z.jsx)("div", {
                    className: y6.progressBounds,
                    style: {
                        width: 100 * a + "%"
                    },
                    children: (0,
                    z.jsx)("div", {
                        className: y6.progress,
                        style: {
                            width: (a > 0 ? 100 / a : 0) + "%"
                        }
                    })
                }), (0,
                z.jsxs)("div", {
                    className: y6.content,
                    children: [e && (0,
                    z.jsx)("img", {
                        src: e,
                        className: y6.icon
                    }), (0,
                    z.jsx)("div", {
                        className: y6.label,
                        children: i
                    }), !s && (0,
                    z.jsx)(Z_, {
                        src: "Media/Glyphs/Checkmark.svg",
                        className: y6.checkmark
                    })]
                })]
            })
        }
          , M6 = ({locked: e})=>(0,
        z.jsx)(A6, {
            icon: "Media/Game/Icons/Build.svg",
            progress: 0,
            max: 1,
            locked: e,
            children: (0,
            z.jsx)(_c.Progression.TUTORIAL_REQUIREMENT, {})
        })
          , R6 = ({locked: e, labelId: t})=>null == t ? null : (0,
        z.jsx)(A6, {
            icon: "Media/Glyphs/OpenLock.svg",
            progress: 0,
            max: 1,
            locked: e,
            children: (0,
            z.jsx)(cc, {
                id: t
            })
        })
          , k6 = {
            [zC.Milestone]: j6,
            [zC.DevTreeNode]: C6,
            [zC.StrictObjectBuilt]: N6,
            [zC.ZoneBuilt]: w6,
            [zC.Citizen]: O6,
            [zC.Processing]: P6,
            [zC.ObjectBuilt]: L6,
            [zC.Unlock]: ()=>null,
            [zC.Tutorial]: M6,
            [zC.PrefabUnlocked]: R6
        };
        X.add("game-ui/game/components/progression/requirement-field/requirement-field.tsx", {
            get MilestoneRequirementField() {
                return j6
            },
            set MilestoneRequirementField(e) {
                j6 = e
            },
            get DevTreeNodeRequirementField() {
                return C6
            },
            set DevTreeNodeRequirementField(e) {
                C6 = e
            },
            get StrictObjectBuiltRequirementField() {
                return N6
            },
            set StrictObjectBuiltRequirementField(e) {
                N6 = e
            },
            get ZoneBuiltRequirementField() {
                return w6
            },
            set ZoneBuiltRequirementField(e) {
                w6 = e
            },
            get CitizenRequirementField() {
                return O6
            },
            set CitizenRequirementField(e) {
                O6 = e
            },
            get ProcessingRequirementField() {
                return P6
            },
            set ProcessingRequirementField(e) {
                P6 = e
            },
            get ObjectBuiltRequirementField() {
                return L6
            },
            set ObjectBuiltRequirementField(e) {
                L6 = e
            },
            get RequirementField() {
                return A6
            },
            set RequirementField(e) {
                A6 = e
            },
            get TutorialRequirementField() {
                return M6
            },
            set TutorialRequirementField(e) {
                M6 = e
            },
            get UnknownRequirementField() {
                return R6
            },
            set UnknownRequirementField(e) {
                R6 = e
            },
            get prefabRequirementComponents() {
                return k6
            },
            set prefabRequirementComponents(e) {
                k6 = e
            }
        });
        let D6 = {
            "unlocking-requirements": "unlocking-requirements_xaC",
            unlockingRequirements: "unlocking-requirements_xaC",
            row: "row_fam",
            title: "title_grF",
            divider: "divider_Cqj"
        };
        X.add("game-ui/game/components/progression/unlocking-requirements/unlocking-requirements.module.scss", {
            get classes() {
                return D6
            },
            set classes(e) {
                Object.assign(D6, e)
            }
        });
        const F6 = D6;
        var U6 = ({requirements: e, theme: t, className: n})=>{
            const s = (0,
            Y.useMemo)((()=>({
                ...F6,
                ...t
            })), [t])
              , i = e.requireAny.length > 0
              , a = e.requireAll.length > 0;
            return (0,
            z.jsxs)("div", {
                className: Zu()(s.unlockingRequirements, n),
                children: [i && (0,
                z.jsxs)("div", {
                    className: s.row,
                    children: [(0,
                    z.jsx)("div", {
                        className: s.title,
                        children: (0,
                        z.jsx)(_c.Progression.REQUIRES_ANY, {})
                    }), (0,
                    z.jsx)(cD, {
                        components: k6,
                        data: e.requireAny
                    })]
                }), i && a && (0,
                z.jsx)("div", {
                    className: F6.divider
                }), a && (0,
                z.jsxs)("div", {
                    className: s.row,
                    children: [(0,
                    z.jsx)("div", {
                        className: s.title,
                        children: i ? (0,
                        z.jsx)(_c.Progression.REQUIRES_ALL, {}) : e.requireAll.length > 1 ? (0,
                        z.jsx)(_c.Progression.REQUIREMENTS, {}) : (0,
                        z.jsx)(_c.Progression.REQUIREMENT, {})
                    }), (0,
                    z.jsx)(cD, {
                        components: k6,
                        data: e.requireAll
                    })]
                })]
            })
        }
        ;
        function B6(e) {
            return e.requireAll.length > 0 || e.requireAny.length > 0
        }
        X.add("game-ui/game/components/progression/unlocking-requirements/unlocking-requirements.tsx", {
            get Requirements() {
                return U6
            },
            set Requirements(e) {
                U6 = e
            },
            get hasRequirements() {
                return B6
            },
            set hasRequirements(e) {
                B6 = e
            }
        });
        let G6 = {
            balloon: "balloon_ltu balloon_qJY balloon_H23",
            enter: "enter_tT_ enter_ZTk",
            "enter-active": "enter-active_r4U enter-active_AJs",
            enterActive: "enter-active_r4U enter-active_AJs",
            exit: "exit_OtI undefined",
            "exit-active": "exit-active_Dqt exit-active_RfZ",
            exitActive: "exit-active_Dqt exit-active_RfZ",
            container: "container_eNL container_zgM container_jfe",
            locked: "locked_UbY",
            arrow: "arrow_R9U arrow_SVb arrow_Xfn",
            content: "content_wfU content_A82 content_JQV",
            main: "main_F2U",
            lock: "lock_Gqk",
            requirements: "requirements_dsk"
        };
        X.add("game-ui/game/components/progression/unlocking-tooltip/unlocking-tooltip.module.scss", {
            get classes() {
                return G6
            },
            set classes(e) {
                Object.assign(G6, e)
            }
        });
        const V6 = G6;
        var H6 = ({title: e, description: t, content: n, shortcut: s, locked: i=!1, requirements: a, className: o, children: r, forceVisible: l, ...c})=>{
            const u = Y.Children.count(e) > 0 || Y.Children.count(t) > 0 || Y.Children.count(n) > 0
              , d = (0,
            Y.useMemo)((()=>i && a && a.requireAll.length + a.requireAny.length > 0), [i, a]);
            return (0,
            z.jsx)(Eg, {
                ...c,
                forceVisible: l,
                theme: V6,
                className: Zu()(d && V6.locked, o),
                tooltip: (u || d) && (0,
                z.jsxs)(z.Fragment, {
                    children: [u && (0,
                    z.jsx)(GQ, {
                        title: e,
                        description: t,
                        content: n,
                        shortcut: s,
                        className: V6.main
                    }), u && d && (0,
                    z.jsx)(OZ, {
                        className: V6.lock
                    }), d && a && (0,
                    z.jsx)(U6, {
                        requirements: a,
                        className: V6.requirements
                    })]
                }),
                children: r
            })
        }
        ;
        X.add("game-ui/game/components/progression/unlocking-tooltip/unlocking-tooltip.tsx", {
            get UnlockingTooltip() {
                return H6
            },
            set UnlockingTooltip(e) {
                H6 = e
            }
        });
        var K6 = ()=>{
            const e = sl(Px)
              , t = sl(Lx)
              , n = sl(Ax)
              , s = sl(Mx)
              , i = oN("ZonesOffice")
              , a = [(0,
            z.jsx)(_c.LevelInfoPanel.LEVEL1, {}), (0,
            z.jsx)(_c.LevelInfoPanel.LEVEL2, {}), (0,
            z.jsx)(_c.LevelInfoPanel.LEVEL3, {}), (0,
            z.jsx)(_c.LevelInfoPanel.LEVEL4, {}), (0,
            z.jsx)(_c.LevelInfoPanel.LEVEL5, {})];
            return (0,
            z.jsxs)(z.Fragment, {
                children: [(0,
                z.jsxs)(K4, {
                    tooltip: (0,
                    z.jsx)(_c.Infoviews.RESIDENTIAL_LEVEL_TOOLTIP, {}),
                    children: [(0,
                    z.jsx)(N4, {
                        uppercase: !0,
                        centered: !0,
                        text: (0,
                        z.jsx)(_c.LevelInfoPanel.RESIDENTIAL, {})
                    }), (0,
                    z.jsx)(i6, {
                        colors: ["#86FB14", "#64B805", "#3C8F1A", "#2F7512", "#20550C"],
                        labels: a,
                        data: e,
                        usePercentageValue: !0
                    })]
                }), (0,
                z.jsxs)(K4, {
                    tooltip: (0,
                    z.jsx)(_c.Infoviews.COMMERCIAL_LEVEL_TOOLTIP, {}),
                    children: [(0,
                    z.jsx)(N4, {
                        uppercase: !0,
                        centered: !0,
                        text: (0,
                        z.jsx)(_c.LevelInfoPanel.COMMERCIAL, {})
                    }), (0,
                    z.jsx)(i6, {
                        colors: ["#43D4FF", "#2393B8", "#1B748E", "#116075", "#0A4254"],
                        labels: a,
                        data: t,
                        usePercentageValue: !0
                    })]
                }), (0,
                z.jsxs)(K4, {
                    tooltip: (0,
                    z.jsx)(_c.Infoviews.INDUSTRIAL_LEVEL_TOOLTIP, {}),
                    children: [(0,
                    z.jsx)(N4, {
                        uppercase: !0,
                        centered: !0,
                        text: (0,
                        z.jsx)(_c.LevelInfoPanel.INDUSTRIAL, {})
                    }), (0,
                    z.jsx)(i6, {
                        colors: ["#FCCE1A", "#B59923", "#90781C", "#766315", "#55450D"],
                        labels: a,
                        data: n,
                        usePercentageValue: !0
                    })]
                }), (0,
                z.jsx)(H6, {
                    locked: i.locked,
                    requirements: i.requirements,
                    children: (0,
                    z.jsxs)(K4, {
                        tooltip: (0,
                        z.jsx)(_c.Infoviews.OFFICE_LEVEL_TOOLTIP, {}),
                        children: [(0,
                        z.jsx)(N4, {
                            uppercase: !0,
                            centered: !0,
                            text: (0,
                            z.jsx)(_c.LevelInfoPanel.OFFICE, {})
                        }), (0,
                        z.jsx)(i6, {
                            colors: ["#7941FF", "#4E22B3", "#3D1C92", "#311376", "#200B54"],
                            labels: a,
                            data: s,
                            usePercentageValue: !0
                        })]
                    })
                })]
            })
        }
        ;
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/level-infoview-panel.tsx", {
            get LevelInfoviewPanel() {
                return K6
            },
            set LevelInfoviewPanel(e) {
                K6 = e
            }
        });
        var W6 = ()=>{
            const e = sl(dv)
              , t = sl(mv)
              , n = sl(hv)
              , s = sl(gv)
              , i = sl(pv)
              , a = sl(fv)
              , o = sl(xv)
              , r = sl(vv)
              , l = sl(_v)
              , c = sl(bv)
              , u = sl(Tv)
              , d = sl(Ev)
              , m = sl(Iv);
            return (0,
            z.jsxs)(z.Fragment, {
                children: [(0,
                z.jsx)(z6, {
                    text: (0,
                    z.jsx)(N4, {
                        icon: "Media/Game/Icons/Fertility.svg",
                        text: (0,
                        z.jsx)(_c.NaturalResourcesInfoPanel.FERTILITY, {}),
                        uppercase: !0
                    }),
                    tooltip: (0,
                    z.jsx)(_c.Infoviews.FERTILE_LAND_RESOURCE_TOOLTIP, {}),
                    available: (0,
                    z.jsx)(N4, {
                        small: !0,
                        text: (0,
                        z.jsx)(_c.NaturalResourcesInfoPanel.AVAILABLE, {}),
                        rightText: s > 0 ? (0,
                        z.jsx)(Oc, {
                            value: s,
                            unit: vc.Area
                        }) : 0
                    }),
                    extractionRate: (0,
                    z.jsx)(N4, {
                        small: !0,
                        text: (0,
                        z.jsx)(_c.NaturalResourcesInfoPanel.RATE, {}),
                        rightText: r > 0 ? (0,
                        z.jsx)(Oc, {
                            value: r,
                            unit: vc.WeightPerMonth
                        }) : 0
                    }),
                    renewalRate: (0,
                    z.jsx)(N4, {
                        small: !0,
                        text: (0,
                        z.jsx)(_c.NaturalResourcesInfoPanel.RENEWAL_RATE, {}),
                        rightText: c > 0 ? (0,
                        z.jsx)(Oc, {
                            value: c,
                            unit: vc.WeightPerMonth
                        }) : 0
                    })
                }), (0,
                z.jsx)(z6, {
                    text: (0,
                    z.jsx)(N4, {
                        icon: "Media/Game/Icons/Forest.svg",
                        text: (0,
                        z.jsx)(_c.NaturalResourcesInfoPanel.FOREST, {}),
                        uppercase: !0
                    }),
                    tooltip: (0,
                    z.jsx)(_c.Infoviews.WOOD_RESOURCE_TOOLTIP, {}),
                    available: (0,
                    z.jsx)(N4, {
                        small: !0,
                        text: (0,
                        z.jsx)(_c.NaturalResourcesInfoPanel.AVAILABLE, {}),
                        rightText: n > 0 ? (0,
                        z.jsx)(Oc, {
                            value: n,
                            unit: vc.Weight
                        }) : 0
                    }),
                    extractionRate: (0,
                    z.jsx)(N4, {
                        small: !0,
                        text: (0,
                        z.jsx)(_c.NaturalResourcesInfoPanel.RATE, {}),
                        rightText: o > 0 ? (0,
                        z.jsx)(Oc, {
                            value: o,
                            unit: vc.WeightPerMonth
                        }) : 0
                    }),
                    renewalRate: (0,
                    z.jsx)(N4, {
                        small: !0,
                        text: (0,
                        z.jsx)(_c.NaturalResourcesInfoPanel.RENEWAL_RATE, {}),
                        rightText: l > 0 ? (0,
                        z.jsx)(Oc, {
                            value: l,
                            unit: vc.WeightPerMonth
                        }) : 0
                    })
                }), (0,
                z.jsx)(z6, {
                    text: (0,
                    z.jsx)(N4, {
                        icon: "Media/Game/Icons/Ore.svg",
                        text: (0,
                        z.jsx)(_c.NaturalResourcesInfoPanel.ORE, {}),
                        uppercase: !0
                    }),
                    tooltip: (0,
                    z.jsx)(_c.Infoviews.ORE_RESOURCE_TOOLTIP, {}),
                    available: (0,
                    z.jsx)(N4, {
                        small: !0,
                        text: (0,
                        z.jsx)(_c.NaturalResourcesInfoPanel.AVAILABLE, {}),
                        rightText: t > 0 ? (0,
                        z.jsx)(Oc, {
                            value: t,
                            unit: vc.Weight
                        }) : 0
                    }),
                    extractionRate: (0,
                    z.jsx)(N4, {
                        small: !0,
                        text: (0,
                        z.jsx)(_c.NaturalResourcesInfoPanel.RATE, {}),
                        rightText: a > 0 ? (0,
                        z.jsx)(Oc, {
                            value: a,
                            unit: vc.WeightPerMonth
                        }) : 0
                    })
                }), (0,
                z.jsx)(z6, {
                    text: (0,
                    z.jsx)(N4, {
                        icon: "Media/Game/Icons/Oil.svg",
                        text: (0,
                        z.jsx)(_c.NaturalResourcesInfoPanel.OIL, {}),
                        uppercase: !0
                    }),
                    tooltip: (0,
                    z.jsx)(_c.Infoviews.OIL_RESOURCE_TOOLTIP, {}),
                    available: (0,
                    z.jsx)(N4, {
                        small: !0,
                        text: (0,
                        z.jsx)(_c.NaturalResourcesInfoPanel.AVAILABLE, {}),
                        rightText: e > 0 ? (0,
                        z.jsx)(Oc, {
                            value: e,
                            unit: vc.Weight
                        }) : 0
                    }),
                    extractionRate: (0,
                    z.jsx)(N4, {
                        small: !0,
                        text: (0,
                        z.jsx)(_c.NaturalResourcesInfoPanel.RATE, {}),
                        rightText: i > 0 ? (0,
                        z.jsx)(Oc, {
                            value: i,
                            unit: vc.WeightPerMonth
                        }) : 0
                    })
                }), (0,
                z.jsx)(z6, {
                    text: (0,
                    z.jsx)(N4, {
                        icon: "Media/Game/Resources/Fish.svg",
                        text: (0,
                        z.jsx)(_c.NaturalResourcesInfoPanel.FISH, {}),
                        uppercase: !0
                    }),
                    tooltip: (0,
                    z.jsx)(_c.Infoviews.FISH_RESOURCE_TOOLTIP, {}),
                    available: (0,
                    z.jsx)(N4, {
                        small: !0,
                        text: (0,
                        z.jsx)(_c.NaturalResourcesInfoPanel.AVAILABLE, {}),
                        rightText: u > 0 ? (0,
                        z.jsx)(Oc, {
                            value: u,
                            unit: vc.Weight
                        }) : 0
                    }),
                    extractionRate: (0,
                    z.jsx)(N4, {
                        small: !0,
                        text: (0,
                        z.jsx)(_c.NaturalResourcesInfoPanel.RATE, {}),
                        rightText: d > 0 ? (0,
                        z.jsx)(Oc, {
                            value: d,
                            unit: vc.WeightPerMonth
                        }) : 0
                    }),
                    renewalRate: (0,
                    z.jsx)(N4, {
                        small: !0,
                        text: (0,
                        z.jsx)(_c.NaturalResourcesInfoPanel.RENEWAL_RATE, {}),
                        rightText: m > 0 ? (0,
                        z.jsx)(Oc, {
                            value: m,
                            unit: vc.WeightPerMonth
                        }) : 0
                    })
                })]
            })
        }
        ;
        const z6 = ({text: e, available: t, extractionRate: n, renewalRate: s, tooltip: i})=>(0,
        z.jsxs)(K4, {
            tooltip: i,
            children: [e, t, n, s]
        });
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/natural-resources-infoview-panel.tsx", {
            get NaturalResourcesInfoviewPanel() {
                return W6
            },
            set NaturalResourcesInfoviewPanel(e) {
                W6 = e
            }
        });
        var Y6 = ()=>{
            const e = sl(gx);
            return (0,
            z.jsx)(z.Fragment, {
                children: (0,
                z.jsx)(W4, {
                    title: (0,
                    z.jsx)(N4, {
                        uppercase: !0,
                        text: (0,
                        z.jsx)(_c.NoisePollutionInfoPanel.AVERAGE_NOISE_POLLUTION, {}),
                        rightText: (0,
                        z.jsx)($u, {
                            value: e.current,
                            max: e.max
                        })
                    }),
                    tooltip: (0,
                    z.jsx)(_c.Infoviews.AVERAGE_NOISE_POLLUTION_TOOLTIP, {}),
                    value: e,
                    gradient: $6
                })
            })
        }
        ;
        const $6 = {
            stops: [{
                color: "#FFF",
                offset: 0
            }, {
                color: "#F00",
                offset: 1
            }]
        };
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/noise-infoview-panel.tsx", {
            get NoiseInfoviewPanel() {
                return Y6
            },
            set NoiseInfoviewPanel(e) {
                Y6 = e
            }
        });
        var q6 = ()=>{
            const e = sl(av)
              , t = sl(ov)
              , n = sl(rv)
              , s = sl(lv)
              , i = sl(cv)
              , a = sl(uv);
            return (0,
            z.jsxs)(z.Fragment, {
                children: [(0,
                z.jsxs)(K4, {
                    tooltip: (0,
                    z.jsx)(_c.Infoviews.IMPORT_DISTRIBUTION_TOOLTIP, {}),
                    children: [(0,
                    z.jsx)(N4, {
                        uppercase: !0,
                        text: (0,
                        z.jsx)(_c.OutsideConnectionsInfoPanel.TOP_IMPORTS, {})
                    }), (0,
                    z.jsx)(i6, {
                        colors: t,
                        data: n,
                        labels: e.map((e=>(0,
                        z.jsx)(_c.Resources.TITLE, {
                            hash: e.replace("Resource", "")
                        }, e))),
                        ignoreZero: !0,
                        usePercentageValue: !0
                    })]
                }), (0,
                z.jsxs)(K4, {
                    tooltip: (0,
                    z.jsx)(_c.Infoviews.EXPORT_DISTRIBUTION_TOOLTIP, {}),
                    children: [(0,
                    z.jsx)(N4, {
                        uppercase: !0,
                        text: (0,
                        z.jsx)(_c.OutsideConnectionsInfoPanel.TOP_EXPORTS, {})
                    }), (0,
                    z.jsx)(i6, {
                        colors: i,
                        data: a,
                        labels: s.map((e=>(0,
                        z.jsx)(_c.Resources.TITLE, {
                            hash: e.replace("Resource", "")
                        }, e))),
                        ignoreZero: !0,
                        usePercentageValue: !0
                    })]
                })]
            })
        }
        ;
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/outside-connections-infoview-panel.tsx", {
            get OutsideConnectionsInfoviewPanel() {
                return q6
            },
            set OutsideConnectionsInfoviewPanel(e) {
                q6 = e
            }
        });
        var X6 = ()=>{
            const e = sl(fx)
              , t = sl(xx)
              , n = sl(vx)
              , s = sl(Tx)
              , i = sl(Ex)
              , a = sl(Ix)
              , o = sl(jx)
              , r = sl(Cx)
              , l = sl(Nx)
              , c = sl(wx)
              , u = sl(Sx)
              , d = sl(yx);
            return (0,
            z.jsxs)(z.Fragment, {
                children: [(0,
                z.jsx)(r6, {
                    title: (0,
                    z.jsx)(N4, {
                        uppercase: !0,
                        text: (0,
                        z.jsx)(_c.PoliceInfoPanel.JAIL_AVAILABILITY, {})
                    }),
                    tooltip: (0,
                    z.jsx)(_c.Infoviews.JAIL_AVAILABILITY_TOOLTIP, {}),
                    demandLabel: (0,
                    z.jsx)(_c.PoliceInfoPanel.ARRESTED_CRIMINALS, {}),
                    demandValue: (0,
                    z.jsx)(Oc, {
                        value: i,
                        unit: vc.Integer
                    }),
                    supplyLabel: (0,
                    z.jsx)(_c.InfoPanels.CAPACITY, {}),
                    supplyValue: (0,
                    z.jsx)(Oc, {
                        value: s,
                        unit: vc.Integer
                    }),
                    availability: t,
                    children: (0,
                    z.jsx)(N4, {
                        small: !0,
                        text: (0,
                        z.jsx)(_c.PoliceInfoPanel.IN_JAIL, {}),
                        rightText: (0,
                        z.jsx)(Oc, {
                            value: a,
                            unit: vc.Integer
                        })
                    })
                }), (0,
                z.jsx)(r6, {
                    title: (0,
                    z.jsx)(N4, {
                        uppercase: !0,
                        text: (0,
                        z.jsx)(_c.PoliceInfoPanel.PRISON_AVAILABILITY, {})
                    }),
                    tooltip: (0,
                    z.jsx)(_c.Infoviews.PRISON_AVAILABILITY_TOOLTIP, {}),
                    demandLabel: (0,
                    z.jsx)(_c.PoliceInfoPanel.PRISONERS, {}),
                    demandValue: (0,
                    z.jsx)(Oc, {
                        value: d,
                        unit: vc.Integer
                    }),
                    supplyLabel: (0,
                    z.jsx)(_c.InfoPanels.CAPACITY, {}),
                    supplyValue: (0,
                    z.jsx)(Oc, {
                        value: u,
                        unit: vc.Integer
                    }),
                    availability: n,
                    children: (0,
                    z.jsx)(N4, {
                        small: !0,
                        text: (0,
                        z.jsx)(_c.PoliceInfoPanel.IN_PRISON, {}),
                        rightText: (0,
                        z.jsx)(Oc, {
                            value: o,
                            unit: vc.Integer
                        })
                    })
                }), (0,
                z.jsxs)(W4, {
                    title: (0,
                    z.jsx)(N4, {
                        uppercase: !0,
                        text: (0,
                        z.jsx)(_c.PoliceInfoPanel.AVERAGE_CRIME_PROBABILITY, {}),
                        rightText: (0,
                        z.jsx)($u, {
                            value: e.current,
                            max: e.max
                        })
                    }),
                    tooltip: (0,
                    z.jsx)(_c.Infoviews.CRIME_PROBABILITY_TOOLTIP, {}),
                    value: e,
                    gradient: P4,
                    children: [(0,
                    z.jsx)(y4, {
                        small: !0
                    }), (0,
                    z.jsx)(N4, {
                        small: !0,
                        text: (0,
                        z.jsx)(_c.PoliceInfoPanel.CURRENT_NUMBER_OF_CRIMINALS, {}),
                        rightText: (0,
                        z.jsx)(Oc, {
                            value: r,
                            unit: vc.Integer
                        })
                    }), (0,
                    z.jsx)(N4, {
                        small: !0,
                        text: (0,
                        z.jsx)(_c.PoliceInfoPanel.NUMBER_OF_CRIMES_PER_MONTH, {}),
                        rightText: (0,
                        z.jsx)(Oc, {
                            value: l,
                            unit: vc.IntegerPerMonth
                        })
                    }), (0,
                    z.jsx)(N4, {
                        small: !0,
                        text: (0,
                        z.jsx)(_c.PoliceInfoPanel.CRIME_SUCCESS_RATE, {}),
                        rightText: (0,
                        z.jsx)(Oc, {
                            value: c,
                            unit: vc.PercentageSingleFraction
                        })
                    })]
                })]
            })
        }
        ;
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/police-infoview-panel.tsx", {
            get PoliceInfoviewPanel() {
                return X6
            },
            set PoliceInfoviewPanel(e) {
                X6 = e
            }
        });
        var Q6 = ["#3a91c7", "#8bb9d6", "#5fb844", "#a3b844"]
          , Z6 = [(0,
        z.jsx)(_c.PopulationInfoPanel.CHILDREN, {}), (0,
        z.jsx)(_c.PopulationInfoPanel.TEENS, {}), (0,
        z.jsx)(_c.PopulationInfoPanel.ADULTS, {}), (0,
        z.jsx)(_c.PopulationInfoPanel.SENIORS, {})];
        X.add("game-ui/common/charts/pie-chart/age-pie-chart.tsx", {
            get agePieChartColors() {
                return Q6
            },
            set agePieChartColors(e) {
                Q6 = e
            },
            get agePieChartLabels() {
                return Z6
            },
            set agePieChartLabels(e) {
                Z6 = e
            }
        });
        var J6 = ()=>{
            const e = sl(zx)
              , t = sl(Yx)
              , n = sl($x)
              , s = sl(qx)
              , i = sl(Xx)
              , a = sl(zf)
              , o = sl(Jx)
              , r = sl(ev)
              , l = sl(tv)
              , c = sl(Qx)
              , u = sl(Zx);
            return (0,
            z.jsxs)(z.Fragment, {
                children: [(0,
                z.jsxs)(K4, {
                    tooltip: (0,
                    z.jsx)(_c.Infoviews.POPULATION_STATISTICS_TOOLTIP, {}),
                    children: [(0,
                    z.jsx)(N4, {
                        uppercase: !0,
                        text: (0,
                        z.jsx)(_c.PopulationInfoPanel.POPULATION, {}),
                        rightText: (0,
                        z.jsx)(Oc, {
                            value: e,
                            unit: vc.Integer
                        })
                    }), (0,
                    z.jsx)(N4, {
                        small: !0,
                        text: (0,
                        z.jsx)(_c.PopulationInfoPanel.BIRTH_RATE, {}),
                        rightText: (0,
                        z.jsx)(Oc, {
                            value: i,
                            unit: vc.IntegerPerMonth
                        })
                    }), (0,
                    z.jsx)(N4, {
                        small: !0,
                        text: (0,
                        z.jsx)(_c.PopulationInfoPanel.DEATH_RATE, {}),
                        rightText: (0,
                        z.jsx)(Oc, {
                            value: a,
                            unit: vc.IntegerPerMonth
                        })
                    }), (0,
                    z.jsx)(N4, {
                        small: !0,
                        text: (0,
                        z.jsx)(_c.PopulationInfoPanel.MOVED_IN, {}),
                        rightText: (0,
                        z.jsx)(Oc, {
                            value: o,
                            unit: vc.IntegerPerMonth
                        })
                    }), (0,
                    z.jsx)(N4, {
                        small: !0,
                        text: (0,
                        z.jsx)(_c.PopulationInfoPanel.MOVED_AWAY, {}),
                        rightText: (0,
                        z.jsx)(Oc, {
                            value: r,
                            unit: vc.IntegerPerMonth
                        })
                    }), (0,
                    z.jsx)(N4, {
                        small: !0,
                        text: (0,
                        z.jsx)(_c.PopulationInfoPanel.JOBS, {}),
                        rightText: (0,
                        z.jsx)(Oc, {
                            value: n,
                            unit: vc.Integer
                        })
                    }), (0,
                    z.jsx)(N4, {
                        small: !0,
                        text: (0,
                        z.jsx)(_c.PopulationInfoPanel.EMPLOYED, {}),
                        rightText: (0,
                        z.jsx)(Oc, {
                            value: t,
                            unit: vc.Integer
                        })
                    }), (0,
                    z.jsx)(N4, {
                        small: !0,
                        text: (0,
                        z.jsx)(_c.PopulationInfoPanel.UNEMPLOYMENT, {}),
                        rightText: (0,
                        z.jsx)(Oc, {
                            value: s,
                            unit: vc.PercentageSingleFraction
                        })
                    }), (0,
                    z.jsx)(N4, {
                        small: !0,
                        text: (0,
                        z.jsx)(_c.PopulationInfoPanel.HOMELESS_NUMBER, {}),
                        rightText: (0,
                        z.jsx)(Oc, {
                            value: c,
                            unit: vc.Integer
                        })
                    }), (0,
                    z.jsx)(N4, {
                        small: !0,
                        text: (0,
                        z.jsx)(_c.PopulationInfoPanel.HOMELESS_RATE, {}),
                        rightText: (0,
                        z.jsx)(Oc, {
                            value: u,
                            unit: vc.PercentageSingleFraction
                        })
                    })]
                }), (0,
                z.jsxs)(K4, {
                    tooltip: (0,
                    z.jsx)(_c.Infoviews.POPULATION_DISTRIBUTION_TOOLTIP, {}),
                    children: [(0,
                    z.jsx)(N4, {
                        uppercase: !0,
                        text: (0,
                        z.jsx)(_c.PopulationInfoPanel.AGE_DISTRIBUTION, {})
                    }), (0,
                    z.jsx)(y4, {
                        small: !0
                    }), (0,
                    z.jsx)(i6, {
                        usePercentageValue: !0,
                        colors: Q6,
                        labels: Z6,
                        data: l
                    })]
                })]
            })
        }
        ;
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/population-infoview-panel.tsx", {
            get PopulationInfoviewPanel() {
                return J6
            },
            set PopulationInfoviewPanel(e) {
                J6 = e
            }
        });
        var e8 = ()=>{
            const e = sl(Vx)
              , t = sl(Hx)
              , n = sl(Kx)
              , s = sl(Wx);
            return (0,
            z.jsx)(z.Fragment, {
                children: (0,
                z.jsx)(r6, {
                    title: (0,
                    z.jsx)(N4, {
                        uppercase: !0,
                        text: (0,
                        z.jsx)(_c.PostInfoPanel.MAIL_SERVICE_AVAILABILITY, {})
                    }),
                    tooltip: (0,
                    z.jsx)(_c.Infoviews.MAIL_SERVICE_AVAILABILITY_TOOLTIP, {}),
                    demandLabel: (0,
                    z.jsx)(_c.PostInfoPanel.MAIL_RATE, {}),
                    demandValue: (0,
                    z.jsx)(Oc, {
                        value: e,
                        unit: vc.IntegerPerMonth
                    }),
                    supplyLabel: (0,
                    z.jsx)(_c.InfoPanels.PROCESSING, {}),
                    supplyValue: (0,
                    z.jsx)(Oc, {
                        value: t + n,
                        unit: vc.IntegerPerMonth
                    }),
                    availability: s
                })
            })
        }
        ;
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/post-infoview-panel.tsx", {
            get PostInfoviewPanel() {
                return e8
            },
            set PostInfoviewPanel(e) {
                e8 = e
            }
        });
        var t8 = ()=>{
            const e = sl(ox)
              , t = sl(lx)
              , n = sl(cx)
              , s = sl(rx);
            return (0,
            z.jsx)(z.Fragment, {
                children: (0,
                z.jsx)(r6, {
                    title: (0,
                    z.jsx)(N4, {
                        uppercase: !0,
                        text: (0,
                        z.jsx)(_c.RoadsInfoPanel.PARKING_AVAILABILITY, {})
                    }),
                    tooltip: (0,
                    z.jsx)(_c.Infoviews.PARKING_AVAILABILITY_TOOLTIP, {}),
                    demandLabel: (0,
                    z.jsx)(_c.RoadsInfoPanel.PARKED_CARS, {}),
                    demandValue: (0,
                    z.jsx)(Oc, {
                        value: t,
                        unit: vc.Integer
                    }),
                    supplyLabel: (0,
                    z.jsx)(_c.InfoPanels.CAPACITY, {}),
                    supplyValue: (0,
                    z.jsx)(Oc, {
                        value: e,
                        unit: vc.Integer
                    }),
                    availability: n,
                    children: (0,
                    z.jsx)(N4, {
                        small: !0,
                        text: (0,
                        z.jsx)(_c.RoadsInfoPanel.PARKING_INCOME, {}),
                        rightText: (0,
                        z.jsx)(Oc, {
                            value: s,
                            unit: vc.MoneyPerMonth
                        })
                    })
                })
            })
        }
        ;
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/roads-infoview-panel.tsx", {
            get RoadsInfoviewPanel() {
                return t8
            },
            set RoadsInfoviewPanel(e) {
                t8 = e
            }
        });
        var n8 = ()=>{
            const e = sl(Bx)
              , t = sl(Ux)
              , n = sl(Fx)
              , s = sl(Gx);
            return (0,
            z.jsx)(z.Fragment, {
                children: (0,
                z.jsxs)(W4, {
                    title: (0,
                    z.jsx)(N4, {
                        uppercase: !0,
                        text: (0,
                        z.jsx)(_c.TourismInfoPanel.ATTRACTIVENESS, {}),
                        rightText: (0,
                        z.jsx)(Oc, {
                            value: n.current
                        })
                    }),
                    tooltip: (0,
                    z.jsx)(_c.Infoviews.CITY_ATTRACTIVENESS_TOOLTIP, {}),
                    value: n,
                    gradient: M4,
                    children: [(0,
                    z.jsx)(y4, {
                        small: !0
                    }), (0,
                    z.jsx)(N4, {
                        small: !0,
                        text: (0,
                        z.jsx)(_c.TourismInfoPanel.TOURISM_RATE, {}),
                        rightText: (0,
                        z.jsx)(Oc, {
                            value: e,
                            unit: vc.IntegerPerMonth
                        })
                    }), (0,
                    z.jsx)(N4, {
                        small: !0,
                        text: (0,
                        z.jsx)(_c.TourismInfoPanel.WEATHER_EFFECT, {}),
                        rightText: (0,
                        z.jsx)(Oc, {
                            value: s,
                            unit: vc.Percentage,
                            signed: !0
                        })
                    }), (0,
                    z.jsx)(N4, {
                        small: !0,
                        text: (0,
                        z.jsx)(_c.TourismInfoPanel.AVERAGE_HOTEL_PRICE, {}),
                        rightText: (0,
                        z.jsx)(Oc, {
                            value: t,
                            unit: vc.Money
                        })
                    })]
                })
            })
        }
        ;
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/tourism-infoview-panel.tsx", {
            get TourismInfoviewPanel() {
                return n8
            },
            set TourismInfoviewPanel(e) {
                n8 = e
            }
        });
        let s8 = {
            chartFontColor: "rgba(255, 255, 255, 0.6)",
            chartLineColor: "rgba(255, 255, 255, 0.1)",
            trafficVolumeBorderColor: "rgba(29, 130, 184, 1)",
            trafficVolumeBackgroundColor: "rgba(29, 130, 184, 0.5)",
            trafficFlowBorderColor: "rgba(30, 179, 184, 1)",
            trafficFlowBackgroundColor: "rgba(30, 179, 184, 0.5)",
            "traffic-chart": "traffic-chart_r8c",
            trafficChart: "traffic-chart_r8c"
        };
        X.add("game-ui/game/components/selected-info-panel/shared-components/traffic-charts/traffic-chart.module.scss", {
            get classes() {
                return s8
            },
            set classes(e) {
                Object.assign(s8, e)
            }
        });
        const i8 = s8;
        var a8 = ({data: e, className: t})=>{
            const n = u8(e)
              , s = c8(vc.IntegerPerHour, 5, i8.trafficVolumeBorderColor, i8.trafficVolumeBackgroundColor);
            return (0,
            z.jsx)(nY, {
                type: "line",
                data: n,
                options: s,
                className: Zu()(i8.trafficChart, t)
            })
        }
          , o8 = ({data: e, className: t})=>{
            const n = u8(e)
              , s = c8(vc.Percentage, 100, i8.trafficFlowBorderColor, i8.trafficFlowBackgroundColor);
            return (0,
            z.jsx)(nY, {
                type: "line",
                data: n,
                options: s,
                className: Zu()(i8.trafficChart, t)
            })
        }
        ;
        const r8 = 10
          , l8 = 10;
        function c8(e, t, n, s) {
            const i = Ac(e)
              , a = sl(Ll);
            return (0,
            Y.useMemo)((()=>{
                const e = {
                    elements: {
                        line: {
                            borderColor: n,
                            backgroundColor: s,
                            borderWidth: 2,
                            fill: !0
                        },
                        point: {
                            borderColor: n,
                            backgroundColor: n,
                            radius: 2,
                            hoverRadius: 2,
                            borderWidth: 2,
                            hoverBorderWidth: 2
                        }
                    },
                    scales: {
                        x: {
                            beginAtZero: !0,
                            grid: {
                                lineWidth: 2,
                                color: i8.chartLineColor
                            },
                            ticks: {
                                font: {
                                    size: r8 * a,
                                    weight: "bold"
                                },
                                color: i8.chartFontColor,
                                padding: l8,
                                autoSkip: !1
                            }
                        },
                        y: {
                            min: 0,
                            suggestedMax: t,
                            grid: {
                                lineWidth: 2,
                                color: i8.chartLineColor
                            },
                            ticks: {
                                font: {
                                    size: r8 * a,
                                    weight: "bold"
                                },
                                color: i8.chartFontColor,
                                padding: l8,
                                autoSkip: !1,
                                callback: function(e) {
                                    return i(e)
                                },
                                maxTicksLimit: 6
                            }
                        }
                    }
                };
                return e
            }
            ), [s, n, i, t, a])
        }
        function u8(e) {
            const t = Ou();
            return (0,
            Y.useMemo)((()=>({
                labels: [t({
                    hour: 0,
                    minute: 0
                }), t({
                    hour: 6,
                    minute: 0
                }), t({
                    hour: 12,
                    minute: 0
                }), t({
                    hour: 18,
                    minute: 0
                }), t({
                    hour: 0,
                    minute: 0
                })],
                datasets: [{
                    label: "data",
                    data: e
                }]
            })), [e, t])
        }
        X.add("game-ui/game/components/selected-info-panel/shared-components/traffic-charts/traffic-chart.tsx", {
            get TrafficVolumeChart() {
                return a8
            },
            set TrafficVolumeChart(e) {
                a8 = e
            },
            get TrafficFlowChart() {
                return o8
            },
            set TrafficFlowChart(e) {
                o8 = e
            }
        });
        var d8 = ()=>{
            const e = sl(ux);
            return (0,
            z.jsxs)(K4, {
                focusableBorder: !0,
                tooltip: (0,
                z.jsx)(_c.Infoviews.TRAFFIC_FLOW, {}),
                children: [(0,
                z.jsx)(N4, {
                    uppercase: !0,
                    text: (0,
                    z.jsx)(_c.SelectedInfoPanel.ROAD_TRAFFIC_FLOW, {})
                }), (0,
                z.jsx)(o8, {
                    data: e
                })]
            })
        }
        ;
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/traffic-infoview-panel.tsx", {
            get TrafficInfoviewPanel() {
                return d8
            },
            set TrafficInfoviewPanel(e) {
                d8 = e
            }
        });
        let m8 = {
            "line-summary": "line-summary_tW5",
            lineSummary: "line-summary_tW5",
            row: "row_Pqo",
            "disable-states": "disable-states_FlS",
            disableStates: "disable-states_FlS",
            locked: "locked_dOC",
            header: "header_Sxm",
            "secondary-row": "secondary-row_bfC",
            secondaryRow: "secondary-row_bfC",
            value: "value_p4t",
            "fifty-percent": "fifty-percent_dQ2",
            fiftyPercent: "fifty-percent_dQ2",
            "thirty-percent": "thirty-percent_pPg",
            thirtyPercent: "thirty-percent_pPg",
            "total-label": "total-label_QwL",
            totalLabel: "total-label_QwL",
            icon: "icon_Rph icon_Iwk",
            lock: "lock_eZg"
        };
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/transport-infoview-panel/transport-infoview-panel.module.scss", {
            get classes() {
                return m8
            },
            set classes(e) {
                Object.assign(m8, e)
            }
        });
        const h8 = m8;
        var g8 = ({summaries: e})=>(0,
        z.jsxs)(K4, {
            disableFocus: !0,
            children: [(0,
            z.jsx)(N4, {
                uppercase: !0,
                text: (0,
                z.jsx)(_c.TransportInfoPanel.CARGO_TRANSPORT_TITLE, {})
            }), (0,
            z.jsx)(p8, {}), (0,
            z.jsxs)(np, {
                children: [e.map((e=>(0,
                z.jsx)(f8, {
                    summary: e
                }, e.id))), (0,
                z.jsx)(f8, {
                    lastRow: !0,
                    summary: e.reduce(((e,t)=>({
                        id: "Total",
                        icon: "",
                        locked: !1,
                        cargoCount: e.cargoCount + t.cargoCount,
                        lineCount: e.lineCount + t.lineCount,
                        requirements: {
                            requireAny: [],
                            requireAll: []
                        }
                    })))
                })]
            })]
        });
        const p8 = ()=>(0,
        z.jsxs)("div", {
            className: Zu()(h8.row, h8.disableStates, h8.header),
            children: [(0,
            z.jsx)("div", {
                className: h8.icon
            }), (0,
            z.jsxs)("div", {
                className: h8.secondaryRow,
                children: [(0,
                z.jsx)("div", {
                    className: Zu()(h8.value, h8.fiftyPercent),
                    children: (0,
                    z.jsx)(_c.TransportInfoPanel.ROUTES_LABEL, {})
                }), (0,
                z.jsx)("div", {
                    className: Zu()(h8.value, h8.fiftyPercent),
                    children: (0,
                    z.jsx)(_c.TransportInfoPanel.CARGO_LABEL, {})
                })]
            })]
        })
          , f8 = ({summary: e, lastRow: t=!1})=>{
            const n = !t && "Bus" !== e.id
              , s = (0,
            Y.useCallback)((()=>{
                lA(e.id),
                e_(Zv.Cargo)
            }
            ), [e.id]);
            return (0,
            z.jsx)(H6, {
                description: (0,
                z.jsx)(_c.TransportInfoPanel.SUMMARY_TOOLTIP_CARGO, {
                    hash: e.id
                }),
                locked: e.locked,
                requirements: e.requirements,
                direction: "right",
                children: (0,
                z.jsx)(U_, {
                    focusKey: e.locked || !n ? Sg : yg,
                    theme: T5,
                    onSelect: n ? s : void 0,
                    disabled: e.locked,
                    className: Zu()(h8.row, e.locked && T5.locked, e.locked && h8.locked, !n && h8.disableStates),
                    children: (0,
                    z.jsxs)(Yp, {
                        ifFocused: !0,
                        ifGamepad: !0,
                        children: [t ? (0,
                        z.jsx)("div", {
                            className: h8.totalLabel,
                            children: (0,
                            z.jsx)(_c.TransportInfoPanel.TOTAL, {})
                        }) : (0,
                        z.jsx)("img", {
                            src: e.icon,
                            className: Zu()(T5.icon, h8.icon)
                        }), e.locked && (0,
                        z.jsx)(OZ, {
                            className: h8.lock
                        }), (0,
                        z.jsxs)("div", {
                            className: h8.secondaryRow,
                            children: [(0,
                            z.jsx)("div", {
                                className: Zu()(h8.value, h8.fiftyPercent),
                                children: "Bus" === e.id || 0 === e.lineCount && !t ? "—" : e.lineCount
                            }), (0,
                            z.jsx)("div", {
                                className: Zu()(h8.value, h8.fiftyPercent),
                                children: e.cargoCount > 0 || t ? (0,
                                z.jsx)(Oc, {
                                    value: e.cargoCount,
                                    unit: vc.WeightPerMonth
                                }) : "—"
                            })]
                        })]
                    })
                })
            })
        }
        ;
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/transport-infoview-panel/cargo-transport-summary.tsx", {
            get CargoTransportSummary() {
                return g8
            },
            set CargoTransportSummary(e) {
                g8 = e
            }
        });
        var x8 = ({summaries: e})=>(0,
        z.jsxs)(K4, {
            disableFocus: !0,
            children: [(0,
            z.jsx)(N4, {
                uppercase: !0,
                text: (0,
                z.jsx)(_c.TransportInfoPanel.PUBLIC_TRANSPORT_TITLE, {})
            }), (0,
            z.jsx)(v8, {}), (0,
            z.jsxs)(np, {
                children: [e.map((e=>(0,
                z.jsx)(_8, {
                    summary: e
                }, e.id))), (0,
                z.jsx)(_8, {
                    lastRow: !0,
                    summary: e.reduce(((e,t)=>({
                        id: "Total",
                        icon: "",
                        locked: !1,
                        touristCount: e.touristCount + t.touristCount,
                        citizenCount: e.citizenCount + t.citizenCount,
                        lineCount: e.lineCount + t.lineCount,
                        requirements: {
                            requireAny: [],
                            requireAll: []
                        }
                    })))
                })]
            })]
        });
        const v8 = ()=>(0,
        z.jsxs)("div", {
            className: Zu()(h8.row, h8.disableStates, h8.header),
            children: [(0,
            z.jsx)("div", {
                className: h8.icon
            }), (0,
            z.jsxs)("div", {
                className: h8.secondaryRow,
                children: [(0,
                z.jsx)("div", {
                    className: Zu()(h8.value, h8.thirtyPercent),
                    children: (0,
                    z.jsx)(_c.TransportInfoPanel.LINES, {})
                }), (0,
                z.jsx)("div", {
                    className: Zu()(h8.value, h8.thirtyPercent),
                    children: (0,
                    z.jsx)(_c.TransportInfoPanel.TOURISTS, {})
                }), (0,
                z.jsx)("div", {
                    className: Zu()(h8.value, h8.thirtyPercent),
                    children: (0,
                    z.jsx)(_c.TransportInfoPanel.CITIZENS, {})
                })]
            })]
        })
          , _8 = ({summary: e, lastRow: t=!1})=>{
            const n = !t && "Taxi" !== e.id
              , s = (0,
            Y.useCallback)((()=>{
                rA(e.id),
                e_(Zv.PublicTransport)
            }
            ), [e.id]);
            return (0,
            z.jsx)(H6, {
                description: (0,
                z.jsx)(_c.TransportInfoPanel.SUMMARY_TOOLTIP_PUBLICTRANSPORT, {
                    hash: e.id
                }),
                locked: e.locked,
                requirements: e.requirements,
                direction: "right",
                children: (0,
                z.jsx)(U_, {
                    focusKey: e.locked || !n ? Sg : yg,
                    onSelect: n ? s : void 0,
                    disabled: e.locked,
                    theme: T5,
                    className: Zu()(h8.row, e.locked && T5.locked, e.locked && h8.locked, !n && h8.disableStates),
                    children: (0,
                    z.jsxs)(Yp, {
                        ifFocused: !0,
                        ifGamepad: !0,
                        children: [t ? (0,
                        z.jsx)("div", {
                            className: h8.totalLabel,
                            children: (0,
                            z.jsx)(_c.TransportInfoPanel.TOTAL, {})
                        }) : (0,
                        z.jsx)("img", {
                            src: e.icon,
                            className: Zu()(T5.icon, h8.icon)
                        }), e.locked && (0,
                        z.jsx)(OZ, {
                            className: h8.lock
                        }), (0,
                        z.jsxs)("div", {
                            className: h8.secondaryRow,
                            children: [(0,
                            z.jsx)("div", {
                                className: Zu()(h8.value, h8.thirtyPercent),
                                children: "Taxi" === e.id || 0 === e.lineCount && !t ? "—" : e.lineCount
                            }), (0,
                            z.jsx)("div", {
                                className: Zu()(h8.value, h8.thirtyPercent),
                                children: e.touristCount > 0 || t ? (0,
                                z.jsx)(Oc, {
                                    value: e.touristCount,
                                    unit: vc.IntegerPerMonth
                                }) : "—"
                            }), (0,
                            z.jsx)("div", {
                                className: Zu()(h8.value, h8.thirtyPercent),
                                children: e.citizenCount > 0 || t ? (0,
                                z.jsx)(Oc, {
                                    value: e.citizenCount,
                                    unit: vc.IntegerPerMonth
                                }) : "—"
                            })]
                        })]
                    })
                })
            })
        }
        ;
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/transport-infoview-panel/public-transport-summary.tsx", {
            get PublicTransportSummary() {
                return x8
            },
            set PublicTransportSummary(e) {
                x8 = e
            }
        });
        var b8 = ()=>{
            const e = sl(Vf);
            return (0,
            z.jsxs)(z.Fragment, {
                children: [(0,
                z.jsx)(x8, {
                    summaries: e.passengerSummaries
                }), (0,
                z.jsx)(g8, {
                    summaries: e.cargoSummaries
                })]
            })
        }
        ;
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/transport-infoview-panel/transport-infoview-panel.tsx", {
            get TransportInfoviewPanel() {
                return b8
            },
            set TransportInfoviewPanel(e) {
                b8 = e
            }
        });
        var T8 = ()=>(0,
        z.jsxs)(z.Fragment, {
            children: [(0,
            z.jsx)(E8, {}), (0,
            z.jsx)(S8, {}), (0,
            z.jsx)(I8, {}), (0,
            z.jsx)(y8, {})]
        });
        const E8 = ()=>{
            const e = sl(pf)
              , t = sl(ff)
              , n = sl(If);
            return (0,
            z.jsx)(r6, {
                title: (0,
                z.jsx)(N4, {
                    uppercase: !0,
                    text: (0,
                    z.jsx)(_c.WaterInfoPanel.WATER_AVAILABILITY, {})
                }),
                tooltip: (0,
                z.jsx)(_c.Infoviews.WATER_AVAILABILITY_TOOLTIP, {}),
                supplyLabel: (0,
                z.jsx)(_c.InfoPanels.OUTPUT, {}),
                supplyValue: (0,
                z.jsx)(Oc, {
                    value: e,
                    unit: vc.VolumePerMonth
                }),
                demandLabel: (0,
                z.jsx)(_c.InfoPanels.CONSUMPTION, {}),
                demandValue: (0,
                z.jsx)(Oc, {
                    value: t,
                    unit: vc.VolumePerMonth
                }),
                availability: n
            })
        }
          , I8 = ()=>{
            const e = sl(xf)
              , t = sl(vf)
              , n = sl(Ef);
            return (0,
            z.jsx)(r6, {
                title: (0,
                z.jsx)(N4, {
                    uppercase: !0,
                    text: (0,
                    z.jsx)(_c.WaterInfoPanel.SEWAGE_TREATMENT, {})
                }),
                tooltip: (0,
                z.jsx)(_c.Infoviews.SEWAGE_TREATMENT_TOOLTIP, {}),
                supplyLabel: (0,
                z.jsx)(_c.InfoPanels.PROCESSING, {}),
                supplyValue: (0,
                z.jsx)(Oc, {
                    value: e,
                    unit: vc.VolumePerMonth
                }),
                demandLabel: (0,
                z.jsx)(_c.InfoPanels.PRODUCTION, {}),
                demandValue: (0,
                z.jsx)(Oc, {
                    value: t,
                    unit: vc.VolumePerMonth
                }),
                availability: n
            })
        }
          , S8 = ()=>{
            const e = sl(_f)
              , t = sl(bf)
              , n = sl(Sf);
            return (0,
            z.jsx)(r6, {
                title: (0,
                z.jsx)(N4, {
                    uppercase: !0,
                    text: (0,
                    z.jsx)(_c.WaterInfoPanel.WATER_TRADE, {})
                }),
                tooltip: (0,
                z.jsx)(_c.Infoviews.WATER_TRADE_TOOLTIP, {}),
                supplyLabel: (0,
                z.jsx)(_c.WaterInfoPanel.WATER_EXPORT, {}),
                supplyValue: (0,
                z.jsx)(Oc, {
                    value: e,
                    unit: vc.VolumePerMonth
                }),
                demandLabel: (0,
                z.jsx)(_c.WaterInfoPanel.WATER_IMPORT, {}),
                demandValue: (0,
                z.jsx)(Oc, {
                    value: t,
                    unit: vc.VolumePerMonth
                }),
                availability: n
            })
        }
          , y8 = ()=>{
            const e = sl(Tf)
              , t = {
                min: sl(vf),
                max: 0,
                current: e
            };
            return (0,
            z.jsx)(W4, {
                title: (0,
                z.jsx)(N4, {
                    uppercase: !0,
                    text: (0,
                    z.jsx)(_c.WaterInfoPanel.SEWAGE_TRADE, {}),
                    rightText: (0,
                    z.jsx)(Oc, {
                        value: e,
                        unit: vc.VolumePerMonth
                    })
                }),
                tooltip: (0,
                z.jsx)(_c.Infoviews.SEWAGE_TRADE_TOOLTIP, {}),
                value: t,
                gradient: k4
            })
        }
        ;
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/water-infoview-panel.tsx", {
            get WaterInfoviewPanel() {
                return T8
            },
            set WaterInfoviewPanel(e) {
                T8 = e
            }
        });
        var j8 = ()=>{
            const e = sl(hx);
            return (0,
            z.jsx)(W4, {
                title: (0,
                z.jsx)(N4, {
                    uppercase: !0,
                    text: (0,
                    z.jsx)(_c.WaterPollutionInfoPanel.AVERAGE_WATER_POLLUTION, {}),
                    rightText: (0,
                    z.jsx)($u, {
                        value: e.current,
                        max: e.max
                    })
                }),
                tooltip: (0,
                z.jsx)(_c.Infoviews.AVERAGE_WATER_POLLUTION_TOOLTIP, {}),
                value: e,
                gradient: O4
            })
        }
        ;
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/water-pollution-infoview-panel.tsx", {
            get WaterPollutionInfoviewPanel() {
                return j8
            },
            set WaterPollutionInfoviewPanel(e) {
                j8 = e
            }
        });
        let C8 = {
            "info-piechart": "info-piechart_wXd",
            infoPiechart: "info-piechart_wXd",
            content: "content__L_",
            pie: "pie_WkN",
            legends: "legends_pVz",
            legend: "legend_fqG"
        };
        X.add("game-ui/common/charts/pie-chart/info-piechart.module.scss", {
            get classes() {
                return C8
            },
            set classes(e) {
                Object.assign(C8, e)
            }
        });
        const N8 = C8;
        var w8 = ["#808080", "#b09868", "#368a2e", "#b981c0", "#5796d1", "#FFFFFF33"]
          , O8 = [(0,
        z.jsx)(_c.EducationInfoPanel.LEVEL, {
            hash: "Uneducated"
        }), (0,
        z.jsx)(_c.EducationInfoPanel.LEVEL, {
            hash: "Poorly Educated"
        }), (0,
        z.jsx)(_c.EducationInfoPanel.LEVEL, {
            hash: "Educated"
        }), (0,
        z.jsx)(_c.EducationInfoPanel.LEVEL, {
            hash: "Well Educated"
        }), (0,
        z.jsx)(_c.EducationInfoPanel.LEVEL, {
            hash: "Highly Educated"
        }), (0,
        z.jsx)(_c.SelectedInfoPanel.OPEN_POSITIONS, {})];
        X.add("game-ui/common/charts/pie-chart/workplaces-pie-charts.tsx", {
            get workplacesPieChartColors() {
                return w8
            },
            set workplacesPieChartColors(e) {
                w8 = e
            },
            get workplacesPieChartLabels() {
                return O8
            },
            set workplacesPieChartLabels(e) {
                O8 = e
            }
        });
        var P8 = ()=>{
            const e = sl(Sv)
              , t = sl(yv)
              , n = sl(jv)
              , s = sl(Cv);
            return (0,
            z.jsxs)(K4, {
                tooltip: (0,
                z.jsx)(_c.Infoviews.WORKPLACE_DISTRIBUTION_TOOLTIP, {}),
                children: [(0,
                z.jsx)(N4, {
                    uppercase: !0,
                    text: (0,
                    z.jsx)(_c.WorkplacesInfoPanel.WORKPLACE_DISTRIBUTION, {})
                }), (0,
                z.jsx)(i6, {
                    colors: w8,
                    labels: O8,
                    data: t,
                    customLegend: t.values.map(((n,s)=>(e.values[s] > 0 || s === t.values.length - 1) && (0,
                    z.jsxs)("div", {
                        className: N8.legend,
                        children: [(0,
                        z.jsx)(xQ, {
                            color: w8[s],
                            label: O8[s]
                        }), s < t.values.length - 1 ? (0,
                        z.jsx)(uu, {
                            value: n,
                            total: e.values[s],
                            unit: vc.Integer
                        }) : (0,
                        z.jsx)(Oc, {
                            value: n,
                            unit: vc.Integer
                        })]
                    }, s)))
                }), (0,
                z.jsx)(y4, {}), (0,
                z.jsx)(N4, {
                    small: !0,
                    text: (0,
                    z.jsx)(_c.WorkplacesInfoPanel.WORKPLACES, {}),
                    rightText: (0,
                    z.jsx)(Oc, {
                        value: n,
                        unit: vc.Integer
                    })
                }), (0,
                z.jsx)(N4, {
                    small: !0,
                    text: (0,
                    z.jsx)(_c.WorkplacesInfoPanel.WORKERS, {}),
                    rightText: (0,
                    z.jsx)(Oc, {
                        value: s,
                        unit: vc.Integer
                    })
                })]
            })
        }
        ;
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/workplaces-infoview-panel.tsx", {
            get WorkplacesInfoviewPanel() {
                return P8
            },
            set WorkplacesInfoviewPanel(e) {
                P8 = e
            }
        });
        let L8 = {
            title: "title_HFc",
            "active-infoview-panel": "active-infoview-panel_aTq",
            activeInfoviewPanel: "active-infoview-panel_aTq",
            "infomodes-panel": "infomodes-panel_B0O",
            infomodesPanel: "infomodes-panel_B0O",
            scrollable: "scrollable_wt8"
        };
        X.add("game-ui/game/components/infoviews/active-infoview-panel/active-infoview-panel.module.scss", {
            get classes() {
                return L8
            },
            set classes(e) {
                Object.assign(L8, e)
            }
        });
        const A8 = L8;
        var M8 = ({focusKey: e, className: t, closeHint: n, unfocusedHintAction: s, onClose: i, transition: a, allowFocusExit: o, scrollable: r=!0})=>{
            const l = f4(Fv.PhotoMode)
              , c = Mp(sl(ef))
              , u = (0,
            Y.useMemo)((()=>function(e) {
                switch (e?.id) {
                case "Electricity":
                    return (0,
                    z.jsx)(u6, {});
                case "WaterPipes":
                    return (0,
                    z.jsx)(T8, {});
                case "Transport":
                    return (0,
                    z.jsx)(b8, {});
                case "Education":
                    return (0,
                    z.jsx)(l6, {});
                case "Healthcare":
                    return (0,
                    z.jsx)(_6, {});
                case "Garbage":
                    return (0,
                    z.jsx)(m6, {});
                case "Roads":
                    return (0,
                    z.jsx)(t8, {});
                case "Traffic":
                    return (0,
                    z.jsx)(d8, {});
                case "AirPollution":
                    return (0,
                    z.jsx)(z4, {});
                case "GroundPollution":
                    return (0,
                    z.jsx)(p6, {});
                case "WaterPollution":
                    return (0,
                    z.jsx)(j8, {});
                case "NoisePollution":
                    return (0,
                    z.jsx)(Y6, {});
                case "FireRescue":
                    return (0,
                    z.jsx)(d6, {});
                case "Police":
                    return (0,
                    z.jsx)(X6, {});
                case "LandValue":
                    return (0,
                    z.jsx)(I6, {});
                case "Level":
                    return (0,
                    z.jsx)(K6, {});
                case "DisasterControl":
                    return (0,
                    z.jsx)(Q4, {});
                case "Tourism":
                    return (0,
                    z.jsx)(n8, {});
                case "PostService":
                    return (0,
                    z.jsx)(e8, {});
                case "Population":
                    return (0,
                    z.jsx)(J6, {});
                case "Extractors":
                    return (0,
                    z.jsx)(W6, {});
                case "OutsideConnections":
                    return (0,
                    z.jsx)(q6, {});
                case "Profitability":
                    return (0,
                    z.jsx)(Y4, {});
                case "Workplaces":
                    return (0,
                    z.jsx)(P8, {});
                case "Happiness":
                    return (0,
                    z.jsx)(v6, {});
                default:
                    return null
                }
            }(c)), [c])
              , d = (0,
            Y.useCallback)((()=>i()), [i])
              , m = (0,
            Y.useMemo)((()=>c ? `${vT.value?.infoviewsPanel}+${c.uiTag}` : void 0), [c]);
            lg(m, null != c);
            const h = c && !l.visible
              , g = h && (0,
            z.jsx)(Fg, {
                onAction: d,
                children: (0,
                z.jsxs)(np, {
                    allowLooping: !0,
                    children: [u, c.infomodes.length > 0 && (0,
                    z.jsxs)("div", {
                        className: A8.infomodesPanel,
                        children: [(0,
                        z.jsx)(N4, {
                            text: (0,
                            z.jsx)(_c.Infoviews.MAP_LEGEND, {}),
                            uppercase: !0
                        }), (0,
                        z.jsx)(y4, {}), c?.infomodes.map((e=>(0,
                        z.jsx)(T4, {
                            focusKey: e.id,
                            infomode: e
                        }, e.id)))]
                    })]
                })
            });
            return (0,
            z.jsx)(z.Fragment, {
                children: h && (0,
                z.jsx)(mT, {
                    uiTag: m,
                    children: (0,
                    z.jsx)(rE, {
                        focusKey: e,
                        className: Zu()(A8.activeInfoviewPanel, t),
                        onClose: d,
                        header: (0,
                        z.jsx)(dE, {
                            icon: c?.icon,
                            className: A8.title,
                            children: (0,
                            z.jsx)(_c.Infoviews.INFOVIEW, {
                                hash: c?.id || ""
                            })
                        }),
                        transition: a,
                        allowFocusExit: o,
                        showCloseHint: n || !0,
                        unfocusedHintAction: s,
                        children: r ? (0,
                        z.jsx)(mb, {
                            className: A8.scrollable,
                            children: g
                        }) : g
                    })
                })
            })
        }
        ;
        X.add("game-ui/game/components/infoviews/active-infoview-panel/active-infoview-panel.tsx", {
            get ActiveInfoviewPanel() {
                return M8
            },
            set ActiveInfoviewPanel(e) {
                M8 = e
            }
        });
        let R8 = {
            button: "button_FBo button_ECf item_It6 item-mouse-states_Fmi item-selected_tAM item-focused_FuT toggle-states_DTm",
            icon: "icon_ZjN icon_soN icon_Iwk",
            locked: "locked_Tjl locked_H2O locked_dBl",
            item: "item_IYJ",
            lock: "lock_OBe",
            container: "container_Mil",
            hint: "hint_XjU",
            "hint-icon": "hint-icon_t5h",
            hintIcon: "hint-icon_t5h"
        };
        X.add("game-ui/game/components/infoviews/infoviews-button/infoview-button.module.scss", {
            get classes() {
                return R8
            },
            set classes(e) {
                Object.assign(R8, e)
            }
        });
        const k8 = R8
          , D8 = {
            hint: k8.hint,
            icon: k8.hintIcon
        };
        var F8 = ({infoview: e, selected: t, onSelect: n, bypassLocking: s})=>{
            const [i,a] = (0,
            Y.useState)(!1)
              , o = (0,
            Y.useCallback)((()=>{
                n(t ? Zp : e.entity),
                ag(e.uiTag)
            }
            ), [n, t, e.entity, e.uiTag])
              , r = !s && e.locked;
            return (0,
            z.jsx)(mT, {
                uiTag: e.uiTag,
                children: (0,
                z.jsx)(H6, {
                    title: (0,
                    z.jsx)(_c.Infoviews.INFOVIEW, {
                        hash: e.id
                    }),
                    locked: r,
                    requirements: e.requirements,
                    direction: "up",
                    alignment: "end",
                    children: (0,
                    z.jsx)(Ah, {
                        onFocusChange: a,
                        children: (0,
                        z.jsxs)("div", {
                            className: k8.container,
                            children: [(0,
                            z.jsx)(UT, {
                                action: "Select",
                                active: i && !e.locked,
                                theme: D8
                            }), (0,
                            z.jsx)(tb, {
                                disableHint: !0,
                                focusKey: e.id,
                                src: e.icon ?? "Media/Placeholder.svg",
                                disabled: r,
                                selected: t,
                                theme: k8,
                                onSelect: o,
                                className: Zu()(k8.item, r && k8.locked),
                                children: r && (0,
                                z.jsx)(OZ, {
                                    className: k8.lock
                                })
                            })]
                        })
                    })
                })
            })
        }
        ;
        X.add("game-ui/game/components/infoviews/infoviews-button/infoview-button.tsx", {
            get InfoviewButton() {
                return F8
            },
            set InfoviewButton(e) {
                F8 = e
            }
        });
        let U8 = {
            "infoview-menu": "infoview-menu_LhU",
            infoviewMenu: "infoview-menu_LhU",
            "menu-column": "menu-column_VJk",
            menuColumn: "menu-column_VJk",
            menu: "menu_O_M",
            content: "content_Hzl",
            row: "row_B8G",
            "close-hint": "close-hint_K02",
            closeHint: "close-hint_K02"
        };
        X.add("game-ui/game/components/infoviews/infoview-menu.module.scss", {
            get classes() {
                return U8
            },
            set classes(e) {
                Object.assign(U8, e)
            }
        });
        const B8 = U8
          , G8 = new Ig("INFOVIEWS")
          , V8 = new Ig("ACTIVE_INFOVIEW");
        var H8 = ({className: e, onClose: t})=>{
            const n = sl(ef)
              , s = (0,
            Y.useCallback)((()=>{
                null != n ? nf(Zp) : t()
            }
            ), [n, t]);
            return (0,
            z.jsx)(Fg, {
                onAction: s,
                children: (0,
                z.jsx)(op, {
                    focused: null != n ? V8 : G8,
                    children: (0,
                    z.jsxs)("div", {
                        className: Zu()(B8.infoviewMenu, e),
                        children: [(0,
                        z.jsx)(K8, {
                            focusKey: G8
                        }), (0,
                        z.jsx)(wS, {
                            in: null != n,
                            children: (0,
                            z.jsx)(M8, {
                                closeHint: "Back",
                                focusKey: V8,
                                onClose: sf
                            })
                        })]
                    })
                })
            })
        }
        ;
        const K8 = ({focusKey: e, className: t})=>{
            const n = Dm()
              , [s,i] = (0,
            Y.useState)(!1);
            zp(!s || !n),
            rg(vT.value?.infoviewsMenu),
            lg(vT.value?.infoviewsMenu);
            const a = sl(Jp)
              , o = sl(ef)
              , r = o?.id ?? null
              , [l,c] = (0,
            Y.useState)(r);
            (0,
            Y.useEffect)((()=>{
                null != r && c(r)
            }
            ), [r]);
            const u = a.reduce(((e,t)=>(e[t.group] || (e[t.group] = []),
            e[t.group].push(t),
            e)), []);
            return (0,
            z.jsx)(mT, {
                uiTag: vT.value?.infoviewsMenu,
                children: (0,
                z.jsx)(rE, {
                    focusKey: e,
                    transitionSounds: up,
                    className: Zu()(B8.menu, t),
                    contentClassName: B8.content,
                    showCloseHint: "Close",
                    hintClassName: B8.closeHint,
                    children: (0,
                    z.jsx)(Ah, {
                        onFocusChange: i,
                        children: (0,
                        z.jsx)(Zg, {
                            allowLooping: !0,
                            focused: l,
                            onChange: c,
                            onRefocus: Jg,
                            direction: kg.Vertical,
                            children: u.map(((e,t)=>(0,
                            z.jsx)(W8, {
                                infoviews: e,
                                activeId: r
                            }, t)))
                        })
                    })
                })
            })
        }
          , W8 = ({infoviews: e, activeId: t})=>(0,
        z.jsx)(np, {
            allowLooping: !0,
            direction: kg.Horizontal,
            children: (0,
            z.jsx)("div", {
                className: B8.row,
                children: e.map((e=>(0,
                z.jsx)(F8, {
                    infoview: e,
                    selected: e.id === t,
                    onSelect: nf
                }, e.id)))
            })
        });
        var z8 = ({className: e, onSelect: t})=>{
            const n = sl(Jp)
              , s = sl(ef)
              , i = s?.id ?? null
              , [a,o] = (0,
            Y.useState)(i)
              , r = n.filter((e=>e.editor)).map((e=>(0,
            z.jsx)(F8, {
                infoview: e,
                selected: e.id === i,
                onSelect: t,
                bypassLocking: !0
            }, e.id)));
            return 0 === r.length ? null : (0,
            z.jsx)(rE, {
                transitionSounds: up,
                className: e,
                contentClassName: B8.content,
                allowFocusExit: !0,
                showCloseHint: !1,
                children: (0,
                z.jsx)(Zg, {
                    focused: a,
                    onChange: o,
                    direction: kg.Horizontal,
                    children: (0,
                    z.jsx)(mb, {
                        horizontal: !0,
                        vertical: !1,
                        children: (0,
                        z.jsx)("div", {
                            className: B8.row,
                            children: r
                        })
                    })
                })
            })
        }
        ;
        X.add("game-ui/game/components/infoviews/infoview-menu.tsx", {
            get InfoviewMenu() {
                return H8
            },
            set InfoviewMenu(e) {
                H8 = e
            },
            get EditorInfoviewMenu() {
                return z8
            },
            set EditorInfoviewMenu(e) {
                z8 = e
            }
        });
        let Y8 = {
            itemHeight: "30rem",
            hierarchy: "hierarchy_vuK",
            item: "item_Ksl",
            "item-label": "item-label_GTI",
            itemLabel: "item-label_GTI",
            "arrow-container": "arrow-container_Mio",
            arrowContainer: "arrow-container_Mio",
            arrow: "arrow_wix",
            expanded: "expanded_YQt",
            bullet: "bullet_B3F",
            title: "title_THo",
            placeholder: "placeholder_bdR",
            actions: "actions_Qtv",
            "action-button": "action-button_irO item-states_QjV",
            actionButton: "action-button_irO item-states_QjV"
        };
        X.add("game-ui/editor/components/hierarchy/hierarchy.module.scss", {
            get classes() {
                return Y8
            },
            set classes(e) {
                Object.assign(Y8, e)
            }
        });
        const $8 = Y8;
        var q8 = ({className: e})=>{
            const t = sl(Y0)
              , n = uH(Vm($8.itemHeight), t, 10)
              , s = sl(q0)
              , i = sl($0)
              , a = function(e, t) {
                const n = e.items.findIndex((e=>o1(e.id, t)));
                return -1 !== n ? e.startIndex + n : null
            }(s, i)
              , o = (0,
            Y.useCallback)((e=>{
                const t = e - s.startIndex;
                if (t >= 0 && t < s.items.length) {
                    const n = s.items[t];
                    return (0,
                    z.jsx)(X8, {
                        index: e,
                        data: n,
                        selected: o1(n.id, i),
                        onSelect: Z0,
                        onToggleExpanded: J0
                    }, e)
                }
                return (0,
                z.jsx)(Q8, {}, e)
            }
            ), [i, s.items, s.startIndex])
              , r = (0,
            Y.useCallback)(((e,t)=>{
                Q0(e, t)
            }
            ), []);
            return (0,
            z.jsx)(np, {
                direction: kg.Vertical,
                initialFocused: a,
                children: (0,
                z.jsx)(rH, {
                    className: Zu()($8.hierarchy, e),
                    sizeProvider: n,
                    renderItem: o,
                    onRenderedRangeChange: r
                })
            })
        }
        ;
        const X8 = ({index: e, data: t, selected: n, onSelect: s, onToggleExpanded: i})=>{
            const a = Dm()
              , o = (0,
            Y.useCallback)((()=>{
                t.selectable || a ? s(t.id) : t.expandable && i(t.id, !t.expanded)
            }
            ), [t.expandable, t.expanded, t.id, t.selectable, a, s, i])
              , r = (0,
            Y.useCallback)((()=>{
                i(t.id, !t.expanded),
                cp(lp.expandPanel)
            }
            ), [t.expanded, t.id, i])
              , l = (0,
            Y.useMemo)((()=>({
                [t.expanded ? "Collapse Group" : "Expand Group"]: t.expandable ? r : null
            })), [t.expanded, t.expandable, r]);
            return (0,
            z.jsx)("div", {
                className: Zu()($8.item, {
                    [$8.expanded]: t.expanded,
                    selected: n
                }),
                style: {
                    "--level": t.level
                },
                onClick: o,
                children: (0,
                z.jsx)(np, {
                    direction: kg.Horizontal,
                    focusKey: e,
                    children: (0,
                    z.jsx)(Mg, {
                        actions: l,
                        children: (0,
                        z.jsx)(Eg, {
                            tooltip: (0,
                            z.jsx)(gu, {
                                value: t.tooltip
                            }),
                            children: (0,
                            z.jsxs)(U_, {
                                className: $8.itemLabel,
                                selected: n,
                                onSelect: o,
                                children: [t.expandable ? (0,
                                z.jsx)("div", {
                                    className: $8.arrowContainer,
                                    children: (0,
                                    z.jsx)("img", {
                                        src: "Media/Editor/HierarchyExpand.svg",
                                        className: $8.arrow,
                                        onClick: r
                                    })
                                }) : (0,
                                z.jsx)("img", {
                                    src: "Media/Editor/HierarchyNode.svg",
                                    className: $8.bullet
                                }), (0,
                                z.jsx)("div", {
                                    className: $8.title,
                                    children: (0,
                                    z.jsx)(gu, {
                                        value: t.name
                                    })
                                })]
                            })
                        })
                    })
                })
            })
        }
          , Q8 = ()=>(0,
        z.jsx)("div", {
            className: $8.placeholder
        });
        X.add("game-ui/editor/components/hierarchy/hierarchy.tsx", {
            get Hierarchy() {
                return q8
            },
            set Hierarchy(e) {
                q8 = e
            }
        });
        let Z8 = {
            panel: "panel_Qoc",
            content: "content_taQ",
            hierarchy: "hierarchy_QwS"
        };
        X.add("game-ui/editor/components/hierarchy/hierarchy-panel.module.scss", {
            get classes() {
                return Z8
            },
            set classes(e) {
                Object.assign(Z8, e)
            }
        });
        const J8 = Z8;
        var e9 = ({onClose: e, forceExpanded: t})=>(0,
        z.jsx)(Ep, {
            disabled: !1 === t,
            children: (0,
            z.jsx)(Fg, {
                onAction: e,
                children: (0,
                z.jsx)(mT, {
                    uiTag: vT.value?.workspaceTitleBar,
                    editor: !0,
                    children: (0,
                    z.jsx)(o5, {
                        theme: c5,
                        headerText: (0,
                        z.jsx)(_c.Editor.WORKSPACE, {}),
                        className: J8.panel,
                        contentClassName: J8.content,
                        onClose: e,
                        allowFocusExit: !0,
                        expanded: t,
                        children: (0,
                        z.jsx)(q8, {
                            className: J8.hierarchy
                        })
                    })
                })
            })
        });
        X.add("game-ui/editor/components/hierarchy/hierarchy-panel.tsx", {
            get HierarchyPanel() {
                return e9
            },
            set HierarchyPanel(e) {
                e9 = e
            }
        });
        let t9 = {
            minWidth: "200rem",
            maxWidth: "500rem",
            "top-panel-row": "top-panel-row_NFs",
            topPanelRow: "top-panel-row_NFs",
            "top-panel-column": "top-panel-column_zGK",
            topPanelColumn: "top-panel-column_zGK",
            "infoview-menu": "infoview-menu_CKL",
            infoviewMenu: "infoview-menu_CKL",
            "infoview-panel-transition-wrapper": "infoview-panel-transition-wrapper_mRB",
            infoviewPanelTransitionWrapper: "infoview-panel-transition-wrapper_mRB",
            enter: "enter_y8_",
            "exit-active": "exit-active_vMy",
            exitActive: "exit-active_vMy",
            "enter-active": "enter-active_wJ0",
            enterActive: "enter-active_wJ0",
            exit: "exit_AML",
            "active-infoview-menu": "active-infoview-menu_ds8",
            activeInfoviewMenu: "active-infoview-menu_ds8",
            "action-hints": "action-hints_Ttj",
            actionHints: "action-hints_Ttj"
        };
        X.add("game-ui/editor/components/editor-top-panels.module.scss", {
            get classes() {
                return t9
            },
            set classes(e) {
                Object.assign(t9, e)
            }
        });
        const n9 = t9;
        var s9 = ({onExitInfoviewFocus: e})=>{
            const t = sl(ef)
              , n = (0,
            Y.useCallback)((()=>{
                nf(Zp)
            }
            ), [])
              , s = (0,
            Y.useCallback)((e=>{
                nf(e)
            }
            ), [])
              , i = Vm(n9.minWidth)
              , a = Vm(n9.maxWidth)
              , o = sl(z0)
              , r = Hm()
              , l = (0,
            Y.useCallback)((e=>X0(Math.round(e / r))), [r])
              , c = Dm();
            return (0,
            z.jsxs)("div", {
                className: n9.topPanelRow,
                children: [(0,
                z.jsxs)(c4, {
                    width: o * r,
                    minWidth: i,
                    maxWidth: a,
                    direction: "right",
                    onResize: l,
                    className: n9.topPanelColumn,
                    children: [(0,
                    z.jsx)(Fg, {
                        onAction: e,
                        children: (0,
                        z.jsxs)(np, {
                            focusKey: uve,
                            children: [(0,
                            z.jsx)(mT, {
                                uiTag: vT.value?.editorInfoViewsPanel,
                                editor: !0,
                                children: (0,
                                z.jsx)(z8, {
                                    className: n9.infoviewMenu,
                                    onSelect: s
                                })
                            }), (0,
                            z.jsx)(wS, {
                                in: null !== t,
                                children: (0,
                                z.jsx)(NS, {
                                    styles: n9,
                                    children: (0,
                                    z.jsx)("div", {
                                        className: n9.infoviewPanelTransitionWrapper,
                                        children: (0,
                                        z.jsx)(M8, {
                                            className: n9.activeInfoviewMenu,
                                            onClose: n,
                                            transition: null,
                                            scrollable: !0,
                                            allowFocusExit: !0,
                                            unfocusedHintAction: "Close",
                                            closeHint: "Close"
                                        })
                                    })
                                })
                            })]
                        })
                    }), (0,
                    z.jsx)(e9, {
                        forceExpanded: null === t && void 0
                    })]
                }), (0,
                z.jsx)(IT, {
                    disabled: !c,
                    className: n9.actionHints,
                    excludedActions: ET
                })]
            })
        }
        ;
        function i9(e=!1) {
            (0,
            Y.useEffect)((()=>{
                if (!e) {
                    const e = ()=>{}
                      , t = YO.subscribe(e);
                    return ()=>{
                        t?.dispose()
                    }
                }
            }
            ), [e])
        }
        X.add("game-ui/editor/components/editor-top-panels.tsx", {
            get EditorTopPanels() {
                return s9
            },
            set EditorTopPanels(e) {
                s9 = e
            }
        }),
        X.add("game-ui/common/hooks/use-simulation-paused-barrier.tsx", {
            get useSimulationPausedBarrier() {
                return i9
            },
            set useSimulationPausedBarrier(e) {
                i9 = e
            }
        });
        var a9 = ({...e})=>(0,
        z.jsx)(tb, {
            ...e,
            tinted: !0,
            theme: $I
        });
        X.add("game-ui/common/input/button/floating-icon-button.tsx", {
            get FloatingIconButton() {
                return a9
            },
            set FloatingIconButton(e) {
                a9 = e
            }
        });
        var o9, r9, l9, c9 = "tooltip", u9 = $r(c9, "groups", []);
        !function(e) {
            e[e.Start = 0] = "Start",
            e[e.Center = 1] = "Center",
            e[e.End = 2] = "End"
        }(o9 || (o9 = {})),
        function(e) {
            e[e.Info = 0] = "Info",
            e[e.Success = 1] = "Success",
            e[e.Warning = 2] = "Warning",
            e[e.Error = 3] = "Error"
        }(r9 || (r9 = {})),
        function(e) {
            e.Number = "Game.UI.Tooltip.NumberTooltip",
            e.Progress = "Game.UI.Tooltip.ProgressTooltip",
            e.String = "Game.UI.Tooltip.StringTooltip",
            e.Name = "Game.UI.Tooltip.NameTooltip",
            e.Notification = "Game.UI.Tooltip.NotificationTooltip",
            e.ZoningEvaluation = "Game.UI.Tooltip.ZoningEvaluationTooltip",
            e.InputHint = "Game.UI.Tooltip.InputHintTooltip"
        }(l9 || (l9 = {})),
        X.add("game-ui/common/data-binding/tooltip-bindings.ts", {
            get tooltipGroup() {
                return c9
            },
            set tooltipGroup(e) {
                c9 = e
            },
            get tooltipGroups() {
                return tooltipGroups
            },
            set tooltipGroups(e) {
                tooltipGroups = e
            },
            get TooltipGroupAlignment() {
                return o9
            },
            set TooltipGroupAlignment(e) {
                o9 = e
            },
            get TooltipColor() {
                return r9
            },
            set TooltipColor(e) {
                r9 = e
            },
            get TooltipType() {
                return l9
            },
            set TooltipType(e) {
                l9 = e
            }
        });
        let d9 = {
            showDelay: "100ms",
            "group-container": "group-container_Fl2 tooltip-fade-in_S9n",
            groupContainer: "group-container_Fl2 tooltip-fade-in_S9n",
            group: "group_zcS",
            gamepad: "gamepad_kHF",
            item: "item_k3Z tooltip-base_zwi",
            "row-item": "row-item_oHU item_k3Z tooltip-base_zwi",
            rowItem: "row-item_oHU item_k3Z tooltip-base_zwi",
            icon: "icon_Blg",
            "score-indicator": "score-indicator_i6X",
            scoreIndicator: "score-indicator_i6X",
            positive: "positive_Uf2",
            negative: "negative_pRC",
            label: "label_zet",
            value: "value_uLz",
            success: "success_bHA",
            warning: "warning_e1p",
            error: "error_NkQ",
            paragraphs: "paragraphs_LK4",
            hint: "hint_l_F",
            "hint-label": "hint-label_c1x",
            hintLabel: "hint-label_c1x",
            "hint-icon": "hint-icon_VtT",
            hintIcon: "hint-icon_VtT"
        };
        X.add("game-ui/common/tooltip/tooltip-renderer/tooltip-renderer.module.scss", {
            get classes() {
                return d9
            },
            set classes(e) {
                Object.assign(d9, e)
            }
        });
        const m9 = d9
          , h9 = parseInt(m9.showDelay)
          , g9 = [!1, null];
        var p9 = ({disabled: e})=>{
            const [t,n] = (0,
            Y.useState)(u9.value)
              , s = Um()
              , i = QR(c9)
              , a = (0,
            Y.useCallback)((e=>{
                n((t=>{
                    const [n,s] = function(e, t) {
                        if (e.length !== t.length)
                            return g9;
                        const n = [];
                        for (let s = 0; s < e.length; s++) {
                            const i = e[s]
                              , a = t[s];
                            if (!Kr(i.props, a.props, 2)) {
                                if (i.children.length !== a.children.length)
                                    return g9;
                                if (!Kr(i.children, a.children, 4))
                                    return g9;
                                if (!Kr({
                                    ...i.props,
                                    position: void 0
                                }, {
                                    ...a.props,
                                    position: void 0
                                }, 4))
                                    return g9;
                                n.push(t[s])
                            }
                        }
                        return n.length !== e.length ? g9 : [!0, n]
                    }(t, e);
                    if (n) {
                        if (null !== s)
                            for (let e = 0; e < s.length; e++) {
                                const n = s[e]
                                  , i = document.querySelector(`#tooltip-${e}`);
                                if (i)
                                    i.style.transform = `translate(${n.props.position.x}px, ${n.props.position.y}px)`;
                                else {
                                    const e = t.find((e=>e.path === n.path));
                                    e && (e.props.position = n.props.position)
                                }
                            }
                        return t
                    }
                    return e
                }
                ))
            }
            ), []);
            return ol(u9, a),
            (0,
            z.jsx)(z.Fragment, {
                children: !e && t.map(((e,t)=>function(e, t) {
                    return e.x > -.1 * t.x && e.x < 1.1 * t.x && e.y > -.1 * t.y && e.y < 1.1 * t.y
                }(e.props.position, s) ? (0,
                z.jsx)(f9, {
                    parent: i,
                    indexId: t,
                    ...e
                }, e.path) : void 0))
            })
        }
          , f9 = ({parent: e, path: t, props: n, children: s, indexId: i})=>{
            const a = ZR(e, t)
              , [o,r] = (0,
            Y.useState)(!1)
              , l = Dm()
              , c = (0,
            Y.useMemo)((()=>o ? {
                container: {
                    transform: `translate(${n.position.x}px, ${n.position.y}px)`,
                    justifyContent: x9(n.verticalAlignment),
                    alignItems: x9(n.horizontalAlignment)
                },
                group: {
                    alignItems: x9(n.horizontalAlignment)
                }
            } : {}), [n, o]);
            return (0,
            Y.useEffect)((()=>KH((()=>r(!0)), h9)), []),
            o ? (0,
            z.jsx)("div", {
                id: `tooltip-${i}`,
                className: m9.groupContainer,
                style: c.container,
                children: (0,
                z.jsx)("div", {
                    className: Zu()(m9.group, l && m9.gamepad),
                    style: c.group,
                    children: (0,
                    z.jsx)(hD, {
                        parent: a,
                        components: E9,
                        data: s
                    })
                })
            }) : null
        }
        ;
        function x9(e) {
            switch (e) {
            case o9.Start:
                return "flex-start";
            case o9.Center:
                return "center";
            case o9.End:
                return "flex-end";
            default:
                return "center"
            }
        }
        const v9 = {
            hint: m9.hint,
            label: m9.hintLabel,
            icon: m9.hintIcon
        };
        function _9(e) {
            return e > 0 ? "+" : e < 0 ? "−" : "±"
        }
        const b9 = ({icon: e, label: t, color: n=r9.Info, className: s, children: i})=>(0,
        z.jsxs)("div", {
            className: Zu()(m9.rowItem, s),
            children: [e && (0,
            z.jsx)("img", {
                src: e,
                className: m9.icon
            }), t && (0,
            z.jsx)("div", {
                className: m9.label,
                children: (0,
                z.jsx)(gu, {
                    value: t
                })
            }), (0,
            z.jsx)("div", {
                className: Zu()(m9.value, T9[n]),
                children: i
            })]
        })
          , T9 = [void 0, m9.success, m9.warning, m9.error];
        var E9 = {
            [l9.Number]: I9((({value: e, unit: t, signed: n, ...s})=>(0,
            z.jsx)(b9, {
                ...s,
                children: (0,
                z.jsx)(Oc, {
                    value: e,
                    unit: t,
                    signed: n
                })
            }))),
            [l9.Progress]: I9((({value: e, max: t, unit: n, omitMax: s, ...i})=>{
                const a = !s || e !== t;
                return (0,
                z.jsx)(b9, {
                    ...i,
                    children: a ? (0,
                    z.jsx)(uu, {
                        value: e,
                        total: t,
                        unit: n
                    }) : (0,
                    z.jsx)(Oc, {
                        value: e,
                        unit: n
                    })
                })
            }
            )),
            [l9.String]: I9((({value: e, ...t})=>(0,
            z.jsx)(b9, {
                ...t,
                children: (0,
                z.jsx)(Cb, {
                    className: m9.paragraphs,
                    children: (0,
                    z.jsx)(gu, {
                        value: e
                    })
                })
            }))),
            [l9.Name]: I9((({icon: e, name: t})=>(0,
            z.jsx)(b9, {
                icon: e,
                children: (0,
                z.jsx)(Ku, {
                    value: t
                })
            }))),
            [l9.Notification]: I9((({name: e, color: t, verbose: n})=>n ? (0,
            z.jsx)("div", {
                className: m9.item,
                children: (0,
                z.jsx)(GQ, {
                    title: (0,
                    z.jsx)(_c.Notifications.TITLE, {
                        hash: e
                    }),
                    description: (0,
                    z.jsx)(_c.Notifications.DESCRIPTION, {
                        hash: e
                    })
                })
            }) : (0,
            z.jsx)(b9, {
                color: t,
                children: (0,
                z.jsx)(_c.Notifications.TITLE, {
                    hash: e
                })
            }))),
            [l9.ZoningEvaluation]: I9((({factor: e, score: t})=>(0,
            z.jsxs)("div", {
                className: m9.rowItem,
                children: [(0,
                z.jsx)("div", {
                    className: Zu()(m9.scoreIndicator, t >= 0 ? m9.positive : m9.negative),
                    children: _9(t)
                }), (0,
                z.jsx)("div", {
                    className: m9.value,
                    children: t >= 0 ? (0,
                    z.jsx)(_c.ZoningFactors.POSITIVE, {
                        hash: e
                    }) : (0,
                    z.jsx)(_c.ZoningFactors.NEGATIVE, {
                        hash: e
                    })
                })]
            }))),
            [l9.InputHint]: I9((({hint: e})=>e ? (0,
            z.jsx)("div", {
                className: m9.rowItem,
                children: (0,
                z.jsx)(PT, {
                    bindings: e.items[0].bindings,
                    modifiers: e.items[0].modifiers,
                    theme: v9,
                    children: (0,
                    z.jsx)("span", {
                        className: v9.label,
                        children: (0,
                        z.jsx)(Cb, {
                            className: m9.paragraphs,
                            children: (0,
                            z.jsx)(_c.Common.ACTION, {
                                hash: e.name,
                                showIdOnFail: !0
                            })
                        })
                    })
                })
            }, e.name) : null))
        };
        function I9(e) {
            const t = e
              , n = ({props: e})=>(0,
            z.jsx)(t, {
                ...e
            });
            return n.displayName = e.displayName ?? e.name,
            n
        }
        X.add("game-ui/common/tooltip/tooltip-renderer/tooltip-renderer.tsx", {
            get TooltipRenderer() {
                return p9
            },
            set TooltipRenderer(e) {
                p9 = e
            },
            get BoundTooltipGroup() {
                return f9
            },
            set BoundTooltipGroup(e) {
                f9 = e
            },
            get tooltipComponents() {
                return E9
            },
            set tooltipComponents(e) {
                E9 = e
            }
        });
        let S9 = {
            base: "base_USz",
            enter: "enter_HYB",
            "exit-active": "exit-active_hp7",
            exitActive: "exit-active_hp7",
            "enter-active": "enter-active_fw8",
            enterActive: "enter-active_fw8",
            exit: "exit_N8B"
        };
        X.add("game-ui/menu/transitions/expand-fade.module.scss", {
            get classes() {
                return S9
            },
            set classes(e) {
                Object.assign(S9, e)
            }
        });
        const y9 = S9;
        let j9 = {
            base: "base_mxi",
            enter: "enter_H6J",
            "exit-active": "exit-active_jeC",
            exitActive: "exit-active_jeC",
            "enter-active": "enter-active_YSl",
            enterActive: "enter-active_YSl",
            exit: "exit_OM8",
            "achievements-warning-row": "achievements-warning-row_p2C",
            achievementsWarningRow: "achievements-warning-row_p2C",
            "achievements-warning": "achievements-warning_Gp9",
            achievementsWarning: "achievements-warning_Gp9",
            space: "space_qhY"
        };
        X.add("game-ui/menu/components/shared/game-options/achievements-warning.module.scss", {
            get classes() {
                return j9
            },
            set classes(e) {
                Object.assign(j9, e)
            }
        });
        const C9 = j9;
        var N9 = ({modsEnabled: e=!1, pastModsEnabled: t=!1, unlockAll: n=!1, unlimitedMoney: s=!1, unlockMapTiles: i=!1})=>(0,
        z.jsx)(wS, {
            in: e || t || n || s || i,
            children: (0,
            z.jsx)(NS, {
                styles: C9,
                children: (0,
                z.jsxs)("div", {
                    className: C9.achievementsWarningRow,
                    children: [(0,
                    z.jsx)(w9, {
                        modsEnabled: e,
                        pastModsEnabled: t,
                        unlimitedMoney: s,
                        unlockAll: n,
                        unlockMapTiles: i,
                        autoHide: !1
                    }), (0,
                    z.jsx)("div", {
                        className: C9.space
                    })]
                })
            })
        })
          , w9 = ({modsEnabled: e, pastModsEnabled: t, unlockAll: n, unlimitedMoney: s, unlockMapTiles: i, className: a, autoHide: o=!0, loadGame: r=!1})=>{
            const l = sl(RE)
              , c = !!(n || s || i);
            if (o && !e && !t && !c)
                return null;
            const u = O9(e, !!t, c, r, l);
            return (0,
            z.jsx)("div", {
                className: Zu()(C9.achievementsWarning, a),
                children: u
            })
        }
        ;
        const O9 = (e,t,n,s,i)=>e ? 0 != (i & yE.PS) ? (0,
        z.jsx)(_c.Menu.ACHIEVEMENTS_WARNING_MODS_PS, {}) : (0,
        z.jsx)(_c.Menu.ACHIEVEMENTS_WARNING_MODS, {}) : t ? 0 != (i & yE.PS) ? (0,
        z.jsx)(_c.Menu.ACHIEVEMENTS_WARNING_PAST_MODS_PS, {}) : (0,
        z.jsx)(_c.Menu.ACHIEVEMENTS_WARNING_PAST_MODS, {}) : s ? 0 != (i & yE.PS) ? (0,
        z.jsx)(_c.Menu.ACHIEVEMENTS_WARNING_PAST_OPTIONS_PS, {}) : (0,
        z.jsx)(_c.Menu.ACHIEVEMENTS_WARNING_PAST_OPTIONS, {}) : 0 != (i & yE.PS) ? (0,
        z.jsx)(_c.Menu.ACHIEVEMENTS_WARNING_GAME_OPTIONS_PS, {}) : (0,
        z.jsx)(_c.Menu.ACHIEVEMENTS_WARNING_GAME_OPTIONS, {});
        X.add("game-ui/menu/components/shared/game-options/achievements-warning.tsx", {
            get AchievementsWarning() {
                return N9
            },
            set AchievementsWarning(e) {
                N9 = e
            },
            get AchievementsWarningBanner() {
                return w9
            },
            set AchievementsWarningBanner(e) {
                w9 = e
            }
        });
        let P9 = {
            buttons: "buttons_vR9",
            button: "button_GlF"
        };
        X.add("game-ui/menu/components/shared/game-options/button/buttons-row.module.scss", {
            get classes() {
                return P9
            },
            set classes(e) {
                Object.assign(P9, e)
            }
        });
        const L9 = P9;
        var A9 = ({buttons: e, onSelect: t})=>(0,
        z.jsx)("div", {
            className: L9.buttons,
            children: e.map((e=>(0,
            z.jsx)(M9, {
                item: e,
                onSelect: t
            }, e.id)))
        });
        const M9 = ({item: e, onSelect: t})=>{
            const n = (0,
            Y.useContext)(xE)
              , s = (0,
            Y.useContext)(kZ)
              , i = (0,
            Y.useCallback)((()=>s.onOptionMouseEnter(e.id)), [e.id, s])
              , a = (0,
            Y.useCallback)((()=>s.onOptionMouseLeave(e.id)), [e.id, s])
              , o = (0,
            Y.useCallback)((()=>t(e.id)), [e.id, t])
              , r = (0,
            Y.useCallback)((()=>{
                e.confirm ? n.showDialog((0,
                z.jsx)(zI, {
                    title: (0,
                    z.jsx)(_c.Common.WARNING, {}),
                    message: (0,
                    z.jsx)(_c.Options.WARNING, {
                        hash: e.id
                    }),
                    onConfirm: o
                })) : t(e.id)
            }
            ), [n, o, e.confirm, e.id, t]);
            return (0,
            z.jsx)(U_, {
                focusKey: e.id,
                disabled: e.disabled,
                theme: mJ,
                className: L9.button,
                onSelect: r,
                onMouseEnter: i,
                onMouseLeave: a,
                children: (0,
                z.jsx)(_c.Options.OPTION, {
                    hash: e.id
                })
            })
        }
        ;
        X.add("game-ui/menu/components/shared/game-options/button/buttons-row.tsx", {
            get ButtonRow() {
                return A9
            },
            set ButtonRow(e) {
                A9 = e
            }
        });
        let R9 = {
            "game-mode-card": "game-mode-card_LcY",
            gameModeCard: "game-mode-card_LcY",
            focused: "focused_mmz",
            wrapper: "wrapper_wrh",
            content: "content_r5T",
            title: "title_Kfp",
            image: "image_x88",
            decor: "decor_qXR",
            description: "description_FGM",
            footer: "footer_itk",
            rules: "rules_kTR"
        };
        X.add("game-ui/menu/components/new-game-screen/game-mode-selection/game-mode-selection.module.scss", {
            get classes() {
                return R9
            },
            set classes(e) {
                Object.assign(R9, e)
            }
        });
        const k9 = R9;
        var D9 = (0,
        Y.forwardRef)((function({selectedMode: e, focusKey: t, onSelect: n}, s) {
            const i = sl(dM)
              , [a,o] = (0,
            Y.useState)(0)
              , r = (0,
            Y.useMemo)((()=>({
                "Select Popup Button": e=>{
                    o(e >= 0 ? (a + 1) % i.length : (a + i.length - 1) % i.length)
                }
            })), [i.length, a])
              , l = Dm();
            return (0,
            z.jsx)(Mg, {
                actions: r,
                disabled: l,
                children: (0,
                z.jsx)(CH, {
                    className: k9.wrapper,
                    children: (0,
                    z.jsx)(np, {
                        focusKey: t,
                        initialFocused: e,
                        activation: qu.Always,
                        children: i.map(((e,t)=>(0,
                        z.jsx)(F9, {
                            gameMode: e,
                            onSelect: n,
                            selected: !l && t === a
                        }, e.id)))
                    })
                })
            })
        }
        ));
        const F9 = ({gameMode: e, onSelect: t, selected: n})=>{
            const [s,i] = (0,
            Y.useState)(!1)
              , a = Dm();
            return (0,
            z.jsx)(Mg, {
                actions: {
                    Select: ()=>t(e.id)
                },
                children: (0,
                z.jsx)(Ah, {
                    onFocusChange: i,
                    children: (0,
                    z.jsx)(np, {
                        children: (0,
                        z.jsx)($K, {
                            autoScroll: a && s,
                            className: Zu()(k9.gameModeCard, {
                                [k9.focused]: a && s
                            }),
                            preview: e.image,
                            overlay: e.decorateImage,
                            title: (0,
                            z.jsx)(z.Fragment, {
                                children: (0,
                                z.jsx)("div", {
                                    className: k9.title,
                                    children: (0,
                                    z.jsx)(_c.Menu.GAME_MODE_NAME, {
                                        hash: e.id
                                    })
                                })
                            }),
                            content: (0,
                            z.jsx)(NH, {
                                className: k9.content,
                                children: (0,
                                z.jsxs)(Sp, {
                                    children: [(0,
                                    z.jsx)("div", {
                                        className: k9.description,
                                        children: (0,
                                        z.jsx)(_c.Menu.GAME_MODE_DESCRIPTION, {
                                            hash: e.id
                                        })
                                    }), (0,
                                    z.jsx)("ul", {
                                        className: k9.rules,
                                        children: e.descriptions.map((e=>(0,
                                        z.jsx)("li", {
                                            children: (0,
                                            z.jsx)(gu, {
                                                value: e
                                            })
                                        }, e.id)))
                                    })]
                                })
                            }),
                            footer: a ? null : (0,
                            z.jsx)(CH, {
                                className: k9.footer,
                                children: (0,
                                z.jsx)(U9, {
                                    gameMode: e.id,
                                    onSelect: t,
                                    selected: !a && n,
                                    shortcut: !a && n ? "Confirm" : void 0
                                })
                            })
                        })
                    })
                }, e.id)
            })
        }
          , U9 = ({gameMode: e, onSelect: t, selected: n, shortcut: s})=>{
            const i = (0,
            Y.useCallback)((()=>{
                t(e)
            }
            ), [t, e]);
            return (0,
            z.jsx)(XK, {
                focusKey: e,
                onSelect: i,
                selected: n,
                shortcut: s,
                children: (0,
                z.jsx)(_c.Menu.SELECT_MODE_BUTTON, {})
            })
        }
        ;
        X.add("game-ui/menu/components/new-game-screen/game-mode-selection/game-mode-selection.tsx", {
            get GameModeSelection() {
                return D9
            },
            set GameModeSelection(e) {
                D9 = e
            }
        });
        let B9 = {
            field: "field_zMw",
            header: "header__eC",
            icon: "icon_Aag",
            label: "label_aUL",
            content: "content_KQe",
            "value-icon": "value-icon_BcL",
            valueIcon: "value-icon_BcL"
        };
        X.add("game-ui/common/property-field/themes/resource-field.module.scss", {
            get classes() {
                return B9
            },
            set classes(e) {
                Object.assign(B9, e)
            }
        });
        const G9 = B9;
        var V9 = Y.createContext(G9)
          , H9 = ({valueIcon: e, icon: t, tinted: n, label: s, theme: i, focusable: a=!1, className: o, children: r})=>{
            const l = (0,
            Y.useContext)(V9)
              , c = i ?? l;
            return (0,
            z.jsx)(xd, {
                children: (0,
                z.jsxs)(Sp, {
                    focusKey: a ? yg : Sg,
                    className: Zu()(c.field, o),
                    children: [(t || s) && (0,
                    z.jsxs)("div", {
                        className: c.header,
                        children: [t && (n ? (0,
                        z.jsx)(Z_, {
                            src: t,
                            className: c.icon
                        }) : (0,
                        z.jsx)("img", {
                            src: t,
                            className: c.icon
                        })), s && (0,
                        z.jsx)("div", {
                            className: c.label,
                            children: s
                        })]
                    }), (0,
                    z.jsxs)("div", {
                        className: c.content,
                        children: [e && (0,
                        z.jsx)("img", {
                            src: e,
                            className: c.valueIcon
                        }), r]
                    })]
                })
            })
        }
        ;
        X.add("game-ui/common/property-field/property-field.tsx", {
            get PropertyFieldThemeContext() {
                return V9
            },
            set PropertyFieldThemeContext(e) {
                V9 = e
            },
            get PropertyField() {
                return H9
            },
            set PropertyField(e) {
                H9 = e
            }
        });
        let K9 = {
            field: "field_xlu",
            header: "header_iiq",
            icon: "icon_lom",
            label: "label_BcU",
            content: "content_q4e"
        };
        X.add("game-ui/menu/components/new-game-screen/map-detail/resource-list-item.module.scss", {
            get classes() {
                return K9
            },
            set classes(e) {
                Object.assign(K9, e)
            }
        });
        const W9 = K9;
        var z9 = ({selectedMap: e, selectedTheme: t, activeStep: n, className: s, onContinue: i, onStartGameSelect: a})=>{
            const o = Dm()
              , r = sl(Mv);
            return (0,
            z.jsx)($K, {
                className: s,
                title: null != e ? (0,
                z.jsx)(_c.Maps.MAP_TITLE, {
                    hash: e.displayName,
                    fallback: e.displayName
                }) : void 0,
                preview: e?.preview,
                content: null != e ? (0,
                z.jsxs)(z.Fragment, {
                    children: [(0,
                    z.jsx)("div", {
                        className: YK.description,
                        children: (0,
                        z.jsx)(_c.Maps.MAP_DESCRIPTION, {
                            hash: e.displayName,
                            fallback: ""
                        })
                    }), null != t && (0,
                    z.jsxs)(qK, {
                        label: (0,
                        z.jsx)(_c.GameListScreen.THEME_LABEL, {}),
                        children: [(0,
                        z.jsx)(LH, {
                            src: t.icon,
                            className: YK.themeIcon
                        }), (0,
                        z.jsx)(_c.Assets.THEME, {
                            hash: t.id
                        })]
                    }), (0,
                    z.jsxs)(qK, {
                        label: (0,
                        z.jsx)(_c.GameListScreen.CLIMATE_LABEL, {}),
                        children: [(0,
                        z.jsx)("img", {
                            src: Y9(e.cloudiness, e.precipitation),
                            className: YK.humidityIcon
                        }), (0,
                        z.jsx)(ou, {
                            ...e.temperatureRange,
                            unit: vc.Temperature
                        })]
                    }), (0,
                    z.jsx)(qK, {
                        label: (0,
                        z.jsx)(_c.GameListScreen.LATITUDE_LABEL, {}),
                        children: $9(e.latitude)
                    }), (0,
                    z.jsx)(qK, {
                        label: (0,
                        z.jsx)(_c.GameListScreen.BUILDABLE_AREA_LABEL, {}),
                        children: (0,
                        z.jsx)(Oc, {
                            value: Math.round(e.area > 0 ? e.buildableLand / e.area * 100 : 0),
                            unit: vc.Percentage
                        })
                    }), (0,
                    z.jsxs)(qK, {
                        label: (0,
                        z.jsx)(_c.GameListScreen.CONNECTIONS_LABEL, {}),
                        children: [e.connections.road && (0,
                        z.jsx)(Eg, {
                            tooltip: (0,
                            z.jsx)(_c.Maps.OUTSIDE_CONNECTIONS, {
                                hash: "Road"
                            }),
                            children: (0,
                            z.jsx)(H9, {
                                icon: "Media/Game/Icons/Roads.svg",
                                theme: W9
                            })
                        }), e.connections.train && (0,
                        z.jsx)(Eg, {
                            tooltip: (0,
                            z.jsx)(_c.Maps.OUTSIDE_CONNECTIONS, {
                                hash: "Train"
                            }),
                            children: (0,
                            z.jsx)(H9, {
                                icon: "Media/Game/Icons/Train.svg",
                                theme: W9
                            })
                        }), e.connections.ship && (0,
                        z.jsx)(Eg, {
                            tooltip: (0,
                            z.jsx)(_c.Maps.OUTSIDE_CONNECTIONS, {
                                hash: "Ship"
                            }),
                            children: (0,
                            z.jsx)(H9, {
                                icon: "Media/Game/Icons/Ship.svg",
                                theme: W9
                            })
                        }), e.connections.air && (0,
                        z.jsx)(Eg, {
                            tooltip: (0,
                            z.jsx)(_c.Maps.OUTSIDE_CONNECTIONS, {
                                hash: "Air"
                            }),
                            children: (0,
                            z.jsx)(H9, {
                                icon: "Media/Game/Icons/Airplane.svg",
                                theme: W9
                            })
                        }), e.connections.electricity && (0,
                        z.jsx)(Eg, {
                            tooltip: (0,
                            z.jsx)(_c.Maps.OUTSIDE_CONNECTIONS, {
                                hash: "Electricity"
                            }),
                            children: (0,
                            z.jsx)(H9, {
                                icon: "Media/Game/Icons/Electricity.svg",
                                theme: W9
                            })
                        }), e.connections.water && (0,
                        z.jsx)(Eg, {
                            tooltip: (0,
                            z.jsx)(_c.Maps.OUTSIDE_CONNECTIONS, {
                                hash: "Water"
                            }),
                            children: (0,
                            z.jsx)(H9, {
                                icon: "Media/Game/Icons/Water.svg",
                                theme: W9
                            })
                        })]
                    }), (0,
                    z.jsxs)(qK, {
                        label: (0,
                        z.jsx)(_c.GameListScreen.RESOURCES_LABEL, {}),
                        children: [e.resources.fertile >= .1 && (0,
                        z.jsx)(Eg, {
                            tooltip: (0,
                            z.jsx)(_c.Maps.RESOURCE, {
                                hash: "Fertility"
                            }),
                            children: (0,
                            z.jsx)(H9, {
                                icon: "Media/Game/Icons/Fertility.svg",
                                theme: W9,
                                children: (0,
                                z.jsx)(Oc, {
                                    value: e.resources.fertile,
                                    unit: vc.Area
                                })
                            })
                        }), e.resources.forest >= .1 && (0,
                        z.jsx)(Eg, {
                            tooltip: (0,
                            z.jsx)(_c.Maps.RESOURCE, {
                                hash: "Forest"
                            }),
                            children: (0,
                            z.jsx)(H9, {
                                icon: "Media/Game/Icons/Forest.svg",
                                theme: W9,
                                children: (0,
                                z.jsx)(Oc, {
                                    value: e.resources.forest,
                                    unit: vc.Weight
                                })
                            })
                        }), e.resources.ore >= .1 && (0,
                        z.jsx)(Eg, {
                            tooltip: (0,
                            z.jsx)(_c.Maps.RESOURCE, {
                                hash: "Ore"
                            }),
                            children: (0,
                            z.jsx)(H9, {
                                icon: "Media/Game/Icons/Ore.svg",
                                theme: W9,
                                children: (0,
                                z.jsx)(Oc, {
                                    value: e.resources.ore,
                                    unit: vc.Weight
                                })
                            })
                        }), e.resources.oil >= .1 && (0,
                        z.jsx)(Eg, {
                            tooltip: (0,
                            z.jsx)(_c.Maps.RESOURCE, {
                                hash: "Oil"
                            }),
                            children: (0,
                            z.jsx)(H9, {
                                icon: "Media/Game/Icons/Oil.svg",
                                theme: W9,
                                children: (0,
                                z.jsx)(Oc, {
                                    value: e.resources.oil,
                                    unit: vc.Weight
                                })
                            })
                        }), e.resources.fish >= .1 && (0,
                        z.jsx)(Eg, {
                            tooltip: (0,
                            z.jsx)(_c.Maps.RESOURCE, {
                                hash: "Fish"
                            }),
                            children: (0,
                            z.jsx)(H9, {
                                icon: "Media/Game/Resources/Fish.svg",
                                theme: W9,
                                children: (0,
                                z.jsx)(Oc, {
                                    value: e.resources.fish,
                                    unit: vc.Weight
                                })
                            })
                        })]
                    }), null !== e.contentPrerequisites && (0,
                    z.jsx)(qK, {
                        label: (0,
                        z.jsx)(_c.Content.PREREQUISITE, {}),
                        children: (0,
                        z.jsx)("div", {
                            className: YK.icons,
                            children: e.contentPrerequisites.map(((e,t)=>(0,
                            z.jsx)(Eg, {
                                tooltip: (0,
                                z.jsx)(_c.Content.NAME, {
                                    hash: e,
                                    fallback: e
                                }),
                                children: (0,
                                z.jsx)(LH, {
                                    src: `Media/DLC/${e}.svg?fallback=Media/DLC/DLCFallback.svg`,
                                    className: YK.dlcIcon
                                })
                            }, t)))
                        })
                    })]
                }) : void 0,
                footer: null == e || o ? void 0 : n === s7.mapSelection ? (0,
                z.jsx)(XK, {
                    onSelect: i,
                    selected: !o,
                    shortcut: o ? void 0 : "Confirm",
                    children: (0,
                    z.jsx)(_c.Menu.SELECT_MAP_BUTTON, {})
                }) : (0,
                z.jsx)(XK, {
                    onSelect: a,
                    disabled: !r,
                    selected: !o,
                    shortcut: o ? void 0 : "Confirm",
                    children: (0,
                    z.jsx)(_c.Menu.START_GAME_BUTTON, {})
                })
            }, e?.id)
        }
        ;
        function Y9(e, t) {
            const n = .25 * e + .75 * t;
            return n < .1 ? "Media/Game/Icons/Arid.svg" : n < .15 ? "Media/Game/Icons/SemiArid.svg" : n < .2 ? "Media/Game/Icons/SemiHumid.svg" : "Media/Game/Icons/Humid.svg"
        }
        function $9(e) {
            return e > 15 ? (0,
            z.jsx)(_c.GameListScreen.HEMISPHERE_N, {}) : e < -15 ? (0,
            z.jsx)(_c.GameListScreen.HEMISPHERE_S, {}) : (0,
            z.jsx)(_c.GameListScreen.EQUATOR, {})
        }
        X.add("game-ui/menu/components/new-game-screen/map-detail/map-detail.tsx", {
            get MapDetail() {
                return z9
            },
            set MapDetail(e) {
                z9 = e
            }
        });
        let q9 = {
            item: "item_6bQ",
            locked: "locked_llh",
            thumbnail: "thumbnail_jir",
            "theme-icon": "theme-icon__ST",
            themeIcon: "theme-icon__ST",
            "thumbnail-container": "thumbnail-container_JcP",
            thumbnailContainer: "thumbnail-container_JcP",
            vignette: "vignette_Gss",
            title: "title_DFa",
            "state-icon": "state-icon_Owl",
            stateIcon: "state-icon_Owl",
            prerequisites: "prerequisites_zXb",
            prerequisite: "prerequisite_sTj",
            hint: "hint_TVt"
        };
        X.add("game-ui/menu/components/new-game-screen/map-grid/map-item.module.scss", {
            get classes() {
                return q9
            },
            set classes(e) {
                Object.assign(q9, e)
            }
        });
        const X9 = q9;
        var Q9 = ({map: e, locked: t, selected: n, onClick: s})=>{
            const i = (0,
            Y.useCallback)((()=>s(e.id)), [e.id, s])
              , a = RW(e.cloudTarget, !1) ?? ""
              , o = MW(e.cloudTarget)
              , [r,l] = (0,
            Y.useState)(!1);
            return (0,
            z.jsx)(Ah, {
                onFocusChange: l,
                children: (0,
                z.jsxs)(U_, {
                    disableHint: !0,
                    focusKey: e.id,
                    selected: n,
                    className: Zu()(X9.item, t && X9.locked),
                    onClick: i,
                    children: [(0,
                    z.jsxs)("div", {
                        className: X9.thumbnailContainer,
                        children: [(0,
                        z.jsx)(Y_, {
                            src: e.thumbnail,
                            className: X9.thumbnail
                        }), (0,
                        z.jsx)("div", {
                            className: X9.vignette
                        }), (0,
                        z.jsx)(UT, {
                            action: "Select",
                            active: r,
                            className: X9.hint
                        })]
                    }), (0,
                    z.jsx)("div", {
                        className: X9.title,
                        children: (0,
                        z.jsx)(_c.Maps.MAP_TITLE, {
                            hash: e.displayName,
                            fallback: e.displayName
                        })
                    }), (0,
                    z.jsx)(ZS, {
                        src: a,
                        className: X9.stateIcon,
                        tinted: o
                    }), null !== e.contentPrerequisites && (0,
                    z.jsx)("div", {
                        className: X9.prerequisites,
                        children: e.contentPrerequisites.map(((e,t)=>(0,
                        z.jsx)(Eg, {
                            tooltip: e,
                            children: (0,
                            z.jsx)(LH, {
                                src: `Media/DLC/${e}.svg?fallback=Media/DLC/DLCFallback.svg`,
                                className: X9.prerequisite
                            })
                        }, t)))
                    })]
                })
            })
        }
        ;
        X.add("game-ui/menu/components/new-game-screen/map-grid/map-item.tsx", {
            get MapItem() {
                return Q9
            },
            set MapItem(e) {
                Q9 = e
            }
        });
        let Z9 = {
            "map-grid": "map-grid_EhO",
            mapGrid: "map-grid_EhO",
            filters: "filters_sIw",
            scrollable: "scrollable_Wdh",
            content: "content_V7r",
            header: "header_pAC"
        };
        X.add("game-ui/menu/components/new-game-screen/map-grid/map-grid.module.scss", {
            get classes() {
                return Z9
            },
            set classes(e) {
                Object.assign(Z9, e)
            }
        });
        const J9 = Z9;
        var e7 = Y.forwardRef((function({focusKey: e, maps: t, filters: n, selectedMap: s, selectedFilter: i, className: a, onSelectMap: o, onSelectFilter: r}, l) {
            const c = (0,
            Y.useCallback)((e=>{
                "string" == typeof e && o(e)
            }
            ), [o]);
            return (0,
            z.jsxs)("div", {
                ref: l,
                className: Zu()(J9.mapGrid, a),
                children: [n.length >= 2 && (0,
                z.jsx)("div", {
                    className: J9.filters,
                    children: (0,
                    z.jsx)(CK, {
                        categories: n,
                        selectedCategory: i,
                        onSelectCategory: r,
                        className: J9.header
                    })
                }), (0,
                z.jsx)(mb, {
                    className: J9.scrollable,
                    children: (0,
                    z.jsx)("div", {
                        className: J9.content,
                        children: (0,
                        z.jsx)(Zg, {
                            focusKey: e,
                            focused: s,
                            onChange: c,
                            children: t.map((e=>(0,
                            z.jsx)(Q9, {
                                map: e,
                                locked: e.locked,
                                selected: e.id === s,
                                onClick: o
                            }, e.id)))
                        })
                    })
                })]
            })
        }
        ));
        X.add("game-ui/menu/components/new-game-screen/map-grid/map-grid.tsx", {
            get MapGrid() {
                return e7
            },
            set MapGrid(e) {
                e7 = e
            }
        });
        let t7 = {
            content: "content_bgM",
            page: "page_oZR",
            "step-container": "step-container_NnT",
            stepContainer: "step-container_NnT",
            step: "step_QIP",
            detail: "detail_OCx",
            header: "header_mQE",
            "no-gamepad": "no-gamepad_nYD",
            noGamepad: "no-gamepad_nYD",
            title: "title_KQ_",
            tabs: "tabs_BJl",
            tab: "tab_COL",
            selected: "selected_s7w"
        };
        X.add("game-ui/menu/components/new-game-screen/new-game-screen.module.scss", {
            get classes() {
                return t7
            },
            set classes(e) {
                Object.assign(t7, e)
            }
        });
        const n7 = t7;
        var s7, i7 = "Assets.CITY_NAME";
        !function(e) {
            e[e.modeSelection = 0] = "modeSelection",
            e[e.mapSelection = 1] = "mapSelection",
            e[e.mapOptions = 2] = "mapOptions"
        }(s7 || (s7 = {}));
        var a7 = Y.forwardRef((function({focusKey: e, className: t, onClose: n, requireConfirmation: s=!1}, i) {
            const [a,o] = (0,
            Y.useState)(s7.modeSelection)
              , [r,l] = (0,
            Y.useState)(WA.NormalMode)
              , {setBackdrop: c} = pq()
              , u = r7()
              , [d,m] = (0,
            Y.useState)(_w(u, "id"));
            (0,
            Y.useEffect)((()=>{
                null !== d && u.findIndex((e=>e.id === d)) < 0 && m(_w(u, "id"))
            }
            ), [u, d]);
            const h = u.find((e=>e.id === d)) ?? null
              , g = sl(hM)
              , p = sl(oM)
              , f = sc()
              , x = l7()
              , [v,_] = (0,
            Y.useState)("")
              , [b,T] = (0,
            Y.useState)("")
              , [E,I] = (0,
            Y.useState)({
                ...p
            })
              , S = g.find((e=>e.id === b)) ?? null
              , y = sl(tM)
              , j = sl(cI)
              , C = sl(pM)
              , N = sl(fM)
              , w = (0,
            Y.useContext)(xE)
              , O = sl(FM);
            (0,
            Y.useEffect)((()=>{
                null != h?.theme && T(h?.theme)
            }
            ), [h?.theme]),
            (0,
            Y.useEffect)((()=>{
                null != h?.displayName && (h.nameAsCityName ? _(_c.Maps.MAP_TITLE.renderString(f, {
                    hash: h.displayName
                }) ?? x()) : _(x()))
            }
            ), [x, f, h?.displayName, h?.nameAsCityName]);
            const P = (0,
            Y.useCallback)((()=>{
                if (a === s7.modeSelection)
                    return n();
                o((e=>e === s7.mapOptions ? s7.mapSelection : s7.modeSelection)),
                cp(lp.openMenu)
            }
            ), [a, n])
              , L = (0,
            Y.useCallback)((()=>{
                o((e=>e === s7.modeSelection ? s7.mapSelection : s7.mapOptions)),
                cp(lp.openMenu)
            }
            ), [])
              , A = (0,
            Y.useCallback)((e=>{
                l(e),
                L()
            }
            ), [L])
              , M = (0,
            Y.useCallback)((()=>{
                CM(h.id)
            }
            ), [h])
              , [R,k] = AM()
              , D = (0,
            Y.useCallback)(((e,t)=>{
                t ??= u.find((e=>e.id === d)),
                t && (LM(R),
                c(t.preview),
                EM({
                    mapId: t.id,
                    cityName: v,
                    theme: b,
                    options: E,
                    gameMode: r
                }))
            }
            ), [u, d, R, c, v, b, E, r])
              , F = (0,
            Y.useCallback)((async(e,t)=>{
                await UE(t.contentPrerequisites) ? D(e, t) : w.showDialog((0,
                z.jsx)(b$, {
                    metadata: t,
                    title: (0,
                    z.jsx)(_c.Common.WARNING, {}),
                    onConfirm: ()=>D(e, t)
                }))
            }
            ), [w, D])
              , U = (0,
            Y.useCallback)((e=>{
                const t = e ?? u.find((e=>e.id === d));
                if (t) {
                    if (s && !O)
                        return void w.showDialog((0,
                        z.jsx)(zI, {
                            zIndex: 100,
                            title: (0,
                            z.jsx)(_c.Common.WARNING, {}),
                            message: (0,
                            z.jsx)(_c.GameListScreen.CONFIRM_UNSAVED_MESSAGE, {}),
                            onConfirm: e=>F(e, t),
                            dismissible: !0
                        }));
                    F(!1, t)
                }
            }
            ), [u, d, s, O, F, w])
              , B = (0,
            Y.useMemo)((()=>({
                Select: a === s7.mapSelection ? ()=>{
                    cp(lp.selectItem),
                    L()
                }
                : null,
                "Start Game": a === s7.mapOptions ? ()=>{
                    cp(lp.selectItem),
                    U()
                }
                : null,
                "Switch Tab": a === s7.mapSelection && C.length >= 2 ? e=>{
                    const t = C.indexOf(N);
                    BM(t >= 0 ? C[(t + e + C.length) % C.length] : C[0])
                }
                : null
            })), [a, C, L, U, N]);
            return (0,
            z.jsx)(WK, {
                ref: i,
                focusKey: e,
                title: o7(a),
                className: t,
                onClose: P,
                children: (0,
                z.jsx)(Mg, {
                    actions: B,
                    children: (0,
                    z.jsx)(op, {
                        focused: a,
                        activation: qu.Always,
                        children: (0,
                        z.jsx)(ud, {
                            children: a === s7.modeSelection ? (0,
                            z.jsx)("div", {
                                className: n7.page,
                                children: (0,
                                z.jsx)(mh, {
                                    styles: F0,
                                    children: (0,
                                    z.jsx)(D9, {
                                        selectedMode: r,
                                        focusKey: s7.modeSelection,
                                        onSelect: A
                                    })
                                })
                            }, s7.modeSelection) : (0,
                            z.jsx)("div", {
                                className: n7.page,
                                children: (0,
                                z.jsx)(mh, {
                                    styles: F0,
                                    children: (0,
                                    z.jsxs)("div", {
                                        className: n7.content,
                                        children: [(0,
                                        z.jsx)("div", {
                                            className: n7.stepContainer,
                                            children: (0,
                                            z.jsx)(ud, {
                                                skipInitial: !0,
                                                children: (0,
                                                z.jsx)(mh, {
                                                    styles: y9,
                                                    children: a === s7.mapSelection ? (0,
                                                    z.jsx)(e7, {
                                                        focusKey: s7.mapSelection,
                                                        maps: u,
                                                        filters: C,
                                                        selectedMap: d,
                                                        selectedFilter: N,
                                                        className: n7.step,
                                                        onSelectMap: m,
                                                        onSelectFilter: BM
                                                    }) : (0,
                                                    z.jsx)(G7, {
                                                        focusKey: s7.mapOptions,
                                                        cityName: v,
                                                        theme: b,
                                                        gameMode: r,
                                                        options: E,
                                                        className: n7.step,
                                                        onCityNameChange: _,
                                                        onThemeChange: T,
                                                        onGameModeChange: l,
                                                        onOptionsChange: I,
                                                        tutorialState: R,
                                                        setTutorialState: k,
                                                        onShareGame: y || h?.isReadonly || !j ? void 0 : M,
                                                        shareGameLocaleKey: "shareMap"
                                                    })
                                                }, a)
                                            })
                                        }), (0,
                                        z.jsx)(z9, {
                                            selectedMap: h,
                                            selectedTheme: S,
                                            activeStep: a,
                                            className: n7.detail,
                                            onContinue: L,
                                            onStartGameSelect: U
                                        })]
                                    })
                                })
                            }, "conetnt")
                        })
                    })
                })
            })
        }
        ));
        function o7(e) {
            return e === s7.modeSelection ? (0,
            z.jsx)(_c.Menu.GAME_MODE, {}) : e === s7.mapSelection ? (0,
            z.jsx)(_c.Menu.SELECT_MAP, {}) : e === s7.mapOptions ? (0,
            z.jsx)(_c.Menu.MAP_OPTIONS, {}) : null
        }
        function r7() {
            const e = sc()
              , t = sl(gM)
              , n = _K();
            return (0,
            Y.useMemo)((()=>t.map((t=>({
                value: t,
                name: _c.Maps.MAP_TITLE.renderString(e, {
                    hash: t.displayName
                })
            }))).sort(((e,t)=>n(e.name, t.name))).map((e=>e.value))), [e, t, n])
        }
        function l7() {
            const e = sc()
              , t = ll(nu, i7);
            return (0,
            Y.useCallback)((n=>{
                if (0 === t)
                    return "";
                let s = Math.floor(Math.random() * t)
                  , i = _c.Assets.CITY_NAME.renderString(e, {
                    index: s
                });
                return i === n && (s = (s + 1) % t,
                i = _c.Assets.CITY_NAME.renderString(e, {
                    index: s
                })),
                i
            }
            ), [t, e])
        }
        X.add("game-ui/menu/components/new-game-screen/new-game-screen.tsx", {
            get cityNameLocId() {
                return i7
            },
            set cityNameLocId(e) {
                i7 = e
            },
            get NewGameStep() {
                return s7
            },
            set NewGameStep(e) {
                s7 = e
            },
            get NewGameScreen() {
                return a7
            },
            set NewGameScreen(e) {
                a7 = e
            },
            get useSortedMaps() {
                return r7
            },
            set useSortedMaps(e) {
                r7 = e
            },
            get useCityNameGenerator() {
                return l7
            },
            set useCityNameGenerator(e) {
                l7 = e
            }
        });
        let c7 = {
            wrapper: "wrapper_ER5",
            container: "container_AwD",
            input: "input_Hft",
            label: "label_lus"
        };
        X.add("game-ui/menu/themes/menu-input-field.module.scss", {
            get classes() {
                return c7
            },
            set classes(e) {
                Object.assign(c7, e)
            }
        });
        const u7 = c7;
        let d7 = {
            field: "field_amr field_cjf",
            label: "label_VSW label_T__"
        };
        X.add("game-ui/menu/components/shared/game-options/field/row-field.module.scss", {
            get classes() {
                return d7
            },
            set classes(e) {
                Object.assign(d7, e)
            }
        });
        const m7 = d7;
        var h7 = {
            ...F_,
            hover: null,
            focus: null
        }
          , g7 = ({id: e, label: t, theme: n=m7, disabled: s, className: i, children: a, onClick: o, sound: r=lp.selectToggle})=>{
            const l = (0,
            Y.useContext)(kZ)
              , c = (0,
            Y.useCallback)((()=>{
                e && l.onOptionMouseEnter(e),
                cp(lp.hoverItem)
            }
            ), [e, l])
              , u = (0,
            Y.useCallback)((()=>e && l.onOptionMouseLeave(e)), [e, l])
              , d = (0,
            Y.useCallback)((e=>{
                !s && o && o(e),
                cp(r)
            }
            ), [s, o, r]);
            return (0,
            z.jsxs)(Sp, {
                focusKey: s ? Sg : e,
                focusSound: lp.hoverItem,
                className: Zu()(n.field, s && "disabled", i),
                onMouseEnter: c,
                onMouseLeave: u,
                onClick: d,
                children: [(0,
                z.jsx)("div", {
                    className: n.label,
                    children: t ?? (null != e && (0,
                    z.jsx)(_c.Options.OPTION, {
                        hash: e
                    }))
                }), a]
            })
        }
        ;
        X.add("game-ui/menu/components/shared/game-options/field/field.tsx", {
            get optionButtonSounds() {
                return h7
            },
            set optionButtonSounds(e) {
                h7 = e
            },
            get OptionField() {
                return g7
            },
            set OptionField(e) {
                g7 = e
            }
        });
        let p7 = {
            field: "field_iTK field_cjf",
            label: "label_TLv label_T__"
        };
        X.add("game-ui/menu/components/shared/game-options/field/column-field.module.scss", {
            get classes() {
                return p7
            },
            set classes(e) {
                Object.assign(p7, e)
            }
        });
        const f7 = p7;
        let x7 = {
            "city-name-field": "city-name-field_H7e value-field_yJi",
            cityNameField: "city-name-field_H7e value-field_yJi",
            "dice-button": "dice-button_U3N secondary-button_Kvj",
            diceButton: "dice-button_U3N secondary-button_Kvj",
            "hint-right": "hint-right_k5k",
            hintRight: "hint-right_k5k",
            "hint-left": "hint-left_Bnq",
            hintLeft: "hint-left_Bnq",
            container: "container_cNd"
        };
        X.add("game-ui/menu/components/shared/game-options/city-name-field/city-name-field.module.scss", {
            get classes() {
                return x7
            },
            set classes(e) {
                Object.assign(x7, e)
            }
        });
        const v7 = x7
          , _7 = new Ig("INPUT_KEY")
          , b7 = new Ig("BUTTON_KEY");
        var T7 = ({id: e, label: t, value: n, disabled: s, onChange: i})=>{
            const [a,o] = (0,
            Y.useState)(n);
            (0,
            Y.useEffect)((()=>o(n)), [n]);
            const r = (0,
            Y.useCallback)((e=>{
                o(e.target.value),
                i(e.target.value)
            }
            ), [i])
              , l = l7()
              , c = (0,
            Y.useCallback)((()=>i(l(n))), [l, i, n])
              , [u,d] = (0,
            Y.useState)(!1)
              , [m,h] = (0,
            Y.useState)(!1)
              , [g,p] = (0,
            Y.useState)(null)
              , f = g === _7
              , x = g === b7
              , v = (0,
            Y.useCallback)((()=>{
                d(!0)
            }
            ), [])
              , _ = (0,
            Y.useCallback)((()=>{
                d(!1)
            }
            ), []);
            return (0,
            z.jsx)(Ah, {
                onFocusChange: h,
                children: (0,
                z.jsx)(g7, {
                    id: e,
                    label: t,
                    theme: f7,
                    disabled: s,
                    children: (0,
                    z.jsxs)("div", {
                        className: v7.container,
                        children: [(0,
                        z.jsx)(UT, {
                            action: u ? "Back" : "Select",
                            active: f && m,
                            className: v7.hintLeft
                        }), (0,
                        z.jsx)("div", {
                            className: v7.cityNameField,
                            children: (0,
                            z.jsxs)(np, {
                                direction: kg.Horizontal,
                                onChange: p,
                                initialFocused: _7,
                                children: [(0,
                                z.jsx)(HH, {
                                    focusKey: _7,
                                    disableHint: !0,
                                    value: a,
                                    vkTitle: (0,
                                    z.jsx)(_c.VirtualKeyboard.TITLE, {
                                        hash: "CityName"
                                    }),
                                    theme: u7,
                                    onChange: r,
                                    onFocus: v,
                                    onBlur: _,
                                    maxLength: 85
                                }), (0,
                                z.jsx)(Eg, {
                                    tooltip: (0,
                                    z.jsx)(_c.Menu.RANDOM_CITY_NAME_BUTTON_TOOLTIP, {}),
                                    children: (0,
                                    z.jsx)(tb, {
                                        disableHint: !0,
                                        focusKey: b7,
                                        tinted: !0,
                                        src: "Media/Glyphs/Dice.svg",
                                        sounds: h7,
                                        selectSound: lp.generateRandomName,
                                        className: v7.diceButton,
                                        onSelect: c
                                    })
                                })]
                            })
                        }), (0,
                        z.jsx)(UT, {
                            action: "Select",
                            active: !u && x && m,
                            className: v7.hintLeft
                        })]
                    })
                })
            })
        }
        ;
        X.add("game-ui/menu/components/shared/game-options/city-name-field/city-name-field.tsx", {
            get CityNameField() {
                return T7
            },
            set CityNameField(e) {
                T7 = e
            }
        });
        let E7 = {
            "game-mode-item": "game-mode-item_O4L",
            gameModeItem: "game-mode-item_O4L",
            "game-mode-name": "game-mode-name_eGA",
            gameModeName: "game-mode-name_eGA",
            hint: "hint_crv",
            "dropdown-item-hint": "dropdown-item-hint_AcF",
            dropdownItemHint: "dropdown-item-hint_AcF"
        };
        X.add("game-ui/menu/components/shared/game-options/game-mode-field/game-mode-field.module.scss", {
            get classes() {
                return E7
            },
            set classes(e) {
                Object.assign(E7, e)
            }
        });
        const I7 = E7;
        var S7 = ({id: e, value: t, disabled: n, onChange: s})=>{
            const i = sl(dM)
              , a = i.find((e=>e.id === t))
              , [o,r] = (0,
            Y.useState)(!1)
              , [l,c] = (0,
            Y.useState)(a?.id ?? null)
              , [u,d] = (0,
            Y.useState)(!1);
            return (0,
            z.jsx)(Ah, {
                onFocusChange: r,
                children: (0,
                z.jsx)(g7, {
                    id: e,
                    label: (0,
                    z.jsx)(_c.Menu.GAME_MODE, {}),
                    theme: f7,
                    disabled: n,
                    className: I7.gameModeField,
                    children: (0,
                    z.jsx)(fS, {
                        focusKey: n ? Sg : yg,
                        initialFocused: t,
                        theme: EJ,
                        content: (0,
                        z.jsx)(np, {
                            initialFocused: a?.id || null,
                            onChange: c,
                            allowLooping: !0,
                            children: i.map((e=>(0,
                            z.jsxs)(bS, {
                                focusKey: e.id,
                                value: e.id,
                                className: I7.gameModeItem,
                                onChange: s,
                                children: [(0,
                                z.jsx)(UT, {
                                    action: "Select",
                                    active: o && l === e.id,
                                    className: Zu()(I7.hint, I7.dropdownItemHint)
                                }), (0,
                                z.jsx)("div", {
                                    className: I7.gameModeName,
                                    children: (0,
                                    z.jsx)(_c.Menu.GAME_MODE_NAME, {
                                        hash: e.id
                                    })
                                })]
                            }, e.id)))
                        }),
                        onToggle: d,
                        children: (0,
                        z.jsx)(xS, {
                            disabled: n,
                            sounds: h7,
                            openIconComponent: (0,
                            z.jsx)(UT, {
                                action: "Select",
                                active: !u && o,
                                className: I7.hint
                            }),
                            closeIconComponent: (0,
                            z.jsx)(UT, {
                                action: "Back",
                                active: u && o,
                                className: I7.hint
                            }),
                            children: (0,
                            z.jsx)("div", {
                                className: I7.gameModeItem,
                                children: (0,
                                z.jsx)("div", {
                                    className: I7.gameModeName,
                                    children: (0,
                                    z.jsx)(_c.Menu.GAME_MODE_NAME, {
                                        hash: a?.id || WA.NormalMode
                                    })
                                })
                            })
                        })
                    })
                })
            })
        }
        ;
        X.add("game-ui/menu/components/shared/game-options/game-mode-field/game-mode-field.tsx", {
            get GameModeField() {
                return S7
            },
            set GameModeField(e) {
                S7 = e
            }
        });
        let y7 = {
            "theme-item": "theme-item_qct",
            themeItem: "theme-item_qct",
            "theme-icon": "theme-icon_jJ9",
            themeIcon: "theme-icon_jJ9",
            "theme-name": "theme-name_hYf",
            themeName: "theme-name_hYf",
            hint: "hint_Gtz",
            "dropdown-item-hint": "dropdown-item-hint_ia7",
            dropdownItemHint: "dropdown-item-hint_ia7"
        };
        X.add("game-ui/menu/components/shared/game-options/theme-field/theme-field.module.scss", {
            get classes() {
                return y7
            },
            set classes(e) {
                Object.assign(y7, e)
            }
        });
        const j7 = y7;
        var C7 = ({id: e, label: t, value: n, disabled: s, onChange: i})=>{
            const a = sl(hM)
              , o = a.find((e=>e.id === n))
              , [r,l] = (0,
            Y.useState)(!1)
              , [c,u] = (0,
            Y.useState)(o?.id ?? null)
              , [d,m] = (0,
            Y.useState)(!1);
            return (0,
            z.jsx)(Ah, {
                onFocusChange: l,
                children: (0,
                z.jsx)(g7, {
                    id: e,
                    label: t,
                    theme: f7,
                    disabled: s,
                    className: j7.themeField,
                    children: (0,
                    z.jsx)(fS, {
                        focusKey: s ? Sg : yg,
                        initialFocused: n,
                        theme: EJ,
                        content: (0,
                        z.jsx)(np, {
                            initialFocused: o?.id || null,
                            onChange: u,
                            allowLooping: !0,
                            children: a.map((e=>(0,
                            z.jsxs)(bS, {
                                focusKey: e.id,
                                value: e.id,
                                className: j7.themeItem,
                                onChange: i,
                                children: [(0,
                                z.jsx)(UT, {
                                    action: "Select",
                                    active: r && c === e.id,
                                    className: Zu()(j7.hint, j7.dropdownItemHint)
                                }), (0,
                                z.jsx)(LH, {
                                    src: e.icon,
                                    className: j7.themeIcon
                                }), (0,
                                z.jsx)("div", {
                                    className: j7.themeName,
                                    children: (0,
                                    z.jsx)(_c.Assets.THEME, {
                                        hash: e.id
                                    })
                                })]
                            }, e.id)))
                        }),
                        onToggle: m,
                        children: (0,
                        z.jsx)(xS, {
                            disabled: s,
                            sounds: h7,
                            openIconComponent: (0,
                            z.jsx)(UT, {
                                action: "Select",
                                active: !d && r,
                                className: j7.hint
                            }),
                            closeIconComponent: (0,
                            z.jsx)(UT, {
                                action: "Back",
                                active: d && r,
                                className: j7.hint
                            }),
                            children: (0,
                            z.jsxs)("div", {
                                className: j7.themeItem,
                                children: [(0,
                                z.jsx)(LH, {
                                    src: o?.icon ?? "Media/Placeholder.svg",
                                    className: j7.themeIcon
                                }), (0,
                                z.jsx)("div", {
                                    className: j7.themeName,
                                    children: (0,
                                    z.jsx)(_c.Assets.THEME, {
                                        hash: n
                                    })
                                })]
                            })
                        })
                    })
                })
            })
        }
        ;
        function N7({component: e, value: t, groupValue: n, onChange: s, onToggleSelected: i, ...a}) {
            const o = (0,
            Y.useCallback)((e=>{
                e ? s && s(t) : i && i(t)
            }
            ), [t, s, i]);
            return Y.createElement(e, {
                ...a,
                checked: t === n,
                onChange: o
            })
        }
        X.add("game-ui/menu/components/shared/game-options/theme-field/theme-field.tsx", {
            get ThemeField() {
                return C7
            },
            set ThemeField(e) {
                C7 = e
            }
        }),
        X.add("game-ui/common/input/toggle/group-toggle.tsx", {
            get GroupToggle() {
                return N7
            },
            set GroupToggle(e) {
                N7 = e
            }
        });
        let w7 = {
            toggle: "toggle_H7r item-mouse-states_Fmi",
            bullet: "bullet_rDK"
        };
        X.add("game-ui/common/input/toggle/radio-toggle/radio-toggle.module.scss", {
            get classes() {
                return w7
            },
            set classes(e) {
                Object.assign(w7, e)
            }
        });
        const O7 = w7;
        var P7 = ({checked: e, disabled: t, theme: n, style: s, className: i, ...a})=>{
            const o = (0,
            Y.useMemo)((()=>({
                ...O7,
                ...n
            })), [n]);
            return (0,
            z.jsx)(Bb, {
                ...a,
                checked: e,
                disabled: t,
                style: s,
                className: Zu()(o.toggle, i),
                children: (0,
                z.jsx)("div", {
                    className: Zu()(o.bullet, e && "checked", t && "disabled")
                })
            })
        }
        ;
        X.add("game-ui/common/input/toggle/radio-toggle/radio-toggle.tsx", {
            get RadioToggle() {
                return P7
            },
            set RadioToggle(e) {
                P7 = e
            }
        });
        let L7 = {
            toggle: "toggle_ATa",
            "radio-toggle": "radio-toggle_TY5 toggle_H7r item-mouse-states_Fmi",
            radioToggle: "radio-toggle_TY5 toggle_H7r item-mouse-states_Fmi",
            bullet: "bullet_DoE bullet_rDK"
        };
        X.add("game-ui/menu/components/shared/game-options/toggle-field/toggle-field.module.scss", {
            get classes() {
                return L7
            },
            set classes(e) {
                Object.assign(L7, e)
            }
        });
        const A7 = L7;
        var M7 = ({value: e, disabled: t, onChange: n, ...s})=>{
            const [i,a] = (0,
            Y.useState)(!1)
              , o = (0,
            Y.useCallback)((()=>{
                n(!e)
            }
            ), [n, e]);
            return (0,
            z.jsx)(Ah, {
                onFocusChange: a,
                children: (0,
                z.jsxs)(g7, {
                    ...s,
                    onClick: o,
                    disabled: t,
                    children: [(0,
                    z.jsx)(UT, {
                        action: "Select",
                        active: i
                    }), (0,
                    z.jsx)(Hb, {
                        checked: e,
                        className: A7.toggle,
                        onChange: n,
                        disabled: t
                    })]
                })
            })
        }
        ;
        function R7({value: e, groupValue: t, disabled: n, onChange: s, onToggleSelected: i, ...a}) {
            const [o,r] = (0,
            Y.useState)(!1)
              , l = (0,
            Y.useCallback)((()=>{
                s(e)
            }
            ), [s, e]);
            return (0,
            z.jsx)(Ah, {
                onFocusChange: r,
                children: (0,
                z.jsxs)(g7, {
                    ...a,
                    onClick: l,
                    disabled: n,
                    children: [(0,
                    z.jsx)(UT, {
                        action: "Select",
                        active: o && e !== t
                    }), (0,
                    z.jsx)(N7, {
                        theme: {
                            toggle: A7.radioToggle,
                            bullet: A7.bullet
                        },
                        component: P7,
                        onChange: s,
                        onToggleSelected: i,
                        value: e,
                        groupValue: t,
                        disabled: n,
                        className: A7.radioToggle
                    })]
                })
            })
        }
        X.add("game-ui/menu/components/shared/game-options/toggle-field/toggle-field.tsx", {
            get ToggleField() {
                return M7
            },
            set ToggleField(e) {
                M7 = e
            },
            get RadioGroupToggleField() {
                return R7
            },
            set RadioGroupToggleField(e) {
                R7 = e
            }
        });
        let k7 = {
            "game-options": "game-options_iDr child-opacity-transition_nkS",
            gameOptions: "game-options_iDr child-opacity-transition_nkS",
            "main-row": "main-row_a1n",
            mainRow: "main-row_a1n",
            "options-column": "options-column_l0j",
            optionsColumn: "options-column_l0j",
            "city-name-field": "city-name-field_L2K",
            cityNameField: "city-name-field_L2K",
            "city-name-input": "city-name-input_aS0",
            cityNameInput: "city-name-input_aS0",
            "dice-button": "dice-button_W27 item-mouse-states_Fmi",
            diceButton: "dice-button_W27 item-mouse-states_Fmi",
            "theme-item": "theme-item_W3X",
            themeItem: "theme-item_W3X",
            "theme-icon": "theme-icon_h7K",
            themeIcon: "theme-icon_h7K",
            "theme-name": "theme-name_gDK",
            themeName: "theme-name_gDK",
            "toggle-item": "toggle-item_uwk",
            toggleItem: "toggle-item_uwk",
            "info-column": "info-column_IaC",
            infoColumn: "info-column_IaC",
            "info-title": "info-title_oAQ",
            infoTitle: "info-title_oAQ",
            "tutorial-options-title": "tutorial-options-title_qO8 info-title_oAQ",
            tutorialOptionsTitle: "tutorial-options-title_qO8 info-title_oAQ",
            "info-description": "info-description_NL4",
            infoDescription: "info-description_NL4"
        };
        X.add("game-ui/menu/components/shared/game-options/game-options.module.scss", {
            get classes() {
                return k7
            },
            set classes(e) {
                Object.assign(k7, e)
            }
        });
        const D7 = k7
          , F7 = "cityName"
          , U7 = "theme"
          , B7 = "GameMode";
        var G7 = Y.forwardRef((function({focusKey: e, cityName: t, theme: n, gameMode: s, options: i, tutorialState: a, disabledOptions: o=[], className: r, onCityNameChange: l, onThemeChange: c, onGameModeChange: u, onOptionsChange: d, onDeleteGame: m, onShareGame: h, setTutorialState: g, shareGameLocaleKey: p, pastModsEnabled: f}, x) {
            const [v,_] = (0,
            Y.useState)(!1)
              , b = Dm()
              , T = sl(ZA)
              , E = sl(JA)
              , I = (0,
            Y.useCallback)(((e,t)=>{
                d && d({
                    ...i,
                    [e]: t
                })
            }
            ), [i, d])
              , [S,y] = (0,
            Y.useState)(F7)
              , j = (0,
            Y.useCallback)((e=>{
                "string" == typeof e && y(e)
            }
            ), [])
              , [C,N] = (0,
            Y.useState)(null)
              , w = (0,
            Y.useMemo)((()=>({
                onOptionMouseEnter: e=>N(e),
                onOptionMouseLeave: e=>N((t=>t === e ? null : t)),
                onFocusSet: ()=>{}
                ,
                onFocusReset: ()=>{}
            })), [])
              , O = v && b ? S : C
              , P = sl(XA)
              , L = p ?? "shareSave"
              , A = (0,
            Y.useCallback)((e=>{
                "deleteSave" === e && m(),
                e === L && h()
            }
            ), [m, h, L]);
            return (0,
            z.jsx)(Ah, {
                onFocusChange: _,
                children: (0,
                z.jsxs)("div", {
                    ref: x,
                    className: Zu()(D7.gameOptions, r),
                    children: [(0,
                    z.jsxs)("div", {
                        className: D7.mainRow,
                        children: [(0,
                        z.jsx)("div", {
                            className: D7.optionsColumn,
                            children: (0,
                            z.jsx)(kZ.Provider, {
                                value: w,
                                children: (0,
                                z.jsx)(mb, {
                                    children: (0,
                                    z.jsxs)(Zg, {
                                        focusKey: e,
                                        focused: S,
                                        onChange: j,
                                        direction: kg.Both,
                                        allowLooping: !0,
                                        children: [(0,
                                        z.jsx)(T7, {
                                            id: F7,
                                            label: (0,
                                            z.jsx)(_c.GameListScreen.GAME_OPTION, {
                                                hash: F7
                                            }),
                                            value: t,
                                            disabled: o.includes(F7),
                                            onChange: l
                                        }), (0,
                                        z.jsx)(C7, {
                                            id: U7,
                                            label: (0,
                                            z.jsx)(_c.GameListScreen.GAME_OPTION, {
                                                hash: U7
                                            }),
                                            value: n,
                                            disabled: o.includes(U7),
                                            onChange: c
                                        }), !o.includes(B7) && (0,
                                        z.jsx)(S7, {
                                            id: B7,
                                            value: s,
                                            onChange: u,
                                            disabled: o.includes(B7)
                                        }), (0,
                                        z.jsx)(eJ, {}), Object.entries(i).filter((([e,t])=>"__Type" !== e)).map((([e,t])=>(0,
                                        z.jsx)(V7, {
                                            id: e,
                                            value: t,
                                            disabled: o.includes(e),
                                            onChange: I
                                        }, e))), (0,
                                        z.jsx)(eJ, {}), (0,
                                        z.jsx)("div", {
                                            className: Zu()(D7.infoTitle, D7.tutorialOptionsTitle),
                                            children: (0,
                                            z.jsx)(_c.GameListScreen.TUTORIAL_OPTIONS, {})
                                        }), (0,
                                        z.jsx)(R7, {
                                            id: P ? "continueTutorials" : "beginTutorials",
                                            label: (0,
                                            z.jsx)(_c.GameListScreen.GAME_OPTION, {
                                                hash: P ? "continueTutorials" : "beginTutorials"
                                            }),
                                            value: YA.Continue,
                                            groupValue: a,
                                            className: D7.toggleItem,
                                            onChange: g
                                        }), P && (0,
                                        z.jsx)(R7, {
                                            id: "restartTutorials",
                                            label: (0,
                                            z.jsx)(_c.GameListScreen.GAME_OPTION, {
                                                hash: "restartTutorials"
                                            }),
                                            value: YA.Reset,
                                            groupValue: a,
                                            className: D7.toggleItem,
                                            onChange: g
                                        }), (0,
                                        z.jsx)(R7, {
                                            id: "disableTutorials",
                                            label: (0,
                                            z.jsx)(_c.GameListScreen.GAME_OPTION, {
                                                hash: "disableTutorials"
                                            }),
                                            value: YA.Disable,
                                            groupValue: a,
                                            className: D7.toggleItem,
                                            onChange: g
                                        }), (null != m || null != h) && (0,
                                        z.jsxs)(z.Fragment, {
                                            children: [(0,
                                            z.jsx)(eJ, {}), (0,
                                            z.jsx)(A9, {
                                                buttons: [null != m ? {
                                                    id: "deleteSave",
                                                    disabled: !1,
                                                    confirm: !0
                                                } : null, null != h ? {
                                                    id: L,
                                                    disabled: !E,
                                                    confirm: !1
                                                } : null].filter(jw),
                                                onSelect: A
                                            })]
                                        })]
                                    })
                                })
                            })
                        }), (0,
                        z.jsx)("div", {
                            className: D7.infoColumn,
                            children: null != O && (0,
                            z.jsxs)(z.Fragment, {
                                children: [(0,
                                z.jsx)("div", {
                                    className: D7.infoTitle,
                                    children: (0,
                                    z.jsx)(_c.GameListScreen.GAME_OPTION, {
                                        hash: O
                                    })
                                }), (0,
                                z.jsx)("div", {
                                    className: D7.infoDescription,
                                    children: (0,
                                    z.jsx)(_c.GameListScreen.GAME_OPTION_DESCRIPTION, {
                                        hash: O
                                    })
                                })]
                            })
                        })]
                    }), (0,
                    z.jsx)(N9, {
                        modsEnabled: T,
                        pastModsEnabled: void 0 !== f && f.length > 0,
                        unlockAll: i.unlockAll,
                        unlimitedMoney: i.unlimitedMoney,
                        unlockMapTiles: i.unlockMapTiles
                    })]
                })
            })
        }
        ))
          , V7 = ({id: e, value: t, disabled: n, onChange: s})=>{
            const i = (0,
            Y.useCallback)((t=>s(e, t)), [e, s]);
            return (0,
            z.jsx)(M7, {
                id: e,
                value: t,
                label: (0,
                z.jsx)(_c.GameListScreen.GAME_OPTION, {
                    hash: e
                }),
                disabled: n,
                className: D7.toggleItem,
                onChange: i
            })
        }
        ;
        X.add("game-ui/menu/components/shared/game-options/game-options.tsx", {
            get GameOptions() {
                return G7
            },
            set GameOptions(e) {
                G7 = e
            },
            get ToggleItem() {
                return V7
            },
            set ToggleItem(e) {
                V7 = e
            }
        });
        var H7 = ({save: e, activeStep: t, className: n, onOptionsToggle: s, onLoadGameSelect: i, selectedButton: a})=>{
            const o = sl(Mv)
              , r = Dm()
              , l = sc()
              , c = null != e && e.locked
              , u = sl(hM).find((t=>t.id === e?.theme)) ?? null
              , d = sl(ZA);
            return (0,
            z.jsx)($K, {
                className: n,
                title: null != e ? oV(LW(e, l), 28) : void 0,
                preview: e?.preview,
                content: null != e ? (0,
                z.jsxs)(z.Fragment, {
                    children: [(0,
                    z.jsx)("div", {
                        className: YK.achievementWarningBannerContainer,
                        children: (0,
                        z.jsx)(w9, {
                            modsEnabled: d,
                            pastModsEnabled: e.modsEnabled.length > 0,
                            unlockAll: e.options?.unlockAll,
                            unlimitedMoney: e.options?.unlimitedMoney,
                            unlockMapTiles: e.options?.unlockMapTiles,
                            loadGame: !0,
                            className: YK.achievementWarningBanner
                        })
                    }), (0,
                    z.jsx)(qK, {
                        label: (0,
                        z.jsx)(_c.Menu.CITY_NAME_LABEL, {}),
                        ellipsis: !0,
                        children: e.cityName
                    }), (0,
                    z.jsx)(qK, {
                        label: (0,
                        z.jsx)(_c.Menu.GAME_MODE, {}),
                        children: (0,
                        z.jsx)(_c.Menu.GAME_MODE_NAME, {
                            hash: e.gameMode || WA.NormalMode
                        })
                    }), (0,
                    z.jsx)(qK, {
                        label: (0,
                        z.jsx)(_c.GameListScreen.POPULATION_LABEL, {}),
                        children: (0,
                        z.jsx)(Oc, {
                            value: e.population,
                            unit: vc.Integer
                        })
                    }), (0,
                    z.jsx)(qK, {
                        label: (0,
                        z.jsx)(_c.Menu.SIMULATION_DATE_LABEL, {}),
                        children: (0,
                        z.jsx)(Lu, {
                            value: e.simulationDate
                        })
                    }), (0,
                    z.jsx)(qK, {
                        label: (0,
                        z.jsx)(_c.GameListScreen.MONEY_LABEL, {}),
                        children: e.options?.unlimitedMoney ? (0,
                        z.jsx)(_c.Menu.UNLIMITED_MONEY_LABEL, {}) : (0,
                        z.jsx)(Oc, {
                            value: e.money,
                            unit: vc.Money
                        })
                    }), (0,
                    z.jsx)(qK, {
                        label: (0,
                        z.jsx)(_c.GameListScreen.XP_LABEL, {}),
                        children: (0,
                        z.jsx)(Oc, {
                            value: e.xp,
                            unit: vc.Integer
                        })
                    }), null != e.mapName && (0,
                    z.jsx)(qK, {
                        label: (0,
                        z.jsx)(_c.GameListScreen.MAP_LABEL, {}),
                        children: (0,
                        z.jsx)(_c.Maps.MAP_TITLE, {
                            hash: e.mapName,
                            fallback: e.mapName
                        })
                    }), null != u && (0,
                    z.jsxs)(qK, {
                        label: (0,
                        z.jsx)(_c.GameListScreen.THEME_LABEL, {}),
                        children: [(0,
                        z.jsx)(LH, {
                            src: u.icon,
                            className: YK.themeIcon
                        }), (0,
                        z.jsx)(_c.Assets.THEME, {
                            hash: u.id
                        })]
                    }), null !== e.contentPrerequisites && (0,
                    z.jsx)(qK, {
                        label: (0,
                        z.jsx)(_c.Content.PREREQUISITE, {}),
                        children: (0,
                        z.jsx)("div", {
                            className: YK.icons,
                            children: e.contentPrerequisites.map(((e,t)=>(0,
                            z.jsx)(Eg, {
                                tooltip: (0,
                                z.jsx)(_c.Content.NAME, {
                                    hash: e,
                                    fallback: e
                                }),
                                children: (0,
                                z.jsx)(LH, {
                                    src: `Media/DLC/${e}.svg?fallback=Media/DLC/DLCFallback.svg`,
                                    className: YK.dlcIcon
                                })
                            }, t)))
                        })
                    })]
                }) : void 0,
                footer: null == e || r ? void 0 : (0,
                z.jsxs)(z.Fragment, {
                    children: [(0,
                    z.jsx)(XK, {
                        disabled: c || !o,
                        onSelect: i,
                        selected: !r && 0 === a,
                        shortcut: r || 0 !== a ? void 0 : "Confirm",
                        children: (0,
                        z.jsx)(_c.Menu.LOAD_GAME_BUTTON, {})
                    }), (0,
                    z.jsx)(XK, {
                        disabled: c,
                        onSelect: s,
                        selected: !r && 1 === a,
                        shortcut: r || 1 !== a ? void 0 : "Confirm",
                        children: t === aee.options ? (0,
                        z.jsx)(_c.Menu.SAVE_LIST, {}) : (0,
                        z.jsx)(_c.Menu.SAVE_OPTIONS, {})
                    })]
                })
            })
        }
        ;
        X.add("game-ui/menu/components/load-game-screen/save-detail/save-detail.tsx", {
            get SaveDetail() {
                return H7
            },
            set SaveDetail(e) {
                H7 = e
            }
        });
        let K7 = {
            itemHeight: "50rem",
            "save-list": "save-list_gdH child-opacity-transition_nkS",
            saveList: "save-list_gdH child-opacity-transition_nkS",
            scrollable: "scrollable_C4r"
        };
        X.add("game-ui/menu/components/load-game-screen/save-list/save-list.module.scss", {
            get classes() {
                return K7
            },
            set classes(e) {
                Object.assign(K7, e)
            }
        });
        const W7 = K7;
        var z7 = (0,
        Y.forwardRef)((function({selectedSave: e, ordering: t, className: n, onSelectSave: s, onSelectOrdering: i, onDoubleClick: a}, o) {
            const r = sl(xM)
              , l = (0,
            Y.useMemo)((()=>TK(r, t)), [t, r])
              , c = (0,
            Y.useMemo)((()=>r.find((e=>"ParadoxMods" === e.cloudTarget)) ? SK : SK.filter((e=>e !== bK.Downloaded))), [r])
              , u = uH(Vm(W7.itemHeight), l.length, 3)
              , d = (0,
            Y.useMemo)((()=>({
                "Switch Ordering": e=>{
                    cp(lp.dragSlider),
                    e < 0 ? (cp(lp.selectPreviousItem),
                    i(Ew(c, c.indexOf(t), !0) ?? c[c.length - 1])) : e > 0 && (cp(lp.selectNextItem),
                    i(bw(c, c.indexOf(t), !0) ?? c[0]))
                }
            })), [i, t, c])
              , m = (0,
            Y.useCallback)((e=>{
                "string" == typeof e && s(e)
            }
            ), [s])
              , h = (0,
            Y.useCallback)((e=>s(e.id)), [s])
              , g = (0,
            Y.useCallback)((t=>{
                const n = l[t];
                return (0,
                z.jsx)(AW, {
                    checkPrerequesites: !0,
                    save: n,
                    selected: e === n.displayName || e === n.id,
                    locked: !1,
                    tooltipsInactive: !0,
                    inputAction: "Load Game",
                    onClick: h,
                    onDoubleClick: a
                }, n.id)
            }
            ), [h, e, l, t]);
            return (0,
            z.jsx)(Mg, {
                actions: d,
                children: (0,
                z.jsxs)("div", {
                    ref: o,
                    className: Zu()(W7.saveList, n),
                    children: [(0,
                    z.jsx)(yK, {
                        options: c,
                        selectedOrdering: t,
                        onSelectOrdering: i
                    }), (0,
                    z.jsx)(Zg, {
                        focused: e,
                        onChange: m,
                        activation: qu.Always,
                        children: (0,
                        z.jsx)(rH, {
                            className: Zu()(W7.scrollable),
                            sizeProvider: u,
                            renderItem: g
                        })
                    })]
                })
            })
        }
        ));
        X.add("game-ui/menu/components/load-game-screen/save-list/save-list.tsx", {
            get SaveList() {
                return z7
            },
            set SaveList(e) {
                z7 = e
            }
        });
        let Y7 = {
            "save-slot-list": "save-slot-list_QCI child-opacity-transition_nkS",
            saveSlotList: "save-slot-list_QCI child-opacity-transition_nkS",
            scrollable: "scrollable_yF6",
            "name-field": "name-field_c6v",
            nameField: "name-field_c6v",
            "name-input": "name-input_NmH",
            nameInput: "name-input_NmH"
        };
        X.add("game-ui/menu/components/load-game-screen/save-slot-list/save-slot-list.module.scss", {
            get classes() {
                return Y7
            },
            set classes(e) {
                Object.assign(Y7, e)
            }
        });
        const $7 = Y7;
        var q7 = (0,
        Y.forwardRef)((function({selectedSlot: e, sortedSaves: t, ordering: n, className: s, onSelectSave: i, onSelectOrdering: a, onSelectSlot: o}, r) {
            const l = (0,
            Y.useMemo)((()=>t.find((e=>"ParadoxMods" === e.cloudTarget)) ? SK : SK.filter((e=>e !== bK.Downloaded))), [t])
              , c = (0,
            Y.useMemo)((()=>({
                "Switch Ordering": e=>{
                    cp(lp.dragSlider),
                    e < 0 ? (cp(lp.selectPreviousItem),
                    a(Ew(l, l.indexOf(n), !0) ?? l[l.length - 1])) : e > 0 && (cp(lp.selectNextItem),
                    a(bw(l, l.indexOf(n), !0) ?? l[0]))
                }
            })), [l, a, n])
              , u = (0,
            Y.useCallback)((e=>i(e.id)), [i]);
            return (0,
            z.jsx)(Mg, {
                actions: c,
                children: (0,
                z.jsxs)("div", {
                    ref: r,
                    className: Zu()($7.saveSlotList, s),
                    children: [(0,
                    z.jsx)(yK, {
                        options: l,
                        selectedOrdering: n,
                        onSelectOrdering: a
                    }), (0,
                    z.jsx)(np, {
                        initialFocused: e < t.length ? `Save->${t[e].id}` : void 0,
                        children: (0,
                        z.jsx)(mb, {
                            className: $7.scrollable,
                            children: t.map(((t,n)=>(0,
                            z.jsx)(nW, {
                                slotId: n,
                                focusKey: `Save->${t.id}`,
                                locked: t.locked,
                                selected: e === n,
                                saveGame: t,
                                inputAction: "Load Game",
                                onSelectSave: u,
                                onSelect: o
                            }, n)))
                        })
                    })]
                })
            })
        }
        ));
        X.add("game-ui/menu/components/load-game-screen/save-slot-list/save-slot-list.tsx", {
            get SaveSlotList() {
                return q7
            },
            set SaveSlotList(e) {
                q7 = e
            }
        });
        let X7 = {
            "save-slot": "save-slot_w9I child-opacity-transition_nkS",
            saveSlot: "save-slot_w9I child-opacity-transition_nkS",
            locked: "locked_ZDr",
            "theme-icon": "theme-icon_I6O",
            themeIcon: "theme-icon_I6O",
            "humidity-icon": "humidity-icon_cuF",
            humidityIcon: "humidity-icon_cuF",
            title: "title_BPq",
            field: "field_tWJ",
            "population-icon": "population-icon_TMS",
            populationIcon: "population-icon_TMS",
            date: "date_vy3",
            "empty-label": "empty-label_w3f",
            emptyLabel: "empty-label_w3f",
            input: "input_XA8",
            "title-content": "title-content_PH_",
            titleContent: "title-content_PH_",
            image: "image_H0A",
            scrollable: "scrollable_wz4",
            "scrollable-content": "scrollable-content_VzH",
            scrollableContent: "scrollable-content_VzH",
            description: "description_EAs",
            label: "label_W0E",
            value: "value_Azu",
            "scrollable-footer": "scrollable-footer_TG4",
            scrollableFooter: "scrollable-footer_TG4"
        };
        X.add("game-ui/menu/components/load-game-screen/save-slots/save-slot/save-slot.module.scss", {
            get classes() {
                return X7
            },
            set classes(e) {
                Object.assign(X7, e)
            }
        });
        const Q7 = X7;
        var Z7 = ({focusKey: e, locked: t=!1, saveGame: n, selected: s=!1, slotId: i, className: a, onSelectSave: o, onSelect: r})=>{
            const l = (0,
            Y.useCallback)((e=>{
                e && (r && r(i),
                n && o && o(n))
            }
            ), [r, o, n, i])
              , c = (0,
            Y.useCallback)((()=>{
                t || (n && o && o(n),
                r && r(i))
            }
            ), [t, r, o, n, i]);
            return (0,
            z.jsxs)(Sp, {
                focusKey: t ? Sg : e || Sg,
                onClick: c,
                onFocusChange: l,
                className: Zu()(Q7.saveSlot, t && Q7.locked, s && "selected", a),
                children: [n && (0,
                z.jsx)("div", {
                    className: Q7.title,
                    children: (0,
                    z.jsx)("div", {
                        className: Q7.titleContent,
                        children: n?.displayName
                    })
                }), null != n && (0,
                z.jsx)(Y_, {
                    src: n?.preview,
                    className: Q7.image
                }), (0,
                z.jsx)(mb, {
                    autoScroll: !0,
                    className: Q7.scrollable,
                    children: (0,
                    z.jsxs)("div", {
                        className: Q7.scrollableContent,
                        children: [n ? (0,
                        z.jsxs)(z.Fragment, {
                            children: [(0,
                            z.jsx)(J7, {
                                label: (0,
                                z.jsx)(_c.Menu.CITY_NAME_LABEL, {}),
                                children: n?.cityName
                            }), (0,
                            z.jsx)(J7, {
                                label: (0,
                                z.jsx)(_c.GameListScreen.POPULATION_LABEL, {}),
                                children: (0,
                                z.jsx)(Oc, {
                                    value: n?.population,
                                    unit: vc.Integer
                                })
                            }), (0,
                            z.jsx)(J7, {
                                label: (0,
                                z.jsx)(_c.Menu.SIMULATION_DATE_LABEL, {}),
                                children: (0,
                                z.jsx)(Lu, {
                                    value: n?.simulationDate
                                })
                            }), (0,
                            z.jsx)(J7, {
                                label: (0,
                                z.jsx)(_c.GameListScreen.MONEY_LABEL, {}),
                                children: (0,
                                z.jsx)(Oc, {
                                    value: n?.money,
                                    unit: vc.Money
                                })
                            }), (0,
                            z.jsx)(J7, {
                                label: (0,
                                z.jsx)(_c.GameListScreen.XP_LABEL, {}),
                                children: (0,
                                z.jsx)(Oc, {
                                    value: n?.xp,
                                    unit: vc.Integer
                                })
                            }), null != n?.mapName && (0,
                            z.jsx)(J7, {
                                label: (0,
                                z.jsx)(_c.GameListScreen.MAP_LABEL, {}),
                                children: (0,
                                z.jsx)(_c.Maps.MAP_TITLE, {
                                    hash: n.mapName,
                                    fallback: n.mapName
                                })
                            })]
                        }) : (0,
                        z.jsx)("div", {
                            className: Zu()(Q7.emptyLabel, Q7.locked),
                            children: (0,
                            z.jsx)(_c.Menu.EMPTY_SLOT, {})
                        }), (0,
                        z.jsx)("div", {
                            className: Q7.scrollableFooter
                        })]
                    })
                })]
            })
        }
        ;
        const J7 = ({label: e, children: t})=>(0,
        z.jsxs)("div", {
            className: Q7.field,
            children: [(0,
            z.jsx)("div", {
                className: Q7.label,
                children: e
            }), (0,
            z.jsx)("div", {
                className: Q7.value,
                children: t
            })]
        });
        X.add("game-ui/menu/components/load-game-screen/save-slots/save-slot/save-slot.tsx", {
            get SaveSlot() {
                return Z7
            },
            set SaveSlot(e) {
                Z7 = e
            }
        });
        let eee = {
            "save-game-slots": "save-game-slots_bkN",
            saveGameSlots: "save-game-slots_bkN",
            header: "header_bYW child-opacity-transition_nkS",
            slots: "slots_qGG",
            slot: "slot_yiX",
            "name-field": "name-field_Tyf child-opacity-transition_nkS",
            nameField: "name-field_Tyf child-opacity-transition_nkS",
            footer: "footer_x7R child-opacity-transition_nkS",
            "footer-button": "footer-button_OFi",
            footerButton: "footer-button_OFi"
        };
        X.add("game-ui/menu/components/load-game-screen/save-slots/save-slots.module.scss", {
            get classes() {
                return eee
            },
            set classes(e) {
                Object.assign(eee, e)
            }
        });
        const tee = eee;
        var nee = (0,
        Y.forwardRef)((function({slots: e, selectedSlot: t, sortedSaves: n, selectedSave: s, ordering: i, className: a, onSelectOrdering: o, onSelectSave: r, onLoadGameSelect: l, onOptionsToggle: c, onSelectSlot: u}, d) {
            const m = Dm()
              , h = null != s && s.locked
              , g = (0,
            Y.useMemo)((()=>n.find((e=>"ParadoxMods" === e.cloudTarget)) ? SK : SK.filter((e=>e !== bK.Downloaded))), [n])
              , p = (0,
            Y.useMemo)((()=>({
                "Switch Ordering": e=>{
                    cp(lp.dragSlider),
                    e < 0 ? (cp(lp.selectPreviousItem),
                    o(Ew(g, g.indexOf(i), !0) ?? g[g.length - 1])) : e > 0 && (cp(lp.selectNextItem),
                    o(bw(g, g.indexOf(i), !0) ?? g[0]))
                }
            })), [o, i, g])
              , f = (0,
            Y.useCallback)((e=>r(e.id)), [r])
              , x = (0,
            Y.useMemo)((()=>!n || 0 === n.length || t > n.length - 1 ? `Save->Empty:${t}` : `Save->${n[t]?.id}`), [t, n]);
            return (0,
            z.jsx)(Mg, {
                actions: p,
                children: (0,
                z.jsxs)("div", {
                    ref: d,
                    className: Zu()(tee.saveGameSlots, a),
                    children: [(0,
                    z.jsx)(yK, {
                        options: g,
                        selectedOrdering: i,
                        onSelectOrdering: o,
                        className: tee.header
                    }), (0,
                    z.jsx)("div", {
                        className: tee.slots,
                        children: (0,
                        z.jsx)(np, {
                            initialFocused: x,
                            children: Array.from({
                                length: e
                            }, ((e,s)=>!n || 0 === n.length || s > n.length - 1 ? (0,
                            z.jsx)(Z7, {
                                slotId: s,
                                locked: !0,
                                className: tee.slot
                            }, s) : (0,
                            z.jsx)(Z7, {
                                slotId: s,
                                selected: t === s,
                                focusKey: `Save->${n[s].id}`,
                                locked: n[s].locked,
                                saveGame: n[s],
                                className: tee.slot,
                                onSelectSave: f,
                                onSelect: u
                            }, s)))
                        })
                    }), (0,
                    z.jsx)("div", {
                        className: tee.footer,
                        children: null == s || m ? void 0 : (0,
                        z.jsxs)(z.Fragment, {
                            children: [(0,
                            z.jsx)(XK, {
                                className: tee.footerButton,
                                disabled: h,
                                onSelect: l,
                                children: (0,
                                z.jsx)(_c.Menu.LOAD_GAME_BUTTON, {})
                            }), (0,
                            z.jsx)(XK, {
                                className: tee.footerButton,
                                disabled: h,
                                onSelect: c,
                                children: (0,
                                z.jsx)(_c.Menu.SAVE_OPTIONS, {})
                            })]
                        })
                    })]
                })
            })
        }
        ));
        X.add("game-ui/menu/components/load-game-screen/save-slots/save-slots.tsx", {
            get SaveSlots() {
                return nee
            },
            set SaveSlots(e) {
                nee = e
            }
        });
        let see = {
            content: "content_xXo",
            "step-container": "step-container_Cmk",
            stepContainer: "step-container_Cmk",
            step: "step_buR",
            detail: "detail_T2m"
        };
        X.add("game-ui/menu/components/load-game-screen/load-game-screen.module.scss", {
            get classes() {
                return see
            },
            set classes(e) {
                Object.assign(see, e)
            }
        });
        const iee = see;
        var aee;
        !function(e) {
            e[e.selection = 0] = "selection",
            e[e.options = 1] = "options"
        }(aee || (aee = {}));
        var oee = Y.forwardRef((function({focusKey: e, className: t, onClose: n, requireConfirmation: s=!1}, i) {
            const [a,o] = (0,
            Y.useState)(aee.selection)
              , [r,l] = (0,
            Y.useState)(bK.LastModified)
              , {setBackdrop: c} = pq()
              , u = sl(xM)
              , d = (0,
            Y.useMemo)((()=>TK(u, r)), [r, u])
              , [m,h] = (0,
            Y.useState)((()=>ree(r)))
              , [g,p] = (0,
            Y.useState)(d.findIndex((e=>e.id === m)))
              , f = u.reduce(((e,t)=>"ParadoxMods" === t.cloudTarget ? e + 1 : e), 0)
              , x = sl(cM)
              , v = x + f
              , _ = (0,
            Y.useMemo)((()=>u.find((e=>e.id === m)) ?? null), [u, m])
              , [b,T] = (0,
            Y.useState)(_?.cityName ?? "")
              , [E,I] = (0,
            Y.useState)(_?.theme ?? "")
              , [S,y] = (0,
            Y.useState)(_?.gameMode || WA.NormalMode)
              , j = sl(oM)
              , [C,N] = (0,
            Y.useState)(_?.options ? {
                ...j,
                ..._?.options
            } : {
                ...j
            })
              , w = function(e) {
                const t = ["theme", "leftHandTraffic", "GameMode"];
                null != e?.options && (e.options.unlockAll && t.push("unlockAll"),
                e.options.unlimitedMoney && t.push("unlimitedMoney"),
                e.options.unlockMapTiles && t.push("unlockMapTiles"));
                return t
            }(_)
              , [O,P] = AM()
              , L = (0,
            Y.useContext)(xE)
              , A = sl(tM)
              , M = sl(cI);
            (0,
            Y.useEffect)((()=>{
                m && !d.find((e=>e.id === m)) && (h(ree(r)),
                o(aee.selection))
            }
            ), [d, m, r]);
            const R = (0,
            Y.useCallback)((e=>{
                const t = u.find((t=>t.id === e));
                null != t && (T(t.cityName),
                I(t.theme),
                N(t?.options ? {
                    ...j,
                    ...t?.options
                } : {
                    ...j
                }),
                h(e),
                y(t.gameMode || WA.NormalMode))
            }
            ), [j, u])
              , k = (0,
            Y.useCallback)((()=>{
                a === aee.options ? (o(aee.selection),
                cp(lp.closeMenu)) : n()
            }
            ), [a, n])
              , D = (0,
            Y.useCallback)((()=>{
                a === aee.selection ? (o(aee.options),
                cp(lp.openMenu)) : (o(aee.selection),
                cp(lp.closeMenu))
            }
            ), [a])
              , F = sl(FM)
              , U = (0,
            Y.useCallback)(((e,t)=>{
                t ??= u.find((e=>e.id === m)),
                t && (c(t.preview),
                LM(O),
                IM({
                    saveId: t.id,
                    cityName: b,
                    options: C,
                    gameMode: S
                }, e))
            }
            ), [b, S, C, u, m, c, O])
              , B = (0,
            Y.useCallback)((async(e,t)=>{
                await UE(t.contentPrerequisites) ? U(e, t) : L.showDialog((0,
                z.jsx)(b$, {
                    metadata: t,
                    title: (0,
                    z.jsx)(_c.Common.WARNING, {}),
                    onConfirm: ()=>U(e, t)
                }))
            }
            ), [L, U])
              , G = (0,
            Y.useCallback)((e=>{
                const t = e ?? u.find((e=>e.id === m));
                if (t) {
                    if (s && !F)
                        return void L.showDialog((0,
                        z.jsx)(zI, {
                            zIndex: 100,
                            title: (0,
                            z.jsx)(_c.Common.WARNING, {}),
                            message: (0,
                            z.jsx)(_c.GameListScreen.CONFIRM_UNSAVED_MESSAGE, {}),
                            onConfirm: e=>B(e, t),
                            dismissible: !0
                        }));
                    B(!1, t)
                }
            }
            ), [u, m, s, F, B, L])
              , V = (0,
            Y.useCallback)((()=>{
                const e = d.findIndex((e=>e.id === _.id))
                  , t = d[e + 1] || d[e - 1] || void 0;
                yM(_.id),
                h(t?.id),
                o(aee.selection)
            }
            ), [_, d])
              , H = (0,
            Y.useCallback)((()=>{
                jM(_.id)
            }
            ), [_])
              , [K,W] = (0,
            Y.useState)(0)
              , $ = (0,
            Y.useMemo)((()=>({
                "Save Options": ()=>{
                    cp(lp.selectItem),
                    D()
                }
                ,
                "Load Game": ()=>{
                    cp(lp.selectItem),
                    G()
                }
                ,
                "Select Popup Button": e=>{
                    W(e >= 0 ? (K + 1) % 2 : (K + 2 - 1) % 2)
                }
            })), [G, D, K]);
            return (0,
            z.jsx)(WK, {
                ref: i,
                focusKey: e,
                title: lee(a),
                className: t,
                onClose: k,
                children: (0,
                z.jsx)(Mg, {
                    actions: $,
                    children: 3 !== x || v > 3 ? (0,
                    z.jsx)("div", {
                        className: iee.content,
                        children: (0,
                        z.jsxs)(np, {
                            children: [(0,
                            z.jsx)("div", {
                                className: iee.stepContainer,
                                children: (0,
                                z.jsxs)(ud, {
                                    children: [a === aee.selection && (0,
                                    z.jsx)(mh, {
                                        styles: y9,
                                        children: -1 === x ? (0,
                                        z.jsx)(z7, {
                                            selectedSave: m,
                                            ordering: r,
                                            className: iee.step,
                                            onSelectSave: R,
                                            onSelectOrdering: l,
                                            onDoubleClick: G
                                        }) : (0,
                                        z.jsx)(q7, {
                                            selectedSlot: g,
                                            ordering: r,
                                            sortedSaves: d,
                                            className: iee.step,
                                            onSelectSave: R,
                                            onSelectOrdering: l,
                                            onSelectSlot: p
                                        })
                                    }, aee.selection), a === aee.options && (0,
                                    z.jsx)(mh, {
                                        styles: F0,
                                        children: (0,
                                        z.jsx)(G7, {
                                            cityName: b,
                                            theme: E,
                                            gameMode: S,
                                            options: C,
                                            disabledOptions: w,
                                            className: iee.step,
                                            onCityNameChange: T,
                                            onThemeChange: I,
                                            onGameModeChange: y,
                                            onOptionsChange: N,
                                            tutorialState: O,
                                            setTutorialState: P,
                                            onDeleteGame: _?.isReadonly ? void 0 : V,
                                            onShareGame: A || _?.isReadonly || !M ? void 0 : H,
                                            pastModsEnabled: _?.modsEnabled
                                        })
                                    }, aee.options)]
                                })
                            }), (0,
                            z.jsx)(H7, {
                                save: _,
                                activeStep: a,
                                className: iee.detail,
                                onOptionsToggle: D,
                                onLoadGameSelect: G,
                                selectedButton: K
                            })]
                        })
                    }) : (0,
                    z.jsx)(np, {
                        children: (0,
                        z.jsxs)(ud, {
                            children: [a === aee.selection && (0,
                            z.jsx)(mh, {
                                styles: y9,
                                children: (0,
                                z.jsx)("div", {
                                    className: iee.content,
                                    children: (0,
                                    z.jsx)(nee, {
                                        slots: v,
                                        selectedSlot: g,
                                        sortedSaves: d,
                                        ordering: r,
                                        selectedSave: _,
                                        onSelectSave: R,
                                        onLoadGameSelect: G,
                                        onOptionsToggle: D,
                                        onSelectOrdering: l,
                                        onSelectSlot: p
                                    })
                                })
                            }), a === aee.options && (0,
                            z.jsx)(mh, {
                                styles: F0,
                                children: (0,
                                z.jsxs)("div", {
                                    className: iee.content,
                                    children: [(0,
                                    z.jsx)("div", {
                                        className: iee.stepContainer,
                                        children: (0,
                                        z.jsx)(G7, {
                                            cityName: b,
                                            theme: E,
                                            gameMode: S,
                                            options: C,
                                            disabledOptions: w,
                                            className: iee.step,
                                            onCityNameChange: T,
                                            onThemeChange: I,
                                            onGameModeChange: y,
                                            onOptionsChange: N,
                                            tutorialState: O,
                                            setTutorialState: P,
                                            onDeleteGame: _?.isReadonly ? void 0 : V,
                                            onShareGame: A || _?.isReadonly || !M ? void 0 : H,
                                            pastModsEnabled: _?.modsEnabled
                                        })
                                    }), (0,
                                    z.jsx)(H7, {
                                        save: _,
                                        className: iee.detail,
                                        onOptionsToggle: D,
                                        onLoadGameSelect: G,
                                        selectedButton: K
                                    })]
                                })
                            })]
                        })
                    })
                })
            })
        }
        ));
        function ree(e) {
            return _w(TK(xM.value, e), "id")
        }
        function lee(e) {
            return e === aee.selection ? (0,
            z.jsx)(_c.Menu.LOAD_GAME, {}) : e === aee.options ? (0,
            z.jsx)(_c.Menu.SAVE_OPTIONS, {}) : null
        }
        function cee() {
            const e = (0,
            Y.useContext)(xE)
              , t = sl(FM)
              , n = sl(DE)
              , [s,i] = (0,
            Y.useState)(!0)
              , {setBackdrop: a} = pq();
            return (0,
            Y.useEffect)((()=>{
                if (n) {
                    (async()=>{
                        const e = await UE(n.contentPrerequisites);
                        i(e)
                    }
                    )()
                }
            }
            ), [n]),
            (0,
            Y.useCallback)((()=>{
                if (n) {
                    const i = ()=>{
                        const s = e=>{
                            a(n.preview),
                            RM(e)
                        }
                        ;
                        t ? s(!1) : e.showDialog((0,
                        z.jsx)(zI, {
                            title: (0,
                            z.jsx)(_c.Common.WARNING, {}),
                            message: (0,
                            z.jsx)(_c.GameListScreen.CONFIRM_UNSAVED_MESSAGE, {}),
                            onConfirm: s,
                            dismissible: !0
                        }))
                    }
                    ;
                    s ? i() : e.showDialog((0,
                    z.jsx)(b$, {
                        metadata: n,
                        title: (0,
                        z.jsx)(_c.Common.WARNING, {}),
                        onConfirm: i
                    }))
                }
            }
            ), [n, s, t, a, e])
        }
        X.add("game-ui/menu/components/load-game-screen/load-game-screen.tsx", {
            get LoadGameStep() {
                return aee
            },
            set LoadGameStep(e) {
                aee = e
            },
            get LoadGameScreen() {
                return oee
            },
            set LoadGameScreen(e) {
                oee = e
            },
            get useQuickLoad() {
                return cee
            },
            set useQuickLoad(e) {
                cee = e
            }
        });
        let uee = {
            enter: "enter_C0S enter_kO6",
            "enter-active": "enter-active_ule enter-active_lrI",
            enterActive: "enter-active_ule enter-active_lrI",
            exit: "exit_TO8 exit_Von",
            "exit-active": "exit-active_KS9 exit-active_jtN",
            exitActive: "exit-active_KS9 exit-active_jtN"
        };
        X.add("game-ui/game/transitions/toolbar-panel-children.module.scss", {
            get classes() {
                return uee
            },
            set classes(e) {
                Object.assign(uee, e)
            }
        });
        const dee = uee;
        var mee = Y.createContext(null);
        X.add("game-ui/game/components/asset-menu/asset-detail-panel/asset-detail-panel-context.ts", {
            get AssetDetailPanelContext() {
                return mee
            },
            set AssetDetailPanelContext(e) {
                mee = e
            }
        });
        let hee = {
            "asset-category-tab-bar": "asset-category-tab-bar_IGA",
            assetCategoryTabBar: "asset-category-tab-bar_IGA",
            "tab-icon": "tab-icon_YCN",
            tabIcon: "tab-icon_YCN",
            locked: "locked_u4O",
            lock: "lock_4IG",
            items: "items_gPf",
            "close-button": "close-button_kMj",
            closeButton: "close-button_kMj"
        };
        X.add("game-ui/game/components/asset-menu/asset-category-tab-bar/asset-category-tab-bar.module.scss", {
            get classes() {
                return hee
            },
            set classes(e) {
                Object.assign(hee, e)
            }
        });
        const gee = hee;
        let pee = {
            button: "button_Yym",
            icon: "icon_LAz",
            locked: "locked_jsF",
            "item-inner": "item-inner_NKx",
            itemInner: "item-inner_NKx",
            highlight: "highlight_Y8Z",
            lock: "lock_HjE",
            "single-tab": "single-tab_l6M",
            singleTab: "single-tab_l6M"
        };
        X.add("game-ui/game/components/asset-menu/asset-category-tab-bar/category-item.module.scss", {
            get classes() {
                return pee
            },
            set classes(e) {
                Object.assign(pee, e)
            }
        });
        const fee = pee;
        var xee = (0,
        Y.memo)((function({categories: e, selectedCategory: t, onChange: n, onClose: s}) {
            const i = Dm();
            return (0,
            z.jsxs)("div", {
                className: gee.assetCategoryTabBar,
                children: [(0,
                z.jsx)("div", {
                    className: gee.items,
                    children: (0,
                    z.jsx)(WH, {
                        hidden: e.length < 2,
                        children: e.map((s=>(0,
                        z.jsx)(vee, {
                            singleTab: 1 === e.length,
                            subCategory: s,
                            selected: Ur(t, s.entity),
                            onSelect: n
                        }, Dr(s.entity))))
                    })
                }), !i && (0,
                z.jsx)(tb, {
                    tinted: !0,
                    focusKey: Sg,
                    src: XT.closeIcon,
                    theme: sb,
                    className: Zu()(XT.closeButton, gee.closeButton),
                    onSelect: s
                })]
            })
        }
        ));
        const vee = ({subCategory: e, selected: t, singleTab: n=!1, onSelect: s})=>{
            rg(e.uiTag, t && !e.locked),
            lg(e.uiTag, t && !e.locked);
            const i = (0,
            Y.useCallback)((()=>s(e.entity)), [s, e.entity])
              , a = (0,
            Y.useContext)(mee)
              , o = (0,
            Y.useCallback)((()=>a && a.showDetails(e.entity)), [e.entity, a])
              , r = (0,
            Y.useCallback)((()=>a && a.hideDetails(e.entity)), [e.entity, a]);
            return (0,
            z.jsx)(Eg, {
                tooltip: !a && (0,
                z.jsx)(_c.SubServices.NAME, {
                    hash: e.name
                }),
                children: n ? (0,
                z.jsxs)("div", {
                    className: fee.singleTab,
                    onMouseOver: o,
                    onMouseLeave: r,
                    children: [(0,
                    z.jsx)(mT, {
                        uiTag: e.uiTag,
                        active: !e.locked,
                        disableBlinking: n,
                        children: (0,
                        z.jsx)("div", {
                            className: fee.itemInner
                        })
                    }), (0,
                    z.jsx)("img", {
                        src: e.icon,
                        className: Zu()(gee.tabIcon, e.locked && gee.locked)
                    }), e.locked && (0,
                    z.jsx)(OZ, {
                        className: gee.lock
                    })]
                }) : (0,
                z.jsxs)(tb, {
                    disableHint: !0,
                    focusKey: Sg,
                    src: e.icon,
                    selected: t,
                    theme: fee,
                    className: Zu()(e.locked && fee.locked),
                    onSelect: i,
                    onMouseOver: o,
                    onMouseLeave: r,
                    children: [(0,
                    z.jsx)(mT, {
                        uiTag: e.uiTag,
                        active: !e.locked,
                        disableBlinking: n,
                        children: (0,
                        z.jsx)("div", {
                            className: fee.itemInner
                        })
                    }), e.highlight && (0,
                    z.jsx)(y1, {
                        className: fee.highlight
                    }), e.locked && (0,
                    z.jsx)(OZ, {
                        className: fee.lock
                    })]
                })
            })
        }
        ;
        X.add("game-ui/game/components/asset-menu/asset-category-tab-bar/asset-category-tab-bar.tsx", {
            get AssetCategoryTabBar() {
                return xee
            },
            set AssetCategoryTabBar(e) {
                xee = e
            }
        });
        var _ee = "Game.UI.Common.NumberProperty"
          , bee = "Game.UI.Common.Number2Property"
          , Tee = "Game.UI.Common.Number2Property"
          , Eee = "Game.UI.Common.StringProperty";
        function Iee(e) {
            return "minValue"in e && "maxValue"in e
        }
        function See(e) {
            return "value"in e && "number" == typeof e.value
        }
        X.add("game-ui/common/property-field/typed-property.ts", {
            get NUMBER_PROPERTY() {
                return _ee
            },
            set NUMBER_PROPERTY(e) {
                _ee = e
            },
            get NUMBER2_PROPERTY() {
                return bee
            },
            set NUMBER2_PROPERTY(e) {
                bee = e
            },
            get NUMBER_RANGE_PROPERTY() {
                return Tee
            },
            set NUMBER_RANGE_PROPERTY(e) {
                Tee = e
            },
            get STRING_PROPERTY() {
                return Eee
            },
            set STRING_PROPERTY(e) {
                Eee = e
            },
            get isNumberRange() {
                return Iee
            },
            set isNumberRange(e) {
                Iee = e
            },
            get isNumber() {
                return See
            },
            set isNumber(e) {
                See = e
            }
        });
        let yee = {
            field: "field_AjF",
            icon: "icon_WOc",
            content: "content_dov"
        };
        X.add("game-ui/game/components/asset-menu/asset-detail-panel/effect-field.module.scss", {
            get classes() {
                return yee
            },
            set classes(e) {
                Object.assign(yee, e)
            }
        });
        const jee = yee
          , Cee = ({type: e, delta: t, unit: n})=>{
            const s = (0,
            Y.useMemo)((()=>function(e) {
                switch (e) {
                case RC.Attractiveness:
                    return "Media/Game/Icons/Tourism.svg";
                case RC.CrimeAccumulation:
                case RC.PoliceStationUpkeep:
                    return "Media/Game/Icons/Police.svg";
                case RC.DisasterWarningTime:
                case RC.DisasterDamageRate:
                    return "Media/Game/Icons/Disaster.svg";
                case RC.DiseaseProbability:
                    return "Media/Game/Icons/Healthcare.svg";
                case RC.ParkEntertainment:
                    return "Media/Game/Icons/ParksAndRecreation.svg";
                case RC.CriminalMonitorProbability:
                    return "Media/Game/Icons/Police.svg";
                case RC.IndustrialAirPollution:
                    return "Media/Game/Icons/AirPollution.svg";
                case RC.IndustrialGroundPollution:
                    return "Media/Game/Icons/GroundPollution.svg";
                case RC.IndustrialGarbage:
                    return "Media/Game/Icons/Garbage.svg";
                case RC.RecoveryFailChange:
                    return "Media/Game/Icons/Healthcare.svg";
                case RC.OreResourceAmount:
                    return "Media/Game/Icons/Coal.svg";
                case RC.OilResourceAmount:
                    return "Media/Game/Icons/Oil.svg";
                case RC.UniversityInterest:
                    return "Media/Game/Icons/Education.svg";
                case RC.OfficeSoftwareDemand:
                    return "Media/Game/Icons/ZoneOfficeHigh.svg";
                case RC.IndustrialElectronicsDemand:
                    return "Media/Game/Icons/ZoneIndustrialManufacturing.svg";
                case RC.OfficeSoftwareEfficiency:
                    return "Media/Game/Icons/ZoneOfficeHigh.svg";
                case RC.IndustrialElectronicsEfficiency:
                    return "Media/Game/Icons/ZoneIndustrialManufacturing.svg";
                case RC.TelecomCapacity:
                    return "Media/Game/Icons/Telecom.svg";
                case RC.Entertainment:
                    return "Media/Game/Icons/Entertainment.svg";
                case RC.HighwayTrafficSafety:
                    return "Media/Game/Icons/Roads.svg";
                case RC.PrisonTime:
                case RC.CrimeProbability:
                    return "Media/Game/Icons/Police.svg";
                case RC.CollegeGraduation:
                case RC.UniversityGraduation:
                    return "Media/Game/Icons/Graduation.svg";
                case RC.ImportCost:
                    return "Media/Game/Icons/OutsideConnections.svg";
                case RC.LoanInterest:
                    return "Media/Game/Icons/Money.svg";
                case RC.BuildingLevelingCost:
                    return "Media/Game/Icons/BuildingLevel.svg";
                case RC.ExportCost:
                    return "Media/Game/Icons/OutsideConnections.svg";
                case RC.TaxiStartingFee:
                    return "Media/Game/Icons/Taxi.svg";
                case RC.IndustrialEfficiency:
                    return "Media/Game/Icons/ZoneIndustrial.svg";
                case RC.OfficeEfficiency:
                    return "Media/Game/Icons/ZoneOffice.svg";
                case RC.PollutionHealthAffect:
                    return "Media/Game/Icons/AirPollution.svg";
                case RC.HospitalEfficiency:
                    return "Media/Game/Icons/Healthcare.svg";
                case RC.IndustrialFishHubEfficiency:
                case RC.IndustrialFishInputEfficiency:
                    return "Media/Game/Resources/Fish.svg";
                default:
                    return console.warn(`Missing icon for CityModifierType.${e}!`),
                    "Media/Placeholder.svg"
                }
            }(e)), [e]);
            return (0,
            z.jsxs)("div", {
                className: jee.field,
                children: [(0,
                z.jsx)("img", {
                    src: s,
                    className: jee.icon
                }), (0,
                z.jsx)("div", {
                    className: jee.content,
                    children: (0,
                    z.jsx)(_c.Properties.CITY_MODIFIER_EFFECT, {
                        TYPE: (0,
                        z.jsx)(_c.Properties.CITY_MODIFIER, {
                            hash: e
                        }),
                        DELTA: (0,
                        z.jsx)(Oc, {
                            value: t,
                            unit: n,
                            signed: !0
                        })
                    })
                })]
            })
        }
        ;
        const Nee = ({type: e, delta: t, unit: n, radius: s})=>{
            const i = (0,
            Y.useMemo)((()=>function(e) {
                switch (e) {
                case kC.CrimeAccumulation:
                    return "Media/Game/Icons/Police.svg";
                case kC.ForestFireResponseTime:
                case kC.ForestFireHazard:
                    return "Media/Game/Icons/FireSafety.svg";
                case kC.Wellbeing:
                    return "Media/Game/Icons/Wellbeing.svg";
                case kC.Health:
                    return "Media/Game/Icons/Healthcare.svg";
                default:
                    return console.warn(`Missing icon for LocalModifierType.${e}!`),
                    "Media/Placeholder.svg"
                }
            }(e)), [e]);
            return (0,
            z.jsxs)("div", {
                className: jee.field,
                children: [(0,
                z.jsx)("img", {
                    src: i,
                    className: jee.icon
                }), (0,
                z.jsx)("div", {
                    className: jee.content,
                    children: (0,
                    z.jsx)(_c.Properties.LOCAL_MODIFIER_EFFECT, {
                        TYPE: (0,
                        z.jsx)(_c.Properties.LOCAL_MODIFIER, {
                            hash: e
                        }),
                        DELTA: (0,
                        z.jsx)(Oc, {
                            value: t,
                            unit: n,
                            signed: !0
                        }),
                        RADIUS: (0,
                        z.jsx)(Oc, {
                            value: s,
                            unit: vc.Length
                        })
                    })
                })]
            })
        }
        ;
        const wee = ({type: e, efficiency: t})=>{
            const n = (0,
            Y.useMemo)((()=>function(e) {
                switch (e) {
                case DC.Meals:
                    return "Media/Game/Icons/Meals.svg";
                case DC.Entertainment:
                    return "Media/Game/Icons/Entertainment.svg";
                case DC.Commercial:
                    return "Media/Game/Icons/Commercial.svg";
                case DC.CityIndoors:
                    return "Media/Game/Icons/CityIndoors.svg";
                case DC.Travel:
                    return "Media/Game/Icons/Travel.svg";
                case DC.CityPark:
                    return "Media/Game/Icons/CityPark.svg";
                case DC.CityBeach:
                    return "Media/Game/Icons/CityBeach.svg";
                case DC.Attractions:
                    return "Media/Game/Icons/Attractions.svg";
                case DC.Relaxation:
                    return "Media/Game/Icons/Relaxation.svg";
                case DC.Sightseeing:
                    return "Media/Game/Icons/Sightseeing.svg";
                default:
                    return console.warn(`Missing icon for LeisureType.${e}!`),
                    "Media/Placeholder.svg"
                }
            }(e)), [e]);
            return (0,
            z.jsxs)("div", {
                className: jee.field,
                children: [(0,
                z.jsx)("img", {
                    src: n,
                    className: jee.icon
                }), (0,
                z.jsx)("div", {
                    className: jee.content,
                    children: (0,
                    z.jsx)(_c.Properties.LEISURE_PROVIDER_EFFECT, {
                        TYPE: (0,
                        z.jsx)(_c.Properties.LEISURE_TYPE, {
                            hash: e
                        }),
                        EFFICIENCY: (0,
                        z.jsx)(Oc, {
                            value: t,
                            unit: vc.Integer,
                            signed: !0
                        })
                    })
                })]
            })
        }
        ;
        const Oee = ({effect: e, targetKey: t, icon: n, typeKey: s})=>(0,
        z.jsxs)("div", {
            className: jee.field,
            children: [(0,
            z.jsx)("img", {
                src: n,
                className: jee.icon
            }), (0,
            z.jsx)("div", {
                className: jee.content,
                children: (0,
                z.jsx)(_c.Properties.ADJUST_HAPPINESS_MODIFIER_EFFECT, {
                    TYPE: (0,
                    z.jsx)(_c.Properties.ADJUST_HAPPINESS_MODIFIER_TYPE, {
                        hash: s
                    }),
                    DELTA: (0,
                    z.jsx)(Oc, {
                        value: e,
                        unit: vc.Percentage,
                        signed: !0
                    }),
                    TARGET: (0,
                    z.jsx)(_c.Properties.ADJUST_HAPPINESS_MODIFIER_TARGET, {
                        hash: t
                    })
                })
            })]
        });
        var Pee = {
            [MC.CityModifier]: ({modifiers: e})=>(0,
            z.jsx)(z.Fragment, {
                children: e.map(((e,t)=>(0,
                z.jsx)(Cee, {
                    ...e
                }, t)))
            }),
            [MC.LocalModifier]: ({modifiers: e})=>(0,
            z.jsx)(z.Fragment, {
                children: e.map(((e,t)=>(0,
                z.jsx)(Nee, {
                    ...e
                }, t)))
            }),
            [MC.LeisureProvider]: ({providers: e})=>(0,
            z.jsx)(z.Fragment, {
                children: e.map(((e,t)=>(0,
                z.jsx)(wee, {
                    ...e
                }, t)))
            }),
            [MC.AdjustHappinessEffect]: ({wellbeingEffect: e, healthEffect: t, targets: n})=>(0,
            z.jsxs)(z.Fragment, {
                children: [e > 0 && n.map((t=>(0,
                z.jsx)(Oee, {
                    effect: e,
                    targetKey: t,
                    icon: "Media/Game/Icons/Wellbeing.svg",
                    typeKey: "Wellbeing"
                }, t))), t > 0 && n.map((e=>(0,
                z.jsx)(Oee, {
                    effect: t,
                    targetKey: e,
                    icon: "Media/Game/Icons/Healthcare.svg",
                    typeKey: "Health"
                }, e)))]
            })
        };
        X.add("game-ui/game/components/asset-menu/asset-detail-panel/effect-field.tsx", {
            get prefabEffectComponents() {
                return Pee
            },
            set prefabEffectComponents(e) {
                Pee = e
            }
        });
        var Lee = ({labelId: e, unit: t, value: n, signed: s, icon: i, valueIcon: a})=>(0,
        z.jsx)(H9, {
            label: (0,
            z.jsx)(cc, {
                id: e
            }),
            icon: i,
            valueIcon: a,
            children: (0,
            z.jsx)(Oc, {
                value: n,
                unit: t,
                signed: s
            })
        })
          , Aee = ({labelId: e, unit: t, value: n, signed: s, icon: i, valueIcon: a})=>{
            const o = t.includes("money");
            return (0,
            z.jsxs)(H9, {
                label: (0,
                z.jsx)(cc, {
                    id: e
                }),
                icon: i,
                valueIcon: a,
                children: [(0,
                z.jsx)(Oc, {
                    value: n.x,
                    unit: o ? vc.Money : void 0
                }), "–", (0,
                z.jsx)(Oc, {
                    value: n.y,
                    unit: t,
                    signed: s
                })]
            })
        }
          , Mee = ({labelId: e, valueId: t, icon: n, valueIcon: s})=>(0,
        z.jsx)(H9, {
            label: (0,
            z.jsx)(cc, {
                id: e
            }),
            icon: n,
            valueIcon: s,
            children: (0,
            z.jsx)(cc, {
                id: t
            })
        })
          , Ree = {
            [_ee]: Lee,
            [bee]: Aee,
            [Eee]: Mee
        };
        X.add("game-ui/common/property-field/typed-property-field.tsx", {
            get NumberPropertyField() {
                return Lee
            },
            set NumberPropertyField(e) {
                Lee = e
            },
            get Number2PropertyField() {
                return Aee
            },
            set Number2PropertyField(e) {
                Aee = e
            },
            get StringPropertyField() {
                return Mee
            },
            set StringPropertyField(e) {
                Mee = e
            },
            get propertyFieldComponents() {
                return Ree
            },
            set propertyFieldComponents(e) {
                Ree = e
            }
        });
        let kee = {
            field: "field_rIn",
            header: "header_lrj",
            content: "content_RIT",
            icon: "icon_tiy",
            "value-icon": "value-icon_Yob",
            valueIcon: "value-icon_Yob",
            value: "value_Yc3"
        };
        X.add("game-ui/game/components/asset-menu/asset-detail-panel/property-field.module.scss", {
            get classes() {
                return kee
            },
            set classes(e) {
                Object.assign(kee, e)
            }
        });
        const Dee = kee
          , Fee = {
            ...Ree,
            [$C]: Lee,
            [qC]: Aee,
            [GC]: ({electricityConsumption: e, waterConsumption: t, garbageAccumulation: n})=>(0,
            z.jsxs)(z.Fragment, {
                children: [e > 0 && (0,
                z.jsx)(H9, {
                    label: (0,
                    z.jsx)(_c.Properties.ELECTRICITY_CONSUMPTION, {}),
                    children: (0,
                    z.jsx)(Oc, {
                        value: e,
                        unit: vc.Power
                    })
                }), t > 0 && (0,
                z.jsx)(H9, {
                    label: (0,
                    z.jsx)(_c.Properties.WATER_CONSUMPTION, {}),
                    children: (0,
                    z.jsx)(Oc, {
                        value: t,
                        unit: vc.VolumePerMonth
                    })
                }), n > 0 && (0,
                z.jsx)(H9, {
                    label: (0,
                    z.jsx)(_c.Properties.GARBAGE_ACCUMULATION, {}),
                    children: (0,
                    z.jsx)(Oc, {
                        value: n,
                        unit: vc.WeightPerMonth
                    })
                })]
            }),
            [VC]: ({groundPollution: e, airPollution: t, noisePollution: n})=>(0,
            z.jsxs)(z.Fragment, {
                children: [e > BC.none && (0,
                z.jsxs)(H9, {
                    label: (0,
                    z.jsx)(_c.SelectedInfoPanel.POLLUTION_LEVELS_GROUND, {}),
                    children: [(0,
                    z.jsx)("img", {
                        src: "Media/Game/Icons/GroundPollution.svg",
                        className: Dee.icon
                    }), (0,
                    z.jsx)("div", {
                        className: Dee.value,
                        children: (0,
                        z.jsx)(_c.SelectedInfoPanel.POLLUTION_LEVELS, {
                            index: e
                        })
                    })]
                }), t > BC.none && (0,
                z.jsxs)(H9, {
                    label: (0,
                    z.jsx)(_c.SelectedInfoPanel.POLLUTION_LEVELS_AIR, {}),
                    children: [(0,
                    z.jsx)("img", {
                        src: "Media/Game/Icons/AirPollution.svg",
                        className: Dee.icon
                    }), (0,
                    z.jsx)("div", {
                        className: Dee.value,
                        children: (0,
                        z.jsx)(_c.SelectedInfoPanel.POLLUTION_LEVELS, {
                            index: t
                        })
                    })]
                }), n > BC.none && (0,
                z.jsxs)(H9, {
                    label: (0,
                    z.jsx)(_c.SelectedInfoPanel.POLLUTION_LEVELS_NOISE, {}),
                    children: [(0,
                    z.jsx)("img", {
                        src: "Media/Game/Icons/NoisePollution.svg",
                        className: Dee.icon
                    }), (0,
                    z.jsx)("div", {
                        className: Dee.value,
                        children: (0,
                        z.jsx)(_c.SelectedInfoPanel.POLLUTION_LEVELS, {
                            index: n
                        })
                    })]
                })]
            }),
            [KC]: ({labelId: e, minCapacity: t, maxCapacity: n, voltage: s})=>(0,
            z.jsx)(H9, {
                label: (0,
                z.jsx)(cc, {
                    id: e
                }),
                children: (0,
                z.jsx)(_c.Properties.POWER_VOLTAGE_FORMAT, {
                    VALUE: (0,
                    z.jsx)(ou, {
                        min: t,
                        max: n,
                        unit: vc.Power
                    }),
                    VOLTAGE: (0,
                    z.jsx)(_c.Properties.VOLTAGE, {
                        index: s
                    })
                })
            }),
            [YC]: ({stops: e})=>(0,
            z.jsx)(z.Fragment, {
                children: Object.entries(e).map((([e,t],n)=>t > 0 && (0,
                z.jsx)(H9, {
                    label: (0,
                    z.jsx)(_c.Properties.TRANSPORT_STOP_COUNT, {
                        hash: e
                    }),
                    children: (0,
                    z.jsx)(Oc, {
                        value: t,
                        unit: vc.Integer
                    })
                }, n)))
            })
        };
        var Uee = ({data: e})=>(0,
        z.jsx)(V9.Provider, {
            value: Dee,
            children: (0,
            z.jsx)(cD, {
                components: Fee,
                data: e
            })
        });
        X.add("game-ui/game/components/asset-menu/asset-detail-panel/property-field.tsx", {
            get PrefabPropertyFields() {
                return Uee
            },
            set PrefabPropertyFields(e) {
                Uee = e
            }
        });
        let Bee = {
            "asset-detail-panel": "asset-detail-panel_hf8",
            assetDetailPanel: "asset-detail-panel_hf8",
            "asset-description": "asset-description_zJ5",
            assetDescription: "asset-description_zJ5",
            "category-details": "category-details_Y48",
            categoryDetails: "category-details_Y48",
            scrollable: "scrollable_kd5",
            "title-bar": "title-bar_I7O child-opacity-transition_nkS",
            titleBar: "title-bar_I7O child-opacity-transition_nkS",
            title: "title_qub",
            unique: "unique_Hww",
            "construction-cost-field": "construction-cost-field_I8G",
            constructionCostField: "construction-cost-field_I8G",
            "not-enough-money": "not-enough-money_vtd",
            notEnoughMoney: "not-enough-money_vtd",
            "construction-cost-value": "construction-cost-value_u95",
            constructionCostValue: "construction-cost-value_u95",
            "construction-cost-icon": "construction-cost-icon_hgB",
            constructionCostIcon: "construction-cost-icon_hgB",
            row: "row_H0d child-opacity-transition_nkS",
            content: "content_rep row_H0d child-opacity-transition_nkS",
            "scroll-content": "scroll-content_CZt",
            scrollContent: "scroll-content_CZt",
            "preview-container": "preview-container_sPA",
            previewContainer: "preview-container_sPA",
            preview: "preview_MDY",
            column: "column_dTT",
            description: "description_ZQn",
            effects: "effects_y8n",
            "stats-row": "stats-row_Q3F row_H0d child-opacity-transition_nkS",
            statsRow: "stats-row_Q3F row_H0d child-opacity-transition_nkS",
            "requirements-row": "requirements-row_yaX row_H0d child-opacity-transition_nkS",
            requirementsRow: "requirements-row_yaX row_H0d child-opacity-transition_nkS",
            "already-built-row": "already-built-row_NJp row_H0d child-opacity-transition_nkS",
            alreadyBuiltRow: "already-built-row_NJp row_H0d child-opacity-transition_nkS"
        };
        X.add("game-ui/game/components/asset-menu/asset-detail-panel/asset-detail-panel.module.scss", {
            get classes() {
                return Bee
            },
            set classes(e) {
                Object.assign(Bee, e)
            }
        });
        const Gee = Bee;
        var Vee = Y.forwardRef((function({entity: e, selectedCategory: t, className: n, upgrade: s=!1}, i) {
            const a = Dm()
              , o = ll(xT, e) ?? _T
              , r = ll(dA, e) ?? _T
              , l = ll(xT, t) ?? void 0
              , c = s ? r : o
              , u = c.properties.length > 0
              , d = c.locked && c.requirements.requireAll.length + c.requirements.requireAny.length > 0;
            return (0,
            z.jsxs)("div", {
                className: Zu()(Gee.assetDetailPanel, n),
                ref: i,
                children: [a && l && (0,
                z.jsxs)("div", {
                    className: Gee.categoryDetails,
                    children: [(0,
                    z.jsx)("div", {
                        className: Gee.titleBar,
                        children: (0,
                        z.jsx)("div", {
                            className: Gee.title,
                            children: (0,
                            z.jsx)(cc, {
                                id: l.titleId
                            })
                        })
                    }), (0,
                    z.jsx)("div", {
                        className: Gee.content,
                        children: (0,
                        z.jsx)(mb, {
                            autoScroll: !0,
                            className: Gee.scrollable,
                            children: (0,
                            z.jsx)("div", {
                                className: Gee.column,
                                children: null != l.descriptionId && (0,
                                z.jsx)(Cb, {
                                    className: Gee.description,
                                    children: (0,
                                    z.jsx)(cc, {
                                        id: l.descriptionId
                                    })
                                })
                            })
                        })
                    })]
                }), (0,
                z.jsxs)("div", {
                    className: Gee.assetDescription,
                    children: [(0,
                    z.jsxs)("div", {
                        className: Gee.titleBar,
                        children: [(0,
                        z.jsx)("div", {
                            className: Gee.title,
                            children: (0,
                            z.jsx)(cc, {
                                id: c.titleId
                            })
                        }), c.unique && (0,
                        z.jsx)("div", {
                            className: Gee.unique,
                            children: (0,
                            z.jsx)(_c.Assets.UNIQUE, {})
                        }), null != c.constructionCost && (Iee(c.constructionCost) ? (0,
                        z.jsx)(Kee, {
                            minValue: c.constructionCost.minValue,
                            maxValue: c.constructionCost.maxValue,
                            unit: c.constructionCost.unit
                        }) : See(c.constructionCost) ? (0,
                        z.jsx)(Hee, {
                            value: c.constructionCost.value,
                            unit: c.constructionCost.unit
                        }) : (0,
                        z.jsx)(Wee, {
                            value: c.constructionCost.value,
                            unit: c.constructionCost.unit
                        }))]
                    }), (0,
                    z.jsx)("div", {
                        className: Gee.content,
                        children: (0,
                        z.jsx)(mb, {
                            autoScroll: !0,
                            className: Gee.scrollable,
                            children: (0,
                            z.jsxs)("div", {
                                className: Gee.scrollContent,
                                children: [(0,
                                z.jsx)("div", {
                                    className: Gee.previewContainer,
                                    children: (0,
                                    z.jsx)("img", {
                                        src: c.icon,
                                        className: Gee.preview
                                    })
                                }), (0,
                                z.jsxs)("div", {
                                    className: Gee.column,
                                    children: [null != c.descriptionId && (0,
                                    z.jsx)(Cb, {
                                        className: Gee.description,
                                        children: (0,
                                        z.jsx)(cc, {
                                            id: c.descriptionId
                                        })
                                    }), c.effects.length > 0 && (0,
                                    z.jsx)("div", {
                                        className: Gee.effects,
                                        children: (0,
                                        z.jsx)(cD, {
                                            components: Pee,
                                            data: c.effects
                                        })
                                    })]
                                })]
                            })
                        })
                    }), u && (0,
                    z.jsx)("div", {
                        className: Gee.statsRow,
                        children: (0,
                        z.jsx)(Uee, {
                            data: c.properties
                        })
                    }), d && (0,
                    z.jsx)(U6, {
                        requirements: c.requirements,
                        className: Gee.requirementsRow
                    }), c.placed && (0,
                    z.jsx)("div", {
                        className: Gee.alreadyBuiltRow,
                        children: (0,
                        z.jsx)(_c.Toolbar.ASSET_ALREADY_BUILT, {})
                    })]
                })]
            })
        }
        ))
          , Hee = ({value: e, unit: t})=>{
            const n = sl(FL);
            return 0 === e ? null : (0,
            z.jsxs)("div", {
                className: Zu()(Gee.constructionCostField, e > 0 && n < e && Gee.notEnoughMoney),
                children: [(0,
                z.jsx)("div", {
                    children: (0,
                    z.jsx)(Oc, {
                        value: e,
                        unit: t
                    })
                }), (0,
                z.jsx)(Z_, {
                    src: "Media/Glyphs/Money.svg",
                    className: Gee.constructionCostIcon
                })]
            })
        }
          , Kee = ({minValue: e, maxValue: t, unit: n})=>{
            const s = sl(FL);
            return 0 === t ? null : (0,
            z.jsxs)("div", {
                className: Zu()(Gee.constructionCostField, t > 0 && s < t && Gee.notEnoughMoney),
                children: [(0,
                z.jsxs)("div", {
                    className: Gee.constructionCostValue,
                    children: [(0,
                    z.jsx)(Oc, {
                        value: e,
                        unit: n
                    }), t !== e && (0,
                    z.jsxs)(z.Fragment, {
                        children: ["-", (0,
                        z.jsx)(Oc, {
                            value: t,
                            unit: n
                        })]
                    })]
                }), (0,
                z.jsx)(Z_, {
                    src: "Media/Glyphs/Money.svg",
                    className: Gee.constructionCostIcon
                })]
            })
        }
          , Wee = ({value: e, unit: t})=>{
            const n = sl(FL);
            return (0,
            z.jsxs)("div", {
                className: Zu()(Gee.constructionCostField, e.x > 0 && n < e.x && Gee.notEnoughMoney),
                children: [(0,
                z.jsx)("div", {
                    children: (0,
                    z.jsx)(Oc, {
                        value: e.y,
                        unit: t
                    })
                }), (0,
                z.jsx)(Z_, {
                    src: "Media/Glyphs/Money.svg",
                    className: Gee.constructionCostIcon
                })]
            })
        }
        ;
        function zee(e, t, n, s) {
            return (0,
            Y.useMemo)((()=>{
                if (null == n)
                    return [];
                const i = e;
                s && i.sort(s);
                const a = n * t;
                if (a >= i.length)
                    return [];
                const o = Math.min(a + t, i.length);
                return i.slice(a, o)
            }
            ), [n, e, s, t])
        }
        X.add("game-ui/game/components/asset-menu/asset-detail-panel/asset-detail-panel.tsx", {
            get AssetDetailPanel() {
                return Vee
            },
            set AssetDetailPanel(e) {
                Vee = e
            },
            get ConstructionCost() {
                return Hee
            },
            set ConstructionCost(e) {
                Hee = e
            },
            get ConstructionRangeCost() {
                return Kee
            },
            set ConstructionRangeCost(e) {
                Kee = e
            },
            get NetConstructionCost() {
                return Wee
            },
            set NetConstructionCost(e) {
                Wee = e
            }
        }),
        X.add("game-ui/common/hooks/use-page-items.ts", {
            get usePageItems() {
                return zee
            },
            set usePageItems(e) {
                zee = e
            }
        });
        const Yee = ({disabled: e, onClick: t, children: n, onDisabledClick: s, focusKey: i})=>{
            const a = (0,
            Y.useRef)(null)
              , o = wh(gp(i ?? "FOCUS_AUTO", a))
              , r = Dm()
              , l = (0,
            Y.useMemo)((()=>({
                Select: ()=>{
                    e ? s && s() : t()
                }
            })), [e, t, s])
              , c = (0,
            Y.useCallback)((n=>{
                e ? (s && s(),
                n.preventDefault()) : t(),
                n.stopPropagation()
            }
            ), [e, t, s]);
            return (0,
            z.jsx)(Mg, {
                actions: l,
                children: (0,
                z.jsx)("div", {
                    ref: a,
                    className: "clickable-wrapper " + (o && r ? "focused" : ""),
                    onClick: c,
                    style: {
                        cursor: e ? "not-allowed" : "pointer"
                    },
                    "aria-disabled": e,
                    children: n
                })
            })
        }
        ;
        X.add("game-ui/common/input/clickable-wrapper.tsx", {});
        var $ee = (e,t="min")=>e && e.constructionCost ? Iee(e.constructionCost) ? e.constructionCost.maxValue : See(e.constructionCost) ? e.constructionCost.value : e.constructionCost.value["min" === t ? "x" : "y"] : 0;
        X.add("game-ui/common/utils/getters.ts", {
            get getConstructionCost() {
                return $ee
            },
            set getConstructionCost(e) {
                $ee = e
            }
        });
        let qee = {
            "dlc-badge": "dlc-badge_i39",
            dlcBadge: "dlc-badge_i39"
        };
        X.add("game-ui/game/components/item-grid/badges/dlc-badge.module.scss", {
            get classes() {
                return qee
            },
            set classes(e) {
                Object.assign(qee, e)
            }
        });
        const Xee = qee;
        var Qee = ({icon: e, style: t, className: n})=>(0,
        z.jsx)("img", {
            src: e,
            className: Zu()(Xee.dlcBadge, n),
            style: t
        });
        X.add("game-ui/game/components/item-grid/badges/dlc-badge.tsx", {
            get DlcBadge() {
                return Qee
            },
            set DlcBadge(e) {
                Qee = e
            }
        });
        let Zee = {
            "item-grid": "item-grid_Yva",
            itemGrid: "item-grid_Yva",
            "one-rows": "one-rows_b2C",
            oneRows: "one-rows_b2C",
            content: "content_Per",
            row: "row_xSL",
            item: "item_a5m item-focused_FuT item-hover_WK8 item-active_Spn",
            thumbnail: "thumbnail_FDs",
            "not-enough-money": "not-enough-money_WAJ",
            notEnoughMoney: "not-enough-money_WAJ",
            "item-inner": "item-inner__PQ",
            itemInner: "item-inner__PQ",
            highlight: "highlight_jiw",
            lock: "lock_DDu",
            dlc: "dlc_Qm3",
            theme: "theme_RDs",
            "unique-asset": "unique-asset_Xt6",
            uniqueAsset: "unique-asset_Xt6",
            unique: "unique_Ck5",
            "already-built": "already-built_U1L",
            alreadyBuilt: "already-built_U1L",
            "not-enough-money-badge": "not-enough-money-badge_yev",
            notEnoughMoneyBadge: "not-enough-money-badge_yev",
            "page-indicators": "page-indicators_utY",
            pageIndicators: "page-indicators_utY",
            "page-indicator": "page-indicator_Mjd",
            pageIndicator: "page-indicator_Mjd",
            hint: "hint_Tu4"
        };
        X.add("game-ui/game/components/item-grid/item-grid.module.scss", {
            get classes() {
                return Zee
            },
            set classes(e) {
                Object.assign(Zee, e)
            }
        });
        const Jee = Zee;
        var ete = ({className: e, minRowCount: t=2, maxRowCount: n=2, columnCount: s=9, items: i, selectedItem: a, onSelectItem: o})=>{
            const r = (0,
            Y.useRef)(null)
              , l = (0,
            Y.useRef)(i)
              , [c,u] = (0,
            Y.useState)(i[0]?.entity)
              , d = (0,
            Y.useMemo)((()=>{
                if (l.current === i)
                    return c;
                {
                    const e = i.length ? i[0].entity : Zp;
                    return u(e),
                    e
                }
            }
            ), [c, i])
              , m = Od(Math.ceil(i.length / s), t, n)
              , h = m * s
              , g = Math.ceil(i.length / h)
              , p = Dm()
              , f = p ? d : a
              , [x,v] = (0,
            Y.useState)(nte(i, h, f))
              , _ = (0,
            Y.useMemo)((()=>{
                if (l.current === i)
                    return x;
                {
                    l.current = i;
                    const e = nte(i, h, f);
                    return v(e),
                    e
                }
            }
            ), [i, x, h, f]);
            (0,
            Y.useEffect)((()=>{
                i.length > 0 && u(i[0].entity)
            }
            ), [i]);
            const b = zee(i, h, _)
              , T = (0,
            Y.useCallback)(((e,t)=>{
                let n;
                if (e !== _) {
                    if (!Ur(f, Zp)) {
                        const a = e * h
                          , o = t <= 0 ? 0 : m - 1
                          , r = function(e, t) {
                            return Ur(t, Zp) ? -1 : e.findIndex((e=>Ur(e.entity, t)))
                        }(i, f);
                        let l = a + o * s + r % s;
                        if (l >= i.length) {
                            const e = a + o * s;
                            for (l = Math.min(l, i.length - 1); l >= i.length && l > e; )
                                l--
                        }
                        l = Od(l, 0, i.length),
                        n = i[l].entity
                    }
                } else
                    p && (n = i[t > 0 ? 0 : i.length - 1].entity);
                return v(e),
                !!n && (p ? u(n) : o(n),
                cp(lp.selectItem),
                !0)
            }
            ), [f, s, p, i, o, h, m, _])
              , E = (0,
            Y.useCallback)((e=>{
                const t = Od(e < 0 ? _ + 1 : _ - 1, 0, g - 1);
                T(t, e)
            }
            ), [_, g, T])
              , I = (0,
            Y.useMemo)((()=>({
                "Move Vertical": E
            })), [E]);
            (0,
            Y.useEffect)((()=>{
                const e = r.current;
                if (null === e)
                    return;
                const t = e=>{
                    e.preventDefault();
                    const t = e.deltaY > 0 ? -1 : e.deltaY < 0 ? 1 : 0;
                    E(t)
                }
                ;
                return e.addEventListener("wheel", t),
                ()=>{
                    e.removeEventListener("wheel", t)
                }
            }
            ), [E]);
            const S = (0,
            Y.useCallback)((e=>{
                o(e)
            }
            ), [o])
              , y = (0,
            Y.useMemo)((()=>(0,
            z.jsxs)(z.Fragment, {
                children: [(0,
                z.jsx)("div", {
                    ref: r,
                    className: Jee.content,
                    children: (0,
                    z.jsx)(Zg, {
                        allowLooping: "x",
                        focused: d ? Dr(d) : Sg,
                        onChange: e=>u(i.find((t=>Dr(t.entity) === e))?.entity || Zp),
                        children: [...Array(m)].map(((e,t)=>(0,
                        z.jsx)("div", {
                            className: Jee.row,
                            children: b.slice(t * s, (t + 1) * s).map((e=>(0,
                            z.jsx)(tte, {
                                item: e,
                                selected: Ur(e.entity, a),
                                onSelect: S
                            }, Dr(e.entity))))
                        }, t)))
                    })
                }), (0,
                z.jsx)("div", {
                    className: Jee.pageIndicators,
                    children: g > 1 && [...Array(g).keys()].map((e=>(0,
                    z.jsx)("div", {
                        onClick: ()=>T(e, 0),
                        className: Zu()(Jee.pageIndicator, e === _ && "selected")
                    }, e)))
                })]
            })), [d, m, g, i, b, s, a, S, _, T]);
            return (0,
            z.jsx)(Mg, {
                actions: I,
                children: (0,
                z.jsx)("div", {
                    className: Zu()(Jee.itemGrid, 1 === m && Jee.oneRows, e),
                    children: Mp(y)
                })
            })
        }
        ;
        const tte = ({item: e, selected: t, onSelect: n})=>{
            rg(e.uiTag, t && !e.locked),
            lg(e.uiTag, t && !e.locked);
            const [s,i] = (0,
            Y.useState)(!1)
              , [a,o] = (0,
            Y.useState)(!1)
              , r = (0,
            Y.useContext)(mee)
              , l = sl(FL)
              , c = (0,
            Y.useCallback)((()=>n(e.entity)), [e.entity, n])
              , u = (0,
            Y.useCallback)((()=>{
                o(!0),
                r && r.showDetails(e.entity)
            }
            ), [e.entity, r])
              , d = (0,
            Y.useCallback)((()=>{
                o(!1),
                r && r.hideDetails(e.entity)
            }
            ), [e.entity, r])
              , m = e.locked || e.placed
              , h = $ee(e)
              , g = !e.locked && h > 0 && l < h
              , p = Dm()
              , f = p && s;
            return (0,
            Y.useEffect)((()=>{
                null != r && (f ? r.showDetails(e.entity) : r.hideDetails(e.entity))
            }
            ), [e.entity, r, f]),
            (0,
            z.jsx)(mT, {
                uiTag: e.uiTag,
                disableBlinking: t,
                active: !e.locked,
                children: (0,
                z.jsx)(Ah, {
                    onFocusChange: i,
                    children: (0,
                    z.jsx)(Eg, {
                        tooltip: !r && (0,
                        z.jsx)(_c.Assets.NAME, {
                            hash: e.name
                        }),
                        children: (0,
                        z.jsx)(Yee, {
                            disabled: m,
                            onClick: c,
                            onDisabledClick: ()=>cp(lp.clickDisableButton),
                            children: (0,
                            z.jsxs)(U_, {
                                disableHint: !0,
                                focusKey: Dr(e.entity),
                                selected: t,
                                className: Zu()(Jee.item, g && Jee.notEnoughMoney),
                                onSelect: c,
                                disabled: m,
                                onMouseOver: u,
                                onMouseLeave: d,
                                children: [(0,
                                z.jsx)("div", {
                                    className: Jee.itemInner
                                }), (0,
                                z.jsx)("img", {
                                    src: e.icon,
                                    onError: q_,
                                    className: Jee.thumbnail
                                }), e.unique && (e.placed ? (0,
                                z.jsx)("img", {
                                    src: "Media/Game/Icons/AlreadyBuilt.svg",
                                    className: Zu()(Jee.uniqueAsset, Jee.alreadyBuilt)
                                }) : (0,
                                z.jsx)("img", {
                                    src: "Media/Game/Icons/Unique.svg",
                                    className: Zu()(Jee.uniqueAsset, (a || t || p && s) && Jee.unique)
                                })), g && !m && (0,
                                z.jsx)("img", {
                                    src: "Media/Game/Icons/NoMoney.svg",
                                    className: Jee.notEnoughMoneyBadge
                                }), e.highlight && (0,
                                z.jsx)(y1, {
                                    className: Jee.highlight
                                }), e.locked && (0,
                                z.jsx)(OZ, {
                                    className: Jee.lock
                                }), e.dlc && (0,
                                z.jsx)(Qee, {
                                    icon: e.dlc,
                                    className: Jee.dlc
                                }), e.theme && (0,
                                z.jsx)(Qee, {
                                    icon: e.theme,
                                    className: Jee.theme
                                }), (0,
                                z.jsx)(GT, {
                                    action: "Select",
                                    className: Jee.hint,
                                    active: !(e.locked || e.unique && e.placed)
                                }), (0,
                                z.jsx)(UT, {
                                    action: "Back",
                                    active: !s && t && "Default Tool" !== iP.value.id,
                                    className: Jee.hint
                                })]
                            })
                        })
                    })
                })
            })
        }
        ;
        function nte(e, t, n) {
            if (0 === t)
                return 0;
            if (Ur(n, Zp))
                return 0;
            const s = e.findIndex((e=>Ur(e.entity, n)));
            return -1 === s ? 0 : Math.trunc(s / t)
        }
        X.add("game-ui/game/components/item-grid/item-grid.tsx", {
            get ItemGrid() {
                return ete
            },
            set ItemGrid(e) {
                ete = e
            }
        });
        var ste = e=>{
            const t = sl(SL)
              , n = ll(xL, t)
              , s = sl(yL)
              , [i,a] = (0,
            Y.useState)(!1)
              , [o,r] = (0,
            Y.useState)(s);
            (0,
            Y.useEffect)((()=>r(s)), [s]),
            lg(vT.value?.assetGrid, i);
            const l = (0,
            Y.useCallback)((e=>LL(e, !0)), [])
              , c = (0,
            Y.useMemo)((()=>(0,
            z.jsx)(ete, {
                items: n,
                selectedItem: o,
                onSelectItem: l,
                ...e
            })), [n, l, e, o]);
            return (0,
            z.jsx)(Ah, {
                onFocusChange: a,
                children: c
            })
        }
        ;
        X.add("game-ui/game/components/asset-menu/asset-grid/asset-grid.tsx", {
            get AssetGrid() {
                return ste
            },
            set AssetGrid(e) {
                ste = e
            }
        });
        let ite = {
            "asset-panel": "asset-panel_VFR",
            assetPanel: "asset-panel_VFR",
            "gamepad-active": "gamepad-active_KKW",
            gamepadActive: "gamepad-active_KKW",
            "detail-container": "detail-container_E9q",
            detailContainer: "detail-container_E9q",
            hints: "hints_v_M",
            back: "back_VjD",
            hint: "hint_ByX"
        };
        X.add("game-ui/game/components/asset-menu/asset-menu.module.scss", {
            get classes() {
                return ite
            },
            set classes(e) {
                Object.assign(ite, e)
            }
        });
        const ate = ite;
        var ote = ({focusKey: e, className: t, onClose: n})=>{
            mp(up);
            const s = Mp(sl(IL))
              , i = Mp(sl(SL))
              , a = ll(fL, s)
              , o = Dm()
              , [r,l] = (0,
            Y.useState)(Zp)
              , c = (0,
            Y.useRef)(null)
              , u = !Ur(r, Zp)
              , d = (0,
            Y.useMemo)((()=>({
                showDetails: e=>{
                    c.current !== e && (l(e),
                    c.current = null)
                }
                ,
                hideDetails: e=>l((t=>Ur(t, e) ? Zp : t))
            })), []);
            (0,
            Y.useEffect)((()=>{
                if (o && u) {
                    const e = ym.subscribe((e=>{
                        e && (l(Zp),
                        c.current = r)
                    }
                    ))
                      , t = jm.subscribe((e=>{
                        e && (l(Zp),
                        c.current = r)
                    }
                    ));
                    return ()=>{
                        e.dispose(),
                        t.dispose()
                    }
                }
            }
            ), [o, r, u]);
            const m = ll(xT, s);
            rg(m?.uiTag, !m?.locked),
            lg(m?.uiTag);
            const h = (0,
            Y.useMemo)((()=>({
                "Default Tool UI": ()=>{
                    o && n()
                }
                ,
                Close: n,
                "Switch Tab": a.length >= 2 ? e=>{
                    const t = a.findIndex((e=>Ur(e.entity, i)));
                    if (e < 0) {
                        const e = Iw(t, a.length, !0);
                        null != e && (PL(a[e].entity),
                        cp(lp.selectPreviousItem))
                    } else if (e > 0) {
                        const e = Tw(t, a.length, !0);
                        null != e && (PL(a[e].entity),
                        cp(lp.selectNextItem))
                    }
                }
                : null
            })), [a, o, n, i])
              , g = sl(iP)
              , p = (0,
            Y.useCallback)((e=>e && o && LL(Zp, !0)), [o])
              , f = (0,
            Y.useMemo)((()=>(0,
            z.jsx)(ste, {})), []);
            return (0,
            z.jsx)(Mg, {
                actions: h,
                children: (0,
                z.jsx)(Ep, {
                    disabled: "Default Tool" !== g.id && o,
                    children: (0,
                    z.jsx)(mh, {
                        styles: dee,
                        children: (0,
                        z.jsxs)(Sp, {
                            focusKey: e,
                            className: t,
                            onFocusChange: p,
                            children: [(0,
                            z.jsx)("div", {
                                className: ate.detailContainer,
                                children: u && (0,
                                z.jsx)(Vee, {
                                    entity: r,
                                    selectedCategory: i,
                                    className: ate.detailPanel
                                }, "details")
                            }), (0,
                            z.jsx)(mee.Provider, {
                                value: d,
                                children: (0,
                                z.jsx)(rE, {
                                    className: Zu()(ate.assetPanel, o && ate.gamepadActive),
                                    header: a.length > 0 ? (0,
                                    z.jsx)(xee, {
                                        categories: a,
                                        selectedCategory: i,
                                        onChange: PL,
                                        onClose: n
                                    }) : void 0,
                                    children: f
                                })
                            })]
                        })
                    })
                })
            })
        }
        ;
        X.add("game-ui/game/components/asset-menu/asset-menu.tsx", {
            get AssetMenu() {
                return ote
            },
            set AssetMenu(e) {
                ote = e
            }
        });
        let rte = {
            header: "header_emp header_Bpo child-opacity-transition_nkS",
            content: "content__Ej content_AD7 child-opacity-transition_nkS",
            footer: "footer_kk9 footer_pD5 child-opacity-transition_nkS",
            title: "title_h2h title_zQN"
        };
        X.add("game-ui/common/panel/themes/light-opaque.module.scss", {
            get classes() {
                return rte
            },
            set classes(e) {
                Object.assign(rte, e)
            }
        });
        const lte = rte;
        var cte = Xr("avatars", "avatarsMap");
        X.add("game-ui/game/data-binding/avatars.ts", {
            get avatars() {
                return avatars
            },
            set avatars(e) {
                avatars = e
            }
        });
        let ute = {
            avatar: "avatar_zAS",
            initial: "initial_SNA"
        };
        X.add("game-ui/game/components/avatars/avatars.module.scss", {
            get classes() {
                return ute
            },
            set classes(e) {
                Object.assign(ute, e)
            }
        });
        const dte = ute;
        var mte = ({entity: e, className: t})=>{
            const n = ll(cte, e);
            return (0,
            z.jsx)("div", {
                className: Zu()(dte.avatar, t),
                style: {
                    backgroundColor: xN(n.color)
                },
                children: (0,
                z.jsx)("img", {
                    src: n.picture ?? "Media/Game/Misc/ChirperBlankAvatar.svg"
                })
            })
        }
          , hte = ({entity: e, className: t})=>{
            const n = ll(cte, e)
              , s = Wu(n.name).split(" ");
            return (0,
            z.jsx)("div", {
                className: Zu()(dte.avatar, t),
                style: {
                    backgroundColor: xN(n.color)
                },
                children: s.map(((e,t)=>(0,
                z.jsx)("div", {
                    className: dte.initial,
                    children: e.substring(0, 1)
                }, t)))
            })
        }
          , gte = ({entity: e, focusKey: t, showHint: n=!1, disabled: s, className: i, onSelect: a})=>{
            const o = ll(cte, e);
            return (0,
            z.jsx)(tb, {
                disableHint: !n,
                focusKey: t,
                src: o.picture ?? "Media/Game/Misc/ChirperBlankAvatar.svg",
                disabled: s,
                className: Zu()(dte.avatar, o.picture?.endsWith(".svg") && dte.padded, i),
                style: {
                    backgroundColor: xN(o.color)
                },
                onSelect: a
            })
        }
        ;
        X.add("game-ui/game/components/avatars/avatars.tsx", {
            get Avatar() {
                return mte
            },
            set Avatar(e) {
                mte = e
            },
            get AvatarInitials() {
                return hte
            },
            set AvatarInitials(e) {
                hte = e
            },
            get AvatarButton() {
                return gte
            },
            set AvatarButton(e) {
                gte = e
            }
        });
        let pte = {
            "chirp-layout": "chirp-layout_IRk",
            chirpLayout: "chirp-layout_IRk",
            content: "content_ysS",
            header: "header_eEy",
            sender: "sender_lDZ",
            date: "date_GKh",
            message: "message_Y0C",
            footer: "footer_3qO",
            "like-button": "like-button_LNZ",
            likeButton: "like-button_LNZ",
            liked: "liked_F9N",
            "select-hint": "select-hint_Y13",
            selectHint: "select-hint_Y13",
            "likes-hint": "likes-hint_Pko",
            likesHint: "likes-hint_Pko",
            "hint-icon": "hint-icon_wIk",
            hintIcon: "hint-icon_wIk"
        };
        X.add("game-ui/game/components/chirper/items/chirp-layout.module.scss", {
            get classes() {
                return pte
            },
            set classes(e) {
                Object.assign(pte, e)
            }
        });
        const fte = pte
          , xte = {
            tension: 30,
            friction: 10
        }
          , vte = {
            icon: fte.hintIcon
        };
        var _te = (0,
        Y.memo)((function({focusKey: e, chirp: t, className: n}) {
            const [s,i] = (0,
            Y.useState)(!1)
              , a = (0,
            Y.useCallback)((()=>{
                t.liked ? my(t.entity) : dy(t.entity)
            }
            ), [t.entity, t.liked])
              , o = (0,
            Y.useCallback)((()=>{
                hy(t.sender.link.target)
            }
            ), [t])
              , r = (0,
            Y.useMemo)((()=>({
                "Select Chirp Sender": ()=>{
                    cp(lp.selectItem),
                    o()
                }
                ,
                "Like Chirp": t.liked ? null : ()=>{
                    cp(lp.likeChirp),
                    dy(t.entity)
                }
                ,
                "Unlike Chirp": t.liked ? ()=>{
                    cp(lp.likeChirp),
                    my(t.entity)
                }
                : null
            })), [t.entity, t.liked, o])
              , l = sl(GO)
              , c = ZO(l, sl(HO))
              , u = (0,
            Y.useMemo)((()=>eP(l, t.date)), [t.date, l])
              , d = zu()
              , m = (0,
            Y.useMemo)((()=>d(t.sender.link.name)), [t.sender.link.name, d])
              , h = function(e, t) {
                const n = (0,
                Y.useMemo)((()=>e.links.reduce(((e,n,s)=>{
                    const i = t(n.name);
                    return e[`LINK_${s}`] = `<${n.target}|${i}>`,
                    e[`LINK_NAME_${s}`] = i,
                    e[`LINK_TARGET_${s}`] = n.target,
                    e
                }
                ), {})), [e.links, t]);
                return (0,
                z.jsx)(Cb, {
                    onLinkSelect: hy,
                    selectAction: "Select Chirp Sender",
                    renderer: bte,
                    children: (0,
                    z.jsx)(cc, {
                        id: e.messageId,
                        args: n
                    })
                })
            }(t, d)
              , g = Math.round(Sz(xte, t.likes, void 0, !0));
            return (0,
            z.jsx)(Mg, {
                actions: r,
                children: (0,
                z.jsxs)(Sp, {
                    focusKey: e,
                    className: Zu()(fte.chirpLayout, n),
                    onFocusChange: i,
                    children: [(0,
                    z.jsx)(UT, {
                        action: "Select Chirp Sender",
                        active: s,
                        className: fte.selectHint,
                        showLabel: !0,
                        theme: vte
                    }), (0,
                    z.jsx)(gte, {
                        focusKey: Sg,
                        entity: t.sender.entity,
                        disabled: "" === t.sender.link.target,
                        onSelect: o
                    }), (0,
                    z.jsxs)("div", {
                        className: fte.content,
                        children: [(0,
                        z.jsxs)("div", {
                            className: fte.header,
                            children: [(0,
                            z.jsx)(U_, {
                                disableHint: !0,
                                focusKey: Sg,
                                className: fte.sender,
                                onSelect: o,
                                disabled: "" === t.sender.link.target,
                                children: m
                            }), (0,
                            z.jsx)("div", {
                                className: fte.date,
                                children: XO(c, u) ? (0,
                                z.jsx)(wu, {
                                    value: u
                                }) : (0,
                                z.jsx)(ju, {
                                    value: u
                                })
                            })]
                        }), (0,
                        z.jsx)("div", {
                            className: fte.message,
                            children: h
                        }), (0,
                        z.jsxs)("div", {
                            className: fte.footer,
                            children: [(0,
                            z.jsx)(Oc, {
                                value: t.liked ? g + 1 : g,
                                unit: vc.IntegerRounded
                            }), (0,
                            z.jsx)(tb, {
                                disableHint: !0,
                                tinted: !0,
                                focusKey: Sg,
                                src: t.liked ? "Media/Glyphs/HeartFilled.svg" : "Media/Glyphs/HeartOutline.svg",
                                className: Zu()(fte.likeButton, t.liked && fte.liked),
                                selectSound: lp.likeChirp,
                                onSelect: a
                            }), (0,
                            z.jsx)(UT, {
                                action: "Like Chirp",
                                active: s,
                                className: fte.likesHint,
                                theme: vte
                            })]
                        })]
                    })]
                })
            })
        }
        ), ((e,t)=>e.chirp.liked === t.chirp.liked && e.chirp.likes === t.chirp.likes));
        const bte = new pb(((e,t,n)=>(0,
        z.jsx)(Sb, {
            disableHint: !0,
            linkData: e,
            children: t
        }, n)));
        X.add("game-ui/game/components/chirper/items/chirp-layout.tsx", {
            get ChirpLayout() {
                return _te
            },
            set ChirpLayout(e) {
                _te = e
            }
        });
        let Tte = {
            "item-transition": "item-transition_UXZ",
            itemTransition: "item-transition_UXZ",
            enter: "enter_eca",
            "enter-active": "enter-active_bH4",
            enterActive: "enter-active_bH4",
            exit: "exit_Jp9",
            "exit-active": "exit-active_rih",
            exitActive: "exit-active_rih",
            container: "container_Z2a",
            space: "space_emJ",
            "event-item": "event-item_q35",
            eventItem: "event-item_q35",
            "event-date": "event-date_xTF",
            eventDate: "event-date_xTF",
            "event-label": "event-label_BDa container_Z2a",
            eventLabel: "event-label_BDa container_Z2a"
        };
        X.add("game-ui/game/components/chirper/items/chirper-items.module.scss", {
            get classes() {
                return Tte
            },
            set classes(e) {
                Object.assign(Tte, e)
            }
        });
        const Ete = Tte;
        var Ite = ({focusKey: e, style: t, children: n})=>(0,
        z.jsx)(NS, {
            styles: Ete,
            children: (0,
            z.jsxs)("div", {
                className: Ete.itemTransition,
                style: t,
                children: [(0,
                z.jsx)(Sp, {
                    focusKey: e,
                    focusSound: lp.hoverItem,
                    className: Ete.container,
                    children: n
                }), (0,
                z.jsx)("div", {
                    className: Ete.space
                })]
            })
        })
          , Ste = ({focusKey: e, date: t, children: n})=>(0,
        z.jsx)(NS, {
            styles: Ete,
            children: (0,
            z.jsxs)("div", {
                className: Ete.itemTransition,
                children: [(0,
                z.jsxs)("div", {
                    className: Ete.eventItem,
                    children: [(0,
                    z.jsx)("div", {
                        className: Ete.eventDate,
                        children: (0,
                        z.jsx)(ju, {
                            value: t
                        })
                    }), (0,
                    z.jsx)(Sp, {
                        focusKey: e,
                        focusSound: lp.hoverItem,
                        className: Ete.eventLabel,
                        children: n
                    })]
                }), (0,
                z.jsx)("div", {
                    className: Ete.space
                })]
            })
        });
        X.add("game-ui/game/components/chirper/items/chirper-items.tsx", {
            get ContainerItem() {
                return Ite
            },
            set ContainerItem(e) {
                Ite = e
            },
            get EventItem() {
                return Ste
            },
            set EventItem(e) {
                Ste = e
            }
        });
        let yte = {
            "chirper-panel": "chirper-panel_kDN",
            chirperPanel: "chirper-panel_kDN",
            scrollable: "scrollable_SAp"
        };
        X.add("game-ui/game/components/chirper/chirper-panel.module.scss", {
            get classes() {
                return yte
            },
            set classes(e) {
                Object.assign(yte, e)
            }
        });
        const jte = yte;
        var Cte = ({className: e, onClose: t})=>{
            const n = Hm()
              , s = sl(cy)
              , i = (0,
            Y.useRef)(s[0]?.date);
            !i.current && s.length && (i.current = s[0].date);
            const a = XE()
              , o = (0,
            Y.useContext)(cd)
              , r = uH(130 * n, s.length, 2);
            rg(vT.value?.chirperPanel, s.length > 0);
            const l = (0,
            Y.useCallback)((e=>{
                const t = s[e];
                return e >= 0 && t ? (0,
                z.jsx)(Nte, {
                    chirp: t,
                    isFirst: 0 === e && t.date > i.current
                }, e) : null
            }
            ), [s]);
            return (0,
            Y.useEffect)((()=>{
                if (!o) {
                    const e = uy.subscribe((()=>{
                        a.smoothScrollTo(0, 0),
                        cp(lp.chirpEvent)
                    }
                    ));
                    return ()=>e.dispose()
                }
            }
            ), [o, a]),
            (0,
            z.jsx)(mT, {
                uiTag: vT.value?.chirperPanel,
                disableBlinking: !0,
                children: (0,
                z.jsx)(rE, {
                    theme: lte,
                    header: (0,
                    z.jsx)(dE, {
                        children: (0,
                        z.jsx)(_c.Chirper.PANEL_TITLE, {})
                    }),
                    transitionSounds: up,
                    className: Zu()(jte.chirperPanel, e),
                    onClose: t,
                    children: s.length > 0 ? (0,
                    z.jsx)(mT, {
                        uiTag: vT.value?.chirperPanelChirps,
                        children: (0,
                        z.jsx)(np, {
                            direction: kg.Vertical,
                            children: (0,
                            z.jsx)(rH, {
                                renderItem: l,
                                sizeProvider: r,
                                className: jte.scrollable
                            })
                        })
                    }) : (0,
                    z.jsx)(sJ, {
                        children: (0,
                        z.jsx)(Cb, {
                            children: (0,
                            z.jsx)(_c.Chirper.OPENING_MESSAGE, {})
                        })
                    })
                })
            })
        }
        ;
        const Nte = ({chirp: e, isFirst: t})=>t ? (0,
        z.jsx)(ud, {
            children: (0,
            z.jsx)(Ite, {
                children: (0,
                z.jsx)(_te, {
                    chirp: e
                })
            }, Dr(e.entity))
        }) : (0,
        z.jsx)(Ite, {
            children: (0,
            z.jsx)(_te, {
                chirp: e
            })
        }, Dr(e.entity));
        X.add("game-ui/game/components/chirper/chirper-panel.tsx", {
            get ChirperPanel() {
                return Cte
            },
            set ChirperPanel(e) {
                Cte = e
            }
        });
        let wte = {
            "detail-layout": "detail-layout_vME",
            detailLayout: "detail-layout_vME",
            scrollable: "scrollable_sRo",
            header: "header_Vle",
            "icon-container": "icon-container_FJv",
            iconContainer: "icon-container_FJv",
            icon: "icon_IKT",
            title: "title_UOl",
            description: "description_VWf",
            content: "content_AGf",
            bottom: "bottom_fjL"
        };
        X.add("game-ui/common/section/detail-layout/detail-layout.module.scss", {
            get classes() {
                return wte
            },
            set classes(e) {
                Object.assign(wte, e)
            }
        });
        const Ote = wte;
        var Pte = ({icon: e, title: t, description: n, bottom: s, className: i, children: a})=>{
            const o = Y.Children.count(a) > 0
              , r = Y.Children.count(s) > 0;
            return (0,
            z.jsxs)("div", {
                className: Zu()(Ote.detailLayout, i),
                children: [(0,
                z.jsxs)("div", {
                    className: Ote.header,
                    children: [e && (0,
                    z.jsx)("div", {
                        className: Ote.iconContainer,
                        children: (0,
                        z.jsx)("img", {
                            src: e,
                            className: Ote.icon
                        })
                    }), (0,
                    z.jsx)("div", {
                        className: Ote.title,
                        children: t
                    })]
                }), (0,
                z.jsxs)(mb, {
                    autoScroll: !0,
                    className: Ote.scrollable,
                    children: [(0,
                    z.jsx)("div", {
                        className: Ote.description,
                        children: (0,
                        z.jsx)(Cb, {
                            children: n
                        })
                    }), o && (0,
                    z.jsx)("div", {
                        className: Ote.content,
                        children: a
                    })]
                }), r && (0,
                z.jsx)(mb, {
                    autoScroll: !0,
                    className: Ote.bottom,
                    children: s
                })]
            })
        }
        ;
        X.add("game-ui/common/section/detail-layout/detail-layout.tsx", {
            get DetailLayout() {
                return Pte
            },
            set DetailLayout(e) {
                Pte = e
            }
        });
        let Lte = {
            "unlocking-label": "unlocking-label_ctB",
            unlockingLabel: "unlocking-label_ctB",
            locked: "locked_rgX",
            unlocked: "unlocked_rws"
        };
        X.add("game-ui/game/components/progression/unlocking-label/unlocking-label.module.scss", {
            get classes() {
                return Lte
            },
            set classes(e) {
                Object.assign(Lte, e)
            }
        });
        const Ate = Lte;
        var Mte = ({state: e})=>(0,
        z.jsx)("div", {
            className: Zu()("Locked" === e ? Ate.locked : Ate.unlocked, Ate.unlockingLabel),
            children: "Locked" === e ? (0,
            z.jsx)(_c.Common.LOCKED, {}) : (0,
            z.jsx)(_c.Common.UNLOCKED, {})
        });
        X.add("game-ui/game/components/progression/unlocking-label/unlocking-label.tsx", {
            get UnlockingLabel() {
                return Mte
            },
            set UnlockingLabel(e) {
                Mte = e
            }
        });
        let Rte = {
            "unlocking-requirements": "unlocking-requirements_Usp",
            unlockingRequirements: "unlocking-requirements_Usp"
        };
        X.add("game-ui/game/components/progression/unlocking-requirements/themes/detail-layout-unlocking-requirements.module.scss", {
            get classes() {
                return Rte
            },
            set classes(e) {
                Object.assign(Rte, e)
            }
        });
        const kte = Rte;
        let Dte = {
            "demand-bar": "demand-bar_WmU",
            demandBar: "demand-bar_WmU",
            icon: "icon_b9Y",
            locked: "locked_Lrk",
            lock: "lock_ezp"
        };
        X.add("game-ui/game/components/city-info-panel/city-info-demand/demand-section/demand-bar.module.scss", {
            get classes() {
                return Dte
            },
            set classes(e) {
                Object.assign(Dte, e)
            }
        });
        const Fte = Dte;
        var Ute = ({icon: e, color: t, demand: n, locked: s=!1})=>{
            const i = Hm()
              , a = 99 * i
              , o = 444 * i
              , r = a / 2
              , l = o - r
              , c = n * o
              , u = c < a ? c - r * (c / a) : c - r;
            return (0,
            z.jsxs)("div", {
                className: Fte.demandBar,
                children: [(0,
                z.jsx)("img", {
                    src: e,
                    onError: q_,
                    className: Zu()(Fte.icon, s && Fte.locked)
                }), (0,
                z.jsxs)("svg", {
                    viewBox: `0 0 ${o} ${a}`,
                    className: Fte.svg,
                    height: `${a}`,
                    width: `${o}`,
                    children: [(0,
                    z.jsxs)("linearGradient", {
                        id: "monochrome",
                        gradientUnits: "userSpaceOnUse",
                        x1: 0,
                        x2: o,
                        y1: 0,
                        y2: 0,
                        children: [(0,
                        z.jsx)("stop", {
                            offset: "0%",
                            stopColor: "rgba(0, 0, 0, 0.2)"
                        }), (0,
                        z.jsx)("stop", {
                            offset: "100%",
                            stopColor: "rgba(0, 0, 0, 0)"
                        })]
                    }), (0,
                    z.jsx)("polygon", {
                        points: `0,0 0,${a} ${l},${a} ${o},${r} ${l},0 0,0`,
                        fill: s ? "rgb(45, 46, 54)" : "rgba(0, 0, 0, 0.45)"
                    }), !s && (0,
                    z.jsxs)(z.Fragment, {
                        children: [(0,
                        z.jsx)("polygon", {
                            points: `0,0 0,${a} ${[u]},${a} ${[c]},${r} ${[u]},0 0,0`,
                            fill: t
                        }), (0,
                        z.jsx)("polygon", {
                            points: `0,0 0,${a} ${[u]},${a} ${[c]},${r} ${[u]},0 0,0`,
                            fill: "url(#monochrome)"
                        })]
                    })]
                }), s && (0,
                z.jsx)(OZ, {
                    className: Fte.lock
                })]
            })
        }
        ;
        X.add("game-ui/game/components/city-info-panel/city-info-demand/demand-section/demand-bar.tsx", {
            get DemandBar() {
                return Ute
            },
            set DemandBar(e) {
                Ute = e
            }
        });
        let Bte = {
            "demand-factors": "demand-factors_RlK",
            demandFactors: "demand-factors_RlK",
            factor: "factor_iZk",
            label: "label_qWr",
            icon: "icon_d3_"
        };
        X.add("game-ui/game/components/city-info-panel/city-info-demand/demand-section/demand-factors.module.scss", {
            get classes() {
                return Bte
            },
            set classes(e) {
                Object.assign(Bte, e)
            }
        });
        const Gte = Bte;
        var Vte = ({factors: e, locked: t=!1})=>(0,
        z.jsx)("div", {
            className: Gte.demandFactors,
            children: !t && e.filter((e=>null != e.factor)).map(((e,t)=>(0,
            z.jsx)(Hte, {
                factor: e
            }, t)))
        })
          , Hte = ({factor: e})=>(0,
        z.jsxs)("div", {
            className: Gte.factor,
            children: [(0,
            z.jsx)("img", {
                className: Gte.icon,
                src: e.weight < 0 ? "Media/Game/Misc/DemandFactorNegative.svg" : "Media/Game/Misc/DemandFactorPositive.svg",
                onError: q_
            }), (0,
            z.jsx)("div", {
                className: Gte.label,
                children: e.weight < 0 ? (0,
                z.jsx)(_c.CityInfoPanel.DEMAND_FACTOR_NEGATIVE, {
                    hash: e.factor
                }) : (0,
                z.jsx)(_c.CityInfoPanel.DEMAND_FACTOR_POSITIVE, {
                    hash: e.factor
                })
            })]
        });
        X.add("game-ui/game/components/city-info-panel/city-info-demand/demand-section/demand-factors.tsx", {
            get DemandFactors() {
                return Vte
            },
            set DemandFactors(e) {
                Vte = e
            },
            get DemandFactorDetail() {
                return Hte
            },
            set DemandFactorDetail(e) {
                Hte = e
            }
        });
        let Kte = {
            "demand-section": "demand-section_xG1",
            demandSection: "demand-section_xG1",
            title: "title_TAF title_PYv title_bwV",
            content: "content_Bmx"
        };
        X.add("game-ui/game/components/city-info-panel/city-info-demand/demand-section/demand-section.module.scss", {
            get classes() {
                return Kte
            },
            set classes(e) {
                Object.assign(Kte, e)
            }
        });
        const Wte = Kte;
        let zte = {
            section: "section_egX section_sop section_gUk",
            header: "header_LLa header_l0j undefined",
            content: "content_lbR content_flM content_owQ",
            locked: "locked_dpm"
        };
        X.add("game-ui/game/components/city-info-panel/city-info-demand/demand-section/demand-section-theme.module.scss", {
            get classes() {
                return zte
            },
            set classes(e) {
                Object.assign(zte, e)
            }
        });
        const Yte = zte;
        var $te = ({type: e, demand: t, unlocking: n, factors: s, className: i, onSelect: a, onHover: o})=>{
            const r = (0,
            Y.useCallback)((()=>o(e)), [o, e])
              , l = (0,
            Y.useCallback)((()=>cp(lp.hoverItem)), [])
              , c = (0,
            Y.useCallback)((()=>o(Qte.None)), [o])
              , u = (0,
            Y.useCallback)((t=>{
                t && (a(e),
                cp(lp.hoverItem))
            }
            ), [a, e])
              , d = (0,
            Y.useCallback)((()=>{
                a(e),
                cp(lp.selectItem)
            }
            ), [a, e])
              , m = {
                ...n3,
                ...Yte
            };
            return (0,
            z.jsx)(s3, {
                theme: m,
                header: (0,
                z.jsx)("div", {
                    className: Wte.title,
                    children: (0,
                    z.jsx)(_c.CityInfoPanel.DEMAND_TITLE, {
                        hash: Qte[e]
                    })
                }),
                onClick: d,
                onMouseOver: r,
                onMouseEnter: l,
                onMouseLeave: c,
                onFocusChange: u,
                className: Zu()(Wte.demandSection, n?.locked && m.locked, i),
                children: (0,
                z.jsxs)("div", {
                    className: Wte.content,
                    children: [(0,
                    z.jsx)(Ute, {
                        icon: Jte[e],
                        color: Zte[e],
                        demand: n?.locked ? 0 : t,
                        locked: n?.locked
                    }), (0,
                    z.jsx)(Vte, {
                        factors: s,
                        locked: n?.locked
                    })]
                })
            })
        }
        ;
        X.add("game-ui/game/components/city-info-panel/city-info-demand/demand-section/demand-section.tsx", {
            get DemandSection() {
                return $te
            },
            set DemandSection(e) {
                $te = e
            }
        });
        let qte = {
            "demand-page": "demand-page_X1J",
            demandPage: "demand-page_X1J",
            "main-column": "main-column_cMY",
            mainColumn: "main-column_cMY",
            scrollable: "scrollable_VIF",
            "info-column": "info-column_dEc",
            infoColumn: "info-column_dEc",
            "demand-row": "demand-row_CQi",
            demandRow: "demand-row_CQi"
        };
        X.add("game-ui/game/components/city-info-panel/city-info-demand/demand-page.module.scss", {
            get classes() {
                return qte
            },
            set classes(e) {
                Object.assign(qte, e)
            }
        });
        const Xte = qte;
        var Qte;
        !function(e) {
            e[e.None = 0] = "None",
            e[e.ResidentialLow = 1] = "ResidentialLow",
            e[e.ResidentialMedium = 2] = "ResidentialMedium",
            e[e.ResidentialHigh = 3] = "ResidentialHigh",
            e[e.Commercial = 4] = "Commercial",
            e[e.Industrial = 5] = "Industrial",
            e[e.Office = 6] = "Office"
        }(Qte || (Qte = {}));
        var Zte = ["", "#8BDB46", "#00AE1A", "#2B7600", "#46B2DB", "#DBC246", "#8D44AD"]
          , Jte = ["", "Media/Game/Icons/ZoneResidentialLow.svg", "Media/Game/Icons/ZoneResidentialMedium.svg", "Media/Game/Icons/ZoneResidentialHigh.svg", "Media/Game/Icons/ZoneCommercial.svg", "Media/Game/Icons/ZoneIndustrial.svg", "Media/Game/Icons/ZoneOffice.svg"];
        function ene() {
            const e = Dm()
              , t = sl($y)
              , n = sl(qy)
              , s = sl(Xy)
              , i = sl(Qy)
              , a = sl(Zy)
              , o = sl(Jy)
              , r = sl(ej)
              , l = sl(tj)
              , c = sl(nj)
              , u = sl(sj)
              , d = sl(ij)
              , m = sl(aj)
              , h = oN("ZonesOffice")
              , g = oN("Residential Medium")
              , p = oN("Residential High")
              , [f,x] = (0,
            Y.useState)(Qte.ResidentialLow)
              , [v,_] = (0,
            Y.useState)(Qte.None)
              , b = (0,
            Y.useCallback)((t=>{
                e || _(t)
            }
            ), [e]);
            (0,
            Y.useEffect)((()=>{
                e && _(Qte.None)
            }
            ), [e]);
            const T = (0,
            Y.useMemo)((()=>v !== Qte.None ? v : f), [v, f]);
            return (0,
            z.jsx)(mT, {
                uiTag: vT.value?.cityInfoPanelDemandPage,
                children: (0,
                z.jsx)("div", {
                    className: Xte.demandPage,
                    children: (0,
                    z.jsxs)(np, {
                        children: [(0,
                        z.jsx)("div", {
                            className: Xte.mainColumn,
                            children: (0,
                            z.jsxs)(mb, {
                                className: Xte.scrollable,
                                children: [(0,
                                z.jsx)($te, {
                                    type: Qte.ResidentialLow,
                                    demand: t,
                                    factors: r,
                                    onHover: b,
                                    onSelect: x,
                                    className: Zu()(f === Qte.ResidentialLow && "selected", Xte.demandRow)
                                }), (0,
                                z.jsx)($te, {
                                    type: Qte.ResidentialMedium,
                                    demand: n,
                                    factors: l,
                                    unlocking: g,
                                    onHover: b,
                                    onSelect: x,
                                    className: Zu()(f === Qte.ResidentialMedium && "selected", Xte.demandRow)
                                }), (0,
                                z.jsx)($te, {
                                    type: Qte.ResidentialHigh,
                                    demand: s,
                                    factors: c,
                                    unlocking: p,
                                    onHover: b,
                                    onSelect: x,
                                    className: Zu()(f === Qte.ResidentialHigh && "selected", Xte.demandRow)
                                }), (0,
                                z.jsx)($te, {
                                    type: Qte.Commercial,
                                    demand: i,
                                    factors: u,
                                    onHover: b,
                                    onSelect: x,
                                    className: Zu()(f === Qte.Commercial && "selected", Xte.demandRow)
                                }), (0,
                                z.jsx)($te, {
                                    type: Qte.Industrial,
                                    demand: a,
                                    factors: d,
                                    onHover: b,
                                    onSelect: x,
                                    className: Zu()(f === Qte.Industrial && "selected", Xte.demandRow)
                                }), (0,
                                z.jsx)($te, {
                                    type: Qte.Office,
                                    demand: o,
                                    factors: m,
                                    unlocking: h,
                                    onHover: b,
                                    onSelect: x,
                                    className: Zu()(f === Qte.Office && "selected", Xte.demandRow)
                                })]
                            })
                        }), (0,
                        z.jsx)(tne, {
                            id: Qte[T],
                            icon: Jte[T],
                            unlocking: T === Qte.Office && h || T === Qte.ResidentialMedium && g || T === Qte.ResidentialHigh && p || void 0
                        })]
                    })
                })
            })
        }
        const tne = ({id: e, icon: t, unlocking: n})=>(0,
        z.jsx)(s3, {
            focusKey: Sg,
            theme: n3,
            className: Xte.infoColumn,
            children: (0,
            z.jsx)(Pte, {
                icon: t,
                title: (0,
                z.jsx)(_c.CityInfoPanel.DEMAND_TITLE, {
                    hash: e
                }),
                description: (0,
                z.jsx)(_c.CityInfoPanel.DEMAND_DESCRIPTION, {
                    hash: e
                }),
                bottom: null != n && B6(n.requirements) ? (0,
                z.jsx)(U6, {
                    theme: kte,
                    requirements: n.requirements
                }) : void 0,
                children: n?.locked ? (0,
                z.jsx)(Mte, {
                    state: "Locked"
                }) : void 0
            }, e)
        });
        X.add("game-ui/game/components/city-info-panel/city-info-demand/demand-page.tsx", {
            get DemandType() {
                return Qte
            },
            set DemandType(e) {
                Qte = e
            },
            get demandColors() {
                return Zte
            },
            set demandColors(e) {
                Zte = e
            },
            get demandIcons() {
                return Jte
            },
            set demandIcons(e) {
                Jte = e
            },
            get CityInfoDemand() {
                return ene
            },
            set CityInfoDemand(e) {
                ene = e
            }
        });
        let nne = {
            "city-policy": "city-policy_QlE item-states_QjV",
            cityPolicy: "city-policy_QlE item-states_QjV",
            "disable-mouse-states": "disable-mouse-states_O0k",
            disableMouseStates: "disable-mouse-states_O0k",
            content: "content_Epe",
            left: "left_MRp",
            right: "right_Xny",
            icon: "icon_pZC",
            disabled: "disabled_mRJ",
            locked: "locked_qsG",
            lock: "lock_q6f",
            checkbox: "checkbox_nNF",
            control: "control_box",
            slider: "slider_RcP",
            gamepad: "gamepad_BRZ",
            label: "label_SXQ",
            hint: "hint_DZH"
        };
        X.add("game-ui/game/components/city-info-panel/city-info-policies/city-policy.module.scss", {
            get classes() {
                return nne
            },
            set classes(e) {
                Object.assign(nne, e)
            }
        });
        const sne = nne;
        var ine = ({policy: e, selected: t, className: n, onSelect: s, onHover: i})=>{
            const [a,o] = (0,
            Y.useState)(e.active)
              , [r,l] = (0,
            Y.useState)(e.data?.value ?? 0)
              , [c,u] = (0,
            Y.useState)(!1)
              , [d,m] = (0,
            Y.useState)(!1)
              , [h,g] = (0,
            Y.useState)(!1)
              , p = Dm()
              , f = (0,
            Y.useCallback)((()=>{
                AC(e.entity, !a, r),
                o(!a)
            }
            ), [a, e, r])
              , x = (0,
            Y.useCallback)((t=>{
                l(t),
                p && AC(e.entity, a, t)
            }
            ), [a, p, e])
              , v = (0,
            Y.useCallback)((()=>m(!0)), [])
              , _ = (0,
            Y.useCallback)((()=>{
                AC(e.entity, a, r),
                m(!1)
            }
            ), [a, e, r])
              , b = (0,
            Y.useCallback)((()=>{
                f(),
                cp(lp.selectItem)
            }
            ), [f])
              , T = (0,
            Y.useCallback)((()=>cp(lp.hoverItem)), [])
              , E = (0,
            Y.useCallback)((()=>i(null)), [i])
              , I = (0,
            Y.useCallback)((()=>i(e)), [i, e])
              , S = (0,
            Y.useCallback)((t=>{
                g(t),
                t && s(e)
            }
            ), [s, e])
              , y = (0,
            Y.useCallback)((()=>{
                s(e),
                cp(lp.selectItem)
            }
            ), [s, e])
              , j = (0,
            Y.useCallback)((()=>u(!1)), [])
              , C = (0,
            Y.useCallback)((()=>u(!0)), []);
            return (0,
            z.jsx)(mT, {
                uiTag: e.uiTag,
                children: (0,
                z.jsx)(Dg, {
                    onAction: e.locked ? void 0 : b,
                    children: (0,
                    z.jsx)(Sp, {
                        onClick: y,
                        onFocusChange: S,
                        onMouseOver: I,
                        onMouseEnter: T,
                        onMouseLeave: E,
                        className: Zu()(sne.cityPolicy, t && "selected", e.locked && sne.locked, !a && sne.disabled, (c || d) && sne.disableMouseStates, n),
                        children: (0,
                        z.jsxs)("div", {
                            className: sne.content,
                            children: [(0,
                            z.jsxs)("div", {
                                className: sne.left,
                                children: [(0,
                                z.jsx)("img", {
                                    src: e.icon,
                                    className: sne.icon
                                }), (0,
                                z.jsx)("div", {
                                    className: sne.label,
                                    children: (0,
                                    z.jsx)(_c.Policy.TITLE, {
                                        hash: e.id
                                    })
                                })]
                            }), (0,
                            z.jsxs)("div", {
                                className: sne.right,
                                children: [e.data && r && (0,
                                z.jsxs)("div", {
                                    className: sne.control,
                                    children: [(0,
                                    z.jsx)("div", {
                                        className: sne.label,
                                        children: (0,
                                        z.jsx)(Oc, {
                                            value: !e.locked && a ? r : 0,
                                            unit: e.data.unit
                                        })
                                    }), (0,
                                    z.jsx)(AA, {
                                        value: !e.locked && a ? r : 0,
                                        start: !e.locked && a ? e.data.range.min : 0,
                                        end: !e.locked && a ? e.data.range.max : 1,
                                        gamepadStep: e.data.step,
                                        onDragEnd: _,
                                        onDragStart: v,
                                        onChange: x,
                                        onMouseOver: C,
                                        onMouseLeave: j,
                                        disabled: !a || e.locked,
                                        className: Zu()(sne.slider, h && p && sne.gamepad)
                                    })]
                                }), e.locked && (0,
                                z.jsx)(OZ, {
                                    className: sne.lock
                                }), !e.locked && (0,
                                z.jsxs)(z.Fragment, {
                                    children: [(0,
                                    z.jsx)(UT, {
                                        action: "Select",
                                        active: !e.locked && h,
                                        className: sne.hint
                                    }), (0,
                                    z.jsx)(Hb, {
                                        onMouseOver: C,
                                        onMouseLeave: j,
                                        checked: a,
                                        onChange: f,
                                        focusKey: Sg,
                                        className: sne.checkbox
                                    })]
                                })]
                            })]
                        })
                    })
                })
            })
        }
        ;
        X.add("game-ui/game/components/city-info-panel/city-info-policies/city-policy.tsx", {
            get CityPolicy() {
                return ine
            },
            set CityPolicy(e) {
                ine = e
            }
        });
        let ane = {
            "policies-page": "policies-page_YYY",
            policiesPage: "policies-page_YYY",
            "main-column": "main-column_Pve",
            mainColumn: "main-column_Pve",
            "info-column": "info-column_G8F",
            infoColumn: "info-column_G8F",
            scrollable: "scrollable_SFL"
        };
        X.add("game-ui/game/components/city-info-panel/city-info-policies/policies-page.module.scss", {
            get classes() {
                return ane
            },
            set classes(e) {
                Object.assign(ane, e)
            }
        });
        const one = ane;
        var rne = ()=>{
            const e = Dm()
              , t = sl(PC)
              , [n,s] = (0,
            Y.useState)(t.length > 0 ? t.find((e=>!e.locked)) ?? t[0] : null)
              , [i,a] = (0,
            Y.useState)(null)
              , o = (0,
            Y.useCallback)((t=>{
                e || a(t)
            }
            ), [e]);
            (0,
            Y.useEffect)((()=>{
                e && a(null)
            }
            ), [e]);
            const r = (0,
            Y.useMemo)((()=>i ?? n), [i, n]);
            return (0,
            z.jsx)(mT, {
                uiTag: vT.value?.cityInfoPanelPoliciesPage,
                children: (0,
                z.jsxs)("div", {
                    className: one.policiesPage,
                    children: [(0,
                    z.jsx)(s3, {
                        theme: n3,
                        className: one.mainColumn,
                        children: (0,
                        z.jsx)(np, {
                            children: (0,
                            z.jsx)(mb, {
                                className: one.scrollable,
                                children: t.map((e=>(0,
                                z.jsx)(ine, {
                                    policy: e,
                                    selected: Ur(e.entity, n?.entity),
                                    onSelect: s,
                                    onHover: o
                                }, e.id)))
                            })
                        })
                    }), (0,
                    z.jsx)(lne, {
                        policy: r
                    })]
                })
            })
        }
        ;
        const lne = ({policy: e})=>(0,
        z.jsx)(s3, {
            focusKey: Sg,
            theme: n3,
            className: one.infoColumn,
            children: e && (0,
            z.jsx)(Pte, {
                icon: e.icon,
                title: (0,
                z.jsx)(_c.Policy.TITLE, {
                    hash: e.id
                }),
                description: (0,
                z.jsx)(_c.Policy.DESCRIPTION, {
                    hash: e.id
                }),
                bottom: e.locked && (0,
                z.jsx)(U6, {
                    theme: kte,
                    requirements: e.requirements
                }),
                children: e.locked && (0,
                z.jsx)(Mte, {
                    state: "Locked"
                })
            }, Dr(e.entity))
        });
        X.add("game-ui/game/components/city-info-panel/city-info-policies/policies-page.tsx", {
            get CityInfoPolicies() {
                return rne
            },
            set CityInfoPolicies(e) {
                rne = e
            }
        });
        let cne = {
            "city-info-panel": "city-info-panel_Eha",
            cityInfoPanel: "city-info-panel_Eha"
        };
        X.add("game-ui/game/components/city-info-panel/city-info-panel.module.scss", {
            get classes() {
                return cne
            },
            set classes(e) {
                Object.assign(cne, e)
            }
        });
        const une = cne;
        var dne = ({selectedTab: e, onSelectTab: t, onClose: n})=>{
            cg(vT.value?.cityInfoPanel);
            const s = oN("Policies")
              , i = Dm();
            return (0,
            z.jsx)(rE, {
                header: (0,
                z.jsxs)(z.Fragment, {
                    children: [(0,
                    z.jsx)(dE, {
                        children: (0,
                        z.jsx)(_c.CityInfoPanel.TITLE, {})
                    }), (0,
                    z.jsxs)(MZ, {
                        children: [(0,
                        z.jsx)(RZ, {
                            id: Xv.Demand,
                            uiTag: vT.value?.cityInfoPanelDemandTab,
                            selectedId: e,
                            onSelect: t,
                            children: (0,
                            z.jsx)(_c.CityInfoPanel.TAB, {
                                hash: Xv[Xv.Demand]
                            })
                        }), (0,
                        z.jsx)(H6, {
                            locked: s.locked,
                            requirements: s.requirements,
                            forceVisible: i && e === Xv.Policies,
                            children: (0,
                            z.jsx)(RZ, {
                                id: Xv.Policies,
                                uiTag: vT.value?.cityInfoPanelPoliciesTab,
                                selectedId: e,
                                disabled: s.locked,
                                locked: s.locked,
                                onSelect: t,
                                children: (0,
                                z.jsx)(_c.CityInfoPanel.TAB, {
                                    hash: Xv[Xv.Policies]
                                })
                            })
                        })]
                    })]
                }),
                transitionSounds: up,
                className: une.cityInfoPanel,
                onClose: n,
                children: (0,
                z.jsx)(AZ, {
                    tabs: [Xv.Demand, Xv.Policies],
                    selectedTab: e,
                    onSelect: t,
                    children: mne(s.locked ? Xv.Demand : e)
                })
            })
        }
        ;
        function mne(e) {
            switch (e) {
            case Xv.Demand:
                return (0,
                z.jsx)(ene, {});
            case Xv.Policies:
                return (0,
                z.jsx)(rne, {});
            default:
                return
            }
        }
        X.add("game-ui/game/components/city-info-panel/city-info-panel.tsx", {
            get CityInfoPanel() {
                return dne
            },
            set CityInfoPanel(e) {
                dne = e
            }
        });
        let hne = {
            "money-field": "money-field_bzk",
            moneyField: "money-field_bzk",
            primary: "primary__xr",
            secondary: "secondary_HCa",
            positive: "positive_HL9",
            negative: "negative_PiU",
            sign: "sign__wn",
            content: "content_pa5"
        };
        X.add("game-ui/game/components/economy-panel/components/money-field/money-field.module.scss", {
            get classes() {
                return hne
            },
            set classes(e) {
                Object.assign(hne, e)
            }
        });
        const gne = hne;
        var pne = ({value: e, importance: t, className: n})=>(0,
        z.jsxs)("div", {
            className: Zu()(gne.moneyField, t && gne[t], $p(gne, e), n),
            children: [(0,
            z.jsx)("div", {
                className: gne.sign,
                children: fne(e)
            }), (0,
            z.jsx)("div", {
                className: gne.content,
                children: (0,
                z.jsx)(Oc, {
                    value: Math.abs(e),
                    unit: vc.Money
                })
            })]
        });
        function fne(e) {
            return e < 0 ? "−" : e > 0 ? "+" : ""
        }
        X.add("game-ui/game/components/economy-panel/components/money-field/money-field.tsx", {
            get NumberField() {
                return pne
            },
            set NumberField(e) {
                pne = e
            },
            get sign() {
                return fne
            },
            set sign(e) {
                fne = e
            }
        });
        let xne = {
            chartFontColor: "rgba(255, 255, 255, 0.6)",
            chartLineColor: "rgba(255, 255, 255, 0.1)",
            "budget-chart": "budget-chart_CSi",
            budgetChart: "budget-chart_CSi",
            chart: "chart_xgb"
        };
        X.add("game-ui/game/components/economy-panel/budget-page/budget-chart/budget-chart.module.scss", {
            get classes() {
                return xne
            },
            set classes(e) {
                Object.assign(xne, e)
            }
        });
        const vne = xne;
        var _ne = ({selectedId: e, className: t})=>{
            const n = sl(fj)
              , s = sl(xj)
              , i = sl(vj)
              , a = sl(_j)
              , o = (0,
            Y.useMemo)((()=>({
                labels: ["Budget"],
                datasets: [...bne(n, s, 1, "income", e), ...bne(i, a, -1, "expenses", e)]
            })), [n, s, e, i, a])
              , r = function() {
                const e = Ac(vc.Money)
                  , t = sl(Ll);
                return {
                    layout: {
                        padding: {
                            top: 12,
                            right: 24,
                            bottom: 0,
                            left: 12
                        }
                    },
                    scales: {
                        y: {
                            stacked: !0,
                            suggestedMax: 1e3,
                            beginAtZero: !0,
                            grid: {
                                color: vne.chartLineColor,
                                lineWidth: 2
                            },
                            border: {
                                color: vne.chartLineColor,
                                width: 2
                            },
                            ticks: {
                                maxTicksLimit: 10,
                                font: {
                                    size: 10 * t
                                },
                                color: vne.chartFontColor,
                                padding: 10,
                                autoSkip: !1,
                                callback: t=>e(t)
                            }
                        },
                        x: {
                            stacked: !0,
                            grid: {
                                display: !1
                            },
                            ticks: {
                                display: !1
                            }
                        }
                    }
                }
            }();
            return (0,
            z.jsx)(s3, {
                focusKey: Sg,
                theme: n3,
                className: Zu()(vne.budgetChart, t),
                children: (0,
                z.jsx)(nY, {
                    type: "bar",
                    data: o,
                    options: r,
                    className: vne.chart
                })
            })
        }
        ;
        function bne(e, t, n, s, i) {
            return e.map((e=>({
                label: e.id,
                data: [n * bj(e, t)],
                backgroundColor: xN(e.color),
                barPercentage: e.id === i ? .9 : .5,
                categoryPercentage: .7,
                stack: s
            }))).reverse()
        }
        X.add("game-ui/game/components/economy-panel/budget-page/budget-chart/budget-chart.tsx", {
            get BudgetChart() {
                return _ne
            },
            set BudgetChart(e) {
                _ne = e
            }
        });
        let Tne = {
            field: "field_ZZV",
            header: "header_FoF",
            icon: "icon_Vso",
            label: "label_XR5",
            content: "content_N5U",
            positive: "positive_Deq",
            negative: "negative_iIx"
        };
        X.add("game-ui/game/components/economy-panel/components/table-row/table-row.module.scss", {
            get classes() {
                return Tne
            },
            set classes(e) {
                Object.assign(Tne, e)
            }
        });
        const Ene = Tne;
        let Ine = {
            "detail-layout": "detail-layout_TAz",
            detailLayout: "detail-layout_TAz",
            label: "label_ETw"
        };
        X.add("game-ui/game/components/economy-panel/budget-page/budget-item-detail/budget-item-detail.module.scss", {
            get classes() {
                return Ine
            },
            set classes(e) {
                Object.assign(Ine, e)
            }
        });
        const Sne = Ine
          , yne = {
            ...Ene,
            label: Sne.label
        };
        var jne = ({item: e, values: t, className: n})=>(0,
        z.jsx)(s3, {
            focusKey: Sg,
            theme: n3,
            className: Zu()(Sne.budgetItemDetail, n),
            children: null != e && (0,
            z.jsx)(Pte, {
                icon: e.icon,
                title: (0,
                z.jsx)(_c.EconomyPanel.BUDGET_ITEM, {
                    hash: e.id
                }),
                description: (0,
                z.jsx)(_c.EconomyPanel.BUDGET_ITEM_DESCRIPTION, {
                    hash: e.id
                }),
                bottom: e.sources.map(((e,n)=>(0,
                z.jsx)(H9, {
                    label: (0,
                    z.jsx)(_c.EconomyPanel.BUDGET_SUB_ITEM, {
                        hash: e.id
                    }),
                    theme: yne,
                    className: $p(Ene, t[e.index]),
                    children: (0,
                    z.jsx)(Oc, {
                        value: t[e.index],
                        unit: vc.Money
                    })
                }, n))),
                className: Sne.detailLayout
            }, e.id)
        });
        X.add("game-ui/game/components/economy-panel/budget-page/budget-item-detail/budget-item-detail.tsx", {
            get BudgetItemDetail() {
                return jne
            },
            set BudgetItemDetail(e) {
                jne = e
            }
        });
        let Cne = {
            "budget-section": "budget-section_F_L",
            budgetSection: "budget-section_F_L",
            header: "header__ZM",
            item: "item_fWX item_It6 item-mouse-states_Fmi item-selected_tAM item-focused_FuT",
            selected: "selected_yiI",
            "title-column": "title-column_u4_",
            titleColumn: "title-column_u4_",
            title: "title_XJK",
            "legend-color": "legend-color_jK2",
            legendColor: "legend-color_jK2",
            "value-column": "value-column_Tid",
            valueColumn: "value-column_Tid",
            "value-field": "value-field_M8j",
            valueField: "value-field_M8j",
            "value-column-divider": "value-column-divider_afM",
            valueColumnDivider: "value-column-divider_afM"
        };
        X.add("game-ui/game/components/economy-panel/budget-page/budget-section/budget-section.module.scss", {
            get classes() {
                return Cne
            },
            set classes(e) {
                Object.assign(Cne, e)
            }
        });
        const Nne = Cne;
        var wne = Y.memo((function({title: e, total: t, items: n, values: s, className: i, onMouseEnter: a, onMouseLeave: o, uiTag: r, selectedItem: l, onItemSelected: c}) {
            const u = (0,
            Y.useContext)(Ju);
            return (0,
            z.jsx)(s3, {
                focusKey: Sg,
                theme: n3,
                className: Zu()(Nne.budgetSection, i),
                header: (0,
                z.jsx)(mT, {
                    uiTag: r,
                    children: (0,
                    z.jsxs)("div", {
                        className: Nne.header,
                        children: [(0,
                        z.jsx)("div", {
                            className: Nne.titleColumn,
                            children: e
                        }), (0,
                        z.jsx)("div", {
                            className: Nne.valueColumn,
                            children: (0,
                            z.jsx)(pne, {
                                value: t,
                                importance: "secondary",
                                className: Nne.valueField
                            })
                        })]
                    })
                }),
                children: (0,
                z.jsxs)(Ju.Provider, {
                    value: u,
                    children: [n.map((e=>e.active ? (0,
                    z.jsx)(One, {
                        item: e,
                        values: s,
                        onMouseEnter: a,
                        onMouseLeave: o,
                        selected: l === e.id,
                        onSelect: c
                    }, e.id) : null)), (0,
                    z.jsx)("div", {
                        className: Nne.valueColumnDivider
                    })]
                })
            })
        }
        ), ((e,t)=>Kr(e, t, 5)));
        const One = ({item: e, values: t, onMouseEnter: n, onMouseLeave: s, selected: i, onSelect: a})=>{
            const o = bj(e, t)
              , r = (0,
            Y.useCallback)((()=>n(e.id)), [n, e.id])
              , l = (0,
            Y.useCallback)((()=>s(e.id)), [s, e.id])
              , c = (0,
            Y.useCallback)((()=>a(i ? null : e.id)), [e.id, a, i]);
            return (0,
            z.jsxs)(Sp, {
                focusKey: e.id,
                className: Zu()(Nne.item, i && Nne.selected),
                onMouseEnter: r,
                onMouseLeave: l,
                onClick: c,
                children: [(0,
                z.jsxs)("div", {
                    className: Nne.titleColumn,
                    children: [(0,
                    z.jsx)("div", {
                        className: Nne.legendColor,
                        style: {
                            backgroundColor: xN(e.color)
                        }
                    }), (0,
                    z.jsx)("div", {
                        className: Nne.title,
                        children: (0,
                        z.jsx)(_c.EconomyPanel.BUDGET_ITEM, {
                            hash: e.id
                        })
                    })]
                }), (0,
                z.jsx)("div", {
                    className: Nne.valueColumn,
                    children: (0,
                    z.jsx)(pne, {
                        value: o,
                        className: Nne.valueField
                    })
                })]
            })
        }
        ;
        X.add("game-ui/game/components/economy-panel/budget-page/budget-section/budget-section.tsx", {
            get BudgetSection() {
                return wne
            },
            set BudgetSection(e) {
                wne = e
            }
        });
        let Pne = {
            "budget-page": "budget-page_SIZ",
            budgetPage: "budget-page_SIZ",
            "chart-column": "chart-column_Y0V",
            chartColumn: "chart-column_Y0V",
            "main-column": "main-column_unC",
            mainColumn: "main-column_unC",
            "info-column": "info-column_K89",
            infoColumn: "info-column_K89",
            "budget-section": "budget-section_zaZ",
            budgetSection: "budget-section_zaZ",
            "total-section": "total-section_TGf",
            totalSection: "total-section_TGf",
            "total-content": "total-content_GKQ",
            totalContent: "total-content_GKQ",
            "total-label": "total-label_Uhe",
            totalLabel: "total-label_Uhe",
            "total-column": "total-column_Ikw",
            totalColumn: "total-column_Ikw",
            "total-field": "total-field_zjM",
            totalField: "total-field_zjM",
            scrollable: "scrollable_WWI"
        };
        X.add("game-ui/game/components/economy-panel/budget-page/budget-page.module.scss", {
            get classes() {
                return Pne
            },
            set classes(e) {
                Object.assign(Pne, e)
            }
        });
        const Lne = Pne;
        var Ane = ()=>{
            cg(vT.value?.economyPanelBudgetPage);
            const e = sl(fj)
              , t = sl(xj)
              , n = sl(vj)
              , s = sl(_j)
              , i = sl(gj)
              , a = sl(pj)
              , o = i + a
              , [r,l] = (0,
            Y.useState)(null)
              , [c,u] = (0,
            Y.useState)(_w(e, "id"))
              , [d,m] = (0,
            Y.useState)(null)
              , h = (0,
            Y.useCallback)((e=>m(e)), [])
              , g = (0,
            Y.useCallback)((e=>m((t=>t === e ? null : t))), [])
              , p = (0,
            Y.useCallback)((e=>"string" == typeof e && u(e)), [])
              , f = Dm()
              , x = f ? c : d || r
              , v = e.find((e=>e.id === x))
              , _ = n.find((e=>e.id === x));
            return (0,
            z.jsxs)("div", {
                className: Lne.budgetPage,
                children: [(0,
                z.jsx)(_ne, {
                    selectedId: x,
                    className: Lne.chartColumn
                }), (0,
                z.jsx)("div", {
                    className: Lne.mainColumn,
                    children: (0,
                    z.jsxs)(Zg, {
                        focused: c,
                        direction: kg.Vertical,
                        onChange: p,
                        onRefocus: Jg,
                        children: [(0,
                        z.jsxs)(mb, {
                            className: Lne.scrollable,
                            children: [(0,
                            z.jsx)(wne, {
                                title: (0,
                                z.jsx)(_c.EconomyPanel.INCOME_SECTION_TITLE, {}),
                                total: i,
                                items: e,
                                values: t,
                                className: Lne.budgetSection,
                                onMouseEnter: h,
                                onMouseLeave: g,
                                selectedItem: f ? null : r,
                                onItemSelected: l,
                                uiTag: vT.value?.economyPanelBudgetRevenue
                            }), (0,
                            z.jsx)(wne, {
                                title: (0,
                                z.jsx)(_c.EconomyPanel.EXPENSES_SECTION_TITLE, {}),
                                total: a,
                                items: n,
                                values: s,
                                className: Lne.budgetSection,
                                onMouseEnter: h,
                                onMouseLeave: g,
                                selectedItem: f ? null : r,
                                onItemSelected: l,
                                uiTag: vT.value?.economyPanelBudgetExpenses
                            })]
                        }), (0,
                        z.jsx)(mT, {
                            uiTag: vT.value?.economyPanelBudgetBalance,
                            children: (0,
                            z.jsx)(s3, {
                                focusKey: Sg,
                                theme: n3,
                                className: Lne.totalSection,
                                children: (0,
                                z.jsxs)("div", {
                                    className: Lne.totalContent,
                                    children: [(0,
                                    z.jsx)("div", {
                                        className: Lne.totalLabel,
                                        children: (0,
                                        z.jsx)(_c.EconomyPanel.MONTHLY_BALANCE, {})
                                    }), (0,
                                    z.jsx)("div", {
                                        className: Lne.totalColumn,
                                        children: (0,
                                        z.jsx)(pne, {
                                            value: o,
                                            importance: "primary",
                                            className: Lne.totalField
                                        })
                                    })]
                                })
                            })
                        })]
                    })
                }), (0,
                z.jsx)(jne, {
                    item: v ?? _ ?? null,
                    values: null != v ? t : s,
                    className: Lne.infoColumn
                })]
            })
        }
        ;
        X.add("game-ui/game/components/economy-panel/budget-page/budget-page.tsx", {
            get BudgetPage() {
                return Ane
            },
            set BudgetPage(e) {
                Ane = e
            }
        });
        let Mne = {
            "loan-form": "loan-form_Ohg",
            loanForm: "loan-form_Ohg",
            "slider-column": "slider-column_kts",
            sliderColumn: "slider-column_kts",
            gamepad: "gamepad_Gvj",
            slider: "slider_RYc",
            balloon: "balloon_Jlj",
            positive: "positive_WFM",
            negative: "negative_NTL",
            "balloon-content": "balloon-content_QEH",
            balloonContent: "balloon-content_QEH",
            limit: "limit_ZPi",
            "direction-labels": "direction-labels_KdN",
            directionLabels: "direction-labels_KdN",
            arrow: "arrow_AXM",
            "less-label": "less-label_ZOG",
            lessLabel: "less-label_ZOG",
            "less-arrow": "less-arrow_Oio arrow_AXM",
            lessArrow: "less-arrow_Oio arrow_AXM",
            space: "space_zFI",
            "more-label": "more-label_PtR",
            moreLabel: "more-label_PtR",
            "more-arrow": "more-arrow_odN arrow_AXM",
            moreArrow: "more-arrow_odN arrow_AXM",
            "button-column": "button-column_mFb",
            buttonColumn: "button-column_mFb",
            "button-row": "button-row_a78",
            buttonRow: "button-row_a78",
            button: "button_aQu",
            "accept-button": "accept-button_uUd button_aQu button_SsC item-states_QjV",
            acceptButton: "accept-button_uUd button_aQu button_SsC item-states_QjV",
            "reset-button": "reset-button_I2B button_aQu button_eqb item-states_QjV",
            resetButton: "reset-button_I2B button_aQu button_eqb item-states_QjV",
            "slider-container": "slider-container_f8H",
            sliderContainer: "slider-container_f8H",
            "slider-hint": "slider-hint_NMq",
            sliderHint: "slider-hint_NMq",
            "button-hint": "button-hint_qO6",
            buttonHint: "button-hint_qO6",
            "hint-spaceholder": "hint-spaceholder_iYD",
            hintSpaceholder: "hint-spaceholder_iYD"
        };
        X.add("game-ui/game/components/economy-panel/loan-page/loan-adjustment/loan-form/loan-form.module.scss", {
            get classes() {
                return Mne
            },
            set classes(e) {
                Object.assign(Mne, e)
            }
        });
        const Rne = Mne;
        let kne = {
            slider: "slider_iN8 slider_pUS",
            edge: "edge_Qvg",
            positive: "positive_kiJ",
            negative: "negative_HpK",
            "left-edge": "left-edge_Rrm edge_Qvg",
            leftEdge: "left-edge_Rrm edge_Qvg",
            "right-edge": "right-edge_ocL edge_Qvg",
            rightEdge: "right-edge_ocL edge_Qvg",
            "track-bounds": "track-bounds_Bp4",
            trackBounds: "track-bounds_Bp4",
            thumb: "thumb_yXN thumb_WZt"
        };
        X.add("game-ui/game/components/economy-panel/loan-page/loan-adjustment/loan-form/loan-slider.module.scss", {
            get classes() {
                return kne
            },
            set classes(e) {
                Object.assign(kne, e)
            }
        });
        const Dne = kne;
        let Fne = {
            balloon: "balloon__3G balloon_H23",
            container: "container_VsE container_jfe",
            arrow: "arrow_cyp arrow_Xfn",
            content: "content_tDr content_JQV"
        };
        X.add("game-ui/game/components/economy-panel/loan-page/loan-adjustment/loan-form/loan-slider-balloon.module.scss", {
            get classes() {
                return Fne
            },
            set classes(e) {
                Object.assign(Fne, e)
            }
        });
        const Une = Fne;
        var Bne = ()=>{
            const e = Dm()
              , [t,n] = (0,
            Y.useState)(!1)
              , [s,i] = (0,
            Y.useState)(!1)
              , a = sl(Ej)
              , o = sl(Ij)
              , r = sl(Sj)
              , l = r.amount - o.amount
              , c = Math.abs(l) > .5
              , u = (0,
            Y.useRef)(r.amount)
              , d = function(e) {
                const t = Math.pow(10, Math.max(Vne(e) - Vne(Gne / 5), 0))
                  , n = t / 2
                  , s = t
                  , i = 5 * t;
                return e / n <= Gne ? Math.max(n, 1) : e / s <= Gne ? Math.max(s, 1) : Math.max(i, 1)
            }(a)
              , m = (0,
            Y.useCallback)(((e,t,n)=>{
                const s = e + n * (t - e)
                  , i = e + Math.round(n * (t - e) / d) * d;
                return Math.abs(o.amount - s) < Math.abs(i - s) ? o.amount : Od(i, Math.min(e, t), Math.max(e, t))
            }
            ), [o.amount, d])
              , h = (0,
            Y.useMemo)((()=>({
                "Change Slider Value": e=>{
                    let t = r.amount;
                    e > 0 ? t = Math.floor((r.amount + d) / d) * d : e < 0 && (t = Math.ceil((r.amount - d) / d) * d),
                    (o.amount > r.amount && t > o.amount || o.amount < r.amount && t < o.amount) && (t = o.amount),
                    yj(t)
                }
            })), [o.amount, r.amount, d]);
            return (0,
            Y.useEffect)((()=>{
                e && u.current !== r.amount && (cp(PA.drag),
                u.current = r.amount)
            }
            ), [e, r.amount]),
            (0,
            z.jsx)(Mg, {
                actions: h,
                children: (0,
                z.jsxs)(Sp, {
                    className: Rne.loanForm,
                    children: [(0,
                    z.jsxs)("div", {
                        className: Zu()(Rne.sliderColumn, e && Rne.gamepad),
                        children: [(0,
                        z.jsx)("div", {
                            className: Rne.limit,
                            children: (0,
                            z.jsx)(_c.EconomyPanel.LOAN_FORM_LIMIT, {
                                LOAN_LIMIT: (0,
                                z.jsx)(Oc, {
                                    value: a,
                                    unit: vc.Money
                                })
                            })
                        }), (0,
                        z.jsxs)("div", {
                            className: Rne.sliderContainer,
                            children: [(0,
                            z.jsx)(UT, {
                                action: "Change Slider Value",
                                className: Rne.sliderHint
                            }), (0,
                            z.jsx)(mT, {
                                uiTag: vT.value?.economyPanelLoansSlider,
                                children: (0,
                                z.jsxs)(AA, {
                                    focusKey: Sg,
                                    value: r.amount,
                                    start: 0,
                                    end: a,
                                    valueTransformer: m,
                                    thumb: (0,
                                    z.jsxs)(z.Fragment, {
                                        children: [(0,
                                        z.jsx)("div", {
                                            className: Dne.thumb
                                        }), c && (0,
                                        z.jsx)(xh, {
                                            alignment: "center",
                                            direction: "down",
                                            theme: Une,
                                            className: Rne.balloon,
                                            children: (0,
                                            z.jsx)("div", {
                                                className: Zu()(Rne.balloonContent, $p(Rne, l)),
                                                children: (0,
                                                z.jsx)(Oc, {
                                                    value: l,
                                                    unit: vc.Money,
                                                    signed: !0
                                                })
                                            })
                                        })]
                                    }),
                                    theme: Dne,
                                    className: Rne.slider,
                                    style: {
                                        "--stopPos": 100 * Od(o.amount / Math.max(a, 1), 0, 1) + "%"
                                    },
                                    onChange: yj,
                                    children: [(0,
                                    z.jsx)("div", {
                                        className: Zu()(Dne.leftEdge, o.amount > 0 ? Dne.negative : Dne.positive)
                                    }), (0,
                                    z.jsx)("div", {
                                        className: Zu()(Dne.rightEdge, o.amount < a ? Dne.positive : Dne.negative)
                                    })]
                                })
                            })]
                        }), (0,
                        z.jsxs)("div", {
                            className: Rne.directionLabels,
                            children: [o.amount > 0 && (0,
                            z.jsxs)(z.Fragment, {
                                children: [(0,
                                z.jsx)("div", {
                                    className: Rne.lessLabel,
                                    children: (0,
                                    z.jsx)(_c.EconomyPanel.LOAN_FORM_LESS_LABEL, {})
                                }), (0,
                                z.jsx)(Z_, {
                                    src: "Media/Glyphs/ThickStrokeArrowLeft.svg",
                                    className: Rne.lessArrow
                                })]
                            }), (0,
                            z.jsx)("div", {
                                className: Rne.space
                            }), o.amount < a && (0,
                            z.jsxs)(z.Fragment, {
                                children: [(0,
                                z.jsx)(Z_, {
                                    src: "Media/Glyphs/ThickStrokeArrowRight.svg",
                                    className: Rne.moreArrow
                                }), (0,
                                z.jsx)("div", {
                                    className: Rne.moreLabel,
                                    children: (0,
                                    z.jsx)(_c.EconomyPanel.LOAN_FORM_MORE_LABEL, {})
                                })]
                            })]
                        })]
                    }), (0,
                    z.jsx)("div", {
                        className: Rne.buttonColumn,
                        children: (0,
                        z.jsxs)(np, {
                            direction: kg.Vertical,
                            children: [(0,
                            z.jsxs)("div", {
                                className: Rne.buttonRow,
                                children: [(0,
                                z.jsx)(UT, {
                                    action: "Select",
                                    active: t,
                                    className: Rne.buttonHint
                                }), e && !t && (0,
                                z.jsx)("div", {
                                    className: Zu()(Rne.hintSpaceholder, Rne.buttonHint)
                                }), (0,
                                z.jsx)(Ah, {
                                    onFocusChange: n,
                                    children: (0,
                                    z.jsx)(mT, {
                                        uiTag: vT.value?.economyPanelLoansAccept,
                                        children: (0,
                                        z.jsx)(U_, {
                                            disableHint: !0,
                                            selectSound: lp.takeLoan,
                                            className: Rne.acceptButton,
                                            disabled: !c,
                                            onSelect: jj,
                                            children: (0,
                                            z.jsx)(_c.EconomyPanel.LOAN_FORM_ACCEPT, {})
                                        })
                                    })
                                })]
                            }), (0,
                            z.jsxs)("div", {
                                className: Rne.buttonRow,
                                children: [(0,
                                z.jsx)(UT, {
                                    action: "Select",
                                    active: s,
                                    className: Rne.buttonHint
                                }), e && !s && (0,
                                z.jsx)("div", {
                                    className: Zu()(Rne.hintSpaceholder, Rne.buttonHint)
                                }), (0,
                                z.jsx)(Ah, {
                                    onFocusChange: i,
                                    children: (0,
                                    z.jsx)(U_, {
                                        disableHint: !0,
                                        className: Rne.resetButton,
                                        disabled: !c,
                                        onSelect: Cj,
                                        children: (0,
                                        z.jsx)(_c.EconomyPanel.LOAN_FORM_RESET, {})
                                    })
                                })]
                            })]
                        })
                    })]
                })
            })
        }
        ;
        const Gne = 75;
        function Vne(e) {
            return Math.max(Math.floor(Math.log10(Math.abs(e))), 0) + 1
        }
        X.add("game-ui/game/components/economy-panel/loan-page/loan-adjustment/loan-form/loan-form.tsx", {
            get LoanForm() {
                return Bne
            },
            set LoanForm(e) {
                Bne = e
            }
        });
        let Hne = {
            "table-header": "table-header_wsv",
            tableHeader: "table-header_wsv",
            "header-cell": "header-cell_ymh",
            headerCell: "header-cell_ymh",
            "table-content": "table-content_YfG",
            tableContent: "table-content_YfG",
            "content-cell": "content-cell_MZC",
            contentCell: "content-cell_MZC",
            "amount-column": "amount-column_kN8",
            amountColumn: "amount-column_kN8",
            "interest-rate-column": "interest-rate-column_jcI",
            interestRateColumn: "interest-rate-column_jcI",
            "monthly-cost-column": "monthly-cost-column_BPo",
            monthlyCostColumn: "monthly-cost-column_BPo",
            "monthly-cost-field": "monthly-cost-field_eRh",
            monthlyCostField: "monthly-cost-field_eRh",
            "new-value": "new-value_keh",
            newValue: "new-value_keh",
            negative: "negative_qB0",
            "loan-number": "loan-number_Mcp",
            loanNumber: "loan-number_Mcp",
            "current-value": "current-value_SLp",
            currentValue: "current-value_SLp",
            modified: "modified_rG6",
            "strikethrough-line": "strikethrough-line_Yh8",
            strikethroughLine: "strikethrough-line_Yh8",
            hidden: "hidden_RHn"
        };
        X.add("game-ui/game/components/economy-panel/loan-page/loan-adjustment/loan-table/loan-table.module.scss", {
            get classes() {
                return Hne
            },
            set classes(e) {
                Object.assign(Hne, e)
            }
        });
        const Kne = Hne;
        var Wne = ()=>(0,
        z.jsxs)("div", {
            className: Kne.tableHeader,
            children: [(0,
            z.jsx)("div", {
                className: Zu()(Kne.headerCell, Kne.amountColumn),
                children: (0,
                z.jsx)(_c.EconomyPanel.LOAN_TABLE_AMOUNT, {})
            }), (0,
            z.jsx)("div", {
                className: Zu()(Kne.headerCell, Kne.interestRateColumn),
                children: (0,
                z.jsx)(_c.EconomyPanel.LOAN_TABLE_INTEREST_RATE, {})
            }), (0,
            z.jsx)("div", {
                className: Zu()(Kne.headerCell, Kne.monthlyCostColumn),
                children: (0,
                z.jsx)(_c.EconomyPanel.LOAN_TABLE_MONTHLY_COST, {})
            })]
        })
          , zne = ()=>{
            const e = sl(Ij)
              , t = sl(Sj)
              , n = Math.abs(t.amount - e.amount) > .5;
            return (0,
            z.jsxs)("div", {
                className: Kne.tableContent,
                children: [(0,
                z.jsx)("div", {
                    className: Zu()(Kne.contentCell, Kne.amountColumn),
                    children: (0,
                    z.jsx)(Yne, {
                        currentValue: e.amount,
                        newValue: t.amount,
                        unit: vc.Money,
                        modified: n
                    })
                }), (0,
                z.jsx)("div", {
                    className: Zu()(Kne.contentCell, Kne.interestRateColumn),
                    children: (0,
                    z.jsx)(Yne, {
                        currentValue: 100 * e.dailyInterestRate,
                        newValue: 100 * t.dailyInterestRate,
                        unit: vc.PercentageSingleFraction,
                        modified: n
                    })
                }), (0,
                z.jsxs)("div", {
                    className: Zu()(Kne.contentCell, Kne.monthlyCostColumn),
                    children: [(0,
                    z.jsxs)("div", {
                        className: Zu()(gne.moneyField, gne.primary, Kne.monthlyCostField),
                        children: [(0,
                        z.jsx)("div", {
                            className: Zu()(gne.sign, $p(Kne, -t.dailyPayment)),
                            children: zc(-t.dailyPayment, !0)
                        }), (0,
                        z.jsx)("div", {
                            className: Zu()(gne.content, $p(Kne, -e.dailyPayment)),
                            children: (0,
                            z.jsx)(Yne, {
                                currentValue: e.dailyPayment,
                                newValue: t.dailyPayment,
                                unit: vc.Money,
                                modified: n,
                                newClassName: $p(Kne, -t.dailyPayment)
                            })
                        })]
                    }), (0,
                    z.jsx)("div", {})]
                })]
            })
        }
        ;
        const Yne = ({currentValue: e, newValue: t, unit: n, modified: s, newClassName: i})=>(0,
        z.jsxs)(z.Fragment, {
            children: [(0,
            z.jsxs)("div", {
                className: Zu()(Kne.currentValue, s && Kne.modified),
                children: [(0,
                z.jsx)(Oc, {
                    value: e,
                    unit: n
                }), s && (0,
                z.jsx)("div", {
                    className: Kne.strikethroughLine
                })]
            }), (0,
            z.jsx)("div", {
                className: Zu()(Kne.newValue, !s && Kne.hidden, i),
                children: (0,
                z.jsx)(Oc, {
                    value: t,
                    unit: n
                })
            })]
        });
        X.add("game-ui/game/components/economy-panel/loan-page/loan-adjustment/loan-table/loan-table.tsx", {
            get LoanTableHeader() {
                return Wne
            },
            set LoanTableHeader(e) {
                Wne = e
            },
            get LoanTableContent() {
                return zne
            },
            set LoanTableContent(e) {
                zne = e
            }
        });
        let $ne = {
            "loan-adjustment": "loan-adjustment_mqe",
            loanAdjustment: "loan-adjustment_mqe"
        };
        X.add("game-ui/game/components/economy-panel/loan-page/loan-adjustment/loan-adjustment.module.scss", {
            get classes() {
                return $ne
            },
            set classes(e) {
                Object.assign($ne, e)
            }
        });
        const qne = $ne;
        var Xne = ({className: e})=>(0,
        z.jsxs)(s3, {
            header: (0,
            z.jsx)(Wne, {}),
            theme: n3,
            className: Zu()(qne.loanAdjustment, e),
            children: [(0,
            z.jsx)(zne, {}), (0,
            z.jsx)(Bne, {})]
        });
        X.add("game-ui/game/components/economy-panel/loan-page/loan-adjustment/loan-adjustment.tsx", {
            get LoanAdjustment() {
                return Xne
            },
            set LoanAdjustment(e) {
                Xne = e
            }
        });
        let Qne = {
            chartFontColor: "rgba(255, 255, 255, 0.6)",
            chartLineColor: "rgba(255, 255, 255, 0.1)",
            cityIncomeColor: "rgba(139, 219, 70, 0.6)",
            cityExpensesColor: "rgba(233, 95, 74, 0.6)",
            loanInterestColor: "rgba(233, 95, 74, 1)",
            "loan-chart": "loan-chart_IIu",
            loanChart: "loan-chart_IIu",
            content: "content_K6K",
            "chart-column": "chart-column_YvP",
            chartColumn: "chart-column_YvP",
            chart: "chart_nml",
            "summary-column": "summary-column_Wm0",
            summaryColumn: "summary-column_Wm0",
            "summary-item": "summary-item__T7",
            summaryItem: "summary-item__T7",
            warning: "warning_aXt",
            divider: "divider_s9s",
            legend: "legend_ots",
            "legend-item": "legend-item_OSA",
            legendItem: "legend-item_OSA"
        };
        X.add("game-ui/game/components/economy-panel/loan-page/loan-chart/loan-chart.module.scss", {
            get classes() {
                return Qne
            },
            set classes(e) {
                Object.assign(Qne, e)
            }
        });
        const Zne = Qne;
        var Jne = ({className: e})=>{
            const t = sl(Ij)
              , n = sl(Sj)
              , s = sl(gj)
              , i = s > 0 ? n.dailyPayment / s * 100 : 0
              , a = Math.abs(sl(pj)) - t.dailyPayment
              , o = a + n.dailyPayment
              , r = s - o
              , l = (0,
            Y.useMemo)((()=>({
                labels: ["Budget"],
                datasets: [{
                    label: "cityIncome",
                    data: [s],
                    backgroundColor: Zne.cityIncomeColor,
                    barPercentage: .8,
                    categoryPercentage: .5,
                    stack: "income"
                }, {
                    label: "cityExpenses",
                    data: [a],
                    backgroundColor: Zne.cityExpensesColor,
                    barPercentage: .8,
                    categoryPercentage: .5,
                    stack: "expenses"
                }, {
                    label: "loanInterest",
                    data: [n.dailyPayment],
                    backgroundColor: Zne.loanInterestColor,
                    barPercentage: .8,
                    categoryPercentage: .5,
                    stack: "expenses"
                }]
            })), [a, s, n.dailyPayment])
              , c = function() {
                const e = Ac(vc.Money)
                  , t = sl(Ll);
                return {
                    layout: {
                        padding: {
                            top: 24,
                            right: 36,
                            bottom: 0,
                            left: 12
                        }
                    },
                    scales: {
                        y: {
                            stacked: !0,
                            suggestedMax: 1e3,
                            beginAtZero: !0,
                            grid: {
                                color: Zne.chartLineColor,
                                lineWidth: 2
                            },
                            border: {
                                color: Zne.chartLineColor,
                                width: 2
                            },
                            ticks: {
                                maxTicksLimit: 10,
                                font: {
                                    size: 10 * t
                                },
                                color: Zne.chartFontColor,
                                padding: 10,
                                autoSkip: !1,
                                callback: t=>e(t)
                            }
                        },
                        x: {
                            display: !1,
                            stacked: !0
                        }
                    }
                }
            }();
            return (0,
            z.jsx)(s3, {
                focusKey: Sg,
                theme: n3,
                className: Zu()(Zne.loanChart, e),
                children: (0,
                z.jsxs)("div", {
                    className: Zne.content,
                    children: [(0,
                    z.jsxs)("div", {
                        className: Zne.chartColumn,
                        children: [(0,
                        z.jsx)(nY, {
                            type: "bar",
                            data: l,
                            options: c,
                            className: Zne.chart
                        }), (0,
                        z.jsxs)("div", {
                            className: Zne.legend,
                            children: [(0,
                            z.jsx)(xQ, {
                                color: Zne.cityIncomeColor,
                                label: (0,
                                z.jsx)(_c.EconomyPanel.LOAN_CHART_LEGEND_INCOME, {}),
                                className: Zne.legendItem
                            }), (0,
                            z.jsx)(xQ, {
                                color: Zne.cityExpensesColor,
                                label: (0,
                                z.jsx)(_c.EconomyPanel.LOAN_CHART_LEGEND_EXPENSES, {}),
                                className: Zne.legendItem
                            }), n.dailyPayment > 0 && (0,
                            z.jsx)(xQ, {
                                color: Zne.loanInterestColor,
                                label: (0,
                                z.jsx)(_c.EconomyPanel.LOAN_CHART_LEGEND_LOAN_INTEREST, {}),
                                className: Zne.legendItem
                            })]
                        })]
                    }), (0,
                    z.jsxs)("div", {
                        className: Zne.summaryColumn,
                        children: [0 !== i && (0,
                        z.jsxs)(z.Fragment, {
                            children: [(0,
                            z.jsx)(tse, {
                                children: (0,
                                z.jsx)(_c.EconomyPanel.LOAN_CHART_RELATIVE_COST, {
                                    RELATIVE_LOAN_COST: (0,
                                    z.jsx)(Oc, {
                                        value: i,
                                        unit: vc.PercentageSingleFraction
                                    })
                                })
                            }), (0,
                            z.jsx)("div", {
                                className: Zne.divider
                            })]
                        }), (0,
                        z.jsx)(tse, {
                            warning: r <= 0,
                            children: ese(r, n.amount)
                        }), .85 * s < o && (0,
                        z.jsxs)(z.Fragment, {
                            children: [(0,
                            z.jsx)("div", {
                                className: Zne.divider
                            }), (0,
                            z.jsx)(tse, {
                                warning: !0,
                                children: o > s ? (0,
                                z.jsx)(_c.EconomyPanel.LOAN_CHART_BUDGET_WARNING, {}) : (0,
                                z.jsx)(_c.EconomyPanel.LOAN_CHART_BUDGET_WARNING_MODIFIED, {})
                            })]
                        })]
                    })]
                })
            })
        }
        ;
        function ese(e, t) {
            const n = (0,
            z.jsx)(Oc, {
                value: e,
                unit: vc.MoneyPerMonth
            });
            return e >= 0 ? t > 0 ? (0,
            z.jsx)(_c.EconomyPanel.LOAN_CHART_REMAINING_SURPLUS, {
                TOTAL: n
            }) : (0,
            z.jsx)(_c.EconomyPanel.LOAN_CHART_SURPLUS, {
                TOTAL: n
            }) : (0,
            z.jsx)(_c.EconomyPanel.LOAN_CHART_DEFICIT, {
                TOTAL: n
            })
        }
        const tse = ({warning: e, children: t})=>(0,
        z.jsx)(Cb, {
            className: Zu()(Zne.summaryItem, e && Zne.warning),
            children: t
        });
        X.add("game-ui/game/components/economy-panel/loan-page/loan-chart/loan-chart.tsx", {
            get LoanChart() {
                return Jne
            },
            set LoanChart(e) {
                Jne = e
            }
        });
        let nse = {
            "loan-page": "loan-page_cyR",
            loanPage: "loan-page_cyR",
            "main-column": "main-column_NUx",
            mainColumn: "main-column_NUx",
            "info-column": "info-column_c8_",
            infoColumn: "info-column_c8_",
            chart: "chart_Dc8"
        };
        X.add("game-ui/game/components/economy-panel/loan-page/loan-page.module.scss", {
            get classes() {
                return nse
            },
            set classes(e) {
                Object.assign(nse, e)
            }
        });
        const sse = nse;
        var ise = ()=>(cg(vT.value?.economyPanelLoansPage),
        (0,
        Y.useEffect)((()=>(Cj(),
        ()=>Cj())), []),
        (0,
        z.jsxs)("div", {
            className: sse.loanPage,
            children: [(0,
            z.jsxs)("div", {
                className: sse.mainColumn,
                children: [(0,
                z.jsx)(Xne, {
                    className: sse.adjustment
                }), (0,
                z.jsx)(Jne, {
                    className: sse.chart
                })]
            }), (0,
            z.jsx)(s3, {
                focusKey: Sg,
                theme: n3,
                className: sse.infoColumn,
                children: (0,
                z.jsx)(Pte, {
                    icon: "Media/Game/Icons/Money.svg",
                    title: (0,
                    z.jsx)(_c.EconomyPanel.LOAN_PAGE_TITLE, {}),
                    description: (0,
                    z.jsx)(_c.EconomyPanel.LOAN_PAGE_DESCRIPTION, {})
                })
            })]
        }));
        X.add("game-ui/game/components/economy-panel/loan-page/loan-page.tsx", {
            get LoanPage() {
                return ise
            },
            set LoanPage(e) {
                ise = e
            }
        });
        var ase = Y.createContext({
            onFocusChange: ()=>{}
            ,
            onMouseEnter: ()=>{}
            ,
            onMouseLeave: ()=>{}
        });
        function ose(e) {
            const t = (0,
            Y.useContext)(ase);
            return {
                handleFocusChange: (0,
                Y.useCallback)((n=>t.onFocusChange(e, n)), [e, t]),
                handleMouseEnter: (0,
                Y.useCallback)((()=>t.onMouseEnter(e)), [e, t]),
                handleMouseLeave: (0,
                Y.useCallback)((()=>t.onMouseLeave(e)), [e, t])
            }
        }
        X.add("game-ui/game/components/economy-panel/production-page/production-page-context.ts", {
            get ProductionPageContext() {
                return ase
            },
            set ProductionPageContext(e) {
                ase = e
            },
            get useItemListeners() {
                return ose
            },
            set useItemListeners(e) {
                ose = e
            }
        });
        let rse = {
            detail: "detail_sbO",
            chart: "chart_Eey",
            column: "column_N8A",
            "left-column": "left-column_GbN",
            leftColumn: "left-column_GbN",
            "right-column": "right-column_hq1",
            rightColumn: "right-column_hq1",
            "center-column": "center-column_M5Z",
            centerColumn: "center-column_M5Z",
            row: "row_PNm",
            "double-row": "double-row_kpL",
            doubleRow: "double-row_kpL",
            label: "label_qcd",
            "resource-label": "resource-label_b8b",
            resourceLabel: "resource-label_b8b",
            "left-label": "left-label_aR5",
            leftLabel: "left-label_aR5",
            "right-label": "right-label_q7r",
            rightLabel: "right-label_q7r",
            "label-padding": "label-padding_TU1",
            labelPadding: "label-padding_TU1",
            "label-extra-padding": "label-extra-padding_qhR",
            labelExtraPadding: "label-extra-padding_qhR",
            image: "image_k4T",
            icon: "icon_DSu",
            "resource-icon": "resource-icon_GIT",
            resourceIcon: "resource-icon_GIT",
            "icon-container": "icon-container_iMp",
            iconContainer: "icon-container_iMp",
            "left-icon-container": "left-icon-container_V3g",
            leftIconContainer: "left-icon-container_V3g",
            "icon-container-padding": "icon-container-padding_NGu",
            iconContainerPadding: "icon-container-padding_NGu",
            "icon-container-extra-padding": "icon-container-extra-padding_DY7",
            iconContainerExtraPadding: "icon-container-extra-padding_DY7",
            "right-icon-container": "right-icon-container_zrI",
            rightIconContainer: "right-icon-container_zrI",
            "top-icon-container": "top-icon-container_vrp",
            topIconContainer: "top-icon-container_vrp",
            "bottom-icon-container": "bottom-icon-container_Wzp",
            bottomIconContainer: "bottom-icon-container_Wzp"
        };
        X.add("game-ui/game/components/economy-panel/production-page/resource-detail/resource-detail.module.scss", {
            get classes() {
                return rse
            },
            set classes(e) {
                Object.assign(rse, e)
            }
        });
        const lse = rse;
        var cse = ({entity: e, className: t})=>(0,
        z.jsx)(s3, {
            focusKey: Sg,
            theme: n3,
            className: Zu()(lse.resourceDetail, t),
            children: !Ur(e, Zp) && (0,
            z.jsx)(use, {
                entity: e
            })
        })
          , use = ({entity: e})=>{
            const t = ll(Lj, e)
              , n = ll(Pj, e)
              , s = function(e, t) {
                const n = t.inputs.flatMap((e=>e));
                let s = Math.max(n.length, 1)
                  , i = t.outputs.length + t.serviceOutputs.length + e.consumers.length;
                e.tradable && (s++,
                i++);
                return Math.max(s, i)
            }(t, n)
              , i = (40 * s + 8 * (s - 1)) * Hm();
            return (0,
            z.jsx)("div", {
                className: lse.detail,
                children: (0,
                z.jsxs)("div", {
                    className: lse.chart,
                    style: {
                        height: i
                    },
                    children: [(0,
                    z.jsx)(dse, {
                        resource: t,
                        details: n
                    }), (0,
                    z.jsx)(gse, {
                        resource: t,
                        details: n
                    }), (0,
                    z.jsx)(pse, {
                        resource: t,
                        details: n
                    })]
                })
            })
        }
          , dse = ({resource: e, details: t})=>(0,
        z.jsxs)("div", {
            className: Zu()(lse.column, lse.leftColumn),
            children: [0 === t?.inputs.length && (0,
            z.jsx)(bse, {
                icon: e.producer.icon,
                arrow: "ProductionArrow",
                children: (0,
                z.jsx)(_c.EconomyPanel.PRODUCTION_PAGE_PRODUCTIONLINK, {
                    hash: e.producer.name
                })
            }), t?.inputs.map(((t,n)=>(0,
            z.jsx)(mse, {
                resource: e,
                entities: t
            }, n))), e.tradable && (0,
            z.jsx)(hse, {})]
        })
          , mse = ({resource: e, entities: t})=>{
            const n = cl(Lj, t);
            return (0,
            z.jsxs)("div", {
                className: Zu()(lse.row, n.length > 1 && lse.doubleRow),
                style: {
                    flex: n.length
                },
                children: [n.map(((e,t)=>(0,
                z.jsx)("div", {
                    className: lse.row,
                    children: (0,
                    z.jsx)("div", {
                        className: Zu()(lse.iconContainer, lse.leftIconContainer, n.length > 1 && (0 === t ? lse.topIconContainer : lse.bottomIconContainer)),
                        children: (0,
                        z.jsx)("img", {
                            src: e.icon,
                            className: lse.icon
                        })
                    })
                }, Dr(e.entity)))), (0,
                z.jsx)("div", {
                    className: Zu()(lse.label, lse.rightLabel, lse.labelPadding, n.length > 1 && lse.labelExtraPadding),
                    children: (0,
                    z.jsx)(_c.EconomyPanel.PRODUCTION_PAGE_PRODUCTIONLINK, {
                        hash: e.producer.name
                    })
                }), (0,
                z.jsx)("div", {
                    className: Zu()(lse.iconContainer, lse.leftIconContainer, lse.iconContainerPadding, n.length > 1 && lse.iconContainerExtraPadding),
                    children: (0,
                    z.jsx)("img", {
                        src: e.producer.icon,
                        className: lse.icon
                    })
                }), (0,
                z.jsx)("img", {
                    src: `Media/Game/Resources/Production/${1 === n.length ? "Input" : "DoubleInput"}Arrow.png`,
                    className: lse.image
                })]
            })
        }
          , hse = ()=>(0,
        z.jsxs)("div", {
            className: lse.row,
            children: [(0,
            z.jsx)("img", {
                src: "Media/Game/Resources/Production/ImportArrow.png",
                className: lse.image
            }), (0,
            z.jsx)("div", {
                className: Zu()(lse.iconContainer, lse.leftIconContainer),
                children: (0,
                z.jsx)("img", {
                    src: "Media/Game/Icons/Import.svg",
                    className: lse.icon
                })
            }), (0,
            z.jsx)("div", {
                className: Zu()(lse.label, lse.leftLabel),
                children: (0,
                z.jsx)(_c.EconomyPanel.PRODUCTION_PAGE_IMPORT, {})
            })]
        })
          , gse = ({resource: e})=>(0,
        z.jsx)("div", {
            className: Zu()(lse.column, lse.centerColumn),
            children: (0,
            z.jsxs)("div", {
                className: Zu()(lse.label, lse.resourceLabel),
                children: [(0,
                z.jsx)("img", {
                    src: e.icon,
                    className: Zu()(lse.icon, lse.resourceIcon)
                }), (0,
                z.jsx)(_c.Resources.TITLE, {
                    hash: e.name
                })]
            })
        })
          , pse = ({resource: e, details: t})=>(0,
        z.jsxs)("div", {
            className: Zu()(lse.column, lse.rightColumn),
            children: [t?.serviceOutputs.map((e=>(0,
            z.jsx)(vse, {
                entity: e
            }, Dr(e)))), (0,
            z.jsx)(xse, {
                resource: e,
                details: t
            }), t?.outputs.map(((e,t)=>(0,
            z.jsx)(fse, {
                entity: e
            }, t))), e.tradable && (0,
            z.jsx)(_se, {})]
        })
          , fse = ({entity: e})=>{
            const t = ll(Lj, e);
            return (0,
            z.jsxs)("div", {
                className: lse.row,
                children: [(0,
                z.jsx)("img", {
                    src: "Media/Game/Resources/Production/OutputArrow.png",
                    className: lse.image
                }), (0,
                z.jsx)("div", {
                    className: Zu()(lse.iconContainer, lse.leftIconContainer),
                    children: (0,
                    z.jsx)("img", {
                        src: t.producer.icon,
                        className: lse.icon
                    })
                }), (0,
                z.jsx)("div", {
                    className: Zu()(lse.label, lse.leftLabel),
                    children: (0,
                    z.jsx)(_c.EconomyPanel.PRODUCTION_PAGE_PRODUCTIONLINK, {
                        hash: t.producer.name
                    })
                }), (0,
                z.jsx)("div", {
                    className: Zu()(lse.iconContainer, lse.rightIconContainer),
                    children: (0,
                    z.jsx)("img", {
                        src: t.icon,
                        className: lse.icon
                    })
                })]
            })
        }
          , xse = ({resource: e})=>(0,
        z.jsx)(z.Fragment, {
            children: e.consumers.map(((e,t)=>(0,
            z.jsx)(bse, {
                icon: e.icon,
                arrow: "ConsumptionArrow",
                children: (0,
                z.jsx)(_c.EconomyPanel.PRODUCTION_PAGE_PRODUCTIONLINK, {
                    hash: e.name
                })
            }, t)))
        });
        const vse = ({entity: e})=>{
            const t = ll(Aj, e);
            return (0,
            z.jsx)(bse, {
                icon: t.icon,
                arrow: "ConsumptionArrow",
                children: (0,
                z.jsx)(_c.Services.NAME, {
                    hash: t.name
                })
            })
        }
        ;
        var _se = ()=>(0,
        z.jsxs)("div", {
            className: lse.row,
            children: [(0,
            z.jsx)("img", {
                src: "Media/Game/Resources/Production/ExportArrow.png",
                className: lse.image
            }), (0,
            z.jsx)("div", {
                className: Zu()(lse.iconContainer, lse.leftIconContainer),
                children: (0,
                z.jsx)("img", {
                    src: "Media/Game/Icons/Export.svg",
                    className: lse.icon
                })
            }), (0,
            z.jsx)("div", {
                className: Zu()(lse.label, lse.leftLabel),
                children: (0,
                z.jsx)(_c.EconomyPanel.PRODUCTION_PAGE_EXPORT, {})
            })]
        })
          , bse = ({icon: e, arrow: t, children: n})=>(0,
        z.jsxs)("div", {
            className: lse.row,
            children: [(0,
            z.jsx)("img", {
                src: `Media/Game/Resources/Production/${t}.png`,
                className: lse.image
            }), (0,
            z.jsx)("div", {
                className: Zu()(lse.iconContainer, lse.leftIconContainer),
                children: (0,
                z.jsx)("img", {
                    src: e,
                    className: lse.icon
                })
            }), (0,
            z.jsx)("div", {
                className: Zu()(lse.label, lse.rightLabel),
                children: n
            })]
        });
        X.add("game-ui/game/components/economy-panel/production-page/resource-detail/resource-detail.tsx", {
            get ResourceDetail() {
                return cse
            },
            set ResourceDetail(e) {
                cse = e
            },
            get Detail() {
                return use
            },
            set Detail(e) {
                use = e
            },
            get InputsColumn() {
                return dse
            },
            set InputsColumn(e) {
                dse = e
            },
            get Input() {
                return mse
            },
            set Input(e) {
                mse = e
            },
            get Import() {
                return hse
            },
            set Import(e) {
                hse = e
            },
            get ResourceColumn() {
                return gse
            },
            set ResourceColumn(e) {
                gse = e
            },
            get OutputsColumn() {
                return pse
            },
            set OutputsColumn(e) {
                pse = e
            },
            get Output() {
                return fse
            },
            set Output(e) {
                fse = e
            },
            get Consumptions() {
                return xse
            },
            set Consumptions(e) {
                xse = e
            },
            get Export() {
                return _se
            },
            set Export(e) {
                _se = e
            },
            get ThroughPut() {
                return bse
            },
            set ThroughPut(e) {
                bse = e
            }
        });
        let Tse = {
            "progress-bar": "progress-bar_xWR",
            progressBar: "progress-bar_xWR",
            "progress-bounds": "progress-bounds_Fjq",
            progressBounds: "progress-bounds_Fjq",
            progress: "progress_JAQ",
            label: "label_nBK"
        };
        X.add("game-ui/common/progress-bar/progress-bar.module.scss", {
            get classes() {
                return Tse
            },
            set classes(e) {
                Object.assign(Tse, e)
            }
        });
        const Ese = Tse;
        let Ise = {
            "progress-bar": "progress-bar_d6t progress-bar_xWR",
            progressBar: "progress-bar_d6t progress-bar_xWR",
            progress: "progress_egi progress_JAQ"
        };
        X.add("game-ui/common/progress-bar/themes/default-progress-bar.module.scss", {
            get classes() {
                return Ise
            },
            set classes(e) {
                Object.assign(Ise, e)
            }
        });
        const Sse = Ise;
        var yse = ({progress: e, max: t, theme: n=Sse, className: s, style: i, children: a, ...o})=>{
            const r = (0,
            Y.useMemo)((()=>({
                ...Ese,
                ...n
            })), [n])
              , l = t > 0 ? 100 * Od(e / t, 0, 1) : 0;
            return (0,
            z.jsxs)("div", {
                ...o,
                className: Zu()(r.progressBar, s),
                style: i,
                children: [r.progressLabel && null != a && (0,
                z.jsx)("div", {
                    className: r.label,
                    children: a
                }), (0,
                z.jsx)("div", {
                    className: r.progressBounds,
                    style: {
                        width: l + "%"
                    },
                    children: (0,
                    z.jsx)("div", {
                        className: r.progress,
                        style: {
                            width: (l > 0 ? 100 / l * 100 : 0) + "%"
                        },
                        children: r.progressLabel && null != a && (0,
                        z.jsx)("div", {
                            className: r.progressLabel,
                            children: a
                        })
                    })
                }), !r.progressLabel && null != a && (0,
                z.jsx)("div", {
                    className: r.label,
                    children: a
                })]
            })
        }
        ;
        X.add("game-ui/common/progress-bar/progress-bar.tsx", {
            get ProgressBar() {
                return yse
            },
            set ProgressBar(e) {
                yse = e
            }
        });
        var jse = ({focusKey: e, forceFocusable: t, initialExpanded: n=!1, header: s, theme: i=n3, transition: a=UJ, className: o, children: r, onToggleExpanded: l})=>{
            const c = DJ(i)
              , u = Y.Children.toArray(r).filter(Boolean).length > 0
              , [d,m] = (0,
            Y.useState)(n)
              , h = (0,
            Y.useCallback)((()=>{
                m((e=>!e)),
                cp(lp.expandPanel),
                l && l(!d)
            }
            ), [d, l])
              , g = (0,
            Y.useMemo)((()=>({
                theme: c,
                expandable: u,
                expanded: d,
                toggleExpanded: u ? h : void 0
            })), [u, d, c, h]);
            return (0,
            z.jsx)(Ip, {
                className: Zu()(c.section, u && c.expandable, u && c.expanded, o),
                children: (0,
                z.jsx)(e3.Provider, {
                    value: g,
                    children: (0,
                    z.jsx)(Bg, {
                        expanded: d,
                        expandable: u,
                        onAction: h,
                        children: (0,
                        z.jsxs)(np, {
                            children: [(0,
                            z.jsx)(Sp, {
                                focusKey: u || t ? e : Sg,
                                className: Zu()(c.header, u && c.expandable, c.first, (!u || !d) && c.last),
                                children: s
                            }), u && (0,
                            z.jsx)(wS, {
                                in: d,
                                children: (0,
                                z.jsx)(NS, {
                                    styles: a,
                                    children: (0,
                                    z.jsx)("div", {
                                        children: (0,
                                        z.jsx)(Ip, {
                                            className: Zu()(c.content, c.last, c.expandable),
                                            children: r
                                        })
                                    })
                                })
                            })]
                        })
                    })
                })
            })
        }
        ;
        X.add("game-ui/common/section/expandable-section.tsx", {
            get ExpandableSection() {
                return jse
            },
            set ExpandableSection(e) {
                jse = e
            }
        });
        var Cse = ({tooltip: e, handleMouseEnter: t, handleMouseLeave: n, className: s, children: i})=>{
            const [a,o] = (0,
            Y.useState)(!1)
              , {expanded: r, toggleExpanded: l, theme: c} = (0,
            Y.useContext)(e3)
              , u = null != l;
            return (0,
            z.jsx)(Eg, {
                tooltip: e,
                children: (0,
                z.jsxs)(Sp, {
                    focusKey: u ? yg : Sg,
                    className: Zu()(c.titleBar, u && c.expandable, s),
                    onClick: l,
                    onMouseEnter: t,
                    onMouseLeave: n,
                    onFocusChange: o,
                    children: [u && (0,
                    z.jsx)("div", {
                        className: c.buttonSpace
                    }), (0,
                    z.jsx)("div", {
                        className: c.title,
                        children: i
                    }), (0,
                    z.jsx)(UT, {
                        action: "Expand Group",
                        active: u && a
                    }), u && (0,
                    z.jsx)(Z_, {
                        src: r ? c.collapseIcon : c.expandIcon,
                        className: c.toggleButton
                    })]
                })
            })
        }
        ;
        X.add("game-ui/common/section/section-header.tsx", {
            get SectionHeader() {
                return Cse
            },
            set SectionHeader(e) {
                Cse = e
            }
        });
        let Nse = {
            "resource-list": "resource-list_Ra6",
            resourceList: "resource-list_Ra6",
            category: "category_nho",
            categoryHeader: "categoryHeader_YGs",
            "table-header": "table-header_Qbg",
            tableHeader: "table-header_Qbg",
            "header-cell": "header-cell_k7Z",
            headerCell: "header-cell_k7Z",
            table: "table_KZC",
            scrollable: "scrollable_Tuh",
            "table-lines": "table-lines_PGv",
            tableLines: "table-lines_PGv",
            name: "name_IJ7",
            production: "production_iuR",
            "surplus-deficit": "surplus-deficit_oEQ",
            surplusDeficit: "surplus-deficit_oEQ",
            "deficit-label": "deficit-label_CkA",
            deficitLabel: "deficit-label_CkA",
            "surplus-label": "surplus-label_U6j",
            surplusLabel: "surplus-label_U6j",
            "resource-item": "resource-item_oLG item-hover_WK8 item-focused_FuT",
            resourceItem: "resource-item_oLG item-hover_WK8 item-focused_FuT",
            "icon-container": "icon-container_Bnw",
            iconContainer: "icon-container_Bnw",
            icon: "icon_J9H icon_Iwk",
            title: "title_l1U",
            "name-column": "name-column_Jt4",
            nameColumn: "name-column_Jt4",
            "data-column": "data-column_k1t",
            dataColumn: "data-column_k1t",
            "production-bar": "production-bar_PrU",
            productionBar: "production-bar_PrU"
        };
        X.add("game-ui/game/components/economy-panel/production-page/resource-list/resource-list.module.scss", {
            get classes() {
                return Nse
            },
            set classes(e) {
                Object.assign(Nse, e)
            }
        });
        const wse = Nse;
        let Ose = {
            "progress-bar": "progress-bar_oCn progress-bar_RG2 progress-bar_xWR",
            progressBar: "progress-bar_oCn progress-bar_RG2 progress-bar_xWR",
            progress: "progress_gQv progress_GLS progress_JAQ"
        };
        X.add("game-ui/game/components/economy-panel/production-page/resource-list/themes/negative-progress-bar.module.scss", {
            get classes() {
                return Ose
            },
            set classes(e) {
                Object.assign(Ose, e)
            }
        });
        const Pse = Ose;
        let Lse = {
            "progress-bar": "progress-bar_P_j progress-bar_RG2 progress-bar_xWR",
            progressBar: "progress-bar_P_j progress-bar_RG2 progress-bar_xWR",
            progress: "progress_zGB progress_GLS progress_JAQ"
        };
        X.add("game-ui/game/components/economy-panel/production-page/resource-list/themes/positive-progress-bar.module.scss", {
            get classes() {
                return Lse
            },
            set classes(e) {
                Object.assign(Lse, e)
            }
        });
        const Ase = Lse;
        let Mse = {
            "progress-bar": "progress-bar_RG2 progress-bar_xWR",
            progressBar: "progress-bar_RG2 progress-bar_xWR",
            progress: "progress_GLS progress_JAQ"
        };
        X.add("game-ui/game/components/economy-panel/production-page/resource-list/themes/production-progress-bar.module.scss", {
            get classes() {
                return Mse
            },
            set classes(e) {
                Object.assign(Mse, e)
            }
        });
        const Rse = Mse;
        var kse = ({className: e})=>{
            const t = sl(Oj)
              , n = sl(wj);
            return (0,
            z.jsx)(mT, {
                uiTag: vT.value?.economyPanelProductionResources,
                children: (0,
                z.jsx)(mb, {
                    className: Zu()(wse.resourceList, wse.scrollable, e),
                    children: (0,
                    z.jsx)(np, {
                        direction: kg.Vertical,
                        children: t.map(((e,t)=>(0,
                        z.jsx)(Dse, {
                            max: n,
                            category: e,
                            initialExpanded: 0 === t
                        }, Dr(e.entity))))
                    })
                })
            })
        }
        ;
        const Dse = ({category: e, max: t, initialExpanded: n})=>(0,
        z.jsxs)(jse, {
            focusKey: Dr(e.entity),
            initialExpanded: n,
            header: (0,
            z.jsx)(Cse, {
                className: wse.categoryHeader,
                children: (0,
                z.jsx)(_c.EconomyPanel.RESOURCE_CATEGORY, {
                    hash: e.name
                })
            }),
            theme: n3,
            className: wse.category,
            children: [(0,
            z.jsxs)("div", {
                className: wse.tableHeader,
                children: [(0,
                z.jsx)("div", {
                    className: Zu()(wse.headerCell, wse.name)
                }), (0,
                z.jsx)("div", {
                    className: Zu()(wse.headerCell, wse.production),
                    children: (0,
                    z.jsx)(_c.EconomyPanel.PRODUCTION_PAGE_PRODUCTION, {})
                }), (0,
                z.jsx)("div", {
                    className: Zu()(wse.headerCell, wse.surplusDeficit),
                    children: (0,
                    z.jsx)("span", {
                        className: wse.surplusLabel,
                        children: (0,
                        z.jsx)(_c.EconomyPanel.PRODUCTION_PAGE_SURPLUS, {})
                    })
                }), (0,
                z.jsx)("div", {
                    className: Zu()(wse.headerCell, wse.surplusDeficit),
                    children: (0,
                    z.jsx)("span", {
                        className: wse.deficitLabel,
                        children: (0,
                        z.jsx)(_c.EconomyPanel.PRODUCTION_PAGE_DEFICIT, {})
                    })
                })]
            }), (0,
            z.jsx)(np, {
                direction: kg.Vertical,
                children: e.resources.map((e=>(0,
                z.jsx)(Fse, {
                    resource: e,
                    max: t
                }, Dr(e.entity))))
            }), (0,
            z.jsxs)("div", {
                className: wse.tableLines,
                children: [(0,
                z.jsx)("div", {
                    className: wse.name
                }), (0,
                z.jsx)("div", {
                    className: wse.production
                }), (0,
                z.jsx)("div", {
                    className: wse.surplusDeficit
                }), (0,
                z.jsx)("div", {
                    className: wse.surplusDeficit
                })]
            })]
        })
          , Fse = ({resource: e, max: t})=>{
            const {handleFocusChange: n, handleMouseEnter: s, handleMouseLeave: i} = ose(e.entity)
              , a = ll(Mj, e.entity);
            return (0,
            z.jsx)(Ah, {
                onFocusChange: n,
                children: (0,
                z.jsxs)(Sp, {
                    focusKey: Dr(e.entity),
                    className: wse.resourceItem,
                    onMouseEnter: s,
                    onMouseLeave: i,
                    children: [(0,
                    z.jsx)("div", {
                        className: Zu()(wse.nameColumn),
                        children: (0,
                        z.jsx)("div", {
                            className: wse.iconContainer,
                            children: (0,
                            z.jsx)("img", {
                                src: e.icon,
                                className: wse.icon
                            })
                        })
                    }), (0,
                    z.jsx)("div", {
                        className: Zu()(wse.dataColumn),
                        children: (0,
                        z.jsx)(yse, {
                            progress: a.production,
                            max: t,
                            theme: Rse,
                            className: wse.productionBar,
                            children: (0,
                            z.jsx)(Oc, {
                                value: a.production,
                                unit: vc.WeightPerMonth
                            })
                        })
                    }), (0,
                    z.jsx)("div", {
                        className: Zu()(wse.dataColumn),
                        children: (0,
                        z.jsx)(yse, {
                            progress: a.surplus,
                            max: t,
                            theme: Ase,
                            className: wse.productionBar,
                            children: (0,
                            z.jsx)(Oc, {
                                value: a.surplus,
                                unit: vc.WeightPerMonth
                            })
                        })
                    }), (0,
                    z.jsx)("div", {
                        className: Zu()(wse.dataColumn),
                        children: (0,
                        z.jsx)(yse, {
                            progress: a.deficit,
                            max: t,
                            theme: Pse,
                            className: wse.productionBar,
                            children: (0,
                            z.jsx)(Oc, {
                                value: a.deficit,
                                unit: vc.WeightPerMonth
                            })
                        })
                    })]
                })
            })
        }
        ;
        X.add("game-ui/game/components/economy-panel/production-page/resource-list/resource-list.tsx", {
            get ResourceList() {
                return kse
            },
            set ResourceList(e) {
                kse = e
            }
        });
        let Use = {
            "production-page": "production-page_A9T",
            productionPage: "production-page_A9T",
            "main-column": "main-column_FBD",
            mainColumn: "main-column_FBD",
            "info-column": "info-column_jLZ",
            infoColumn: "info-column_jLZ"
        };
        X.add("game-ui/game/components/economy-panel/production-page/production-page.module.scss", {
            get classes() {
                return Use
            },
            set classes(e) {
                Object.assign(Use, e)
            }
        });
        const Bse = Use;
        var Gse, Vse = ()=>{
            cg(vT.value?.economyPanelProductionPage);
            const [e,t] = (0,
            Y.useState)(Zp)
              , n = (0,
            Y.useMemo)((()=>({
                onFocusChange: (e,n)=>n && t(e),
                onMouseEnter: e=>t(e),
                onMouseLeave: e=>t((t=>Ur(t, e) ? Zp : t))
            })), []);
            return (0,
            z.jsxs)("div", {
                className: Bse.productionPage,
                children: [(0,
                z.jsx)(ase.Provider, {
                    value: n,
                    children: (0,
                    z.jsx)(kse, {
                        className: Bse.mainColumn
                    })
                }), (0,
                z.jsx)(cse, {
                    entity: e,
                    className: Bse.infoColumn
                })]
            })
        }
        ;
        X.add("game-ui/game/components/economy-panel/production-page/production-page.tsx", {
            get ProductionPage() {
                return Vse
            },
            set ProductionPage(e) {
                Vse = e
            }
        }),
        function(e) {
            e[e.Service = 0] = "Service",
            e[e.BudgetSlider = 1] = "BudgetSlider",
            e[e.ServiceFee = 2] = "ServiceFee",
            e[e.FeeRevenue = 3] = "FeeRevenue",
            e[e.ExportRevenue = 4] = "ExportRevenue",
            e[e.ServiceUpkeep = 5] = "ServiceUpkeep",
            e[e.ImportExpense = 6] = "ImportExpense"
        }(Gse || (Gse = {}));
        var Hse = {
            type: Gse.BudgetSlider
        }
          , Kse = {
            type: Gse.FeeRevenue
        }
          , Wse = {
            type: Gse.ExportRevenue
        }
          , zse = {
            type: Gse.ServiceUpkeep
        }
          , Yse = {
            type: Gse.ImportExpense
        }
          , $se = Y.createContext({
            onFocusChange: ()=>{}
            ,
            onMouseEnter: ()=>{}
            ,
            onMouseLeave: ()=>{}
        });
        function qse(e) {
            const t = (0,
            Y.useContext)($se);
            return {
                handleFocusChange: (0,
                Y.useCallback)((n=>t.onFocusChange(e, n)), [e, t]),
                handleMouseEnter: (0,
                Y.useCallback)((()=>t.onMouseEnter(e)), [e, t]),
                handleMouseLeave: (0,
                Y.useCallback)((()=>t.onMouseLeave(e)), [e, t])
            }
        }
        X.add("game-ui/game/components/economy-panel/service-page/service-page-context.ts", {
            get ServicePageItemType() {
                return Gse
            },
            set ServicePageItemType(e) {
                Gse = e
            },
            get BUDGET_SLIDER() {
                return Hse
            },
            set BUDGET_SLIDER(e) {
                Hse = e
            },
            get FEE_REVENUE_FIELD() {
                return Kse
            },
            set FEE_REVENUE_FIELD(e) {
                Kse = e
            },
            get EXPORT_REVENUE_FIELD() {
                return Wse
            },
            set EXPORT_REVENUE_FIELD(e) {
                Wse = e
            },
            get SERVICE_UPKEEP_FIELD() {
                return zse
            },
            set SERVICE_UPKEEP_FIELD(e) {
                zse = e
            },
            get IMPORT_EXPENSE_FIELD() {
                return Yse
            },
            set IMPORT_EXPENSE_FIELD(e) {
                Yse = e
            },
            get ServicePageContext() {
                return $se
            },
            set ServicePageContext(e) {
                $se = e
            },
            get useItemListeners() {
                return qse
            },
            set useItemListeners(e) {
                qse = e
            }
        });
        let Xse = {
            "service-item-detail": "service-item-detail_iHg",
            serviceItemDetail: "service-item-detail_iHg",
            "detail-layout": "detail-layout_yS8",
            detailLayout: "detail-layout_yS8"
        };
        X.add("game-ui/game/components/economy-panel/service-page/item-detail/service-item-detail.module.scss", {
            get classes() {
                return Xse
            },
            set classes(e) {
                Object.assign(Xse, e)
            }
        });
        const Qse = Xse;
        var Zse = ({service: e, itemId: t, className: n})=>{
            const s = ll(Dj, e);
            return (0,
            z.jsx)(s3, {
                focusKey: Sg,
                theme: n3,
                className: Zu()(Qse.serviceItemDetail, n),
                children: Jse(t, s)
            })
        }
        ;
        function Jse(e, t) {
            switch (e?.type) {
            case Gse.Service:
                return (0,
                z.jsx)(eie, {
                    entity: e.entity
                });
            case Gse.BudgetSlider:
                return null != t ? (0,
                z.jsx)(tie, {
                    serviceDetails: t
                }) : null;
            case Gse.ServiceFee:
                if (null != t) {
                    const n = t.fees.find((t=>t.name === e.name));
                    if (null != n)
                        return (0,
                        z.jsx)(nie, {
                            fee: n,
                            serviceDetails: t
                        })
                }
                return null;
            case Gse.FeeRevenue:
                return (0,
                z.jsx)(sie, {});
            case Gse.ExportRevenue:
                return (0,
                z.jsx)(iie, {});
            case Gse.ServiceUpkeep:
                return (0,
                z.jsx)(aie, {});
            case Gse.ImportExpense:
                return (0,
                z.jsx)(oie, {});
            default:
                return null
            }
        }
        const eie = ({entity: e})=>{
            const t = ll(xT, e);
            return t ? (0,
            z.jsx)(Pte, {
                icon: t.icon,
                title: (0,
                z.jsx)(cc, {
                    id: t.titleId
                }),
                description: t.descriptionId ? (0,
                z.jsx)(cc, {
                    id: t.descriptionId
                }) : void 0
            }) : null
        }
          , tie = ({serviceDetails: e})=>{
            const t = e.efficiency - 100;
            return (0,
            z.jsx)(Pte, {
                icon: e.icon,
                title: (0,
                z.jsx)(_c.EconomyPanel.SERVICE_BUDGET_SLIDER_TITLE, {
                    hash: e.name
                }),
                description: (0,
                z.jsx)(_c.EconomyPanel.SERVICE_BUDGET_SLIDER_DESCRIPTION, {
                    hash: e.name
                }),
                className: Qse.detailLayout,
                bottom: (0,
                z.jsx)(H9, {
                    label: (0,
                    z.jsx)(_c.EconomyPanel.SERVICE_BUDGET_EFFICIENCY, {}),
                    theme: Ene,
                    className: $p(Ene, t),
                    children: (0,
                    z.jsx)(Oc, {
                        signed: !0,
                        value: t,
                        unit: vc.Percentage
                    })
                })
            }, "budget")
        }
          , nie = ({serviceDetails: e, fee: t})=>{
            const n = 100 * (t.consumptionMultiplier - 1)
              , s = 100 * (t.efficiencyMultiplier - 1);
            return t ? (0,
            z.jsx)(Pte, {
                icon: e.icon,
                title: (0,
                z.jsx)(_c.EconomyPanel.SERVICES_RESOURCE_FEE_LABEL, {
                    hash: t.name
                }),
                description: (0,
                z.jsx)(_c.EconomyPanel.SERVICES_RESOURCE_FEE_DESCRIPTION, {
                    hash: t.name
                }),
                bottom: (0,
                z.jsxs)(z.Fragment, {
                    children: [(0,
                    z.jsx)(H9, {
                        label: (0,
                        z.jsx)(_c.EconomyPanel.SERVICES_RESOURCE_FEE_CONSUMPTION, {
                            hash: t.name
                        }),
                        theme: Ene,
                        className: $p(Ene, -n),
                        children: (0,
                        z.jsx)(Oc, {
                            signed: !0,
                            value: n,
                            unit: vc.Percentage
                        })
                    }), (0,
                    z.jsx)(H9, {
                        label: (0,
                        z.jsx)(_c.EconomyPanel.SERVICES_RESOURCE_FEE_EFFICIENCY, {}),
                        theme: Ene,
                        className: $p(Ene, s),
                        children: (0,
                        z.jsx)(Oc, {
                            signed: !0,
                            value: s,
                            unit: vc.Percentage
                        })
                    }), (0,
                    z.jsx)(H9, {
                        label: (0,
                        z.jsx)(_c.EconomyPanel.SERVICES_RESOURCE_FEE_HAPPINESS, {}),
                        theme: Ene,
                        className: $p(Ene, t.happinessEffect),
                        children: (0,
                        z.jsx)(Oc, {
                            signed: !0,
                            value: t.happinessEffect,
                            unit: vc.Integer
                        })
                    })]
                }),
                className: Qse.detailLayout
            }) : null
        }
          , sie = ()=>(0,
        z.jsx)(Pte, {
            icon: "Media/Game/Icons/ServiceFees.svg",
            title: (0,
            z.jsx)(_c.EconomyPanel.SERVICES_FEES_LABEL_FEES, {}),
            description: (0,
            z.jsx)(_c.EconomyPanel.SERVICE_FEES_REVENUE_DESCRIPTION, {}),
            className: Qse.detailLayout
        })
          , iie = ()=>(0,
        z.jsx)(Pte, {
            icon: "Media/Game/Icons/Export.svg",
            title: (0,
            z.jsx)(_c.EconomyPanel.SERVICES_FEES_LABEL_EXPORT, {}),
            description: (0,
            z.jsx)(_c.EconomyPanel.SERVICE_EXPORT_REVENUE_DESCRIPTION, {}),
            className: Qse.detailLayout
        })
          , aie = ()=>(0,
        z.jsx)(Pte, {
            icon: "Media/Game/Icons/ServiceUpkeep.svg",
            title: (0,
            z.jsx)(_c.EconomyPanel.SERVICES_TITLE_EXPENSES, {}),
            description: (0,
            z.jsx)(_c.EconomyPanel.SERVICE_UPKEEP_EXPENSE_DESCRIPTION, {}),
            className: Qse.detailLayout
        })
          , oie = ()=>(0,
        z.jsx)(Pte, {
            icon: "Media/Game/Icons/Import.svg",
            title: (0,
            z.jsx)(_c.EconomyPanel.SERVICES_FEES_LABEL_IMPORT, {}),
            description: (0,
            z.jsx)(_c.EconomyPanel.SERVICE_IMPORT_EXPENSE_DESCRIPTION, {}),
            className: Qse.detailLayout
        });
        X.add("game-ui/game/components/economy-panel/service-page/item-detail/service-item-detail.tsx", {
            get ServiceItemDetail() {
                return Zse
            },
            set ServiceItemDetail(e) {
                Zse = e
            }
        });
        let rie = {
            "budget-item": "budget-item_b_g item_It6 item-mouse-states_Fmi item-selected_tAM item-focused_FuT",
            budgetItem: "budget-item_b_g item_It6 item-mouse-states_Fmi item-selected_tAM item-focused_FuT",
            label: "label_vC7",
            field: "field_s_O"
        };
        X.add("game-ui/game/components/economy-panel/service-page/service-detail/budget-item/budget-item.module.scss", {
            get classes() {
                return rie
            },
            set classes(e) {
                Object.assign(rie, e)
            }
        });
        const lie = rie;
        var cie = ({identifier: e, label: t, value: n})=>{
            const {handleFocusChange: s, handleMouseEnter: i, handleMouseLeave: a} = qse(e);
            return (0,
            z.jsx)(Ah, {
                onFocusChange: s,
                children: (0,
                z.jsxs)(Sp, {
                    className: lie.budgetItem,
                    onMouseEnter: i,
                    onMouseLeave: a,
                    children: [(0,
                    z.jsx)("div", {
                        className: lie.label,
                        children: t
                    }), (0,
                    z.jsx)(pne, {
                        value: n,
                        className: lie.field
                    })]
                })
            })
        }
        ;
        X.add("game-ui/game/components/economy-panel/service-page/service-detail/budget-item/budget-item.tsx", {
            get BudgetItem() {
                return cie
            },
            set BudgetItem(e) {
                cie = e
            }
        });
        let uie = {
            slider: "slider_Pjj slider_pUS",
            thumb: "thumb_skm"
        };
        X.add("game-ui/game/components/economy-panel/components/gradient-slider/gradient-slider.module.scss", {
            get classes() {
                return uie
            },
            set classes(e) {
                Object.assign(uie, e)
            }
        });
        const die = uie;
        let mie = {
            "slider-item": "slider-item_pCt item_It6 item-mouse-states_Fmi item-selected_tAM item-focused_FuT",
            sliderItem: "slider-item_pCt item_It6 item-mouse-states_Fmi item-selected_tAM item-focused_FuT",
            gamepad: "gamepad_oWK",
            label: "label_IRx",
            value: "value_jjh",
            slider: "slider_TyY",
            "select-hint": "select-hint_oco",
            selectHint: "select-hint_oco"
        };
        X.add("game-ui/game/components/economy-panel/service-page/service-detail/slider-item/slider-item.module.scss", {
            get classes() {
                return mie
            },
            set classes(e) {
                Object.assign(mie, e)
            }
        });
        const hie = mie;
        var gie = ({identifier: e, label: t, value: n, min: s, max: i, gradient: a, locked: o, onValueChange: r})=>{
            const [l,c] = (0,
            Y.useState)(!1)
              , [u,d] = (0,
            Y.useState)(!1)
              , {handleFocusChange: m, handleMouseEnter: h, handleMouseLeave: g} = qse(e)
              , p = kA(2);
            return (0,
            z.jsx)(Ah, {
                onFocusChange: m,
                children: (0,
                z.jsxs)(Sp, {
                    className: hie.sliderItem,
                    onMouseEnter: h,
                    onMouseLeave: g,
                    onFocusChange: d,
                    children: [(0,
                    z.jsx)(UT, {
                        action: l ? "Back" : "Select",
                        active: u,
                        className: hie.selectHint
                    }), (0,
                    z.jsx)("div", {
                        className: hie.label,
                        children: t
                    }), (0,
                    z.jsx)("div", {
                        className: hie.value,
                        children: (0,
                        z.jsx)(Oc, {
                            value: n,
                            unit: vc.Percentage
                        })
                    }), (0,
                    z.jsx)(Op, {
                        onSelectedStateChanged: c,
                        children: (0,
                        z.jsx)(OG, {
                            value: n,
                            start: s,
                            end: i,
                            gamepadStep: 2,
                            valueTransformer: p,
                            gradient: a,
                            theme: die,
                            className: hie.slider,
                            disabled: o,
                            onChange: r
                        })
                    })]
                })
            })
        }
        ;
        X.add("game-ui/game/components/economy-panel/service-page/service-detail/slider-item/slider-item.tsx", {
            get SliderItem() {
                return gie
            },
            set SliderItem(e) {
                gie = e
            }
        });
        const pie = {
            stops: [{
                offset: 0,
                color: "var(--negativeColor)"
            }, {
                offset: .5,
                color: "#bfac6f"
            }, {
                offset: 1,
                color: "var(--positiveColor)"
            }]
        };
        var fie = ({service: e, value: t, locked: n})=>{
            const s = (0,
            Y.useCallback)((t=>Fj(e, t)), [e]);
            return (0,
            z.jsx)(mT, {
                uiTag: vT.value?.economyPanelServicesBudget,
                children: (0,
                z.jsx)(gie, {
                    identifier: Hse,
                    label: (0,
                    z.jsx)(_c.EconomyPanel.SERVICES_TITLE_BUDGET, {}),
                    value: t,
                    min: 50,
                    max: 150,
                    gradient: pie,
                    locked: n,
                    onValueChange: s
                })
            })
        }
        ;
        X.add("game-ui/game/components/economy-panel/service-page/service-detail/slider-item/budget-slider-item.tsx", {
            get BudgetSliderItem() {
                return fie
            },
            set BudgetSliderItem(e) {
                fie = e
            }
        });
        const xie = {
            stops: [{
                offset: 0,
                color: "var(--positiveColor)"
            }, {
                offset: .5,
                color: "#bfac6f"
            }, {
                offset: 1,
                color: "var(--negativeColor)"
            }]
        };
        var vie = ({item: e, locked: t})=>{
            const n = (0,
            Y.useCallback)((t=>{
                Uj(e.resource, Pd(e.min, e.max, t / 200))
            }
            ), [e.max, e.min, e.resource])
              , s = (0,
            Y.useMemo)((()=>({
                type: Gse.ServiceFee,
                name: e.name
            })), [e.name])
              , i = 200 * (e.fee - e.min) / (e.max - e.min);
            return (0,
            z.jsx)(gie, {
                identifier: s,
                label: (0,
                z.jsx)(_c.EconomyPanel.SERVICES_RESOURCE_FEE_LABEL, {
                    hash: e.name
                }),
                value: i,
                min: 0,
                max: 200,
                gradient: xie,
                locked: t,
                onValueChange: n
            })
        }
        ;
        X.add("game-ui/game/components/economy-panel/service-page/service-detail/slider-item/service-fee-slider-item.tsx", {
            get ServiceFeeSliderItem() {
                return vie
            },
            set ServiceFeeSliderItem(e) {
                vie = e
            }
        });
        let _ie = {
            header: "header_hMN",
            title: "title_mu8",
            "reset-button": "reset-button_UEO button_eqb item-states_QjV",
            resetButton: "reset-button_UEO button_eqb item-states_QjV",
            scrollable: "scrollable_S7e",
            content: "content_SjM",
            adjustment: "adjustment_mUK",
            space: "space_nob",
            budget: "budget_EG1",
            "budget-title": "budget-title_Qqo",
            budgetTitle: "budget-title_Qqo",
            hint: "hint_LNW"
        };
        X.add("game-ui/game/components/economy-panel/service-page/service-detail/service-detail.module.scss", {
            get classes() {
                return _ie
            },
            set classes(e) {
                Object.assign(_ie, e)
            }
        });
        const bie = _ie;
        var Tie = ({service: e, className: t})=>{
            const n = (0,
            Y.useCallback)((()=>Bj(e)), [e])
              , s = ll(Dj, e)
              , i = null != s && (s.budgetAdjustable || s.fees.some((e=>e.adjustable)));
            return (0,
            z.jsx)(s3, {
                theme: n3,
                className: Zu()(bie.serviceDetail, s?.locked && n3.locked, t),
                header: s && (0,
                z.jsxs)("div", {
                    className: bie.header,
                    children: [(0,
                    z.jsx)("div", {
                        className: bie.title,
                        children: (0,
                        z.jsx)(_c.Services.NAME, {
                            hash: s.name
                        })
                    }), i ? (0,
                    z.jsx)(U_, {
                        className: bie.resetButton,
                        disabled: !1,
                        onSelect: n,
                        children: (0,
                        z.jsx)(_c.EconomyPanel.LOAN_FORM_RESET, {})
                    }) : null]
                }),
                children: (0,
                z.jsx)(mb, {
                    className: bie.scrollable,
                    children: (0,
                    z.jsx)(np, {
                        direction: kg.Vertical,
                        onRefocus: tp,
                        children: s && (0,
                        z.jsxs)("div", {
                            className: bie.content,
                            children: [i ? (0,
                            z.jsx)(z.Fragment, {
                                children: (0,
                                z.jsxs)("div", {
                                    className: bie.adjustment,
                                    children: [s.budgetAdjustable && (0,
                                    z.jsx)(fie, {
                                        service: s.entity,
                                        value: s.budgetPercentage,
                                        locked: s.locked
                                    }), s.fees.filter((e=>e.adjustable)).map((e=>(0,
                                    z.jsx)(vie, {
                                        item: e,
                                        locked: s.locked
                                    }, e.resource)))]
                                })
                            }) : null, (0,
                            z.jsx)("div", {
                                className: bie.space
                            }), s.fees.length > 0 && (0,
                            z.jsxs)("div", {
                                className: bie.budget,
                                children: [(0,
                                z.jsx)("div", {
                                    className: bie.budgetTitle,
                                    children: (0,
                                    z.jsx)(_c.EconomyPanel.SERVICES_TITLE_INCOME, {})
                                }), (0,
                                z.jsx)(Eie, {
                                    fees: s.fees
                                })]
                            }), (0,
                            z.jsxs)("div", {
                                className: bie.budget,
                                children: [(0,
                                z.jsx)("div", {
                                    className: bie.budgetTitle,
                                    children: (0,
                                    z.jsx)(_c.EconomyPanel.SERVICES_TITLE_EXPENSES, {})
                                }), (0,
                                z.jsx)(cie, {
                                    identifier: zse,
                                    label: (0,
                                    z.jsx)(_c.EconomyPanel.SERVICES_LABEL_UPKEEP, {}),
                                    value: s.upkeep
                                }), (0,
                                z.jsx)(Iie, {
                                    fees: s.fees
                                })]
                            })]
                        })
                    })
                })
            })
        }
          , Eie = ({fees: e})=>{
            if (e.length > 0) {
                const t = e.reduce(((e,t)=>e + t.incomeInternal), 0)
                  , n = e.reduce(((e,t)=>e + t.incomeExports), 0);
                return (0,
                z.jsxs)(z.Fragment, {
                    children: [(0,
                    z.jsx)(cie, {
                        identifier: Kse,
                        label: (0,
                        z.jsx)(_c.EconomyPanel.SERVICES_FEES_LABEL_FEES, {}),
                        value: t
                    }), e.some((e=>e.exportable || 0 !== e.incomeExports)) && (0,
                    z.jsx)(cie, {
                        identifier: Wse,
                        label: (0,
                        z.jsx)(_c.EconomyPanel.SERVICES_FEES_LABEL_EXPORT, {}),
                        value: n
                    })]
                })
            }
            return null
        }
          , Iie = ({fees: e})=>{
            if (e.some((e=>e.importable || 0 !== e.expenseImports))) {
                const t = e.reduce(((e,t)=>e + t.expenseImports), 0);
                return (0,
                z.jsx)(z.Fragment, {
                    children: (0,
                    z.jsx)(cie, {
                        identifier: Yse,
                        label: (0,
                        z.jsx)(_c.EconomyPanel.SERVICES_FEES_LABEL_IMPORT, {}),
                        value: t
                    })
                })
            }
            return null
        }
        ;
        X.add("game-ui/game/components/economy-panel/service-page/service-detail/service-detail.tsx", {
            get ServiceDetail() {
                return Tie
            },
            set ServiceDetail(e) {
                Tie = e
            },
            get FeeRevenues() {
                return Eie
            },
            set FeeRevenues(e) {
                Eie = e
            },
            get FeeExpenses() {
                return Iie
            },
            set FeeExpenses(e) {
                Iie = e
            }
        });
        let Sie = {
            "service-list": "service-list_xm3",
            serviceList: "service-list_xm3",
            "list-section": "list-section_BJP",
            listSection: "list-section_BJP",
            scrollable: "scrollable_rmv",
            item: "item_JFN button_ECf item_It6 item-mouse-states_Fmi item-selected_tAM item-focused_FuT",
            locked: "locked_ZXT locked_H2O locked_dBl",
            icon: "icon_HoD icon_soN icon_Iwk",
            title: "title_sB9",
            field: "field_Edk",
            "value-column-divider": "value-column-divider_PmA",
            valueColumnDivider: "value-column-divider_PmA",
            "total-section": "total-section_VPy",
            totalSection: "total-section_VPy",
            "total-content": "total-content_gSd",
            totalContent: "total-content_gSd",
            "total-label": "total-label_mVx",
            totalLabel: "total-label_mVx",
            "total-column": "total-column_k3X",
            totalColumn: "total-column_k3X",
            "total-field": "total-field_rfq",
            totalField: "total-field_rfq"
        };
        X.add("game-ui/game/components/economy-panel/service-page/service-list/service-list.module.scss", {
            get classes() {
                return Sie
            },
            set classes(e) {
                Object.assign(Sie, e)
            }
        });
        const yie = Sie;
        var jie = ({selectedService: e, className: t, onSelectService: n})=>{
            const s = sl(kj)
              , i = _p(n)
              , a = s.reduce(((e,t)=>e + t.budget), 0);
            return (0,
            z.jsxs)("div", {
                className: Zu()(yie.serviceList, t),
                children: [(0,
                z.jsx)(mT, {
                    uiTag: vT.value?.economyPanelServicesList,
                    children: (0,
                    z.jsx)(s3, {
                        theme: n3,
                        className: yie.listSection,
                        children: (0,
                        z.jsx)(mb, {
                            className: yie.scrollable,
                            children: (0,
                            z.jsx)(Zg, {
                                focused: Dr(e),
                                direction: kg.Vertical,
                                onChange: i,
                                children: s.map((t=>(0,
                                z.jsx)(Cie, {
                                    item: t,
                                    selected: Ur(t.entity, e),
                                    onSelect: n
                                }, Dr(t.entity))))
                            })
                        })
                    })
                }), (0,
                z.jsx)(s3, {
                    focusKey: Sg,
                    theme: n3,
                    className: yie.totalSection,
                    children: (0,
                    z.jsxs)("div", {
                        className: yie.totalContent,
                        children: [(0,
                        z.jsx)("div", {
                            className: yie.totalLabel,
                            children: (0,
                            z.jsx)(_c.EconomyPanel.MONTHLY_BALANCE, {})
                        }), (0,
                        z.jsx)("div", {
                            className: yie.totalColumn,
                            children: (0,
                            z.jsx)(pne, {
                                value: a,
                                importance: "primary",
                                className: yie.totalField
                            })
                        })]
                    })
                })]
            })
        }
        ;
        const Cie = ({item: e, selected: t, onSelect: n})=>{
            const s = (0,
            Y.useCallback)((()=>n(e.entity)), [e.entity, n])
              , i = (0,
            Y.useMemo)((()=>({
                type: Gse.Service,
                entity: e.entity
            })), [e.entity])
              , {handleFocusChange: a, handleMouseEnter: o, handleMouseLeave: r} = qse(i);
            return (0,
            z.jsx)(Ah, {
                onFocusChange: a,
                children: (0,
                z.jsxs)(U_, {
                    disableHint: !0,
                    focusKey: Dr(e.entity),
                    selected: t,
                    className: Zu()(yie.item, e.locked && yie.locked),
                    onClick: s,
                    onMouseEnter: o,
                    onMouseLeave: r,
                    children: [(0,
                    z.jsx)("img", {
                        src: e.icon,
                        className: yie.icon
                    }), (0,
                    z.jsx)("div", {
                        className: yie.title,
                        children: (0,
                        z.jsx)(_c.Services.NAME, {
                            hash: e.name
                        })
                    }), (0,
                    z.jsx)(pne, {
                        value: e.budget,
                        importance: "secondary",
                        className: yie.field
                    })]
                })
            })
        }
        ;
        X.add("game-ui/game/components/economy-panel/service-page/service-list/service-list.tsx", {
            get ServiceList() {
                return jie
            },
            set ServiceList(e) {
                jie = e
            }
        });
        let Nie = {
            "service-page": "service-page_a6r",
            servicePage: "service-page_a6r",
            "list-column": "list-column_PCc",
            listColumn: "list-column_PCc",
            "main-column": "main-column_WYi",
            mainColumn: "main-column_WYi",
            "info-column": "info-column_oLC",
            infoColumn: "info-column_oLC"
        };
        X.add("game-ui/game/components/economy-panel/service-page/service-page.module.scss", {
            get classes() {
                return Nie
            },
            set classes(e) {
                Object.assign(Nie, e)
            }
        });
        const wie = Nie;
        var Oie = ()=>{
            cg(vT.value?.economyPanelServicesPage);
            const [e,t] = (0,
            Y.useState)(Pie)
              , n = Dm()
              , [s,i] = (0,
            Y.useState)(null)
              , [a,o] = (0,
            Y.useState)(null)
              , r = (0,
            Y.useMemo)((()=>({
                onFocusChange: (e,t)=>{
                    i(t ? e : t=>Kr(e, t, 2) ? null : t)
                }
                ,
                onMouseEnter: e=>o(e),
                onMouseLeave: e=>o((t=>Kr(e, t, 2) ? null : t))
            })), [])
              , l = n ? s : a;
            return (0,
            z.jsx)("div", {
                className: wie.servicePage,
                children: (0,
                z.jsx)($se.Provider, {
                    value: r,
                    children: (0,
                    z.jsxs)(np, {
                        direction: kg.Horizontal,
                        children: [(0,
                        z.jsx)(jie, {
                            selectedService: e,
                            className: wie.listColumn,
                            onSelectService: t
                        }), (0,
                        z.jsx)(Tie, {
                            service: e,
                            className: wie.mainColumn
                        }), (0,
                        z.jsx)(Zse, {
                            service: e,
                            itemId: l,
                            className: wie.infoColumn
                        })]
                    })
                })
            })
        }
        ;
        function Pie() {
            return vw(kj.value)?.entity ?? Zp
        }
        X.add("game-ui/game/components/economy-panel/service-page/service-page.tsx", {
            get ServicePage() {
                return Oie
            },
            set ServicePage(e) {
                Oie = e
            }
        });
        let Lie = {
            colorMinus10: "#1e83aa",
            colorMinus0: "#4bc3f1",
            colorPlus0: "#8bdb46",
            colorPlus30: "#e95f4a",
            "tax-slider": "tax-slider_HNg",
            taxSlider: "tax-slider_HNg",
            rate: "rate_lAq",
            range: "range_EHE",
            "slider-column": "slider-column_XmW",
            sliderColumn: "slider-column_XmW",
            slider: "slider_lZg",
            "estimate-column": "estimate-column_DQB",
            estimateColumn: "estimate-column_DQB",
            "estimate-value": "estimate-value_grH",
            estimateValue: "estimate-value_grH"
        };
        X.add("game-ui/game/components/economy-panel/taxation-page/tax-slider.module.scss", {
            get classes() {
                return Lie
            },
            set classes(e) {
                Object.assign(Lie, e)
            }
        });
        const Aie = Lie;
        var Mie = ({min: e, max: t, rate: n, income: s, range: i, primary: a, className: o, disabled: r, onValueChanged: l})=>{
            const c = (0,
            Y.useMemo)((()=>function(e, t) {
                const n = TN(Aie.colorMinus10) ?? cN
                  , s = TN(Aie.colorMinus0) ?? cN
                  , i = TN(Aie.colorPlus0) ?? cN
                  , a = TN(Aie.colorPlus30) ?? cN;
                if (e < 0 && t <= 0)
                    return {
                        stops: [{
                            offset: 0,
                            color: xN(SN(s, n, Od(e / -10, 0, 1)))
                        }, {
                            offset: 1,
                            color: xN(SN(s, n, Od(t / -10, 0, 1)))
                        }]
                    };
                if (e < 0 && t > 0) {
                    const o = e / (e - t);
                    return {
                        stops: [{
                            offset: 0,
                            color: xN(SN(s, n, Od(e / -10, 0, 1)))
                        }, {
                            offset: o,
                            color: xN(s)
                        }, {
                            offset: o,
                            color: xN(i)
                        }, {
                            offset: 1,
                            color: xN(SN(i, a, Od(t / 30, 0, 1)))
                        }]
                    }
                }
                return {
                    stops: [{
                        offset: 0,
                        color: xN(SN(i, a, Od(e / 30, 0, 1)))
                    }, {
                        offset: 1,
                        color: xN(SN(i, a, Od(t / 30, 0, 1)))
                    }]
                }
            }(e, t)), [e, t]);
            return (0,
            z.jsxs)("div", {
                className: Zu()(Aie.taxSlider, a && Aie.primary, o),
                children: [(0,
                z.jsxs)("div", {
                    className: Aie.sliderColumn,
                    onClick: Db,
                    children: [(0,
                    z.jsx)("div", {
                        className: Zu()(Aie.rate, null != i && i.max - i.min > .1 && Aie.range, r && "disabled"),
                        children: Rie(n, i)
                    }), (0,
                    z.jsx)(OG, {
                        value: n,
                        start: e,
                        end: t,
                        gamepadStep: 1,
                        valueTransformer: RA,
                        theme: die,
                        className: Zu()(Aie.slider, r && "disabled"),
                        gradient: c,
                        onChange: l,
                        disabled: r
                    })]
                }), (0,
                z.jsx)("div", {
                    className: Aie.estimateColumn,
                    children: (0,
                    z.jsx)(pne, {
                        value: s,
                        importance: a ? "secondary" : void 0,
                        className: Zu()(Aie.estimateValue, r && "disabled")
                    })
                })]
            })
        }
        ;
        function Rie(e, t) {
            return null == t ? (0,
            z.jsx)(Oc, {
                value: e,
                unit: vc.PercentageSingleFraction
            }) : t.max - t.min > .1 ? (0,
            z.jsx)(ou, {
                min: t.min,
                max: t.max,
                unit: vc.PercentageSingleFraction
            }) : (0,
            z.jsx)(Oc, {
                value: t.min,
                unit: vc.PercentageSingleFraction
            })
        }
        X.add("game-ui/game/components/economy-panel/taxation-page/tax-slider.tsx", {
            get TaxSlider() {
                return Mie
            },
            set TaxSlider(e) {
                Mie = e
            }
        });
        let kie = {
            "taxation-item": "taxation-item_p0I item-hover_WK8 item-focused_FuT",
            taxationItem: "taxation-item_p0I item-hover_WK8 item-focused_FuT",
            icon: "icon_Eeh",
            title: "title_EA9",
            slider: "slider_rbN"
        };
        X.add("game-ui/game/components/economy-panel/taxation-page/taxation-item.module.scss", {
            get classes() {
                return kie
            },
            set classes(e) {
                Object.assign(kie, e)
            }
        });
        const Die = kie;
        var Fie = ({areaType: e, resource: t})=>{
            const n = ll(AO, t)
              , s = ll(MO, t)
              , i = ll(RO, t)
              , a = (0,
            Y.useCallback)((e=>FO(t.resource, t.area, e)), [t]);
            return (0,
            z.jsxs)(Sp, {
                className: Die.taxationItem,
                children: [(0,
                z.jsx)("img", {
                    className: Die.icon,
                    src: i.icon
                }), (0,
                z.jsx)("div", {
                    className: Die.title,
                    children: 1 !== e.index ? (0,
                    z.jsx)(_c.Resources.TITLE, {
                        hash: i.id
                    }) : (0,
                    z.jsx)(_c.EconomyPanel.TAXATION_RESIDENTIAL_SLIDER_JOBLEVEL, {
                        index: t.resource
                    })
                }), (0,
                z.jsx)(Mie, {
                    effect: 0,
                    rate: n,
                    min: e.resourceTaxRateMin,
                    max: e.resourceTaxRateMax,
                    income: s,
                    className: Die.slider,
                    onValueChanged: a
                })]
            })
        }
        ;
        X.add("game-ui/game/components/economy-panel/taxation-page/taxation-item.tsx", {
            get TaxationItem() {
                return Fie
            },
            set TaxationItem(e) {
                Fie = e
            }
        });
        let Uie = {
            "taxation-group": "taxation-group_aQb",
            taxationGroup: "taxation-group_aQb",
            header: "header_cPd item-hover_WK8 item-focused_FuT",
            icon: "icon_vPX",
            "icon-disabled": "icon-disabled_lo2",
            iconDisabled: "icon-disabled_lo2",
            title: "title_WQ0",
            "toggle-button": "toggle-button_hTU",
            toggleButton: "toggle-button_hTU",
            "header-slider": "header-slider_wLI",
            headerSlider: "header-slider_wLI",
            content: "content_NUa",
            enter: "enter_C0R",
            "exit-active": "exit-active_CJ6",
            exitActive: "exit-active_CJ6",
            "enter-active": "enter-active_kty",
            enterActive: "enter-active_kty",
            exit: "exit_xDo",
            item: "item_YKG",
            hint: "hint_yGN",
            locked: "locked_RSM"
        };
        X.add("game-ui/game/components/economy-panel/taxation-page/taxation-group.module.scss", {
            get classes() {
                return Uie
            },
            set classes(e) {
                Object.assign(Uie, e)
            }
        });
        const Bie = Uie;
        var Gie = ({areaType: e, focused: t, setFocusedGroup: n})=>{
            const [s,i] = (0,
            Y.useState)(!1)
              , a = (0,
            Y.useCallback)((()=>{
                i((e=>!e)),
                cp(lp.expandPanel)
            }
            ), [])
              , o = (0,
            Y.useCallback)((()=>n(e.id)), [e.id, n])
              , r = (0,
            Y.useCallback)((()=>n(null)), [n])
              , l = ll(NO, e.index)
              , c = ll(PO, e.index)
              , u = ll(wO, e.index)
              , d = ll(OO, e.index)
              , m = (0,
            Y.useCallback)((t=>DO(e.index, t)), [e])
              , h = ll(LO, e.index)
              , g = h.length > 0 && !e.locked
              , p = oN("ZonesOffice");
            return (0,
            z.jsx)(Bg, {
                expanded: s,
                expandable: g,
                onAction: a,
                children: (0,
                z.jsx)("div", {
                    className: Bie.taxationGroup,
                    onMouseEnter: o,
                    onMouseLeave: r,
                    children: (0,
                    z.jsxs)(np, {
                        onChange: o,
                        activation: qu.AnyChildren,
                        children: [(0,
                        z.jsx)(H6, {
                            locked: e.locked,
                            requirements: "Office" === e.id ? p.requirements : void 0,
                            children: (0,
                            z.jsxs)(Sp, {
                                className: Bie.header,
                                children: [(0,
                                z.jsx)("img", {
                                    className: Zu()(Bie.icon, e.locked && Bie.iconDisabled),
                                    src: e.icon
                                }), (0,
                                z.jsx)("div", {
                                    className: Zu()(Bie.title, e.locked && "disabled"),
                                    children: (0,
                                    z.jsx)(_c.EconomyPanel.TAX_AREA_TITLE, {
                                        hash: e.id
                                    })
                                }), (0,
                                z.jsx)(UT, {
                                    action: "Expand Group",
                                    active: !e.locked && t,
                                    className: Bie.hint
                                }), g && (0,
                                z.jsx)(tb, {
                                    disableHint: !0,
                                    tinted: !0,
                                    focusKey: Sg,
                                    src: s ? "Media/Glyphs/ThickStrokeArrowUp.svg" : "Media/Glyphs/ThickStrokeArrowDown.svg",
                                    theme: sb,
                                    className: Bie.toggleButton,
                                    onSelect: a
                                }), e.locked && (0,
                                z.jsx)(OZ, {
                                    className: Bie.locked
                                }), (0,
                                z.jsx)(Mie, {
                                    primary: !0,
                                    effect: d,
                                    rate: l,
                                    min: e.taxRateMin,
                                    max: e.taxRateMax,
                                    income: u,
                                    range: c,
                                    className: Bie.headerSlider,
                                    onValueChanged: m,
                                    disabled: e.locked
                                })]
                            })
                        }), g && (0,
                        z.jsx)(wS, {
                            in: s,
                            children: (0,
                            z.jsx)(NS, {
                                styles: Bie,
                                children: (0,
                                z.jsx)("div", {
                                    className: Bie.content,
                                    children: h.map((t=>(0,
                                    z.jsx)(Fie, {
                                        areaType: e,
                                        resource: t
                                    }, t.resource)))
                                })
                            })
                        })]
                    })
                })
            })
        }
        ;
        X.add("game-ui/game/components/economy-panel/taxation-page/taxation-group.tsx", {
            get TaxationGroup() {
                return Gie
            },
            set TaxationGroup(e) {
                Gie = e
            }
        });
        let Vie = {
            "taxation-page": "taxation-page_hmd",
            taxationPage: "taxation-page_hmd",
            "main-column": "main-column_JuD",
            mainColumn: "main-column_JuD",
            "info-column": "info-column_e7N",
            infoColumn: "info-column_e7N",
            "table-section": "table-section_D_X",
            tableSection: "table-section_D_X",
            "table-header": "table-header_qcq",
            tableHeader: "table-header_qcq",
            "header-cell": "header-cell_ori",
            headerCell: "header-cell_ori",
            table: "table_Gl9",
            scrollable: "scrollable_Xqt",
            "table-lines": "table-lines_Abv",
            tableLines: "table-lines_Abv",
            name: "name_DfR",
            rate: "rate_U86",
            estimate: "estimate_d79",
            "total-section": "total-section_IIZ",
            totalSection: "total-section_IIZ",
            "total-content": "total-content_a5i",
            totalContent: "total-content_a5i",
            "total-label": "total-label_hxK",
            totalLabel: "total-label_hxK",
            "total-column": "total-column_rXB",
            totalColumn: "total-column_rXB",
            "total-value": "total-value_hzh",
            totalValue: "total-value_hzh"
        };
        X.add("game-ui/game/components/economy-panel/taxation-page/taxation-page.module.scss", {
            get classes() {
                return Vie
            },
            set classes(e) {
                Object.assign(Vie, e)
            }
        });
        const Hie = Vie;
        var Kie = ()=>{
            const e = sl(CO)
              , t = sl(SO)
              , [n,s] = (0,
            Y.useState)(_w(e, "id"))
              , i = e.find((e=>e.id === n));
            return rg(vT.value?.economyPanelTaxationPage),
            (0,
            z.jsxs)("div", {
                className: Hie.taxationPage,
                children: [(0,
                z.jsxs)("div", {
                    className: Hie.mainColumn,
                    children: [(0,
                    z.jsxs)(s3, {
                        header: (0,
                        z.jsxs)("div", {
                            className: Hie.tableHeader,
                            children: [(0,
                            z.jsx)(mT, {
                                uiTag: vT.value?.economyPanelTaxationType,
                                children: (0,
                                z.jsx)("div", {
                                    className: Zu()(Hie.headerCell, Hie.name),
                                    children: (0,
                                    z.jsx)(_c.EconomyPanel.TAX_AREA_COLUMN_TITLE, {})
                                })
                            }), (0,
                            z.jsx)(mT, {
                                uiTag: vT.value?.economyPanelTaxationRate,
                                children: (0,
                                z.jsx)("div", {
                                    className: Zu()(Hie.headerCell, Hie.rate),
                                    children: (0,
                                    z.jsx)(_c.EconomyPanel.TAX_RATE_TITLE, {})
                                })
                            }), (0,
                            z.jsx)(mT, {
                                uiTag: vT.value?.economyPanelTaxationEstimate,
                                children: (0,
                                z.jsx)("div", {
                                    className: Zu()(Hie.headerCell, Hie.estimate),
                                    children: (0,
                                    z.jsx)(_c.EconomyPanel.TAX_INCOME_ESTIMATE_TITLE, {})
                                })
                            })]
                        }),
                        theme: n3,
                        className: Hie.tableSection,
                        children: [(0,
                        z.jsx)(mb, {
                            className: Hie.scrollable,
                            children: (0,
                            z.jsx)(np, {
                                children: e.map((e=>(0,
                                z.jsx)(Gie, {
                                    focused: n === e.id,
                                    areaType: e,
                                    setFocusedGroup: s
                                }, e.id)))
                            })
                        }), (0,
                        z.jsxs)("div", {
                            className: Hie.tableLines,
                            children: [(0,
                            z.jsx)("div", {
                                className: Hie.name
                            }), (0,
                            z.jsx)("div", {
                                className: Hie.rate
                            }), (0,
                            z.jsx)("div", {
                                className: Hie.estimate
                            })]
                        })]
                    }), (0,
                    z.jsx)(s3, {
                        focusKey: Sg,
                        theme: n3,
                        className: Hie.totalSection,
                        children: (0,
                        z.jsxs)("div", {
                            className: Hie.totalContent,
                            children: [(0,
                            z.jsx)("div", {
                                className: Hie.totalLabel,
                                children: (0,
                                z.jsx)(_c.EconomyPanel.TAX_INCOME_TOTAL_TITLE, {})
                            }), (0,
                            z.jsx)("div", {
                                className: Hie.totalColumn,
                                children: (0,
                                z.jsx)(pne, {
                                    value: t,
                                    importance: "primary",
                                    className: Hie.totalValue
                                })
                            })]
                        })
                    })]
                }), (0,
                z.jsx)(s3, {
                    focusKey: Sg,
                    theme: n3,
                    className: Hie.infoColumn,
                    children: i && (0,
                    z.jsx)(Pte, {
                        icon: i.icon,
                        title: (0,
                        z.jsx)(_c.EconomyPanel.TAX_AREA_TITLE, {
                            hash: i.id
                        }),
                        description: (0,
                        z.jsx)(_c.EconomyPanel.TAX_AREA_DESCRIPTION, {
                            hash: i.id
                        })
                    })
                })]
            })
        }
        ;
        X.add("game-ui/game/components/economy-panel/taxation-page/taxation-page.tsx", {
            get TaxationPage() {
                return Kie
            },
            set TaxationPage(e) {
                Kie = e
            }
        });
        let Wie = {
            "economy-panel": "economy-panel_e08",
            economyPanel: "economy-panel_e08"
        };
        X.add("game-ui/game/components/economy-panel/economy-panel.module.scss", {
            get classes() {
                return Wie
            },
            set classes(e) {
                Object.assign(Wie, e)
            }
        });
        const zie = Wie;
        var Yie = ({selectedTab: e, onSelectTab: t, onClose: n})=>{
            const s = sl(GL)
              , i = sl(vC)
              , a = (0,
            Y.useMemo)((()=>[{
                tab: $v.Budget,
                feature: "City Budget",
                uiTag: vT.value?.economyPanelBudgetTab
            }, {
                tab: $v.Loan,
                feature: "Loan",
                uiTag: vT.value?.economyPanelLoansTab
            }, {
                tab: $v.Taxation,
                feature: "Taxation",
                uiTag: vT.value?.economyPanelTaxationTab
            }, {
                tab: $v.Services,
                feature: "Service Budgets",
                uiTag: vT.value?.economyPanelServicesTab
            }, {
                tab: $v.Production,
                feature: "Production Panel",
                uiTag: vT.value?.economyPanelProductionTab
            }]), [])
              , o = Dm()
              , r = (0,
            Y.useRef)(e)
              , l = (0,
            Y.useMemo)((()=>a.filter((e=>!s || e.tab !== $v.Loan))), [a, s])
              , c = (0,
            Y.useMemo)((()=>({
                "Switch Tab": n=>{
                    if (0 !== n) {
                        const s = l.findIndex((t=>t.tab === e))
                          , i = Xie(n, l, s, o);
                        i >= 0 && i < l.length && i !== s && (lN(a[e].feature) || (r.current = e),
                        t(l[i].tab),
                        cp(n < 0 ? lp.selectPreviousItem : lp.selectNextItem))
                    }
                }
            })), [l, o, t, e, a])
              , u = (0,
            Y.useCallback)((()=>{
                n(),
                i && CC(!0)
            }
            ), [n, i]);
            return (0,
            z.jsx)(rE, {
                header: (0,
                z.jsxs)(z.Fragment, {
                    children: [(0,
                    z.jsx)(dE, {
                        children: (0,
                        z.jsx)(_c.EconomyPanel.TITLE, {})
                    }), (0,
                    z.jsx)(MZ, {
                        children: l.map((n=>(0,
                        z.jsx)($ie, {
                            tab: n.tab,
                            onSelect: t,
                            selectedTab: e,
                            feature: n.feature,
                            uiTag: n.uiTag
                        }, n.tab)))
                    })]
                }),
                transitionSounds: up,
                className: zie.economyPanel,
                onClose: u,
                children: (0,
                z.jsx)(Mg, {
                    actions: c,
                    children: qie(lN(a[e].feature) ? r.current : e)
                })
            })
        }
        ;
        const $ie = ({tab: e, selectedTab: t, feature: n, uiTag: s, onSelect: i})=>{
            const a = oN(n)
              , o = Dm();
            return (0,
            z.jsx)(H6, {
                locked: a.locked,
                requirements: a.requirements,
                forceVisible: o && a.locked && t === e,
                children: (0,
                z.jsx)(RZ, {
                    id: e,
                    uiTag: s,
                    selectedId: t,
                    selectSound: lp.economy,
                    disabled: a.locked,
                    locked: a.locked,
                    onSelect: i,
                    children: (0,
                    z.jsx)(_c.EconomyPanel.TAB, {
                        hash: $v[e]
                    })
                })
            })
        }
        ;
        function qie(e) {
            switch (e) {
            case $v.Budget:
                return (0,
                z.jsx)(Ane, {});
            case $v.Loan:
                return (0,
                z.jsx)(ise, {});
            case $v.Taxation:
                return (0,
                z.jsx)(Kie, {});
            case $v.Services:
                return (0,
                z.jsx)(Oie, {});
            case $v.Production:
                return (0,
                z.jsx)(Vse, {});
            default:
                return null
            }
        }
        const Xie = (e,t,n,s=!1)=>{
            const i = n < 0 ? e < 0 ? 0 : -1 : n;
            for (let n = 1; n <= t.length; n += 1) {
                const a = ((e < 0 ? i - n : i + n) + t.length) % t.length;
                if (s || !lN(t[a].feature))
                    return a
            }
            return -1
        }
        ;
        X.add("game-ui/game/components/economy-panel/economy-panel.tsx", {
            get EconomyPanel() {
                return Yie
            },
            set EconomyPanel(e) {
                Yie = e
            }
        });
        let Qie = {
            "event-journal-entry": "event-journal-entry_swm",
            eventJournalEntry: "event-journal-entry_swm",
            header: "header_YTt",
            icon: "icon_TDT",
            title: "title_CGf",
            date: "date_euC",
            info: "info_fKt",
            entry: "entry_oxi"
        };
        X.add("game-ui/game/components/event-journal/event-journal-entry.module.scss", {
            get classes() {
                return Qie
            },
            set classes(e) {
                Object.assign(Qie, e)
            }
        });
        const Zie = Qie;
        var Jie = ({event: e})=>{
            const t = ll(Vj, e)
              , n = sl(GO)
              , s = ZO(n, sl(HO))
              , i = (0,
            Y.useMemo)((()=>eP(n, t.date)), [t.date, n]);
            let a = 0;
            return (0,
            z.jsxs)(Sp, {
                className: Zie.eventJournalEntry,
                children: [(0,
                z.jsxs)("div", {
                    className: Zie.header,
                    children: [(0,
                    z.jsx)("img", {
                        className: Zie.icon,
                        src: "" !== t.icon ? t.icon : "Media/Game/Icons/Calendar.svg"
                    }), (0,
                    z.jsx)("div", {
                        className: Zie.title,
                        children: (0,
                        z.jsx)(_c.EventJournal.EVENT_TITLE, {
                            hash: t.id
                        })
                    }), (0,
                    z.jsx)("div", {
                        className: Zie.date,
                        children: XO(s, i) ? (0,
                        z.jsx)(wu, {
                            value: i
                        }) : (0,
                        z.jsx)(ju, {
                            value: i
                        })
                    })]
                }), (0,
                z.jsxs)("div", {
                    className: Zie.info,
                    children: [t.data?.map((e=>(0,
                    z.jsxs)("div", {
                        className: Zie.entry,
                        children: [(0,
                        z.jsx)(_c.EventJournal.EFFECT, {
                            hash: e.type
                        }), " : ", e.value]
                    }, a++))), t.effects?.map((e=>(0,
                    z.jsxs)("div", {
                        className: Zie.entry,
                        children: [(0,
                        z.jsx)(_c.EventJournal.EFFECT, {
                            hash: e.type
                        }), " : ", (0,
                        z.jsx)(Oc, {
                            value: e.value,
                            unit: vc.PercentageSingleFraction
                        })]
                    }, a++)))]
                })]
            })
        }
        ;
        X.add("game-ui/game/components/event-journal/event-journal-entry.tsx", {
            get EventJournalEntry() {
                return Jie
            },
            set EventJournalEntry(e) {
                Jie = e
            }
        });
        let eae = {
            "event-journal": "event-journal_yee",
            eventJournal: "event-journal_yee",
            scrollable: "scrollable_XJ4"
        };
        X.add("game-ui/game/components/event-journal/event-journal.module.scss", {
            get classes() {
                return eae
            },
            set classes(e) {
                Object.assign(eae, e)
            }
        });
        const tae = eae;
        var nae = ({onClose: e})=>{
            rg(vT.value?.eventJournalPanel);
            const t = sl(Hj)
              , n = (0,
            Y.useCallback)((()=>{
                Wj(),
                e()
            }
            ), [e]);
            return (0,
            z.jsx)(mT, {
                uiTag: vT.value?.eventJournalPanel,
                children: (0,
                z.jsx)(rE, {
                    theme: lte,
                    transitionSounds: up,
                    className: tae.eventJournal,
                    header: (0,
                    z.jsx)(dE, {
                        children: (0,
                        z.jsx)(_c.EventJournal.PANEL_TITLE, {})
                    }),
                    onClose: n,
                    children: (0,
                    z.jsx)(np, {
                        children: t.length > 0 ? (0,
                        z.jsx)(mb, {
                            className: tae.scrollable,
                            children: t.map((e=>(0,
                            z.jsx)(Jie, {
                                event: e
                            }, Dr(e))))
                        }) : (0,
                        z.jsx)(sJ, {
                            children: (0,
                            z.jsx)(Cb, {
                                children: (0,
                                z.jsx)(_c.EventJournal.OPENING_MESSAGE, {})
                            })
                        })
                    })
                })
            })
        }
        ;
        X.add("game-ui/game/components/event-journal/event-journal.tsx", {
            get EventJournal() {
                return nae
            },
            set EventJournal(e) {
                nae = e
            }
        });
        let sae = {
            "placeholder-chirp-layout": "placeholder-chirp-layout_BAl",
            placeholderChirpLayout: "placeholder-chirp-layout_BAl",
            avatar: "avatar_Cbz",
            content: "content_fgv",
            header: "header_LnA",
            sender: "sender_mvI",
            date: "date_IvA",
            message: "message_F8E",
            word: "word_ift",
            footer: "footer_jEC",
            likes: "likes_Bzb"
        };
        X.add("game-ui/game/components/chirper/items/placeholder-chirp-layout.module.scss", {
            get classes() {
                return sae
            },
            set classes(e) {
                Object.assign(sae, e)
            }
        });
        const iae = sae
          , aae = [1, 4, 2, 7, 3, 3, 5, 4, 2, 3, 4, 2, 8, 5, 6, 3, 1, 2, 3];
        var oae = ({length: e, className: t})=>(0,
        z.jsxs)("div", {
            className: Zu()(iae.placeholderChirpLayout, t),
            children: [(0,
            z.jsx)("div", {
                className: iae.avatar
            }), (0,
            z.jsxs)("div", {
                className: iae.content,
                children: [(0,
                z.jsxs)("div", {
                    className: iae.header,
                    children: [(0,
                    z.jsx)("div", {
                        className: iae.sender,
                        style: {
                            width: 25 + e % 4 * 6 + "%"
                        }
                    }), (0,
                    z.jsx)("div", {
                        className: iae.date
                    })]
                }), (0,
                z.jsx)("div", {
                    className: iae.message,
                    children: Array.from(Array(e).keys()).map(((t,n)=>(0,
                    z.jsx)("div", {
                        className: iae.word,
                        style: {
                            width: 5 * aae[(t + e) % aae.length] + "%"
                        }
                    }, n)))
                }), (0,
                z.jsx)("div", {
                    className: iae.footer,
                    children: (0,
                    z.jsx)("div", {
                        className: iae.likes
                    })
                })]
            })]
        });
        X.add("game-ui/game/components/chirper/items/placeholder-chirp-layout.tsx", {
            get PlaceholderChirpLayout() {
                return oae
            },
            set PlaceholderChirpLayout(e) {
                oae = e
            }
        });
        let rae = {
            "life-path-detail": "life-path-detail_PR3",
            lifePathDetail: "life-path-detail_PR3",
            "info-column": "info-column_pYj",
            infoColumn: "info-column_pYj",
            avatar: "avatar_FMV",
            name: "name_I32",
            age: "age_Wdj",
            description: "description_svN",
            activity: "activity_QvV",
            status: "status_JZS",
            "status-item": "status-item_aJC",
            statusItem: "status-item_aJC",
            "status-icon": "status-icon_ftq",
            statusIcon: "status-icon_ftq",
            "status-label": "status-label_oIB",
            statusLabel: "status-label_oIB",
            "icon-label": "icon-label_HgD",
            iconLabel: "icon-label_HgD",
            link: "link_Zls",
            icon: "icon_b3A",
            label: "label_lMl",
            "feed-column": "feed-column_Idv",
            feedColumn: "feed-column_Idv",
            "back-button": "back-button_HMQ",
            backButton: "back-button_HMQ",
            hint: "hint_AvR",
            "back-hint": "back-hint_WQz",
            backHint: "back-hint_WQz"
        };
        X.add("game-ui/game/components/life-path/life-path-detail/life-path-detail.module.scss", {
            get classes() {
                return rae
            },
            set classes(e) {
                Object.assign(rae, e)
            }
        });
        const lae = rae
          , cae = new Ig("FEED_KEY")
          , uae = new Ig("RESIDENCE_KEY")
          , dae = new Ig("WORKPLACE_KEY")
          , mae = {
            [Yj.Chirp]: e=>(0,
            z.jsx)(Ite, {
                focusKey: Dr(e.entity),
                children: (0,
                z.jsx)(_te, {
                    chirp: e
                })
            }),
            [Yj.LogEntry]: e=>{
                const t = sl(GO);
                return (0,
                z.jsx)(Ste, {
                    focusKey: Dr(e.entity),
                    date: JO(t, e.date),
                    children: (0,
                    z.jsx)(cc, {
                        id: e.messageId
                    })
                })
            }
        };
        var hae = Y.forwardRef((function({selectedCitizen: e, details: t, className: n, onBack: s}, i) {
            cg(vT.value?.lifePathPanelDetail);
            const a = sl(GO)
              , o = Mp(ll(Xj, e))
              , r = Wu(t?.name ?? null)
              , l = Wu(t?.workplaceName ?? null)
              , c = Wu(t?.schoolName ?? null)
              , u = Wu(t?.residenceName ?? null)
              , d = (0,
            Y.useCallback)((()=>t?.entity && Yw(t?.entity)), [t])
              , m = (0,
            Y.useCallback)((()=>t?.residenceEntity && Yw(t?.residenceEntity)), [t])
              , h = (0,
            Y.useCallback)((()=>t?.schoolEntity && Yw(t?.schoolEntity)), [t])
              , g = (0,
            Y.useCallback)((()=>t?.workplaceEntity && Yw(t?.workplaceEntity)), [t])
              , p = XE()
              , f = (0,
            Y.useRef)(!0)
              , x = Pp(_w(o, "entity"));
            (0,
            Y.useEffect)((()=>{
                f.current ? f.current = !1 : p.smoothScrollTo(0, 0)
            }
            ), [x, p]);
            const [v,_] = (0,
            Y.useState)(!1)
              , [b,T] = (0,
            Y.useState)(null);
            return (0,
            z.jsx)(mT, {
                uiTag: vT.value?.lifePathPanelDetail,
                children: (0,
                z.jsxs)("div", {
                    ref: i,
                    className: Zu()(lae.lifePathDetail, n),
                    children: [(0,
                    z.jsxs)(np, {
                        direction: kg.Horizontal,
                        initialFocused: cae,
                        children: [(0,
                        z.jsx)(Ip, {
                            onFocusChange: _,
                            className: lae.infoColumn,
                            children: (0,
                            z.jsxs)(np, {
                                direction: kg.Vertical,
                                onChange: T,
                                children: [(0,
                                z.jsx)(mte, {
                                    entity: t.entity,
                                    className: lae.avatar
                                }), (0,
                                z.jsx)(U_, {
                                    className: lae.name,
                                    onSelect: d,
                                    children: r
                                }), (0,
                                z.jsx)("div", {
                                    className: lae.age,
                                    children: (0,
                                    z.jsx)(_c.SelectedInfoPanel.CITIZEN_AGE, {
                                        hash: t.age
                                    })
                                }), (t.happiness || t.conditions.length > 0) && (0,
                                z.jsxs)("div", {
                                    className: lae.status,
                                    children: [t.happiness && (0,
                                    z.jsx)(gae, {
                                        icon: t.happiness.iconPath,
                                        label: (0,
                                        z.jsx)(_c.SelectedInfoPanel.CITIZEN_HAPPINESS_TITLE, {
                                            hash: t.happiness.key
                                        })
                                    }), t.conditions.length > 0 ? t.conditions?.map((e=>(0,
                                    z.jsx)(gae, {
                                        icon: e.iconPath,
                                        label: (0,
                                        z.jsx)(_c.SelectedInfoPanel.CITIZEN_CONDITION_TITLE, {
                                            hash: e.key
                                        })
                                    }, e.key))) : void 0]
                                }), (0,
                                z.jsx)("div", {
                                    className: lae.activity,
                                    children: (0,
                                    z.jsx)(_c.SelectedInfoPanel.CITIZEN_STATE, {
                                        hash: t.state
                                    })
                                }), (0,
                                z.jsxs)("div", {
                                    className: lae.iconLabel,
                                    children: [(0,
                                    z.jsx)(Z_, {
                                        className: lae.icon,
                                        src: "Media/Glyphs/Education.svg"
                                    }), (0,
                                    z.jsx)("div", {
                                        className: lae.label,
                                        children: (0,
                                        z.jsx)(_c.SelectedInfoPanel.CITIZEN_EDUCATION, {
                                            hash: t.education
                                        })
                                    })]
                                }), (0,
                                z.jsxs)("div", {
                                    className: lae.iconLabel,
                                    children: [(0,
                                    z.jsx)(Z_, {
                                        className: lae.icon,
                                        src: "Student" === t?.occupation ? "Media/Glyphs/School.svg" : "Media/Glyphs/Workplace.svg"
                                    }), (0,
                                    z.jsx)("div", {
                                        className: lae.label,
                                        children: (0,
                                        z.jsx)(_c.SelectedInfoPanel.CITIZEN_OCCUPATION, {
                                            hash: t.occupation
                                        })
                                    })]
                                }), ("Student" === t?.occupation || "Worker" === t?.occupation) && (0,
                                z.jsxs)("div", {
                                    className: lae.iconLabel,
                                    children: [(0,
                                    z.jsx)(Z_, {
                                        className: lae.icon,
                                        src: "Student" === t?.occupation ? "Media/Glyphs/School.svg" : "Media/Glyphs/Workplace.svg"
                                    }), (0,
                                    z.jsx)(UT, {
                                        action: "Select",
                                        active: v && b === dae,
                                        className: lae.hint
                                    }), (0,
                                    z.jsx)("div", {
                                        className: lae.label,
                                        children: (0,
                                        z.jsx)(U_, {
                                            focusKey: dae,
                                            disableHint: !0,
                                            className: lae.link,
                                            onSelect: "Student" === t?.occupation ? h : g,
                                            children: "Student" === t?.occupation ? c : l
                                        })
                                    })]
                                }), null != t.residenceEntity && (0,
                                z.jsxs)("div", {
                                    className: lae.iconLabel,
                                    children: [(0,
                                    z.jsx)(Z_, {
                                        className: lae.icon,
                                        src: "Media/Glyphs/Residence.svg"
                                    }), (0,
                                    z.jsx)(UT, {
                                        action: "Select",
                                        active: v && b === uae,
                                        className: lae.hint
                                    }), (0,
                                    z.jsx)("div", {
                                        className: lae.label,
                                        children: (0,
                                        z.jsx)(U_, {
                                            focusKey: uae,
                                            disableHint: !0,
                                            className: lae.link,
                                            onSelect: m,
                                            children: u
                                        })
                                    })]
                                }), (0,
                                z.jsxs)("div", {
                                    className: lae.iconLabel,
                                    children: [(0,
                                    z.jsx)(Z_, {
                                        className: lae.icon,
                                        src: "Media/Glyphs/Money.svg"
                                    }), (0,
                                    z.jsx)("div", {
                                        className: lae.label,
                                        children: (0,
                                        z.jsx)(_c.SelectedInfoPanel.CITIZEN_WEALTH, {
                                            hash: t.wealth
                                        })
                                    })]
                                })]
                            })
                        }), (0,
                        z.jsx)(mT, {
                            uiTag: vT.value?.lifePathPanelChirps,
                            children: (0,
                            z.jsx)(mb, {
                                controller: p,
                                className: lae.feedColumn,
                                children: (0,
                                z.jsxs)(np, {
                                    focusKey: cae,
                                    direction: kg.Vertical,
                                    children: [(0,
                                    z.jsx)(cD, {
                                        components: mae,
                                        data: o,
                                        keyProvider: rD
                                    }), !o.length && (0,
                                    z.jsxs)(z.Fragment, {
                                        children: [(0,
                                        z.jsx)(Ite, {
                                            focusKey: Sg,
                                            style: {
                                                opacity: .75
                                            },
                                            children: (0,
                                            z.jsx)(oae, {
                                                length: 7
                                            })
                                        }, "placeholder1"), (0,
                                        z.jsx)(Ite, {
                                            focusKey: Sg,
                                            style: {
                                                opacity: .4
                                            },
                                            children: (0,
                                            z.jsx)(oae, {
                                                length: 12
                                            })
                                        }, "placeholder2")]
                                    }), (0,
                                    z.jsx)(Ste, {
                                        focusKey: Sg,
                                        date: ZO(a, t.birthDay),
                                        children: (0,
                                        z.jsx)(_c.LifePath.CITIZEN_BIRTH, {})
                                    }, "birth")]
                                })
                            })
                        })]
                    }), s && (0,
                    z.jsxs)(z.Fragment, {
                        children: [(0,
                        z.jsx)(UT, {
                            action: "Back",
                            className: lae.backHint
                        }), (0,
                        z.jsx)(mT, {
                            uiTag: vT.value?.lifePathPanelBackButton,
                            children: (0,
                            z.jsx)(Eg, {
                                tooltip: (0,
                                z.jsx)(_c.LifePath.BACK_BUTTON_TOOLTIP, {}),
                                children: (0,
                                z.jsx)(tb, {
                                    tinted: !0,
                                    focusKey: Sg,
                                    src: "Media/Glyphs/ArrowRight.svg",
                                    className: lae.backButton,
                                    onSelect: s
                                })
                            })
                        })]
                    })]
                })
            })
        }
        ));
        const gae = ({icon: e, label: t})=>(0,
        z.jsxs)("div", {
            className: lae.statusItem,
            children: [(0,
            z.jsx)("img", {
                className: lae.statusIcon,
                src: e
            }), (0,
            z.jsx)("div", {
                className: lae.statusLabel,
                children: t
            })]
        });
        X.add("game-ui/game/components/life-path/life-path-detail/life-path-detail.tsx", {
            get LifePathDetail() {
                return hae
            },
            set LifePathDetail(e) {
                hae = e
            }
        });
        let pae = {
            scrollable: "scrollable_ANx",
            item: "item_nV8",
            avatar: "avatar_K_x",
            "main-column": "main-column_Dzj",
            mainColumn: "main-column_Dzj",
            name: "name_ALg",
            description: "description_UGS",
            action: "action_oRB",
            hint: "hint_RGc"
        };
        X.add("game-ui/game/components/life-path/life-path-list/life-path-list.module.scss", {
            get classes() {
                return pae
            },
            set classes(e) {
                Object.assign(pae, e)
            }
        });
        const fae = pae
          , xae = {
            ...F_,
            hover: null,
            focus: null
        };
        var vae = Y.forwardRef((function({selectedCitizen: e, className: t, onSelectCitizen: n}, s) {
            const i = sl($j)
              , a = sl(oy)
              , o = (0,
            Y.useRef)()
              , r = (0,
            Y.useCallback)((e=>{
                n(e),
                o.current = e.index
            }
            ), [n])
              , l = (0,
            Y.useCallback)((e=>{
                let t = null;
                if (o.current) {
                    for (const n of e.children.keys())
                        if (n === `lifepath-item:${o.current}`) {
                            t = n;
                            break
                        }
                    o.current = void 0
                }
                return !t && e.children.size && (t = e.children.keys().next().value || null),
                t
            }
            ), []);
            return (0,
            z.jsx)("div", {
                ref: s,
                className: t,
                children: i.length > 0 ? (0,
                z.jsx)(mb, {
                    className: fae.scrollable,
                    children: (0,
                    z.jsx)(np, {
                        onRefocus: l,
                        children: i.map((t=>(0,
                        z.jsx)(_ae, {
                            item: t,
                            selected: Ur(t.entity, e),
                            focused: Ur(t.entity, a),
                            onSelect: r
                        }, Dr(t.entity))))
                    })
                }) : (0,
                z.jsx)(sJ, {
                    children: (0,
                    z.jsx)(Cb, {
                        children: (0,
                        z.jsx)(_c.LifePath.OPENING_MESSAGE, {})
                    })
                })
            })
        }
        ));
        const _ae = ({item: e, selected: t, focused: n, onSelect: s})=>{
            const i = Wu(e.name)
              , a = (0,
            Y.useCallback)((()=>{
                cp(lp.selectItem),
                s(e.entity)
            }
            ), [e.entity, s])
              , o = (0,
            Y.useCallback)((()=>{
                ry(n ? Zp : e.entity)
            }
            ), [n, e.entity])
              , r = (0,
            Y.useCallback)((()=>Jj(e.entity)), [e.entity])
              , l = (0,
            Y.useCallback)((()=>{
                cp(lp.hoverItem)
            }
            ), [])
              , c = (0,
            Y.useMemo)((()=>({
                Select: a,
                "Focus Citizen": n ? null : ()=>ry(e.entity),
                "Unfocus Citizen": n ? ()=>ry(Zp) : null,
                "Unfollow Citizen": ()=>{
                    cp(lp.removeItem),
                    r()
                }
            })), [n, a, r, e.entity])
              , [u,d] = (0,
            Y.useState)(!1);
            return (0,
            z.jsx)(Mg, {
                actions: c,
                children: (0,
                z.jsxs)(Sp, {
                    focusSound: lp.hoverItem,
                    focusKey: `lifepath-item:${e.entity.index}`,
                    className: Zu()(fae.item, t && "selected"),
                    onClick: a,
                    onMouseEnter: l,
                    onFocusChange: d,
                    children: [(0,
                    z.jsx)(UT, {
                        action: "Select",
                        active: u,
                        className: fae.hint
                    }), (0,
                    z.jsx)(mte, {
                        entity: e.entity,
                        className: fae.avatar
                    }), (0,
                    z.jsxs)("div", {
                        className: fae.mainColumn,
                        children: [(0,
                        z.jsx)("div", {
                            className: fae.name,
                            children: i
                        }), (0,
                        z.jsx)("div", {
                            className: fae.description,
                            children: (0,
                            z.jsx)(_c.SelectedInfoPanel.CITIZEN_AGE, {
                                hash: e.age
                            })
                        })]
                    }), (0,
                    z.jsx)(UT, {
                        action: "Focus Citizen",
                        active: u,
                        className: fae.hint
                    }), (0,
                    z.jsx)(Eg, {
                        tooltip: n ? (0,
                        z.jsx)(_c.SelectedInfoPanel.UNFOCUS, {}) : (0,
                        z.jsx)(_c.SelectedInfoPanel.FOCUS, {}),
                        children: (0,
                        z.jsx)(tb, {
                            disableHint: !0,
                            focusKey: Sg,
                            selected: n,
                            src: "Media/Game/Icons/MapMarker.svg",
                            sounds: xae,
                            className: fae.action,
                            onSelect: o,
                            onClick: Db
                        })
                    }), (0,
                    z.jsx)(UT, {
                        action: "Unfollow Citizen",
                        active: u,
                        className: fae.hint
                    }), (0,
                    z.jsx)(Eg, {
                        tooltip: (0,
                        z.jsx)(_c.LifePath.UNFOLLOW_BUTTON_TOOLTIP, {}),
                        children: (0,
                        z.jsx)(tb, {
                            disableHint: !0,
                            tinted: !0,
                            focusKey: Sg,
                            src: "Media/Game/Icons/Unfollow.svg",
                            sounds: xae,
                            selectSound: lp.removeItem,
                            className: fae.action,
                            onSelect: r,
                            onClick: Db
                        })
                    })]
                })
            })
        }
        ;
        X.add("game-ui/game/components/life-path/life-path-list/life-path-list.tsx", {
            get LifePathList() {
                return vae
            },
            set LifePathList(e) {
                vae = e
            }
        });
        let bae = {
            "life-path-panel": "life-path-panel_C3E",
            lifePathPanel: "life-path-panel_C3E",
            content: "content_auJ",
            "detail-visible": "detail-visible_Hku",
            detailVisible: "detail-visible_Hku",
            list: "list_V2f",
            detail: "detail_H5A",
            inactive: "inactive_OSs",
            enter: "enter_w5W",
            "exit-active": "exit-active_c34",
            exitActive: "exit-active_c34",
            "enter-active": "enter-active_Qj1",
            enterActive: "enter-active_Qj1",
            exit: "exit_hrP"
        };
        X.add("game-ui/game/components/life-path/life-path-panel/life-path-panel.module.scss", {
            get classes() {
                return bae
            },
            set classes(e) {
                Object.assign(bae, e)
            }
        });
        const Tae = bae
          , Eae = new Ig("LIST")
          , Iae = new Ig("DETAIL");
        var Sae = ({selectedCitizen: e, onClose: t})=>{
            cg(vT.value?.lifePathPanel);
            const n = ll(qj, e)
              , s = null != n && !Ur(e, Zp);
            return (0,
            z.jsx)(mT, {
                uiTag: vT.value?.lifePathPanel,
                disableBlinking: !0,
                children: (0,
                z.jsx)(rE, {
                    theme: lte,
                    header: (0,
                    z.jsx)(dE, {
                        children: (0,
                        z.jsx)(_c.LifePath.LIST_PANEL_TITLE, {})
                    }),
                    transitionSounds: up,
                    className: Tae.lifePathPanel,
                    contentClassName: Zu()(Tae.content, s && Tae.detailVisible),
                    onClose: t,
                    children: (0,
                    z.jsx)(Fg, {
                        onAction: s ? n_ : void 0,
                        children: (0,
                        z.jsxs)(op, {
                            focused: s ? Iae : Eae,
                            children: [(0,
                            z.jsx)(ap, {
                                focusKey: Iae,
                                children: (0,
                                z.jsx)(ud, {
                                    children: n && (0,
                                    z.jsx)(mh, {
                                        styles: Tae,
                                        children: (0,
                                        z.jsx)(hae, {
                                            selectedCitizen: e,
                                            details: n,
                                            className: Tae.detail,
                                            onBack: n_
                                        })
                                    }, "detail")
                                })
                            }), (0,
                            z.jsx)(ap, {
                                focusKey: Eae,
                                children: (0,
                                z.jsx)(vae, {
                                    selectedCitizen: e,
                                    className: Zu()(Tae.list, s && Tae.inactive),
                                    onSelectCitizen: s_
                                })
                            })]
                        })
                    })
                })
            })
        }
        ;
        X.add("game-ui/game/components/life-path/life-path-panel/life-path-panel.tsx", {
            get LifePathPanel() {
                return Sae
            },
            set LifePathPanel(e) {
                Sae = e
            }
        });
        const yae = "notification";
        var jae, Cae = $r(yae, "notifications");
        function Nae(e) {
            tl(yae, "selectNotification", e)
        }
        !function(e) {
            e[e.None = 0] = "None",
            e[e.Progressing = 1] = "Progressing",
            e[e.Indeterminate = 2] = "Indeterminate",
            e[e.Complete = 3] = "Complete",
            e[e.Failure = 4] = "Failure",
            e[e.Warning = 5] = "Warning"
        }(jae || (jae = {})),
        X.add("game-ui/menu/data-binding/notification-bindings.ts", {
            get notifications() {
                return notifications
            },
            set notifications(e) {
                notifications = e
            },
            get selectNotification() {
                return Nae
            },
            set selectNotification(e) {
                Nae = e
            },
            get ProgressState() {
                return jae
            },
            set ProgressState(e) {
                jae = e
            }
        });
        let wae = {
            "progress-circle": "progress-circle_lIZ progress-circle_OLN",
            progressCircle: "progress-circle_lIZ progress-circle_OLN",
            progress: "progress_EdA progress_mlv",
            complete: "complete_yk6",
            failure: "failure_Zlz"
        };
        X.add("game-ui/menu/components/notifications-panel/notification-progress.module.scss", {
            get classes() {
                return wae
            },
            set classes(e) {
                Object.assign(wae, e)
            }
        });
        const Oae = wae;
        let Pae = {
            "notifications-panel": "notifications-panel_AtV",
            notificationsPanel: "notifications-panel_AtV",
            header: "header_JLb",
            wrapper: "wrapper_x8D",
            scrollable: "scrollable_aqz",
            "item-transition": "item-transition_kWi",
            itemTransition: "item-transition_kWi",
            enter: "enter_imo",
            "enter-active": "enter-active_KuO",
            enterActive: "enter-active_KuO",
            exit: "exit_Dv6",
            "exit-active": "exit-active_QeX",
            exitActive: "exit-active_QeX",
            item: "item_tYE",
            thumbnail: "thumbnail_MaF",
            "main-column": "main-column_j77",
            mainColumn: "main-column_j77",
            title: "title_wMV",
            text: "text__0z",
            "progress-container": "progress-container_Trw",
            progressContainer: "progress-container_Trw",
            "progress-circle": "progress-circle_MKN",
            progressCircle: "progress-circle_MKN",
            "progress-label": "progress-label_bgv",
            progressLabel: "progress-label_bgv",
            "progress-icon": "progress-icon_KDy",
            progressIcon: "progress-icon_KDy",
            "complete-icon": "complete-icon_CuU progress-icon_KDy",
            completeIcon: "complete-icon_CuU progress-icon_KDy",
            "failure-icon": "failure-icon_Pny progress-icon_KDy",
            failureIcon: "failure-icon_Pny progress-icon_KDy",
            "warning-icon": "warning-icon_dBU progress-icon_KDy",
            warningIcon: "warning-icon_dBU progress-icon_KDy"
        };
        X.add("game-ui/menu/components/notifications-panel/notifications-panel.module.scss", {
            get classes() {
                return Pae
            },
            set classes(e) {
                Object.assign(Pae, e)
            }
        });
        const Lae = Pae;
        var Aae = YT({
            Checkmark: "Media/Glyphs/Checkmark.svg",
            Close: "Media/Glyphs/Close.svg",
            Warning: "Media/Glyphs/Warning.svg"
        })
          , Mae = ({className: e})=>{
            const t = sl(Cae);
            return (0,
            z.jsxs)("div", {
                className: Zu()(Lae.notificationsPanel, e),
                children: [(0,
                z.jsx)("div", {
                    className: Lae.header,
                    children: (0,
                    z.jsx)(_c.Menu.NOTIFICATIONS_TITLE, {})
                }), (0,
                z.jsx)("div", {
                    className: Lae.wrapper,
                    children: (0,
                    z.jsx)(mb, {
                        className: Lae.scrollable,
                        children: (0,
                        z.jsx)(np, {
                            children: (0,
                            z.jsx)(ud, {
                                children: t.map((e=>(0,
                                z.jsx)(kae, {
                                    item: e
                                }, e.id)))
                            })
                        })
                    })
                })]
            })
        }
        ;
        const Rae = {
            tension: 30,
            friction: 10
        };
        var kae = ({item: e})=>{
            const t = Sz(Rae, e.progress, e.progress, !0)
              , n = (0,
            Y.useCallback)((()=>{
                Nae(e.id)
            }
            ), [e.id]);
            return (0,
            z.jsx)(NS, {
                styles: Lae,
                children: (0,
                z.jsx)("div", {
                    className: Lae.itemTransition,
                    children: (0,
                    z.jsxs)(U_, {
                        onSelect: n,
                        className: Lae.item,
                        children: [e.thumbnail && (0,
                        z.jsx)("div", {
                            className: Lae.thumbnail,
                            children: (0,
                            z.jsx)("div", {
                                style: {
                                    backgroundImage: `url('${e.thumbnail}')`
                                }
                            })
                        }), (0,
                        z.jsxs)("div", {
                            className: Lae.mainColumn,
                            children: [(0,
                            z.jsx)("div", {
                                className: Lae.title,
                                children: Dae(e)
                            }), (0,
                            z.jsx)("div", {
                                className: Lae.text,
                                children: Fae(e)
                            })]
                        }), e.progressState !== jae.None && (0,
                        z.jsxs)("div", {
                            className: Lae.progressContainer,
                            children: [(0,
                            z.jsx)(Jk, {
                                progress: e.progressState !== jae.Complete ? t : 100,
                                max: 100,
                                indeterminate: e.progressState === jae.Indeterminate,
                                theme: Oae,
                                className: Zu()(Lae.progressCircle, Uae(e))
                            }), Bae(e)]
                        })]
                    })
                })
            })
        }
        ;
        function Dae(e) {
            return null != e.title ? (0,
            z.jsx)(gu, {
                value: e.title
            }) : void 0
        }
        function Fae(e) {
            return null != e.text ? (0,
            z.jsx)(gu, {
                value: e.text
            }) : void 0
        }
        function Uae(e) {
            switch (e.progressState) {
            case jae.Complete:
                return Oae.complete;
            case jae.Failure:
                return Oae.failure;
            default:
                return
            }
        }
        function Bae(e) {
            switch (e.progressState) {
            case jae.Complete:
                return (0,
                z.jsx)(Z_, {
                    src: Aae.Checkmark,
                    className: Lae.completeIcon
                });
            case jae.Failure:
                return (0,
                z.jsx)(Z_, {
                    src: Aae.Close,
                    className: Lae.failureIcon
                });
            case jae.Warning:
                return (0,
                z.jsx)(Z_, {
                    src: Aae.Warning,
                    className: Lae.warningIcon
                });
            case jae.Indeterminate:
                return;
            default:
                return (0,
                z.jsx)("div", {
                    className: Lae.progressLabel,
                    children: (0,
                    z.jsx)(Oc, {
                        value: e.progress,
                        unit: vc.Percentage
                    })
                })
            }
        }
        X.add("game-ui/menu/components/notifications-panel/notifications-panel.tsx", {
            get images() {
                return Aae
            },
            set images(e) {
                Aae = e
            },
            get NotificationsPanel() {
                return Mae
            },
            set NotificationsPanel(e) {
                Mae = e
            },
            get NotificationItem() {
                return kae
            },
            set NotificationItem(e) {
                kae = e
            }
        });
        let Gae = {
            "notifications-panel": "notifications-panel_LaL",
            notificationsPanel: "notifications-panel_LaL",
            content: "content_QBu",
            empty: "empty_KiN"
        };
        X.add("game-ui/game/components/notifications-panel/notifications-panel.module.scss", {
            get classes() {
                return Gae
            },
            set classes(e) {
                Object.assign(Gae, e)
            }
        });
        const Vae = Gae;
        var Hae = ({className: e, onClose: t})=>{
            const n = sl(Cae);
            return (0,
            z.jsxs)(rE, {
                header: (0,
                z.jsx)(dE, {
                    children: (0,
                    z.jsx)(_c.Menu.NOTIFICATIONS_TITLE, {})
                }),
                transitionSounds: up,
                className: Zu()(Vae.notificationsPanel, e),
                onClose: t,
                children: [(0,
                z.jsx)(mb, {
                    className: Vae.content,
                    children: (0,
                    z.jsx)(np, {
                        children: (0,
                        z.jsx)(ud, {
                            children: n.map((e=>(0,
                            z.jsx)(kae, {
                                item: e
                            }, e.id)))
                        })
                    })
                }), (0,
                z.jsx)(wS, {
                    in: !n.length,
                    children: (0,
                    z.jsx)(mh, {
                        styles: y9,
                        children: (0,
                        z.jsx)(sJ, {
                            className: Vae.empty,
                            children: (0,
                            z.jsx)(Cb, {
                                children: (0,
                                z.jsx)(_c.Menu.NOTIFICATIONS_OPENING_MESSAGE, {})
                            })
                        })
                    })
                })]
            })
        }
        ;
        X.add("game-ui/game/components/notifications-panel/notifications-panel.tsx", {
            get NotificationsPanel() {
                return Hae
            },
            set NotificationsPanel(e) {
                Hae = e
            }
        });
        const Kae = "achievements";
        var Wae;
        !function(e) {
            e[e.Available = 0] = "Available",
            e[e.Hidden = 1] = "Hidden",
            e[e.ModsDisabled = 2] = "ModsDisabled",
            e[e.OptionsDisabled = 3] = "OptionsDisabled"
        }(Wae || (Wae = {}));
        var zae = $r(Kae, "achievements")
          , Yae = $r(Kae, "achievementTabStatus");
        X.add("game-ui/game/data-binding/achievement-bindings.ts", {
            get AchievementTabStatus() {
                return Wae
            },
            set AchievementTabStatus(e) {
                Wae = e
            },
            get achievements() {
                return achievements
            },
            set achievements(e) {
                achievements = e
            },
            get achievementTabStatus() {
                return achievementTabStatus
            },
            set achievementTabStatus(e) {
                achievementTabStatus = e
            }
        });
        let $ae = {
            "progress-bar": "progress-bar_VAk",
            progressBar: "progress-bar_VAk",
            "progress-bounds": "progress-bounds_aKD",
            progressBounds: "progress-bounds_aKD",
            progress: "progress_gG0",
            label: "label_D0Y",
            "progress-label": "progress-label_SHL",
            progressLabel: "progress-label_SHL"
        };
        X.add("game-ui/game/components/progression/progression-panel/shared-components/progress-bar/progress-bar.module.scss", {
            get classes() {
                return $ae
            },
            set classes(e) {
                Object.assign($ae, e)
            }
        });
        const qae = $ae;
        let Xae = {
            achievement: "achievement_BUQ item-states_QjV",
            content: "content_n2n",
            left: "left_tyE",
            right: "right_wLd",
            icon: "icon_fbN",
            locked: "locked_tfQ",
            "dlc-icon": "dlc-icon_Ka8",
            dlcIcon: "dlc-icon_Ka8",
            "dev-pill": "dev-pill__Ue",
            devPill: "dev-pill__Ue",
            label: "label_hdQ",
            "progress-bar": "progress-bar_MqT",
            progressBar: "progress-bar_MqT",
            disabled: "disabled_Jh2"
        };
        X.add("game-ui/game/components/progression/progression-panel/achievements-page/achievement.module.scss", {
            get classes() {
                return Xae
            },
            set classes(e) {
                Object.assign(Xae, e)
            }
        });
        const Qae = Xae
          , Zae = ()=>(0,
        z.jsx)("div", {
            className: Qae.devPill
        });
        var Jae = ({achievement: e, selected: t, disabled: n, onHover: s, onSelect: i})=>{
            const a = (0,
            Y.useCallback)((()=>s(e)), [s, e])
              , o = (0,
            Y.useCallback)((()=>cp(lp.hoverItem)), [])
              , r = (0,
            Y.useCallback)((()=>s(null)), [s])
              , l = (0,
            Y.useCallback)((t=>{
                t && (i(e),
                cp(lp.hoverItem))
            }
            ), [e, i])
              , c = (0,
            Y.useCallback)((()=>{
                i(e),
                cp(lp.selectItem)
            }
            ), [e, i]);
            return (0,
            z.jsx)(Sp, {
                onClick: c,
                onMouseOver: a,
                onMouseEnter: o,
                onMouseLeave: r,
                onFocusChange: l,
                className: Zu()(Qae.achievement, n && Qae.disabled, t && "selected", e.locked && Qae.locked),
                children: (0,
                z.jsxs)("div", {
                    className: Qae.content,
                    children: [(0,
                    z.jsxs)("div", {
                        className: Qae.left,
                        children: [e.dlcImage ? (0,
                        z.jsx)("img", {
                            className: Qae.dlcIcon,
                            src: e.dlcImage
                        }) : (0,
                        z.jsx)("div", {
                            className: Qae.dlcIcon
                        }), (0,
                        z.jsx)("img", {
                            className: Qae.icon,
                            src: e.imagePath
                        }), e.isDevelopment && (0,
                        z.jsx)(Zae, {}), (0,
                        z.jsx)("div", {
                            className: Qae.label,
                            children: (0,
                            z.jsx)(_c.Achievements.TITLE, {
                                hash: e.localeKey
                            })
                        })]
                    }), (0,
                    z.jsx)("div", {
                        className: Qae.right,
                        children: e.isIncremental && (0,
                        z.jsx)(yse, {
                            theme: qae,
                            className: Qae.progressBar,
                            progress: e.locked ? e.progress : e.maxProgress,
                            max: e.maxProgress,
                            children: (0,
                            z.jsx)(uu, {
                                value: e.locked ? e.progress : e.maxProgress,
                                total: e.maxProgress,
                                unit: vc.Integer
                            })
                        })
                    })]
                })
            })
        }
        ;
        X.add("game-ui/game/components/progression/progression-panel/achievements-page/achievement.tsx", {
            get Achievement() {
                return Jae
            },
            set Achievement(e) {
                Jae = e
            }
        });
        let eoe = {
            "achievements-page": "achievements-page_jWM",
            achievementsPage: "achievements-page_jWM",
            "main-column": "main-column_tzh",
            mainColumn: "main-column_tzh",
            "info-column": "info-column_Ufp",
            infoColumn: "info-column_Ufp",
            scrollable: "scrollable_AyZ",
            warning: "warning_tU3"
        };
        X.add("game-ui/game/components/progression/progression-panel/achievements-page/achievements-page.module.scss", {
            get classes() {
                return eoe
            },
            set classes(e) {
                Object.assign(eoe, e)
            }
        });
        const toe = eoe;
        var noe = ()=>{
            const e = Dm()
              , t = sl(Yae)
              , n = sl(zae)
              , [s,i] = (0,
            Y.useState)(n[0])
              , [a,o] = (0,
            Y.useState)(null)
              , r = (0,
            Y.useCallback)((t=>{
                e || o(t)
            }
            ), [e]);
            (0,
            Y.useEffect)((()=>{
                e && o(null)
            }
            ), [e]);
            const l = (0,
            Y.useMemo)((()=>null != a ? a : s), [a, s])
              , c = t !== Wae.Available;
            return (0,
            z.jsxs)("div", {
                className: toe.achievementsPage,
                children: [(0,
                z.jsx)(s3, {
                    theme: n3,
                    className: toe.mainColumn,
                    children: (0,
                    z.jsx)(mb, {
                        className: toe.scrollable,
                        children: (0,
                        z.jsx)(np, {
                            children: n.map((e=>(0,
                            z.jsx)(Jae, {
                                selected: s.localeKey === e.localeKey,
                                achievement: e,
                                disabled: c,
                                onSelect: i,
                                onHover: r
                            }, e.localeKey)))
                        })
                    })
                }), (0,
                z.jsx)(soe, {
                    achievement: l,
                    disabled: c
                })]
            })
        }
        ;
        const soe = (0,
        Y.memo)((function({achievement: e, disabled: t}) {
            const n = sl(rM);
            return (0,
            z.jsxs)(s3, {
                focusKey: Sg,
                theme: n3,
                className: toe.infoColumn,
                children: [e && (0,
                z.jsx)(Pte, {
                    icon: e.imagePath,
                    title: (0,
                    z.jsx)(_c.Achievements.TITLE, {
                        hash: e.localeKey
                    }),
                    description: (0,
                    z.jsx)(_c.Achievements.DESCRIPTION, {
                        hash: e.localeKey
                    })
                }), t && (0,
                z.jsx)("div", {
                    className: toe.warning,
                    children: (0,
                    z.jsx)(w9, {
                        unlimitedMoney: n.unlimitedMoney,
                        unlockAll: n.unlockAll,
                        unlockMapTiles: n.unlockMapTiles,
                        modsEnabled: n.usedMods.length > 0
                    })
                })]
            })
        }
        ));
        function ioe() {
            return (0,
            Y.createContext)({
                onItemMouseOver: ()=>{}
                ,
                onItemMouseLeave: ()=>{}
                ,
                onItemSelect: ()=>{}
                ,
                clear: ()=>{}
            })
        }
        function aoe(e) {
            const [t,n] = (0,
            Y.useState)(null)
              , [s,i] = (0,
            Y.useState)(null)
              , a = Dm();
            return [(0,
            Y.useMemo)((()=>({
                onItemMouseOver: e=>n(e),
                onItemMouseLeave: t=>n((n=>null === n || e(t, n) ? null : n)),
                onItemSelect: e=>i(e),
                clear: ()=>{
                    n(null),
                    i(null)
                }
            })), [e]), s, a ? s : t ?? s]
        }
        function ooe(e, t) {
            const n = (0,
            Y.useContext)(e);
            return (0,
            Y.useMemo)((()=>({
                onMouseOver: ()=>n.onItemMouseOver(t),
                onMouseLeave: ()=>n.onItemMouseLeave(t),
                onClick: ()=>n.onItemSelect(t)
            })), [n, t])
        }
        X.add("game-ui/game/components/progression/progression-panel/achievements-page/achievements-page.tsx", {
            get AchievementsPage() {
                return noe
            },
            set AchievementsPage(e) {
                noe = e
            }
        }),
        X.add("game-ui/common/section/detail-layout/detail-context.ts", {
            get createDetailContext() {
                return ioe
            },
            set createDetailContext(e) {
                ioe = e
            },
            get useDetailContext() {
                return aoe
            },
            set useDetailContext(e) {
                aoe = e
            },
            get useElementCallbacks() {
                return ooe
            },
            set useElementCallbacks(e) {
                ooe = e
            }
        });
        var roe = ioe()
          , loe = 0;
        function coe(e, t) {
            return "number" == typeof e || "number" == typeof t ? e === t : Ur(e, t)
        }
        function uoe(e) {
            return "number" == typeof e ? e : Dr(e)
        }
        function doe(e) {
            return e === loe ? loe : Fr(e)
        }
        X.add("game-ui/game/components/progression/progression-panel/milestone-page/milestone-page-context.ts", {
            get MilestonePageContext() {
                return roe
            },
            set MilestonePageContext(e) {
                roe = e
            },
            get LOAN_LIMIT() {
                return loe
            },
            set LOAN_LIMIT(e) {
                loe = e
            },
            get idEquals() {
                return coe
            },
            set idEquals(e) {
                coe = e
            },
            get idKey() {
                return uoe
            },
            set idKey(e) {
                uoe = e
            },
            get parseIdKey() {
                return doe
            },
            set parseIdKey(e) {
                doe = e
            }
        });
        let moe = {
            "milestone-detail-header": "milestone-detail-header_CQr",
            milestoneDetailHeader: "milestone-detail-header_CQr",
            "progress-bar": "progress-bar_jbW",
            progressBar: "progress-bar_jbW",
            subtitle: "subtitle_qwG",
            title: "title_oo7",
            rewards: "rewards_du7",
            "reward-field": "reward-field_SPU",
            rewardField: "reward-field_SPU"
        };
        X.add("game-ui/game/components/progression/progression-panel/milestone-page/milestone-detail/milestone-detail-header/milestone-detail-header.module.scss", {
            get classes() {
                return moe
            },
            set classes(e) {
                Object.assign(moe, e)
            }
        });
        const hoe = moe;
        var goe = ({details: e})=>(0,
        z.jsx)(Ip, {
            className: hoe.milestoneDetailHeader,
            style: {
                backgroundImage: e.image ? `url('${e.image}')` : void 0,
                backgroundColor: xN(e.backgroundColor),
                color: xN(e.textColor)
            },
            children: (0,
            z.jsxs)(np, {
                children: [(0,
                z.jsx)(foe, {
                    xpRequirement: e.xpRequirement
                }), (0,
                z.jsx)("div", {
                    className: hoe.subtitle,
                    children: (0,
                    z.jsx)(_c.Progression.MILESTONE_DETAIL_SUBTITLE, {
                        INDEX: (0,
                        z.jsx)(Oc, {
                            value: e.index,
                            unit: vc.Integer
                        })
                    })
                }), (0,
                z.jsx)("div", {
                    className: hoe.title,
                    children: (0,
                    z.jsx)(_c.Progression.MILESTONE_NAME, {
                        index: e.index
                    })
                }), (0,
                z.jsxs)("div", {
                    className: hoe.rewards,
                    children: [e.reward > 0 && (0,
                    z.jsx)(mT, {
                        uiTag: vT.value?.progressionPanelMilestoneRewardsMoney,
                        children: (0,
                        z.jsx)(BQ, {
                            title: (0,
                            z.jsx)(_c.Progression.TOOLTIP_TITLE_MONEY, {}),
                            description: (0,
                            z.jsx)(_c.Progression.TOOLTIP_DESCRIPTION_MONEY, {}),
                            children: (0,
                            z.jsx)(H9, {
                                focusable: !0,
                                icon: "Media/Game/Icons/Money.svg",
                                className: hoe.rewardField,
                                children: (0,
                                z.jsx)(Oc, {
                                    value: e.reward,
                                    unit: vc.Money
                                })
                            })
                        })
                    }), e.devTreePoints > 0 && (0,
                    z.jsx)(mT, {
                        uiTag: vT.value?.progressionPanelMilestoneRewardsDevPoints,
                        children: (0,
                        z.jsx)(BQ, {
                            title: (0,
                            z.jsx)(_c.Progression.TOOLTIP_TITLE_POINTS, {}),
                            description: (0,
                            z.jsx)(_c.Progression.TOOLTIP_DESCRIPTION_POINTS, {}),
                            children: (0,
                            z.jsx)(H9, {
                                focusable: !0,
                                icon: "Media/Game/Icons/DevPoint.svg",
                                className: hoe.rewardField,
                                children: (0,
                                z.jsx)(Oc, {
                                    value: e.devTreePoints,
                                    unit: vc.Integer,
                                    signed: !0
                                })
                            })
                        })
                    }), e.mapTiles > 0 && (0,
                    z.jsx)(mT, {
                        uiTag: vT.value?.progressionPanelMilestoneRewardsMapTiles,
                        children: (0,
                        z.jsx)(BQ, {
                            title: (0,
                            z.jsx)(_c.Progression.TOOLTIP_TITLE_EXPANSION_PERMITS, {}),
                            description: (0,
                            z.jsx)(_c.Progression.TOOLTIP_DESCRIPTION_EXPANSION_PERMITS, {}),
                            children: (0,
                            z.jsx)(H9, {
                                focusable: !0,
                                icon: "Media/Game/Icons/ExpansionPermit.svg",
                                className: hoe.rewardField,
                                children: (0,
                                z.jsx)(Oc, {
                                    value: e.mapTiles,
                                    unit: vc.Integer,
                                    signed: !0
                                })
                            })
                        })
                    })]
                })]
            })
        });
        const poe = {
            tension: 150,
            friction: 20
        }
          , foe = ({xpRequirement: e})=>{
            const t = sl(AN)
              , n = Od(t, 0, e)
              , s = Od(Sz(poe, t), 0, e)
              , [i,a] = (0,
            Y.useState)(!1);
            return (0,
            z.jsx)(mT, {
                uiTag: vT.value?.progressionPanelMilestoneXP,
                children: (0,
                z.jsx)(BQ, {
                    title: (0,
                    z.jsx)(_c.Main.TOOLTIP_TITLE_XP, {}),
                    description: (0,
                    z.jsx)(_c.Main.TOOLTIP_DESCRIPTION_XP, {}),
                    children: (0,
                    z.jsx)(Ah, {
                        onFocusChange: a,
                        children: (0,
                        z.jsx)(Sp, {
                            children: (0,
                            z.jsx)(yse, {
                                progress: s,
                                max: e,
                                theme: qae,
                                className: Zu()(hoe.progressBar, i && "focused"),
                                children: (0,
                                z.jsx)(uu, {
                                    value: n,
                                    total: e,
                                    unit: vc.XP
                                })
                            })
                        })
                    })
                })
            })
        }
        ;
        X.add("game-ui/game/components/progression/progression-panel/milestone-page/milestone-detail/milestone-detail-header/milestone-detail-header.tsx", {
            get MilestoneDetailHeader() {
                return goe
            },
            set MilestoneDetailHeader(e) {
                goe = e
            }
        });
        let xoe = {
            "unlock-item": "unlock-item_cKn item_It6 item-mouse-states_Fmi item-selected_tAM item-focused_FuT item-states_QjV",
            unlockItem: "unlock-item_cKn item_It6 item-mouse-states_Fmi item-selected_tAM item-focused_FuT item-states_QjV",
            icon: "icon_dN7",
            small: "small_cfi",
            title: "title_tnS"
        };
        X.add("game-ui/game/components/progression/progression-panel/milestone-page/milestone-detail/unlock-item/unlock-item.module.scss", {
            get classes() {
                return xoe
            },
            set classes(e) {
                Object.assign(xoe, e)
            }
        });
        const voe = xoe;
        var _oe = ({id: e, selected: t, small: n, icon: s, title: i, children: a})=>{
            const o = ooe(roe, e);
            return (0,
            z.jsxs)(U_, {
                disableHint: !0,
                focusKey: uoe(e),
                selected: t,
                className: Zu()(voe.unlockItem, n && voe.small),
                ...o,
                children: [(0,
                z.jsx)("div", {
                    className: voe.icon,
                    children: (0,
                    z.jsx)("img", {
                        src: s
                    })
                }), (0,
                z.jsx)("div", {
                    className: voe.title,
                    children: i
                }), a]
            })
        }
        ;
        X.add("game-ui/game/components/progression/progression-panel/milestone-page/milestone-detail/unlock-item/unlock-item.tsx", {
            get UnlockItem() {
                return _oe
            },
            set UnlockItem(e) {
                _oe = e
            }
        });
        let boe = {
            "milestone-detail": "milestone-detail_kYc",
            milestoneDetail: "milestone-detail_kYc",
            scrollable: "scrollable_uML",
            badge: "badge_Dd7",
            theme: "theme_CAs",
            "theme-icon": "theme-icon_c1W",
            themeIcon: "theme-icon_c1W"
        };
        X.add("game-ui/game/components/progression/progression-panel/milestone-page/milestone-detail/milestone-detail.module.scss", {
            get classes() {
                return boe
            },
            set classes(e) {
                Object.assign(boe, e)
            }
        });
        const Toe = boe
          , Eoe = new Ig("UnlocksList");
        var Ioe = ({details: e, unlocks: t, selectedUnlock: n, className: s})=>{
            const {onItemSelect: i} = (0,
            Y.useContext)(roe)
              , a = vp(doe, i);
            return (0,
            z.jsx)(s3, {
                theme: n3,
                className: Zu()(Toe.milestoneDetail, s),
                children: (0,
                z.jsxs)(np, {
                    initialFocused: Eoe,
                    children: [null != e && (0,
                    z.jsx)(goe, {
                        details: e
                    }), (0,
                    z.jsx)(mT, {
                        uiTag: vT.value?.progressionPanelMilestoneRewards,
                        children: (0,
                        z.jsx)(mb, {
                            className: Toe.scrollable,
                            children: (0,
                            z.jsxs)(Zg, {
                                focusKey: Eoe,
                                focused: null != n ? uoe(n) : null,
                                direction: kg.Vertical,
                                onChange: a,
                                onRefocus: Jg,
                                children: [e && e.loanLimit > 0 && (0,
                                z.jsx)(yoe, {
                                    loanLimit: e.loanLimit,
                                    selected: coe(n, loe)
                                }), (0,
                                z.jsx)(cD, {
                                    components: Soe,
                                    data: t,
                                    props: {
                                        selectedUnlock: n
                                    }
                                })]
                            })
                        })
                    })]
                })
            })
        }
        ;
        const Soe = {
            [NN.Feature]: ({selectedUnlock: e, ...t})=>(0,
            z.jsx)(joe, {
                entity: t.entity,
                icon: t.icon,
                title: (0,
                z.jsx)(_c.Assets.NAME, {
                    hash: t.name
                }),
                devTreeUnlocked: !1,
                selected: coe(t.entity, e)
            }),
            [NN.Policy]: ({selectedUnlock: e, ...t})=>(0,
            z.jsx)(joe, {
                entity: t.entity,
                icon: t.icon,
                title: (0,
                z.jsx)(_c.Policy.TITLE, {
                    hash: t.name
                }),
                devTreeUnlocked: !1,
                selected: coe(t.entity, e)
            }),
            [NN.Service]: ({selectedUnlock: e, ...t})=>(0,
            z.jsxs)(z.Fragment, {
                children: [(0,
                z.jsx)(joe, {
                    entity: t.entity,
                    icon: t.icon,
                    title: (0,
                    z.jsx)(_c.Services.NAME, {
                        hash: t.name
                    }),
                    devTreeUnlocked: t.devTreeUnlocked ?? !1,
                    selected: coe(t.entity, e)
                }), t.assets.map((t=>(0,
                z.jsx)(Coe, {
                    item: t,
                    selected: coe(t.entity, e)
                }, Dr(t.entity))))]
            }),
            [NN.Zone]: ({selectedUnlock: e, ...t})=>(0,
            z.jsx)(Coe, {
                zone: !0,
                item: t,
                selected: coe(t.entity, e)
            })
        }
          , yoe = ({loanLimit: e, selected: t})=>(0,
        z.jsx)(_oe, {
            id: loe,
            icon: "Media/Game/Icons/Money.svg",
            title: (0,
            z.jsx)(_c.Progression.LOAN_LIMIT, {}),
            selected: t,
            children: (0,
            z.jsx)("div", {
                className: Toe.badge,
                children: (0,
                z.jsx)(Oc, {
                    value: e,
                    unit: vc.Money,
                    signed: !0
                })
            })
        })
          , joe = ({entity: e, icon: t, title: n, devTreeUnlocked: s, selected: i})=>(0,
        z.jsx)(_oe, {
            id: e,
            selected: i,
            icon: t,
            title: n,
            children: s && (0,
            z.jsx)("div", {
                className: Toe.badge,
                children: (0,
                z.jsx)(_c.Progression.DEV_TREE_UNLOCK_BADGE, {})
            })
        })
          , Coe = ({item: e, selected: t, zone: n})=>{
            const s = sl(fT).filter((t=>e.themes.some((e=>Ur(e, t.entity)))));
            return (0,
            z.jsx)(_oe, {
                small: !n,
                id: e.entity,
                selected: t,
                icon: e.icon,
                title: (0,
                z.jsx)(_c.Assets.NAME, {
                    hash: e.name
                }),
                children: s.map((e=>(0,
                z.jsx)(Eg, {
                    tooltip: (0,
                    z.jsx)(_c.Assets.THEME, {
                        hash: e.name
                    }),
                    children: (0,
                    z.jsx)("div", {
                        className: Toe.theme,
                        children: (0,
                        z.jsx)("img", {
                            src: e.icon,
                            className: Toe.themeIcon
                        })
                    })
                }, Dr(e.entity))))
            })
        }
        ;
        X.add("game-ui/game/components/progression/progression-panel/milestone-page/milestone-detail/milestone-detail.tsx", {
            get MilestoneDetail() {
                return Ioe
            },
            set MilestoneDetail(e) {
                Ioe = e
            }
        });
        let Noe = {
            "milestone-list": "milestone-list_tfM",
            milestoneList: "milestone-list_tfM",
            scrollable: "scrollable_UGT",
            item: "item_LnT item-states_QjV",
            "circle-layout": "circle-layout_Xmw",
            circleLayout: "circle-layout_Xmw",
            line: "line_jbQ",
            unlocked: "unlocked_gJI",
            first: "first_JVl",
            last: "last_gAq",
            circle: "circle_yGr",
            major: "major_RSg",
            title: "title_UOA"
        };
        X.add("game-ui/game/components/progression/progression-panel/milestone-page/milestone-list/milestone-list.module.scss", {
            get classes() {
                return Noe
            },
            set classes(e) {
                Object.assign(Noe, e)
            }
        });
        const woe = Noe;
        var Ooe = ({selectedMilestone: e, className: t, onSelectMilestone: n})=>{
            const s = _p(n)
              , i = sl(kN)
              , a = (0,
            Y.useRef)(null)
              , o = XE();
            return (0,
            Y.useEffect)((()=>{
                window.requestAnimationFrame((()=>{
                    null != a.current && o.scrollIntoView(a.current)
                }
                ))
            }
            ), [o]),
            (0,
            z.jsx)(mT, {
                uiTag: vT.value?.progressionPanelMilestonesList,
                children: (0,
                z.jsx)(s3, {
                    theme: n3,
                    className: Zu()(woe.milestoneList, t),
                    children: (0,
                    z.jsx)(mb, {
                        className: woe.scrollable,
                        controller: o,
                        children: (0,
                        z.jsx)(Zg, {
                            focused: Dr(e),
                            direction: kg.Vertical,
                            onChange: s,
                            children: i.map(((t,s)=>(0,
                            z.jsx)(Poe, {
                                ref: i.length > s + 1 && !i[s + 1].locked ? a : void 0,
                                milestone: t,
                                nextUnlocked: i.length > s + 1 && !i[s + 1].locked,
                                selected: Ur(t.entity, e),
                                first: 0 === s,
                                last: i.length === s + 1,
                                onSelect: n
                            }, Dr(t.entity))))
                        })
                    })
                })
            })
        }
        ;
        const Poe = Y.forwardRef((function({milestone: e, nextUnlocked: t, selected: n, first: s, last: i, onSelect: a, ...o}, r) {
            const l = (0,
            Y.useCallback)((()=>a(e.entity)), [e.entity, a]);
            return (0,
            z.jsxs)(U_, {
                disableHint: !0,
                ref: r,
                focusKey: Dr(e.entity),
                selected: n,
                className: Zu()(woe.item, e.major && woe.major, !e.locked && woe.unlocked),
                onClick: l,
                ...o,
                children: [(0,
                z.jsxs)("div", {
                    className: woe.circleLayout,
                    children: [(0,
                    z.jsx)("div", {
                        className: Zu()(woe.line, !e.locked && woe.unlocked, s && woe.first)
                    }), (0,
                    z.jsx)("div", {
                        className: woe.circle
                    }), (0,
                    z.jsx)("div", {
                        className: Zu()(woe.line, t && woe.unlocked, i && woe.last)
                    })]
                }), (0,
                z.jsx)("div", {
                    className: woe.title,
                    children: (0,
                    z.jsx)(_c.Progression.MILESTONE_NAME, {
                        index: e.index
                    })
                })]
            })
        }
        ));
        X.add("game-ui/game/components/progression/progression-panel/milestone-page/milestone-list/milestone-list.tsx", {
            get MilestoneList() {
                return Ooe
            },
            set MilestoneList(e) {
                Ooe = e
            }
        });
        var Loe = ({id: e, milestoneDetails: t, className: n})=>(0,
        z.jsx)(s3, {
            focusKey: Sg,
            theme: n3,
            className: n,
            children: Aoe(e, t)
        });
        function Aoe(e, t) {
            return e === loe ? (0,
            z.jsx)(Roe, {
                milestoneDetails: t
            }) : null != e ? (0,
            z.jsx)(Moe, {
                entity: e
            }) : null
        }
        const Moe = ({entity: e})=>{
            const t = ll(GN, e);
            return null != t ? (0,
            z.jsx)(Pte, {
                icon: t.icon,
                title: (0,
                z.jsx)(cc, {
                    id: t.titleId
                }),
                description: (0,
                z.jsx)(cc, {
                    id: t.descriptionId
                }),
                children: (0,
                z.jsx)(Mte, {
                    state: t.locked ? "Locked" : "Unlocked"
                })
            }) : null
        }
          , Roe = ({milestoneDetails: e})=>(0,
        z.jsx)(Pte, {
            icon: "Media/Game/Icons/Money.svg",
            title: (0,
            z.jsx)(_c.Progression.LOAN_LIMIT, {}),
            description: (0,
            z.jsx)(_c.EconomyPanel.LOAN_PAGE_DESCRIPTION, {}),
            children: (0,
            z.jsx)(Mte, {
                state: e?.locked ? "Locked" : "Unlocked"
            })
        });
        X.add("game-ui/game/components/progression/progression-panel/milestone-page/unlock-detail/unlock-detail.tsx", {
            get UnlockDetail() {
                return Loe
            },
            set UnlockDetail(e) {
                Loe = e
            }
        });
        let koe = {
            "milestone-page": "milestone-page_dL2",
            milestonePage: "milestone-page_dL2",
            "milestone-list": "milestone-list_C7c",
            milestoneList: "milestone-list_C7c",
            "milestone-detail": "milestone-detail_zdr",
            milestoneDetail: "milestone-detail_zdr",
            "unlock-detail": "unlock-detail_LWQ",
            unlockDetail: "unlock-detail_LWQ"
        };
        X.add("game-ui/game/components/progression/progression-panel/milestone-page/milestone-page.module.scss", {
            get classes() {
                return koe
            },
            set classes(e) {
                Object.assign(koe, e)
            }
        });
        const Doe = koe;
        var Foe = ()=>{
            cg(vT.value?.progressionPanelMilestonesPage);
            const [e,t] = (0,
            Y.useState)(Uoe)
              , [n,s,i] = aoe(coe)
              , a = ll(UN, e)
              , o = ll(BN, e)
              , r = (0,
            Y.useCallback)((e=>{
                t(e),
                n.clear()
            }
            ), [n]);
            return (0,
            z.jsxs)("div", {
                className: Doe.milestonePage,
                children: [(0,
                z.jsxs)(np, {
                    direction: kg.Horizontal,
                    children: [(0,
                    z.jsx)(Ooe, {
                        selectedMilestone: e,
                        onSelectMilestone: r,
                        className: Doe.milestoneList
                    }), (0,
                    z.jsx)(roe.Provider, {
                        value: n,
                        children: (0,
                        z.jsx)(Ioe, {
                            details: a,
                            unlocks: o,
                            selectedUnlock: s,
                            className: Doe.milestoneDetail
                        }, Dr(e))
                    })]
                }), (0,
                z.jsx)(Loe, {
                    id: i,
                    milestoneDetails: a,
                    className: Doe.unlockDetail
                })]
            })
        }
        ;
        function Uoe() {
            const e = kN.value;
            if (0 === e.length)
                return Zp;
            const t = e.findIndex((e=>e.locked));
            return e[t > 1 ? t - 1 : -1 === t ? e.length - 1 : 0].entity
        }
        X.add("game-ui/game/components/progression/progression-panel/milestone-page/milestone-page.tsx", {
            get MilestonePage() {
                return Foe
            },
            set MilestonePage(e) {
                Foe = e
            }
        });
        let Boe = {
            "dev-tree-node-detail": "dev-tree-node-detail_k9G",
            devTreeNodeDetail: "dev-tree-node-detail_k9G",
            content: "content_w8i",
            "detail-layout": "detail-layout_dX7",
            detailLayout: "detail-layout_dX7",
            button: "button_cM0",
            "gamepad-hint": "gamepad-hint_EXG",
            gamepadHint: "gamepad-hint_EXG",
            "button-label": "button-label_mXV",
            buttonLabel: "button-label_mXV",
            cost: "cost_DHr",
            "cost-dp-icon": "cost-dp-icon_C7u",
            costDpIcon: "cost-dp-icon_C7u",
            "unlock-hint": "unlock-hint_PFh",
            unlockHint: "unlock-hint_PFh",
            "points-display": "points-display_S2s",
            pointsDisplay: "points-display_S2s",
            "points-icon": "points-icon_f8_",
            pointsIcon: "points-icon_f8_",
            "points-value": "points-value_cTm",
            pointsValue: "points-value_cTm",
            "hint-icon": "hint-icon_CA0",
            hintIcon: "hint-icon_CA0",
            hint: "hint_ioT"
        };
        X.add("game-ui/game/components/progression/progression-panel/service-page/dev-tree-node-detail/dev-tree-node-detail.module.scss", {
            get classes() {
                return Boe
            },
            set classes(e) {
                Object.assign(Boe, e)
            }
        });
        const Goe = Boe
          , Voe = {
            hint: Goe.hint,
            icon: Goe.hintIcon
        };
        var Hoe = ({node: e, className: t})=>{
            const n = ll(tN, e)
              , s = sl(QC)
              , i = (0,
            Y.useCallback)((()=>{
                iN(e),
                vT.value?.progressionPanelDevelopmentUnlockNode && ag(vT.value?.progressionPanelDevelopmentUnlockNode)
            }
            ), [e])
              , a = function(e, t) {
                if (null === e)
                    return null;
                if (e.unlockable)
                    return t < e.cost ? (0,
                    z.jsx)(_c.Progression.NODE_DEV_POINTS_REQUIREMENT, {}) : null;
                if (e.requirementCount > 0)
                    return (0,
                    z.jsx)(_c.Progression.NODE_PARENT_REQUIREMENT, {});
                if (e.milestoneRequirement > 0)
                    return (0,
                    z.jsx)(_c.Progression.NODE_MILESTONE_REQUIREMENT, {
                        INDEX: (0,
                        z.jsx)(Oc, {
                            value: e.milestoneRequirement,
                            unit: vc.Integer
                        })
                    })
            }(n, s);
            return (0,
            z.jsx)(s3, {
                focusKey: Sg,
                theme: n3,
                className: Zu()(Goe.devTreeNodeDetail, t),
                children: (0,
                z.jsxs)("div", {
                    className: Goe.content,
                    children: [null != n && (0,
                    z.jsxs)(Pte, {
                        icon: n.icon,
                        title: (0,
                        z.jsx)(_c.Progression.NODE_NAME, {
                            hash: n.name
                        }),
                        description: (0,
                        z.jsx)(_c.Progression.NODE_DESCRIPTION, {
                            hash: n.name
                        }),
                        children: [(0,
                        z.jsx)(Mte, {
                            state: n.locked ? "Locked" : "Unlocked"
                        }), n.locked && (0,
                        z.jsxs)(z.Fragment, {
                            children: [n.cost > 0 && (0,
                            z.jsx)(mT, {
                                uiTag: vT.value?.progressionPanelDevelopmentUnlockNode,
                                children: (0,
                                z.jsxs)(U_, {
                                    theme: JI,
                                    selectSound: lp.purchase,
                                    className: Goe.button,
                                    disabled: !n.unlockable || n.cost > s,
                                    onSelect: i,
                                    children: [(0,
                                    z.jsx)(UT, {
                                        action: "Purchase Dev Tree Node",
                                        active: !0 === n?.unlockable && s >= n?.cost,
                                        theme: Voe
                                    }), (0,
                                    z.jsx)("div", {
                                        className: Goe.buttonLabel,
                                        children: (0,
                                        z.jsx)(_c.Progression.UNLOCK_NODE_BUTTON, {})
                                    }), (0,
                                    z.jsxs)("div", {
                                        className: Goe.cost,
                                        children: [(0,
                                        z.jsx)(Oc, {
                                            value: n.cost,
                                            unit: vc.Integer
                                        }), (0,
                                        z.jsx)("img", {
                                            src: "Media/Game/Icons/DevPoint.svg",
                                            className: Goe.costDpIcon
                                        })]
                                    })]
                                })
                            }), null != a && (0,
                            z.jsx)("div", {
                                className: Goe.unlockHint,
                                children: a
                            })]
                        })]
                    }), (0,
                    z.jsxs)("div", {
                        className: Goe.pointsDisplay,
                        children: [(0,
                        z.jsx)("img", {
                            src: "Media/Game/Icons/DevPoint.svg",
                            className: Goe.pointsIcon
                        }), (0,
                        z.jsx)("div", {
                            className: Goe.pointsValue,
                            children: (0,
                            z.jsx)(_c.Progression.AVAILABLE_DEV_POINTS, {
                                VALUE: (0,
                                z.jsx)(Oc, {
                                    value: s,
                                    unit: vc.Integer
                                })
                            })
                        })]
                    })]
                })
            })
        }
        ;
        X.add("game-ui/game/components/progression/progression-panel/service-page/dev-tree-node-detail/dev-tree-node-detail.tsx", {
            get DevTreeNodeDetail() {
                return Hoe
            },
            set DevTreeNodeDetail(e) {
                Hoe = e
            }
        });
        let Koe = {
            "service-detail-header": "service-detail-header_uCS",
            serviceDetailHeader: "service-detail-header_uCS",
            title: "title_XWg",
            "progress-bar": "progress-bar_PBl",
            progressBar: "progress-bar_PBl"
        };
        X.add("game-ui/game/components/progression/progression-panel/service-page/service-detail/service-detail-header.module.scss", {
            get classes() {
                return Koe
            },
            set classes(e) {
                Object.assign(Koe, e)
            }
        });
        const Woe = Koe;
        var zoe = ({details: e})=>{
            const t = sl(ON);
            return (0,
            z.jsxs)("div", {
                className: Woe.serviceDetailHeader,
                children: [(0,
                z.jsx)("div", {
                    className: Woe.title,
                    children: (0,
                    z.jsx)(_c.Services.NAME, {
                        hash: e.name
                    })
                }), e.milestoneRequirement > t && (0,
                z.jsx)(Yoe, {
                    currentMilestone: t,
                    targetMilestone: e.milestoneRequirement
                })]
            })
        }
        ;
        const Yoe = ({currentMilestone: e, targetMilestone: t})=>(0,
        z.jsx)(yse, {
            progress: e,
            max: t,
            theme: qae,
            className: Woe.progressBar,
            children: (0,
            z.jsx)(_c.Progression.MILESTONE_UNLOCK_REQUIREMENT, {
                INDEX: (0,
                z.jsx)(Oc, {
                    value: t,
                    unit: vc.Integer
                }),
                NAME: (0,
                z.jsx)(_c.Progression.MILESTONE_NAME, {
                    index: t
                })
            })
        });
        X.add("game-ui/game/components/progression/progression-panel/service-page/service-detail/service-detail-header.tsx", {
            get ServiceDetailHeader() {
                return zoe
            },
            set ServiceDetailHeader(e) {
                zoe = e
            }
        });
        let $oe = {
            "service-dev-tree": "service-dev-tree_Azt",
            serviceDevTree: "service-dev-tree_Azt",
            canvas: "canvas_xTK",
            "node-layer": "node-layer_Qxl",
            nodeLayer: "node-layer_Qxl",
            node: "node_qXI",
            container: "container_Y6w",
            title: "title_iof",
            selected: "selected_tgO",
            "circle-outline": "circle-outline_wOz",
            circleOutline: "circle-outline_wOz",
            circle: "circle_wRS",
            unlockable: "unlockable_RZR",
            locked: "locked_g7f",
            "cost-container": "cost-container_RMQ",
            costContainer: "cost-container_RMQ",
            cost: "cost_x8o",
            "cost-dp-icon": "cost-dp-icon_sWc",
            costDpIcon: "cost-dp-icon_sWc",
            hint: "hint_gGk",
            hintIcon: "hintIcon_otz"
        };
        X.add("game-ui/game/components/progression/progression-panel/service-page/service-detail/service-dev-tree.module.scss", {
            get classes() {
                return $oe
            },
            set classes(e) {
                Object.assign($oe, e)
            }
        });
        const qoe = $oe
          , Xoe = {
            hint: qoe.hint,
            icon: qoe.hintIcon
        };
        var Qoe = ({service: e, selectedNode: t, locked: n, className: s, onHoverNode: i, onSelectNode: a})=>{
            const o = (0,
            Y.useRef)(null)
              , r = Hd(hm(o) ?? Ad)
              , l = Hm()
              , c = ll(eN, e)
              , u = c.reduce(((e,t)=>({
                x: Math.max(e.x, t.position.x + 1),
                y: Math.max(e.y, t.position.y + 1)
            })), {
                x: 5,
                y: 0
            });
            (0,
            Y.useEffect)((()=>{
                if (null == t || !c.some((e=>Ur(e.entity, t)))) {
                    const e = c.reduce(((e,t)=>null == e || t.position.x < e.position.x || t.position.x === e.position.x && t.position.y < e.position.y ? t : e), null);
                    null != e && a(e.entity)
                }
            }
            ), [c, a, t]);
            const d = _p(a)
              , m = r.x / u.x
              , h = 128 * l
              , g = h * u.y
              , p = .5 * (r.y - g);
            return (0,
            z.jsxs)("div", {
                ref: o,
                className: Zu()(qoe.serviceDevTree, s),
                children: [(0,
                z.jsx)(Zoe, {
                    canvasWidth: r.x,
                    canvasHeight: r.y,
                    columnCount: u.x,
                    columnWidth: m,
                    rowHeight: h,
                    verticalOffset: p,
                    lineWidth: 4 * l,
                    nodeRadius: 31 * l,
                    locked: n,
                    nodes: c
                }), (0,
                z.jsx)("div", {
                    className: qoe.nodeLayer,
                    children: (0,
                    z.jsx)(Zg, {
                        focused: Dr(t),
                        onChange: d,
                        children: !Fd(r, Ad) && c.map((e=>(0,
                        z.jsx)(nre, {
                            node: e,
                            selected: Ur(t, e.entity),
                            style: {
                                top: p + e.position.y * h + "px",
                                left: m * e.position.x + "px",
                                width: m + "px",
                                height: h + "px"
                            },
                            onHover: i,
                            onSelect: a
                        }, Dr(e.entity))))
                    })
                })]
            })
        }
        ;
        const Zoe = ({canvasWidth: e, canvasHeight: t, columnWidth: n, rowHeight: s, verticalOffset: i, lineWidth: a, nodeRadius: o, columnCount: r, locked: l, nodes: c})=>{
            const [u,d] = (0,
            Y.useState)(null)
              , m = (0,
            Y.useCallback)((e=>d(e?.getContext("2d") ?? null)), []);
            return (0,
            Y.useEffect)((()=>{
                if (!u)
                    return;
                u.clearRect(0, 0, e, t),
                u.fillStyle = "#ffffff",
                u.globalAlpha = .05;
                for (let e = 1; e < r; e += 2)
                    u.fillRect(e * n, 0, n, t);
                u.globalAlpha = 1,
                u.lineWidth = a;
                const l = c.sort(Joe);
                for (const e of l) {
                    const t = (e.position.x + .5) * n
                      , a = i + (e.position.y + .5) * s
                      , r = e.requirements;
                    if (r.length > 0) {
                        const l = r.map((e=>c.find((t=>Ur(e, t.entity))))).filter((e=>null != e)).sort(Joe).reverse();
                        for (const r of l) {
                            if (Fd(r.position, e.position) || r.position.x > e.position.x)
                                continue;
                            u.strokeStyle = ere(r, e);
                            const l = (r.position.x + .5) * n
                              , c = i + (r.position.y + .5) * s;
                            if (e.position.x > r.position.x) {
                                const n = l + o
                                  , s = t - o
                                  , i = tre(r, e)
                                  , d = n + (s - n) * i
                                  , m = n + (s - n) * (1 - i)
                                  , h = c
                                  , g = a;
                                u.beginPath(),
                                u.moveTo(l + o, c),
                                u.bezierCurveTo(d, h, m, g, s, a),
                                u.stroke()
                            } else {
                                const n = Math.sign(e.position.y - r.position.y)
                                  , s = c + n * o
                                  , i = a - n * o;
                                u.beginPath(),
                                u.moveTo(l, s),
                                u.lineTo(t, i),
                                u.stroke()
                            }
                        }
                    } else if (0 === e.position.x) {
                        u.strokeStyle = ere(null, e);
                        const n = 0
                          , s = t - o;
                        u.beginPath(),
                        u.moveTo(n, a),
                        u.lineTo(s, a),
                        u.stroke()
                    }
                }
            }
            ), [u, t, e, c, r, n, i, s, a, o, l]),
            e > 0 && t > 0 ? (0,
            z.jsx)("canvas", {
                ref: m,
                width: e,
                height: t,
                className: qoe.canvas
            }) : null
        }
        ;
        function Joe(e, t) {
            return !e.locked && t.locked ? 1 : e.locked && !t.locked ? -1 : e.unlockable && !t.unlockable ? 1 : !e.unlockable && t.unlockable ? -1 : 0
        }
        function ere(e, t) {
            return t.locked ? (null != e ? !e.locked : t.unlockable) ? "#2378CD" : "#555" : "#8bdb46"
        }
        function tre(e, t) {
            return t.position.x - e.position.x <= 1 ? .7 : .4
        }
        const nre = ({node: e, selected: t, style: n, className: s, onHover: i, onSelect: a})=>{
            const [o,r] = (0,
            Y.useState)(!1)
              , l = sl(QC)
              , c = (0,
            Y.useCallback)((()=>{
                cp(lp.selectItem),
                a(e.entity)
            }
            ), [e.entity, a])
              , u = sre(e, l)
              , d = (0,
            Y.useMemo)((()=>({
                "Purchase Dev Tree Node": u ? ()=>{
                    cp(lp.purchase),
                    iN(e.entity)
                }
                : null
            })), [e.entity, u])
              , m = (0,
            Y.useCallback)((()=>cp(lp.hoverItem)), [])
              , h = (0,
            Y.useCallback)((()=>i(e.entity)), [e.entity, i])
              , g = (0,
            Y.useCallback)((()=>i(Zp)), [i])
              , p = (0,
            Y.useMemo)((()=>e.unlockable && e.cost > 0 && l >= e.cost ? vT.value?.progressionPanelDevelopmentUnlockableNode : vT.value?.progressionPanelDevelopmentNode), [l, e.cost, e.unlockable]);
            return (0,
            z.jsx)(Mg, {
                actions: d,
                children: (0,
                z.jsxs)(Sp, {
                    focusKey: Dr(e.entity),
                    focusSound: lp.hoverItem,
                    className: Zu()(s, qoe.node, t && qoe.selected, e.locked && (e.unlockable ? qoe.unlockable : qoe.locked)),
                    style: n,
                    onClick: c,
                    onMouseOver: h,
                    onMouseEnter: m,
                    onMouseLeave: g,
                    onFocusChange: r,
                    children: [(0,
                    z.jsx)(UT, {
                        action: "Purchase Dev Tree Node",
                        active: o && u,
                        theme: Xoe
                    }), (0,
                    z.jsxs)("div", {
                        className: qoe.container,
                        children: [(0,
                        z.jsx)("div", {
                            className: qoe.circleOutline,
                            children: (0,
                            z.jsx)(mT, {
                                uiTag: p,
                                children: (0,
                                z.jsx)("div", {
                                    className: qoe.circle,
                                    children: (0,
                                    z.jsx)("img", {
                                        src: e.icon
                                    })
                                })
                            })
                        }), (0,
                        z.jsx)("div", {
                            className: qoe.title,
                            children: (0,
                            z.jsx)(_c.Progression.NODE_NAME, {
                                hash: e.name
                            })
                        }), (0,
                        z.jsx)("div", {
                            className: qoe.costContainer,
                            children: e.locked && e.cost > 0 && (0,
                            z.jsx)(BQ, {
                                title: (0,
                                z.jsx)(_c.Progression.TOOLTIP_TITLE_POINTS_COST, {}),
                                description: (0,
                                z.jsx)(_c.Progression.TOOLTIP_DESCRIPTION_POINTS_COST, {}),
                                children: (0,
                                z.jsxs)("div", {
                                    className: qoe.cost,
                                    children: [(0,
                                    z.jsx)(Oc, {
                                        value: e.cost,
                                        unit: vc.Integer
                                    }), (0,
                                    z.jsx)("img", {
                                        src: "Media/Game/Icons/DevPoint.svg",
                                        className: qoe.costDpIcon
                                    })]
                                })
                            })
                        })]
                    })]
                })
            })
        }
          , sre = (e,t)=>!(!e.locked || !e.unlockable || t < e.cost);
        X.add("game-ui/game/components/progression/progression-panel/service-page/service-detail/service-dev-tree.tsx", {
            get ServiceDevTree() {
                return Qoe
            },
            set ServiceDevTree(e) {
                Qoe = e
            }
        });
        let ire = {
            "service-detail": "service-detail_Cba",
            serviceDetail: "service-detail_Cba",
            "dev-tree": "dev-tree_af6",
            devTree: "dev-tree_af6"
        };
        X.add("game-ui/game/components/progression/progression-panel/service-page/service-detail/service-detail.module.scss", {
            get classes() {
                return ire
            },
            set classes(e) {
                Object.assign(ire, e)
            }
        });
        const are = ire;
        var ore = ({service: e, selectedNode: t, className: n, onHoverNode: s, onSelectNode: i})=>{
            const a = ll(JC, e)
              , o = a?.locked ?? !1;
            return (0,
            z.jsx)(s3, {
                theme: n3,
                header: null != a && (0,
                z.jsx)(zoe, {
                    details: a
                }),
                className: Zu()(are.serviceDetail, o && n3.locked, n),
                children: (0,
                z.jsx)(Qoe, {
                    service: e,
                    selectedNode: t,
                    locked: o,
                    className: are.devTree,
                    onHoverNode: s,
                    onSelectNode: i
                })
            })
        }
        ;
        X.add("game-ui/game/components/progression/progression-panel/service-page/service-detail/service-detail.tsx", {
            get ServiceDetail() {
                return ore
            },
            set ServiceDetail(e) {
                ore = e
            }
        });
        let rre = {
            button: "button_Sxm button_ECf item_It6 item-mouse-states_Fmi item-selected_tAM item-focused_FuT",
            "toggle-states": "toggle-states_q6D",
            toggleStates: "toggle-states_q6D",
            icon: "icon_FKY icon_soN icon_Iwk",
            locked: "locked_K2j locked_H2O locked_dBl"
        };
        X.add("game-ui/game/themes/panel-service-button.module.scss", {
            get classes() {
                return rre
            },
            set classes(e) {
                Object.assign(rre, e)
            }
        });
        const lre = rre;
        let cre = {
            "service-list": "service-list_RLT",
            serviceList: "service-list_RLT",
            lock: "lock_H9c"
        };
        X.add("game-ui/game/components/progression/progression-panel/service-page/service-list/service-list.module.scss", {
            get classes() {
                return cre
            },
            set classes(e) {
                Object.assign(cre, e)
            }
        });
        const ure = cre;
        var dre = ({selectedService: e, className: t, onSelectService: n})=>{
            const s = _p(n)
              , i = sl(ZC);
            return (0,
            z.jsx)(s3, {
                theme: n3,
                className: Zu()(ure.serviceList, t),
                children: (0,
                z.jsx)(Zg, {
                    focused: Dr(e),
                    direction: kg.Vertical,
                    onChange: s,
                    onRefocus: Jg,
                    children: i.map(((t,s)=>(0,
                    z.jsx)(mre, {
                        index: s,
                        service: t,
                        selected: Ur(t.entity, e),
                        onSelect: n
                    }, Dr(t.entity))))
                })
            })
        }
        ;
        const mre = ({index: e, service: t, selected: n, onSelect: s})=>{
            const i = Hm()
              , a = (0,
            Y.useCallback)((()=>s(t.entity)), [t.entity, s])
              , o = (0,
            Y.useMemo)((()=>`${vT.value?.progressionPanelDevelopmentService}+${t.uiTag}`), [t.uiTag]);
            return (0,
            z.jsx)(mT, {
                uiTag: o,
                children: (0,
                z.jsx)(H6, {
                    title: (0,
                    z.jsx)(_c.Services.NAME, {
                        hash: t.name
                    }),
                    description: (0,
                    z.jsx)(_c.Services.DESCRIPTION, {
                        hash: t.name
                    }),
                    locked: t.locked,
                    requirements: t.requirements,
                    children: (0,
                    z.jsx)(tb, {
                        disableHint: !0,
                        focusKey: Dr(t.entity),
                        src: t.icon,
                        selected: n,
                        theme: lre,
                        className: Zu()(t.locked && lre.locked),
                        onClick: a,
                        children: t.locked && (0,
                        z.jsx)(OZ, {
                            className: ure.lock,
                            style: {
                                top: (48 * (e + 1) - 12) * i
                            }
                        })
                    })
                })
            })
        }
        ;
        X.add("game-ui/game/components/progression/progression-panel/service-page/service-list/service-list.tsx", {
            get ServiceList() {
                return dre
            },
            set ServiceList(e) {
                dre = e
            }
        });
        let hre = {
            "service-page": "service-page_Rls",
            servicePage: "service-page_Rls",
            "list-column": "list-column_KaJ",
            listColumn: "list-column_KaJ",
            "main-column": "main-column_vAd",
            mainColumn: "main-column_vAd",
            "info-column": "info-column_Za4",
            infoColumn: "info-column_Za4"
        };
        X.add("game-ui/game/components/progression/progression-panel/service-page/service-page.module.scss", {
            get classes() {
                return hre
            },
            set classes(e) {
                Object.assign(hre, e)
            }
        });
        const gre = hre;
        var pre = ()=>{
            cg(vT.value?.progressionPanelDevelopmentPage);
            const e = sl(ZC)
              , t = sl(nN)
              , n = Ur(t, Zp) ? e.length > 0 ? e[0].entity : Zp : t
              , s = sl(sN)
              , [i,a] = (0,
            Y.useState)(Zp);
            return (0,
            z.jsx)(np, {
                children: (0,
                z.jsxs)("div", {
                    className: gre.servicePage,
                    children: [(0,
                    z.jsx)(dre, {
                        selectedService: n,
                        onSelectService: nN.update,
                        className: gre.listColumn
                    }), (0,
                    z.jsx)(ore, {
                        service: n,
                        selectedNode: s,
                        onHoverNode: a,
                        onSelectNode: sN.update,
                        className: gre.mainColumn
                    }), (0,
                    z.jsx)(Hoe, {
                        node: Ur(i, Zp) ? s : i,
                        className: gre.infoColumn
                    })]
                })
            })
        }
        ;
        X.add("game-ui/game/components/progression/progression-panel/service-page/service-page.tsx", {
            get ServicePage() {
                return pre
            },
            set ServicePage(e) {
                pre = e
            }
        });
        let fre = {
            "progression-panel": "progression-panel_vIm",
            progressionPanel: "progression-panel_vIm"
        };
        X.add("game-ui/game/components/progression/progression-panel/progression-panel.module.scss", {
            get classes() {
                return fre
            },
            set classes(e) {
                Object.assign(fre, e)
            }
        });
        const xre = fre;
        var vre = ({selectedTab: e, onSelectTab: t, onClose: n})=>{
            cg(vT.value?.progressionPanel);
            const s = sl(Yae)
              , i = sl(RE);
            return (0,
            z.jsx)(rE, {
                header: (0,
                z.jsxs)(z.Fragment, {
                    children: [(0,
                    z.jsx)(dE, {
                        children: (0,
                        z.jsx)(_c.Progression.PANEL_TITLE, {})
                    }), (0,
                    z.jsxs)(MZ, {
                        children: [(0,
                        z.jsx)(bre, {
                            tab: Uv.Development,
                            uiTag: vT.value?.progressionPanelDevelopmentTab,
                            selectedTab: e,
                            onSelect: t
                        }), (0,
                        z.jsx)(bre, {
                            tab: Uv.Milestones,
                            uiTag: vT.value?.progressionPanelMilestonesTab,
                            selectedTab: e,
                            onSelect: t
                        }), s !== Wae.Hidden && (0,
                        z.jsx)(bre, {
                            tab: Uv.Achievements,
                            selectedTab: e,
                            onSelect: t,
                            tooltipDescription: _re(s, i)
                        })]
                    })]
                }),
                transitionSounds: up,
                className: xre.progressionPanel,
                onClose: n,
                children: (0,
                z.jsx)(AZ, {
                    tabs: [Uv.Development, Uv.Milestones, ...s !== Wae.Hidden ? [Uv.Achievements] : []],
                    selectedTab: e,
                    onSelect: t,
                    children: Tre(e)
                })
            })
        }
        ;
        const _re = (e,t)=>e === Wae.ModsDisabled ? 0 != (t & yE.PS) ? (0,
        z.jsx)(_c.Menu.ACHIEVEMENTS_WARNING_PAST_MODS_PS, {}) : (0,
        z.jsx)(_c.Menu.ACHIEVEMENTS_WARNING_PAST_MODS, {}) : e === Wae.OptionsDisabled ? 0 != (t & yE.PS) ? (0,
        z.jsx)(_c.Menu.ACHIEVEMENTS_WARNING_PAST_OPTIONS_PS, {}) : (0,
        z.jsx)(_c.Menu.ACHIEVEMENTS_WARNING_PAST_OPTIONS, {}) : void 0
          , bre = ({tab: e, uiTag: t, selectedTab: n, onSelect: s, disabled: i=!1, label: a, tooltipTitle: o, tooltipDescription: r, className: l})=>{
            const c = sl(RE);
            return (0,
            z.jsx)(BQ, {
                title: void 0 !== o ? o : (0,
                z.jsx)(_c.Progression.TOOLTIP_TITLE_TAB, {
                    hash: Uv[e]
                }),
                description: void 0 !== r ? r : (0,
                z.jsx)(_c.Progression.TOOLTIP_DESCRIPTION_TAB, {
                    hash: Uv[e]
                }),
                children: (0,
                z.jsx)(RZ, {
                    id: e,
                    uiTag: t,
                    selectedId: n,
                    onSelect: s,
                    className: l,
                    disabled: i,
                    children: void 0 !== a ? a : (0,
                    z.jsx)(_c.Progression.TAB_TITLE, {
                        hash: e === Uv.Achievements && 0 != (c & yE.PS) ? "Trophies" : Uv[e]
                    })
                })
            })
        }
        ;
        function Tre(e) {
            switch (e) {
            case Uv.Development:
                return (0,
                z.jsx)(pre, {});
            case Uv.Milestones:
                return (0,
                z.jsx)(Foe, {});
            case Uv.Achievements:
                return (0,
                z.jsx)(noe, {});
            default:
                return null
            }
        }
        X.add("game-ui/game/components/progression/progression-panel/progression-panel.tsx", {
            get ProgressionPanel() {
                return vre
            },
            set ProgressionPanel(e) {
                vre = e
            }
        });
        const Ere = {
            focusController: ed,
            inputController: Ng
        }
          , Ire = Y.createContext(Ere)
          , Sre = Y.createContext({
            attach: ()=>{}
            ,
            detach: ()=>{}
        });
        var yre = ({children: e})=>{
            const [t,n] = (0,
            Y.useState)(Ere)
              , s = (0,
            Y.useMemo)((()=>({
                attach: e=>n(e),
                detach: e=>n((t=>t === e ? Ere : t))
            })), []);
            return (0,
            z.jsx)(Sre.Provider, {
                value: s,
                children: (0,
                z.jsx)(Ire.Provider, {
                    value: t,
                    children: e
                })
            })
        }
          , jre = ({children: e})=>{
            const t = (0,
            Y.useContext)(Sre)
              , n = (0,
            Y.useContext)(Ju)
              , s = (0,
            Y.useContext)(wg);
            return (0,
            Y.useEffect)((()=>{
                const e = {
                    focusController: n,
                    inputController: s
                };
                return t.attach(e),
                ()=>t.detach(e)
            }
            ), [t, s, n]),
            (0,
            z.jsx)(Ju.Provider, {
                value: ed,
                children: (0,
                z.jsx)(wg.Provider, {
                    value: Ng,
                    children: e
                })
            })
        }
          , Cre = ({enabled: e, children: t})=>{
            const n = (0,
            Y.useContext)(Ire)
              , s = (0,
            Y.useContext)(Ju)
              , i = (0,
            Y.useContext)(wg);
            return (0,
            z.jsx)(Ju.Provider, {
                value: e ? n.focusController : s,
                children: (0,
                z.jsx)(wg.Provider, {
                    value: e ? n.inputController : i,
                    children: t
                })
            })
        }
        ;
        function Nre() {
            return Pp(eP(sl(GO), sl(VO)))
        }
        function wre() {
            return tP(sl(GO), sl(VO))
        }
        X.add("game-ui/game/components/radio/radio-context-override.tsx", {
            get RadioContextOverrideProvider() {
                return yre
            },
            set RadioContextOverrideProvider(e) {
                yre = e
            },
            get RadioContextRedirector() {
                return jre
            },
            set RadioContextRedirector(e) {
                jre = e
            },
            get RadioContextOverride() {
                return Cre
            },
            set RadioContextOverride(e) {
                Cre = e
            }
        }),
        X.add("game-ui/common/hooks/use-simulation-date-time.tsx", {
            get useSimulationDateTime() {
                return Nre
            },
            set useSimulationDateTime(e) {
                Nre = e
            },
            get useSimulationMinutesSinceMidnight() {
                return wre
            },
            set useSimulationMinutesSinceMidnight(e) {
                wre = e
            }
        });
        let Ore = {
            "progress-bar": "progress-bar_sYi progress-bar_xWR",
            progressBar: "progress-bar_sYi progress-bar_xWR",
            progress: "progress_y5v progress_JAQ"
        };
        X.add("game-ui/common/progress-bar/themes/light-progress-bar.module.scss", {
            get classes() {
                return Ore
            },
            set classes(e) {
                Object.assign(Ore, e)
            }
        });
        const Pre = Ore;
        let Lre = {
            "station-detail": "station-detail_zWr",
            stationDetail: "station-detail_zWr",
            header: "header_gDJ",
            "station-name": "station-name_T0f",
            stationName: "station-name_T0f",
            "section-title": "section-title_lV4",
            sectionTitle: "section-title_lV4",
            list: "list_Kl3",
            "program-item": "program-item_KE_",
            programItem: "program-item_KE_",
            time: "time_A1a",
            column: "column_p_F",
            title: "title_nsV",
            description: "description_knq",
            progress: "progress_eLk"
        };
        X.add("game-ui/game/components/radio/radio-panel/station-detail/station-detail.module.scss", {
            get classes() {
                return Lre
            },
            set classes(e) {
                Object.assign(Lre, e)
            }
        });
        const Are = Lre
          , Mre = [];
        var Rre = ({className: e})=>{
            const t = sl(tw)
              , n = sl(sw).find((e=>e.name === t))
              , s = n?.schedule ?? Mre;
            return (0,
            z.jsxs)("div", {
                className: Zu()(Are.stationDetail, e),
                children: [(0,
                z.jsxs)("div", {
                    className: Are.header,
                    children: [(0,
                    z.jsx)("div", {
                        className: Are.stationName,
                        children: n?.nameId ? (0,
                        z.jsx)(cc, {
                            id: n.nameId
                        }) : n?.name
                    }), (0,
                    z.jsx)("div", {
                        className: Are.sectionTitle,
                        children: (0,
                        z.jsx)(_c.Radio.PROGRAM_TITLE, {})
                    })]
                }), (0,
                z.jsx)(mb, {
                    className: Are.list,
                    children: s.map(((e,t)=>(0,
                    z.jsx)(kre, {
                        item: e
                    }, t)))
                })]
            })
        }
        ;
        const kre = ({item: e})=>{
            const t = sl(iw);
            return (0,
            z.jsx)(BQ, {
                disabled: null == t,
                title: t?.title,
                description: t?.info,
                children: (0,
                z.jsxs)("div", {
                    className: Are.programItem,
                    children: [(0,
                    z.jsx)("div", {
                        className: Are.time,
                        children: (0,
                        z.jsx)(wu, {
                            value: QO(e.startTime)
                        })
                    }), (0,
                    z.jsxs)("div", {
                        className: Are.column,
                        children: [(0,
                        z.jsx)("div", {
                            className: Are.title,
                            children: e.name
                        }), (0,
                        z.jsx)("div", {
                            className: Are.description,
                            children: e.description
                        }), e.active && (0,
                        z.jsx)(Dre, {
                            startTime: e.startTime,
                            duration: e.duration
                        })]
                    })]
                })
            })
        }
          , Dre = ({startTime: e, duration: t})=>{
            const n = (wre() - e + 1440) % 1440;
            return (0,
            z.jsx)(yse, {
                progress: n,
                max: t,
                theme: Pre,
                className: Are.progress
            })
        }
        ;
        X.add("game-ui/game/components/radio/radio-panel/station-detail/station-detail.tsx", {
            get StationDetail() {
                return Rre
            },
            set StationDetail(e) {
                Rre = e
            }
        });
        let Fre = {
            "stations-menu": "stations-menu_kAr",
            stationsMenu: "stations-menu_kAr",
            networks: "networks_SQ5",
            stations: "stations_mU1",
            "network-item": "network-item_tGo",
            networkItem: "network-item_tGo",
            "station-item": "station-item_cOt",
            stationItem: "station-item_cOt",
            icon: "icon_Yr0",
            column: "column_j5W",
            title: "title_Bsq",
            program: "program_xd2",
            progress: "progress_zBM",
            hint: "hint_kqJ",
            "hint-left": "hint-left_PV1",
            hintLeft: "hint-left_PV1",
            "hint-right": "hint-right_KvE",
            hintRight: "hint-right_KvE",
            "stations-hint": "stations-hint_x9S",
            stationsHint: "stations-hint_x9S"
        };
        X.add("game-ui/game/components/radio/radio-panel/stations-menu/stations-menu.module.scss", {
            get classes() {
                return Fre
            },
            set classes(e) {
                Object.assign(Fre, e)
            }
        });
        const Ure = Fre;
        var Bre = ({className: e})=>{
            const t = sl(ew)
              , n = sl(tw)
              , s = sl(nw)
              , i = sl(sw).filter((e=>e.network === t));
            return (0,
            z.jsxs)("div", {
                className: Zu()(Ure.stationsMenu, e),
                children: [(0,
                z.jsx)(mT, {
                    uiTag: vT.value?.radioPanelNetworks,
                    children: (0,
                    z.jsxs)("div", {
                        className: Ure.networks,
                        children: [(0,
                        z.jsx)(UT, {
                            action: "Switch Radio Network",
                            bindingIndex: 0,
                            className: Zu()(Ure.hint, Ure.hintLeft)
                        }), s.map((e=>(0,
                        z.jsx)(Gre, {
                            item: e,
                            selected: e.name === t,
                            onSelect: fw
                        }, e.name))), (0,
                        z.jsx)(UT, {
                            action: "Switch Radio Network",
                            bindingIndex: 1,
                            className: Zu()(Ure.hint, Ure.hintRight)
                        })]
                    })
                }), (0,
                z.jsxs)("div", {
                    children: [(0,
                    z.jsx)(UT, {
                        action: "Switch Radio Station",
                        className: Ure.stationsHint
                    }), (0,
                    z.jsx)(mT, {
                        uiTag: vT.value?.radioPanelStations,
                        children: (0,
                        z.jsx)(mb, {
                            className: Ure.stations,
                            children: i.map((e=>(0,
                            z.jsx)(Vre, {
                                item: e,
                                selected: e.name === n,
                                onSelect: xw
                            }, e.name)))
                        })
                    })]
                })]
            })
        }
        ;
        const Gre = ({item: e, selected: t, onSelect: n})=>{
            const s = (0,
            Y.useCallback)((()=>n(e.name)), [n, e.name]);
            return (0,
            z.jsx)(Eg, {
                tooltip: (0,
                z.jsx)(GQ, {
                    title: e.nameId ? (0,
                    z.jsx)(cc, {
                        id: e.nameId
                    }) : e.name,
                    description: e.descriptionId ? (0,
                    z.jsx)(cc, {
                        id: e.descriptionId
                    }) : e.description
                }),
                children: (0,
                z.jsx)(tb, {
                    disableHint: !0,
                    src: e.icon,
                    selected: t,
                    selectSound: t ? null : lp.selectRadioNetwork,
                    className: Ure.networkItem,
                    onSelect: t ? void 0 : s
                })
            })
        }
          , Vre = ({item: e, selected: t, onSelect: n})=>{
            const s = (0,
            Y.useRef)(null)
              , i = (0,
            Y.useCallback)((()=>n(e.name)), [n, e.name])
              , a = wre()
              , o = (a - (e.currentProgram?.startTime ?? a) + 1440) % 1440
              , r = e.currentProgram?.duration ?? 0
              , l = (0,
            Y.useContext)(hp);
            return (0,
            Y.useEffect)((()=>{
                t && requestAnimationFrame((()=>{
                    s.current && l.scrollIntoView(s.current)
                }
                ))
            }
            ), [s, l, t]),
            (0,
            z.jsxs)(U_, {
                ref: s,
                disableHint: !0,
                selected: t,
                selectSound: lp.selectRadioStation,
                className: Ure.stationItem,
                onSelect: t ? void 0 : i,
                children: [(0,
                z.jsx)("img", {
                    src: e.icon,
                    className: Ure.icon
                }), (0,
                z.jsxs)("div", {
                    className: Ure.column,
                    children: [(0,
                    z.jsx)("div", {
                        className: Ure.title,
                        children: e.nameId ? (0,
                        z.jsx)(cc, {
                            id: e.nameId
                        }) : e.name
                    }), (0,
                    z.jsx)("div", {
                        className: Ure.program,
                        children: e.currentProgram?.name
                    }), (0,
                    z.jsx)(yse, {
                        progress: o,
                        max: r,
                        theme: Pre,
                        className: Ure.progress
                    })]
                })]
            })
        }
        ;
        X.add("game-ui/game/components/radio/radio-panel/stations-menu/stations-menu.tsx", {
            get StationsMenu() {
                return Bre
            },
            set StationsMenu(e) {
                Bre = e
            }
        });
        let Hre = {
            "radio-panel": "radio-panel_rXp",
            radioPanel: "radio-panel_rXp",
            enter: "enter_TNo",
            "exit-active": "exit-active_hJq",
            exitActive: "exit-active_hJq",
            "enter-active": "enter-active_cuF",
            enterActive: "enter-active_cuF",
            exit: "exit_B88",
            content: "content_r9x",
            "stations-menu": "stations-menu_m2f",
            stationsMenu: "stations-menu_m2f",
            "station-detail": "station-detail_KRp",
            stationDetail: "station-detail_KRp"
        };
        X.add("game-ui/game/components/radio/radio-panel/radio-panel.module.scss", {
            get classes() {
                return Hre
            },
            set classes(e) {
                Object.assign(Hre, e)
            }
        });
        const Kre = Hre;
        var Wre, zre = ({className: e, onClose: t})=>{
            cg(vT.value?.radioPanel);
            const n = sl(nw)
              , s = sl(ew)
              , i = sl(sw)
              , a = (0,
            Y.useMemo)((()=>i.filter((e=>e.network === s))), [s, i])
              , o = sl(tw)
              , r = (0,
            Y.useMemo)((()=>({
                "Switch Radio Network": n.length >= 2 ? e=>{
                    const t = n.findIndex((e=>e.name === s))
                      , i = e < 0 ? Iw(t, n.length, !0) : Tw(t, n.length, !0);
                    null != i && i !== t && (fw(n[i].name),
                    xw(n[0].name),
                    cp(lp.selectRadioNetwork))
                }
                : null,
                "Switch Radio Station": a.length >= 2 ? e=>{
                    const t = a.findIndex((e=>e.name === o))
                      , n = e < 0 ? Tw(t, a.length, !1) : Iw(t, a.length, !1);
                    null != n && n !== t && (xw(a[n].name),
                    cp(lp.selectRadioStation))
                }
                : null
            })), [n, s, o, a]);
            return (0,
            z.jsx)(mT, {
                uiTag: vT.value?.radioPanel,
                children: (0,
                z.jsx)(rE, {
                    header: (0,
                    z.jsx)(dE, {
                        children: (0,
                        z.jsx)(_c.Radio.PANEL_TITLE, {})
                    }),
                    theme: lte,
                    transitionSounds: up,
                    className: Zu()(Kre.radioPanel, e),
                    contentClassName: Kre.content,
                    onClose: t,
                    children: (0,
                    z.jsx)(Mg, {
                        actions: r,
                        children: (0,
                        z.jsxs)(jre, {
                            children: [(0,
                            z.jsx)(Bre, {
                                className: Kre.stationsMenu
                            }), (0,
                            z.jsx)(Rre, {
                                className: Kre.stationDetail
                            })]
                        })
                    })
                })
            })
        }
        ;
        X.add("game-ui/game/components/radio/radio-panel/radio-panel.tsx", {
            get RadioPanel() {
                return zre
            },
            set RadioPanel(e) {
                zre = e
            }
        }),
        function(e) {
            e[e.HourMonth = 0] = "HourMonth",
            e[e.Date = 1] = "Date",
            e[e.Year = 2] = "Year"
        }(Wre || (Wre = {}));
        class Yre extends na {
            static id = "simulationTime";
            static defaults = {
                timeSettings: {
                    daysPerYear: 12,
                    ticksPerDay: 1 << 17,
                    epochTicks: 0,
                    epochYear: 0
                },
                ticks: {
                    _scriptable: e=>"timeFormat" !== e && "dateFormat" !== e,
                    timeFormat: e=>JSON.stringify(["hhmm", e.hour, e.minute]),
                    dateFormat: e=>JSON.stringify(["MMyy", e.month, e.year]),
                    maxTicksLimit: 11
                }
            };
            constructor(e) {
                super(e),
                this._startValue = 0,
                this._valueRange = 0,
                this._tickFormat = Wre.HourMonth,
                this._majorTickInterval = 1,
                this._firstMajorTickValue = 0,
                this._tickInterval = 1,
                this._firstTickValue = 0
            }
            determineDataLimits() {
                const {min: e, max: t} = this.getMinMax(!0);
                this.min = isFinite(e) ? e : 0,
                this.max = isFinite(t) ? t : 0
            }
            beforeBuildTicks() {
                super.beforeBuildTicks();
                const e = this.options.ticks.maxTicksLimit
                  , t = this.options.timeSettings;
                let n = 0
                  , s = (this.max - this.min) / t.ticksPerDay * 24;
                if (this._tickFormat = Wre.HourMonth,
                this._tickInterval = t.ticksPerDay / 24,
                this._majorTickInterval = t.ticksPerDay,
                s >= e && (s /= 3,
                this._tickInterval = t.ticksPerDay / 8),
                s >= e && (s /= 2,
                this._tickInterval = t.ticksPerDay / 4),
                s >= e && (s /= 2,
                this._tickInterval = t.ticksPerDay / 2),
                s >= e && (s /= 2,
                this._tickFormat = Wre.Date,
                this._tickInterval = t.ticksPerDay),
                s >= e && (s /= 3,
                this._tickInterval = 3 * t.ticksPerDay),
                s >= e && (s /= 4,
                this._tickFormat = Wre.Year,
                this._tickInterval = t.daysPerYear * t.ticksPerDay),
                s >= e) {
                    let i = 1;
                    do {
                        s /= 5,
                        i *= 5,
                        this._tickInterval *= 5,
                        s >= e && (s /= 2,
                        i *= 2,
                        this._tickInterval *= 2)
                    } while (s >= e && i < 1e3);
                    n = (i - t.epochYear % i) % i * t.ticksPerDay * t.daysPerYear
                }
                const i = t.epochTicks - n
                  , a = this.min + i;
                this._firstMajorTickValue = Math.ceil(a / this._majorTickInterval) * this._majorTickInterval - i,
                this._firstTickValue = Math.ceil(a / this._tickInterval) * this._tickInterval - i
            }
            buildTicks() {
                const e = []
                  , t = this._tickInterval;
                for (let n = this._firstTickValue; n <= this.max; n += t) {
                    const t = Math.abs((n - this._firstMajorTickValue) % this._majorTickInterval / this._majorTickInterval) < .001;
                    e.push({
                        value: n,
                        major: t
                    })
                }
                return e
            }
            generateTickLabels(e) {
                let t, n, s;
                for (t = 0,
                n = e.length; t < n; t++)
                    s = e[t],
                    s.label = this.generateTickLabel(s.value, s.major)
            }
            generateTickLabel(e, t) {
                const n = eP(this.options.timeSettings, Math.ceil(e));
                return this._tickFormat === Wre.HourMonth ? t ? [this.options.ticks.timeFormat(n), this.options.ticks.dateFormat(n)] : this.options.ticks.timeFormat(n) : this._tickFormat === Wre.Date ? this.options.ticks.dateFormat(n) : n.year.toFixed(0)
            }
            configure() {
                super.configure(),
                this._startValue = this.min,
                this._valueRange = this.max - this.min
            }
            getPixelForValue(e) {
                return this.getPixelForDecimal((e - this._startValue) / this._valueRange)
            }
            getValueForPixel(e) {
                return this._startValue + this.getDecimalForPixel(e) * this._valueRange
            }
        }
        function $re() {
            Pa.register(Yre)
        }
        X.add("game-ui/common/charts/simulation-time-scale.ts", {
            get registerSimulationTimeScale() {
                return $re
            },
            set registerSimulationTimeScale(e) {
                $re = e
            }
        });
        let qre = {
            chartFontColor: "rgba(255, 255, 255, 0.6)",
            chartLineColor: "rgba(255, 255, 255, 0.1)",
            content: "content_nkU",
            legend: "legend_nMX",
            "legend-item": "legend-item_all",
            legendItem: "legend-item_all",
            graph: "graph_zE6",
            "time-scale": "time-scale_ShR",
            timeScale: "time-scale_ShR",
            "time-scale-label": "time-scale-label_VSV",
            timeScaleLabel: "time-scale-label_VSV",
            "time-scale-field": "time-scale-field_lEQ",
            timeScaleField: "time-scale-field_lEQ",
            "time-scale-title": "time-scale-title_Ow0",
            timeScaleTitle: "time-scale-title_Ow0",
            "action-icon": "action-icon_T6_",
            actionIcon: "action-icon_T6_",
            slider: "slider_mN3"
        };
        X.add("game-ui/game/components/statistics-panel/graph/statistics-graph.module.scss", {
            get classes() {
                return qre
            },
            set classes(e) {
                Object.assign(qre, e)
            }
        });
        const Xre = qre;
        $re();
        var Qre = ({data: e, selectedStatistics: t, timeScale: n, stepCount: s, onSetTimeScale: i, className: a})=>{
            const o = sl(lO)
              , r = function() {
                const e = sl(iO)
                  , t = sl(VO)
                  , n = sl(pO)
                  , s = sl(GO);
                return {
                    x: t - s.ticksPerDay / n * e,
                    y: t + s.ticksPerDay / 1440 + 1
                }
            }()
              , l = t.length > 0 && 2 === t[0]?.unitType ? 100 : void 0
              , c = Ac(vc.Money)
              , u = Ac(vc.Integer);
            let d = function(e, t=!0, n) {
                const s = Ou()
                  , i = Cu()
                  , a = sl(iO)
                  , o = sl(VO)
                  , r = sl(GO)
                  , l = sl(Ll)
                  , c = sl(pO)
                  , u = o - r.ticksPerDay / c * a
                  , d = o + r.ticksPerDay / 1440 + 1;
                return (0,
                Y.useMemo)((()=>{
                    const a = {
                        layout: {
                            padding: {
                                top: 0,
                                right: 50,
                                bottom: 0,
                                left: 25
                            }
                        },
                        elements: {
                            line: {
                                fill: t,
                                borderWidth: 3,
                                tension: 0
                            },
                            point: {
                                radius: 0
                            }
                        },
                        scales: {
                            x: {
                                type: "simulationTime",
                                min: u,
                                max: d,
                                grid: {
                                    color: Xre.chartLineColor,
                                    lineWidth: 1
                                },
                                border: {
                                    color: Xre.chartLineColor,
                                    width: 1
                                },
                                timeSettings: r,
                                ticks: {
                                    maxTicksLimit: 11,
                                    font: {
                                        size: Zre * l
                                    },
                                    color: Xre.chartFontColor,
                                    padding: Jre,
                                    timeFormat: s,
                                    dateFormat: i
                                }
                            },
                            y: {
                                beginAtZero: !0,
                                max: n,
                                grid: {
                                    color: Xre.chartLineColor,
                                    lineWidth: 1
                                },
                                border: {
                                    color: Xre.chartLineColor,
                                    width: 1
                                },
                                ticks: {
                                    font: {
                                        size: Zre * l
                                    },
                                    maxTicksLimit: 10,
                                    color: Xre.chartFontColor,
                                    padding: Jre,
                                    autoSkip: !1,
                                    callback: function(t) {
                                        return e ? e(t) : t
                                    }
                                },
                                stacked: t
                            }
                        }
                    };
                    return a
                }
                ), [t, u, d, r, l, s, i, n, e])
            }(t.length > 0 && 1 === t[0].unitType ? c : u, o, l);
            const m = (0,
            Y.useMemo)((()=>({
                ...e,
                datasets: e.datasets.map((e=>{
                    const t = e.data.map(((e,t,n)=>{
                        if (0 === t) {
                            const t = n.length > 1 && n[0].x < r.x ? function(e, t, n) {
                                const s = e.x
                                  , i = e.y
                                  , a = t.x
                                  , o = t.y
                                  , r = i + (n - s) * (o - i) / (a - s);
                                return {
                                    x: n,
                                    y: r
                                }
                            }(n[0], n[1], r.x) : null;
                            return {
                                x: t?.x ?? Math.max(e.x, r.x),
                                y: t?.y ?? e.y
                            }
                        }
                        return t === n.length - 1 ? {
                            x: r.y,
                            y: e.y
                        } : e
                    }
                    ));
                    return {
                        ...e,
                        data: t
                    }
                }
                ))
            })), [e, r.x, r.y])
              , h = m.datasets.map((e=>e.data)).flat().map((e=>e.y))
              , g = Math.min(...h)
              , p = Math.max(...h) - g;
            return p < 10 && d.scales?.y?.ticks && (d.scales.y.ticks.maxTicksLimit = Math.max(Math.ceil(p / 2), 2),
            d = {
                ...d
            }),
            (0,
            z.jsx)(s3, {
                focusKey: Sg,
                theme: n3,
                className: Zu()(Xre.statisticsGraph, a),
                children: (0,
                z.jsxs)("div", {
                    className: Xre.content,
                    children: [(0,
                    z.jsx)("div", {
                        className: Xre.legend,
                        children: t.map(((e,t)=>(0,
                        z.jsx)(xQ, {
                            color: xN(e.color),
                            label: (0,
                            z.jsx)(_c.StatisticsPanel.STAT_TITLE, {
                                hash: e.key
                            }),
                            className: Xre.legendItem
                        }, t)))
                    }), (0,
                    z.jsx)(nY, {
                        type: "line",
                        data: m,
                        options: d,
                        className: Xre.graph
                    }), (0,
                    z.jsx)(mT, {
                        uiTag: vT.value?.statisticsPanelTimeScale,
                        children: (0,
                        z.jsxs)("div", {
                            className: Xre.timeScale,
                            children: [(0,
                            z.jsx)("div", {
                                className: Xre.timeScaleTitle,
                                children: (0,
                                z.jsx)(_c.StatisticsPanel.TIME_SCALE_TITLE, {})
                            }), (0,
                            z.jsx)(WH, {
                                action: "Change Time Scale",
                                hidden: 0 === s,
                                children: (0,
                                z.jsx)(AA, {
                                    focusKey: Sg,
                                    theme: OA,
                                    className: Xre.slider,
                                    start: 0,
                                    end: 0 === s ? 1 : s,
                                    value: n,
                                    gamepadStep: 1,
                                    disabled: 0 === s,
                                    onChange: i,
                                    valueTransformer: RA
                                })
                            }), (0,
                            z.jsx)("div", {
                                className: Xre.timeScaleLabel,
                                children: (0,
                                z.jsx)("div", {
                                    className: Xre.timeScaleField,
                                    children: (0,
                                    z.jsx)(_c.StatisticsPanel.TIME_SCALE, {
                                        index: n
                                    })
                                })
                            })]
                        })
                    })]
                })
            })
        }
        ;
        const Zre = 10
          , Jre = 10;
        X.add("game-ui/game/components/statistics-panel/graph/statistics-graph.tsx", {
            get StatisticsGraph() {
                return Qre
            },
            set StatisticsGraph(e) {
                Qre = e
            }
        });
        let ele = {
            "foldout-item": "foldout-item_dah foldout-item_wOF",
            foldoutItem: "foldout-item_dah foldout-item_wOF",
            header: "header_MP_ header_8H_ item-mouse-states_Fmi item-focused_FuT",
            "disable-active-state": "disable-active-state_G7o disable-active-state_w8a",
            disableActiveState: "disable-active-state_G7o disable-active-state_w8a",
            "header-content": "header-content_SqG header-content_wUX",
            headerContent: "header-content_SqG header-content_wUX",
            icon: "icon_nAL undefined",
            toggle: "toggle_RV4 toggle_yQv"
        };
        X.add("game-ui/common/foldout/themes/statistics-item.module.scss", {
            get classes() {
                return ele
            },
            set classes(e) {
                Object.assign(ele, e)
            }
        });
        const tle = ele;
        let nle = {
            toggle: "toggle_GGm toggle_cca item-mouse-states_Fmi"
        };
        X.add("game-ui/game/components/statistics-panel/menu/item/statistics-checkbox.module.scss", {
            get classes() {
                return nle
            },
            set classes(e) {
                Object.assign(nle, e)
            }
        });
        const sle = nle;
        let ile = {
            locked: "locked_XuG",
            label: "label_VRN",
            icon: "icon_xRc",
            hint: "hint_U4i"
        };
        X.add("game-ui/game/components/statistics-panel/menu/item/statistics-item.module.scss", {
            get classes() {
                return ile
            },
            set classes(e) {
                Object.assign(ile, e)
            }
        });
        const ale = ile;
        let ole = {
            size: "size_DD8",
            toggle: "toggle_mte size_DD8 toggle_H7r item-mouse-states_Fmi"
        };
        X.add("game-ui/game/components/statistics-panel/menu/item/statistics-toggle.module.scss", {
            get classes() {
                return ole
            },
            set classes(e) {
                Object.assign(ole, e)
            }
        });
        const rle = ole;
        var lle = ({statItem: e, selectedStatistics: t, nesting: n=0})=>{
            const [s,i] = (0,
            Y.useState)(!1)
              , [a,o] = (0,
            Y.useState)(!1)
              , r = (0,
            Y.useCallback)((()=>i(!0)), [])
              , l = (0,
            Y.useCallback)((()=>i(!1)), [])
              , c = ll(dO, e.entity)
              , u = sl(oO)
              , d = (0,
            Y.useMemo)((()=>function(e, t, n) {
                if (e.isGroup)
                    return Ur(n, e.entity) || -1 !== t.findIndex((t=>Ur(t.entity, e.entity)));
                if (e.isSubgroup) {
                    return t.filter((t=>!t.isSubgroup && Ur(t.entity, e.entity))).length ? void 0 : Ur(n, e.entity) || -1 !== t.findIndex((t=>Ur(t.entity, e.entity)))
                }
                return -1 !== t.findIndex((t=>t.key === e.key)) && -1 === t.findIndex((t=>t.isSubgroup && Ur(t.entity, e.entity)))
            }(e, t, u)), [u, t, e])
              , m = (0,
            Y.useCallback)((t=>{
                void 0 === t ? xO(e) : t ? fO(e) : vO(e)
            }
            ), [e])
              , h = ll(gO, e.entity)
              , g = (0,
            Y.useMemo)((()=>n + 1), [n])
              , p = (0,
            Y.useMemo)((()=>-1 !== t.findIndex((t=>Ur(t.entity, e.entity))) || t.some((e=>-1 !== c.findIndex((t=>Ur(e.entity, t.entity)))))), [c, t, e.entity]);
            return (0,
            z.jsx)(kS, {
                initialExpanded: p,
                type: (e.isGroup || e.isSubgroup) && c.length > 0 ? "Group" : "Item",
                className: Zu()(ale.statisticsItem, e.locked && "locked", s && tle.disableActiveState),
                theme: tle,
                nesting: n,
                header: (0,
                z.jsx)(H6, {
                    locked: e.locked,
                    requirements: h,
                    direction: "right",
                    children: (0,
                    z.jsxs)(DS, {
                        onFocusChange: o,
                        children: [(0,
                        z.jsx)(UT, {
                            action: "Select",
                            active: a && !e.locked,
                            className: ale.hint
                        }), e.locked ? (0,
                        z.jsx)(OZ, {
                            className: rle.size
                        }) : e.isGroup ? (0,
                        z.jsx)(P7, {
                            theme: rle,
                            disabled: e.locked,
                            onChange: m,
                            onMouseOver: r,
                            onMouseLeave: l,
                            checked: d,
                            focusKey: e.key,
                            style: {
                                borderColor: xN(e.color)
                            },
                            className: ale.icon
                        }) : (0,
                        z.jsx)(Hb, {
                            theme: sle,
                            disabled: e.locked,
                            onMultistateChange: m,
                            onChange: m,
                            onMouseOver: r,
                            onMouseLeave: l,
                            checked: d,
                            focusKey: e.key,
                            style: {
                                borderColor: xN(e.color)
                            },
                            className: ale.icon,
                            multistate: e.isSubgroup
                        }), (0,
                        z.jsx)("div", {
                            className: Zu()(ale.label, e.locked && ale.locked),
                            children: (0,
                            z.jsx)(_c.StatisticsPanel.STAT_TITLE, {
                                hash: e.key
                            })
                        })]
                    })
                }),
                children: (e.isGroup || e.isSubgroup) && c.length > 0 ? c.map((e=>(0,
                z.jsx)(lle, {
                    statItem: e,
                    nesting: g,
                    selectedStatistics: t
                }, e.key))) : void 0
            })
        }
        ;
        X.add("game-ui/game/components/statistics-panel/menu/item/statistics-item.tsx", {
            get StatisticsItem() {
                return lle
            },
            set StatisticsItem(e) {
                lle = e
            }
        });
        let cle = {
            "statistics-category-item": "statistics-category-item_qVI",
            statisticsCategoryItem: "statistics-category-item_qVI",
            items: "items_AIY",
            header: "header_Ld7"
        };
        X.add("game-ui/game/components/statistics-panel/menu/category/statistics-category-item.module.scss", {
            get classes() {
                return cle
            },
            set classes(e) {
                Object.assign(cle, e)
            }
        });
        const ule = cle;
        var dle = ({category: e, selectedStatistics: t})=>{
            const n = ll(dO, e.entity);
            return (0,
            z.jsxs)("div", {
                className: ule.statisticsCategoryItem,
                children: [(0,
                z.jsx)("div", {
                    className: ule.header,
                    children: (0,
                    z.jsx)(_c.StatisticsPanel.STAT_TITLE, {
                        hash: e.key
                    })
                }), (0,
                z.jsx)("div", {
                    className: ule.items,
                    children: n.map((e=>(0,
                    z.jsx)(lle, {
                        statItem: e,
                        selectedStatistics: t
                    }, e.key)))
                })]
            })
        }
        ;
        X.add("game-ui/game/components/statistics-panel/menu/category/statistics-category-item.tsx", {
            get StatisticsCategory() {
                return dle
            },
            set StatisticsCategory(e) {
                dle = e
            }
        });
        let mle = {
            "statistics-menu": "statistics-menu_y86",
            statisticsMenu: "statistics-menu_y86",
            content: "content_Q1O",
            scrollable: "scrollable_By7"
        };
        X.add("game-ui/game/components/statistics-panel/menu/statistics-menu.module.scss", {
            get classes() {
                return mle
            },
            set classes(e) {
                Object.assign(mle, e)
            }
        });
        const hle = mle;
        var gle = ({selectedStatistics: e})=>{
            const t = sl(cO);
            return (0,
            z.jsx)(mT, {
                uiTag: vT.value?.statisticsPanelMenu,
                children: (0,
                z.jsx)(s3, {
                    theme: n3,
                    className: hle.statisticsMenu,
                    children: (0,
                    z.jsx)(mb, {
                        className: hle.scrollable,
                        children: (0,
                        z.jsx)("div", {
                            className: hle.content,
                            children: (0,
                            z.jsx)(np, {
                                direction: kg.Vertical,
                                children: t.map((t=>(0,
                                z.jsx)(dle, {
                                    category: t,
                                    selectedStatistics: e
                                }, t.key)))
                            })
                        })
                    })
                })
            })
        }
        ;
        X.add("game-ui/game/components/statistics-panel/menu/statistics-menu.tsx", {
            get StatisticsMenu() {
                return gle
            },
            set StatisticsMenu(e) {
                gle = e
            }
        });
        let ple = {
            "city-statistics-panel": "city-statistics-panel_ECW",
            cityStatisticsPanel: "city-statistics-panel_ECW",
            content: "content_BIL",
            graph: "graph_Qba"
        };
        X.add("game-ui/game/components/statistics-panel/statistics-panel.module.scss", {
            get classes() {
                return ple
            },
            set classes(e) {
                Object.assign(ple, e)
            }
        });
        const fle = ple;
        var xle = ({onClose: e})=>{
            cg(vT.value?.statisticsPanel);
            const t = sl(hO)
              , n = sl(mO)
              , s = (0,
            Y.useMemo)((()=>({
                datasets: n
            })), [n])
              , i = sl(pO)
              , a = sl(aO)
              , o = sl(iO)
              , r = (0,
            Y.useMemo)((()=>function(e, t) {
                const n = e / t
                  , s = n / 12;
                return s > 1e3 ? 9 : s > 500 ? 8 : s > 100 ? 7 : s > 50 ? 6 : s > 10 ? 5 : s > 5 ? 4 : n > 12 ? 3 : n > 6 ? 2 : n > 1 ? 1 : 0
            }(a, i)), [a, i])
              , l = (0,
            Y.useMemo)((()=>function(e, t) {
                switch (e) {
                case t:
                    return 0;
                case 6 * t:
                    return 1;
                case 12 * t:
                    return 2;
                case 60 * t:
                    return 3;
                case 120 * t:
                    return 4;
                case 600 * t:
                    return 5;
                case 1200 * t:
                    return 6;
                case 6e3 * t:
                    return 7;
                case 12e3 * t:
                    return 8;
                default:
                    return 9
                }
            }(o, i)), [o, i])
              , c = (0,
            Y.useMemo)((()=>({
                "Change Time Scale": r > 0 ? e=>{
                    if (cp(lp.dragSlider),
                    e < 0) {
                        bO(vle(Math.max(0, l - 1), a, i))
                    } else if (e > 0) {
                        bO(vle(Math.min(r, l + 1), a, i))
                    }
                }
                : null
            })), [a, r, l, i])
              , u = (0,
            Y.useCallback)((e=>{
                bO(vle(e, a, i))
            }
            ), [a, i])
              , d = (0,
            Y.useCallback)((()=>{
                e()
            }
            ), [e]);
            return (0,
            Y.useEffect)((()=>{
                if (0 === hO.value.length) {
                    const e = cO.value;
                    if (e.length > 0) {
                        const t = dO.getValue(e[0].entity);
                        t.length > 0 && fO(t[0])
                    }
                }
            }
            ), []),
            (0,
            z.jsx)(Mg, {
                actions: c,
                children: (0,
                z.jsxs)(rE, {
                    transitionSounds: up,
                    header: (0,
                    z.jsx)(dE, {
                        children: (0,
                        z.jsx)(_c.Statistics.PANEL_TITLE, {})
                    }),
                    className: fle.cityStatisticsPanel,
                    contentClassName: fle.content,
                    onClose: d,
                    children: [(0,
                    z.jsx)(gle, {
                        selectedStatistics: t
                    }), (0,
                    z.jsx)(mT, {
                        uiTag: vT.value?.statisticsPanel,
                        children: (0,
                        z.jsx)(Qre, {
                            data: s,
                            selectedStatistics: t,
                            timeScale: l,
                            stepCount: r,
                            onSetTimeScale: u,
                            className: fle.graph
                        })
                    })]
                })
            })
        }
        ;
        function vle(e, t, n) {
            switch (e) {
            case 0:
                return n;
            case 1:
                return 6 * n;
            case 2:
                return 12 * n;
            case 3:
                return 60 * n;
            case 4:
                return 120 * n;
            case 5:
                return 600 * n;
            case 6:
                return 1200 * n;
            case 7:
                return 6e3 * n;
            case 8:
                return 12e3 * n;
            default:
                return t
            }
        }
        function _le(e) {
            switch (e) {
            case 0:
                return "Media/Game/Misc/ScheduleDay.svg";
            case 1:
                return "Media/Game/Misc/ScheduleNight.svg";
            default:
                return "Media/Game/Misc/ScheduleDayNight.svg"
            }
        }
        function ble(e) {
            const [t,n] = (0,
            Y.useState)()
              , [s,i] = (0,
            Y.useState)()
              , a = Wu(e.name);
            (0,
            Y.useEffect)((()=>{
                null != e && t !== a && (n(a),
                i(a))
            }
            ), [e, t, a]);
            const o = (0,
            Y.useCallback)((e=>i(e.target.value)), [])
              , r = (0,
            Y.useCallback)((()=>{
                null != e && s && "" !== s ? JL(e.lineData.entity, s) : i(t)
            }
            ), [e, t, s])
              , l = (0,
            Y.useCallback)((()=>i(t)), [t]);
            return [s ?? "", o, r, l]
        }
        X.add("game-ui/game/components/statistics-panel/statistics-panel.tsx", {
            get StatisticsPanel() {
                return xle
            },
            set StatisticsPanel(e) {
                xle = e
            }
        }),
        X.add("game-ui/game/components/transportation-overview-panel/lines-utils.ts", {
            get getScheduleIcon() {
                return _le
            },
            set getScheduleIcon(e) {
                _le = e
            },
            get useLineName() {
                return ble
            },
            set useLineName(e) {
                ble = e
            }
        });
        let Tle = {
            "transportation-overview-page": "transportation-overview-page_NsJ",
            transportationOverviewPage: "transportation-overview-page_NsJ",
            types: "types_Mco",
            lines: "lines_iup",
            scrollable: "scrollable_lwl",
            "no-lines": "no-lines_xtM",
            noLines: "no-lines_xtM",
            header: "header_cSe",
            title: "title_kUy",
            "sort-indicator": "sort-indicator_ToO",
            sortIndicator: "sort-indicator_ToO",
            legends: "legends_mcP",
            button: "button_cuw item-mouse-states_Fmi item-focused_FuT icon-focused_FJS",
            icon: "icon_hDV",
            "button-label": "button-label_QnT",
            buttonLabel: "button-label_QnT",
            cell: "cell_geG",
            "cell-single": "cell-single_qTE cell_geG",
            cellSingle: "cell-single_qTE cell_geG",
            "cell-double": "cell-double_hmA cell_geG",
            cellDouble: "cell-double_hmA cell_geG",
            "cell-wide": "cell-wide_yZB cell_geG",
            cellWide: "cell-wide_yZB cell_geG",
            "align-left": "align-left_npF",
            alignLeft: "align-left_npF",
            "align-right": "align-right_jPL",
            alignRight: "align-right_jPL",
            hint: "hint_vhW"
        };
        X.add("game-ui/game/components/transportation-overview-panel/transportation-overview-page.module.scss", {
            get classes() {
                return Tle
            },
            set classes(e) {
                Object.assign(Tle, e)
            }
        });
        const Ele = Tle;
        let Ile = {
            input: "input_hDw",
            label: "label_NCg",
            container: "container_sRs"
        };
        X.add("game-ui/game/components/transportation-overview-panel/transport-line-item/text-input/text-input.module.scss", {
            get classes() {
                return Ile
            },
            set classes(e) {
                Object.assign(Ile, e)
            }
        });
        const Sle = Ile;
        let yle = {
            "transportation-line-item": "transportation-line-item_ZFw",
            transportationLineItem: "transportation-line-item_ZFw",
            button: "button_PV4 item-mouse-states_Fmi item-focused_FuT",
            container: "container_G2A item-normal_Wb_ item-hover_WK8 item-focused_FuT",
            "color-field": "color-field_jwA",
            colorField: "color-field_jwA",
            eye: "eye_jyX",
            "schedule-button": "schedule-button_nz2",
            scheduleButton: "schedule-button_nz2",
            toggle: "toggle__VM",
            "toggle-off": "toggle-off_MTK",
            toggleOff: "toggle-off_MTK",
            "smaller-icon": "smaller-icon_f0S",
            smallerIcon: "smaller-icon_f0S",
            hint: "hint_AXQ"
        };
        X.add("game-ui/game/components/transportation-overview-panel/transport-line-item/transport-line-item.module.scss", {
            get classes() {
                return yle
            },
            set classes(e) {
                Object.assign(yle, e)
            }
        });
        const jle = yle
          , Cle = new Ig("VIEW_INFO_KEY")
          , Nle = new Ig("COLOR_KEY")
          , wle = new Ig("NAME_KEY")
          , Ole = new Ig("ACTIVE_KEY")
          , Ple = new Ig("SCHEDULE_KEY")
          , Lle = new Ig("VISIBLE_KEY")
          , Ale = new Ig("TRASH_KEY");
        var Mle = ({focusKey: e, line: t, onFocusedColumnChanged: n, focusedColumnKey: s})=>{
            const [i,a,o] = ble(t)
              , [r,l] = (0,
            Y.useState)(!1)
              , [c,u] = (0,
            Y.useState)(Cle)
              , d = (0,
            Y.useContext)(xE)
              , m = (0,
            Y.useCallback)((()=>{
                cp(lp.removeItem),
                ZL(t.lineData.entity)
            }
            ), [t])
              , h = (0,
            Y.useCallback)((e=>eA(t.lineData.entity, e)), [t])
              , g = (0,
            Y.useCallback)((()=>tA(t.lineData.entity, !t.lineData.active)), [t])
              , p = (0,
            Y.useCallback)((()=>{
                d.showDialog((0,
                z.jsx)(zI, {
                    title: (0,
                    z.jsx)(_c.Common.WARNING, {}),
                    message: (0,
                    z.jsx)(_c.SelectedInfoPanel.CONFIRM_DELETE_WARNING, {}),
                    onConfirm: m
                }))
            }
            ), [d, m])
              , f = (0,
            Y.useCallback)((e=>{
                n(e || Cle)
            }
            ), [n]);
            (0,
            Y.useEffect)((()=>{
                u(s || Cle)
            }
            ), [s]);
            const x = (0,
            Y.useCallback)((()=>{
                t.lineData.visible ? sA(t.lineData.entity, !1) : nA(t.lineData.entity, !1)
            }
            ), [t])
              , v = (0,
            Y.useCallback)((()=>{
                QL(t.lineData.entity)
            }
            ), [t])
              , _ = (0,
            Y.useCallback)((e=>{
                e !== r && oA(t.lineData.entity),
                l(e)
            }
            ), [r, t.lineData.entity])
              , b = (0,
            Y.useCallback)((()=>{
                oA(t.lineData.entity)
            }
            ), [t.lineData.entity])
              , T = (0,
            Y.useCallback)((()=>s || Cle), [s])
              , E = (0,
            Y.useCallback)((()=>{
                switch (t.lineData.schedule) {
                case 0:
                    iA(t.lineData.entity, 1);
                    break;
                case 1:
                    iA(t.lineData.entity, 2);
                    break;
                default:
                    iA(t.lineData.entity, 0)
                }
            }
            ), [t])
              , I = (0,
            Y.useMemo)((()=>t.lineData.isCargo ? "Route" : "Line"), [t.lineData.isCargo]);
            return (0,
            z.jsx)(Ah, {
                onFocusChange: _,
                children: (0,
                z.jsx)("div", {
                    className: jle.transportationLineItem,
                    children: (0,
                    z.jsx)(Sp, {
                        focusKey: e,
                        onMouseEnter: b,
                        onMouseLeave: b,
                        className: jle.container,
                        children: (0,
                        z.jsxs)(np, {
                            direction: kg.Horizontal,
                            initialFocused: c,
                            onChange: f,
                            onRefocus: T,
                            activation: qu.Always,
                            children: [(0,
                            z.jsx)("div", {
                                className: Ele.cellSingle,
                                children: (0,
                                z.jsx)(Eg, {
                                    tooltip: (0,
                                    z.jsx)(_c.Transport.TOOLTIP_DETAILS, {
                                        hash: I
                                    }),
                                    children: (0,
                                    z.jsx)(Rle, {
                                        tinted: !0,
                                        focusKey: Cle,
                                        src: "Media/Glyphs/ViewInfo.svg",
                                        onSelect: v,
                                        className: Zu()(jle.button, jle.smallerIcon)
                                    })
                                })
                            }), (0,
                            z.jsx)("div", {
                                className: Ele.cellWide,
                                children: (0,
                                z.jsx)(HH, {
                                    focusKey: wle,
                                    value: i,
                                    onChange: a,
                                    onBlur: o,
                                    onClick: Db,
                                    theme: Sle,
                                    vkTitle: (0,
                                    z.jsx)(_c.VirtualKeyboard.TITLE, {
                                        hash: "LineName"
                                    })
                                })
                            }), (0,
                            z.jsx)("div", {
                                className: Ele.cellDouble,
                                children: (0,
                                z.jsx)(Oc, {
                                    value: t.lineData.length,
                                    unit: vc.Length
                                })
                            }), (0,
                            z.jsx)("div", {
                                className: Ele.cellDouble,
                                children: t.lineData.stops
                            }), (0,
                            z.jsx)("div", {
                                className: Ele.cellDouble,
                                children: t.lineData.vehicles
                            }), (0,
                            z.jsx)("div", {
                                className: Ele.cellDouble,
                                children: t.lineData.isCargo ? (0,
                                z.jsx)(Oc, {
                                    value: t.lineData.cargo,
                                    unit: vc.Weight
                                }) : t.lineData.cargo
                            }), (0,
                            z.jsx)("div", {
                                className: Zu()(Ele.cellDouble, Ele.alignRight),
                                children: (0,
                                z.jsx)(Oc, {
                                    value: 100 * t.lineData.usage,
                                    unit: vc.Percentage
                                })
                            }), (0,
                            z.jsx)("div", {
                                className: Ele.cellSingle,
                                children: (0,
                                z.jsx)(Eg, {
                                    tooltip: (0,
                                    z.jsx)(_c.Transport.TOOLTIP_COLOR, {
                                        hash: I
                                    }),
                                    children: (0,
                                    z.jsx)(v1, {
                                        focusKey: Nle,
                                        value: t.lineData.color,
                                        className: jle.colorField,
                                        onChange: h,
                                        onClick: Db
                                    })
                                })
                            }), (0,
                            z.jsx)("div", {
                                className: Ele.cellSingle,
                                children: (0,
                                z.jsx)(Eg, {
                                    tooltip: (0,
                                    z.jsx)(_c.SelectedInfoPanel.TOOLTIP_TITLE, {
                                        hash: t.lineData.active ? "Deactivate" : "Reactivate"
                                    }),
                                    children: (0,
                                    z.jsx)(Rle, {
                                        tinted: !0,
                                        focusKey: Ole,
                                        src: "Media/Glyphs/OnOff.svg",
                                        className: Zu()(jle.button, jle.toggle, !t.lineData.active && jle.toggleOff),
                                        onSelect: g
                                    })
                                })
                            }), (0,
                            z.jsx)("div", {
                                className: Ele.cellSingle,
                                children: (0,
                                z.jsx)(Eg, {
                                    tooltip: (0,
                                    z.jsx)(_c.Transport.TOOLTIP_SCHEDULE, {
                                        hash: I
                                    }),
                                    children: (0,
                                    z.jsx)(Rle, {
                                        focusKey: Ple,
                                        src: _le(t.lineData.schedule),
                                        onSelect: E,
                                        className: Zu()(jle.button, jle.scheduleButton)
                                    })
                                })
                            }), (0,
                            z.jsx)("div", {
                                className: Ele.cellSingle,
                                children: (0,
                                z.jsx)(Eg, {
                                    tooltip: (0,
                                    z.jsx)(_c.Transport.TOOLTIP_VISIBLE, {
                                        hash: I
                                    }),
                                    children: (0,
                                    z.jsx)(Rle, {
                                        tinted: !0,
                                        focusKey: Lle,
                                        src: t.lineData.visible ? "Media/Glyphs/EyeOpen.svg" : "Media/Glyphs/EyeClosed.svg",
                                        onSelect: x,
                                        className: Zu()(jle.button, jle.smallerIcon)
                                    })
                                })
                            }), (0,
                            z.jsx)("div", {
                                className: Ele.cellSingle,
                                children: (0,
                                z.jsx)(Eg, {
                                    tooltip: (0,
                                    z.jsx)(_c.Transport.TOOLTIP_DELETE, {
                                        hash: I
                                    }),
                                    children: (0,
                                    z.jsx)(Rle, {
                                        tinted: !0,
                                        focusKey: Ale,
                                        src: "Media/Glyphs/Trash.svg",
                                        onSelect: p,
                                        className: jle.button
                                    })
                                })
                            })]
                        })
                    })
                })
            })
        }
        ;
        const Rle = ({focusKey: e, tinted: t=!1, src: n, className: s, onSelect: i})=>{
            const [a,o] = (0,
            Y.useState)(!1);
            return (0,
            z.jsx)(Ah, {
                onFocusChange: o,
                children: (0,
                z.jsx)(tb, {
                    focusKey: e,
                    disableHint: !0,
                    tinted: t,
                    src: n,
                    onSelect: i,
                    className: Zu()(jle.button, s),
                    onClick: Db,
                    children: (0,
                    z.jsx)(UT, {
                        action: "Select",
                        active: a,
                        className: jle.hint
                    })
                })
            })
        }
        ;
        X.add("game-ui/game/components/transportation-overview-panel/transport-line-item/transport-line-item.tsx", {
            get TransportLineItem() {
                return Mle
            },
            set TransportLineItem(e) {
                Mle = e
            }
        });
        let kle = {
            "transport-type-item": "transport-type-item__xs",
            transportTypeItem: "transport-type-item__xs",
            lock: "lock_GRv"
        };
        X.add("game-ui/game/components/transportation-overview-panel/transport-type-item/transport-type-item.module.scss", {
            get classes() {
                return kle
            },
            set classes(e) {
                Object.assign(kle, e)
            }
        });
        const Dle = kle;
        var Fle = ({type: e, cargo: t, selected: n, focusKey: s, onSelect: i})=>{
            const a = (0,
            Y.useCallback)((()=>i(e.id)), [i, e]);
            return (0,
            z.jsx)(H6, {
                title: t ? (0,
                z.jsx)(_c.Transport.ROUTES, {
                    hash: e.id
                }) : (0,
                z.jsx)(_c.Transport.LINES, {
                    hash: e.id
                }),
                locked: e.locked,
                requirements: e.requirements,
                direction: "right",
                children: (0,
                z.jsx)(tb, {
                    disableHint: !0,
                    focusKey: s,
                    src: e.icon,
                    selected: !e.locked && n,
                    disabled: e.locked,
                    theme: lre,
                    className: Zu()(Dle.transportTypeItem, e.locked && lre.locked),
                    onSelect: a,
                    children: e.locked && (0,
                    z.jsx)(OZ, {
                        className: Dle.lock
                    })
                })
            })
        }
        ;
        X.add("game-ui/game/components/transportation-overview-panel/transport-type-item/transport-type-item.tsx", {
            get TransportTypeItem() {
                return Fle
            },
            set TransportTypeItem(e) {
                Fle = e
            }
        });
        const Ule = new Ig("HEADER_KEY");
        var Ble;
        !function(e) {
            e[e.Name = 0] = "Name",
            e[e.Length = 1] = "Length",
            e[e.Stops = 2] = "Stops",
            e[e.Vehicles = 3] = "Vehicles",
            e[e.Cargo = 4] = "Cargo",
            e[e.Usage = 5] = "Usage"
        }(Ble || (Ble = {}));
        var Gle = ({cargo: e, lines: t, types: n, selectedType: s, setSelectedType: i})=>{
            cg(vT.value?.transportationOverviewPanelLines);
            const [a,o] = (0,
            Y.useState)()
              , [r,l] = (0,
            Y.useState)(Ble.Name)
              , [c,u] = (0,
            Y.useState)(!0)
              , d = (0,
            Y.useCallback)((e=>{
                "string" == typeof e && i(e)
            }
            ), [i])
              , m = (0,
            Y.useCallback)((e=>{
                i(e)
            }
            ), [i])
              , h = (0,
            Y.useCallback)((e=>{
                u(e !== r || !c),
                l(e)
            }
            ), [c, r])
              , g = zu()
              , p = (0,
            Y.useMemo)((()=>function(e, t, n, s) {
                const i = _K({
                    order: n ? "asc" : "desc"
                });
                switch (t) {
                case Ble.Name:
                    return e.sort(((e,t)=>i(s(e.name), s(t.name))));
                case Ble.Length:
                    return e.sort(((e,t)=>i(e.lineData.length, t.lineData.length)));
                case Ble.Stops:
                    return e.sort(((e,t)=>i(e.lineData.stops, t.lineData.stops)));
                case Ble.Vehicles:
                    return e.sort(((e,t)=>i(e.lineData.vehicles, t.lineData.vehicles)));
                case Ble.Cargo:
                    return e.sort(((e,t)=>i(e.lineData.cargo, t.lineData.cargo)));
                case Ble.Usage:
                    return e.sort(((e,t)=>i(e.lineData.usage, t.lineData.usage)))
                }
            }(t, r, c, g)), [c, t, g, r])
              , [f,x] = (0,
            Y.useState)(p.some((e=>e.lineData.visible)) || 0 === p.length)
              , v = (0,
            Y.useCallback)((()=>{
                for (let e = 0; e < p.length; e++) {
                    const t = p[e];
                    f ? sA(t.lineData.entity, !1) : nA(t.lineData.entity, !1)
                }
                x(!f)
            }
            ), [f, p]);
            (0,
            Y.useEffect)((()=>{
                x(p.some((e=>e.lineData.visible)) || 0 === p.length)
            }
            ), [p]);
            const _ = (0,
            Y.useCallback)((()=>p?.length > 0 ? Dr(p[0].lineData.entity) : null), [p]);
            return (0,
            z.jsx)(np, {
                direction: kg.Horizontal,
                children: (0,
                z.jsxs)("div", {
                    className: Ele.transportationOverviewPage,
                    children: [(0,
                    z.jsx)(mT, {
                        uiTag: vT.value?.transportationOverviewPanelTransportTypes,
                        children: (0,
                        z.jsx)(s3, {
                            theme: n3,
                            className: Ele.types,
                            children: (0,
                            z.jsx)(Zg, {
                                focused: s,
                                onChange: d,
                                onRefocus: Jg,
                                children: (0,
                                z.jsx)(mb, {
                                    children: n.map((t=>(0,
                                    z.jsx)(Fle, {
                                        type: t,
                                        cargo: e,
                                        focusKey: t.id,
                                        selected: t.id === s,
                                        onSelect: m
                                    }, t.id)))
                                })
                            })
                        })
                    }), (0,
                    z.jsx)(mT, {
                        uiTag: vT.value?.transportationOverviewPanelLines,
                        children: (0,
                        z.jsx)(s3, {
                            focusKey: p.length > 0 ? yg : Sg,
                            theme: n3,
                            className: Ele.lines,
                            initialFocused: p?.length > 0 ? Dr(p[0].lineData.entity) : Ule,
                            onRefocus: _,
                            header: (0,
                            z.jsx)(Vle, {
                                focusKey: p.length > 0 ? Ule : Sg,
                                type: s,
                                cargo: e,
                                sortBy: r,
                                ascending: c,
                                someVisible: f,
                                onSort: h,
                                toggleVisibility: v
                            }),
                            children: (0,
                            z.jsx)(mb, {
                                className: Ele.scrollable,
                                children: p.length > 0 ? p.map((e=>(0,
                                z.jsx)(Mle, {
                                    focusKey: Dr(e.lineData.entity),
                                    onFocusedColumnChanged: o,
                                    focusedColumnKey: a,
                                    line: e
                                }, Dr(e.lineData.entity)))) : (0,
                                z.jsx)("div", {
                                    className: Ele.noLines,
                                    children: e ? (0,
                                    z.jsx)(_c.Transport.NO_ROUTES, {}) : (0,
                                    z.jsx)(_c.Transport.NO_LINES, {})
                                })
                            })
                        })
                    })]
                })
            })
        }
        ;
        const Vle = ({type: e, cargo: t, sortBy: n, ascending: s, someVisible: i, focusKey: a, onSort: o, toggleVisibility: r})=>{
            const l = (0,
            Y.useCallback)((()=>{
                o(Ble.Name)
            }
            ), [o])
              , c = (0,
            Y.useCallback)((()=>{
                o(Ble.Stops)
            }
            ), [o])
              , u = (0,
            Y.useCallback)((()=>{
                o(Ble.Vehicles)
            }
            ), [o])
              , d = (0,
            Y.useCallback)((()=>{
                o(Ble.Cargo)
            }
            ), [o])
              , m = (0,
            Y.useCallback)((()=>{
                o(Ble.Usage)
            }
            ), [o])
              , h = (0,
            Y.useCallback)((()=>{
                o(Ble.Length)
            }
            ), [o])
              , g = (0,
            z.jsx)(Z_, {
                className: Ele.sortIndicator,
                src: `Media/Glyphs/ThickStrokeArrow${s ? "Down" : "Up"}.svg`
            });
            return (0,
            z.jsx)(Sp, {
                focusKey: a,
                className: Ele.header,
                children: (0,
                z.jsxs)(np, {
                    direction: kg.Horizontal,
                    children: [(0,
                    z.jsx)("div", {
                        className: Ele.title,
                        children: t ? (0,
                        z.jsx)(_c.Transport.ROUTES, {
                            hash: e
                        }) : (0,
                        z.jsx)(_c.Transport.LINES, {
                            hash: e
                        })
                    }), (0,
                    z.jsx)(mT, {
                        uiTag: vT.value?.transportationOverviewPanelLegend,
                        children: (0,
                        z.jsxs)("div", {
                            className: Ele.legends,
                            children: [(0,
                            z.jsx)("div", {
                                className: Ele.cellSingle
                            }), (0,
                            z.jsx)("div", {
                                className: Zu()(Ele.cellWide, Ele.alignLeft),
                                children: (0,
                                z.jsxs)(Hle, {
                                    onSelect: l,
                                    className: Ele.button,
                                    children: [(0,
                                    z.jsx)("div", {
                                        className: Ele.buttonLabel,
                                        children: (0,
                                        z.jsx)(_c.Transport.LEGEND_NAME, {})
                                    }), n === Ble.Name && g]
                                })
                            }), (0,
                            z.jsx)("div", {
                                className: Ele.cellDouble,
                                children: (0,
                                z.jsxs)(Hle, {
                                    onSelect: h,
                                    className: Ele.button,
                                    children: [(0,
                                    z.jsx)("div", {
                                        className: Ele.buttonLabel,
                                        children: (0,
                                        z.jsx)(_c.Transport.LEGEND_LENGTH, {})
                                    }), n === Ble.Length && g]
                                })
                            }), (0,
                            z.jsx)("div", {
                                className: Ele.cellDouble,
                                children: (0,
                                z.jsxs)(Hle, {
                                    onSelect: c,
                                    className: Ele.button,
                                    children: [(0,
                                    z.jsx)("div", {
                                        className: Ele.buttonLabel,
                                        children: (0,
                                        z.jsx)(_c.Transport.LEGEND_STOPS, {
                                            hash: e
                                        })
                                    }), n === Ble.Stops && g]
                                })
                            }), (0,
                            z.jsx)("div", {
                                className: Ele.cellDouble,
                                children: (0,
                                z.jsxs)(Hle, {
                                    onSelect: u,
                                    className: Ele.button,
                                    children: [(0,
                                    z.jsx)("div", {
                                        className: Ele.buttonLabel,
                                        children: (0,
                                        z.jsx)(_c.Transport.LEGEND_VEHICLES, {
                                            hash: e
                                        })
                                    }), n === Ble.Vehicles && g]
                                })
                            }), (0,
                            z.jsx)("div", {
                                className: Ele.cellDouble,
                                children: (0,
                                z.jsxs)(Hle, {
                                    onSelect: d,
                                    className: Ele.button,
                                    children: [(0,
                                    z.jsx)("div", {
                                        className: Ele.buttonLabel,
                                        children: t ? (0,
                                        z.jsx)(_c.Transport.LEGEND_CARGO, {}) : (0,
                                        z.jsx)(_c.Transport.LEGEND_PASSENGERS, {
                                            hash: e
                                        })
                                    }), n === Ble.Cargo && g]
                                })
                            }), (0,
                            z.jsx)("div", {
                                className: Zu()(Ele.cellDouble, Ele.alignRight),
                                children: (0,
                                z.jsxs)(Hle, {
                                    onSelect: m,
                                    className: Ele.button,
                                    children: [(0,
                                    z.jsx)("div", {
                                        className: Ele.buttonLabel,
                                        children: (0,
                                        z.jsx)(_c.Transport.LEGEND_USAGE, {})
                                    }), n === Ble.Usage && g]
                                })
                            }), (0,
                            z.jsx)("div", {
                                className: Ele.cellSingle
                            }), (0,
                            z.jsx)("div", {
                                className: Ele.cellSingle
                            }), (0,
                            z.jsx)("div", {
                                className: Ele.cellSingle
                            }), (0,
                            z.jsx)("div", {
                                className: Ele.cellSingle,
                                children: (0,
                                z.jsx)(Eg, {
                                    tooltip: (0,
                                    z.jsx)(_c.Transport.TOOLTIP_VISIBLE, {
                                        hash: t ? "Route" : "Line"
                                    }),
                                    children: (0,
                                    z.jsx)(Hle, {
                                        onSelect: r,
                                        className: Ele.button,
                                        children: (0,
                                        z.jsx)(Z_, {
                                            src: i ? "Media/Glyphs/EyeOpen.svg" : "Media/Glyphs/EyeClosed.svg",
                                            className: Ele.icon
                                        })
                                    })
                                })
                            }), (0,
                            z.jsx)("div", {
                                className: Ele.cellSingle
                            })]
                        })
                    })]
                })
            })
        }
          , Hle = ({children: e, className: t, onSelect: n})=>{
            const [s,i] = (0,
            Y.useState)(!1);
            return (0,
            z.jsx)(Ah, {
                onFocusChange: i,
                children: (0,
                z.jsxs)(U_, {
                    disableHint: !0,
                    onSelect: n,
                    className: Zu()(Ele.button, t),
                    onClick: Db,
                    children: [(0,
                    z.jsx)(UT, {
                        action: "Select",
                        active: s,
                        className: Ele.hint
                    }), e]
                })
            })
        }
        ;
        X.add("game-ui/game/components/transportation-overview-panel/transportation-overview-page.tsx", {
            get TransportationOverviewPage() {
                return Gle
            },
            set TransportationOverviewPage(e) {
                Gle = e
            }
        });
        let Kle = {
            "transportation-overview-panel": "transportation-overview-panel_VlO",
            transportationOverviewPanel: "transportation-overview-panel_VlO"
        };
        X.add("game-ui/game/components/transportation-overview-panel/transportation-overview-panel.module.scss", {
            get classes() {
                return Kle
            },
            set classes(e) {
                Object.assign(Kle, e)
            }
        });
        const Wle = Kle
          , zle = [Zv.PublicTransport, Zv.Cargo];
        var Yle = ({selectedTab: e, onSelectTab: t, onClose: n})=>{
            cg(vT.value?.transportationOverviewPanel);
            const s = sl(zL)
              , i = sl(YL)
              , a = sl($L)
              , o = sl(qL)
              , r = sl(XL)
              , l = (0,
            Y.useMemo)((()=>e === Zv.Cargo ? i : s), [e, i, s])
              , c = (0,
            Y.useMemo)((()=>e === Zv.Cargo ? r : o), [r, e, o])
              , u = (0,
            Y.useMemo)((()=>e === Zv.Cargo ? a.filter((e=>e.lineData?.isCargo)).filter((e=>e.lineData?.type === r)) : a.filter((e=>!e.lineData?.isCargo)).filter((e=>e.lineData?.type === o))), [r, e, o, a])
              , d = (0,
            Y.useCallback)((()=>{
                n(),
                aA()
            }
            ), [n])
              , m = oN("Cargo Transport");
            return (0,
            z.jsx)(mT, {
                uiTag: vT.value?.transportationOverviewPanel,
                children: (0,
                z.jsx)(rE, {
                    header: (0,
                    z.jsxs)(z.Fragment, {
                        children: [(0,
                        z.jsx)(dE, {
                            children: (0,
                            z.jsx)(_c.Transport.LINES_OVERVIEW_TITLE, {})
                        }), (0,
                        z.jsxs)(MZ, {
                            children: [(0,
                            z.jsx)(RZ, {
                                uiTag: vT.value?.transportationOverviewPanelTabPublicTransport,
                                id: Zv.PublicTransport,
                                selectedId: e,
                                onSelect: t,
                                children: (0,
                                z.jsx)(_c.Transport.TAB, {
                                    hash: Zv[Zv.PublicTransport]
                                })
                            }), (0,
                            z.jsx)(H6, {
                                locked: m.locked,
                                requirements: m.requirements,
                                children: (0,
                                z.jsx)(RZ, {
                                    uiTag: vT.value?.transportationOverviewPanelTabCargo,
                                    disabled: m.locked,
                                    locked: m.locked,
                                    id: Zv.Cargo,
                                    selectedId: e,
                                    onSelect: t,
                                    children: (0,
                                    z.jsx)(_c.Transport.TAB, {
                                        hash: Zv[Zv.Cargo]
                                    })
                                })
                            })]
                        })]
                    }),
                    className: Wle.transportationOverviewPanel,
                    transitionSounds: up,
                    onClose: d,
                    children: (0,
                    z.jsx)(AZ, {
                        tabs: zle,
                        selectedTab: e,
                        onSelect: t,
                        children: (0,
                        z.jsx)(Gle, {
                            lines: u,
                            types: l,
                            selectedType: c,
                            setSelectedType: e === Zv.Cargo ? lA : rA,
                            cargo: e === Zv.Cargo
                        }, e)
                    })
                })
            })
        }
        ;
        X.add("game-ui/game/components/transportation-overview-panel/transportation-overview-panel.tsx", {
            get TransportationOverviewPanel() {
                return Yle
            },
            set TransportationOverviewPanel(e) {
                Yle = e
            }
        });
        let $le = {
            "game-main-screen": "game-main-screen_TRK child-opacity-transition_nkS",
            gameMainScreen: "game-main-screen_TRK child-opacity-transition_nkS",
            "ui-hidden": "ui-hidden_Ijx",
            uiHidden: "ui-hidden_Ijx",
            "main-container": "main-container__E2",
            mainContainer: "main-container__E2",
            "main-column": "main-column_g42",
            mainColumn: "main-column_g42",
            "action-hints": "action-hints_sBV",
            actionHints: "action-hints_sBV",
            "center-panel-layout": "center-panel-layout_X2p",
            centerPanelLayout: "center-panel-layout_X2p",
            "info-menu-layout": "info-menu-layout_E8i",
            infoMenuLayout: "info-menu-layout_E8i",
            "top-layout": "top-layout_QtO",
            topLayout: "top-layout_QtO",
            "info-layout": "info-layout_BVk",
            infoLayout: "info-layout_BVk",
            "infoview-menu": "infoview-menu_VQI",
            infoviewMenu: "infoview-menu_VQI",
            "selected-info-panel": "selected-info-panel_iIe",
            selectedInfoPanel: "selected-info-panel_iIe",
            "tool-layout": "tool-layout_SqM",
            toolLayout: "tool-layout_SqM",
            "tool-side-column": "tool-side-column_l9i",
            toolSideColumn: "tool-side-column_l9i",
            "tool-main-column": "tool-main-column_PaC",
            toolMainColumn: "tool-main-column_PaC",
            "tool-panel": "tool-panel_V_j",
            toolPanel: "tool-panel_V_j",
            "map-tile-purchase-panel": "map-tile-purchase-panel_LSa",
            mapTilePurchasePanel: "map-tile-purchase-panel_LSa",
            "social-panel-layout": "social-panel-layout_JFt",
            socialPanelLayout: "social-panel-layout_JFt",
            "emergency-mode": "emergency-mode_zZ8",
            emergencyMode: "emergency-mode_zZ8",
            "photo-mode-panel-layout": "photo-mode-panel-layout_poh",
            photoModePanelLayout: "photo-mode-panel-layout_poh",
            "radio-panel": "radio-panel_otL",
            radioPanel: "radio-panel_otL",
            "bp-indicator": "bp-indicator_dvA",
            bpIndicator: "bp-indicator_dvA",
            "pause-menu-layout": "pause-menu-layout_eGE",
            pauseMenuLayout: "pause-menu-layout_eGE",
            horizontal: "horizontal_xPW",
            vertical: "vertical_txi",
            "pause-menu-toggle": "pause-menu-toggle_ewR",
            pauseMenuToggle: "pause-menu-toggle_ewR",
            hint: "hint_d21",
            "pause-overlay": "pause-overlay_rOw",
            pauseOverlay: "pause-overlay_rOw",
            paused: "paused_kMX"
        };
        X.add("game-ui/game/components/game-main-screen.module.scss", {
            get classes() {
                return $le
            },
            set classes(e) {
                Object.assign($le, e)
            }
        });
        const qle = $le;
        var Xle = {
            [Fv.InfoviewMenu]: ({onClose: e})=>(0,
            z.jsx)("div", {
                className: qle.infoLayout,
                children: (0,
                z.jsx)(H8, {
                    className: qle.infoviewMenu,
                    onClose: e
                })
            }),
            [Fv.Progression]: ({selectedTab: e, onClose: t})=>(0,
            z.jsx)("div", {
                className: qle.centerPanelLayout,
                children: (0,
                z.jsx)(vre, {
                    selectedTab: e,
                    onSelectTab: qv,
                    onClose: t
                })
            }),
            [Fv.Economy]: ({selectedTab: e, onClose: t})=>(0,
            z.jsx)("div", {
                className: qle.centerPanelLayout,
                children: (0,
                z.jsx)(Yie, {
                    selectedTab: e,
                    onSelectTab: Qv,
                    onClose: t
                })
            }),
            [Fv.CityInfo]: ({selectedTab: e, onClose: t})=>(0,
            z.jsx)("div", {
                className: qle.centerPanelLayout,
                children: (0,
                z.jsx)(dne, {
                    selectedTab: e,
                    onSelectTab: Jv,
                    onClose: t
                })
            }),
            [Fv.Statistics]: ({onClose: e})=>(0,
            z.jsx)("div", {
                className: qle.centerPanelLayout,
                children: (0,
                z.jsx)(xle, {
                    onClose: e
                })
            }),
            [Fv.TransportationOverview]: ({selectedTab: e, onClose: t})=>(0,
            z.jsx)("div", {
                className: qle.centerPanelLayout,
                children: (0,
                z.jsx)(Yle, {
                    selectedTab: e,
                    onSelectTab: e_,
                    onClose: t
                })
            }),
            [Fv.Chirper]: ({onClose: e})=>(0,
            z.jsx)(Zle, {
                children: (0,
                z.jsx)(Cte, {
                    onClose: e
                })
            }),
            [Fv.LifePath]: ({selectedEntity: e, onClose: t})=>(0,
            z.jsx)(Zle, {
                children: (0,
                z.jsx)(Sae, {
                    selectedCitizen: e,
                    onClose: t
                })
            }),
            [Fv.Journal]: ({onClose: e})=>(0,
            z.jsx)(Zle, {
                children: (0,
                z.jsx)(nae, {
                    onClose: e
                })
            }),
            [Fv.Radio]: ({onClose: e})=>(0,
            z.jsx)(zre, {
                className: qle.radioPanel,
                onClose: e
            }),
            [Fv.PhotoMode]: ({onClose: e})=>(0,
            z.jsx)(Jle, {
                children: (0,
                z.jsx)(e4, {
                    onClose: e
                })
            }),
            [Fv.Notifications]: ({onClose: e})=>(0,
            z.jsx)(Zle, {
                children: (0,
                z.jsx)(Hae, {
                    onClose: e
                })
            })
        }
          , Qle = ({panel: e})=>{
            const t = (0,
            Y.useCallback)((()=>Wv(e.__Type)), [e.__Type]);
            return (0,
            z.jsx)(lD, {
                components: Xle,
                data: e,
                props: {
                    onClose: t
                }
            })
        }
          , Zle = ({children: e})=>{
            const t = sl(QN);
            return (0,
            z.jsx)("div", {
                className: Zu()(qle.socialPanelLayout, t && qle.emergencyMode),
                children: e
            })
        }
          , Jle = ({children: e})=>(0,
        z.jsx)("div", {
            className: Zu()(qle.photoModePanelLayout),
            children: e
        });
        X.add("game-ui/game/components/game-panel-renderer.tsx", {
            get gamePanelComponents() {
                return Xle
            },
            set gamePanelComponents(e) {
                Xle = e
            },
            get GamePanelRenderer() {
                return Qle
            },
            set GamePanelRenderer(e) {
                Qle = e
            },
            get SocialPanelLayout() {
                return Zle
            },
            set SocialPanelLayout(e) {
                Zle = e
            },
            get PhotoModePanelLayout() {
                return Jle
            },
            set PhotoModePanelLayout(e) {
                Jle = e
            }
        });
        let ece = {
            "infoview-menu-toggle": "infoview-menu-toggle_bYF",
            infoviewMenuToggle: "infoview-menu-toggle_bYF",
            "mini-panel-visible": "mini-panel-visible_mDg",
            miniPanelVisible: "mini-panel-visible_mDg",
            button: "button_H9N",
            "active-infoview": "active-infoview_J2h",
            activeInfoview: "active-infoview_J2h",
            exit: "exit_Oop",
            "enter-active": "enter-active_Wti",
            enterActive: "enter-active_Wti",
            enter: "enter_zBP",
            "exit-active": "exit-active__MZ",
            exitActive: "exit-active__MZ",
            label: "label_UhV",
            "close-button": "close-button_TMO",
            closeButton: "close-button_TMO",
            lock: "lock_Mbc",
            hint: "hint_oTi"
        };
        X.add("game-ui/game/components/infoviews/infoview-menu-toggle/infoview-menu-toggle.module.scss", {
            get classes() {
                return ece
            },
            set classes(e) {
                Object.assign(ece, e)
            }
        });
        const tce = ece;
        var nce = ({miniPanelVisible: e, className: t})=>{
            const n = f4(Fv.InfoviewMenu).visible;
            return (0,
            z.jsx)(sce, {
                miniPanelVisible: e,
                className: t,
                visible: n
            })
        }
        ;
        const sce = (0,
        Y.memo)((function({miniPanelVisible: e, className: t, visible: n}) {
            const s = sl(ef)
              , i = oN("Infoviews")
              , a = Dm()
              , o = sl(Dl)
              , r = (0,
            Y.useCallback)((()=>{
                !n && vT.value?.infoviewsButton && ag(vT.value.infoviewsButton),
                s && !n ? sf() : Yv()
            }
            ), [s, n]);
            return (0,
            z.jsxs)("div", {
                className: Zu()(tce.infoviewMenuToggle, e && tce.miniPanelVisible, t),
                children: [(0,
                z.jsx)(ud, {
                    children: null != s && e && (0,
                    z.jsx)(mh, {
                        styles: tce,
                        children: (0,
                        z.jsxs)("div", {
                            className: tce.activeInfoview,
                            children: [(0,
                            z.jsx)("div", {
                                className: tce.label,
                                children: (0,
                                z.jsx)(_c.Infoviews.INFOVIEW, {
                                    hash: s.id
                                })
                            }), !a && (0,
                            z.jsx)(Eg, {
                                tooltip: (0,
                                z.jsx)(_c.Infoviews.CLOSE_INFO_VIEW, {}),
                                children: (0,
                                z.jsx)(tb, {
                                    disableHint: !0,
                                    tinted: !0,
                                    src: "Media/Glyphs/Close.svg",
                                    theme: sb,
                                    className: tce.closeButton,
                                    onSelect: sf
                                })
                            })]
                        })
                    })
                }), (0,
                z.jsx)(mT, {
                    uiTag: vT.value?.infoviewsButton,
                    children: (0,
                    z.jsx)(H6, {
                        title: (0,
                        z.jsx)(_c.Main.TOOLTIP_TITLE_INFO_VIEWS, {}),
                        description: (0,
                        z.jsx)(_c.Main.TOOLTIP_DESCRIPTION_INFO_VIEWS, {}),
                        shortcut: (0,
                        z.jsx)(BT, {
                            action: "Info View",
                            active: o
                        }),
                        requirements: i.requirements,
                        locked: i.locked,
                        children: (0,
                        z.jsx)(a9, {
                            src: "Media/Glyphs/Info.svg",
                            className: tce.button,
                            selected: n,
                            onSelect: r,
                            disabled: i.locked,
                            children: i.locked && (0,
                            z.jsx)(OZ, {
                                className: tce.lock
                            })
                        })
                    })
                }), (0,
                z.jsx)(UT, {
                    action: "Info View",
                    className: tce.hint
                })]
            })
        }
        ));
        X.add("game-ui/game/components/infoviews/infoview-menu-toggle/infoview-menu-toggle.tsx", {
            get InfoviewMenuToggle() {
                return nce
            },
            set InfoviewMenuToggle(e) {
                nce = e
            }
        });
        let ice = {
            field: "field_eZ6",
            header: "header_oa2",
            icon: "icon_t1n",
            label: "label_pzR",
            content: "content_DHv",
            error: "error_XxO"
        };
        X.add("game-ui/game/components/map-tile-purchase-panel/map-tile-purchase-field.module.scss", {
            get classes() {
                return ice
            },
            set classes(e) {
                Object.assign(ice, e)
            }
        });
        const ace = ice;
        let oce = {
            "map-tile-purchase-panel": "map-tile-purchase-panel_RTg",
            mapTilePurchasePanel: "map-tile-purchase-panel_RTg",
            section: "section_JVp",
            resources: "resources_F7B",
            "resource-item": "resource-item_xdp",
            resourceItem: "resource-item_xdp",
            "resource-icon": "resource-icon_sHE",
            resourceIcon: "resource-icon_sHE",
            "resource-title": "resource-title_UvF",
            resourceTitle: "resource-title_UvF",
            "resource-value": "resource-value_pxT",
            resourceValue: "resource-value_pxT",
            purchase: "purchase_qTi",
            "purchase-summary": "purchase-summary_OYA",
            purchaseSummary: "purchase-summary_OYA",
            button: "button_adT",
            problems: "problems_b5X",
            problem: "problem_d8F",
            "cost-icon": "cost-icon_Tn1",
            costIcon: "cost-icon_Tn1",
            "cost-icon-disabled": "cost-icon-disabled_Dzu",
            costIconDisabled: "cost-icon-disabled_Dzu",
            label: "label_ASS",
            field: "field_z8Y",
            "floating-hint": "floating-hint_X9C",
            floatingHint: "floating-hint_X9C"
        };
        X.add("game-ui/game/components/map-tile-purchase-panel/map-tile-purchase-panel.module.scss", {
            get classes() {
                return oce
            },
            set classes(e) {
                Object.assign(oce, e)
            }
        });
        const rce = oce;
        var lce = ({focusKey: e, className: t, onClose: n, showHint: s})=>{
            rg(vT.value?.mapTilePanel);
            const i = (0,
            Y.useRef)(null)
              , a = sl(_C)
              , o = sl(bC)
              , r = sl(TC)
              , l = sl(SC)
              , c = sl(Ll)
              , u = l === fC.None
              , d = 0 == (l & (fC.NoAvailable | fC.NoCurrentlyAvailable))
              , m = (0,
            Y.useMemo)((()=>({
                "Purchase Map Tile": d && u ? ()=>{
                    cp(lp.purchase),
                    wC(),
                    vT.value?.mapTilePanelPurchase && ag(vT.value?.mapTilePanelPurchase)
                }
                : null
            })), [u, d])
              , h = (0,
            Y.useMemo)((()=>new ResizeObserver((e=>{
                if (e[0]) {
                    const t = Math.round(e[0].borderBoxSize[0].blockSize);
                    document.documentElement.style.setProperty("--infoLayoutBottom", `${t}px`)
                }
            }
            ))), []);
            return (0,
            Y.useEffect)((()=>{
                if (i.current && c > 1)
                    return h.observe(i.current),
                    ()=>h.disconnect()
            }
            ), [h, c]),
            (0,
            z.jsx)(Mg, {
                actions: m,
                children: (0,
                z.jsx)(mT, {
                    uiTag: vT.value?.mapTilePanel,
                    children: (0,
                    z.jsxs)(rE, {
                        focusKey: e,
                        className: Zu()(rce.mapTilePurchasePanel, t),
                        header: (0,
                        z.jsx)(dE, {
                            children: (0,
                            z.jsx)(_c.MapTilePurchase.TITLE, {})
                        }),
                        transitionSounds: null,
                        backActionOverride: "Leave Map Tile View",
                        onClose: n,
                        hintClassName: rce.floatingHint,
                        showCloseHint: "Leave Map Tile View",
                        unfocusedHintAction: s ? "Leave Map Tile View" : void 0,
                        ref: i,
                        children: [d && (0,
                        z.jsx)(mT, {
                            uiTag: vT.value?.mapTilePanelResources,
                            children: (0,
                            z.jsx)("div", {
                                className: Zu()(rce.section, rce.resources),
                                children: [a, o, ...r].map((e=>(0,
                                z.jsx)(cce, {
                                    resource: e
                                }, e.id)))
                            })
                        }), (0,
                        z.jsx)(uce, {
                            purchasePosible: d,
                            purchaseEnabled: u,
                            showHint: s
                        })]
                    })
                })
            })
        }
        ;
        const cce = ({resource: e})=>(0,
        z.jsx)(BQ, {
            title: (0,
            z.jsx)(_c.MapTilePurchase.TOOLTIP_TITLE_RESOURCE, {
                hash: e.id
            }),
            description: (0,
            z.jsx)(_c.MapTilePurchase.TOOLTIP_RESOURCE, {
                hash: e.id
            }),
            children: (0,
            z.jsxs)("div", {
                className: rce.resourceItem,
                children: [(0,
                z.jsx)("img", {
                    src: e.icon,
                    className: rce.resourceIcon
                }), (0,
                z.jsx)("div", {
                    className: rce.resourceTitle,
                    children: (0,
                    z.jsx)(_c.MapTilePurchase.RESOURCE, {
                        hash: e.id
                    })
                }), (0,
                z.jsx)("div", {
                    className: rce.resourceValue,
                    children: (0,
                    z.jsx)(Oc, {
                        value: e.value,
                        unit: e.unit
                    })
                })]
            })
        })
          , uce = ({purchasePosible: e, purchaseEnabled: t, showHint: n})=>{
            const s = (0,
            Y.useCallback)((()=>{
                wC(),
                vT.value?.mapTilePanelPurchase && ag(vT.value?.mapTilePanelPurchase)
            }
            ), [])
              , i = Dm()
              , a = 0 != (SC.value & (fC.InsufficientFunds | fC.InsufficientPermits));
            return (0,
            z.jsxs)(z.Fragment, {
                children: [(0,
                z.jsxs)(NH, {
                    className: Zu()(rce.section, rce.purchase),
                    children: [(0,
                    z.jsx)(NH, {
                        className: rce.purchaseSummary,
                        children: (0,
                        z.jsx)(dce, {})
                    }), e && !a && (0,
                    z.jsx)(CH, {
                        children: (0,
                        z.jsx)(mT, {
                            uiTag: vT.value?.mapTilePanelPurchase,
                            children: (0,
                            z.jsx)(Eg, {
                                tooltip: hce(SC.value),
                                children: (0,
                                z.jsx)(U_, {
                                    focusKey: Sg,
                                    theme: JI,
                                    selectSound: lp.purchase,
                                    className: rce.button,
                                    disabled: !t,
                                    onSelect: s,
                                    hintAction: "Purchase Map Tile",
                                    forceHint: n && t,
                                    selected: t && !i,
                                    shortcut: t && !i ? "Confirm" : void 0,
                                    children: (0,
                                    z.jsx)(_c.MapTilePurchase.PURCHASE_STATUS, {
                                        hash: fC[fC.None]
                                    })
                                })
                            })
                        })
                    })]
                }), a && (0,
                z.jsx)("div", {
                    className: rce.problems,
                    children: mce(SC.value)
                })]
            })
        }
          , dce = ()=>{
            const e = sl(yC)
              , t = sl(jC)
              , n = sl(EC)
              , s = sl(IC)
              , i = sl(vj)
              , a = i.find((e=>"Tile Upkeep" === e.id))?.active;
            return 0 != (SC.value & fC.NoSelection) ? mce(fC.NoSelection) || null : 0 != (SC.value & fC.NoAvailable) ? mce(fC.NoAvailable) || null : 0 != (SC.value & fC.NoCurrentlyAvailable) ? mce(fC.NoCurrentlyAvailable) || null : (0,
            z.jsxs)(CH, {
                children: [(0,
                z.jsx)(H9, {
                    theme: ace,
                    label: (0,
                    z.jsx)(_c.MapTilePurchase.PERMITS_USED, {}),
                    icon: "Media/Game/Icons/ExpansionPermit.svg",
                    className: Zu()(rce.field, 0 != (SC.value & fC.InsufficientPermits) && ace.error),
                    children: (0,
                    z.jsx)(uu, {
                        value: t,
                        total: e
                    })
                }), a && (0,
                z.jsx)(H9, {
                    theme: ace,
                    label: (0,
                    z.jsx)(_c.MapTilePurchase.TILE_UPKEEP, {}),
                    icon: "Media/Game/Icons/MapTile.svg",
                    className: Zu()(rce.field, 0 != (SC.value & fC.InsufficientFunds) && ace.error),
                    children: (0,
                    z.jsx)(Oc, {
                        value: s,
                        unit: vc.MoneyPerMonth
                    })
                }), (0,
                z.jsx)(H9, {
                    theme: ace,
                    label: (0,
                    z.jsx)(_c.MapTilePurchase.COST, {}),
                    icon: "Media/Game/Icons/Money.svg",
                    className: Zu()(rce.field, 0 != (SC.value & fC.InsufficientFunds) && ace.error),
                    children: (0,
                    z.jsx)(Oc, {
                        value: n,
                        unit: vc.Money
                    })
                })]
            })
        }
        ;
        function mce(e) {
            return e === (fC.InsufficientPermits | fC.InsufficientFunds) ? (0,
            z.jsx)("div", {
                className: rce.problem,
                children: (0,
                z.jsx)(_c.MapTilePurchase.PURCHASE_STATUS, {
                    hash: `${fC[fC.InsufficientPermits]}${fC[fC.InsufficientFunds]}`
                })
            }) : (0,
            z.jsx)("div", {
                className: rce.problem,
                children: (0,
                z.jsx)(_c.MapTilePurchase.PURCHASE_STATUS, {
                    hash: fC[e]
                })
            })
        }
        function hce(e) {
            switch (e) {
            case fC.NoSelection:
                return (0,
                z.jsx)(_c.MapTilePurchase.PURCHASE_STATUS_TOOLTIP, {
                    hash: fC[fC.NoSelection]
                });
            case fC.InsufficientPermits | fC.InsufficientFunds:
                return (0,
                z.jsx)(_c.MapTilePurchase.PURCHASE_STATUS_TOOLTIP, {
                    hash: `${fC[fC.InsufficientPermits]}${fC[fC.InsufficientFunds]}`
                });
            case fC.InsufficientPermits:
                return (0,
                z.jsx)(_c.MapTilePurchase.PURCHASE_STATUS_TOOLTIP, {
                    hash: fC[fC.InsufficientPermits]
                });
            case fC.InsufficientFunds:
                return (0,
                z.jsx)(_c.MapTilePurchase.PURCHASE_STATUS_TOOLTIP, {
                    hash: fC[fC.InsufficientFunds]
                })
            }
        }
        X.add("game-ui/game/components/map-tile-purchase-panel/map-tile-purchase-panel.tsx", {
            get MapTilePurchasePanel() {
                return lce
            },
            set MapTilePurchasePanel(e) {
                lce = e
            }
        });
        let gce = {
            "button-row": "button-row_Idj",
            buttonRow: "button-row_Idj"
        };
        X.add("game-ui/common/input/button/button-row.module.scss", {
            get classes() {
                return gce
            },
            set classes(e) {
                Object.assign(gce, e)
            }
        });
        const pce = gce;
        var fce = ({className: e, children: t})=>(0,
        z.jsx)("div", {
            className: Zu()(pce.buttonRow, e),
            children: t
        });
        X.add("game-ui/common/input/button/button-row.tsx", {
            get ButtonRow() {
                return fce
            },
            set ButtonRow(e) {
                fce = e
            }
        });
        let xce = {
            "milestone-trophy-animation": "milestone-trophy-animation_ZMt",
            milestoneTrophyAnimation: "milestone-trophy-animation_ZMt",
            waterdrop: "waterdrop_Qpf",
            scale: "scale_v4R",
            MILESTONE_WATERDROP_FADE: "MILESTONE_WATERDROP_FADE_WQi",
            milestoneWaterdropFade: "MILESTONE_WATERDROP_FADE_WQi",
            two: "two_RoL",
            three: "three_pjZ",
            trophy: "trophy_RwE"
        };
        X.add("game-ui/game/components/progression/milestone-unlock-event-panel/milestone-trophy-animation.module.scss", {
            get classes() {
                return xce
            },
            set classes(e) {
                Object.assign(xce, e)
            }
        });
        const vce = xce;
        var _ce = ({className: e})=>(0,
        z.jsxs)("div", {
            className: Zu()(vce.milestoneTrophyAnimation, e),
            children: [(0,
            z.jsx)("div", {
                className: vce.waterdrop
            }), (0,
            z.jsx)("div", {
                className: Zu()(vce.waterdrop, vce.two)
            }), (0,
            z.jsx)("div", {
                className: Zu()(vce.waterdrop, vce.three)
            }), (0,
            z.jsx)("img", {
                src: "Media/Game/Icons/Trophy.svg",
                className: vce.trophy
            })]
        });
        X.add("game-ui/game/components/progression/milestone-unlock-event-panel/milestone-trophy-animation.tsx", {
            get MilestoneTrophyAnimation() {
                return _ce
            },
            set MilestoneTrophyAnimation(e) {
                _ce = e
            }
        });
        let bce = {
            "milestone-unlock-event-panel": "milestone-unlock-event-panel_zd2",
            milestoneUnlockEventPanel: "milestone-unlock-event-panel_zd2",
            title: "title_K9M",
            "title-primary": "title-primary_m30",
            titlePrimary: "title-primary_m30",
            "title-secondary": "title-secondary_mRY",
            titleSecondary: "title-secondary_mRY",
            header: "header_Uqs",
            "header-layer": "header-layer_ChU",
            headerLayer: "header-layer_ChU",
            cityscape: "cityscape_b4P",
            trophy: "trophy_Q30",
            "city-title": "city-title_U_b",
            cityTitle: "city-title_U_b",
            description: "description_Iei",
            "rewards-label": "rewards-label_q85",
            rewardsLabel: "rewards-label_q85",
            rewards: "rewards_cr_",
            "reward-field": "reward-field_v6Q",
            rewardField: "reward-field_v6Q",
            actions: "actions_YbO",
            "button-label": "button-label_VUl",
            buttonLabel: "button-label_VUl",
            "button-container": "button-container_uMR",
            buttonContainer: "button-container_uMR"
        };
        X.add("game-ui/game/components/progression/milestone-unlock-event-panel/milestone-unlock-event-panel.module.scss", {
            get classes() {
                return bce
            },
            set classes(e) {
                Object.assign(bce, e)
            }
        });
        const Tce = bce
          , Ece = new Ig("continueButton");
        var Ice = ({focusKey: e, milestone: t, onClose: n})=>{
            const s = (0,
            Y.useCallback)((()=>{
                n(),
                qv(Uv.Milestones)
            }
            ), [n])
              , i = ll(UN, t) ?? wN
              , [a,o] = (0,
            Y.useState)(!1)
              , [r,l] = (0,
            Y.useState)(!1);
            (0,
            Y.useEffect)((()=>{
                cp(lp.milestoneEvent)
            }
            ), []);
            const [c,u] = (0,
            Y.useState)(0)
              , d = (0,
            Y.useMemo)((()=>({
                "Select Popup Button": e=>{
                    u(e >= 0 ? (c + 1) % 2 : (c + 2 - 1) % 2)
                }
            })), [c])
              , m = Dm()
              , h = rN("Progression Panel");
            return (0,
            z.jsx)("div", {
                className: Tce.milestoneUnlockEventPanel,
                children: (0,
                z.jsx)(Fg, {
                    onAction: n,
                    children: (0,
                    z.jsx)(Mg, {
                        actions: d,
                        disabled: m,
                        children: (0,
                        z.jsxs)(np, {
                            focusKey: e,
                            initialFocused: Ece,
                            children: [(0,
                            z.jsxs)("div", {
                                className: Tce.title,
                                children: [(0,
                                z.jsx)("div", {
                                    className: Tce.titlePrimary,
                                    children: (0,
                                    z.jsx)(_c.Progression.MILESTONE_UNLOCK_PANEL_TITLE_PRIMARY, {
                                        INDEX: (0,
                                        z.jsx)(Oc, {
                                            value: i.index,
                                            unit: vc.Integer
                                        })
                                    })
                                }), (0,
                                z.jsx)("div", {
                                    className: Tce.titleSecondary,
                                    children: (0,
                                    z.jsx)(_c.Progression.MILESTONE_UNLOCK_PANEL_TITLE_SECONDARY, {})
                                })]
                            }), (0,
                            z.jsxs)("div", {
                                className: Tce.header,
                                children: [(0,
                                z.jsx)("img", {
                                    src: i.image,
                                    className: Tce.cityscape
                                }), (0,
                                z.jsx)(_ce, {
                                    className: Tce.trophy
                                })]
                            }), (0,
                            z.jsx)("div", {
                                className: Tce.cityTitle,
                                children: (0,
                                z.jsx)(_c.Progression.MILESTONE_NAME, {
                                    index: i.index
                                })
                            }), (0,
                            z.jsx)("div", {
                                className: Tce.description,
                                children: (0,
                                z.jsx)(Cb, {
                                    children: (0,
                                    z.jsx)(_c.Progression.MILESTONE_DESCRIPTION, {
                                        index: i.index
                                    })
                                })
                            }), (0,
                            z.jsx)("div", {
                                className: Tce.rewardsLabel,
                                children: (0,
                                z.jsx)(_c.Progression.MILESTONE_REWARDS_LABEL, {})
                            }), (0,
                            z.jsxs)("div", {
                                className: Tce.rewards,
                                children: [i.reward > 0 && (0,
                                z.jsx)(Eg, {
                                    tooltip: (0,
                                    z.jsx)(_c.Progression.REWARD_FIELD_LABEL, {}),
                                    children: (0,
                                    z.jsx)(H9, {
                                        icon: "Media/Game/Icons/Money.svg",
                                        className: Tce.rewardField,
                                        children: (0,
                                        z.jsx)(Oc, {
                                            value: i.reward,
                                            unit: vc.Money
                                        })
                                    })
                                }), i.devTreePoints > 0 && (0,
                                z.jsx)(Eg, {
                                    tooltip: (0,
                                    z.jsx)(_c.Progression.DEVELOPMENT_POINTS_FIELD_LABEL, {}),
                                    children: (0,
                                    z.jsx)(H9, {
                                        icon: "Media/Game/Icons/DevPoint.svg",
                                        className: Tce.rewardField,
                                        children: (0,
                                        z.jsx)(Oc, {
                                            value: i.devTreePoints,
                                            unit: vc.Integer,
                                            signed: !0
                                        })
                                    })
                                }), i.mapTiles > 0 && (0,
                                z.jsx)(Eg, {
                                    tooltip: (0,
                                    z.jsx)(_c.Progression.MAP_TILES_FIELD_LABEL, {}),
                                    children: (0,
                                    z.jsx)(H9, {
                                        icon: "Media/Game/Icons/ExpansionPermit.svg",
                                        className: Tce.rewardField,
                                        children: (0,
                                        z.jsx)(Oc, {
                                            value: i.mapTiles,
                                            unit: vc.Integer,
                                            signed: !0
                                        })
                                    })
                                })]
                            }), (0,
                            z.jsxs)(fce, {
                                className: Tce.actions,
                                children: [!h && (0,
                                z.jsx)(Ah, {
                                    onFocusChange: o,
                                    children: (0,
                                    z.jsx)(U_, {
                                        disableHint: !0,
                                        theme: ZE,
                                        onSelect: s,
                                        selected: !m && 0 === c,
                                        shortcut: m || 0 !== c ? void 0 : "Confirm",
                                        children: (0,
                                        z.jsxs)("div", {
                                            className: Tce.buttonContainer,
                                            children: [(0,
                                            z.jsx)(UT, {
                                                action: "Select",
                                                active: a
                                            }), (0,
                                            z.jsx)("div", {
                                                className: Tce.buttonLabel,
                                                children: (0,
                                                z.jsx)(_c.Progression.PROGRESSION_PANEL_BUTTON, {})
                                            })]
                                        })
                                    })
                                }), (0,
                                z.jsx)(Ah, {
                                    onFocusChange: l,
                                    children: (0,
                                    z.jsx)(U_, {
                                        disableHint: !0,
                                        focusKey: Ece,
                                        theme: ZE,
                                        onSelect: n,
                                        selected: !m && 1 === c,
                                        shortcut: m || 1 !== c ? void 0 : "Confirm",
                                        children: (0,
                                        z.jsxs)("div", {
                                            className: Tce.buttonContainer,
                                            children: [(0,
                                            z.jsx)(UT, {
                                                action: "Select",
                                                active: r
                                            }), (0,
                                            z.jsx)("div", {
                                                className: Tce.buttonLabel,
                                                children: (0,
                                                z.jsx)(_c.Common.CLOSE, {})
                                            })]
                                        })
                                    })
                                })]
                            })]
                        })
                    })
                })
            })
        }
        ;
        X.add("game-ui/game/components/progression/milestone-unlock-event-panel/milestone-unlock-event-panel.tsx", {
            get MilestoneUnlockEventPanel() {
                return Ice
            },
            set MilestoneUnlockEventPanel(e) {
                Ice = e
            }
        });
        let Sce = {
            "signature-unlock-event-panel": "signature-unlock-event-panel_f8P",
            signatureUnlockEventPanel: "signature-unlock-event-panel_f8P",
            image: "image_Pwi",
            content: "content_vd9",
            title: "title_vLU",
            description: "description_cRG",
            stats: "stats_FqV",
            "stat-field": "stat-field_yOa",
            statField: "stat-field_yOa",
            actions: "actions_kVJ",
            "button-label": "button-label_MBu",
            buttonLabel: "button-label_MBu",
            "button-container": "button-container_qHR",
            buttonContainer: "button-container_qHR"
        };
        X.add("game-ui/game/components/progression/signature-unlock-event-panel/signature-unlock-event-panel.module.scss", {
            get classes() {
                return Sce
            },
            set classes(e) {
                Object.assign(Sce, e)
            }
        });
        const yce = Sce;
        var jce = ({focusKey: e, entities: t, onClose: n})=>{
            const [s,i] = (0,
            Y.useState)(0)
              , a = t.length > s ? t[s] : Zp
              , o = ll(xT, a) ?? _T
              , [r,l] = (0,
            Y.useState)(!1);
            (0,
            Y.useEffect)((()=>cp(lp.signatureBuildingEvent)), []),
            (0,
            Y.useEffect)((()=>{
                t.length <= s && (t.length > 0 ? i(0) : n())
            }
            ), [s, t.length, n]);
            const c = Dm()
              , u = (0,
            Y.useMemo)((()=>({
                Confirm: ()=>n()
            })), [n]);
            return (0,
            z.jsx)(Mg, {
                actions: u,
                disabled: c,
                children: (0,
                z.jsx)(rE, {
                    focusKey: e,
                    theme: uE,
                    header: (0,
                    z.jsx)(dE, {
                        icon: "Media/Game/Icons/ZoneSignature.svg",
                        children: (0,
                        z.jsx)(_c.Progression.BUILDING_UNLOCK_EVENT_PANEL_TITLE, {})
                    }),
                    className: yce.signatureUnlockEventPanel,
                    onClose: n,
                    children: (0,
                    z.jsxs)(np, {
                        children: [(0,
                        z.jsx)(Y_, {
                            src: o?.preview ?? "",
                            className: yce.image
                        }), (0,
                        z.jsxs)("div", {
                            className: yce.content,
                            children: [(0,
                            z.jsx)("div", {
                                className: yce.title,
                                children: (0,
                                z.jsx)(cc, {
                                    id: o.titleId
                                })
                            }), o.descriptionId && (0,
                            z.jsx)("div", {
                                className: yce.description,
                                children: (0,
                                z.jsx)(cc, {
                                    id: o.descriptionId
                                })
                            }), (0,
                            z.jsx)("div", {
                                className: yce.stats,
                                children: null != o.constructionCost && (0,
                                z.jsx)(H9, {
                                    label: (0,
                                    z.jsx)(_c.Properties.CONSTRUCTION_COST, {}),
                                    className: yce.statField,
                                    children: (0,
                                    z.jsx)(Oc, {
                                        value: $ee(o, "max"),
                                        unit: o.constructionCost.unit
                                    })
                                })
                            }), (0,
                            z.jsx)(fce, {
                                className: yce.actions,
                                children: (0,
                                z.jsx)(Ah, {
                                    onFocusChange: l,
                                    children: (0,
                                    z.jsx)(U_, {
                                        disableHint: !0,
                                        theme: ZE,
                                        onSelect: n,
                                        selected: !c,
                                        children: (0,
                                        z.jsxs)("div", {
                                            className: yce.buttonContainer,
                                            children: [(0,
                                            z.jsx)(UT, {
                                                action: "Select",
                                                active: r
                                            }), (0,
                                            z.jsx)("div", {
                                                className: yce.buttonLabel,
                                                children: (0,
                                                z.jsx)(_c.Common.OK, {})
                                            })]
                                        })
                                    })
                                })
                            })]
                        })]
                    })
                })
            })
        }
        ;
        X.add("game-ui/game/components/progression/signature-unlock-event-panel/signature-unlock-event-panel.tsx", {
            get SignatureUnlockEventPanel() {
                return jce
            },
            set SignatureUnlockEventPanel(e) {
                jce = e
            }
        });
        const Cce = function(e) {
            const [t,n] = (0,
            Y.useState)();
            return (0,
            Y.useEffect)((()=>{
                let t = 0;
                const s = ()=>{
                    e.current ? n(e.current.getBoundingClientRect()) : n(void 0),
                    t = window.requestAnimationFrame(s)
                }
                ;
                return setTimeout((()=>s()), 0),
                ()=>window.cancelAnimationFrame(t)
            }
            ), [e]),
            t
        };
        X.add("game-ui/common/hooks/use-bounding-client-rect.ts", {});
        let Nce = {
            scrollable: "scrollable_A57",
            value: "value_GiO",
            button: "button_kAx"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/developer-section/developer-section.module.scss", {
            get classes() {
                return Nce
            },
            set classes(e) {
                Object.assign(Nce, e)
            }
        });
        const wce = Nce;
        let Oce = {
            section: "section_Czw section_gUk",
            "title-bar": "title-bar_tE1 title-bar_wU9",
            titleBar: "title-bar_tE1 title-bar_wU9",
            expandable: "expandable_HXj",
            title: "title_dyN title_bwV",
            content: "content_YjM content_owQ"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/developer-section/section.module.scss", {
            get classes() {
                return Oce
            },
            set classes(e) {
                Object.assign(Oce, e)
            }
        });
        const Pce = Oce;
        var Lce = ({label: e, value: t, max: n})=>(0,
        z.jsx)(s3, {
            header: (0,
            z.jsx)(Cse, {
                children: e
            }),
            theme: Pce,
            className: wce.capacityInfo,
            children: (0,
            z.jsx)(yse, {
                progress: t,
                max: n,
                children: `${t}/${n}`
            })
        });
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/developer-section/capacity-info.tsx", {
            get CapacityInfo() {
                return Lce
            },
            set CapacityInfo(e) {
                Lce = e
            }
        });
        var Ace = ({label: e, value: t, target: n})=>{
            const s = (0,
            Y.useCallback)((()=>{
                null != n && Yw(n)
            }
            ), [n]);
            return (0,
            z.jsx)(s3, {
                className: wce.genericInfo,
                theme: Pce,
                header: (0,
                z.jsx)(Cse, {
                    children: e
                }),
                children: (0,
                z.jsx)(U_, {
                    className: Zu()(wce.button, null != n && wce.link),
                    disabled: null == n || 0 === n?.index,
                    onSelect: s,
                    children: t
                })
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/developer-section/generic-info.tsx", {
            get GenericInfo() {
                return Ace
            },
            set GenericInfo(e) {
                Ace = e
            }
        });
        var Mce = ({label: e, list: t})=>(0,
        z.jsx)(jse, {
            header: (0,
            z.jsx)(Cse, {
                children: e
            }),
            theme: Pce,
            className: wce.infoList,
            transition: null,
            children: (0,
            z.jsx)(np, {
                children: t.map(((e,t)=>(0,
                z.jsx)(Rce, {
                    item: e
                }, t)))
            })
        });
        const Rce = ({item: e})=>{
            const t = (0,
            Y.useCallback)((()=>{
                null != e.entity && Yw(e.entity)
            }
            ), [e.entity]);
            return (0,
            z.jsx)(U_, {
                className: Zu()(wce.button, null != e?.entity && wce.link),
                disabled: null == e?.entity || 0 === e?.entity.index,
                onSelect: t,
                children: e.text
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/developer-section/info-list.tsx", {
            get InfoList() {
                return Mce
            },
            set InfoList(e) {
                Mce = e
            }
        });
        var kce = ({focusKey: e, subsections: t})=>(0,
        z.jsx)(mb, {
            className: wce.scrollable,
            children: (0,
            z.jsx)(np, {
                focusKey: e,
                children: (0,
                z.jsx)(cD, {
                    components: Dce,
                    data: t
                })
            })
        })
          , Dce = {
            [Pw.GenericInfo]: Ace,
            [Pw.CapacityInfo]: Lce,
            [Pw.InfoList]: Mce
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/developer-section/developer-section.tsx", {
            get DeveloperSection() {
                return kce
            },
            set DeveloperSection(e) {
                kce = e
            },
            get developerSubsectionComponents() {
                return Dce
            },
            set developerSubsectionComponents(e) {
                Dce = e
            }
        });
        let Fce = {
            "developer-info-panel": "developer-info-panel_GEQ",
            developerInfoPanel: "developer-info-panel_GEQ"
        };
        X.add("game-ui/game/components/selected-info-panel/developer-info-panel.module.scss", {
            get classes() {
                return Fce
            },
            set classes(e) {
                Object.assign(Fce, e)
            }
        });
        const Uce = Fce;
        var Bce = ({onClose: e, developerInfoSection: t})=>{
            const n = sl(iP)
              , s = (0,
            Y.useRef)(null)
              , i = function(e) {
                const t = sl(Dw)
                  , n = Um()
                  , s = Hm();
                if (e && t && n)
                    return {
                        x: Math.trunc(Od(t.x * n.x + Gce * s, 0, n.x - e.width - 70)),
                        y: Math.trunc(Od((1 - t.y) * n.y + Gce * s, 90, n.y - e.height - 120))
                    };
                return
            }(Cce(s))
              , a = (0,
            Y.useCallback)((()=>{
                e()
            }
            ), [e]);
            return (0,
            z.jsx)(z.Fragment, {
                children: "Default Tool" === n.id && (0,
                z.jsx)(rE, {
                    ref: s,
                    className: Uce.developerInfoPanel,
                    style: Vce(i),
                    onClose: a,
                    header: (0,
                    z.jsx)(dE, {
                        children: (0,
                        z.jsx)(_c.SelectedInfoPanel.DEVELOPER_INFO_TITLE, {})
                    }),
                    children: (0,
                    z.jsx)(kce, {
                        ...t
                    })
                })
            })
        }
        ;
        const Gce = 10;
        function Vce(e) {
            return e ? {
                left: e.x + "px",
                top: e.y + "px"
            } : {
                visibility: "hidden"
            }
        }
        X.add("game-ui/game/components/selected-info-panel/developer-info-panel.tsx", {
            get DeveloperInfoPanel() {
                return Bce
            },
            set DeveloperInfoPanel(e) {
                Bce = e
            }
        });
        let Hce = {
            header: "header_SUX header_H_U header_Bpo child-opacity-transition_nkS",
            content: "content_KYp content_XD5 content_AD7 child-opacity-transition_nkS",
            footer: "footer_IlY footer_Pa9 footer_pD5 child-opacity-transition_nkS",
            title: "title_tEn title_SVH title_zQN"
        };
        X.add("game-ui/game/themes/selected-info-panel.module.scss", {
            get classes() {
                return Hce
            },
            set classes(e) {
                Object.assign(Hce, e)
            }
        });
        const Kce = Hce;
        let Wce = {
            enter: "enter_iKV enter_kO6",
            "enter-active": "enter-active_qll enter-active_lrI",
            enterActive: "enter-active_qll enter-active_lrI",
            exit: "exit_pg6 exit_Von",
            "exit-active": "exit-active_feg exit-active_jtN",
            exitActive: "exit-active_feg exit-active_jtN"
        };
        X.add("game-ui/game/transitions/asset-detail-panel.module.scss", {
            get classes() {
                return Wce
            },
            set classes(e) {
                Object.assign(Wce, e)
            }
        });
        const zce = Wce;
        var Yce = e=>{
            const t = sl(Aw)
              , n = ll(uA, t)
              , s = sl(mA)
              , [i,a] = (0,
            Y.useState)(!1);
            rg(vT.value?.upgradeGrid, i);
            const o = (0,
            Y.useCallback)((e=>gA(t, e)), [t])
              , r = (0,
            Y.useMemo)((()=>(0,
            z.jsx)(ete, {
                minRowCount: 1,
                items: n,
                selectedItem: s,
                onSelectItem: o,
                ...e
            })), [n, s, o, e]);
            return (0,
            z.jsx)(Ah, {
                onFocusChange: a,
                children: r
            })
        }
        ;
        X.add("game-ui/game/components/upgrades-menu/upgrade-grid/upgrade-grid.tsx", {
            get UpgradeGrid() {
                return Yce
            },
            set UpgradeGrid(e) {
                Yce = e
            }
        });
        let $ce = {
            "upgrade-panel": "upgrade-panel_yRG",
            upgradePanel: "upgrade-panel_yRG",
            "gamepad-active": "gamepad-active_dUD",
            gamepadActive: "gamepad-active_dUD",
            "detail-container": "detail-container_J4D",
            detailContainer: "detail-container_J4D",
            "detail-panel": "detail-panel_qkF",
            detailPanel: "detail-panel_qkF",
            "title-bar": "title-bar_L4S title-bar_I7O child-opacity-transition_nkS",
            titleBar: "title-bar_L4S title-bar_I7O child-opacity-transition_nkS",
            title: "title_vx4 title_qub",
            hints: "hints_IMR",
            back: "back_UcS",
            hint: "hint_WuS"
        };
        X.add("game-ui/game/components/upgrades-menu/upgrades-menu.module.scss", {
            get classes() {
                return $ce
            },
            set classes(e) {
                Object.assign($ce, e)
            }
        });
        const qce = $ce;
        var Xce = ({focusKey: e, showOpenHint: t, className: n, onClose: s})=>{
            mp(up);
            const i = Dm()
              , a = sl(Aw)
              , o = (0,
            Y.useRef)(a);
            (0,
            Y.useEffect)((()=>{
                a !== o.current && (i && pA(),
                o.current = a)
            }
            ), [i, a]);
            const [r,l] = (0,
            Y.useState)(Zp)
              , c = !Ur(r, Zp)
              , u = (0,
            Y.useMemo)((()=>({
                showDetails: e=>l(e),
                hideDetails: e=>l((t=>Ur(t, e) ? Zp : t))
            })), []);
            (0,
            Y.useEffect)((()=>{
                if (i && c) {
                    const e = ym.subscribe((e=>{
                        e && l(Zp)
                    }
                    ));
                    return ()=>e.dispose()
                }
            }
            ), [i, c]);
            const d = sl(wm).find((e=>"Upgrades Menu" === e.name))
              , m = sl(iP)
              , h = (0,
            Y.useCallback)((e=>e && i && gA(a, Zp)), [i, a])
              , g = (0,
            Y.useMemo)((()=>(0,
            z.jsx)(Yce, {})), []);
            return (0,
            z.jsx)(Ah, {
                children: (0,
                z.jsx)(Fg, {
                    onAction: s,
                    children: (0,
                    z.jsx)(Ep, {
                        disabled: "Default Tool" !== m.id && i,
                        children: (0,
                        z.jsx)(mh, {
                            styles: dee,
                            children: (0,
                            z.jsxs)(Sp, {
                                focusKey: e,
                                className: n,
                                onFocusChange: h,
                                children: [(0,
                                z.jsx)("div", {
                                    className: qce.hints,
                                    children: (0,
                                    z.jsx)(UT, {
                                        action: "Upgrades Menu",
                                        active: t && !!d?.items.length,
                                        className: qce.hint
                                    })
                                }), (0,
                                z.jsx)("div", {
                                    className: qce.detailContainer,
                                    children: (0,
                                    z.jsx)(ud, {
                                        children: c && (0,
                                        z.jsx)(mh, {
                                            styles: zce,
                                            children: (0,
                                            z.jsx)(Vee, {
                                                entity: r,
                                                className: qce.detailPanel,
                                                upgrade: !0
                                            })
                                        }, "details")
                                    })
                                }), (0,
                                z.jsx)(mee.Provider, {
                                    value: u,
                                    children: (0,
                                    z.jsx)(rE, {
                                        className: Zu()(qce.upgradePanel, i && qce.gamepadActive),
                                        header: (0,
                                        z.jsx)("div", {
                                            className: qce.titleBar,
                                            children: (0,
                                            z.jsx)("div", {
                                                className: qce.title,
                                                children: (0,
                                                z.jsx)(_c.UpgradesMenu.TITLE, {})
                                            })
                                        }),
                                        children: g
                                    })
                                })]
                            })
                        })
                    })
                })
            })
        }
        ;
        function Qce(e, t, n) {
            const s = ll(uA, t);
            return e && s && s.length > 0 && !n
        }
        X.add("game-ui/game/components/upgrades-menu/upgrades-menu.tsx", {
            get UpgradesMenu() {
                return Xce
            },
            set UpgradesMenu(e) {
                Xce = e
            },
            get useUpgradesMenuVisible() {
                return Qce
            },
            set useUpgradesMenuVisible(e) {
                Qce = e
            }
        });
        const Zce = "DistrictsSection";
        var Jce = $r(Zce, "selecting")
          , eue = el(Zce, "removeDistrict")
          , tue = Jr(Zce, "toggleSelectionTool")
          , nue = Jr(Zce, "toggleDistrictTool");
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/districts-section/districts-section-bindings.ts", {
            get selecting() {
                return selecting
            },
            set selecting(e) {
                selecting = e
            },
            get removeDistrict() {
                return eue
            },
            set removeDistrict(e) {
                eue = e
            },
            get toggleSelectionTool() {
                return tue
            },
            set toggleSelectionTool(e) {
                tue = e
            },
            get toggleDistrictTool() {
                return nue
            },
            set toggleDistrictTool(e) {
                nue = e
            }
        });
        const sue = 18
          , iue = 26;
        function aue(e, t, n, s, i, a) {
            const o = cue(s, i, n.position)
              , r = 12 * a
              , l = (vue / 2 + xue) * a
              , c = o.x + l
              , u = o.y + l;
            return (e - c) * (e - c) + (t - u) * (t - u) <= r * r
        }
        function oue(e, t, n, s, i, a, o, r, l, c) {
            const u = 12 * c
              , d = 2 * c
              , m = cue(s, i, t.position)
              , h = l ? 1.25 * u : r ? 1.125 * u : u
              , g = l ? 1.25 * d : r ? 1.125 * d : d
              , p = (vue / 2 + xue) * c
              , f = n > 0 ? Math.min(t.cargo / t.capacity, 1) : 0
              , x = Math.sqrt(f) * (h - g)
              , v = xN(a)
              , _ = xN(o);
            e.beginPath(),
            e.arc(m.x + p, m.y + p, h, 2 * Math.PI, 0, !1),
            e.closePath(),
            e.fillStyle = v,
            e.fill(),
            e.beginPath(),
            e.arc(m.x + p, m.y + p, x, 2 * Math.PI, 0, !1),
            e.closePath(),
            e.fillStyle = _,
            e.fill()
        }
        function rue(e, t, n, s, i, a, o, r) {
            const l = cue(a, o, n.position)
              , c = uue(r, s, i)
              , u = uue(r, s, i)
              , d = (vue / 2 + xue) * r;
            return function(e, t, n, s, i, a, o) {
                let r = e - n
                  , l = t - s;
                const c = (a * a + o * o) / 4;
                if (r * r + l * l > c)
                    return !1;
                const u = Math.sin(-i)
                  , d = Math.cos(-i);
                return r = r * d - l * u,
                l = r * u + l * d,
                r += n,
                l += s,
                r >= n - a / 2 && r <= n + a / 2 && l >= s - o / 2 && l <= s + a / 2
            }(e, t, l.x + d, l.y + d, l.z, c, u)
        }
        function lue(e, t, n, s, i, a, o, r, l) {
            const c = 2 * l
              , u = 3 * l
              , d = cue(n, s, t.position)
              , m = uue(l, r, o)
              , h = function(e, t, n) {
                return iue * e * (t ? 1.25 : n ? 1.125 : 1)
            }(l, r, o)
              , g = (vue / 2 + xue) * l
              , p = m / 2
              , f = h / 2
              , x = t.capacity > 0 ? t.cargo / t.capacity : 0
              , v = Math.ceil(6 * Math.min(x, 1))
              , _ = r ? 1.25 * c : o ? 1.125 * c : c
              , b = r ? 1.25 * u : o ? 1.125 * u : u
              , T = _ / 2 + b
              , E = _ + 2 * b
              , I = xN(i)
              , S = xN(a);
            e.save(),
            e.translate(d.x + g, d.y + g),
            e.rotate(d.z),
            e.fillStyle = I,
            e.fillRect(-p, -f, m, h),
            v > 0 && (e.beginPath(),
            e.moveTo(-T, -E),
            e.arc(-T, -E, b, 0, 2 * Math.PI),
            v > 1 && (e.moveTo(T, -E),
            e.arc(T, -E, b, 0, 2 * Math.PI)),
            v > 2 && (e.moveTo(-T, 0),
            e.arc(-T, 0, b, 0, 2 * Math.PI)),
            v > 3 && (e.moveTo(T, 0),
            e.arc(T, 0, b, 0, 2 * Math.PI)),
            v > 4 && (e.moveTo(-T, E),
            e.arc(-T, E, b, 0, 2 * Math.PI)),
            v > 5 && (e.moveTo(T, E),
            e.arc(T, E, b, 0, 2 * Math.PI)),
            e.fillStyle = S,
            e.fill()),
            e.restore()
        }
        function cue(e, t, n) {
            n = 1 - n;
            const s = e * Math.PI
              , i = t - 2 * e
              , a = 2 * s + 2 * i
              , o = s / a
              , r = i / a;
            if (n < o / 2) {
                const t = Math.PI * n / o;
                return {
                    x: e + e * Math.sin(t),
                    y: e - e * Math.cos(t),
                    z: t + Math.PI / 2
                }
            }
            if ((n -= o / 2) < r)
                return {
                    x: 2 * e,
                    y: e + n / r * i,
                    z: Math.PI
                };
            if ((n -= r) < o) {
                const t = Math.PI * (n / o + .5);
                return {
                    x: e + e * Math.sin(t),
                    y: e - e * Math.cos(t) + i,
                    z: t + Math.PI / 2
                }
            }
            if ((n -= o) < r)
                return {
                    x: 0,
                    y: e + i - n / r * i,
                    z: 0
                };
            n -= r;
            const l = Math.PI * (n / o + 1.5);
            return {
                x: e + e * Math.sin(l),
                y: e - e * Math.cos(l),
                z: l + Math.PI / 2
            }
        }
        function uue(e, t, n) {
            return sue * e * (t ? 1.25 : n ? 1.125 : 1)
        }
        function due(e, t, n, s, i, a) {
            a.broken ? function(e, t, n, s, i, a, o, r) {
                const l = s * Math.PI
                  , c = i - 2 * s
                  , u = 2 * l + 2 * c
                  , d = u / Math.max(2 * Math.floor(u / (2 * r)), 2) / u
                  , m = 2 * d;
                for (let r = a - a % m; r < o; r += m) {
                    mue(e, t, n, s, i, Math.max(r, a), Math.min(r + d, o))
                }
            }(e, t, n, s, i, a.start, a.end, 10) : mue(e, t, n, s, i, a.start, a.end)
        }
        function mue(e, t, n, s, i, a, o) {
            if (o <= a)
                return;
            const r = s * Math.PI
              , l = i - 2 * s
              , c = 2 * r + 2 * l
              , u = r / c
              , d = l / c
              , m = o - a;
            o = (a = (a + u / 2) % 1) + m;
            let h = !0;
            for (; !(!(o > 0) || (a < u && (hue(e, t, n - l / 2, Math.PI, s, a / u, o / u, h),
            h = !1),
            a -= u,
            (o -= u) < 0) || (o > 0 && a < d && (gue(e, t + s, n, -l, a / d, o / d, h),
            h = !1),
            a -= d,
            (o -= d) < 0) || (a < u && (hue(e, t, n + l / 2, 0, s, a / u, o / u, h),
            h = !1),
            a -= u,
            (o -= u) < 0)); )
                o > 0 && a < d && (gue(e, t - s, n, l, a / d, o / d, h),
                h = !1),
                a -= d,
                o -= d
        }
        function hue(e, t, n, s, i, a, o, r) {
            const l = Math.PI * Math.max(a, 0) + s
              , c = Math.max(Math.PI * Math.min(o, 1), a) + s;
            r && e.moveTo(t + i * Math.cos(l), n + i * Math.sin(l)),
            e.arc(t, n, i, l, c)
        }
        function gue(e, t, n, s, i, a, o) {
            if (o) {
                const a = -s * Od(i - .5, -.5, .5);
                e.moveTo(t, n + a)
            }
            const r = -s * Od(a - .5, -.5, .5);
            e.lineTo(t, n + r)
        }
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/route-sections/line-visualizer-section/canvas-items.ts", {
            get mouseOverStop() {
                return aue
            },
            set mouseOverStop(e) {
                aue = e
            },
            get drawStop() {
                return oue
            },
            set drawStop(e) {
                oue = e
            },
            get mouseOverVehicle() {
                return rue
            },
            set mouseOverVehicle(e) {
                rue = e
            },
            get drawVehicle() {
                return lue
            },
            set drawVehicle(e) {
                lue = e
            },
            get calculatePosition() {
                return cue
            },
            set calculatePosition(e) {
                cue = e
            }
        }),
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/route-sections/line-visualizer-section/canvas-segments.ts", {
            get segment() {
                return due
            },
            set segment(e) {
                due = e
            }
        });
        let pue = {
            hint: "hint_Vox",
            icon: "icon__qE",
            wrapper: "wrapper_dcw"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/route-sections/line-visualizer-section/lv-hint-theme.module.scss", {
            get classes() {
                return pue
            },
            set classes(e) {
                Object.assign(pue, e)
            }
        });
        const fue = pue;
        var xue = 20
          , vue = 8;
        const _ue = hN(255, 255, 255, .75)
          , bue = hN(255, 255, 255, 1)
          , Tue = 65
          , Eue = 140;
        var Iue = ({width: e, height: t, color: n, stops: s, vehicles: i, segments: a, stopCapacity: o, focused: r})=>{
            const l = Dm()
              , [c,u] = (0,
            Y.useState)(null)
              , [d,m] = (0,
            Y.useState)(null)
              , h = sl(Aw)
              , g = sl(oy)
              , p = (0,
            Y.useRef)(g)
              , f = (0,
            Y.useRef)(h)
              , x = (0,
            Y.useRef)(null)
              , v = Hm()
              , _ = e / 2
              , b = xue * v
              , T = vue * v
              , E = (e - T - 2 * b) / 2
              , I = t - 2 * b - T
              , S = c && ("Game.UI.InGame.LineVisualizerSection+LineVehicle" === c?.__Type ? i.find((e=>Ur(e.entity, c.entity)))?.position || 0 : c.position)
              , y = c ? cue(E, I, S || 0) : {
                x: 0,
                y: 0,
                z: 0
            }
              , j = (vue / 2 + xue) * v
              , C = (0,
            Y.useCallback)((e=>{
                const t = [...i, ...s];
                if (t.sort(((e,t)=>e.position - t.position)),
                0 === t.length)
                    return;
                const n = t.findIndex((e=>Ur(e.entity, c?.entity)));
                let a = 0;
                -1 === n ? a = e > 0 ? 0 : t.length - 1 : (a = (n - e) % t.length,
                a < 0 && (a += t.length)),
                u(t[a])
            }
            ), [c, s, i])
              , N = (0,
            Y.useMemo)((()=>({
                "Move Horizontal": e=>C(e),
                Select: c ? ()=>{
                    Ur(c.entity, h) || (Yw(c.entity),
                    f.current = c.entity,
                    ry(c.entity),
                    p.current = c.entity)
                }
                : null
            })), [C, c, h])
              , w = (0,
            Y.useCallback)((e=>{
                if (null == x.current)
                    return;
                const t = x.current.getBoundingClientRect()
                  , n = e.clientX - t.left
                  , a = e.clientY - t.top;
                for (let e = 0; e < s.length; e++) {
                    const t = s[e];
                    if (aue(n, a, t, E, I, v))
                        return void (Ur(t.entity, d?.entity) || (Yw(t.entity),
                        f.current = t.entity,
                        ry(t.entity),
                        p.current = t.entity))
                }
                for (let e = 0; e < i.length; e++) {
                    const t = i[e];
                    if (rue(n, a, t, !!d && d.entity === t.entity, !!c && c.entity === t.entity, E, I, v))
                        return void (Ur(t.entity, d?.entity) || (Yw(t.entity),
                        f.current = t.entity,
                        ry(t.entity),
                        p.current = t.entity))
                }
            }
            ), [c, I, E, v, d, s, i])
              , O = (0,
            Y.useCallback)((e=>{
                if (null == x.current)
                    return;
                const t = x.current.getBoundingClientRect()
                  , n = e.clientX - t.left
                  , a = e.clientY - t.top;
                for (let e = 0; e < s.length; e++) {
                    const t = s[e];
                    if (aue(n, a, t, E, I, v))
                        return void u((e=>(e?.entity.index !== t.entity.index && cp(lp.hoverItem),
                        t)))
                }
                for (let e = 0; e < i.length; e++) {
                    const t = i[e]
                      , s = !!d && d.entity === t.entity
                      , o = !!c && c.entity === t.entity;
                    if (rue(n, a, t, s, o, E, I, v))
                        return void u((e=>(e?.entity.index !== t.entity.index && cp(lp.hoverItem),
                        t)))
                }
                u(null)
            }
            ), [c, I, E, v, d, s, i])
              , P = (0,
            Y.useCallback)((()=>{
                u(null)
            }
            ), []);
            return (0,
            Y.useEffect)((()=>{
                r && u(function(e, t) {
                    const n = [...t, ...e];
                    return n.length > 0 ? n.sort(((e,t)=>e.position - t.position))[0] : null
                }(i, s))
            }
            ), [r]),
            (0,
            Y.useEffect)((()=>{
                const e = i.find((e=>Ur(e.entity, h))) || s.find((e=>Ur(e.entity, h)));
                m(void 0 !== e ? t=>(t?.entity.index !== e.entity.index && cp(lp.selectItem),
                e) : null)
            }
            ), [h, s, i]),
            (0,
            Y.useEffect)((()=>{
                if (!x.current)
                    return;
                const r = x.current.getContext("2d");
                if (r.clearRect(0, 0, e, t),
                r.save(),
                r.beginPath(),
                a && a.length > 0)
                    for (let n = 0; n < a.length; n++)
                        due(r, e / 2, t / 2, E, I, a[n]);
                if (r.lineWidth = T,
                r.strokeStyle = xN(Sue(null, d, c, n)),
                r.stroke(),
                s && s.length > 0)
                    for (let e = 0; e < s.length; e++) {
                        const t = s[e]
                          , i = Sue(t, d, c, bue)
                          , a = Sue(t, d, c, n);
                        oue(r, t, o, E, I, i, a, Ur(c?.entity, t.entity), Ur(h, t.entity), v)
                    }
                if (r.setTransform(1, 0, 0, 1, 0, 0),
                i && i.length > 0)
                    for (let e = 0; e < i.length; e++) {
                        const t = i[e]
                          , s = Sue(t, d, c, n)
                          , a = Sue(t, d, c, _ue);
                        lue(r, t, E, I, s, a, Ur(c?.entity, t.entity), Ur(h, t.entity), v)
                    }
            }
            ), [n, t, c, I, E, b, _, v, a, o, s, T, i, e, d, h]),
            (0,
            Y.useEffect)((()=>()=>{
                Ur(p.current, f.current) && ry(Zp)
            }
            ), []),
            (0,
            z.jsx)(Mg, {
                actions: N,
                children: (0,
                z.jsxs)(Sp, {
                    className: fue.wrapper,
                    children: [(0,
                    z.jsx)(UT, {
                        action: "Move Horizontal",
                        active: r,
                        theme: fue
                    }), (0,
                    z.jsx)(UT, {
                        action: "Select",
                        active: !!c && !Ur(d?.entity, c.entity) && r,
                        theme: {
                            icon: fue.icon
                        },
                        style: {
                            position: "absolute",
                            top: y ? y.y + j : void 0,
                            left: y ? y.x + j : void 0,
                            transform: "translateX(-50%)"
                        }
                    }), (!l || r) && (0,
                    z.jsx)(UU, {
                        position: l ? {
                            x: y.x + Tue,
                            y: y.y + Eue
                        } : void 0,
                        screenSpacePosition: !0,
                        forceVisible: !!c,
                        disabled: !c,
                        tooltip: c && (0,
                        z.jsxs)(z.Fragment, {
                            children: [(0,
                            z.jsx)(Ku, {
                                value: c.name
                            }), (0,
                            z.jsx)(WS, {
                                left: c.isCargo ? (0,
                                z.jsx)(_c.SelectedInfoPanel.CARGO_TOOLTIP, {}) : (0,
                                z.jsx)(_c.SelectedInfoPanel.PASSENGERS_TOOLTIP, {}),
                                right: c.__Type === Qw ? (0,
                                z.jsx)(Oc, {
                                    value: c.cargo,
                                    unit: c.isCargo ? vc.Weight : vc.Integer
                                }) : (0,
                                z.jsx)(uu, {
                                    value: c.cargo,
                                    total: c.capacity,
                                    unit: c.isCargo ? vc.Weight : vc.Integer
                                })
                            })]
                        })
                    }), (0,
                    z.jsx)("canvas", {
                        ref: x,
                        width: e,
                        height: t,
                        onClick: w,
                        onMouseMove: O,
                        onMouseLeave: P
                    })]
                })
            })
        }
        ;
        function Sue(e, t, n, s) {
            return null == t || Ur(e?.entity, t.entity) ? null == n || Ur(e?.entity, n.entity) ? s : yue(-.35, s) : null != n && Ur(e?.entity, n.entity) ? s : yue(-.5, s)
        }
        function yue(e, t) {
            const [n,s,i,a] = [t.r, t.g, t.b, t.a]
              , o = e < 0
              , r = o ? 0 : e
              , l = o ? 1 + e : 1 - e;
            return {
                r: n * l + r,
                g: s * l + r,
                b: i * l + r,
                a
            }
        }
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/route-sections/line-visualizer-section/line-visualizer-canvas.tsx", {
            get LINE_VISUALIZER_PADDING() {
                return xue
            },
            set LINE_VISUALIZER_PADDING(e) {
                xue = e
            },
            get LINE_VISUALIZER_TRACKWIDTH() {
                return vue
            },
            set LINE_VISUALIZER_TRACKWIDTH(e) {
                vue = e
            },
            get LineVisualizerCanvas() {
                return Iue
            },
            set LineVisualizerCanvas(e) {
                Iue = e
            }
        });
        let jue = {
            "line-visualizer-section": "line-visualizer-section_MKT",
            lineVisualizerSection: "line-visualizer-section_MKT",
            "gamepad-active": "gamepad-active_YL5",
            gamepadActive: "gamepad-active_YL5",
            "track-container": "track-container_c4L",
            trackContainer: "track-container_c4L"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/route-sections/line-visualizer-section/line-visualizer-section.module.scss", {
            get classes() {
                return jue
            },
            set classes(e) {
                Object.assign(jue, e)
            }
        });
        const Cue = jue;
        var Nue = ({focusKey: e, stops: t, className: n, ...s})=>{
            const i = Dm()
              , a = (0,
            Y.useRef)(null)
              , o = Hd(hm(a) ?? Ad);
            return (0,
            z.jsx)(rE, {
                focusKey: e,
                header: (0,
                z.jsx)(dE, {
                    children: t.find((e=>e.isCargo)) ? (0,
                    z.jsx)(_c.SelectedInfoPanel.ROUTE, {}) : (0,
                    z.jsx)(_c.SelectedInfoPanel.LINE, {})
                }),
                className: Zu()(Cue.lineVisualizerSection, i && Cue.gamepadActive, n),
                unfocusedHintAction: "Focus Line Panel",
                showCloseHint: "Back",
                children: (0,
                z.jsx)("div", {
                    ref: a,
                    className: Cue.trackContainer,
                    children: o.x > 0 && o.y > 0 && (0,
                    z.jsx)(Iue, {
                        width: o.x,
                        height: o.y,
                        stops: t,
                        ...s
                    })
                })
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/route-sections/line-visualizer-section/line-visualizer-section.tsx", {
            get LineVisualizerSection() {
                return Nue
            },
            set LineVisualizerSection(e) {
                Nue = e
            }
        });
        let wue = {
            "attractiveness-factors": "attractiveness-factors_CDA",
            attractivenessFactors: "attractiveness-factors_CDA",
            positive: "positive_KO_",
            negative: "negative_gWG"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/attractiveness-section/attractiveness-section.module.scss", {
            get classes() {
                return wue
            },
            set classes(e) {
                Object.assign(wue, e)
            }
        });
        const Oue = wue;
        var Pue = ({group: e, tooltipKeys: t, tooltipTags: n, attractiveness: s, baseAttractiveness: i, factors: a})=>{
            const o = tO(e, t, n);
            return (0,
            z.jsx)(yS, {
                tooltip: (0,
                z.jsxs)(z.Fragment, {
                    children: [o && (0,
                    z.jsx)(Cb, {
                        text: o
                    }), a.length > 0 && (0,
                    z.jsxs)(z.Fragment, {
                        children: [(0,
                        z.jsx)(jS, {}), (0,
                        z.jsxs)("div", {
                            className: Oue.attractivenessFactors,
                            children: [(0,
                            z.jsx)(WS, {
                                left: (0,
                                z.jsx)(_c.SelectedInfoPanel.ATTRACTIVENESS_BASE, {}),
                                right: (0,
                                z.jsx)(Oc, {
                                    value: i,
                                    unit: vc.Integer
                                })
                            }), a.map(((e,t)=>(0,
                            z.jsx)(WS, {
                                left: (0,
                                z.jsx)(_c.SelectedInfoPanel.ATTRACTIVENESS_FACTORS, {
                                    hash: e.localeKey
                                }),
                                right: (0,
                                z.jsx)("div", {
                                    className: $p(Oue, e.delta),
                                    children: (0,
                                    z.jsx)(Oc, {
                                        value: e.delta,
                                        unit: vc.Percentage,
                                        signed: !0
                                    })
                                })
                            }, t)))]
                        })]
                    })]
                }),
                children: (0,
                z.jsx)(KS, {
                    uppercase: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.ATTRACTIVENESS, {}),
                    right: (0,
                    z.jsx)(Oc, {
                        value: s,
                        unit: vc.Integer
                    })
                })
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/attractiveness-section/attractiveness-section.tsx", {
            get AttractivenessSection() {
                return Pue
            },
            set AttractivenessSection(e) {
                Pue = e
            }
        });
        let Lue = {
            "capacity-bar": "capacity-bar_uEN",
            capacityBar: "capacity-bar_uEN",
            "progress-bar": "progress-bar_AtB",
            progressBar: "progress-bar_AtB",
            excellent: "excellent_cFG",
            good: "good_f9U",
            medium: "medium_P2l",
            bad: "bad_BRS",
            critical: "critical_cqP",
            "progress-bounds": "progress-bounds_D6g",
            progressBounds: "progress-bounds_D6g",
            progress: "progress_EvF",
            label: "label_y0j",
            "progress-label": "progress-label_DqS",
            progressLabel: "progress-label_DqS"
        };
        X.add("game-ui/game/components/selected-info-panel/shared-components/capacity-bar/capacity-bar.module.scss", {
            get classes() {
                return Lue
            },
            set classes(e) {
                Object.assign(Lue, e)
            }
        });
        const Aue = Lue;
        var Mue = ({progress: e, max: t, plain: n=!1, invertColorCodes: s=!1, children: i, className: a})=>{
            const o = t > 0 ? 100 * Od(e / t, 0, 1) : 0
              , r = sl(Aw);
            return (0,
            z.jsx)("div", {
                className: Zu()(Aue.capacityBar, a),
                children: (0,
                z.jsx)(yse, {
                    progress: e,
                    max: t,
                    theme: Aue,
                    className: Zu()(!n && Rue(o, s)),
                    children: i
                }, Dr(r))
            })
        }
        ;
        function Rue(e, t) {
            return e > 90 ? t ? Aue.excellent : Aue.critical : e > 80 ? t ? Aue.good : Aue.bad : e > 50 ? Aue.medium : e > 20 ? t ? Aue.bad : Aue.good : t ? Aue.critical : Aue.excellent
        }
        X.add("game-ui/game/components/selected-info-panel/shared-components/capacity-bar/capacity-bar.tsx", {
            get CapacityBar() {
                return Mue
            },
            set CapacityBar(e) {
                Mue = e
            }
        });
        var kue = ({group: e, tooltipKeys: t, tooltipTags: n, batteryCharge: s, batteryCapacity: i, flow: a, remainingTime: o})=>{
            const r = tO(e, t, n)
              , l = function(e) {
                return e < 0 ? (0,
                z.jsx)(_c.SelectedInfoPanel.BATTERY_STATE_DISCHARGING, {}) : e > 0 ? (0,
                z.jsx)(_c.SelectedInfoPanel.BATTERY_STATE_CHARGING, {}) : (0,
                z.jsx)(_c.SelectedInfoPanel.BATTERY_STATE_IDLE, {})
            }(a)
              , c = function(e, t) {
                const n = sl(GO);
                return e < 0 ? (0,
                z.jsx)(_c.SelectedInfoPanel.EMPTY_IN, {
                    DURATION: (0,
                    z.jsx)(Uu, {
                        value: t,
                        daysPerYear: n.daysPerYear
                    })
                }) : e > 0 ? (0,
                z.jsx)(_c.SelectedInfoPanel.FULL_IN, {
                    DURATION: (0,
                    z.jsx)(Uu, {
                        value: t,
                        daysPerYear: n.daysPerYear
                    })
                }) : ""
            }(a, o);
            return (0,
            z.jsxs)(yS, {
                tooltip: r && (0,
                z.jsx)(Cb, {
                    text: r
                }),
                children: [(0,
                z.jsx)(KS, {
                    uppercase: !0,
                    disableFocus: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.ELECTRICITY_BATTERY_STATE, {}),
                    right: l
                }), (0,
                z.jsx)(KS, {
                    subRow: !0,
                    disableFocus: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.ELECTRICITY_BATTERY_FLOW, {}),
                    right: (0,
                    z.jsx)(Oc, {
                        signed: !0,
                        value: a,
                        unit: vc.Power
                    })
                }), (0,
                z.jsx)(KS, {
                    subRow: !0,
                    disableFocus: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.ELECTRICITY_BATTERY_CHARGE, {}),
                    right: c
                }), (0,
                z.jsx)(Mue, {
                    progress: s,
                    max: i,
                    invertColorCodes: !0,
                    children: (0,
                    z.jsx)(uu, {
                        value: s,
                        total: i,
                        unit: vc.Energy
                    })
                })]
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/battery-section.tsx", {
            get BatterySection() {
                return kue
            },
            set BatterySection(e) {
                kue = e
            }
        });
        var Due = ({group: e, tooltipTags: t, tooltipKeys: n, comfort: s})=>{
            const i = tO(e, n, t);
            return (0,
            z.jsx)(yS, {
                tooltip: i && (0,
                z.jsx)(Cb, {
                    text: i
                }),
                children: (0,
                z.jsx)(KS, {
                    uppercase: !0,
                    left: (0,
                    z.jsx)(_c.Properties.COMFORT, {}),
                    right: (0,
                    z.jsx)(Oc, {
                        value: s,
                        unit: vc.Integer
                    })
                })
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/comfort-section.tsx", {
            get ComfortSection() {
                return Due
            },
            set ComfortSection(e) {
                Due = e
            }
        });
        let Fue = {
            icon: "icon_BF2",
            concatenator: "concatenator_bTa"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/company-section/company-section.module.scss", {
            get classes() {
                return Fue
            },
            set classes(e) {
                Object.assign(Fue, e)
            }
        });
        const Uue = Fue;
        var Bue = ({group: e, tooltipKeys: t, tooltipTags: n, companyName: s, isRentable: i, input1: a, input2: o, output: r, sells: l, stores: c, customers: u})=>{
            const d = tO(e, t, n);
            return (0,
            z.jsxs)(yS, {
                tooltip: d && (0,
                z.jsx)(Cb, {
                    text: d
                }),
                children: [(0,
                z.jsx)(KS, {
                    disableFocus: !0,
                    uppercase: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.COMPANY, {}),
                    right: s ? (0,
                    z.jsx)(Ku, {
                        value: s
                    }) : (0,
                    z.jsx)(_c.Common.NONE, {})
                }), i && (0,
                z.jsx)(KS, {
                    disableFocus: !0,
                    subRow: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.BUILDING_FOR_RENT, {})
                }), (a || o) && (0,
                z.jsx)(KS, {
                    disableFocus: !0,
                    subRow: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.COMPANY_REQUIRES, {}),
                    right: (0,
                    z.jsxs)(z.Fragment, {
                        children: [a && (0,
                        z.jsx)("img", {
                            src: `Media/Game/Resources/${a}.svg`,
                            className: Uue.icon
                        }), a && (0,
                        z.jsx)(_c.Resources.TITLE, {
                            hash: a
                        }), o && (0,
                        z.jsx)("div", {
                            className: Uue.concatenator,
                            children: "+"
                        }), o && (0,
                        z.jsx)("img", {
                            src: `Media/Game/Resources/${o}.svg`,
                            className: Uue.icon
                        }), o && (0,
                        z.jsx)(_c.Resources.TITLE, {
                            hash: o
                        })]
                    })
                }), r && (0,
                z.jsx)(KS, {
                    disableFocus: !0,
                    subRow: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.COMPANY_PRODUCES, {}),
                    right: (0,
                    z.jsxs)(z.Fragment, {
                        children: [(0,
                        z.jsx)("img", {
                            src: `Media/Game/Resources/${r}.svg`,
                            className: Uue.icon
                        }), (0,
                        z.jsx)(_c.Resources.TITLE, {
                            hash: r
                        })]
                    })
                }), l && (0,
                z.jsx)(KS, {
                    disableFocus: !0,
                    subRow: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.COMPANY_SELLS, {}),
                    right: (0,
                    z.jsxs)(z.Fragment, {
                        children: [(0,
                        z.jsx)("img", {
                            src: `Media/Game/Resources/${l}.svg`,
                            className: Uue.icon
                        }), (0,
                        z.jsx)(_c.Resources.TITLE, {
                            hash: l
                        })]
                    })
                }), c && (0,
                z.jsx)(KS, {
                    disableFocus: !0,
                    subRow: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.COMPANY_STORES, {}),
                    right: (0,
                    z.jsxs)(z.Fragment, {
                        children: [(0,
                        z.jsx)("img", {
                            src: `Media/Game/Resources/${c}.svg`,
                            className: Uue.icon
                        }), (0,
                        z.jsx)(_c.Resources.TITLE, {
                            hash: c
                        })]
                    })
                }), u && (0,
                z.jsx)(KS, {
                    disableFocus: !0,
                    subRow: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.COMPANY_ROOMS, {}),
                    right: (0,
                    z.jsx)(uu, {
                        value: u.x,
                        total: u.y
                    })
                })]
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/company-section/company-section.tsx", {
            get CompanySection() {
                return Bue
            },
            set CompanySection(e) {
                Bue = e
            }
        });
        var Gue = ({group: e, tooltipKeys: t, tooltipTags: n, bodyCount: s, bodyCapacity: i, processingSpeed: a, processingCapacity: o})=>{
            const r = tO(e, t, n);
            return (0,
            z.jsxs)(yS, {
                tooltip: r && (0,
                z.jsx)(Cb, {
                    text: r
                }),
                children: [(0,
                z.jsx)(KS, {
                    uppercase: !0,
                    left: "Cemetery" === e ? (0,
                    z.jsx)(_c.SelectedInfoPanel.GRAVES_IN_USE, {}) : (0,
                    z.jsx)(_c.SelectedInfoPanel.DEATHCARE_BODIES, {})
                }), (0,
                z.jsx)(Mue, {
                    progress: s,
                    max: i,
                    children: (0,
                    z.jsx)(uu, {
                        value: s,
                        total: i
                    })
                }), o > 0 ? (0,
                z.jsxs)(z.Fragment, {
                    children: [(0,
                    z.jsx)(Bge, {
                        small: !0
                    }), (0,
                    z.jsx)(KS, {
                        uppercase: !0,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.DEATHCARE_PROCESSING_SPEED, {})
                    }), (0,
                    z.jsx)(Mue, {
                        invertColorCodes: !0,
                        progress: a,
                        max: o,
                        children: (0,
                        z.jsx)(uu, {
                            value: a,
                            total: o,
                            unit: vc.BodiesPerMonth
                        })
                    })]
                }) : void 0]
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/deathcare-section.tsx", {
            get DeathcareSection() {
                return Gue
            },
            set DeathcareSection(e) {
                Gue = e
            }
        });
        let Vue = {
            "description-row": "description-row_Xb1 info-row_QQ9 item-focused_FuT",
            descriptionRow: "description-row_Xb1 info-row_QQ9 item-focused_FuT"
        };
        X.add("game-ui/game/components/selected-info-panel/shared-components/description-row/description-row.module.scss", {
            get classes() {
                return Vue
            },
            set classes(e) {
                Object.assign(Vue, e)
            }
        });
        const Hue = Vue;
        var Kue = ({children: e})=>(0,
        z.jsx)("div", {
            className: Hue.descriptionRow,
            children: e
        });
        X.add("game-ui/game/components/selected-info-panel/shared-components/description-row/description-row.tsx", {
            get DescriptionRow() {
                return Kue
            },
            set DescriptionRow(e) {
                Kue = e
            }
        });
        let Wue = {
            button: "button_ibf button_YEx item-states_QjV toggle-states_oKG",
            icon: "icon__uJ icon_vbQ",
            label: "label_KgQ"
        };
        X.add("game-ui/game/components/selected-info-panel/shared-components/primary-button/section-primary-button.module.scss", {
            get classes() {
                return Wue
            },
            set classes(e) {
                Object.assign(Wue, e)
            }
        });
        const zue = Wue;
        let Yue = {
            "info-button": "info-button_n9m",
            infoButton: "info-button_n9m",
            button: "button_hTp",
            label: "label_MAK",
            container: "container_Et5",
            hint: "hint_bps"
        };
        X.add("game-ui/game/components/selected-info-panel/shared-components/info-button/info-button.module.scss", {
            get classes() {
                return Yue
            },
            set classes(e) {
                Object.assign(Yue, e)
            }
        });
        const $ue = Yue;
        var que = ({label: e, icon: t, selected: n, onSelect: s})=>{
            const [i,a] = (0,
            Y.useState)(!1);
            return (0,
            z.jsx)("div", {
                className: $ue.infoButton,
                children: (0,
                z.jsx)(Ah, {
                    onFocusChange: a,
                    children: t ? (0,
                    z.jsx)(U_, {
                        disableHint: !0,
                        selected: n,
                        onSelect: s,
                        onClick: Db,
                        className: $ue.button,
                        theme: zue,
                        children: (0,
                        z.jsxs)("div", {
                            className: $ue.container,
                            children: [(0,
                            z.jsx)(UT, {
                                action: "Select",
                                active: i,
                                className: $ue.hint
                            }), (0,
                            z.jsxs)("div", {
                                className: $ue.label,
                                children: [(0,
                                z.jsx)("img", {
                                    src: t,
                                    className: zue.icon,
                                    onError: q_
                                }), e]
                            })]
                        })
                    }) : (0,
                    z.jsx)(U_, {
                        disableHint: !0,
                        selected: n,
                        onSelect: s,
                        onClick: Db,
                        className: $ue.button,
                        theme: zue,
                        children: (0,
                        z.jsxs)("div", {
                            className: $ue.container,
                            children: [(0,
                            z.jsx)(UT, {
                                action: "Select",
                                active: i,
                                className: $ue.hint
                            }), (0,
                            z.jsx)("div", {
                                className: $ue.label,
                                children: e
                            })]
                        })
                    })
                })
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/shared-components/info-button/info-button.tsx", {
            get InfoButton() {
                return que
            },
            set InfoButton(e) {
                que = e
            }
        });
        var Xue = $r("DestroyedBuildingSection", "rebuilding");
        function Que() {
            tl("DestroyedBuildingSection", "toggleRebuild")
        }
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/destroyed-building-section/destroyed-building-section-bindings.ts", {
            get rebuilding() {
                return rebuilding
            },
            set rebuilding(e) {
                rebuilding = e
            },
            get toggleRebuild() {
                return Que
            },
            set toggleRebuild(e) {
                Que = e
            }
        });
        var Zue = ({group: e, tooltipKeys: t, tooltipTags: n, destroyer: s, cleared: i, progress: a, status: o})=>{
            const r = tO(e, t, n)
              , l = sl(Xue)
              , c = (0,
            Y.useCallback)((()=>Que()), []);
            return (0,
            z.jsxs)(yS, {
                disableFocus: i,
                tooltip: r && (0,
                z.jsx)(Cb, {
                    text: r
                }),
                children: [(0,
                z.jsx)(KS, {
                    uppercase: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.DESTROYED, {})
                }), null != s && (0,
                z.jsx)(Kue, {
                    children: (0,
                    z.jsx)(Cb, {
                        children: (0,
                        z.jsx)(_c.SelectedInfoPanel.DESTROYED_DESCRIPTION, {
                            hash: s
                        })
                    })
                }), "None" !== o && "Rebuild" !== o && (0,
                z.jsx)(KS, {
                    disableFocus: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.DESTROYED_STATUS, {
                        hash: o
                    })
                }), !i && "Searching" === o && (0,
                z.jsx)(Mue, {
                    plain: !0,
                    progress: a,
                    max: 100,
                    children: (0,
                    z.jsx)(Oc, {
                        value: a,
                        unit: vc.Percentage
                    })
                }), i && (0,
                z.jsx)(que, {
                    label: (0,
                    z.jsx)(_c.SelectedInfoPanel.REBUILD, {}),
                    selected: l,
                    onSelect: c
                })]
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/destroyed-building-section/destroyed-building-section.tsx", {
            get DestroyedBuildingSection() {
                return Zue
            },
            set DestroyedBuildingSection(e) {
                Zue = e
            }
        });
        let Jue = {
            "info-link": "info-link_Mpc item-focused_FuT",
            infoLink: "info-link_Mpc item-focused_FuT",
            row: "row_Q8R",
            ellipsis: "ellipsis_C0N",
            smallText: "smallText_DnB",
            uppercase: "uppercase_qZ8",
            icon: "icon_hE2",
            hint: "hint_IBf"
        };
        X.add("game-ui/game/components/selected-info-panel/shared-components/info-link/info-link.module.scss", {
            get classes() {
                return Jue
            },
            set classes(e) {
                Object.assign(Jue, e)
            }
        });
        const ede = Jue;
        var tde = ({icon: e, tooltip: t, uppercase: n=!1, onSelect: s, children: i})=>{
            const [a,o] = (0,
            Y.useState)(!1);
            return (0,
            z.jsx)(Eg, {
                tooltip: t,
                children: (0,
                z.jsx)(Ah, {
                    onFocusChange: o,
                    children: (0,
                    z.jsxs)(U_, {
                        disableHint: !0,
                        onSelect: s,
                        onClick: Db,
                        className: Zu()(ede.row, ede.infoLink, n && ede.uppercase),
                        children: [(0,
                        z.jsx)("img", {
                            src: "Media/Glyphs/ViewInfo.svg",
                            className: ede.icon
                        }), e && (0,
                        z.jsx)("img", {
                            src: e,
                            className: ede.icon
                        }), (0,
                        z.jsx)("div", {
                            className: ede.ellipsis,
                            children: i
                        }), (0,
                        z.jsx)(UT, {
                            action: "Select",
                            active: a,
                            className: ede.hint
                        })]
                    })
                })
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/shared-components/info-link/info-link.tsx", {
            get InfoLink() {
                return tde
            },
            set InfoLink(e) {
                tde = e
            }
        });
        let nde = {
            "districts-section": "districts-section_UaO",
            districtsSection: "districts-section_UaO",
            details: "details_abN",
            detail: "detail_DhZ",
            "delete-button": "delete-button_UKV",
            deleteButton: "delete-button_UKV"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/districts-section/districts-section.module.scss", {
            get classes() {
                return nde
            },
            set classes(e) {
                Object.assign(nde, e)
            }
        });
        const sde = nde;
        var ide = ({group: e, tooltipKeys: t, tooltipTags: n, districtMissing: s, districts: i})=>{
            const a = tO(e, t, n)
              , o = sl(Jce);
            return (0,
            z.jsxs)(yS, {
                disableFocus: !0,
                tooltip: a && (0,
                z.jsx)(Cb, {
                    text: a
                }),
                className: sde.districtsSection,
                children: [(0,
                z.jsx)(KS, {
                    uppercase: !0,
                    disableFocus: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.OPERATING_DISTRICTS, {})
                }), (0,
                z.jsx)(np, {
                    children: i.length > 0 && (0,
                    z.jsx)("div", {
                        className: sde.details,
                        children: i.map(((e,t)=>(0,
                        z.jsx)(ade, {
                            district: e
                        }, t)))
                    })
                }), s ? (0,
                z.jsx)(que, {
                    label: (0,
                    z.jsx)(_c.SelectedInfoPanel.CREATE_DISTRICT, {}),
                    icon: "Media/Game/Icons/Districts.svg",
                    selected: o,
                    onSelect: nue
                }) : (0,
                z.jsx)(que, {
                    label: (0,
                    z.jsx)(_c.SelectedInfoPanel.SELECT_OPERATING_DISTRICT, {}),
                    icon: "Media/Game/Icons/Districts.svg",
                    selected: o,
                    onSelect: tue
                })]
            })
        }
        ;
        const ade = ({district: e})=>{
            const t = (0,
            Y.useCallback)((()=>Yw(e.entity)), [e])
              , n = (0,
            Y.useCallback)((()=>eue(e.entity)), [e])
              , s = (0,
            Y.useMemo)((()=>({
                Select: ()=>{
                    cp(lp.selectItem),
                    t()
                }
                ,
                "Remove Operating District": ()=>{
                    cp(lp.removeItem),
                    n()
                }
            })), [n, t])
              , i = Dm();
            return (0,
            z.jsx)(Mg, {
                actions: s,
                children: (0,
                z.jsx)(KS, {
                    subRow: !0,
                    left: (0,
                    z.jsx)(Ku, {
                        value: e.name
                    }),
                    link: (0,
                    z.jsx)(tde, {
                        onSelect: t,
                        children: (0,
                        z.jsx)(_c.SelectedInfoPanel.DETAILS, {})
                    }),
                    right: !i && (0,
                    z.jsx)(Eg, {
                        tooltip: (0,
                        z.jsx)(_c.SelectedInfoPanel.REMOVE_OPERATING_DISTRICT, {}),
                        children: (0,
                        z.jsx)(tb, {
                            tinted: !0,
                            focusKey: Sg,
                            onClick: Db,
                            onSelect: n,
                            src: "Media/Glyphs/Trash.svg",
                            className: sde.deleteButton
                        })
                    })
                })
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/districts-section/districts-section.tsx", {
            get DistrictsSection() {
                return ide
            },
            set DistrictsSection(e) {
                ide = e
            }
        });
        var ode = ({group: e, tooltipKeys: t, tooltipTags: n, studentCount: s, studentCapacity: i, graduationTime: a, failProbability: o})=>{
            const r = sl(GO)
              , l = tO(e, t, n);
            return (0,
            z.jsxs)(yS, {
                tooltip: l && (0,
                z.jsx)(Cb, {
                    text: l
                }),
                children: [(0,
                z.jsx)(KS, {
                    uppercase: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.EDUCATION_STUDENTS, {})
                }), (0,
                z.jsx)(Mue, {
                    progress: s,
                    max: i,
                    children: (0,
                    z.jsx)(uu, {
                        value: s,
                        total: i,
                        unit: vc.Integer
                    })
                }), (0,
                z.jsx)(KS, {
                    disableFocus: !0,
                    uppercase: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.EDUCATION_GRADUATION_TIME, {}),
                    right: o < 1 ? (0,
                    z.jsx)(Uu, {
                        value: a * r.daysPerYear,
                        daysPerYear: r.daysPerYear,
                        maxMonths: 3 * r.daysPerYear
                    }) : (0,
                    z.jsx)(_c.SelectedInfoPanel.EDUCATION_NO_GRADUATIONS, {})
                }), (0,
                z.jsx)(KS, {
                    disableFocus: !0,
                    uppercase: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.EDUCATION_DROPOUT_RATE, {}),
                    right: (0,
                    z.jsx)($u, {
                        value: o,
                        max: 1
                    })
                })]
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/education-section.tsx", {
            get EducationSection() {
                return ode
            },
            set EducationSection(e) {
                ode = e
            }
        });
        let rde = {
            "efficiency-factors": "efficiency-factors_QAK",
            efficiencyFactors: "efficiency-factors_QAK",
            "factor-item": "factor-item_vlO",
            factorItem: "factor-item_vlO",
            name: "name_enb",
            value: "value_A66",
            result: "result_QHn"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/efficiency-section/efficiency-section.module.scss", {
            get classes() {
                return rde
            },
            set classes(e) {
                Object.assign(rde, e)
            }
        });
        const lde = rde;
        var cde = ({group: e, tooltipKeys: t, tooltipTags: n, efficiency: s, factors: i})=>{
            const a = tO(e, t, n);
            return (0,
            z.jsx)(yS, {
                tooltip: (0,
                z.jsxs)(z.Fragment, {
                    children: [i.length > 0 && (0,
                    z.jsxs)(z.Fragment, {
                        children: [(0,
                        z.jsx)(ude, {
                            factors: i
                        }), (0,
                        z.jsx)(jS, {})]
                    }), a && (0,
                    z.jsx)(Cb, {
                        text: a
                    })]
                }),
                children: (0,
                z.jsx)(KS, {
                    uppercase: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.EFFICIENCY, {}),
                    right: (0,
                    z.jsx)(Oc, {
                        value: s,
                        unit: vc.PercentageSingleFraction
                    })
                })
            })
        }
        ;
        const ude = ({factors: e})=>(0,
        z.jsx)("div", {
            className: lde.efficiencyFactors,
            children: e.map(((e,t)=>(0,
            z.jsxs)("div", {
                className: lde.factorItem,
                children: [(0,
                z.jsx)("div", {
                    className: lde.name,
                    children: (0,
                    z.jsx)(_c.SelectedInfoPanel.EFFICIENCY_FACTORS, {
                        hash: e.factor
                    })
                }), (0,
                z.jsx)("div", {
                    className: Zu()(lde.value, $p(x6, e.value)),
                    children: (0,
                    z.jsx)(Oc, {
                        value: e.value,
                        unit: vc.Percentage,
                        signed: !0
                    })
                }), (0,
                z.jsx)("div", {
                    className: lde.result,
                    children: (0,
                    z.jsx)(Oc, {
                        value: e.result,
                        unit: vc.Percentage
                    })
                })]
            }, t)))
        });
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/efficiency-section/efficiency-section.tsx", {
            get EfficiencySection() {
                return cde
            },
            set EfficiencySection(e) {
                cde = e
            }
        });
        var dde = ({group: e, tooltipKeys: t, tooltipTags: n, capacity: s, production: i})=>{
            const a = tO(e, t, n)
              , o = i > 0 && s > 0 ? Od(100 * i / s, 1, 100) : 0;
            return (0,
            z.jsxs)(yS, {
                tooltip: a && (0,
                z.jsx)(Cb, {
                    text: a
                }),
                children: [(0,
                z.jsx)(KS, {
                    disableFocus: !0,
                    uppercase: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.ELECTRICITY_POWER_PRODUCTION, {}),
                    right: (0,
                    z.jsx)(Oc, {
                        value: s,
                        unit: vc.Power
                    })
                }), (0,
                z.jsx)(KS, {
                    disableFocus: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.ELECTRICITY_POWER_USAGE, {}),
                    right: (0,
                    z.jsx)(Oc, {
                        value: o,
                        unit: vc.Percentage
                    })
                })]
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/electricity-section.tsx", {
            get ElectricitySection() {
                return dde
            },
            set ElectricitySection(e) {
                dde = e
            }
        });
        var mde = ({group: e, tooltipTags: t, tooltipKeys: n, employeeCount: s, maxEmployees: i, educationDataEmployees: a, educationDataWorkplaces: o})=>{
            const r = tO(e, n, t);
            return (0,
            z.jsx)(yS, {
                tooltip: (0,
                z.jsxs)(z.Fragment, {
                    children: [(0,
                    z.jsx)(i6, {
                        colors: w8,
                        labels: O8,
                        data: a,
                        customLegend: a.values.map(((e,t)=>(o.values[t] > 0 || t === a.values.length - 1) && (0,
                        z.jsx)(xQ, {
                            color: w8[t],
                            label: O8[t],
                            children: t < a.values.length - 1 ? (0,
                            z.jsx)(uu, {
                                value: e,
                                total: o.values[t],
                                unit: vc.Integer
                            }) : (0,
                            z.jsx)(Oc, {
                                value: e,
                                unit: vc.Integer
                            })
                        }, t)))
                    }), (0,
                    z.jsx)(Bge, {}), r && (0,
                    z.jsx)(Cb, {
                        text: r
                    })]
                }),
                children: (0,
                z.jsx)(KS, {
                    uppercase: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.EMPLOYEES, {}),
                    right: (0,
                    z.jsx)(uu, {
                        value: s,
                        total: i,
                        unit: vc.Integer
                    })
                })
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/employees-section.tsx", {
            get EmployeesSection() {
                return mde
            },
            set EmployeesSection(e) {
                mde = e
            }
        });
        var hde = ({group: e, tooltipKeys: t, tooltipTags: n, vehicleEfficiency: s})=>{
            const i = tO(e, t, n);
            return (0,
            z.jsx)(yS, {
                tooltip: i && (0,
                z.jsx)(Cb, {
                    text: i
                }),
                children: (0,
                z.jsx)(KS, {
                    uppercase: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.EFFICIENCY, {}),
                    right: s
                })
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/fire-section.tsx", {
            get FireSection() {
                return hde
            },
            set FireSection(e) {
                hde = e
            }
        });
        var gde = ({group: e, tooltipTags: t, tooltipKeys: n, garbage: s, garbageCapacity: i, processingSpeed: a, processingCapacity: o, loadKey: r})=>{
            const l = tO(e, n, t);
            return (0,
            z.jsxs)(yS, {
                tooltip: l && (0,
                z.jsx)(Cb, {
                    text: l
                }),
                children: [i > 0 ? (0,
                z.jsxs)(z.Fragment, {
                    children: [(0,
                    z.jsx)(KS, {
                        disableFocus: !0,
                        uppercase: !0,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.GARBAGE_MANAGEMENT_STORAGE_LABEL, {
                            hash: r
                        })
                    }), (0,
                    z.jsx)(Mue, {
                        progress: s,
                        max: i,
                        children: (0,
                        z.jsx)(uu, {
                            value: s,
                            total: i,
                            unit: vc.Weight
                        })
                    })]
                }) : void 0, o > 0 ? (0,
                z.jsxs)(z.Fragment, {
                    children: [(0,
                    z.jsx)(Bge, {
                        small: !0
                    }), (0,
                    z.jsx)(KS, {
                        disableFocus: !0,
                        uppercase: !0,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.GARBAGE_MANAGEMENT_PROCESSING_SPEED, {})
                    }), (0,
                    z.jsx)(Mue, {
                        invertColorCodes: !0,
                        progress: a,
                        max: o,
                        children: (0,
                        z.jsx)(uu, {
                            value: a,
                            total: o,
                            unit: vc.WeightPerMonth
                        })
                    })]
                }) : void 0]
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/garbage-section.tsx", {
            get GarbageSection() {
                return gde
            },
            set GarbageSection(e) {
                gde = e
            }
        });
        var pde = ({group: e, tooltipKeys: t, tooltipTags: n, patientCount: s, patientCapacity: i})=>{
            const a = tO(e, t, n);
            return (0,
            z.jsxs)(yS, {
                tooltip: a && (0,
                z.jsx)(Cb, {
                    text: a
                }),
                children: [(0,
                z.jsx)(KS, {
                    uppercase: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.HEALTHCARE_PATIENTS, {})
                }), (0,
                z.jsxs)(Mue, {
                    progress: s,
                    max: i,
                    children: [s, "/", i]
                })]
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/healthcare-section.tsx", {
            get HealthcareSection() {
                return pde
            },
            set HealthcareSection(e) {
                pde = e
            }
        });
        let fde = {
            "progress-bar": "progress-bar_H27 progress-bar_xWR",
            progressBar: "progress-bar_H27 progress-bar_xWR",
            progress: "progress_Yn6 progress_JAQ"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/level-section/level-progress-bar.module.scss", {
            get classes() {
                return fde
            },
            set classes(e) {
                Object.assign(fde, e)
            }
        });
        const xde = fde;
        let vde = {
            bar: "bar_PEM",
            "level-segment": "level-segment_Reo",
            levelSegment: "level-segment_Reo",
            "construction-segment": "construction-segment_skQ",
            constructionSegment: "construction-segment_skQ",
            label: "label_qUU"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/level-section/level-section.module.scss", {
            get classes() {
                return vde
            },
            set classes(e) {
                Object.assign(vde, e)
            }
        });
        const _de = vde;
        var bde = ({group: e, tooltipKeys: t, tooltipTags: n, ...s})=>{
            const i = tO(e, t, n, s.isUnderConstruction);
            return (0,
            z.jsxs)(yS, {
                tooltip: i && (0,
                z.jsx)(Cb, {
                    text: i
                }),
                children: [(0,
                z.jsx)(KS, {
                    uppercase: !0,
                    disableFocus: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.ZONE, {}),
                    right: (0,
                    z.jsx)(_c.Assets.NAME, {
                        hash: s.zone
                    })
                }), (0,
                z.jsx)(KS, {
                    uppercase: !0,
                    left: s.isUnderConstruction ? (0,
                    z.jsx)(_c.SelectedInfoPanel.UNDER_CONSTRUCTION, {}) : (0,
                    z.jsx)(_c.SelectedInfoPanel.LEVEL, {}),
                    right: (0,
                    z.jsx)(Tde, {
                        group: e,
                        tooltipKeys: t,
                        tooltipTags: n,
                        ...s
                    })
                })]
            })
        }
        ;
        const Tde = ({level: e, maxLevel: t, isUnderConstruction: n, progress: s})=>{
            const i = (0,
            Y.useMemo)((()=>t - e), [e, t]);
            return (0,
            z.jsxs)("div", {
                className: _de.bar,
                children: [(0,
                z.jsx)("div", {
                    className: _de.label,
                    children: n ? (0,
                    z.jsx)($u, {
                        value: s,
                        max: 100
                    }) : (0,
                    z.jsx)(uu, {
                        value: e,
                        total: t,
                        unit: vc.Integer
                    })
                }), n ? (0,
                z.jsx)(Ede, {
                    progress: s,
                    max: 100,
                    className: _de.constructionSegment
                }) : (0,
                z.jsxs)(z.Fragment, {
                    children: [[...Array(e).keys()].map((e=>(0,
                    z.jsx)(Ede, {
                        progress: 100,
                        className: _de.levelSegment
                    }, e))), i > 0 && (0,
                    z.jsx)(Ede, {
                        progress: s,
                        className: _de.levelSegment
                    }), i > 1 && [...Array(i - 1).keys()].map((e=>(0,
                    z.jsx)(Ede, {
                        progress: 0,
                        className: _de.levelSegment
                    }, e)))]
                })]
            })
        }
          , Ede = ({progress: e, max: t=100, className: n})=>(0,
        z.jsx)(yse, {
            progress: e,
            max: t,
            className: n,
            theme: xde
        });
        function Ide({group: e, tooltipTags: t, tooltipKeys: n, sortingRate: s, sortingCapacity: i, localAmount: a, unsortedAmount: o, outgoingAmount: r, storedAmount: l, storageCapacity: c, localKey: u, unsortedKey: d, type: m}) {
            const h = tO(e, n, t)
              , g = Dm();
            return (0,
            z.jsxs)(yS, {
                tooltip: h && (0,
                z.jsx)(Cb, {
                    text: h
                }),
                disableFocus: !g,
                children: [m === Ow.PostFacility && (0,
                z.jsxs)(z.Fragment, {
                    children: [(0,
                    z.jsx)(KS, {
                        uppercase: !0,
                        disableFocus: g,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.MAIL_STORED_MAIL, {
                            hash: u
                        }),
                        right: a
                    }), i > 0 || r > 0 ? (0,
                    z.jsx)(KS, {
                        uppercase: !0,
                        disableFocus: g,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.MAIL_STORED_MAIL, {
                            hash: "Outgoing"
                        }),
                        right: r
                    }) : void 0, (0,
                    z.jsx)(KS, {
                        uppercase: !0,
                        disableFocus: g,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.MAIL_STORED_MAIL, {
                            hash: d
                        }),
                        right: o
                    }), i > 0 ? (0,
                    z.jsxs)(z.Fragment, {
                        children: [(0,
                        z.jsx)(KS, {
                            uppercase: !0,
                            disableFocus: g,
                            left: (0,
                            z.jsx)(_c.SelectedInfoPanel.MAIL_SORTING_SPEED, {})
                        }), (0,
                        z.jsx)(Mue, {
                            progress: s,
                            max: i,
                            children: (0,
                            z.jsx)(uu, {
                                value: s,
                                total: i,
                                unit: vc.IntegerPerMonth
                            })
                        })]
                    }) : void 0]
                }), c > 0 ? (0,
                z.jsxs)(z.Fragment, {
                    children: [(0,
                    z.jsx)(KS, {
                        uppercase: !0,
                        disableFocus: g,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.MAIL_STORED_MAIL, {
                            hash: "Stored"
                        })
                    }), (0,
                    z.jsxs)(Mue, {
                        progress: l,
                        max: c,
                        children: [l, "/", c]
                    })]
                }) : void 0]
            })
        }
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/level-section/level-section.tsx", {
            get LevelSection() {
                return bde
            },
            set LevelSection(e) {
                bde = e
            }
        }),
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/mail-section.tsx", {
            get MailSection() {
                return Ide
            },
            set MailSection(e) {
                Ide = e
            }
        });
        var Sde = ({group: e, tooltipKeys: t, tooltipTags: n, maintenance: s})=>{
            const i = tO(e, t, n);
            return (0,
            z.jsxs)(yS, {
                tooltip: i && (0,
                z.jsx)(Cb, {
                    text: i
                }),
                children: [(0,
                z.jsx)(KS, {
                    uppercase: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.PARK_MAINTENANCE, {})
                }), (0,
                z.jsx)(Mue, {
                    progress: s,
                    max: 100,
                    invertColorCodes: !0,
                    children: (0,
                    z.jsx)(Oc, {
                        value: s,
                        unit: vc.Percentage
                    })
                })]
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/park-section.tsx", {
            get ParkSection() {
                return Sde
            },
            set ParkSection(e) {
                Sde = e
            }
        });
        var yde = ({group: e, tooltipTags: t, tooltipKeys: n, parkedCars: s, parkingCapacity: i})=>{
            const a = tO(e, n, t);
            return (0,
            z.jsx)(yS, {
                tooltip: a && (0,
                z.jsx)(Cb, {
                    text: a
                }),
                children: i > 0 ? (0,
                z.jsxs)(z.Fragment, {
                    children: [(0,
                    z.jsx)(KS, {
                        uppercase: !0,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.PARKING_PARKED, {})
                    }), (0,
                    z.jsx)(Mue, {
                        progress: s,
                        max: i,
                        children: (0,
                        z.jsx)(uu, {
                            value: s,
                            total: i,
                            unit: vc.Integer
                        })
                    })]
                }) : (0,
                z.jsx)(KS, {
                    uppercase: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.PARKING_PARKED, {}),
                    right: (0,
                    z.jsx)(Oc, {
                        value: s,
                        unit: vc.Integer
                    })
                })
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/parking-section.tsx", {
            get ParkingSection() {
                return yde
            },
            set ParkingSection(e) {
                yde = e
            }
        });
        var jde = ({group: e, tooltipTags: t, tooltipKeys: n, prisonerCount: s, prisonerCapacity: i})=>{
            const a = tO(e, n, t);
            return (0,
            z.jsxs)(yS, {
                tooltip: a && (0,
                z.jsx)(Cb, {
                    text: a
                }),
                children: [(0,
                z.jsx)(KS, {
                    uppercase: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.POLICE_PRISONERS, {})
                }), (0,
                z.jsxs)(Mue, {
                    progress: s,
                    max: i,
                    children: [s, "/", i]
                })]
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/police-section.tsx", {
            get PoliceSection() {
                return jde
            },
            set PoliceSection(e) {
                jde = e
            }
        });
        let Cde = {
            disabled: "disabled__qz",
            icon: "icon_rxa",
            indicator: "indicator_DKN",
            label: "label_Pzb",
            pollution: "pollution_USw"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/pollution-section/pollution-section.module.scss", {
            get classes() {
                return Cde
            },
            set classes(e) {
                Object.assign(Cde, e)
            }
        });
        const Nde = Cde;
        var wde = ({groundPollutionKey: e, airPollutionKey: t, noisePollutionKey: n})=>(0,
        z.jsx)(yS, {
            disableFocus: !0,
            children: (0,
            z.jsxs)(np, {
                children: [e !== ww.none && (0,
                z.jsx)(KS, {
                    uppercase: !0,
                    tooltip: (0,
                    z.jsx)(Cb, {
                        children: (0,
                        z.jsx)(_c.SelectedInfoPanel.TOOLTIP, {
                            hash: "PollutionSectionGround"
                        })
                    }),
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.POLLUTION_LEVELS_GROUND, {}),
                    right: (0,
                    z.jsx)(Ode, {
                        pollutionKey: e,
                        icon: "Media/Game/Icons/GroundPollution.svg"
                    })
                }), t !== ww.none && (0,
                z.jsx)(KS, {
                    uppercase: !0,
                    tooltip: (0,
                    z.jsx)(Cb, {
                        children: (0,
                        z.jsx)(_c.SelectedInfoPanel.TOOLTIP, {
                            hash: "PollutionSectionAir"
                        })
                    }),
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.POLLUTION_LEVELS_AIR, {}),
                    right: (0,
                    z.jsx)(Ode, {
                        pollutionKey: t,
                        icon: "Media/Game/Icons/AirPollution.svg"
                    })
                }), n !== ww.none && (0,
                z.jsx)(KS, {
                    uppercase: !0,
                    tooltip: (0,
                    z.jsx)(Cb, {
                        children: (0,
                        z.jsx)(_c.SelectedInfoPanel.TOOLTIP, {
                            hash: "PollutionSectionNoise"
                        })
                    }),
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.POLLUTION_LEVELS_NOISE, {}),
                    right: (0,
                    z.jsx)(Ode, {
                        pollutionKey: n,
                        icon: "Media/Game/Icons/NoisePollution.svg"
                    })
                })]
            })
        });
        const Ode = ({pollutionKey: e, icon: t})=>(0,
        z.jsxs)("div", {
            className: Nde.indicator,
            children: [(0,
            z.jsx)("div", {
                className: Nde.label,
                children: (0,
                z.jsx)(_c.SelectedInfoPanel.POLLUTION_LEVELS, {
                    index: e
                })
            }), (0,
            z.jsx)("img", {
                src: t,
                className: Zu()(Nde.icon, Pde(0, e))
            }), (0,
            z.jsx)("img", {
                src: t,
                className: Zu()(Nde.icon, Pde(1, e))
            }), (0,
            z.jsx)("img", {
                src: t,
                className: Zu()(Nde.icon, Pde(2, e))
            })]
        });
        function Pde(e, t) {
            switch (t) {
            case ww.none:
                return Nde.disabled;
            case ww.low:
                return e > 0 ? Nde.disabled : void 0;
            case ww.medium:
                return e > 1 ? Nde.disabled : void 0;
            default:
                return
            }
        }
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/pollution-section/pollution-section.tsx", {
            get PollutionSection() {
                return wde
            },
            set PollutionSection(e) {
                wde = e
            }
        });
        var Lde = ({group: e, tooltipTags: t, tooltipKeys: n, prisonerCount: s, prisonerCapacity: i})=>{
            const a = tO(e, n, t);
            return (0,
            z.jsxs)(yS, {
                tooltip: a && (0,
                z.jsx)(Cb, {
                    text: a
                }),
                children: [(0,
                z.jsx)(KS, {
                    uppercase: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.PRISON_PRISONERS, {})
                }), (0,
                z.jsxs)(Mue, {
                    progress: s,
                    max: i,
                    children: [s, "/", i]
                })]
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/prison-section.tsx", {
            get PrisonSection() {
                return Lde
            },
            set PrisonSection(e) {
                Lde = e
            }
        });
        var Ade = ({isHousehold: e, householdCount: t, maxHouseholds: n, residentCount: s, petCount: i, wealthKey: a, residence: o, residenceEntity: r, residenceKey: l, educationData: c, ageData: u, tooltipTags: d})=>{
            const m = (0,
            Y.useCallback)((()=>r && Yw(r)), [r])
              , h = d.includes("HomelessShelter");
            return (0,
            z.jsxs)(z.Fragment, {
                children: [null != o && (0,
                z.jsx)(yS, {
                    tooltip: (0,
                    z.jsx)(Cb, {
                        children: (0,
                        z.jsx)(_c.SelectedInfoPanel.TOOLTIP, {
                            hash: "ResidentsSectionResidence"
                        })
                    }),
                    children: (0,
                    z.jsx)(KS, {
                        uppercase: !0,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.CITIZEN_RESIDENCE, {
                            hash: l
                        }),
                        link: (0,
                        z.jsx)(tde, {
                            onSelect: m,
                            children: (0,
                            z.jsx)(Ku, {
                                value: o
                            })
                        })
                    })
                }), n > 1 && (0,
                z.jsx)(yS, {
                    tooltip: (0,
                    z.jsx)(Cb, {
                        children: (0,
                        z.jsx)(_c.SelectedInfoPanel.TOOLTIP, {
                            hash: "ResidentsSectionHouseholds"
                        })
                    }),
                    children: (0,
                    z.jsx)(KS, {
                        uppercase: !0,
                        left: h ? (0,
                        z.jsx)(_c.SelectedInfoPanel.HOMELESS_HOUSEHOLDS, {}) : (0,
                        z.jsx)(_c.SelectedInfoPanel.HOUSEHOLDS, {}),
                        right: (0,
                        z.jsx)(uu, {
                            value: t,
                            total: n,
                            unit: vc.Integer
                        })
                    })
                }), (0,
                z.jsxs)(yS, {
                    tooltip: (0,
                    z.jsxs)(z.Fragment, {
                        children: [(0,
                        z.jsx)(Cb, {
                            children: (0,
                            z.jsx)(_c.SelectedInfoPanel.TOOLTIP, {
                                hash: e ? "ResidentsSectionHouseholdMembers" : h ? "ResidentsSectionHomeless" : "ResidentsSectionResidents"
                            })
                        }), (0,
                        z.jsx)(jS, {}), (0,
                        z.jsx)(i6, {
                            colors: Q6,
                            labels: Z6,
                            data: u
                        }), (0,
                        z.jsx)(Bge, {}), (0,
                        z.jsx)(Cb, {
                            children: (0,
                            z.jsx)(_c.SelectedInfoPanel.TOOLTIP, {
                                hash: "ResidentsSectionAge"
                            })
                        }), (0,
                        z.jsx)(jS, {}), (0,
                        z.jsx)(i6, {
                            colors: a6,
                            labels: o6,
                            data: c
                        }), (0,
                        z.jsx)(Bge, {}), (0,
                        z.jsx)(Cb, {
                            children: (0,
                            z.jsx)(_c.SelectedInfoPanel.TOOLTIP, {
                                hash: "ResidentsSectionEducation"
                            })
                        })]
                    }),
                    children: [(0,
                    z.jsx)(KS, {
                        disableFocus: !0,
                        uppercase: !0,
                        left: e ? (0,
                        z.jsx)(_c.SelectedInfoPanel.HOUSEHOLD_MEMBERS, {}) : h ? (0,
                        z.jsx)(_c.SelectedInfoPanel.HOMELESS, {}) : (0,
                        z.jsx)(_c.SelectedInfoPanel.RESIDENTS, {}),
                        right: s
                    }), i > 0 && (0,
                    z.jsx)(KS, {
                        disableFocus: !0,
                        subRow: !0,
                        icon: "Media/Game/Icons/Pet.svg",
                        left: (0,
                        z.jsx)(Oc, {
                            value: i
                        })
                    })]
                }), (e || 1 === n && t > 0 || n > 1 && t > 0) && (0,
                z.jsx)(yS, {
                    tooltip: n > 1 ? (0,
                    z.jsx)(Cb, {
                        children: (0,
                        z.jsx)(_c.SelectedInfoPanel.TOOLTIP, {
                            hash: "ResidentsSectionAverageHouseholdWealth"
                        })
                    }) : (0,
                    z.jsx)(Cb, {
                        children: (0,
                        z.jsx)(_c.SelectedInfoPanel.TOOLTIP, {
                            hash: "ResidentsSectionHouseholdWealth"
                        })
                    }),
                    children: (0,
                    z.jsx)(KS, {
                        uppercase: !0,
                        left: n > 1 ? (0,
                        z.jsx)(_c.SelectedInfoPanel.AVERAGE_HOUSEHOLD_WEALTH, {}) : (0,
                        z.jsx)(_c.SelectedInfoPanel.CITIZEN_WEALTH_TITLE, {}),
                        right: (0,
                        z.jsx)(_c.SelectedInfoPanel.CITIZEN_WEALTH, {
                            hash: a
                        })
                    })
                })]
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/residents-section.tsx", {
            get ResidentsSection() {
                return Ade
            },
            set ResidentsSection(e) {
                Ade = e
            }
        });
        var Mde = ({group: e, tooltipKeys: t, tooltipTags: n, capacity: s, lastProcessed: i, purification: a})=>{
            const o = tO(e, t, n)
              , r = i > 0 && s > 0 ? Od(100 * i / s, 1, 100) : 0;
            return (0,
            z.jsxs)(yS, {
                tooltip: o && (0,
                z.jsx)(Cb, {
                    text: o
                }),
                children: [(0,
                z.jsx)(KS, {
                    uppercase: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.SEWAGE_PROCESSING_CAPACITY, {}),
                    right: (0,
                    z.jsx)(Oc, {
                        value: s,
                        unit: vc.VolumePerMonth
                    })
                }), (0,
                z.jsx)(KS, {
                    disableFocus: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.SEWAGE_OUTLET_USAGE, {}),
                    right: (0,
                    z.jsx)(Oc, {
                        value: r,
                        unit: vc.Percentage
                    })
                }), a > 0 && (0,
                z.jsx)(KS, {
                    disableFocus: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.SEWAGE_PURIFICATION_RATE, {}),
                    right: (0,
                    z.jsx)(Oc, {
                        value: 100 * a,
                        unit: vc.Percentage
                    })
                })]
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/sewage-section.tsx", {
            get SewageSection() {
                return Mde
            },
            set SewageSection(e) {
                Mde = e
            }
        });
        var Rde = ({group: e, tooltipTags: t, tooltipKeys: n, sheltered: s, shelterCapacity: i})=>{
            const a = tO(e, n, t);
            return (0,
            z.jsxs)(yS, {
                tooltip: a && (0,
                z.jsx)(Cb, {
                    text: a
                }),
                children: [(0,
                z.jsx)(KS, {
                    uppercase: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.SHELTER_OCCUPANTS, {})
                }), (0,
                z.jsxs)(Mue, {
                    progress: s,
                    max: i,
                    children: [s, "/", i]
                })]
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/shelter-section.tsx", {
            get ShelterSection() {
                return Rde
            },
            set ShelterSection(e) {
                Rde = e
            }
        });
        var kde = ({children: e, className: t})=>(0,
        z.jsx)("div", {
            className: Zu()(SS.infoWrapBox, t),
            children: e
        });
        X.add("game-ui/game/components/selected-info-panel/shared-components/info-section/info-wrap-box.tsx", {
            get InfoWrapBox() {
                return kde
            },
            set InfoWrapBox(e) {
                kde = e
            }
        });
        let Dde = {
            field: "field_lUX",
            header: "header_WRn",
            icon: "icon__9P",
            label: "label_vVZ",
            content: "content_n5J"
        };
        X.add("game-ui/game/components/selected-info-panel/shared-components/resource-item/resource-item.module.scss", {
            get classes() {
                return Dde
            },
            set classes(e) {
                Object.assign(Dde, e)
            }
        });
        const Fde = Dde;
        let Ude = {
            foldout: "foldout_N6C",
            legends: "legends_x4U",
            resource: "resource_y9X",
            surplus: "surplus_K6a",
            deficit: "deficit_x9b"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/storage-section/storage-section.module.scss", {
            get classes() {
                return Ude
            },
            set classes(e) {
                Object.assign(Ude, e)
            }
        });
        const Bde = Ude;
        var Gde = ({group: e, tooltipTags: t, tooltipKeys: n, stored: s, capacity: i, status: a, storageType: o, rawMaterials: r, processedGoods: l, mail: c})=>{
            const u = tO(e, n, t)
              , d = l?.filter((e=>"NoResource" !== e.key))
              , m = bq()
              , h = (0,
            Y.useCallback)((t=>{
                m.setState(e, t)
            }
            ), [e, m])
              , g = getComputedStyle(document.documentElement)
              , p = Dm()
              , f = {
                positive: g.getPropertyValue("--positiveColor").trim(),
                negative: g.getPropertyValue("--negativeColor").trim(),
                neutral: p ? "#A5E1F8" : "#414D4A"
            };
            return (0,
            z.jsx)(z.Fragment, {
                children: (0,
                z.jsxs)(yS, {
                    tooltip: u && (0,
                    z.jsxs)(z.Fragment, {
                        children: [(0,
                        z.jsx)(Cb, {
                            children: u
                        }), "Company" !== o && (0,
                        z.jsxs)(z.Fragment, {
                            children: [(0,
                            z.jsx)(jS, {}), (0,
                            z.jsxs)("div", {
                                className: Bde.legends,
                                children: [(0,
                                z.jsx)(xQ, {
                                    color: f.neutral,
                                    label: (0,
                                    z.jsx)(_c.SelectedInfoPanel.RESOURCE_STATUS, {
                                        hash: "Normal"
                                    })
                                }), (0,
                                z.jsx)(xQ, {
                                    color: f.positive,
                                    label: (0,
                                    z.jsx)(_c.SelectedInfoPanel.RESOURCE_STATUS, {
                                        hash: "Surplus"
                                    })
                                }), (0,
                                z.jsx)(xQ, {
                                    color: f.negative,
                                    label: (0,
                                    z.jsx)(_c.SelectedInfoPanel.RESOURCE_STATUS, {
                                        hash: "Deficit"
                                    })
                                })]
                            })]
                        })]
                    }),
                    children: [(0,
                    z.jsx)(KS, {
                        disableFocus: !0,
                        uppercase: !0,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.WAREHOUSE_STORAGE, {}),
                        right: (0,
                        z.jsx)(_c.SelectedInfoPanel.STORAGE_STATUS, {
                            hash: a
                        })
                    }), (0,
                    z.jsx)(Mue, {
                        plain: !0,
                        progress: s,
                        max: i,
                        children: (0,
                        z.jsx)(uu, {
                            value: s,
                            total: i,
                            unit: vc.Weight
                        })
                    }), r.length + d.length + c.length > 0 ? (0,
                    z.jsx)(GS, {
                        initialExpanded: m.getState(e, !0),
                        onToggleExpanded: h,
                        header: (0,
                        z.jsx)(KS, {
                            left: (0,
                            z.jsx)(_c.SelectedInfoPanel.STORED_RESOURCES, {}),
                            right: (0,
                            z.jsx)(Oc, {
                                value: r.length + d.length + c.length
                            })
                        }),
                        className: Bde.foldout,
                        children: r.length + d.length + c.length > 0 && (0,
                        z.jsxs)(z.Fragment, {
                            children: [r.length > 0 ? (0,
                            z.jsxs)(z.Fragment, {
                                children: [(0,
                                z.jsx)(KS, {
                                    disableFocus: !0,
                                    left: (0,
                                    z.jsx)(_c.SelectedInfoPanel.RAW_MATERIALS, {})
                                }), (0,
                                z.jsx)(kde, {
                                    children: r?.map((e=>(0,
                                    z.jsx)(Vde, {
                                        resource: e,
                                        storageType: o
                                    }, e.key)))
                                })]
                            }) : void 0, d.length > 0 ? (0,
                            z.jsxs)(z.Fragment, {
                                children: [(0,
                                z.jsx)(KS, {
                                    disableFocus: !0,
                                    left: (0,
                                    z.jsx)(_c.SelectedInfoPanel.PROCESSED_GOODS, {})
                                }), (0,
                                z.jsx)(kde, {
                                    children: d?.map((e=>(0,
                                    z.jsx)(Vde, {
                                        resource: e,
                                        storageType: o
                                    }, e.key)))
                                })]
                            }) : void 0, c.length > 0 ? (0,
                            z.jsxs)(z.Fragment, {
                                children: [(0,
                                z.jsx)(KS, {
                                    disableFocus: !0,
                                    left: (0,
                                    z.jsx)(_c.SelectedInfoPanel.MAIL, {})
                                }), (0,
                                z.jsx)(kde, {
                                    children: c?.map((e=>(0,
                                    z.jsx)(Vde, {
                                        resource: e,
                                        storageType: o
                                    }, e.key)))
                                })]
                            }) : void 0]
                        })
                    }) : null]
                })
            })
        }
        ;
        const Vde = ({resource: e, storageType: t})=>(0,
        z.jsx)(H9, {
            theme: Fde,
            icon: `Media/Game/Resources/${e.key}.svg`,
            label: (0,
            z.jsx)(_c.Resources.TITLE, {
                hash: e.key
            }),
            className: "Company" !== t ? Zu()(Bde.resource, "Surplus" === e.status && Bde.surplus, "Deficit" === e.status && Bde.deficit) : void 0,
            children: (0,
            z.jsx)(Oc, {
                value: e.amount,
                unit: vc.Weight
            })
        }, e.key);
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/storage-section/storage-section.tsx", {
            get StorageSection() {
                return Gde
            },
            set StorageSection(e) {
                Gde = e
            }
        });
        var Hde = ({group: e, tooltipKeys: t, tooltipTags: n, rawMaterials: s, processedGoods: i, mail: a})=>{
            const o = tO(e, t, n)
              , r = bq()
              , l = i?.filter((e=>"NoResource" !== e.key))
              , c = (0,
            Y.useCallback)((t=>{
                r.setState(e, t)
            }
            ), [e, r])
              , u = (0,
            Y.useMemo)((()=>r.getState(e, !1)), [e, r]);
            return (0,
            z.jsx)(GS, {
                initialExpanded: u,
                onToggleExpanded: c,
                header: (0,
                z.jsx)(KS, {
                    uppercase: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.TRADED_RESOURCES, {}),
                    right: (0,
                    z.jsx)(Oc, {
                        value: s.length + l.length + a.length
                    })
                }),
                tooltip: (0,
                z.jsxs)(Cb, {
                    children: [(0,
                    z.jsx)(_c.SelectedInfoPanel.TRADED_RESOURCES_TOOLTIP, {}), o]
                }),
                children: s.length + l.length + a.length > 0 && (0,
                z.jsxs)(z.Fragment, {
                    children: [s.length > 0 ? (0,
                    z.jsxs)(z.Fragment, {
                        children: [(0,
                        z.jsx)(KS, {
                            disableFocus: !0,
                            left: (0,
                            z.jsx)(_c.SelectedInfoPanel.RAW_MATERIALS, {})
                        }), (0,
                        z.jsx)(kde, {
                            children: s?.map((e=>(0,
                            z.jsx)(Kde, {
                                resource: e
                            }, e.key)))
                        })]
                    }) : void 0, l.length > 0 ? (0,
                    z.jsxs)(z.Fragment, {
                        children: [(0,
                        z.jsx)(KS, {
                            disableFocus: !0,
                            left: (0,
                            z.jsx)(_c.SelectedInfoPanel.PROCESSED_GOODS, {})
                        }), (0,
                        z.jsx)(kde, {
                            children: l?.map((e=>(0,
                            z.jsx)(Kde, {
                                resource: e
                            }, e.key)))
                        })]
                    }) : void 0, a.length > 0 ? (0,
                    z.jsxs)(z.Fragment, {
                        children: [(0,
                        z.jsx)(KS, {
                            disableFocus: !0,
                            left: (0,
                            z.jsx)(_c.SelectedInfoPanel.MAIL, {})
                        }), (0,
                        z.jsx)(kde, {
                            children: a?.map((e=>(0,
                            z.jsx)(Kde, {
                                resource: e
                            }, e.key)))
                        })]
                    }) : void 0]
                })
            })
        }
        ;
        const Kde = ({resource: e})=>(0,
        z.jsx)(H9, {
            theme: Fde,
            icon: `Media/Game/Resources/${e.key}.svg`,
            label: (0,
            z.jsx)(_c.Resources.TITLE, {
                hash: e.key
            })
        }, e.key);
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/traded-resources-section.tsx", {
            get TradedResourcesSection() {
                return Hde
            },
            set TradedResourcesSection(e) {
                Hde = e
            }
        });
        var Wde = ({group: e, tooltipKeys: t, tooltipTags: n, capacity: s, flow: i})=>{
            const a = tO(e, t, n)
              , o = Math.abs(i) > 0 && s > 0 ? Od(100 * Math.abs(i) / s, 1, 100) : 0;
            return (0,
            z.jsxs)(yS, {
                tooltip: a && (0,
                z.jsx)(Cb, {
                    text: a
                }),
                children: [(0,
                z.jsx)(KS, {
                    uppercase: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.ELECTRICITY_TRANSFORMER_CAPACITY, {}),
                    right: (0,
                    z.jsx)(Oc, {
                        value: s,
                        unit: vc.Power
                    })
                }), (0,
                z.jsx)(KS, {
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.ELECTRICITY_POWER_USAGE, {}),
                    right: (0,
                    z.jsx)(Oc, {
                        value: o,
                        unit: vc.Percentage
                    })
                })]
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/transformer-section.tsx", {
            get TransformerSection() {
                return Wde
            },
            set TransformerSection(e) {
                Wde = e
            }
        });
        var zde = ({group: e, tooltipTags: t, tooltipKeys: n, mainBuilding: s, mainBuildingName: i, upgrade: a, type: o})=>{
            const r = tO(e, n, t)
              , l = (0,
            Y.useCallback)((()=>Yw(s)), [s])
              , c = ll(dA, a) ?? _T;
            return (0,
            z.jsxs)(yS, {
                disableFocus: !0,
                tooltip: r && (0,
                z.jsx)(Cb, {
                    text: r
                }),
                children: [(0,
                z.jsx)(KS, {
                    disableFocus: !0,
                    uppercase: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.UPGRADE_TYPE, {
                        hash: o
                    })
                }), (0,
                z.jsx)(cD, {
                    components: Xde,
                    data: c.properties
                }), (0,
                z.jsx)(KS, {
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.MAIN_BUILDING, {}),
                    link: (0,
                    z.jsx)(tde, {
                        onSelect: l,
                        children: (0,
                        z.jsx)(Ku, {
                            value: i
                        })
                    })
                })]
            })
        }
          , Yde = ({labelId: e, unit: t, value: n, signed: s})=>(0,
        z.jsx)(KS, {
            disableFocus: !0,
            left: (0,
            z.jsx)(cc, {
                id: e
            }),
            right: (0,
            z.jsx)(Oc, {
                value: n,
                unit: t,
                signed: s
            })
        })
          , $de = ({labelId: e, unit: t, value: n, signed: s})=>{
            const i = t.includes("money");
            return (0,
            z.jsx)(KS, {
                disableFocus: !0,
                left: (0,
                z.jsx)(cc, {
                    id: e
                }),
                right: (0,
                z.jsxs)(z.Fragment, {
                    children: [(0,
                    z.jsx)(Oc, {
                        value: n.x,
                        unit: i ? vc.Money : void 0
                    }), "–", (0,
                    z.jsx)(Oc, {
                        value: n.y,
                        unit: t,
                        signed: s
                    })]
                })
            })
        }
          , qde = ({labelId: e, valueId: t})=>(0,
        z.jsx)(KS, {
            disableFocus: !0,
            left: (0,
            z.jsx)(cc, {
                id: e
            }),
            right: (0,
            z.jsx)(cc, {
                id: t
            })
        });
        const Xde = {
            [$C]: ()=>null,
            [qC]: ()=>null,
            [_ee]: Yde,
            [bee]: $de,
            [Eee]: qde,
            [GC]: ({electricityConsumption: e, waterConsumption: t, garbageAccumulation: n})=>(0,
            z.jsxs)(z.Fragment, {
                children: [e > 0 && (0,
                z.jsx)(KS, {
                    disableFocus: !0,
                    left: (0,
                    z.jsx)(_c.Properties.ELECTRICITY_CONSUMPTION, {}),
                    right: (0,
                    z.jsx)(Oc, {
                        value: e,
                        unit: vc.Power
                    })
                }), t > 0 && (0,
                z.jsx)(KS, {
                    disableFocus: !0,
                    left: (0,
                    z.jsx)(_c.Properties.WATER_CONSUMPTION, {}),
                    right: (0,
                    z.jsx)(Oc, {
                        value: t,
                        unit: vc.VolumePerMonth
                    })
                }), n > 0 && (0,
                z.jsx)(KS, {
                    disableFocus: !0,
                    left: (0,
                    z.jsx)(_c.Properties.GARBAGE_ACCUMULATION, {}),
                    right: (0,
                    z.jsx)(Oc, {
                        value: n,
                        unit: vc.WeightPerMonth
                    })
                })]
            }),
            [VC]: ({groundPollution: e, airPollution: t, noisePollution: n})=>(0,
            z.jsxs)(z.Fragment, {
                children: [e > BC.none && (0,
                z.jsx)(KS, {
                    disableFocus: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.POLLUTION_LEVELS_GROUND, {}),
                    right: (0,
                    z.jsxs)(z.Fragment, {
                        children: [(0,
                        z.jsx)("img", {
                            src: "Media/Game/Icons/GroundPollution.svg",
                            className: HS.icon
                        }), (0,
                        z.jsx)(_c.SelectedInfoPanel.POLLUTION_LEVELS, {
                            index: e
                        })]
                    })
                }), t > BC.none && (0,
                z.jsx)(KS, {
                    disableFocus: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.POLLUTION_LEVELS_AIR, {}),
                    right: (0,
                    z.jsxs)(z.Fragment, {
                        children: [(0,
                        z.jsx)("img", {
                            src: "Media/Game/Icons/AirPollution.svg",
                            className: HS.icon
                        }), (0,
                        z.jsx)(_c.SelectedInfoPanel.POLLUTION_LEVELS, {
                            index: t
                        })]
                    })
                }), n > BC.none && (0,
                z.jsx)(KS, {
                    disableFocus: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.POLLUTION_LEVELS_NOISE, {}),
                    right: (0,
                    z.jsxs)(z.Fragment, {
                        children: [(0,
                        z.jsx)("img", {
                            src: "Media/Game/Icons/NoisePollution.svg",
                            className: HS.icon
                        }), (0,
                        z.jsx)(_c.SelectedInfoPanel.POLLUTION_LEVELS, {
                            index: n
                        })]
                    })
                })]
            }),
            [KC]: ({labelId: e, minCapacity: t, maxCapacity: n, voltage: s})=>(0,
            z.jsx)(KS, {
                disableFocus: !0,
                left: (0,
                z.jsx)(cc, {
                    id: e
                }),
                right: (0,
                z.jsx)(_c.Properties.POWER_VOLTAGE_FORMAT, {
                    VALUE: (0,
                    z.jsx)(ou, {
                        min: t,
                        max: n,
                        unit: vc.Power
                    }),
                    VOLTAGE: (0,
                    z.jsx)(_c.Properties.VOLTAGE, {
                        index: s
                    })
                })
            }),
            [YC]: ({stops: e})=>(0,
            z.jsx)(z.Fragment, {
                children: Object.entries(e).map((([e,t],n)=>t > 0 && (0,
                z.jsx)(KS, {
                    disableFocus: !0,
                    left: (0,
                    z.jsx)(_c.Properties.TRANSPORT_STOP_COUNT, {
                        hash: e
                    }),
                    right: (0,
                    z.jsx)(Oc, {
                        value: t,
                        unit: vc.Integer
                    })
                }, n)))
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/upgrade-properties-section.tsx", {
            get UpgradePropertiesSection() {
                return zde
            },
            set UpgradePropertiesSection(e) {
                zde = e
            },
            get NumberPropertyField() {
                return Yde
            },
            set NumberPropertyField(e) {
                Yde = e
            },
            get Number2PropertyField() {
                return $de
            },
            set Number2PropertyField(e) {
                $de = e
            },
            get StringPropertyField() {
                return qde
            },
            set StringPropertyField(e) {
                qde = e
            }
        });
        const Qde = "UpgradesSection";
        var Zde = el(Qde, "delete")
          , Jde = el(Qde, "relocate")
          , eme = el(Qde, "focus")
          , tme = el(Qde, "toggle");
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/upgrades-section/upgrades-section-bindings.ts", {
            get deleteUpgrade() {
                return Zde
            },
            set deleteUpgrade(e) {
                Zde = e
            },
            get relocateUpgrade() {
                return Jde
            },
            set relocateUpgrade(e) {
                Jde = e
            },
            get focusUpgrade() {
                return eme
            },
            set focusUpgrade(e) {
                eme = e
            },
            get toggleUpgrade() {
                return tme
            },
            set toggleUpgrade(e) {
                tme = e
            }
        });
        let nme = {
            "upgrades-section": "upgrades-section_Zb5",
            upgradesSection: "upgrades-section_Zb5",
            details: "details_pZM",
            detail: "detail_kBc",
            "delete-button": "delete-button_z_s",
            deleteButton: "delete-button_z_s",
            dropdown: "dropdown_Rc8",
            toolIcon: "toolIcon_nit",
            item: "item_q7g",
            thumb: "thumb_zKj",
            label: "label_TkD",
            hint: "hint_ZRS",
            "dropdown-item-hint": "dropdown-item-hint_iFL",
            dropdownItemHint: "dropdown-item-hint_iFL",
            "dropdown-item": "dropdown-item_NmT",
            dropdownItem: "dropdown-item_NmT",
            "pad-left": "pad-left_Uwn",
            padLeft: "pad-left_Uwn",
            "pad-right": "pad-right_syk",
            padRight: "pad-right_syk"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/upgrades-section/upgrades-section.module.scss", {
            get classes() {
                return nme
            },
            set classes(e) {
                Object.assign(nme, e)
            }
        });
        const sme = nme;
        var ime = ({group: e, tooltipTags: t, tooltipKeys: n, extensions: s, subBuildings: i})=>{
            const a = tO(e, n, t)
              , o = bq()
              , r = (0,
            Y.useCallback)((t=>{
                o.setState(e, t)
            }
            ), [e, o])
              , l = Dm();
            return (0,
            z.jsx)(GS, {
                initialExpanded: o.getState(e, !0),
                onToggleExpanded: r,
                disableFocus: !0,
                tooltip: a && (0,
                z.jsx)(Cb, {
                    children: a
                }),
                header: (0,
                z.jsx)(KS, {
                    uppercase: !0,
                    disableFocus: !l || s.length + i.length > 0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.UPGRADES, {}),
                    right: (0,
                    z.jsx)(Oc, {
                        value: s.length + i.length
                    })
                }),
                children: s.length + i.length > 0 ? (0,
                z.jsxs)(z.Fragment, {
                    children: [s.length > 0 && (0,
                    z.jsxs)(z.Fragment, {
                        children: [(0,
                        z.jsx)(KS, {
                            disableFocus: !0,
                            left: (0,
                            z.jsx)(_c.SelectedInfoPanel.EXTENSIONS, {})
                        }), (0,
                        z.jsx)(np, {
                            children: s.map(((e,t)=>(0,
                            z.jsx)(ome, {
                                upgrade: e
                            }, t)))
                        })]
                    }), i.length > 0 && (0,
                    z.jsxs)(z.Fragment, {
                        children: [(0,
                        z.jsx)(KS, {
                            disableFocus: !0,
                            left: (0,
                            z.jsx)(_c.SelectedInfoPanel.SUB_BUILDINGS, {})
                        }), (0,
                        z.jsx)(np, {
                            children: i.map(((e,t)=>(0,
                            z.jsx)(ame, {
                                upgrade: e
                            }, t)))
                        })]
                    })]
                }) : null
            })
        }
        ;
        const ame = ({upgrade: e})=>{
            const t = (0,
            Y.useContext)(xE)
              , n = (0,
            Y.useCallback)((()=>{
                Zde(e.entity)
            }
            ), [e.entity])
              , s = (0,
            Y.useCallback)((()=>{
                t.showDialog((0,
                z.jsx)(zI, {
                    title: (0,
                    z.jsx)(_c.Common.WARNING, {}),
                    message: (0,
                    z.jsx)(_c.SelectedInfoPanel.CONFIRM_DELETE_WARNING, {}),
                    onConfirm: n
                }))
            }
            ), [t, n])
              , i = (0,
            Y.useCallback)((()=>Jde(e.entity)), [e])
              , a = (0,
            Y.useCallback)((()=>eme(e.entity)), [e])
              , o = (0,
            Y.useCallback)((()=>tme(e.entity)), [e])
              , r = (0,
            Y.useCallback)((()=>Yw(e.entity)), [e]);
            return (0,
            z.jsx)(KS, {
                disableFocus: !0,
                subRow: !0,
                left: (0,
                z.jsx)(Ku, {
                    value: e.name
                }),
                right: (0,
                z.jsx)(cme, {
                    disabled: e.disabled,
                    focused: e.focused,
                    handleDelete: s,
                    handleToggle: o,
                    handleRelocate: i,
                    handleFocus: a,
                    handleSelect: r
                })
            })
        }
          , ome = ({upgrade: e})=>{
            const t = (0,
            Y.useContext)(xE)
              , n = (0,
            Y.useCallback)((()=>{
                Zde(e.entity)
            }
            ), [e.entity])
              , s = (0,
            Y.useCallback)((()=>{
                t.showDialog((0,
                z.jsx)(zI, {
                    title: (0,
                    z.jsx)(_c.Common.WARNING, {}),
                    message: (0,
                    z.jsx)(_c.SelectedInfoPanel.CONFIRM_DELETE_WARNING, {}),
                    onConfirm: n
                }))
            }
            ), [t, n])
              , i = (0,
            Y.useCallback)((()=>tme(e.entity)), [e])
              , a = (0,
            Y.useCallback)((()=>Yw(e.entity)), [e]);
            return (0,
            z.jsx)(KS, {
                disableFocus: !0,
                subRow: !0,
                left: (0,
                z.jsx)(Ku, {
                    value: e.name
                }),
                right: (0,
                z.jsx)(cme, {
                    disabled: e.disabled,
                    focused: e.focused,
                    handleSelect: a,
                    handleDelete: s,
                    handleToggle: i
                })
            })
        }
          , rme = {
            ...F_,
            hover: null,
            focus: null
        }
          , lme = new Ig("SELECT_KEY")
          , cme = ({disabled: e, focused: t, handleSelect: n, handleToggle: s, handleDelete: i, handleRelocate: a, handleFocus: o})=>{
            const [r,l] = (0,
            Y.useState)(!1)
              , [c,u] = (0,
            Y.useState)(!1);
            return (0,
            z.jsxs)(z.Fragment, {
                children: [(0,
                z.jsx)(UT, {
                    action: r ? "Back" : "Select",
                    active: c,
                    className: sme.hint
                }), (0,
                z.jsx)(Ah, {
                    onFocusChange: u,
                    children: (0,
                    z.jsx)(fS, {
                        theme: oz,
                        initialFocused: lme,
                        alignment: "right",
                        onToggle: l,
                        content: (0,
                        z.jsxs)(z.Fragment, {
                            children: [(0,
                            z.jsx)(ume, {
                                onChange: n,
                                focusKey: lme,
                                children: (0,
                                z.jsxs)("div", {
                                    className: sme.item,
                                    children: [(0,
                                    z.jsx)(Z_, {
                                        src: "Media/Glyphs/ViewInfo.svg",
                                        className: sme.thumb
                                    }), (0,
                                    z.jsx)("div", {
                                        className: sme.label,
                                        children: (0,
                                        z.jsx)(_c.SelectedInfoPanel.SELECT_UPGRADE, {})
                                    })]
                                })
                            }), o && (0,
                            z.jsx)(ume, {
                                onChange: o,
                                children: (0,
                                z.jsxs)("div", {
                                    className: sme.item,
                                    children: [(0,
                                    z.jsx)("img", {
                                        src: "Media/Game/Icons/MapMarker.svg",
                                        className: sme.thumb
                                    }), (0,
                                    z.jsx)("div", {
                                        className: sme.label,
                                        children: t ? (0,
                                        z.jsx)(_c.SelectedInfoPanel.UNFOCUS_UPGRADE, {}) : (0,
                                        z.jsx)(_c.SelectedInfoPanel.FOCUS_UPGRADE, {})
                                    })]
                                })
                            }), a && (0,
                            z.jsx)(ume, {
                                onChange: a,
                                children: (0,
                                z.jsxs)("div", {
                                    className: sme.item,
                                    children: [(0,
                                    z.jsx)("img", {
                                        src: "Media/Game/Icons/Relocate.svg",
                                        className: sme.thumb
                                    }), (0,
                                    z.jsx)("div", {
                                        className: sme.label,
                                        children: (0,
                                        z.jsx)(_c.SelectedInfoPanel.RELOCATE_UPGRADE, {})
                                    })]
                                })
                            }), (0,
                            z.jsx)(ume, {
                                onChange: s,
                                children: (0,
                                z.jsxs)("div", {
                                    className: sme.item,
                                    children: [(0,
                                    z.jsx)(Z_, {
                                        src: "Media/Glyphs/OnOff.svg",
                                        className: sme.thumb
                                    }), (0,
                                    z.jsx)("div", {
                                        className: sme.label,
                                        children: e ? (0,
                                        z.jsx)(_c.SelectedInfoPanel.REACTIVATE_UPGRADE, {}) : (0,
                                        z.jsx)(_c.SelectedInfoPanel.DEACTIVATE_UPGRADE, {})
                                    })]
                                })
                            }), (0,
                            z.jsx)(ume, {
                                onChange: i,
                                children: (0,
                                z.jsxs)("div", {
                                    className: sme.item,
                                    children: [(0,
                                    z.jsx)(Z_, {
                                        src: "Media/Glyphs/Trash.svg",
                                        className: sme.thumb
                                    }), (0,
                                    z.jsx)("div", {
                                        className: sme.label,
                                        children: (0,
                                        z.jsx)(_c.SelectedInfoPanel.REMOVE_UPGRADE, {})
                                    })]
                                })
                            })]
                        }),
                        children: (0,
                        z.jsx)(xS, {
                            sounds: rme,
                            className: sme.dropdown,
                            children: (0,
                            z.jsx)(Z_, {
                                src: "Media/Glyphs/Gear.svg",
                                className: sme.toolIcon
                            })
                        })
                    })
                })]
            })
        }
          , ume = ({focusKey: e, children: t, onChange: n})=>{
            const [s,i] = (0,
            Y.useState)(!1)
              , a = Dm();
            return (0,
            z.jsx)(Ah, {
                onFocusChange: i,
                children: (0,
                z.jsxs)(bS, {
                    value: n,
                    onChange: n,
                    focusKey: e,
                    className: Zu()(a && sme.padRight, a && !s && sme.padLeft, sme.dropdownItem),
                    children: [(0,
                    z.jsx)(UT, {
                        action: "Select",
                        active: s,
                        className: sme.dropdownItemHint
                    }), t]
                })
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/upgrades-section/upgrades-section.tsx", {
            get UpgradesSection() {
                return ime
            },
            set UpgradesSection(e) {
                ime = e
            }
        });
        var dme = Y.memo((function({group: e, tooltipTags: t, tooltipKeys: n, upkeeps: s, total: i, inactive: a}) {
            const o = tO(e, n, t)
              , r = bq()
              , l = (0,
            Y.useCallback)((t=>{
                r.setState(e, t)
            }
            ), [e, r])
              , c = (0,
            Y.useMemo)((()=>r.getState(e, !0)), [e, r]);
            return (0,
            z.jsxs)(GS, {
                initialExpanded: c,
                onToggleExpanded: l,
                header: (0,
                z.jsx)(KS, {
                    uppercase: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.UPKEEP, {}),
                    right: !c && (0,
                    z.jsx)(Oc, {
                        value: i,
                        unit: vc.MoneyPerMonth
                    })
                }),
                tooltip: o && (0,
                z.jsx)(Cb, {
                    children: o
                }),
                children: [s.map(((e,t)=>(0,
                z.jsx)(KS, {
                    disableFocus: !0,
                    left: mme(e, a),
                    right: (0,
                    z.jsx)(Oc, {
                        value: e.price,
                        unit: vc.MoneyPerMonth
                    })
                }, t))), c && (0,
                z.jsx)(KS, {
                    disableFocus: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.UPKEEP_TOTAL, {}),
                    right: (0,
                    z.jsx)(Oc, {
                        value: i,
                        unit: vc.MoneyPerMonth
                    })
                })]
            })
        }
        ), ((e,t)=>Kr(e, t, 10)));
        function mme(e, t) {
            return "Money" === e.localeKey ? 0 === e.titleId.length ? (0,
            z.jsx)(_c.SelectedInfoPanel.WAGES, {}) : t ? e.count > 1 ? (0,
            z.jsx)(_c.SelectedInfoPanel.UPKEEP_MAINTENANCE_INACTIVE_COMBINED, {
                BUILDING: (0,
                z.jsx)(cc, {
                    id: e.titleId
                }),
                AMOUNT: (0,
                z.jsx)(Oc, {
                    value: e.count
                })
            }) : (0,
            z.jsx)(_c.SelectedInfoPanel.UPKEEP_MAINTENANCE_INACTIVE, {
                BUILDING: (0,
                z.jsx)(cc, {
                    id: e.titleId
                })
            }) : e.count > 1 ? (0,
            z.jsx)(_c.SelectedInfoPanel.UPKEEP_MAINTENANCE_COMBINED, {
                BUILDING: (0,
                z.jsx)(cc, {
                    id: e.titleId
                }),
                AMOUNT: (0,
                z.jsx)(Oc, {
                    value: e.count
                })
            }) : (0,
            z.jsx)(_c.SelectedInfoPanel.UPKEEP_MAINTENANCE, {
                BUILDING: (0,
                z.jsx)(cc, {
                    id: e.titleId
                })
            }) : (0,
            z.jsx)(_c.SelectedInfoPanel.UPKEEPFORMAT, {
                RESOURCE: (0,
                z.jsx)(_c.Resources.TITLE, {
                    hash: e.localeKey
                }),
                AMOUNT: (0,
                z.jsx)(Oc, {
                    value: e.amount,
                    unit: hme(e.localeKey)
                })
            })
        }
        function hme(e) {
            switch (e) {
            case "Telecom":
            case "Financial":
            case "Media":
            case "Entertainment":
            case "Recreation":
                return vc.Integer;
            default:
                return vc.Weight
            }
        }
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/upkeep-section.tsx", {
            get UpkeepSection() {
                return dme
            },
            set UpkeepSection(e) {
                dme = e
            }
        });
        var gme = ({group: e, tooltipTags: t, tooltipKeys: n, capacity: s, lastProduction: i, pollution: a})=>{
            const o = tO(e, n, t)
              , r = i > 0 && s > 0 ? Od(100 * i / s, 1, 100) : 0;
            return (0,
            z.jsxs)(yS, {
                tooltip: o && (0,
                z.jsx)(Cb, {
                    text: o
                }),
                children: [(0,
                z.jsx)(KS, {
                    uppercase: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.WATER_OUTPUT, {}),
                    right: (0,
                    z.jsx)(Oc, {
                        value: s,
                        unit: vc.VolumePerMonth
                    })
                }), (0,
                z.jsx)(KS, {
                    disableFocus: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.WATER_PUMP_USAGE, {}),
                    right: (0,
                    z.jsx)(Oc, {
                        value: r,
                        unit: vc.Percentage
                    })
                }), (0,
                z.jsx)(KS, {
                    disableFocus: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.WATER_PUMP_POLLUTION, {}),
                    right: (0,
                    z.jsx)($u, {
                        value: a,
                        max: 1
                    })
                })]
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/water-section.tsx", {
            get WaterSection() {
                return gme
            },
            set WaterSection(e) {
                gme = e
            }
        });
        var pme = ({group: e, tooltipKeys: t, tooltipTags: n, typeKey: s, owner: i, ownerEntity: a, destination: o, destinationEntity: r})=>{
            const l = (0,
            Y.useCallback)((()=>a && Yw(a)), [a])
              , c = (0,
            Y.useCallback)((()=>r && Yw(r)), [r])
              , u = tO(e, t, n, !0);
            return (0,
            z.jsx)(yS, {
                disableFocus: !0,
                tooltip: u && (0,
                z.jsx)(Cb, {
                    text: u
                }),
                children: (0,
                z.jsxs)(np, {
                    children: [(0,
                    z.jsx)(KS, {
                        uppercase: !0,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.ANIMAL_TYPE, {
                            hash: s
                        })
                    }), null != i && (0,
                    z.jsx)(KS, {
                        subRow: !0,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.OWNED_BY, {}),
                        link: (0,
                        z.jsx)(tde, {
                            onSelect: l,
                            children: (0,
                            z.jsx)(Ku, {
                                value: i
                            })
                        })
                    }), null != o && (0,
                    z.jsx)(KS, {
                        subRow: !0,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.DESTINATION, {}),
                        link: (0,
                        z.jsx)(tde, {
                            onSelect: c,
                            children: (0,
                            z.jsx)(Ku, {
                                value: o
                            })
                        })
                    })]
                })
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/citizen-sections/animal-section.tsx", {
            get AnimalSection() {
                return pme
            },
            set AnimalSection(e) {
                pme = e
            }
        });
        var fme = ({citizenKey: e, stateKey: t, household: n, householdEntity: s, residence: i, residenceEntity: a, residenceKey: o, workplace: r, workplaceEntity: l, workplaceKey: c, schoolLevel: u, tooltipTags: d, school: m, schoolEntity: h, destination: g, destinationEntity: p, educationKey: f, ageKey: x, wealthKey: v, occupationKey: _, jobLevelKey: b})=>{
            const T = (0,
            Y.useCallback)((()=>s && Yw(s)), [s])
              , E = (0,
            Y.useCallback)((()=>a && Yw(a)), [a])
              , I = (0,
            Y.useCallback)((()=>l && Yw(l)), [l])
              , S = (0,
            Y.useCallback)((()=>h && Yw(h)), [h])
              , y = (0,
            Y.useCallback)((()=>p && Yw(p)), [p])
              , j = eO(["CitizenSectionOccupation", "Unknown" !== b ? "CitizenSectionJobTitle" : null])
              , C = d.includes("Male");
            return (0,
            z.jsxs)(z.Fragment, {
                children: [(0,
                z.jsxs)(yS, {
                    disableFocus: null != m,
                    tooltip: (0,
                    z.jsx)(Cb, {
                        children: (0,
                        z.jsx)(_c.SelectedInfoPanel.TOOLTIP, {
                            hash: "CitizenSection" + e
                        })
                    }),
                    children: [(0,
                    z.jsx)(KS, {
                        uppercase: !0,
                        disableFocus: null == m,
                        left: C ? (0,
                        z.jsx)(_c.SelectedInfoPanel.CITIZEN_TYPE_MALE, {
                            hash: e
                        }) : (0,
                        z.jsx)(_c.SelectedInfoPanel.CITIZEN_TYPE_FEMALE, {
                            hash: e
                        }),
                        right: C ? (0,
                        z.jsx)(_c.SelectedInfoPanel.CITIZEN_STATE_MALE, {
                            hash: t
                        }) : (0,
                        z.jsx)(_c.SelectedInfoPanel.CITIZEN_STATE_FEMALE, {
                            hash: t
                        })
                    }), (0,
                    z.jsx)(KS, {
                        subRow: !0,
                        disableFocus: null == m,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.CITIZEN_AGE_TITLE, {}),
                        right: C ? (0,
                        z.jsx)(_c.SelectedInfoPanel.CITIZEN_AGE_MALE, {
                            hash: x
                        }) : (0,
                        z.jsx)(_c.SelectedInfoPanel.CITIZEN_AGE_FEMALE, {
                            hash: x
                        })
                    }), (0,
                    z.jsx)(KS, {
                        subRow: !0,
                        disableFocus: null == m,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.CITIZEN_EDUCATION_TITLE, {}),
                        right: C ? (0,
                        z.jsx)(_c.SelectedInfoPanel.CITIZEN_EDUCATION_MALE, {
                            hash: f
                        }) : (0,
                        z.jsx)(_c.SelectedInfoPanel.CITIZEN_EDUCATION_FEMALE, {
                            hash: f
                        })
                    }), null != m && (0,
                    z.jsx)(KS, {
                        subRow: !0,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.CITIZEN_SCHOOL_TITLE, {
                            index: u
                        }),
                        link: (0,
                        z.jsx)(tde, {
                            onSelect: S,
                            children: (0,
                            z.jsx)(Ku, {
                                value: m
                            })
                        })
                    })]
                }), (0,
                z.jsx)(yS, {
                    disableFocus: !0,
                    tooltip: (0,
                    z.jsx)(Cb, {
                        children: (0,
                        z.jsx)(_c.SelectedInfoPanel.TOOLTIP, {
                            hash: "CitizenSectionHousehold" + e
                        })
                    }),
                    children: (0,
                    z.jsxs)(np, {
                        direction: kg.Vertical,
                        children: [null != n && (0,
                        z.jsx)(KS, {
                            uppercase: !0,
                            left: (0,
                            z.jsx)(_c.SelectedInfoPanel.CITIZEN_HOUSEHOLD, {}),
                            link: (0,
                            z.jsx)(tde, {
                                onSelect: T,
                                children: (0,
                                z.jsx)(Ku, {
                                    value: n
                                })
                            })
                        }), (0,
                        z.jsx)(KS, {
                            subRow: !0,
                            left: (0,
                            z.jsx)(_c.SelectedInfoPanel.CITIZEN_WEALTH_TITLE, {}),
                            right: C ? (0,
                            z.jsx)(_c.SelectedInfoPanel.CITIZEN_WEALTH_MALE, {
                                hash: v
                            }) : (0,
                            z.jsx)(_c.SelectedInfoPanel.CITIZEN_WEALTH_FEMALE, {
                                hash: v
                            })
                        }), null != i && (0,
                        z.jsx)(KS, {
                            subRow: !0,
                            left: (0,
                            z.jsx)(_c.SelectedInfoPanel.CITIZEN_RESIDENCE, {
                                hash: o
                            }),
                            link: (0,
                            z.jsx)(tde, {
                                onSelect: E,
                                children: (0,
                                z.jsx)(Ku, {
                                    value: i
                                })
                            })
                        })]
                    })
                }), "Tourist" !== _ && (0,
                z.jsxs)(yS, {
                    disableFocus: null != r,
                    tooltip: null != j && (0,
                    z.jsx)(Cb, {
                        children: j
                    }),
                    children: [(0,
                    z.jsx)(KS, {
                        uppercase: !0,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.CITIZEN_OCCUPATION_TITLE, {}),
                        right: C ? (0,
                        z.jsx)(_c.SelectedInfoPanel.CITIZEN_OCCUPATION_MALE, {
                            hash: _
                        }) : (0,
                        z.jsx)(_c.SelectedInfoPanel.CITIZEN_OCCUPATION_FEMALE, {
                            hash: _
                        })
                    }), "Unknown" !== b && (0,
                    z.jsx)(KS, {
                        subRow: !0,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.CITIZEN_JOB_TITLE, {}),
                        right: (0,
                        z.jsx)(_c.SelectedInfoPanel.CITIZEN_JOB_LEVEL, {
                            hash: b
                        })
                    }), null != r && (0,
                    z.jsx)(KS, {
                        subRow: !0,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.CITIZEN_WORKPLACE, {
                            hash: c
                        }),
                        link: (0,
                        z.jsx)(tde, {
                            onSelect: I,
                            children: (0,
                            z.jsx)(Ku, {
                                value: r
                            })
                        })
                    })]
                }), null != g && (0,
                z.jsx)(yS, {
                    disableFocus: !0,
                    tooltip: (0,
                    z.jsx)(Cb, {
                        children: (0,
                        z.jsx)(_c.SelectedInfoPanel.TOOLTIP, {
                            hash: "CitizenSectionDestination"
                        })
                    }),
                    children: (0,
                    z.jsx)(KS, {
                        uppercase: !0,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.DESTINATION, {}),
                        link: (0,
                        z.jsx)(tde, {
                            onSelect: y,
                            children: (0,
                            z.jsx)(Ku, {
                                value: g
                            })
                        })
                    })
                })]
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/citizen-sections/citizen-section.tsx", {
            get CitizenSection() {
                return fme
            },
            set CitizenSection(e) {
                fme = e
            }
        });
        var xme = ({group: e, tooltipKeys: t, tooltipTags: n, origin: s, originEntity: i, destination: a, destinationEntity: o})=>{
            const r = (0,
            Y.useCallback)((()=>i && Yw(i)), [i])
              , l = (0,
            Y.useCallback)((()=>o && Yw(o)), [o])
              , c = tO(e, t, n, !0);
            return (0,
            z.jsx)(yS, {
                disableFocus: !0,
                tooltip: c && (0,
                z.jsx)(Cb, {
                    text: c
                }),
                children: (0,
                z.jsxs)(np, {
                    children: [null != s && (0,
                    z.jsx)(KS, {
                        subRow: !0,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.ORIGIN, {}),
                        link: (0,
                        z.jsx)(tde, {
                            onSelect: r,
                            children: (0,
                            z.jsx)(Ku, {
                                value: s
                            })
                        })
                    }), null != a && (0,
                    z.jsx)(KS, {
                        subRow: !0,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.DESTINATION, {}),
                        link: (0,
                        z.jsx)(tde, {
                            onSelect: l,
                            children: (0,
                            z.jsx)(Ku, {
                                value: a
                            })
                        })
                    })]
                })
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/citizen-sections/dummy-human-section.tsx", {
            get DummyHumanSection() {
                return xme
            },
            set DummyHumanSection(e) {
                xme = e
            }
        });
        let vme = {
            notification: "notification_CLy item-focused_FuT",
            "full-width": "full-width_Qk1",
            fullWidth: "full-width_Qk1",
            icon: "icon_UMr",
            label: "label_RLF",
            badge: "badge_ooc",
            "badge-icon": "badge-icon_ubF",
            badgeIcon: "badge-icon_ubF"
        };
        X.add("game-ui/game/components/selected-info-panel/shared-components/notification/notification.module.scss", {
            get classes() {
                return vme
            },
            set classes(e) {
                Object.assign(vme, e)
            }
        });
        const _me = vme;
        var bme = ({notification: e, anchorElRef: t})=>(0,
        z.jsx)(Eg, {
            direction: "right",
            alignment: "center",
            anchorElRef: t,
            tooltip: (0,
            z.jsx)(Cb, {
                children: (0,
                z.jsx)(_c.Notifications.DESCRIPTION, {
                    hash: e.key
                })
            }),
            children: (0,
            z.jsxs)(Sp, {
                className: Zu()(_me.notification, _me.fullWidth),
                children: [(0,
                z.jsx)("img", {
                    src: e.iconPath,
                    className: _me.icon
                }), (0,
                z.jsxs)("div", {
                    className: _me.label,
                    children: [(0,
                    z.jsx)(_c.Notifications.TITLE, {
                        hash: e.key
                    }), e.count > 1 && (0,
                    z.jsx)(yme, {
                        className: _me.badge,
                        children: (0,
                        z.jsx)(Oc, {
                            value: e.count
                        })
                    })]
                })]
            })
        })
          , Tme = ({notification: e, anchorElRef: t, tooltipTags: n})=>{
            const s = n?.includes("Male");
            return (0,
            z.jsx)(z.Fragment, {
                children: (0,
                z.jsx)(Eg, {
                    direction: "right",
                    alignment: "center",
                    anchorElRef: t,
                    tooltip: (0,
                    z.jsx)(Cb, {
                        children: (0,
                        z.jsx)(_c.SelectedInfoPanel.CITIZEN_HAPPINESS_DESCRIPTION, {
                            hash: e.key
                        })
                    }),
                    children: (0,
                    z.jsxs)(Sp, {
                        className: _me.notification,
                        children: [(0,
                        z.jsx)("img", {
                            src: e.iconPath,
                            className: _me.icon
                        }), (0,
                        z.jsx)("div", {
                            className: _me.label,
                            children: s ? (0,
                            z.jsx)(_c.SelectedInfoPanel.CITIZEN_HAPPINESS_TITLE_MALE, {
                                hash: e.key
                            }) : (0,
                            z.jsx)(_c.SelectedInfoPanel.CITIZEN_HAPPINESS_TITLE_FEMALE, {
                                hash: e.key
                            })
                        })]
                    })
                })
            })
        }
          , Eme = ({notification: e})=>(0,
        z.jsxs)(Sp, {
            className: _me.notification,
            children: [(0,
            z.jsx)("img", {
                src: e.iconPath,
                className: _me.icon
            }), (0,
            z.jsx)("div", {
                className: _me.label,
                children: (0,
                z.jsx)(_c.SelectedInfoPanel.CITIZEN_HAPPINESS_TITLE, {
                    hash: e.key
                })
            })]
        })
          , Ime = ({notification: e})=>(0,
        z.jsxs)(Sp, {
            className: _me.notification,
            children: [(0,
            z.jsx)("img", {
                src: e.iconPath,
                className: _me.icon
            }), (0,
            z.jsx)("div", {
                className: _me.label,
                children: (0,
                z.jsx)(_c.SelectedInfoPanel.COMPANY_PROFITABILITY_TITLE, {
                    hash: e.key
                })
            })]
        })
          , Sme = ({notification: e, anchorElRef: t, tooltipTags: n})=>{
            const s = n?.includes("Male");
            return (0,
            z.jsx)(z.Fragment, {
                children: (0,
                z.jsx)(Eg, {
                    direction: "right",
                    alignment: "center",
                    anchorElRef: t,
                    tooltip: (0,
                    z.jsx)(Cb, {
                        children: (0,
                        z.jsx)(_c.SelectedInfoPanel.CITIZEN_CONDITION_DESCRIPTION, {
                            hash: e.key
                        })
                    }),
                    children: (0,
                    z.jsxs)(Sp, {
                        className: _me.notification,
                        children: [(0,
                        z.jsx)("img", {
                            src: e.iconPath,
                            className: _me.icon
                        }), (0,
                        z.jsx)("div", {
                            className: _me.label,
                            children: s ? (0,
                            z.jsx)(_c.SelectedInfoPanel.CITIZEN_CONDITION_TITLE_MALE, {
                                hash: e.key
                            }) : (0,
                            z.jsx)(_c.SelectedInfoPanel.CITIZEN_CONDITION_TITLE_FEMALE, {
                                hash: e.key
                            })
                        })]
                    })
                })
            })
        }
          , yme = ({className: e, children: t})=>(0,
        z.jsxs)("div", {
            className: Zu()(_me.badge, e),
            children: [t, (0,
            z.jsx)(Z_, {
                src: "Media/Game/Icons/Citizen.svg",
                className: _me.badgeIcon
            })]
        });
        X.add("game-ui/game/components/selected-info-panel/shared-components/notification/notification.tsx", {
            get Notification() {
                return bme
            },
            set Notification(e) {
                bme = e
            },
            get HappinessNotification() {
                return Tme
            },
            set HappinessNotification(e) {
                Tme = e
            },
            get AverageHappinessNotification() {
                return Eme
            },
            set AverageHappinessNotification(e) {
                Eme = e
            },
            get ProfitabilityNotification() {
                return Ime
            },
            set ProfitabilityNotification(e) {
                Ime = e
            },
            get ConditionNotification() {
                return Sme
            },
            set ConditionNotification(e) {
                Sme = e
            },
            get NotificationBadge() {
                return yme
            },
            set NotificationBadge(e) {
                yme = e
            }
        });
        let jme = {
            "status-section": "status-section_J1G notifications-section_cKq",
            statusSection: "status-section_J1G notifications-section_cKq",
            row: "row_Azp",
            bottom: "bottom_Xm5"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/citizen-sections/status-section.module.scss", {
            get classes() {
                return jme
            },
            set classes(e) {
                Object.assign(jme, e)
            }
        });
        const Cme = jme;
        var Nme = ({conditions: e, notifications: t, happiness: n, focusKey: s, tooltipTags: i})=>{
            const a = (0,
            Y.useRef)(null);
            return (0,
            z.jsx)(Sp, {
                ref: a,
                focusKey: s,
                className: Cme.statusSection,
                children: (0,
                z.jsxs)(np, {
                    children: [(0,
                    z.jsxs)("div", {
                        className: Zu()(Cme.row, Cme.top),
                        children: [n && (0,
                        z.jsx)(Tme, {
                            anchorElRef: a,
                            notification: n,
                            tooltipTags: i
                        }), e?.length > 0 && e?.map((e=>(0,
                        z.jsx)(Sme, {
                            anchorElRef: a,
                            notification: e,
                            tooltipTags: i
                        }, e.key)))]
                    }), t?.length > 0 && t?.map(((e,t)=>(0,
                    z.jsx)("div", {
                        className: Zu()(Cme.row, Cme.bottom),
                        children: (0,
                        z.jsx)(bme, {
                            anchorElRef: a,
                            notification: e,
                            tooltipTags: i
                        })
                    }, t)))]
                })
            })
        }
        ;
        function wme(e) {
            tl("ColorSection", "setColor", Vu(e, "Game.UI.Common.UIColor"))
        }
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/citizen-sections/status-section.tsx", {
            get StatusSection() {
                return Nme
            },
            set StatusSection(e) {
                Nme = e
            }
        }),
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/color-section/color-section-bindings.ts", {
            get setColor() {
                return wme
            },
            set setColor(e) {
                wme = e
            }
        });
        var Ome = ({group: e, tooltipTags: t, tooltipKeys: n, color: s})=>{
            const i = tO(e, n, t);
            return (0,
            z.jsx)(yS, {
                disableFocus: !0,
                tooltip: i && (0,
                z.jsx)(Cb, {
                    text: i
                }),
                children: (0,
                z.jsx)(KS, {
                    uppercase: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.COLOR, {}),
                    right: (0,
                    z.jsx)(v1, {
                        value: s,
                        onChange: wme,
                        className: jle.colorField
                    })
                })
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/color-section/color-section.tsx", {
            get ColorSection() {
                return Ome
            },
            set ColorSection(e) {
                Ome = e
            }
        });
        var Pme = el("LinesSection", "toggle");
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/lines-section/lines-section-bindings.ts", {
            get toggleRouteActive() {
                return Pme
            },
            set toggleRouteActive(e) {
                Pme = e
            }
        });
        let Lme = {
            detail: "detail_dEX item-focused_FuT",
            color: "color_YMp",
            toggle: "toggle_MTW",
            button: "button_UgX item-mouse-states_Fmi item-focused_FuT",
            row: "row_aZw",
            "focusable-toggle": "focusable-toggle_EKK",
            focusableToggle: "focusable-toggle_EKK",
            "space-between": "space-between_r5l",
            spaceBetween: "space-between_r5l",
            icon: "icon_BuO icon_hE2",
            "toggle-icon": "toggle-icon_tCU",
            toggleIcon: "toggle-icon_tCU",
            "toggle-icon-off": "toggle-icon-off_pNM",
            toggleIconOff: "toggle-icon-off_pNM",
            "toggle-button": "toggle-button_lLq",
            toggleButton: "toggle-button_lLq"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/lines-section/lines-section.module.scss", {
            get classes() {
                return Lme
            },
            set classes(e) {
                Object.assign(Lme, e)
            }
        });
        const Ame = Lme;
        var Mme = ({group: e, tooltipTags: t, tooltipKeys: n, hasLines: s, lines: i, hasPassengers: a, passengers: o})=>{
            const r = tO(e, n, t, !0)
              , l = Dm();
            return (0,
            z.jsxs)(z.Fragment, {
                children: [a && (0,
                z.jsx)(yS, {
                    tooltip: (0,
                    z.jsx)(Cb, {
                        children: (0,
                        z.jsx)(_c.SelectedInfoPanel.TOOLTIP, {
                            hash: "LinesSectionWaitingPassengers"
                        })
                    }),
                    children: (0,
                    z.jsx)(KS, {
                        uppercase: !0,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.WAITING_PASSENGERS, {}),
                        right: (0,
                        z.jsx)(Oc, {
                            value: o,
                            unit: vc.Integer
                        })
                    })
                }), s && (0,
                z.jsxs)(yS, {
                    disableFocus: !0,
                    tooltip: r && (0,
                    z.jsx)(Cb, {
                        text: r
                    }),
                    children: [(0,
                    z.jsx)(KS, {
                        uppercase: !0,
                        disableFocus: !!i.length,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.LINES, {}),
                        right: i.length
                    }), (0,
                    z.jsx)(Sp, {
                        children: (0,
                        z.jsx)(np, {
                            children: i && i.length > 0 && i.map(((e,t)=>(0,
                            z.jsx)(Rme, {
                                line: e
                            }, t)))
                        })
                    }), l && (0,
                    z.jsx)(que, {
                        label: (0,
                        z.jsx)(_c.Transport.LINES_OVERVIEW_BUTTON, {}),
                        onSelect: a_
                    })]
                })]
            })
        }
          , Rme = ({line: e})=>{
            const t = sl(zw)
              , n = (0,
            Y.useMemo)((()=>Ur(e.entity, t)), [e.entity, t])
              , s = (0,
            Y.useCallback)((()=>Yw(e.entity)), [e.entity])
              , i = (0,
            Y.useCallback)((()=>$w(e.entity)), [e.entity])
              , a = (0,
            Y.useCallback)((()=>Pme(e.entity, !e.active)), [e.active, e.entity])
              , o = (0,
            Y.useMemo)((()=>({
                Select: s,
                "Select Route": i
            })), [s, i])
              , r = Dm();
            return (0,
            z.jsx)(Ip, {
                className: Zu()(Ame.detail, Ame.row, Ame.spaceBetween),
                children: (0,
                z.jsx)(Mg, {
                    actions: o,
                    children: (0,
                    z.jsxs)(np, {
                        children: [(0,
                        z.jsxs)("div", {
                            className: Zu()(Ame.focusableToggle, Ame.row),
                            children: [(0,
                            z.jsx)(P7, {
                                focusKey: Sg,
                                className: Ame.toggle,
                                onChange: i,
                                checked: n,
                                style: {
                                    borderColor: xN(e.color)
                                }
                            }), (0,
                            z.jsx)(Ku, {
                                value: e.name
                            })]
                        }), !r && (0,
                        z.jsxs)(U_, {
                            onSelect: s,
                            onClick: Db,
                            className: Ame.button,
                            children: [(0,
                            z.jsx)("img", {
                                src: "Media/Glyphs/ViewInfo.svg",
                                className: Ame.icon
                            }), (0,
                            z.jsx)(_c.SelectedInfoPanel.DETAILS, {})]
                        }), (0,
                        z.jsx)(U_, {
                            className: Zu()(Ame.button, Ame.toggleButton),
                            onSelect: a,
                            onClick: Db,
                            children: (0,
                            z.jsx)(Z_, {
                                src: "Media/Glyphs/OnOff.svg",
                                className: Zu()(Ame.toggleIcon, !e.active && Ame.toggleIconOff)
                            })
                        })]
                    })
                })
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/lines-section/lines-section.tsx", {
            get LinesSection() {
                return Mme
            },
            set LinesSection(e) {
                Mme = e
            },
            get LineItem() {
                return Rme
            },
            set LineItem(e) {
                Rme = e
            }
        });
        var kme = ({group: e, tooltipTags: t, tooltipKeys: n, localServiceBuildings: s})=>{
            const i = tO(e, n, t);
            return (0,
            z.jsxs)(yS, {
                disableFocus: s.length > 0,
                tooltip: i && (0,
                z.jsx)(Cb, {
                    text: i
                }),
                children: [(0,
                z.jsx)(KS, {
                    uppercase: !0,
                    disableFocus: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.LOCAL_SERVICES_TITLE, {}),
                    right: s.length
                }), s.length > 0 ? (0,
                z.jsx)(np, {
                    children: s.map(((e,t)=>(0,
                    z.jsx)(Dme, {
                        building: e
                    }, t)))
                }) : (0,
                z.jsx)(KS, {
                    subRow: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.LOCAL_SERVICES_NONE_ASSIGNED, {})
                })]
            })
        }
        ;
        const Dme = ({building: e})=>{
            const t = (0,
            Y.useCallback)((()=>Yw(e.entity)), [e]);
            return (0,
            z.jsx)(KS, {
                subRow: !0,
                icon: e.serviceIcon ?? void 0,
                left: (0,
                z.jsx)(Ku, {
                    value: e.name
                }),
                link: (0,
                z.jsx)(tde, {
                    onSelect: t,
                    children: (0,
                    z.jsx)(_c.SelectedInfoPanel.DETAILS, {})
                })
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/local-services-section/local-services-section.tsx", {
            get LocalServicesSection() {
                return kme
            },
            set LocalServicesSection(e) {
                kme = e
            }
        });
        var Fme = ({group: e, tooltipKeys: t, tooltipTags: n, destroyer: s})=>{
            const i = tO(e, t, n);
            return (0,
            z.jsxs)(yS, {
                tooltip: i && (0,
                z.jsx)(Cb, {
                    text: i
                }),
                children: [(0,
                z.jsx)(KS, {
                    uppercase: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.DESTROYED_TREE, {})
                }), null != s && (0,
                z.jsx)(Kue, {
                    children: (0,
                    z.jsx)(Cb, {
                        children: (0,
                        z.jsx)(_c.SelectedInfoPanel.DESTROYED_TREE_DESCRIPTION, {
                            hash: s
                        })
                    })
                })]
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/object-sections/destroyed-tree-section.tsx", {
            get DestroyedTreeSection() {
                return Fme
            },
            set DestroyedTreeSection(e) {
                Fme = e
            }
        });
        var Ume = ({group: e, tooltipKeys: t, tooltipTags: n, resourceAmount: s, resourceKey: i})=>{
            const a = tO(e, t, n);
            return (0,
            z.jsx)(yS, {
                tooltip: a && (0,
                z.jsx)(Cb, {
                    text: a
                }),
                children: (0,
                z.jsx)(KS, {
                    uppercase: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.RESOURCE, {
                        hash: i
                    }),
                    right: s
                })
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/resource-section.tsx", {
            get ResourceSection() {
                return Ume
            },
            set ResourceSection(e) {
                Ume = e
            }
        });
        let Bme = {
            "border-highlight": "border-highlight_ze2",
            borderHighlight: "border-highlight_ze2"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/road-section/road-section.module.scss", {
            get classes() {
                return Bme
            },
            set classes(e) {
                Object.assign(Bme, e)
            }
        });
        const Gme = Bme;
        var Vme = ({volumeData: e, flowData: t, length: n, bestCondition: s, worstCondition: i, condition: a, upkeep: o})=>{
            const r = Jw("RoadSectionLength")
              , l = Jw("RoadSectionCondition")
              , c = Jw("RoadSectionUpkeep")
              , u = Jw("RoadSectionFlow")
              , d = Jw("RoadSectionVolume");
            return (0,
            z.jsxs)(z.Fragment, {
                children: [(0,
                z.jsx)(yS, {
                    tooltip: c && (0,
                    z.jsx)(Cb, {
                        text: c
                    }),
                    children: (0,
                    z.jsx)(KS, {
                        uppercase: !0,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.ROAD_UPKEEP, {}),
                        right: (0,
                        z.jsx)(Oc, {
                            value: o,
                            unit: vc.MoneyPerMonth
                        })
                    })
                }), (0,
                z.jsx)(yS, {
                    tooltip: r && (0,
                    z.jsx)(Cb, {
                        text: r
                    }),
                    children: (0,
                    z.jsx)(KS, {
                        uppercase: !0,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.ROAD_LENGTH, {}),
                        right: (0,
                        z.jsx)(Oc, {
                            value: n,
                            unit: vc.Length
                        })
                    })
                }), (0,
                z.jsx)(yS, {
                    tooltip: l && (0,
                    z.jsx)(Cb, {
                        text: l
                    }),
                    children: (0,
                    z.jsx)(KS, {
                        uppercase: !0,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.ROAD_CONDITION, {}),
                        right: s === a || i === s || a === s ? (0,
                        z.jsx)(Oc, {
                            value: s,
                            unit: vc.Percentage
                        }) : (0,
                        z.jsx)(_c.SelectedInfoPanel.ROAD_CONDITION_FORMAT, {
                            WORST: (0,
                            z.jsx)(Oc, {
                                value: i,
                                unit: vc.Percentage
                            }),
                            BEST: (0,
                            z.jsx)(Oc, {
                                value: s,
                                unit: vc.Percentage
                            }),
                            AVG: (0,
                            z.jsx)(Oc, {
                                value: a,
                                unit: vc.Percentage
                            })
                        })
                    })
                }), (0,
                z.jsx)(yS, {
                    disableFocus: !0,
                    tooltip: u && (0,
                    z.jsx)(Cb, {
                        text: u
                    }),
                    children: (0,
                    z.jsxs)(Sp, {
                        className: Gme.borderHighlight,
                        children: [(0,
                        z.jsx)(KS, {
                            uppercase: !0,
                            disableFocus: !0,
                            left: (0,
                            z.jsx)(_c.SelectedInfoPanel.ROAD_TRAFFIC_FLOW, {})
                        }), (0,
                        z.jsx)(o8, {
                            data: t
                        })]
                    })
                }), (0,
                z.jsx)(yS, {
                    disableFocus: !0,
                    tooltip: d && (0,
                    z.jsx)(Cb, {
                        text: d
                    }),
                    children: (0,
                    z.jsxs)(Sp, {
                        className: Gme.borderHighlight,
                        children: [(0,
                        z.jsx)(KS, {
                            uppercase: !0,
                            disableFocus: !0,
                            left: (0,
                            z.jsx)(_c.SelectedInfoPanel.ROAD_TRAFFIC_VOLUME, {})
                        }), (0,
                        z.jsx)(a8, {
                            data: e
                        })]
                    })
                })]
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/road-section/road-section.tsx", {
            get RoadSection() {
                return Vme
            },
            set RoadSection(e) {
                Vme = e
            }
        });
        var Hme = ({group: e, tooltipKeys: t, tooltipTags: n, stops: s, length: i, usage: a, cargo: o})=>{
            const r = Dm()
              , l = tO(e, t, n, !0)
              , c = sl(Ww).includes("CargoRoute");
            return (0,
            z.jsx)(z.Fragment, {
                children: (0,
                z.jsxs)(yS, {
                    disableFocus: !0,
                    tooltip: l && (0,
                    z.jsx)(Cb, {
                        text: l
                    }),
                    children: [(0,
                    z.jsx)(KS, {
                        uppercase: !0,
                        disableFocus: !0,
                        left: c ? (0,
                        z.jsx)(_c.SelectedInfoPanel.CARGO_TRANSPORT_ROUTE, {}) : (0,
                        z.jsx)(_c.SelectedInfoPanel.PUBLIC_TRANSPORT_LINE, {})
                    }), (0,
                    z.jsx)(KS, {
                        subRow: !0,
                        disableFocus: !0,
                        right: (0,
                        z.jsx)(Oc, {
                            value: i,
                            unit: vc.Length
                        }),
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.LINE_VISUALIZER_LENGTH, {})
                    }), (0,
                    z.jsx)(KS, {
                        subRow: !0,
                        disableFocus: !0,
                        right: (0,
                        z.jsx)(Oc, {
                            value: s,
                            unit: vc.Integer
                        }),
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.LINE_VISUALIZER_STOPS, {})
                    }), (0,
                    z.jsx)(KS, {
                        subRow: !0,
                        disableFocus: !0,
                        right: (0,
                        z.jsx)(Oc, {
                            value: o,
                            unit: c ? vc.Weight : vc.Integer
                        }),
                        left: c ? (0,
                        z.jsx)(_c.Transport.LEGEND_CARGO, {}) : (0,
                        z.jsx)(_c.SelectedInfoPanel.PASSENGERS_TITLE, {})
                    }), (0,
                    z.jsx)(KS, {
                        subRow: !0,
                        disableFocus: !0,
                        right: (0,
                        z.jsx)(Oc, {
                            value: 100 * a,
                            unit: vc.Percentage
                        }),
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.LINE_USAGE, {})
                    }), r && (0,
                    z.jsx)(que, {
                        label: (0,
                        z.jsx)(_c.Transport.LINES_OVERVIEW_BUTTON, {}),
                        onSelect: a_
                    })]
                })
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/route-sections/line-section.tsx", {
            get LineSection() {
                return Hme
            },
            set LineSection(e) {
                Hme = e
            }
        });
        let Kme = {
            button: "button_YEx item-states_QjV",
            "toggle-states": "toggle-states_oKG",
            toggleStates: "toggle-states_oKG",
            icon: "icon_vbQ",
            locked: "locked_Q0p"
        };
        X.add("game-ui/game/themes/primary-button.module.scss", {
            get classes() {
                return Kme
            },
            set classes(e) {
                Object.assign(Kme, e)
            }
        });
        const Wme = Kme;
        function zme(e) {
            tl("ScheduleSection", "setSchedule", e)
        }
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/route-sections/schedule-section/schedule-bindings.ts", {
            get setSchedule() {
                return zme
            },
            set setSchedule(e) {
                zme = e
            }
        });
        let Yme = {
            buttons: "buttons_XOL",
            button: "button_kxx",
            left: "left_X6Y",
            right: "right_IAC",
            icon: "icon_Sz0",
            hint: "hint_h1_"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/route-sections/schedule-section/schedule-section.module.scss", {
            get classes() {
                return Yme
            },
            set classes(e) {
                Object.assign(Yme, e)
            }
        });
        const $me = Yme;
        var qme = ({group: e, tooltipTags: t, tooltipKeys: n, schedule: s})=>{
            const i = (0,
            Y.useCallback)((()=>zme(0)), [])
              , a = (0,
            Y.useCallback)((()=>zme(1)), [])
              , o = (0,
            Y.useCallback)((()=>zme(2)), [])
              , r = tO(e, n, t, !0)
              , l = sl(Ww)
              , c = (0,
            Y.useMemo)((()=>l.includes("CargoRoute") ? "CargoRoute" : "TransportLine"), [l])
              , [u,d] = (0,
            Y.useState)(!1)
              , m = (0,
            Y.useMemo)((()=>({
                "Change Line Schedule": e=>{
                    if (0 !== e) {
                        const t = s + e > 2 ? 0 : s + e < 0 ? 2 : s + e;
                        t !== s && (zme(t),
                        cp(PA.drag))
                    }
                }
            })), [s]);
            return (0,
            z.jsx)(Mg, {
                actions: m,
                children: (0,
                z.jsx)(Ah, {
                    onFocusChange: d,
                    children: (0,
                    z.jsx)(yS, {
                        tooltip: r && (0,
                        z.jsx)(Cb, {
                            text: r
                        }),
                        children: (0,
                        z.jsx)(KS, {
                            uppercase: !0,
                            disableFocus: !0,
                            left: (0,
                            z.jsx)(_c.SelectedInfoPanel.SCHEDULE, {}),
                            right: (0,
                            z.jsxs)("div", {
                                className: $me.buttons,
                                children: [(0,
                                z.jsx)(UT, {
                                    action: "Change Line Schedule",
                                    active: u,
                                    className: $me.hint
                                }), (0,
                                z.jsxs)(np, {
                                    children: [(0,
                                    z.jsx)(Eg, {
                                        tooltip: (0,
                                        z.jsx)(_c.SelectedInfoPanel.SCHEDULE_DAY_TOOLTIP, {
                                            hash: c
                                        }),
                                        children: (0,
                                        z.jsx)(Xme, {
                                            icon: _le(0),
                                            onSelect: i,
                                            selected: 0 === s,
                                            className: Zu()($me.button, $me.left)
                                        })
                                    }), (0,
                                    z.jsx)(Eg, {
                                        tooltip: (0,
                                        z.jsx)(_c.SelectedInfoPanel.SCHEDULE_NIGHT_TOOLTIP, {
                                            hash: c
                                        }),
                                        children: (0,
                                        z.jsx)(Xme, {
                                            icon: _le(1),
                                            onSelect: a,
                                            selected: 1 === s,
                                            className: $me.button
                                        })
                                    }), (0,
                                    z.jsx)(Eg, {
                                        tooltip: (0,
                                        z.jsx)(_c.SelectedInfoPanel.SCHEDULE_CONTINUOUS_TOOLTIP, {
                                            hash: c
                                        }),
                                        children: (0,
                                        z.jsx)(Xme, {
                                            icon: _le(2),
                                            selected: 2 === s,
                                            onSelect: o,
                                            className: Zu()($me.button, $me.right)
                                        })
                                    })]
                                })]
                            })
                        })
                    })
                })
            })
        }
        ;
        const Xme = ({icon: e, selected: t, className: n, onSelect: s})=>(0,
        z.jsx)(U_, {
            focusKey: Sg,
            theme: Wme,
            onSelect: s,
            selected: t,
            className: n,
            children: (0,
            z.jsx)("img", {
                src: e,
                className: $me.icon
            })
        });
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/route-sections/schedule-section/schedule-section.tsx", {
            get ScheduleSection() {
                return qme
            },
            set ScheduleSection(e) {
                qme = e
            }
        });
        let Qme = {
            "route-slider": "route-slider__kp",
            routeSlider: "route-slider__kp"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/route-sections/route-slider.module.scss", {
            get classes() {
                return Qme
            },
            set classes(e) {
                Object.assign(Qme, e)
            }
        });
        const Zme = Qme;
        function Jme(e) {
            tl("TicketPriceSection", "setTicketPrice", e)
        }
        var ehe = ({group: e, tooltipKeys: t, tooltipTags: n, sliderData: s})=>{
            const [i,a] = (0,
            Y.useState)(s.value)
              , o = Dm()
              , r = (0,
            Y.useCallback)((e=>{
                a(e),
                o && Jme(e)
            }
            ), [o])
              , l = (0,
            Y.useCallback)((()=>{
                Jme(i)
            }
            ), [i])
              , c = kA(s.step)
              , u = tO(e, t, n);
            return (0,
            z.jsxs)(yS, {
                tooltip: u && (0,
                z.jsx)(Cb, {
                    text: u
                }),
                children: [(0,
                z.jsx)(KS, {
                    uppercase: !0,
                    disableFocus: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.TICKET_PRICE, {}),
                    right: 0 === i ? (0,
                    z.jsx)(_c.SelectedInfoPanel.TICKET_PRICE_FREE, {}) : (0,
                    z.jsx)(Oc, {
                        value: i,
                        unit: vc.Money
                    })
                }), (0,
                z.jsx)("div", {
                    className: Zme.routeSlider,
                    children: (0,
                    z.jsx)(AA, {
                        valueTransformer: c,
                        value: i,
                        start: 0,
                        end: s.range.max,
                        gamepadStep: s.step,
                        onDragEnd: l,
                        onChange: r
                    })
                })]
            })
        }
        ;
        function the(e) {
            tl("VehicleCountSection", "setVehicleCount", e)
        }
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/route-sections/ticket-price-section.tsx", {
            get TicketPriceSection() {
                return ehe
            },
            set TicketPriceSection(e) {
                ehe = e
            }
        });
        var nhe = ({group: e, tooltipKeys: t, tooltipTags: n, vehicleCount: s, activeVehicles: i, vehicleCountMin: a, vehicleCountMax: o})=>{
            const r = tO(e, t, n, !0)
              , l = kA(1);
            return (0,
            z.jsxs)(yS, {
                tooltip: r && (0,
                z.jsx)(Cb, {
                    text: r
                }),
                children: [(0,
                z.jsx)(KS, {
                    uppercase: !0,
                    disableFocus: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.VEHICLE_COUNT, {}),
                    right: (0,
                    z.jsx)(uu, {
                        value: s,
                        total: o,
                        unit: vc.Integer
                    })
                }), (0,
                z.jsx)("div", {
                    className: Zme.routeSlider,
                    children: (0,
                    z.jsx)(AA, {
                        valueTransformer: l,
                        value: s,
                        start: a,
                        end: o,
                        gamepadStep: 1,
                        onChange: the
                    })
                }), (0,
                z.jsx)(KS, {
                    subRow: !0,
                    disableFocus: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.ACTIVE_VEHICLES, {}),
                    right: (0,
                    z.jsx)(Oc, {
                        value: i
                    })
                })]
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/route-sections/vehicle-count-section.tsx", {
            get VehicleCountSection() {
                return nhe
            },
            set VehicleCountSection(e) {
                nhe = e
            }
        });
        const she = "ActionsSection";
        var ihe = $r(she, "trafficRoutesVisible")
          , ahe = $r(she, "trafficRouteColors")
          , ohe = ($r(she, "moveableObjectName"),
        $r(she, "moving"))
          , rhe = $r(she, "editingLot")
          , lhe = Jr(she, "focus")
          , che = Jr(she, "toggleMove");
        const uhe = ()=>{
            ohe.value || pA(),
            che()
        }
        ;
        var dhe = Jr(she, "follow")
          , mhe = Jr(she, "delete")
          , hhe = Jr(she, "toggle")
          , ghe = Jr(she, "toggleEmptying")
          , phe = Jr(she, "toggleLotTool")
          , fhe = Jr(she, "toggleTrafficRoutes");
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/shared-sections/actions-section/actions-section-bindings.ts", {
            get trafficRoutesVisible() {
                return trafficRoutesVisible
            },
            set trafficRoutesVisible(e) {
                trafficRoutesVisible = e
            },
            get trafficRouteColors() {
                return trafficRouteColors
            },
            set trafficRouteColors(e) {
                trafficRouteColors = e
            },
            get moveableObjectName() {
                return moveableObjectName
            },
            set moveableObjectName(e) {
                moveableObjectName = e
            },
            get moving() {
                return moving
            },
            set moving(e) {
                moving = e
            },
            get editingLot() {
                return editingLot
            },
            set editingLot(e) {
                editingLot = e
            },
            get focusSelectedEntity() {
                return lhe
            },
            set focusSelectedEntity(e) {
                lhe = e
            },
            get toggleMove() {
                return uhe
            },
            set toggleMove(e) {
                uhe = e
            },
            get followSelectedEntity() {
                return dhe
            },
            set followSelectedEntity(e) {
                dhe = e
            },
            get deleteSelectedEntity() {
                return mhe
            },
            set deleteSelectedEntity(e) {
                mhe = e
            },
            get toggleSelectedEntity() {
                return hhe
            },
            set toggleSelectedEntity(e) {
                hhe = e
            },
            get toggleEmptying() {
                return ghe
            },
            set toggleEmptying(e) {
                ghe = e
            },
            get toggleLotTool() {
                return phe
            },
            set toggleLotTool(e) {
                phe = e
            },
            get toggleTrafficRoutes() {
                return fhe
            },
            set toggleTrafficRoutes(e) {
                fhe = e
            }
        });
        let xhe = {
            button: "button_Z9O button_ECf item_It6 item-mouse-states_Fmi item-selected_tAM item-focused_FuT",
            icon: "icon_Tdt icon_soN icon_Iwk"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/shared-sections/actions-section/action-button.module.scss", {
            get classes() {
                return xhe
            },
            set classes(e) {
                Object.assign(xhe, e)
            }
        });
        const vhe = xhe;
        let _he = {
            "actions-section": "actions-section_X1x",
            actionsSection: "actions-section_X1x",
            button: "button_xGY",
            toggle: "toggle_LKL",
            off: "off_X4Y",
            "out-of-service": "out-of-service_Kfh",
            outOfService: "out-of-service_Kfh",
            label: "label_y4N",
            hint: "hint_Grf",
            "hint-icon": "hint-icon_pyg",
            hintIcon: "hint-icon_pyg",
            "tooltip-legends": "tooltip-legends_h98",
            tooltipLegends: "tooltip-legends_h98",
            "tooltip-legend": "tooltip-legend_y1I",
            tooltipLegend: "tooltip-legend_y1I"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/shared-sections/actions-section/actions-section.module.scss", {
            get classes() {
                return _he
            },
            set classes(e) {
                Object.assign(_he, e)
            }
        });
        const bhe = _he
          , The = new Ig("FOCUS_BUTTON")
          , Ehe = new Ig("RELOCATE_BUTTON_KEY")
          , Ihe = new Ig("FOLLOW_BUTTON_KEY")
          , She = new Ig("EMPTY_BUTTON_KEY")
          , yhe = new Ig("LOT_BUTTON_KEY")
          , jhe = new Ig("DELETE_BUTTON_KEY")
          , Che = new Ig("DISABLE_BUTTON_KEY")
          , Nhe = new Ig("TRAFFIC_ROUTES_KEY");
        var whe = ({focusable: e, focusing: t, following: n, followable: s, moveable: i, deletable: a, disabled: o, disableable: r, emptying: l, emptiable: c, hasLotTool: u, hasTrafficRoutes: d, focusKey: m})=>{
            const [h,g] = (0,
            Y.useState)(null)
              , p = sl(ohe)
              , f = sl(rhe)
              , x = (0,
            Y.useContext)(xE)
              , v = sl($j)
              , _ = sl(Qj)
              , b = sl(Ww)
              , T = sl(Rw)
              , E = (0,
            Y.useMemo)((()=>`${vT.value?.selectedInfoPanelDelete}+${T}`), [T]);
            cg(E, a);
            const I = sl(Dl)
              , S = (0,
            Y.useCallback)((()=>{
                x.showDialog((0,
                z.jsx)(zI, {
                    title: (0,
                    z.jsx)(_c.Common.WARNING, {}),
                    message: (0,
                    z.jsx)(_c.SelectedInfoPanel.CONFIRM_DELETE_WARNING, {}),
                    onConfirm: mhe
                }))
            }
            ), [x])
              , y = (0,
            Y.useCallback)((()=>{
                phe()
            }
            ), [])
              , j = (0,
            Y.useMemo)((()=>b.includes("Destroyed")), [b])
              , C = v.length < _
              , N = (0,
            Y.useCallback)((()=>dhe()), [])
              , w = (0,
            Y.useCallback)((e=>{
                e || g(null)
            }
            ), [])
              , O = sl(ihe)
              , P = sl(ahe);
            return (0,
            z.jsx)("div", {
                className: bhe.actionsSection,
                children: (0,
                z.jsx)(Ah, {
                    onFocusChange: w,
                    children: (0,
                    z.jsxs)(np, {
                        focusKey: m,
                        initialFocused: The,
                        onChange: g,
                        children: [e && (0,
                        z.jsx)(BQ, {
                            title: t ? (0,
                            z.jsx)(_c.SelectedInfoPanel.UNFOCUS, {}) : (0,
                            z.jsx)(_c.SelectedInfoPanel.FOCUS, {}),
                            description: (0,
                            z.jsx)(_c.SelectedInfoPanel.TOOLTIP, {
                                hash: t ? "ActionsSectionUnfocus" : "ActionsSectionFocus"
                            }),
                            shortcut: (0,
                            z.jsx)(BT, {
                                action: "Focus Selected Object",
                                active: I
                            }),
                            children: (0,
                            z.jsx)(tb, {
                                disableHint: !0,
                                focusKey: The,
                                theme: vhe,
                                className: bhe.button,
                                selected: t,
                                src: "Media/Game/Icons/MapMarker.svg",
                                onSelect: lhe,
                                onClick: Db,
                                shortcut: "Focus Selected Object",
                                children: (0,
                                z.jsx)(UT, {
                                    action: "Select",
                                    active: h === The,
                                    className: bhe.hint
                                })
                            })
                        }), i && (0,
                        z.jsx)(BQ, {
                            title: (0,
                            z.jsx)(_c.SelectedInfoPanel.TOOLTIP_TITLE, {
                                hash: "ActionsSectionRelocate"
                            }),
                            description: (0,
                            z.jsx)(_c.SelectedInfoPanel.TOOLTIP, {
                                hash: "ActionsSectionRelocate"
                            }),
                            shortcut: (0,
                            z.jsx)(BT, {
                                action: "Relocate Selected Object",
                                active: I
                            }),
                            children: (0,
                            z.jsx)(tb, {
                                disableHint: !0,
                                focusKey: Ehe,
                                theme: vhe,
                                className: bhe.button,
                                selected: p,
                                disabled: j,
                                src: "Media/Game/Icons/Relocate.svg",
                                selectSound: lp.relocateBuilding,
                                onSelect: uhe,
                                onClick: Db,
                                shortcut: "Relocate Selected Object",
                                children: (0,
                                z.jsx)(UT, {
                                    action: "Select",
                                    active: h === Ehe,
                                    className: bhe.hint
                                })
                            })
                        }), s && (0,
                        z.jsx)(BQ, {
                            title: n ? (0,
                            z.jsx)(_c.SelectedInfoPanel.TOOLTIP_TITLE, {
                                hash: "ActionsSectionUnfollowCitizen"
                            }) : v.length === _ ? (0,
                            z.jsx)(_c.SelectedInfoPanel.MAX_FOLLOWED_CITIZENS_REACHED, {}) : (0,
                            z.jsx)(_c.SelectedInfoPanel.TOOLTIP_TITLE, {
                                hash: "ActionsSectionFollowCitizen"
                            }),
                            description: (0,
                            z.jsx)(_c.SelectedInfoPanel.TOOLTIP, {
                                hash: n ? "ActionsSectionUnfollowCitizen" : "ActionsSectionFollowCitizen"
                            }),
                            shortcut: (0,
                            z.jsx)(BT, {
                                action: "Toggle Follow Selected Citizen",
                                active: I
                            }),
                            children: (0,
                            z.jsx)(tb, {
                                disableHint: !0,
                                focusKey: Ihe,
                                disabled: !n && !C,
                                theme: vhe,
                                selected: n,
                                className: bhe.button,
                                src: n ? "Media/Game/Icons/Unfollow.svg" : "Media/Game/Icons/Follow.svg",
                                onSelect: N,
                                onClick: Db,
                                shortcut: "Toggle Follow Selected Citizen",
                                children: (0,
                                z.jsx)(UT, {
                                    action: "Select",
                                    active: h === Ihe,
                                    className: bhe.hint
                                })
                            })
                        }), c && (0,
                        z.jsx)(BQ, {
                            title: (0,
                            z.jsx)(_c.SelectedInfoPanel.TOOLTIP_TITLE, {
                                hash: l ? "ActionsSectionStopEmptying" : "ActionsSectionStartEmptying"
                            }),
                            description: (0,
                            z.jsx)(_c.SelectedInfoPanel.TOOLTIP, {
                                hash: l ? "ActionsSectionStopEmptying" : "ActionsSectionStartEmptying"
                            }),
                            shortcut: (0,
                            z.jsx)(BT, {
                                action: "Toggle Selected Object Emptying",
                                active: I
                            }),
                            children: (0,
                            z.jsx)(tb, {
                                disableHint: !0,
                                focusKey: She,
                                selected: l,
                                disabled: j,
                                theme: vhe,
                                className: bhe.button,
                                onSelect: ghe,
                                onClick: Db,
                                src: "Media/Game/Icons/Empty.svg",
                                shortcut: "Toggle Selected Object Emptying",
                                children: (0,
                                z.jsx)(UT, {
                                    action: "Select",
                                    active: h === She,
                                    className: bhe.hint
                                })
                            })
                        }), u && (0,
                        z.jsx)(BQ, {
                            title: (0,
                            z.jsx)(_c.SelectedInfoPanel.TOOLTIP_TITLE, {
                                hash: "ActionsSectionAreaTool"
                            }),
                            description: (0,
                            z.jsx)(_c.SelectedInfoPanel.TOOLTIP, {
                                hash: "ActionsSectionAreaTool"
                            }),
                            shortcut: (0,
                            z.jsx)(BT, {
                                action: "Toggle Selected Lot Edit",
                                active: I
                            }),
                            children: (0,
                            z.jsx)(tb, {
                                disableHint: !0,
                                focusKey: yhe,
                                selected: f,
                                disabled: j,
                                theme: vhe,
                                className: bhe.button,
                                onSelect: y,
                                onClick: Db,
                                src: "Media/Game/Icons/LotTool.svg",
                                shortcut: "Toggle Selected Lot Edit",
                                children: (0,
                                z.jsx)(UT, {
                                    action: "Select",
                                    active: h === yhe,
                                    className: bhe.hint
                                })
                            })
                        }), d && (0,
                        z.jsx)(BQ, {
                            title: (0,
                            z.jsx)(_c.SelectedInfoPanel.TOOLTIP_TITLE, {
                                hash: "ActionsSectionTrafficRoutes"
                            }),
                            description: (0,
                            z.jsx)(_c.SelectedInfoPanel.TOOLTIP, {
                                hash: "ActionsSectionTrafficRoutes"
                            }),
                            content: (0,
                            z.jsx)("div", {
                                className: bhe.tooltipLegends,
                                children: P.map(((e,t)=>(0,
                                z.jsx)(xQ, {
                                    color: xN(e),
                                    label: (0,
                                    z.jsx)(_c.SelectedInfoPanel.TRAFFIC_ROUTES, {
                                        index: t
                                    }),
                                    className: bhe.tooltipLegend
                                }, t)))
                            }),
                            shortcut: (0,
                            z.jsx)(BT, {
                                action: "Toggle Traffic Routes",
                                active: I
                            }),
                            children: (0,
                            z.jsx)(tb, {
                                disableHint: !0,
                                focusKey: Nhe,
                                selected: O,
                                theme: vhe,
                                className: bhe.button,
                                onSelect: fhe,
                                onClick: Db,
                                src: "Media/Game/Icons/TrafficRoutes.svg",
                                shortcut: "Toggle Traffic Routes",
                                children: (0,
                                z.jsx)(UT, {
                                    action: "Select",
                                    active: h === Nhe,
                                    className: bhe.hint
                                })
                            })
                        }), a && (0,
                        z.jsx)(mT, {
                            uiTag: E,
                            children: (0,
                            z.jsx)(BQ, {
                                title: (0,
                                z.jsx)(_c.SelectedInfoPanel.TOOLTIP_TITLE, {
                                    hash: "ActionsSectionDelete"
                                }),
                                description: (0,
                                z.jsx)(_c.SelectedInfoPanel.TOOLTIP, {
                                    hash: "ActionsSectionDelete"
                                }),
                                shortcut: (0,
                                z.jsx)(BT, {
                                    action: "Delete Selected Object",
                                    active: I
                                }),
                                children: (0,
                                z.jsx)(tb, {
                                    disableHint: !0,
                                    focusKey: jhe,
                                    tinted: !0,
                                    theme: vhe,
                                    className: bhe.button,
                                    src: "Media/Glyphs/Trash.svg",
                                    onSelect: S,
                                    onClick: Db,
                                    shortcut: "Delete Selected Object",
                                    children: (0,
                                    z.jsx)(UT, {
                                        action: "Select",
                                        active: h === jhe,
                                        className: bhe.hint
                                    })
                                })
                            })
                        }), r && (0,
                        z.jsxs)("div", {
                            className: bhe.outOfService,
                            children: [o && (0,
                            z.jsx)("div", {
                                className: bhe.label,
                                children: (0,
                                z.jsx)(_c.SelectedInfoPanel.OUT_OF_SERVICE, {})
                            }), (0,
                            z.jsx)(BQ, {
                                title: (0,
                                z.jsx)(_c.SelectedInfoPanel.TOOLTIP_TITLE, {
                                    hash: o ? "Reactivate" : "Deactivate"
                                }),
                                description: (0,
                                z.jsx)(_c.SelectedInfoPanel.TOOLTIP, {
                                    hash: Ohe(o, b)
                                }),
                                shortcut: (0,
                                z.jsx)(BT, {
                                    action: "Toggle Selected Object Active",
                                    active: I
                                }),
                                children: (0,
                                z.jsx)(tb, {
                                    disableHint: !0,
                                    focusKey: Che,
                                    tinted: !0,
                                    src: "Media/Glyphs/OnOff.svg",
                                    theme: vhe,
                                    disabled: j,
                                    className: Zu()(bhe.button, bhe.toggle, o && bhe.off),
                                    selectSound: o ? lp.enableBuilding : lp.disableBuilding,
                                    onSelect: hhe,
                                    onClick: Db,
                                    shortcut: "Toggle Selected Object Active",
                                    children: (0,
                                    z.jsx)(UT, {
                                        action: "Select",
                                        active: h === Che,
                                        className: bhe.hint
                                    })
                                })
                            })]
                        })]
                    })
                })
            })
        }
        ;
        function Ohe(e, t) {
            return t.includes("TransportLine") ? t.includes("CargoRoute") ? e ? "ReactivateCargoRoute" : "DeactivateCargoRoute" : e ? "ReactivatePublicTransportLine" : "DeactivatePublicTransportLine" : e ? "Reactivate" : "Deactivate"
        }
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/shared-sections/actions-section/actions-section.tsx", {
            get ActionsSection() {
                return whe
            },
            set ActionsSection(e) {
                whe = e
            }
        });
        let Phe = {
            "dlc-icon": "dlc-icon_WCi",
            dlcIcon: "dlc-icon_WCi"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/shared-sections/contentprerequisite-section/contentprerequisite-section.module.scss", {
            get classes() {
                return Phe
            },
            set classes(e) {
                Object.assign(Phe, e)
            }
        });
        const Lhe = Phe;
        var Ahe = ({contentPrefab: e})=>(0,
        z.jsx)(yS, {
            disableFocus: !0,
            children: (0,
            z.jsx)(KS, {
                uppercase: !0,
                tooltip: (0,
                z.jsx)(Cb, {
                    children: (0,
                    z.jsx)(_c.Content.NAME, {
                        hash: e
                    })
                }),
                left: (0,
                z.jsx)(_c.Content.PREREQUISITE, {}),
                right: (0,
                z.jsx)(LH, {
                    src: `Media/DLC/${e}.svg?fallback=Media/DLC/DLCFallback.svg`,
                    className: Lhe.dlcIcon
                })
            })
        });
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/shared-sections/contentprerequisite-section/contentprerequisite-section.tsx", {
            get ContentPrerequisiteSection() {
                return Ahe
            },
            set ContentPrerequisiteSection(e) {
                Ahe = e
            }
        });
        let Mhe = {
            "description-section": "description-section_wKs",
            descriptionSection: "description-section_wKs",
            description: "description_jgm",
            "effects-row": "effects-row_FPw",
            effectsRow: "effects-row_FPw",
            "dlc-icon": "dlc-icon_JR6",
            dlcIcon: "dlc-icon_JR6"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/shared-sections/description-section/description-section.module.scss", {
            get classes() {
                return Mhe
            },
            set classes(e) {
                Object.assign(Mhe, e)
            }
        });
        const Rhe = Mhe;
        var khe = ({localeId: e, effects: t})=>{
            const n = Dm();
            return (0,
            z.jsxs)(yS, {
                focusKey: n ? yg : Sg,
                className: Rhe.descriptionSection,
                children: [(0,
                z.jsx)("div", {
                    className: Rhe.description,
                    children: (0,
                    z.jsx)(Cb, {
                        children: (0,
                        z.jsx)(cc, {
                            id: e
                        })
                    })
                }), t && (0,
                z.jsx)("div", {
                    className: Rhe.effectsRow,
                    children: (0,
                    z.jsx)(cD, {
                        components: Pee,
                        data: t
                    })
                })]
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/shared-sections/description-section/description-section.tsx", {
            get DescriptionSection() {
                return khe
            },
            set DescriptionSection(e) {
                khe = e
            }
        });
        let Dhe = {
            "notifications-section": "notifications-section_cKq",
            notificationsSection: "notifications-section_cKq",
            factors: "factors_Y7i"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/shared-sections/notification-sections/notifications-section.module.scss", {
            get classes() {
                return Dhe
            },
            set classes(e) {
                Object.assign(Dhe, e)
            }
        });
        const Fhe = Dhe;
        var Uhe = ({group: e, tooltipTags: t, tooltipKeys: n, averageHappiness: s, happinessFactors: i})=>{
            const a = tO(e, n, t, !0);
            return (0,
            z.jsx)(Eg, {
                direction: "right",
                tooltip: (0,
                z.jsxs)(z.Fragment, {
                    children: [i.length > 0 && (0,
                    z.jsxs)(z.Fragment, {
                        children: [(0,
                        z.jsx)("div", {
                            className: Fhe.factors,
                            children: i.map(((e,t)=>(0,
                            z.jsx)(WS, {
                                left: e.weight > 0 ? (0,
                                z.jsx)(_c.Common.HAPPINESS_FACTOR_POSITIVE, {
                                    hash: e.factor
                                }) : (0,
                                z.jsx)(_c.Common.HAPPINESS_FACTOR_NEGATIVE, {
                                    hash: e.factor
                                }),
                                right: (0,
                                z.jsx)("div", {
                                    className: $p(x6, e.weight),
                                    children: (0,
                                    z.jsx)(Oc, {
                                        value: e.weight,
                                        signed: !0
                                    })
                                })
                            }, t)))
                        }), (0,
                        z.jsx)(jS, {})]
                    }), a && (0,
                    z.jsx)(Cb, {
                        text: a
                    })]
                }),
                children: (0,
                z.jsx)(Ip, {
                    className: Fhe.notificationsSection,
                    children: (0,
                    z.jsx)(Eme, {
                        notification: s
                    })
                })
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/shared-sections/notification-sections/average-happiness-section.tsx", {
            get AverageHappinessSection() {
                return Uhe
            },
            set AverageHappinessSection(e) {
                Uhe = e
            }
        });
        var Bhe = ({focusKey: e, notifications: t})=>(0,
        z.jsx)(Sp, {
            focusKey: e,
            className: Fhe.notificationsSection,
            children: t.length > 0 && (0,
            z.jsx)(np, {
                children: t?.map((e=>(0,
                z.jsx)(bme, {
                    notification: e
                }, e.key)))
            })
        });
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/shared-sections/notification-sections/notifications-section.tsx", {
            get NotificationsSection() {
                return Bhe
            },
            set NotificationsSection(e) {
                Bhe = e
            }
        });
        var Ghe = ({group: e, tooltipTags: t, tooltipKeys: n, profitability: s, profitabilityFactors: i})=>{
            const a = tO(e, n, t, !0);
            return (0,
            z.jsx)(Eg, {
                direction: "right",
                tooltip: (0,
                z.jsxs)(z.Fragment, {
                    children: [i.length > 0 && (0,
                    z.jsx)(z.Fragment, {
                        children: (0,
                        z.jsx)("div", {
                            className: Fhe.factors,
                            children: i.map(((e,t)=>(0,
                            z.jsx)(WS, {
                                left: e.weight > 0 ? (0,
                                z.jsx)(_c.Common.HAPPINESS_FACTOR_POSITIVE, {
                                    hash: e.factor
                                }) : (0,
                                z.jsx)(_c.Common.HAPPINESS_FACTOR_NEGATIVE, {
                                    hash: e.factor
                                }),
                                right: (0,
                                z.jsx)("div", {
                                    className: $p(x6, e.weight),
                                    children: (0,
                                    z.jsx)(Oc, {
                                        value: e.weight,
                                        signed: !0
                                    })
                                })
                            }, t)))
                        })
                    }), (0,
                    z.jsx)(jS, {}), a && (0,
                    z.jsx)(Cb, {
                        text: a
                    })]
                }),
                children: (0,
                z.jsx)(Ip, {
                    className: Fhe.notificationsSection,
                    children: (0,
                    z.jsx)(Ime, {
                        notification: s
                    })
                })
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/shared-sections/notification-sections/profitability-section.tsx", {
            get ProfitabilitySection() {
                return Ghe
            },
            set ProfitabilitySection(e) {
                Ghe = e
            }
        });
        let Vhe = {
            policy: "policy_oHN item-focused_FuT",
            "pad-first": "pad-first_WSR",
            padFirst: "pad-first_WSR",
            lock: "lock_uXt",
            compact: "compact_QL9",
            top: "top_LI4 item-mouse-states_Fmi",
            expanded: "expanded_g0B",
            "active-disabled": "active-disabled_HoS",
            activeDisabled: "active-disabled_HoS",
            locked: "locked_ihM",
            bottom: "bottom_qDc",
            disabled: "disabled_NSK",
            icon: "icon_BTB",
            label: "label_obe",
            "slider-wrapper": "slider-wrapper_Sx6",
            sliderWrapper: "slider-wrapper_Sx6",
            slider: "slider_jk5",
            value: "value_vMh",
            checkbox: "checkbox_OrD",
            "space-between": "space-between_mx0",
            spaceBetween: "space-between_mx0",
            "checkbox-hint": "checkbox-hint_cQ5",
            checkboxHint: "checkbox-hint_cQ5"
        };
        X.add("game-ui/game/components/policy/policy.module.scss", {
            get classes() {
                return Vhe
            },
            set classes(e) {
                Object.assign(Vhe, e)
            }
        });
        const Hhe = Vhe;
        var Khe = ({policy: e, className: t, onAdjust: n})=>{
            const [s,i] = (0,
            Y.useState)(e.active)
              , [a,o] = (0,
            Y.useState)(!1)
              , [r,l] = (0,
            Y.useState)(e.data?.value ?? 0)
              , [c,u] = (0,
            Y.useState)(!1)
              , d = Dm();
            (0,
            Y.useEffect)((()=>{
                const t = e.data?.value ?? 0;
                c || r === t || l(t)
            }
            ), [e, c, r]);
            const m = (0,
            Y.useCallback)((()=>{
                n(e.entity, !s, r),
                i(!s)
            }
            ), [s, n, e, r])
              , h = (0,
            Y.useCallback)((()=>{
                u(!0)
            }
            ), [])
              , g = (0,
            Y.useCallback)((t=>{
                l(t),
                d && n(e.entity, s, t)
            }
            ), [s, d, n, e])
              , p = (0,
            Y.useCallback)((()=>{
                n(e.entity, s, r),
                u(!1)
            }
            ), [s, n, e, r])
              , f = (0,
            Y.useCallback)((()=>{
                m(),
                cp(lp.selectItem)
            }
            ), [m])
              , x = !e.locked && e.active && null !== e.data;
            return (0,
            z.jsx)(mT, {
                uiTag: e.uiTag,
                children: (0,
                z.jsx)(H6, {
                    title: (0,
                    z.jsx)(_c.Policy.TITLE, {
                        hash: e.id
                    }),
                    description: (0,
                    z.jsx)(_c.Policy.DESCRIPTION, {
                        hash: e.id
                    }),
                    locked: e.locked,
                    direction: "right",
                    requirements: e.requirements,
                    children: (0,
                    z.jsx)(Sp, {
                        className: Zu()(Hhe.policy, t),
                        onFocusChange: o,
                        children: (0,
                        z.jsxs)(Dg, {
                            onAction: e.locked ? void 0 : f,
                            children: [(0,
                            z.jsx)(zhe, {
                                focusKey: x ? Sg : yg,
                                policy: e,
                                active: s,
                                focused: a,
                                onToggle: m,
                                className: Zu()(Hhe.top, x && Hhe.expanded)
                            }), x && e.data && r && (0,
                            z.jsxs)("div", {
                                className: Hhe.bottom,
                                children: [(0,
                                z.jsx)("div", {
                                    className: Hhe.sliderWrapper,
                                    children: (0,
                                    z.jsx)(AA, {
                                        value: r,
                                        start: e.data.range.min,
                                        end: e.data.range.max,
                                        gamepadStep: e.data.step,
                                        onDragStart: h,
                                        onDragEnd: p,
                                        onChange: g,
                                        disabled: !e.active,
                                        className: Hhe.slider
                                    })
                                }), (0,
                                z.jsx)("div", {
                                    className: Hhe.value,
                                    children: (0,
                                    z.jsx)(Oc, {
                                        value: r,
                                        unit: e.data.unit
                                    })
                                })]
                            })]
                        })
                    })
                })
            })
        }
          , Whe = ({policy: e, onAdjust: t, onMouseOver: n, onMouseLeave: s})=>{
            const [i,a] = (0,
            Y.useState)(e.active)
              , o = (0,
            Y.useCallback)((()=>{
                t(e.entity, !i, e.data?.value ?? 0),
                a(!i)
            }
            ), [i, t, e.entity, e.data?.value]);
            return (0,
            z.jsx)(mT, {
                uiTag: e.uiTag,
                children: (0,
                z.jsx)(H6, {
                    title: (0,
                    z.jsx)(_c.Policy.TITLE, {
                        hash: e.id
                    }),
                    description: (0,
                    z.jsx)(_c.Policy.DESCRIPTION, {
                        hash: e.id
                    }),
                    locked: e.locked,
                    direction: "down",
                    alignment: "end",
                    requirements: e.requirements,
                    children: (0,
                    z.jsx)(zhe, {
                        compact: !0,
                        onMouseOver: n,
                        onMouseLeave: s,
                        className: Hhe.compact,
                        focusKey: Sg,
                        policy: e,
                        active: i,
                        onToggle: o
                    })
                })
            })
        }
        ;
        const zhe = ({focusKey: e, policy: t, active: n, compact: s=!1, focused: i, className: a, onToggle: o, onMouseOver: r, onMouseLeave: l})=>{
            const [c,u] = (0,
            Y.useState)(!1)
              , d = (0,
            Y.useCallback)((()=>u(!0)), [])
              , m = (0,
            Y.useCallback)((()=>u(!1)), []);
            return (0,
            z.jsxs)(U_, {
                disableHint: !0,
                focusKey: e,
                onSelect: o,
                onClick: Db,
                onMouseOver: r,
                onMouseLeave: l,
                selectSound: lp.togglePolicy,
                disabled: t.locked,
                className: Zu()(t.locked && Hhe.locked, c && Hhe.activeDisabled, a),
                children: [(0,
                z.jsx)("img", {
                    src: t.icon,
                    className: Zu()(Hhe.icon, !t.locked && !t.active && Hhe.disabled)
                }), t.locked && (0,
                z.jsx)(OZ, {
                    className: Hhe.lock
                }), !s && (0,
                z.jsxs)("div", {
                    className: Hhe.spaceBetween,
                    children: [(0,
                    z.jsx)("div", {
                        className: Hhe.label,
                        children: (0,
                        z.jsx)(_c.Policy.TITLE, {
                            hash: t.id
                        })
                    }), !t.locked && (0,
                    z.jsxs)(z.Fragment, {
                        children: [(0,
                        z.jsx)(UT, {
                            action: "Select",
                            active: i && !t.locked
                        }), (0,
                        z.jsx)(Hb, {
                            checked: n,
                            focusKey: Sg,
                            className: Hhe.checkbox,
                            onMouseOver: d,
                            onMouseLeave: m
                        })]
                    })]
                })]
            })
        }
        ;
        X.add("game-ui/game/components/policy/policy.tsx", {
            get Policy() {
                return Khe
            },
            set Policy(e) {
                Khe = e
            },
            get CompactPolicy() {
                return Whe
            },
            set CompactPolicy(e) {
                Whe = e
            }
        });
        let Yhe = {
            "compact-policies": "compact-policies_qEr",
            compactPolicies: "compact-policies_qEr",
            label: "label_wgk"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/shared-sections/policies-section/policies-section.module.scss", {
            get classes() {
                return Yhe
            },
            set classes(e) {
                Object.assign(Yhe, e)
            }
        });
        const $he = Yhe;
        var qhe = ({policies: e, group: t, tooltipKeys: n, tooltipTags: s})=>{
            const [i,a] = (0,
            Y.useState)(e?.length < 3)
              , [o,r] = (0,
            Y.useState)(!1)
              , l = (0,
            Y.useCallback)((()=>r(!0)), [])
              , c = (0,
            Y.useCallback)((()=>r(!1)), [])
              , u = tO(t, n, s, !0)
              , d = sl(Rw)
              , m = (0,
            Y.useMemo)((()=>`${vT.value?.selectedInfoPanelPolicies}+${d}`), [d]);
            return cg(m),
            (0,
            z.jsx)(mT, {
                uiTag: m,
                children: (0,
                z.jsx)(GS, {
                    disableFocus: !0,
                    initialExpanded: e?.length < 3,
                    tooltip: i && u && (0,
                    z.jsx)(Cb, {
                        text: u
                    }),
                    className: o ? BS.disableActiveState : void 0,
                    expandFromContent: !0,
                    onToggleExpanded: a,
                    header: i ? (0,
                    z.jsx)(KS, {
                        uppercase: !0,
                        disableFocus: !0,
                        className: $he.label,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.POLICIES, {})
                    }) : (0,
                    z.jsx)("div", {
                        className: $he.compactPolicies,
                        children: e?.map((e=>(0,
                        z.jsx)(Whe, {
                            policy: e,
                            onAdjust: UC,
                            onMouseOver: l,
                            onMouseLeave: c
                        }, Dr(e.entity))))
                    }),
                    children: (0,
                    z.jsx)(np, {
                        children: e?.map(((e,t)=>(0,
                        z.jsx)(Khe, {
                            policy: e,
                            onAdjust: UC,
                            className: 0 === t ? Hhe.padFirst : void 0
                        }, Dr(e.entity))))
                    })
                })
            })
        }
        ;
        function Xhe({group: e, tooltipTags: t, tooltipKeys: n, vehicleKey: s, vehicleCount: i, availableVehicleCount: a, vehicleCapacity: o, vehicleList: r}) {
            const l = tO(e, n, t, !0)
              , c = bq()
              , u = (0,
            Y.useCallback)((t=>{
                c.setState(e, t)
            }
            ), [e, c]);
            return o > 0 ? (0,
            z.jsx)(GS, {
                initialExpanded: c.getState(e, !0),
                onToggleExpanded: u,
                header: (0,
                z.jsx)(Ep, {
                    children: (0,
                    z.jsxs)(NH, {
                        children: [o - a > 0 && (0,
                        z.jsx)(KS, {
                            uppercase: !0,
                            tooltip: l && (0,
                            z.jsx)(Cb, {
                                children: (0,
                                z.jsx)(_c.SelectedInfoPanel.TOOLTIP, {
                                    hash: "VehiclesInMaintenance"
                                })
                            }),
                            left: (0,
                            z.jsx)(_c.SelectedInfoPanel.MAINTENANCED_VEHICLES, {}),
                            right: (0,
                            z.jsx)(Oc, {
                                value: o - a
                            })
                        }), (0,
                        z.jsx)(KS, {
                            uppercase: !0,
                            noShrinkRight: !0,
                            tooltip: l && (0,
                            z.jsx)(Cb, {
                                text: l
                            }),
                            left: (0,
                            z.jsx)(_c.SelectedInfoPanel.VEHICLES, {
                                hash: s
                            }),
                            right: 0 === o ? (0,
                            z.jsx)(Oc, {
                                value: i
                            }) : (0,
                            z.jsx)(uu, {
                                value: i,
                                total: o
                            })
                        })]
                    })
                }),
                disableFocus: !0,
                children: r.length > 0 ? (0,
                z.jsx)(np, {
                    children: r.map(((e,t)=>(0,
                    z.jsx)(Qhe, {
                        vehicle: e
                    }, t)))
                }) : null
            }) : null
        }
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/shared-sections/policies-section/policies-section.tsx", {
            get PoliciesSection() {
                return qhe
            },
            set PoliciesSection(e) {
                qhe = e
            }
        });
        var Qhe = ({vehicle: e})=>{
            const t = (0,
            Y.useCallback)((()=>Yw(e.entity)), [e.entity]);
            return (0,
            z.jsx)(KS, {
                subRow: !0,
                tooltip: (0,
                z.jsx)(Cb, {
                    children: (0,
                    z.jsx)(_c.SelectedInfoPanel.TOOLTIP, {
                        hash: e.vehicleKey
                    })
                }),
                left: (0,
                z.jsx)(Ku, {
                    value: e.name
                }),
                link: (0,
                z.jsx)(tde, {
                    onSelect: t,
                    children: (0,
                    z.jsx)(_c.SelectedInfoPanel.VEHICLE_STATES, {
                        hash: e.stateKey
                    })
                })
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/shared-sections/vehicles-section/vehicles-section.tsx", {
            get VehiclesSection() {
                return Xhe
            },
            set VehiclesSection(e) {
                Xhe = e
            },
            get VehicleItem() {
                return Qhe
            },
            set VehicleItem(e) {
                Qhe = e
            }
        });
        var Zhe = ({group: e, tooltipTags: t, tooltipKeys: n, vehicleList: s})=>{
            const i = tO(e, n, t);
            return (0,
            z.jsxs)(yS, {
                disableFocus: !0,
                children: [(0,
                z.jsx)(KS, {
                    uppercase: !0,
                    tooltip: i && (0,
                    z.jsx)(Cb, {
                        text: i
                    }),
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.DISPATCHED_VEHICLES, {}),
                    right: (0,
                    z.jsx)(Oc, {
                        value: s.length
                    })
                }), s.length > 0 && (0,
                z.jsx)(np, {
                    children: s.map(((e,t)=>(0,
                    z.jsx)(Qhe, {
                        vehicle: e
                    }, t)))
                })]
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/shared-sections/vehicles-section/dispatched-vehicles-section.tsx", {
            get DispatchedVehiclesSection() {
                return Zhe
            },
            set DispatchedVehiclesSection(e) {
                Zhe = e
            }
        });
        var Jhe = ({group: e, tooltipTags: t, tooltipKeys: n, cargo: s, capacity: i, rawMaterials: a, processedGoods: o, mail: r, cargoKey: l})=>{
            const c = tO(e, n, t)
              , u = o?.filter((e=>"NoResource" !== e.key && e.amount > 0));
            return (0,
            z.jsxs)(yS, {
                tooltip: c && (0,
                z.jsx)(Cb, {
                    text: c
                }),
                children: [(0,
                z.jsx)(KS, {
                    uppercase: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.CARGO_TITLE, {
                        hash: l
                    })
                }), (0,
                z.jsx)(Mue, {
                    plain: !0,
                    progress: s,
                    max: i,
                    children: (0,
                    z.jsx)(uu, {
                        value: s,
                        total: i,
                        unit: vc.Weight
                    })
                }), a.length + u.length + r.length > 0 && (0,
                z.jsxs)(z.Fragment, {
                    children: [a.length > 0 ? (0,
                    z.jsxs)(z.Fragment, {
                        children: [(0,
                        z.jsx)(KS, {
                            disableFocus: !0,
                            left: (0,
                            z.jsx)(_c.SelectedInfoPanel.RAW_MATERIALS, {})
                        }), (0,
                        z.jsx)(kde, {
                            children: a?.map((e=>(0,
                            z.jsx)(ege, {
                                resource: e
                            }, e.key)))
                        })]
                    }) : void 0, u.length > 0 ? (0,
                    z.jsxs)(z.Fragment, {
                        children: [(0,
                        z.jsx)(KS, {
                            disableFocus: !0,
                            left: (0,
                            z.jsx)(_c.SelectedInfoPanel.PROCESSED_GOODS, {})
                        }), (0,
                        z.jsx)(kde, {
                            children: u?.map((e=>(0,
                            z.jsx)(ege, {
                                resource: e
                            }, e.key)))
                        })]
                    }) : void 0, r.length > 0 ? (0,
                    z.jsxs)(z.Fragment, {
                        children: [(0,
                        z.jsx)(KS, {
                            disableFocus: !0,
                            left: (0,
                            z.jsx)(_c.SelectedInfoPanel.MAIL, {})
                        }), (0,
                        z.jsx)(kde, {
                            children: r?.map((e=>(0,
                            z.jsx)(ege, {
                                resource: e
                            }, e.key)))
                        })]
                    }) : void 0]
                })]
            })
        }
        ;
        const ege = ({resource: e})=>(0,
        z.jsx)(H9, {
            theme: Fde,
            icon: `Media/Game/Resources/${e.key}.svg`,
            label: (0,
            z.jsx)(_c.Resources.TITLE, {
                hash: e.key
            }),
            children: (0,
            z.jsx)(Oc, {
                value: e.amount,
                unit: vc.Weight
            })
        }, e.key);
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/vehicle-sections/cargo-section.tsx", {
            get CargoSection() {
                return Jhe
            },
            set CargoSection(e) {
                Jhe = e
            }
        });
        var tge = ({group: e, tooltipKeys: t, tooltipTags: n, owner: s, fromOutside: i, line: a, lineEntity: o, nextStop: r, stateKey: l})=>{
            const c = (0,
            Y.useCallback)((()=>s.entity && Yw(s.entity)), [s])
              , u = (0,
            Y.useCallback)((()=>o && Yw(o)), [o])
              , d = (0,
            Y.useCallback)((()=>r.entity && Yw(r.entity)), [r])
              , m = tO(e, t, n);
            return (0,
            z.jsx)(yS, {
                tooltip: m && (0,
                z.jsx)(Cb, {
                    text: m
                }),
                disableFocus: null != o || null != r.entity || null != s.entity,
                children: (0,
                z.jsxs)(np, {
                    children: [(0,
                    z.jsx)(KS, {
                        uppercase: !0,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.CARGO_TRANSPORT_VEHICLE_TITLE, {}),
                        right: (0,
                        z.jsx)(_c.SelectedInfoPanel.VEHICLE_STATES, {
                            hash: l
                        })
                    }), null != s.entity && (0,
                    z.jsx)(KS, {
                        subRow: !0,
                        left: i ? (0,
                        z.jsx)(_c.SelectedInfoPanel.ORIGIN, {}) : (0,
                        z.jsx)(_c.SelectedInfoPanel.OWNED_BY, {}),
                        link: (0,
                        z.jsx)(tde, {
                            onSelect: c,
                            children: (0,
                            z.jsx)(Ku, {
                                value: s.name
                            })
                        })
                    }), null != r.entity && (0,
                    z.jsx)(KS, {
                        subRow: !0,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.DESTINATION, {}),
                        link: (0,
                        z.jsx)(tde, {
                            onSelect: d,
                            children: (0,
                            z.jsx)(Ku, {
                                value: r.name
                            })
                        })
                    }), null != a && (0,
                    z.jsx)(KS, {
                        subRow: !0,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.ROUTE, {}),
                        link: (0,
                        z.jsx)(tde, {
                            onSelect: u,
                            children: (0,
                            z.jsx)(Ku, {
                                value: a
                            })
                        })
                    })]
                })
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/vehicle-sections/cargo-transport-vehicle-section.tsx", {
            get CargoTransportVehicleSection() {
                return tge
            },
            set CargoTransportVehicleSection(e) {
                tge = e
            }
        });
        var nge = ({group: e, tooltipKeys: t, tooltipTags: n, owner: s, fromOutside: i, nextStop: a, dead: o, deadEntity: r, stateKey: l})=>{
            const c = (0,
            Y.useCallback)((()=>s.entity && Yw(s.entity)), [s])
              , u = (0,
            Y.useCallback)((()=>r && Yw(r)), [r])
              , d = (0,
            Y.useCallback)((()=>a.entity && Yw(a.entity)), [a])
              , m = tO(e, t, n);
            return (0,
            z.jsx)(yS, {
                tooltip: m && (0,
                z.jsx)(Cb, {
                    text: m
                }),
                disableFocus: null != r || null != a.entity || null != s.entity,
                children: (0,
                z.jsxs)(np, {
                    children: [(0,
                    z.jsx)(KS, {
                        uppercase: !0,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.DEATHCARE_VEHICLE_TITLE, {}),
                        right: (0,
                        z.jsx)(_c.SelectedInfoPanel.VEHICLE_STATES, {
                            hash: l
                        })
                    }), null != s.entity && (0,
                    z.jsx)(KS, {
                        subRow: !0,
                        left: i ? (0,
                        z.jsx)(_c.SelectedInfoPanel.ORIGIN, {}) : (0,
                        z.jsx)(_c.SelectedInfoPanel.OWNED_BY, {}),
                        link: (0,
                        z.jsx)(tde, {
                            onSelect: c,
                            children: (0,
                            z.jsx)(Ku, {
                                value: s.name
                            })
                        })
                    }), null != a.entity && (0,
                    z.jsx)(KS, {
                        subRow: !0,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.DESTINATION, {}),
                        link: (0,
                        z.jsx)(tde, {
                            onSelect: d,
                            children: (0,
                            z.jsx)(Ku, {
                                value: a.name
                            })
                        })
                    }), null != o && (0,
                    z.jsx)(KS, {
                        subRow: !0,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.DEATHCARE_VEHICLE_DEAD, {}),
                        link: (0,
                        z.jsx)(tde, {
                            onSelect: u,
                            children: (0,
                            z.jsx)(Ku, {
                                value: o
                            })
                        })
                    })]
                })
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/vehicle-sections/deathcare-vehicle-section.tsx", {
            get DeathcareVehicleSection() {
                return nge
            },
            set DeathcareVehicleSection(e) {
                nge = e
            }
        });
        var sge = ({group: e, tooltipKeys: t, tooltipTags: n, owner: s, fromOutside: i, nextStop: a, stateKey: o, vehicleKey: r})=>{
            const l = (0,
            Y.useCallback)((()=>s.entity && Yw(s.entity)), [s])
              , c = (0,
            Y.useCallback)((()=>a.entity && Yw(a.entity)), [a])
              , u = tO(e, t, n, !0);
            return (0,
            z.jsx)(yS, {
                tooltip: u && (0,
                z.jsx)(Cb, {
                    text: u
                }),
                disableFocus: !0,
                children: (0,
                z.jsxs)(np, {
                    children: [(0,
                    z.jsx)(KS, {
                        uppercase: !0,
                        disableFocus: !0,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.DELIVERY_VEHICLE_TITLE, {
                            hash: r
                        }),
                        right: (0,
                        z.jsx)(_c.SelectedInfoPanel.VEHICLE_STATES, {
                            hash: o
                        })
                    }), null != s.entity && (0,
                    z.jsx)(KS, {
                        subRow: !0,
                        disableFocus: !0,
                        left: i ? (0,
                        z.jsx)(_c.SelectedInfoPanel.ORIGIN, {}) : (0,
                        z.jsx)(_c.SelectedInfoPanel.OWNED_BY, {}),
                        link: (0,
                        z.jsx)(tde, {
                            onSelect: l,
                            children: (0,
                            z.jsx)(Ku, {
                                value: s.name
                            })
                        })
                    }), null != a.entity && (0,
                    z.jsx)(KS, {
                        subRow: !0,
                        disableFocus: !0,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.DESTINATION, {}),
                        link: (0,
                        z.jsx)(tde, {
                            onSelect: c,
                            children: (0,
                            z.jsx)(Ku, {
                                value: a.name
                            })
                        })
                    })]
                })
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/vehicle-sections/delivery-vehicle-section.tsx", {
            get DeliveryVehicleSection() {
                return sge
            },
            set DeliveryVehicleSection(e) {
                sge = e
            }
        });
        var ige = ({group: e, tooltipKeys: t, tooltipTags: n, owner: s, stateKey: i, vehicleKey: a})=>{
            const o = (0,
            Y.useCallback)((()=>s.entity && Yw(s.entity)), [s])
              , r = tO(e, t, n);
            return (0,
            z.jsx)(yS, {
                tooltip: r && (0,
                z.jsx)(Cb, {
                    children: r
                }),
                disableFocus: null != s.entity,
                children: (0,
                z.jsxs)(np, {
                    children: [(0,
                    z.jsx)(KS, {
                        uppercase: !0,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.EXTRACTOR_VEHICLE_TITLE, {
                            hash: a
                        }),
                        right: (0,
                        z.jsx)(_c.SelectedInfoPanel.VEHICLE_STATES, {
                            hash: i
                        })
                    }), null != s.entity && (0,
                    z.jsx)(KS, {
                        subRow: !0,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.OWNED_BY, {}),
                        link: (0,
                        z.jsx)(tde, {
                            onSelect: o,
                            children: (0,
                            z.jsx)(Ku, {
                                value: s.name
                            })
                        })
                    })]
                })
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/vehicle-sections/extractor-vehicle-section.tsx", {
            get ExtractorVehicleSection() {
                return ige
            },
            set ExtractorVehicleSection(e) {
                ige = e
            }
        });
        var age = ({group: e, tooltipKeys: t, tooltipTags: n, owner: s, fromOutside: i, nextStop: a, stateKey: o, vehicleKey: r})=>{
            const l = (0,
            Y.useCallback)((()=>s.entity && Yw(s.entity)), [s])
              , c = (0,
            Y.useCallback)((()=>a.entity && Yw(a.entity)), [a])
              , u = tO(e, t, n, !0);
            return (0,
            z.jsx)(yS, {
                tooltip: u && (0,
                z.jsx)(Cb, {
                    text: u
                }),
                disableFocus: null != a.entity || null != s.entity,
                children: (0,
                z.jsxs)(np, {
                    children: [(0,
                    z.jsx)(KS, {
                        uppercase: !0,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.FIRE_VEHICLE_TITLE, {
                            hash: r
                        }),
                        right: (0,
                        z.jsx)(_c.SelectedInfoPanel.VEHICLE_STATES, {
                            hash: o
                        })
                    }), null != s.entity && (0,
                    z.jsx)(KS, {
                        subRow: !0,
                        left: i ? (0,
                        z.jsx)(_c.SelectedInfoPanel.ORIGIN, {}) : (0,
                        z.jsx)(_c.SelectedInfoPanel.OWNED_BY, {}),
                        link: (0,
                        z.jsx)(tde, {
                            onSelect: l,
                            children: (0,
                            z.jsx)(Ku, {
                                value: s.name
                            })
                        })
                    }), null != a.entity && (0,
                    z.jsx)(KS, {
                        subRow: !0,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.DESTINATION, {}),
                        link: (0,
                        z.jsx)(tde, {
                            onSelect: c,
                            children: (0,
                            z.jsx)(Ku, {
                                value: a.name
                            })
                        })
                    })]
                })
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/vehicle-sections/fire-vehicle-section.tsx", {
            get FireVehicleSection() {
                return age
            },
            set FireVehicleSection(e) {
                age = e
            }
        });
        var oge = ({group: e, tooltipKeys: t, tooltipTags: n, owner: s, fromOutside: i, nextStop: a, stateKey: o, vehicleKey: r})=>{
            const l = (0,
            Y.useCallback)((()=>s.entity && Yw(s.entity)), [s])
              , c = (0,
            Y.useCallback)((()=>a.entity && Yw(a.entity)), [a])
              , u = tO(e, t, n, !0);
            return (0,
            z.jsxs)(yS, {
                tooltip: u && (0,
                z.jsx)(Cb, {
                    text: u
                }),
                disableFocus: null != a.entity || null != s.entity,
                children: [(0,
                z.jsx)(KS, {
                    uppercase: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.GARBAGE_VEHICLE_TITLE, {
                        hash: r
                    }),
                    right: (0,
                    z.jsx)(_c.SelectedInfoPanel.VEHICLE_STATES, {
                        hash: o
                    })
                }), null != s.entity && (0,
                z.jsx)(KS, {
                    subRow: !0,
                    left: i ? (0,
                    z.jsx)(_c.SelectedInfoPanel.ORIGIN, {}) : (0,
                    z.jsx)(_c.SelectedInfoPanel.OWNED_BY, {}),
                    link: (0,
                    z.jsx)(tde, {
                        onSelect: l,
                        children: (0,
                        z.jsx)(Ku, {
                            value: s.name
                        })
                    })
                }), null != a.entity && (0,
                z.jsx)(KS, {
                    subRow: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.DESTINATION, {}),
                    link: (0,
                    z.jsx)(tde, {
                        onSelect: c,
                        children: (0,
                        z.jsx)(Ku, {
                            value: a.name
                        })
                    })
                })]
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/vehicle-sections/garbage-vehicle-section.tsx", {
            get GarbageVehicleSection() {
                return oge
            },
            set GarbageVehicleSection(e) {
                oge = e
            }
        });
        var rge = ({group: e, tooltipKeys: t, tooltipTags: n, owner: s, fromOutside: i, nextStop: a, patient: o, patientEntity: r, stateKey: l, vehicleKey: c})=>{
            const u = (0,
            Y.useCallback)((()=>s.entity && Yw(s.entity)), [s])
              , d = (0,
            Y.useCallback)((()=>r && Yw(r)), [r])
              , m = (0,
            Y.useCallback)((()=>a.entity && Yw(a.entity)), [a])
              , h = tO(e, t, n, !0);
            return (0,
            z.jsx)(yS, {
                tooltip: h && (0,
                z.jsx)(Cb, {
                    text: h
                }),
                disableFocus: null != r || null != a.entity || null != s.entity,
                children: (0,
                z.jsxs)(np, {
                    children: [(0,
                    z.jsx)(KS, {
                        uppercase: !0,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.HEALTHCARE_VEHICLE_TITLE, {
                            hash: c
                        }),
                        right: (0,
                        z.jsx)(_c.SelectedInfoPanel.VEHICLE_STATES, {
                            hash: l
                        })
                    }), null != s.entity && (0,
                    z.jsx)(KS, {
                        subRow: !0,
                        left: i ? (0,
                        z.jsx)(_c.SelectedInfoPanel.ORIGIN, {}) : (0,
                        z.jsx)(_c.SelectedInfoPanel.OWNED_BY, {}),
                        link: (0,
                        z.jsx)(tde, {
                            onSelect: u,
                            children: (0,
                            z.jsx)(Ku, {
                                value: s.name
                            })
                        })
                    }), null != a.entity && (0,
                    z.jsx)(KS, {
                        subRow: !0,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.DESTINATION, {}),
                        link: (0,
                        z.jsx)(tde, {
                            onSelect: m,
                            children: (0,
                            z.jsx)(Ku, {
                                value: a.name
                            })
                        })
                    }), null != o && (0,
                    z.jsx)(KS, {
                        subRow: !0,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.HEALTHCARE_VEHICLE_PATIENT, {}),
                        link: (0,
                        z.jsx)(tde, {
                            onSelect: d,
                            children: (0,
                            z.jsx)(Ku, {
                                value: o
                            })
                        })
                    })]
                })
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/vehicle-sections/healthcare-vehicle-section.tsx", {
            get HealthcareVehicleSection() {
                return rge
            },
            set HealthcareVehicleSection(e) {
                rge = e
            }
        });
        var lge = ({group: e, tooltipKeys: t, tooltipTags: n, load: s, capacity: i, loadKey: a})=>{
            const o = tO(e, t, n);
            return (0,
            z.jsxs)(yS, {
                tooltip: o && (0,
                z.jsx)(Cb, {
                    text: o
                }),
                children: [(0,
                z.jsx)(KS, {
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.LOAD_TITLE, {
                        hash: a
                    })
                }), (0,
                z.jsx)(Mue, {
                    progress: s,
                    max: i,
                    plain: !0,
                    children: (0,
                    z.jsx)(uu, {
                        value: s,
                        total: i,
                        unit: cge(a)
                    })
                })]
            })
        }
        ;
        function cge(e) {
            return "Water" === e ? vc.Volume : vc.Weight
        }
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/vehicle-sections/load-section.tsx", {
            get LoadSection() {
                return lge
            },
            set LoadSection(e) {
                lge = e
            }
        });
        var uge = ({group: e, tooltipKeys: t, tooltipTags: n, workShift: s, owner: i, fromOutside: a, nextStop: o, stateKey: r})=>{
            const l = (0,
            Y.useCallback)((()=>i.entity && Yw(i.entity)), [i])
              , c = (0,
            Y.useCallback)((()=>o.entity && Yw(o.entity)), [o])
              , u = tO(e, t, n)
              , d = Jw("MaintenanceVehicleSectionWorkshift");
            return (0,
            z.jsxs)(z.Fragment, {
                children: [(0,
                z.jsxs)(yS, {
                    tooltip: u && (0,
                    z.jsx)(Cb, {
                        text: u
                    }),
                    disableFocus: null != o.entity || null != i.entity,
                    children: [(0,
                    z.jsx)(KS, {
                        uppercase: !0,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.MAINTENANCE_VEHICLE_TITLE, {}),
                        right: (0,
                        z.jsx)(_c.SelectedInfoPanel.VEHICLE_STATES, {
                            hash: r
                        })
                    }), null != i.entity && (0,
                    z.jsx)(KS, {
                        subRow: !0,
                        left: a ? (0,
                        z.jsx)(_c.SelectedInfoPanel.ORIGIN, {}) : (0,
                        z.jsx)(_c.SelectedInfoPanel.OWNED_BY, {}),
                        link: (0,
                        z.jsx)(tde, {
                            onSelect: l,
                            children: (0,
                            z.jsx)(Ku, {
                                value: i.name
                            })
                        })
                    }), null != o.entity && (0,
                    z.jsx)(KS, {
                        subRow: !0,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.DESTINATION, {}),
                        link: (0,
                        z.jsx)(tde, {
                            onSelect: c,
                            children: (0,
                            z.jsx)(Ku, {
                                value: o.name
                            })
                        })
                    })]
                }), (0,
                z.jsxs)(yS, {
                    tooltip: d && (0,
                    z.jsx)(Cb, {
                        text: d
                    }),
                    children: [(0,
                    z.jsx)(KS, {
                        uppercase: !0,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.WORK_SHIFT, {})
                    }), (0,
                    z.jsx)(Mue, {
                        progress: s,
                        max: 100,
                        plain: !0,
                        children: (0,
                        z.jsx)(Oc, {
                            value: s,
                            unit: vc.Percentage
                        })
                    })]
                })]
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/vehicle-sections/maintenance-vehicle-section.tsx", {
            get MaintenanceVehicleSection() {
                return uge
            },
            set MaintenanceVehicleSection(e) {
                uge = e
            }
        });
        var dge = ({group: e, tooltipKeys: t, tooltipTags: n, passengers: s, maxPassengers: i, pets: a, vehiclePassengerKey: o})=>{
            const r = tO(e, t, n);
            return (0,
            z.jsxs)(yS, {
                tooltip: r && (0,
                z.jsx)(Cb, {
                    text: r
                }),
                children: [(0,
                z.jsx)(KS, {
                    uppercase: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.PASSENGERS, {
                        hash: o
                    })
                }), (0,
                z.jsx)(Mue, {
                    progress: s,
                    max: i,
                    plain: !0,
                    children: (0,
                    z.jsx)(uu, {
                        value: s,
                        total: i,
                        unit: vc.Integer
                    })
                }), a > 0 && (0,
                z.jsx)(KS, {
                    subRow: !0,
                    icon: "Media/Game/Icons/Pet.svg",
                    left: (0,
                    z.jsx)(Oc, {
                        value: a,
                        unit: vc.Integer
                    })
                })]
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/vehicle-sections/passengers-section.tsx", {
            get PassengersSection() {
                return dge
            },
            set PassengersSection(e) {
                dge = e
            }
        });
        var mge = ({group: e, tooltipKeys: t, tooltipTags: n, owner: s, fromOutside: i, nextStop: a, criminal: o, criminalEntity: r, stateKey: l, vehicleKey: c})=>{
            const u = (0,
            Y.useCallback)((()=>s.entity && Yw(s.entity)), [s])
              , d = (0,
            Y.useCallback)((()=>r && Yw(r)), [r])
              , m = (0,
            Y.useCallback)((()=>a.entity && Yw(a.entity)), [a])
              , h = tO(e, t, n, !0);
            return (0,
            z.jsx)(yS, {
                tooltip: h && (0,
                z.jsx)(Cb, {
                    text: h
                }),
                disableFocus: null != r || null != a.entity || null != s.entity,
                children: (0,
                z.jsxs)(np, {
                    children: [(0,
                    z.jsx)(KS, {
                        uppercase: !0,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.POLICE_VEHICLE_TITLE, {
                            hash: c
                        }),
                        right: (0,
                        z.jsx)(_c.SelectedInfoPanel.VEHICLE_STATES, {
                            hash: l
                        })
                    }), null != s.entity && (0,
                    z.jsx)(KS, {
                        subRow: !0,
                        left: i ? (0,
                        z.jsx)(_c.SelectedInfoPanel.ORIGIN, {}) : (0,
                        z.jsx)(_c.SelectedInfoPanel.OWNED_BY, {}),
                        link: (0,
                        z.jsx)(tde, {
                            onSelect: u,
                            children: (0,
                            z.jsx)(Ku, {
                                value: s.name
                            })
                        })
                    }), null != a.entity && (0,
                    z.jsx)(KS, {
                        subRow: !0,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.DESTINATION, {}),
                        link: (0,
                        z.jsx)(tde, {
                            onSelect: m,
                            children: (0,
                            z.jsx)(Ku, {
                                value: a.name
                            })
                        })
                    }), null != o && (0,
                    z.jsx)(KS, {
                        subRow: !0,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.POLICE_VEHICLE_CRIMINAL, {}),
                        link: (0,
                        z.jsx)(tde, {
                            onSelect: d,
                            children: (0,
                            z.jsx)(Ku, {
                                value: o
                            })
                        })
                    })]
                })
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/vehicle-sections/police-vehicle-section.tsx", {
            get PoliceVehicleSection() {
                return mge
            },
            set PoliceVehicleSection(e) {
                mge = e
            }
        });
        var hge = ({group: e, tooltipKeys: t, tooltipTags: n, owner: s, fromOutside: i, nextStop: a, stateKey: o})=>{
            const r = (0,
            Y.useCallback)((()=>s.entity && Yw(s.entity)), [s.entity])
              , l = (0,
            Y.useCallback)((()=>a.entity && Yw(a.entity)), [a])
              , c = tO(e, t, n);
            return (0,
            z.jsxs)(yS, {
                tooltip: c && (0,
                z.jsx)(Cb, {
                    text: c
                }),
                disableFocus: null != s.entity,
                children: [(0,
                z.jsx)(KS, {
                    uppercase: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.POST_VEHICLE_TITLE, {}),
                    right: (0,
                    z.jsx)(_c.SelectedInfoPanel.VEHICLE_STATES, {
                        hash: o
                    })
                }), null != s.entity && (0,
                z.jsx)(KS, {
                    subRow: !0,
                    left: i ? (0,
                    z.jsx)(_c.SelectedInfoPanel.ORIGIN, {}) : (0,
                    z.jsx)(_c.SelectedInfoPanel.OWNED_BY, {}),
                    link: (0,
                    z.jsx)(tde, {
                        onSelect: r,
                        children: (0,
                        z.jsx)(Ku, {
                            value: s.name
                        })
                    })
                }), null != a.entity && (0,
                z.jsx)(KS, {
                    subRow: !0,
                    left: (0,
                    z.jsx)(_c.SelectedInfoPanel.DESTINATION, {}),
                    link: (0,
                    z.jsx)(tde, {
                        onSelect: l,
                        children: (0,
                        z.jsx)(Ku, {
                            value: a.name
                        })
                    })
                })]
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/vehicle-sections/post-vehicle-section.tsx", {
            get PostVehicleSection() {
                return hge
            },
            set PostVehicleSection(e) {
                hge = e
            }
        });
        var gge = ({group: e, tooltipKeys: t, tooltipTags: n, owner: s, fromOutside: i, keeper: a, keeperEntity: o, nextStop: r, stateKey: l, vehicleKey: c})=>{
            const u = (0,
            Y.useCallback)((()=>s.entity && Yw(s.entity)), [s])
              , d = (0,
            Y.useCallback)((()=>o && Yw(o)), [o])
              , m = (0,
            Y.useCallback)((()=>r.entity && Yw(r.entity)), [r])
              , h = tO(e, t, n, !0);
            return (0,
            z.jsx)(yS, {
                tooltip: h && (0,
                z.jsx)(Cb, {
                    text: h
                }),
                disableFocus: null != a || null != r.entity || null != s.entity,
                children: (0,
                z.jsxs)(np, {
                    children: [(0,
                    z.jsx)(KS, {
                        uppercase: !0,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.PRIVATE_VEHICLE_TITLE, {
                            hash: c
                        }),
                        right: (0,
                        z.jsx)(_c.SelectedInfoPanel.VEHICLE_STATES, {
                            hash: l
                        })
                    }), null != s.entity && (0,
                    z.jsx)(KS, {
                        subRow: !0,
                        left: i ? (0,
                        z.jsx)(_c.SelectedInfoPanel.ORIGIN, {}) : (0,
                        z.jsx)(_c.SelectedInfoPanel.OWNED_BY, {}),
                        link: (0,
                        z.jsx)(tde, {
                            onSelect: u,
                            children: (0,
                            z.jsx)(Ku, {
                                value: s.name
                            })
                        })
                    }), null != r.entity && (0,
                    z.jsx)(KS, {
                        subRow: !0,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.DESTINATION, {}),
                        link: (0,
                        z.jsx)(tde, {
                            onSelect: m,
                            children: (0,
                            z.jsx)(Ku, {
                                value: r.name
                            })
                        })
                    }), null != a && (0,
                    z.jsx)(KS, {
                        subRow: !0,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.DRIVER, {}),
                        link: (0,
                        z.jsx)(tde, {
                            onSelect: d,
                            children: (0,
                            z.jsx)(Ku, {
                                value: a
                            })
                        })
                    })]
                })
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/vehicle-sections/private-vehicle-section.tsx", {
            get PrivateVehicleSection() {
                return gge
            },
            set PrivateVehicleSection(e) {
                gge = e
            }
        });
        var pge = ({group: e, tooltipKeys: t, tooltipTags: n, owner: s, fromOutside: i, line: a, lineEntity: o, nextStop: r, stateKey: l, vehicleKey: c})=>{
            const u = (0,
            Y.useCallback)((()=>s.entity && Yw(s.entity)), [s])
              , d = (0,
            Y.useCallback)((()=>o && Yw(o)), [o])
              , m = (0,
            Y.useCallback)((()=>r.entity && Yw(r.entity)), [r])
              , h = tO(e, t, n, !0);
            return (0,
            z.jsx)(yS, {
                tooltip: h && (0,
                z.jsx)(Cb, {
                    text: h
                }),
                disableFocus: null != o || null != r.entity || null != s.entity,
                children: (0,
                z.jsxs)(np, {
                    children: [(0,
                    z.jsx)(KS, {
                        uppercase: !0,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.PUBLIC_TRANSPORT_VEHICLE_TITLE, {
                            hash: c
                        }),
                        right: (0,
                        z.jsx)(_c.SelectedInfoPanel.VEHICLE_STATES, {
                            hash: l
                        })
                    }), null != s.entity && (0,
                    z.jsx)(KS, {
                        subRow: !0,
                        left: i ? (0,
                        z.jsx)(_c.SelectedInfoPanel.ORIGIN, {}) : (0,
                        z.jsx)(_c.SelectedInfoPanel.OWNED_BY, {}),
                        link: (0,
                        z.jsx)(tde, {
                            onSelect: u,
                            children: (0,
                            z.jsx)(Ku, {
                                value: s.name
                            })
                        })
                    }), null != r.entity && (0,
                    z.jsx)(KS, {
                        subRow: !0,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.DESTINATION, {}),
                        link: (0,
                        z.jsx)(tde, {
                            onSelect: m,
                            children: (0,
                            z.jsx)(Ku, {
                                value: r.name
                            })
                        })
                    }), null != a && (0,
                    z.jsx)(KS, {
                        subRow: !0,
                        left: (0,
                        z.jsx)(_c.SelectedInfoPanel.LINE, {}),
                        link: (0,
                        z.jsx)(tde, {
                            onSelect: d,
                            children: (0,
                            z.jsx)(Ku, {
                                value: a
                            })
                        })
                    })]
                })
            })
        }
        ;
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/vehicle-sections/public-transport-vehicle-section.tsx", {
            get PublicTransportVehicleSection() {
                return pge
            },
            set PublicTransportVehicleSection(e) {
                pge = e
            }
        });
        var fge = {
            [Nw.Resource]: Ume,
            [Nw.LocalServices]: kme,
            [Nw.Actions]: whe,
            [Nw.Description]: khe,
            [Nw.ContentPrerequisite]: Ahe,
            [Nw.Developer]: ()=>null,
            [Nw.Residents]: Ade,
            [Nw.HouseholdSidebar]: ()=>null,
            [Nw.Districts]: ide,
            [Nw.Title]: ()=>null,
            [Nw.Notifications]: Bhe,
            [Nw.Policies]: qhe,
            [Nw.Profitability]: Ghe,
            [Nw.AverageHappiness]: Uhe,
            [Nw.Schedule]: qme,
            [Nw.Line]: Hme,
            [Nw.Lines]: Mme,
            [Nw.Color]: Ome,
            [Nw.LineVisualizer]: ()=>null,
            [Nw.TicketPrice]: ehe,
            [Nw.VehicleCount]: nhe,
            [Nw.Attractiveness]: Pue,
            [Nw.Efficiency]: cde,
            [Nw.Employees]: mde,
            [Nw.Upkeep]: dme,
            [Nw.Level]: bde,
            [Nw.Education]: ode,
            [Nw.Pollution]: wde,
            [Nw.Healthcare]: pde,
            [Nw.Deathcare]: Gue,
            [Nw.Garbage]: gde,
            [Nw.Police]: jde,
            [Nw.Vehicles]: Xhe,
            [Nw.DispatchedVehicles]: Zhe,
            [Nw.Electricity]: dde,
            [Nw.Transformer]: Wde,
            [Nw.Battery]: kue,
            [Nw.Water]: gme,
            [Nw.Sewage]: Mde,
            [Nw.Fire]: hde,
            [Nw.Prison]: Lde,
            [Nw.Shelter]: Rde,
            [Nw.Parking]: yde,
            [Nw.Park]: Sde,
            [Nw.Mail]: Ide,
            [Nw.Road]: Vme,
            [Nw.Company]: Bue,
            [Nw.Storage]: Gde,
            [Nw.TradedResourcesSection]: Hde,
            [Nw.PrivateVehicle]: gge,
            [Nw.PublicTransportVehicle]: pge,
            [Nw.CargoTransportVehicle]: tge,
            [Nw.DeliveryVehicle]: sge,
            [Nw.HealthcareVehicle]: rge,
            [Nw.FireVehicle]: age,
            [Nw.PoliceVehicle]: mge,
            [Nw.MaintenanceVehicle]: uge,
            [Nw.DeathcareVehicle]: nge,
            [Nw.PostVehicle]: hge,
            [Nw.GarbageVehicle]: oge,
            [Nw.ExtractorVehicle]: ige,
            [Nw.Passengers]: dge,
            [Nw.Cargo]: Jhe,
            [Nw.Load]: lge,
            [Nw.Status]: Nme,
            [Nw.Citizen]: fme,
            [Nw.DummyHuman]: xme,
            [Nw.Animal]: pme,
            [Nw.SelectVehicles]: dz,
            [Nw.DestroyedBuilding]: Zue,
            [Nw.DestroyedTree]: Fme,
            [Nw.Comfort]: Due,
            [Nw.Upgrades]: ime,
            [Nw.UpgradeProperties]: zde
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/selected-info-sections.tsx", {
            get selectedInfoSectionComponents() {
                return fge
            },
            set selectedInfoSectionComponents(e) {
                fge = e
            }
        });
        const xge = "HouseholdSidebarSection";
        var vge = Xr(xge, "householdMap")
          , _ge = Xr(xge, "residentMap")
          , bge = Xr(xge, "petMap");
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/shared-sections/household-sidebar-section/household-sidebar-bindings.ts", {
            get householdMap() {
                return householdMap
            },
            set householdMap(e) {
                householdMap = e
            },
            get residentMap() {
                return residentMap
            },
            set residentMap(e) {
                residentMap = e
            },
            get petMap() {
                return petMap
            },
            set petMap(e) {
                petMap = e
            }
        });
        let Tge = {
            itemSize: "50",
            "household-sidebar-section": "household-sidebar-section_Pp8",
            householdSidebarSection: "household-sidebar-section_Pp8",
            "gamepad-active": "gamepad-active_M6w",
            gamepadActive: "gamepad-active_M6w",
            content: "content_uZM",
            "fixed-list": "fixed-list_leU",
            fixedList: "fixed-list_leU",
            "virtual-list": "virtual-list_kom",
            virtualList: "virtual-list_kom",
            item: "item_Pjq button_ECf item_It6 item-mouse-states_Fmi item-selected_tAM item-focused_FuT",
            "item-label": "item-label_NoI",
            itemLabel: "item-label_NoI",
            ellipsis: "ellipsis_siY",
            icon: "icon_cU0",
            household: "household_aFZ",
            divider: "divider_hD0",
            badge: "badge_PNB",
            avatar: "avatar_R0M",
            hint: "hint_MRA"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/shared-sections/household-sidebar-section/household-sidebar-section.module.scss", {
            get classes() {
                return Tge
            },
            set classes(e) {
                Object.assign(Tge, e)
            }
        });
        const Ege = Tge;
        var Ige = ({variant: e, residence: t, household: n, households: s, residents: i, pets: a, focusKey: o, className: r})=>{
            const l = Dm()
              , c = function(e, t) {
                return e !== Xw.Building || 1 === t
            }(e, s)
              , u = Hm()
              , d = parseFloat(Ege.itemSize) * u
              , m = function(e, t, n, s) {
                return e === Xw.Building && t > 1 ? t : n + s
            }(e, s, i, a)
              , h = uH(d, m, 4)
              , [g,p] = (0,
            Y.useState)(Dr(t.entity))
              , f = (0,
            Y.useRef)()
              , x = (0,
            Y.useCallback)((t=>{
                const [n,s] = function(e, t, n, s) {
                    return n !== Xw.Building || s ? e < t ? [_ge, e] : [bge, e - t] : [vge, e]
                }(t, i, e, c);
                return (0,
                z.jsx)(Sge, {
                    focusKey: t,
                    index: s,
                    map: n,
                    useFamilyName: !0
                }, t)
            }
            ), [i, c, e])
              , v = (0,
            Y.useMemo)((()=>({
                "Move Vertical": e=>{
                    let s = g;
                    e > 0 && ("number" == typeof g ? s = g > 0 ? g - 1 : Dr(c ? n.entity : t.entity) : g === Dr(n.entity) && (s = Dr(t.entity))),
                    e < 0 && ("number" == typeof g ? g < m - 1 && (s = g + 1) : s = g === Dr(t.entity) && c ? Dr(n.entity) : 0),
                    p(s)
                }
            })), [g, n.entity, m, t.entity, c]);
            (0,
            Y.useEffect)((()=>{
                c ? ("number" == typeof g && (f.current = g),
                p(0)) : "number" == typeof f.current && p(f.current)
            }
            ), [c]);
            const _ = Ur(t.entity, Zp) ? null : Dr(t.entity)
              , b = c && !Ur(n.entity, Zp) ? Dr(n.entity) : null
              , T = (0,
            Y.useRef)(0)
              , E = (0,
            Y.useCallback)((e=>{
                c || (T.current = e)
            }
            ), [c]);
            return (0,
            z.jsx)(rE, {
                focusKey: o,
                className: Zu()(Ege.householdSidebarSection, l && Ege.gamepadActive, r),
                contentClassName: Ege.content,
                unfocusedHintAction: "Focus Occupants Panel",
                showCloseHint: "Back",
                children: (0,
                z.jsx)(Mg, {
                    actions: v,
                    children: (0,
                    z.jsxs)(op, {
                        focused: g,
                        children: [(0,
                        z.jsxs)("div", {
                            className: Ege.fixedList,
                            children: [_ && (0,
                            z.jsx)(yge, {
                                focusKey: _,
                                item: t
                            }), b && (0,
                            z.jsx)(yge, {
                                focusKey: b,
                                item: n
                            })]
                        }), (0,
                        z.jsx)("div", {
                            className: Ege.divider
                        }), (0,
                        z.jsx)(rH, {
                            renderItem: x,
                            sizeProvider: h,
                            className: Ege.virtualList,
                            initialScrollPos: c ? 0 : T.current,
                            onScrollChange: E
                        }, `${c}`)]
                    })
                })
            })
        }
        ;
        const Sge = ({index: e, map: t, useFamilyName: n=!1, focusKey: s})=>{
            const i = ll(t, e);
            return (0,
            z.jsx)(yge, {
                item: i,
                useFamilyName: n,
                focusKey: s
            })
        }
          , yge = ({item: e, useFamilyName: t=!1, focusKey: n})=>{
            const [s,i] = (0,
            Y.useState)(!1)
              , a = Wu(e?.name)
              , o = Wu(e?.familyName)
              , r = (0,
            Y.useCallback)((()=>{
                !e.selected && Yw(e.entity)
            }
            ), [e]);
            if (!e)
                return (0,
                z.jsx)(z.Fragment, {});
            const l = t && o || a
              , c = l.length > 20;
            return (0,
            z.jsx)(Ah, {
                onFocusChange: i,
                children: (0,
                z.jsx)(Eg, {
                    tooltip: c ? l : void 0,
                    children: (0,
                    z.jsxs)(U_, {
                        focusKey: n,
                        disableHint: !0,
                        selected: e.selected,
                        onSelect: r,
                        className: Zu()(Ege.item, e.count && Ege.household),
                        children: [e.icon ? (0,
                        z.jsx)(Z_, {
                            src: e.icon,
                            className: Ege.icon
                        }) : (0,
                        z.jsx)(mte, {
                            entity: e.entity,
                            className: Ege.avatar
                        }), e.count && (0,
                        z.jsx)("div", {
                            className: Ege.badge,
                            children: e.count
                        }), (0,
                        z.jsx)("div", {
                            className: Zu()(Ege.itemLabel, c && Ege.ellipsis),
                            children: l
                        }), (0,
                        z.jsx)(UT, {
                            action: "Select",
                            active: s && !e.selected,
                            className: Ege.hint
                        })]
                    })
                })
            })
        }
        ;
        function jge(e, t) {
            const n = Wu(e)
              , [s,i] = (0,
            Y.useState)(null)
              , a = (0,
            Y.useCallback)((e=>{
                i(e.target.value)
            }
            ), [])
              , o = (0,
            Y.useCallback)((()=>{
                null != s && s !== n && t(s),
                i(null)
            }
            ), [s, n, t])
              , r = (0,
            Y.useCallback)((()=>{
                i(null)
            }
            ), []);
            return [s ?? n, a, o, r]
        }
        function Cge(e) {
            tl("TitleSection", "renameEntity", e)
        }
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/shared-sections/household-sidebar-section/household-sidebar-section.tsx", {
            get HouseholdSidebarSection() {
                return Ige
            },
            set HouseholdSidebarSection(e) {
                Ige = e
            }
        }),
        X.add("game-ui/common/hooks/use-input-name.ts", {
            get useInputName() {
                return jge
            },
            set useInputName(e) {
                jge = e
            }
        }),
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/shared-sections/title-section/title-section-bindings.ts", {
            get renameSelectedEntity() {
                return Cge
            },
            set renameSelectedEntity(e) {
                Cge = e
            }
        });
        let Nge = {
            container: "container_Q9t",
            input: "input_lbJ",
            label: "label_GFm"
        };
        X.add("game-ui/game/components/selected-info-panel/shared-components/text-input/text-input.module.scss", {
            get classes() {
                return Nge
            },
            set classes(e) {
                Object.assign(Nge, e)
            }
        });
        const wge = Nge;
        var Oge = Y.memo((function({icon: e, tooltip: t, panelTag: n, focusKey: s, name: i, vkLocaleKey: a, onChangeName: o, onSubmitName: r, onEditingChanged: l}) {
            const c = (0,
            Y.useCallback)((()=>{
                r(),
                l?.(!1)
            }
            ), [l, r])
              , u = (0,
            Y.useCallback)((()=>{
                l?.(!0)
            }
            ), [l]);
            return (0,
            z.jsx)(dE, {
                icon: e || void 0,
                children: (0,
                z.jsx)(mT, {
                    uiTag: n,
                    children: (0,
                    z.jsx)(Eg, {
                        direction: "right",
                        alignment: "start",
                        tooltip: t && (0,
                        z.jsx)(Cb, {
                            text: t
                        }),
                        children: (0,
                        z.jsx)(HH, {
                            theme: wge,
                            focusKey: s,
                            value: i,
                            vkTitle: (0,
                            z.jsx)(_c.VirtualKeyboard.TITLE, {
                                hash: a
                            }),
                            onChange: o,
                            onBlur: c,
                            onFocus: u
                        })
                    })
                })
            })
        }
        ), ((e,t)=>Kr(e, t, 3)));
        const Pge = function({group: e, tooltipTags: t, tooltipKeys: n, onEditingChanged: s, focusKey: i, name: a, vkLocaleKey: o, icon: r}) {
            const [l,c,u] = jge(a, Cge)
              , d = tO(e, n, t)
              , m = sl(Rw)
              , h = (0,
            Y.useMemo)((()=>`${vT.value?.selectedInfoPanelTitle}+${m}`), [m]);
            return cg(h),
            (0,
            z.jsx)(Oge, {
                icon: r,
                name: l,
                tooltip: d,
                vkLocaleKey: o,
                panelTag: h,
                onChangeName: c,
                onSubmitName: u,
                focusKey: i,
                onEditingChanged: s
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/shared-sections/title-section/title-section.tsx", {
            get TitleSection() {
                return Pge
            },
            set TitleSection(e) {
                Pge = e
            }
        });
        let Lge = {
            "selected-info-panel": "selected-info-panel_gG8",
            selectedInfoPanel: "selected-info-panel_gG8",
            wrapper: "wrapper_SgH",
            container: "container_Ty2",
            "gamepad-active": "gamepad-active_TBU",
            gamepadActive: "gamepad-active_TBU",
            scrollable: "scrollable_gsV",
            space: "space_N1X",
            smallSpace: "smallSpace_Bas",
            row: "row_OqM",
            sidebar: "sidebar_fgt",
            hints: "hints_HGp",
            hint: "hint_Kc1",
            "limited-height-panel": "limited-height-panel_Wj3",
            limitedHeightPanel: "limited-height-panel_Wj3"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-panel.module.scss", {
            get classes() {
                return Lge
            },
            set classes(e) {
                Object.assign(Lge, e)
            }
        });
        const Age = Lge
          , Mge = new Ig("SelectedInfoPanel")
          , Rge = new Ig("LineVisualizer")
          , kge = new Ig("HouseholdSidebar");
        var Dge = (0,
        Y.memo)((0,
        Y.forwardRef)((function({className: e, elKey: t, titleSection: n, topSections: s, middleSections: i, bottomSections: a, onClose: o}, r) {
            const [l,c] = (0,
            Y.useState)(!1)
              , u = (0,
            Y.useMemo)((()=>{
                if (!n)
                    return null;
                const {name: e, vkLocaleKey: t, icon: s, group: i, tooltipKeys: a, tooltipTags: o} = n;
                return n && (0,
                z.jsx)(Pge, {
                    name: e,
                    vkLocaleKey: t,
                    icon: s,
                    group: i,
                    tooltipKeys: a,
                    tooltipTags: o,
                    onEditingChanged: c
                })
            }
            ), [n]);
            return (0,
            z.jsx)(rE, {
                ref: r,
                focusKey: Mge,
                header: u,
                footer: (0,
                z.jsx)(cD, {
                    components: fge,
                    data: a
                }),
                transitionSounds: up,
                theme: Kce,
                className: Zu()(Age.selectedInfoPanel, e),
                onClose: o,
                allowLooping: !0,
                showCloseHint: l ? void 0 : "Close",
                children: (0,
                z.jsxs)(np, {
                    children: [(0,
                    z.jsx)(cD, {
                        components: fge,
                        data: s
                    }), (0,
                    z.jsx)(mb, {
                        className: Age.scrollable,
                        children: (0,
                        z.jsx)(cD, {
                            components: fge,
                            data: i
                        })
                    })]
                })
            }, t)
        }
        )), ((e,t)=>Kr(e, t, 20)));
        const Fge = (0,
        Y.forwardRef)((function({focusKey: e, className: t, onClose: n, showHint: s}, i) {
            const a = sl(Fw)
              , o = sl(Uw)
              , r = sl(Bw)
              , l = sl(Gw)
              , c = sl(Hw)
              , u = sl(Kw)
              , d = null != c
              , m = sl(Aw)
              , h = Qce(!0, m, !1)
              , g = null != u
              , p = d || g
              , f = al(rhe)
              , x = al(Jce)
              , v = al(ohe)
              , _ = null != c ? Rge : kge
              , b = Dm()
              , T = c ? "line" : u ? "household" : "none"
              , E = (0,
            Y.useRef)(T)
              , [I,S] = (0,
            Y.useState)(!1)
              , [y,j] = (0,
            Y.useState)(Mge)
              , C = (0,
            Y.useMemo)((()=>({
                Back: ()=>{
                    f.current || x.current || v.current ? CP(GP) : y === _ ? j(Mge) : n()
                }
                ,
                "Focus Line Panel": !d || y !== Mge || f.current || x.current || v.current ? null : ()=>j(Rge),
                "Focus Occupants Panel": !g || y !== Mge || f.current || x.current || v.current ? null : ()=>j(kge),
                "Focus Info Panel": !p || y !== _ || f.current || x.current || v.current ? null : ()=>j(Mge)
            })), [_, y, f, g, d, p, v, n, x]);
            (0,
            Y.useEffect)((()=>{
                p || j(Mge)
            }
            ), [p]),
            (0,
            Y.useEffect)((()=>{
                E.current !== T && j(Mge),
                E.current = T
            }
            ), [T]);
            const N = sl(Mw)
              , w = sl(zw)
              , O = (0,
            Y.useMemo)((()=>u?.residence.entity), [u?.residence.entity])
              , P = (0,
            Y.useMemo)((()=>!!u?.households && u?.household?.entity), [u?.household?.entity, u?.households])
              , L = (0,
            Y.useMemo)((()=>Ur(w, Zp) ? Ur(N, Zp) ? Ur(O, m) || !P ? `${O?.index}${m.version}${m.index}${O?.version}` : P && Dr(P) : `${Dr(N)}->SIP` : `${Dr(m)}->SIP`), [P, O, w, m, N])
              , A = sl(Rw)
              , M = !Ur(Zp, m) && "" !== A
              , R = (0,
            Y.useMemo)((()=>`${vT.value?.selectedInfoPanel}+${A}`), [A]);
            return cg(R, M),
            (0,
            z.jsxs)("div", {
                className: Age.wrapper,
                children: [(0,
                z.jsx)(Sp, {
                    ref: i,
                    focusKey: e,
                    className: Zu()(Age.row, Age.container, t, {
                        [Age.gamepadActive]: b,
                        [Age.limitedHeightPanel]: h && g
                    }),
                    onFocusChange: S,
                    children: (0,
                    z.jsx)(Mg, {
                        actions: C,
                        children: (0,
                        z.jsxs)(op, {
                            focused: y,
                            children: [c && (0,
                            z.jsx)(Nue, {
                                focusKey: Rge,
                                focused: y === Rge,
                                className: Age.sidebar,
                                ...c
                            }, `${Dr(w)}->LV`), u && (0,
                            z.jsx)(Ige, {
                                focusKey: kge,
                                ...u,
                                className: Age.sidebar
                            }, O && Dr(O)), (0,
                            z.jsx)(mT, {
                                uiTag: R,
                                active: M,
                                children: (0,
                                z.jsx)(Dge, {
                                    elKey: (1 === u?.households ? P && Dr(P) : L) || "key",
                                    titleSection: l,
                                    topSections: a,
                                    middleSections: o,
                                    bottomSections: r,
                                    onClose: n
                                })
                            })]
                        })
                    })
                }), (0,
                z.jsx)(Uge, {
                    focused: I,
                    showHint: s
                })]
            })
        }
        ))
          , Uge = ({showHint: e, focused: t})=>{
            const n = sl(wm)
              , s = sl(hA)
              , i = n.find((e=>"Back" === e.name))
              , {state: a} = (0,
            Y.useContext)(ld);
            return a === td.exit || s ? null : (0,
            z.jsx)("div", {
                className: Age.hints,
                children: (0,
                z.jsx)(UT, {
                    action: "Back",
                    active: e && !!i?.items.length && !t,
                    className: Age.hint
                })
            })
        }
        ;
        var Bge = ({small: e})=>(0,
        z.jsx)("div", {
            className: Zu()(e ? Age.smallSpace : Age.space)
        });
        function Gge() {
            const e = sl(SL)
              , t = sl(Aw)
              , n = sl(iP)
              , s = sl(ohe)
              , i = sl(Jce)
              , a = sl(hA)
              , o = sl(rhe);
            if (Ur(t, Zp))
                return !1;
            if (!Ur(e, Zp))
                return !1;
            switch (n.id) {
            case $P:
                return i;
            case WP:
                return a || s;
            case HP:
                return a || o;
            case qP:
            case KP:
                return a;
            case zP:
            case GP:
                return !0;
            default:
                return !1
            }
        }
        X.add("game-ui/game/components/selected-info-panel/selected-info-panel.tsx", {
            get SelectedInfoPanel() {
                return Fge
            },
            set SelectedInfoPanel(e) {
                Fge = e
            },
            get PanelSpace() {
                return Bge
            },
            set PanelSpace(e) {
                Bge = e
            },
            get useSelectedInfoPanelVisible() {
                return Gge
            },
            set useSelectedInfoPanelVisible(e) {
                Gge = e
            }
        });
        let Vge = {
            "nav-anchor": "nav-anchor_Raa",
            navAnchor: "nav-anchor_Raa",
            "nav-hint": "nav-hint_oVA",
            navHint: "nav-hint_oVA",
            "nav-hint-prev": "nav-hint-prev_Gr_",
            navHintPrev: "nav-hint-prev_Gr_"
        };
        X.add("game-ui/common/focus/navigation-group.module.scss", {
            get classes() {
                return Vge
            },
            set classes(e) {
                Object.assign(Vge, e)
            }
        });
        const Hge = Vge;
        var Kge = ({children: e, layout: t="split", ...n})=>{
            const [s,i] = (0,
            Y.useState)(!1);
            return (0,
            z.jsxs)(np, {
                onFocused: i,
                ...n,
                children: [s && ("split" === t || "left" === t) && (0,
                z.jsx)(Wge, {
                    index: 0,
                    className: Hge.navHintPrev
                }), s && "left" === t && (0,
                z.jsx)(Wge, {
                    index: 1
                }), e, s && "right" === t && (0,
                z.jsx)(Wge, {
                    index: 0,
                    className: Hge.navHintPrev
                }), s && ("split" === t || "right" === t) && (0,
                z.jsx)(Wge, {
                    index: 1
                })]
            })
        }
        ;
        const Wge = ({index: e, className: t})=>(0,
        z.jsx)("div", {
            className: Hge.navAnchor,
            children: (0,
            z.jsx)(UT, {
                action: "Switch Tab",
                bindingIndex: e,
                className: Zu()(Hge.navHint, t)
            })
        });
        X.add("game-ui/common/focus/navigation-group.tsx", {
            get NavigationGroup() {
                return Kge
            },
            set NavigationGroup(e) {
                Kge = e
            }
        });
        let zge = {
            "left-menu": "left-menu_L1D",
            leftMenu: "left-menu_L1D"
        };
        X.add("game-ui/game/components/left-menu/left-menu.module.scss", {
            get classes() {
                return zge
            },
            set classes(e) {
                Object.assign(zge, e)
            }
        });
        const Yge = zge;
        var $ge = ({className: e})=>(0,
        z.jsx)("div", {
            className: Zu()(Yge.leftMenu, e),
            children: (0,
            z.jsx)(V0, {
                name: "GameBottomLeft"
            })
        });
        X.add("game-ui/game/components/left-menu/left-menu.tsx", {
            get LeftMenu() {
                return $ge
            },
            set LeftMenu(e) {
                $ge = e
            }
        });
        let qge = {
            "chirper-popup": "chirper-popup_pEX",
            chirperPopup: "chirper-popup_pEX",
            item: "item_Pf8",
            enter: "enter_is9",
            "enter-active": "enter-active_pX6",
            enterActive: "enter-active_pX6",
            "exit-active": "exit-active_Mg7",
            exitActive: "exit-active_Mg7",
            "item-inner": "item-inner_Xwb",
            itemInner: "item-inner_Xwb",
            "chirp-layout": "chirp-layout_xHZ",
            chirpLayout: "chirp-layout_xHZ"
        };
        X.add("game-ui/game/components/chirper/chirper-popup.module.scss", {
            get classes() {
                return qge
            },
            set classes(e) {
                Object.assign(qge, e)
            }
        });
        const Xge = qge;
        var Qge = ({disabled: e, className: t, onClick: n})=>{
            const [s,i] = (0,
            Y.useState)([])
              , [a,o] = (0,
            Y.useState)(null)
              , r = s.length > 0;
            return (0,
            Y.useEffect)((()=>{
                if (!e) {
                    const e = uy.subscribe((e=>i((t=>[...t, e]))));
                    let t = 0;
                    if (r) {
                        const e = ()=>{
                            i((e=>e.slice(1, e.length))),
                            t = window.setTimeout(e, 7e3)
                        }
                        ;
                        t = window.setTimeout(e, 7e3)
                    }
                    return ()=>{
                        e.dispose(),
                        window.clearTimeout(t)
                    }
                }
                i([])
            }
            ), [e, r]),
            (0,
            Y.useEffect)((()=>{
                Ur(null !== a ? a.entity : Zp, s.length > 0 ? s[0].entity : Zp) || (s.length > 0 ? (o(s[0]),
                cp(lp.chirpEvent)) : o(null))
            }
            ), [a, s]),
            (0,
            z.jsx)("div", {
                className: Zu()(Xge.chirperPopup, t),
                children: (0,
                z.jsx)(ud, {
                    skipInitial: !1,
                    children: a && (0,
                    z.jsx)(mh, {
                        styles: Xge,
                        children: (0,
                        z.jsx)("div", {
                            className: Xge.item,
                            onClick: n,
                            children: (0,
                            z.jsx)("div", {
                                className: Xge.itemInner,
                                children: (0,
                                z.jsx)(_te, {
                                    focusKey: Sg,
                                    chirp: a,
                                    className: Xge.chirpLayout
                                })
                            })
                        })
                    }, Dr(a.entity))
                })
            })
        }
        ;
        X.add("game-ui/game/components/chirper/chirper-popup.tsx", {
            get ChirperPopup() {
                return Qge
            },
            set ChirperPopup(e) {
                Qge = e
            }
        });
        let Zge = {
            button: "button_iKo button_ECf item_It6 item-mouse-states_Fmi item-selected_tAM item-focused_FuT",
            "emergency-mode": "emergency-mode_MW7",
            emergencyMode: "emergency-mode_MW7",
            "toggle-states": "toggle-states_Yz9 toggle-states_DTm",
            toggleStates: "toggle-states_Yz9 toggle-states_DTm",
            icon: "icon_qLJ icon_soN icon_Iwk"
        };
        X.add("game-ui/game/components/right-menu/right-menu-button.module.scss", {
            get classes() {
                return Zge
            },
            set classes(e) {
                Object.assign(Zge, e)
            }
        });
        const Jge = Zge;
        let epe = {
            "horizontal-scroller": "horizontal-scroller_lkP",
            horizontalScroller: "horizontal-scroller_lkP",
            space: "space_FBs",
            content: "content_LaN"
        };
        X.add("game-ui/game/components/radio/horizontal-scroller/horizontal-scroller.module.scss", {
            get classes() {
                return epe
            },
            set classes(e) {
                Object.assign(epe, e)
            }
        });
        const tpe = epe;
        var npe = ({className: e, children: t})=>{
            const n = (0,
            Y.useRef)(null)
              , s = Hm();
            return (0,
            Y.useEffect)((()=>{
                const e = performance.now();
                let t = 0;
                const i = a=>{
                    if (!n.current)
                        return;
                    const o = Math.max(n.current.scrollWidth, 1);
                    n.current.scrollLeft = .08 * (a - e) * s % (o / 2),
                    t = window.requestAnimationFrame(i)
                }
                ;
                return t = window.requestAnimationFrame(i),
                ()=>window.cancelAnimationFrame(t)
            }
            ), [s]),
            (0,
            z.jsxs)("div", {
                ref: n,
                className: Zu()(tpe.horizontalScroller, e),
                children: [(0,
                z.jsx)("div", {
                    className: tpe.space
                }), (0,
                z.jsx)("div", {
                    className: tpe.content,
                    children: t
                }), (0,
                z.jsx)("div", {
                    className: tpe.space
                }), (0,
                z.jsx)("div", {
                    className: tpe.content,
                    children: t
                }), (0,
                z.jsx)("div", {
                    className: tpe.space
                }), (0,
                z.jsx)("div", {
                    className: tpe.content,
                    children: t
                }), (0,
                z.jsx)("div", {
                    className: tpe.space
                }), (0,
                z.jsx)("div", {
                    className: tpe.content,
                    children: t
                })]
            })
        }
        ;
        X.add("game-ui/game/components/radio/horizontal-scroller/horizontal-scroller.tsx", {
            get HorizontalScroller() {
                return npe
            },
            set HorizontalScroller(e) {
                npe = e
            }
        });
        let spe = {
            "emergency-radio-player": "emergency-radio-player_v9P",
            emergencyRadioPlayer: "emergency-radio-player_v9P",
            expanded: "expanded_G9_",
            "right-space": "right-space_TPn",
            rightSpace: "right-space_TPn",
            controls: "controls_mbB",
            "volume-controls": "volume-controls_Pqk",
            volumeControls: "volume-controls_Pqk",
            "volume-slider": "volume-slider_jT_",
            volumeSlider: "volume-slider_jT_",
            "center-controls": "center-controls_rY1",
            centerControls: "center-controls_rY1",
            "message-field": "message-field_Qua",
            messageField: "message-field_Qua",
            space: "space_MTH",
            button: "button_Hpo",
            hint: "hint_enz hint_Rv8",
            "hint-segment": "hint-segment_rYk",
            hintSegment: "hint-segment_rYk"
        };
        X.add("game-ui/game/components/radio/emergency-radio-player/emergency-radio-player.module.scss", {
            get classes() {
                return spe
            },
            set classes(e) {
                Object.assign(spe, e)
            }
        });
        const ipe = spe
          , ape = new Ig("FOCUS_EMERGENCY")
          , ope = new Ig("MUTE")
          , rpe = new Ig("VOLUME");
        var lpe = (0,
        Y.forwardRef)((function({expanded: e, className: t}, n) {
            const s = sl(qN)
              , i = sl(YN)
              , a = sl(ZN)
              , o = sl(JN)
              , [r,l] = (0,
            Y.useState)(null)
              , [c,u] = (0,
            Y.useState)(!1)
              , [d,m] = (0,
            Y.useState)(!1);
            return (0,
            z.jsx)(Cre, {
                enabled: e,
                children: (0,
                z.jsx)(Ip, {
                    onFocusChange: u,
                    ref: n,
                    className: Zu()(ipe.emergencyRadioPlayer, e && ipe.expanded, t),
                    children: (0,
                    z.jsx)(Rp, {
                        children: (0,
                        z.jsxs)(Zg, {
                            focused: r,
                            onChange: l,
                            direction: kg.Horizontal,
                            children: [(0,
                            z.jsxs)("div", {
                                className: ipe.controls,
                                children: [a && (0,
                                z.jsx)(Eg, {
                                    tooltip: (0,
                                    z.jsx)(_c.Radio.FOCUS_EMERGENCY, {}),
                                    children: (0,
                                    z.jsx)(tb, {
                                        disableHint: !0,
                                        tinted: !0,
                                        focusKey: ape,
                                        src: "Media/Radio/MapMarker.svg",
                                        className: ipe.button,
                                        onSelect: pw
                                    })
                                }), (0,
                                z.jsx)(Eg, {
                                    tooltip: s ? (0,
                                    z.jsx)(_c.Radio.UNMUTE, {}) : (0,
                                    z.jsx)(_c.Radio.MUTE, {}),
                                    children: (0,
                                    z.jsx)(tb, {
                                        disableHint: !0,
                                        tinted: !0,
                                        focusKey: ope,
                                        src: s ? "Media/Radio/VolumeMuted.svg" : "Media/Radio/Volume.svg",
                                        className: ipe.button,
                                        onSelect: uw,
                                        children: (0,
                                        z.jsx)(UT, {
                                            action: "Select",
                                            active: c && r === ope,
                                            className: ipe.hint
                                        })
                                    })
                                }), (0,
                                z.jsxs)(Ip, {
                                    focusSound: lp.hoverItem,
                                    className: ipe.volumeControls,
                                    children: [(0,
                                    z.jsx)(UT, {
                                        action: "Select",
                                        active: c && r === rpe && !d,
                                        className: Zu()(ipe.hint, ipe.hintSegment)
                                    }), (0,
                                    z.jsx)(Op, {
                                        onSelectedStateChanged: m,
                                        children: (0,
                                        z.jsx)(mT, {
                                            uiTag: vT.value?.radioPanelVolumeSlider,
                                            children: (0,
                                            z.jsx)(AA, {
                                                focusKey: e ? rpe : Sg,
                                                start: 0,
                                                end: 1,
                                                value: i,
                                                onChange: ow,
                                                sounds: LA,
                                                className: ipe.volumeSlider
                                            })
                                        })
                                    })]
                                }), (0,
                                z.jsx)("div", {
                                    className: ipe.centerControls,
                                    children: (0,
                                    z.jsx)(npe, {
                                        className: ipe.messageField,
                                        children: null != o && (0,
                                        z.jsx)(gu, {
                                            value: o
                                        })
                                    })
                                })]
                            }), (0,
                            z.jsx)("div", {
                                className: ipe.rightSpace
                            })]
                        })
                    })
                })
            })
        }
        ));
        X.add("game-ui/game/components/radio/emergency-radio-player/emergency-radio-player.tsx", {
            get EmergencyRadioPlayer() {
                return lpe
            },
            set EmergencyRadioPlayer(e) {
                lpe = e
            }
        });
        let cpe = {
            "radio-player": "radio-player_FIM",
            radioPlayer: "radio-player_FIM",
            expanded: "expanded_feM",
            "right-space": "right-space_BDk",
            rightSpace: "right-space_BDk",
            "segment-field": "segment-field_jsn",
            segmentField: "segment-field_jsn",
            "segment-field-scroller": "segment-field-scroller_sCs",
            segmentFieldScroller: "segment-field-scroller_sCs",
            "segment-title": "segment-title_OlY",
            segmentTitle: "segment-title_OlY",
            "segment-subtitle": "segment-subtitle_S9e",
            segmentSubtitle: "segment-subtitle_S9e",
            "controls-bounds": "controls-bounds_ty4",
            controlsBounds: "controls-bounds_ty4",
            "controls-visible": "controls-visible_Rcf",
            controlsVisible: "controls-visible_Rcf",
            controls: "controls_YUi",
            "volume-controls": "volume-controls_PII",
            volumeControls: "volume-controls_PII",
            "volume-slider": "volume-slider_daK",
            volumeSlider: "volume-slider_daK",
            "ads-control": "ads-control_pkw",
            adsControl: "ads-control_pkw",
            "ads-control-inner": "ads-control-inner_NuT",
            adsControlInner: "ads-control-inner_NuT",
            "ads-label": "ads-label_XQP",
            adsLabel: "ads-label_XQP",
            "center-controls": "center-controls_IeA",
            centerControls: "center-controls_IeA",
            button: "button_hbJ button_ECf item_It6 item-mouse-states_Fmi item-selected_tAM item-focused_FuT",
            "play-pause-button": "play-pause-button_s9V button_hbJ button_ECf item_It6 item-mouse-states_Fmi item-selected_tAM item-focused_FuT",
            playPauseButton: "play-pause-button_s9V button_hbJ button_ECf item_It6 item-mouse-states_Fmi item-selected_tAM item-focused_FuT",
            hint: "hint_shY",
            "hint-segment": "hint-segment_aVl",
            hintSegment: "hint-segment_aVl",
            "hint-left": "hint-left_lOq",
            hintLeft: "hint-left_lOq",
            "hint-right": "hint-right_Xfk",
            hintRight: "hint-right_Xfk",
            icon: "icon_teM"
        };
        X.add("game-ui/game/components/radio/radio-player/radio-player.module.scss", {
            get classes() {
                return cpe
            },
            set classes(e) {
                Object.assign(cpe, e)
            }
        });
        const upe = cpe
          , dpe = new Ig("MUTE")
          , mpe = new Ig("VOLUME")
          , hpe = new Ig("PREVIOUS")
          , gpe = new Ig("PLAY_PAUSE")
          , ppe = new Ig("NEXT")
          , fpe = new Ig("ADS")
          , xpe = {
            hint: upe.hint,
            icon: upe.icon
        }
          , vpe = lp.selectToggle;
        var _pe = Y.forwardRef((function({controlsVisible: e, expanded: t, className: n}, s) {
            const i = sl(iw)
              , a = sl($N)
              , o = sl(qN)
              , r = sl(YN)
              , l = sl(XN)
              , [c,u] = (0,
            Y.useState)(null)
              , [d,m] = (0,
            Y.useState)(!1)
              , [h,g] = (0,
            Y.useState)(!1);
            (0,
            Y.useEffect)((()=>{
                u(t ? gpe : ppe)
            }
            ), [t]);
            const p = (0,
            Y.useCallback)((()=>{
                cp(vpe),
                mw()
            }
            ), []);
            return (0,
            z.jsx)(Cre, {
                enabled: t,
                children: (0,
                z.jsx)("div", {
                    ref: s,
                    className: Zu()(upe.radioPlayer, e && upe.controlsVisible, t && upe.expanded, n),
                    children: (0,
                    z.jsx)(Rp, {
                        children: (0,
                        z.jsx)(Ah, {
                            onFocusChange: m,
                            children: (0,
                            z.jsxs)(Zg, {
                                focused: c,
                                direction: kg.Horizontal,
                                onChange: u,
                                onRefocus: Jg,
                                children: [i && (0,
                                z.jsx)("div", {
                                    className: upe.segmentField,
                                    children: (0,
                                    z.jsxs)(npe, {
                                        className: upe.segmentFieldScroller,
                                        children: [(0,
                                        z.jsx)("div", {
                                            className: upe.segmentTitle,
                                            children: i.title
                                        }), (0,
                                        z.jsx)("div", {
                                            className: upe.segmentSubtitle,
                                            children: i.info
                                        })]
                                    }, t ? 1 : 0)
                                }), (0,
                                z.jsx)("div", {
                                    className: upe.controlsBounds,
                                    children: (0,
                                    z.jsxs)("div", {
                                        className: upe.controls,
                                        children: [(0,
                                        z.jsx)(Eg, {
                                            tooltip: o ? (0,
                                            z.jsx)(_c.Radio.UNMUTE, {}) : (0,
                                            z.jsx)(_c.Radio.MUTE, {}),
                                            children: (0,
                                            z.jsx)(tb, {
                                                disableHint: !0,
                                                tinted: !0,
                                                focusKey: dpe,
                                                src: o ? "Media/Radio/VolumeMuted.svg" : "Media/Radio/Volume.svg",
                                                className: upe.button,
                                                onSelect: uw,
                                                children: (0,
                                                z.jsx)(UT, {
                                                    action: "Select",
                                                    active: d && c === dpe,
                                                    theme: xpe
                                                })
                                            })
                                        }), (0,
                                        z.jsxs)(Sp, {
                                            focusKey: mpe,
                                            focusSound: lp.hoverItem,
                                            className: upe.volumeControls,
                                            children: [(0,
                                            z.jsx)(Op, {
                                                onSelectedStateChanged: g,
                                                children: (0,
                                                z.jsx)(mT, {
                                                    uiTag: vT.value?.radioPanelVolumeSlider,
                                                    children: (0,
                                                    z.jsx)(AA, {
                                                        start: 0,
                                                        end: 1,
                                                        value: r,
                                                        onChange: ow,
                                                        sounds: LA,
                                                        className: upe.volumeSlider
                                                    })
                                                })
                                            }), (0,
                                            z.jsx)(UT, {
                                                action: h ? "Back" : "Select",
                                                active: d && c === mpe,
                                                theme: xpe,
                                                className: upe.hintRight
                                            })]
                                        }), (0,
                                        z.jsxs)("div", {
                                            className: upe.centerControls,
                                            children: [(0,
                                            z.jsx)(Eg, {
                                                tooltip: (0,
                                                z.jsx)(_c.Radio.PREVIOUS_BUTTON_TOOLTIP, {}),
                                                children: (0,
                                                z.jsx)(tb, {
                                                    disableHint: !0,
                                                    tinted: !0,
                                                    focusKey: hpe,
                                                    src: "Media/Radio/Previous.svg",
                                                    className: upe.button,
                                                    onSelect: hw,
                                                    children: (0,
                                                    z.jsx)(UT, {
                                                        action: "Select",
                                                        active: d && c === hpe,
                                                        theme: xpe
                                                    })
                                                })
                                            }), (0,
                                            z.jsx)(Eg, {
                                                tooltip: a ? (0,
                                                z.jsx)(_c.Radio.PLAY_BUTTON_TOOLTIP, {}) : (0,
                                                z.jsx)(_c.Radio.PAUSE_BUTTON_TOOLTIP, {}),
                                                children: (0,
                                                z.jsx)(tb, {
                                                    disableHint: !0,
                                                    tinted: !0,
                                                    focusKey: gpe,
                                                    src: a ? "Media/Radio/Play.svg" : "Media/Radio/Pause.svg",
                                                    className: upe.playPauseButton,
                                                    onSelect: lw,
                                                    children: (0,
                                                    z.jsx)(UT, {
                                                        action: "Select",
                                                        active: d && c === gpe,
                                                        theme: xpe
                                                    })
                                                })
                                            }), (0,
                                            z.jsx)(Eg, {
                                                tooltip: (0,
                                                z.jsx)(_c.Radio.NEXT_BUTTON_TOOLTIP, {}),
                                                children: (0,
                                                z.jsx)(tb, {
                                                    disableHint: !0,
                                                    tinted: !0,
                                                    focusKey: ppe,
                                                    src: "Media/Radio/Next.svg",
                                                    className: upe.button,
                                                    onSelect: gw,
                                                    children: (0,
                                                    z.jsx)(UT, {
                                                        action: "Select",
                                                        active: d && c === ppe,
                                                        theme: xpe
                                                    })
                                                })
                                            })]
                                        }), (0,
                                        z.jsx)(mT, {
                                            uiTag: vT.value?.radioPanelAdsToggle,
                                            children: (0,
                                            z.jsx)("div", {
                                                className: upe.adsControl,
                                                onClick: p,
                                                children: (0,
                                                z.jsx)(Eg, {
                                                    tooltip: (0,
                                                    z.jsx)(_c.Radio.ADS_BUTTON_TOOLTIP, {}),
                                                    children: (0,
                                                    z.jsxs)(Sp, {
                                                        focusKey: t ? fpe : Sg,
                                                        className: upe.adsControlInner,
                                                        children: [(0,
                                                        z.jsx)(UT, {
                                                            action: "Select",
                                                            active: d && c === fpe,
                                                            className: upe.hintLeft,
                                                            theme: xpe
                                                        }), (0,
                                                        z.jsx)("div", {
                                                            className: upe.adsLabel,
                                                            children: "Ads"
                                                        }), (0,
                                                        z.jsx)(P7, {
                                                            checked: !l,
                                                            className: upe.adsToggle,
                                                            onChange: mw,
                                                            toggleSound: vpe
                                                        })]
                                                    })
                                                })
                                            })
                                        })]
                                    })
                                }), (0,
                                z.jsx)("div", {
                                    className: upe.rightSpace
                                })]
                            })
                        })
                    })
                })
            })
        }
        ));
        X.add("game-ui/game/components/radio/radio-player/radio-player.tsx", {
            get RadioPlayer() {
                return _pe
            },
            set RadioPlayer(e) {
                _pe = e
            }
        });
        let bpe = {
            "station-icon": "station-icon_PgB",
            stationIcon: "station-icon_PgB",
            "warning-icon": "warning-icon_VOz",
            warningIcon: "warning-icon_VOz",
            anchor: "anchor_tuN",
            "anchor-inner": "anchor-inner_KV5",
            anchorInner: "anchor-inner_KV5",
            expanded: "expanded_SgP",
            "player-bounds": "player-bounds_x19",
            playerBounds: "player-bounds_x19",
            player: "player_rRd",
            enter: "enter_eXw",
            "enter-active": "enter-active_zDg",
            enterActive: "enter-active_zDg",
            "exit-active": "exit-active_gQZ",
            exitActive: "exit-active_gQZ",
            hint: "hint_Nwu hint_Rv8"
        };
        X.add("game-ui/game/components/radio/radio-player-button/radio-player-button.module.scss", {
            get classes() {
                return bpe
            },
            set classes(e) {
                Object.assign(bpe, e)
            }
        });
        const Tpe = bpe
          , Epe = new Ig("RADIO_BUTTON")
          , Ipe = new Ig("PLAYER");
        var Spe = ({className: e})=>{
            const t = sl(QN)
              , n = f4(Fv.Radio)
              , s = rN("Radio")
              , i = sl(sw)
              , a = sl(tw)
              , o = i.find((e=>e.name === a))
              , r = o?.icon
              , [l,c] = (0,
            Y.useState)(!1)
              , [u,d] = (0,
            Y.useState)(!1)
              , m = (0,
            Y.useCallback)((()=>d(!0)), [])
              , h = (0,
            Y.useCallback)((()=>{
                c(!1),
                d(!1)
            }
            ), []);
            (0,
            Y.useEffect)((()=>{
                let e = 0;
                const t = aw.subscribe((()=>{
                    window.clearTimeout(e),
                    c(!0),
                    e = window.setTimeout((()=>c(!1)), 3e3)
                }
                ));
                return ()=>{
                    window.clearTimeout(e),
                    t.dispose()
                }
            }
            ), []);
            const g = Dm()
              , [p,f] = (0,
            Y.useState)(!1)
              , [x,v] = (0,
            Y.useState)(!1)
              , [_,b] = (0,
            Y.useState)(!1)
              , T = _ ? Ipe : Epe
              , E = (0,
            Y.useMemo)((()=>({
                "Move Horizontal": e=>{
                    const t = e < 0;
                    return _ !== t && (b(t),
                    !0)
                }
            })), [_])
              , I = (0,
            Y.useCallback)((e=>{
                f(e),
                e || b(!1)
            }
            ), [])
              , S = u || p && g;
            return (0,
            z.jsx)("div", {
                className: Zu()(Tpe.anchor, e),
                onMouseEnter: m,
                onMouseLeave: h,
                children: (0,
                z.jsx)(Mg, {
                    actions: E,
                    children: (0,
                    z.jsx)(Ah, {
                        onFocusChange: I,
                        children: (0,
                        z.jsxs)(op, {
                            focused: T,
                            children: [(0,
                            z.jsx)(ap, {
                                focusKey: Ipe,
                                children: (0,
                                z.jsxs)(ud, {
                                    children: [(n.visible || l || S) && !t && !s && (0,
                                    z.jsx)("div", {
                                        className: Zu()(Tpe.anchorInner, n.visible && Tpe.expanded),
                                        children: (0,
                                        z.jsx)("div", {
                                            className: Tpe.playerBounds,
                                            children: (0,
                                            z.jsx)(mh, {
                                                styles: Tpe,
                                                children: (0,
                                                z.jsx)(_pe, {
                                                    controlsVisible: S,
                                                    expanded: n.visible,
                                                    className: Tpe.player
                                                })
                                            })
                                        })
                                    }), t && (0,
                                    z.jsx)("div", {
                                        className: Zu()(Tpe.anchorInner, n.visible && Tpe.expanded),
                                        children: (0,
                                        z.jsx)("div", {
                                            className: Tpe.playerBounds,
                                            children: (0,
                                            z.jsx)(mh, {
                                                styles: Tpe,
                                                children: (0,
                                                z.jsx)(lpe, {
                                                    expanded: n.visible,
                                                    className: Tpe.player
                                                })
                                            })
                                        })
                                    })]
                                })
                            }, "player"), (0,
                            z.jsx)(mT, {
                                uiTag: vT.value?.radioPanelButton,
                                children: (0,
                                z.jsx)(Ah, {
                                    onFocusChange: v,
                                    children: (0,
                                    z.jsxs)(U_, {
                                        disableHint: !0,
                                        focusKey: Epe,
                                        theme: Jge,
                                        selected: n.visible,
                                        className: Zu()(Tpe.button, Jge.toggleStates, t && Jge.emergencyMode),
                                        disabled: s,
                                        onSelect: n.toggle,
                                        shortcut: "Radio Panel",
                                        children: [(0,
                                        z.jsx)(UT, {
                                            action: n.visible ? "Back" : "Select",
                                            active: (x || n.visible) && !s,
                                            className: Tpe.hint
                                        }), t ? (0,
                                        z.jsx)(Z_, {
                                            src: "Media/Glyphs/Warning.svg",
                                            className: Tpe.warningIcon
                                        }) : (0,
                                        z.jsx)("img", {
                                            src: r,
                                            className: Tpe.stationIcon
                                        })]
                                    })
                                })
                            })]
                        })
                    })
                })
            })
        }
        ;
        X.add("game-ui/game/components/radio/radio-player-button/radio-player-button.tsx", {
            get RadioPlayerButton() {
                return Spe
            },
            set RadioPlayerButton(e) {
                Spe = e
            }
        });
        let ype = {
            "number-badge": "number-badge__VH",
            numberBadge: "number-badge__VH",
            animated: "animated_mNr",
            pulsate: "pulsate_TNZ",
            "map-tile-badge": "map-tile-badge_wN7",
            mapTileBadge: "map-tile-badge_wN7",
            "dev-point-badge": "dev-point-badge_B9x",
            devPointBadge: "dev-point-badge_B9x"
        };
        X.add("game-ui/game/components/toolbar/components/number-badge/number-badge.module.scss", {
            get classes() {
                return ype
            },
            set classes(e) {
                Object.assign(ype, e)
            }
        });
        const jpe = ype;
        var Cpe = ({className: e, children: t})=>(0,
        z.jsx)("div", {
            className: Zu()(jpe.numberBadge, e),
            children: t
        })
          , Npe = ({value: e, className: t})=>{
            const n = sl(Wh)
              , s = sl(DN)
              , i = n || !Ur(s, Zp)
              , [a,o] = (0,
            Y.useState)(!1)
              , r = (0,
            Y.useRef)(null);
            return (0,
            Y.useEffect)((()=>{
                if (null != r.current && (o(!0),
                e > r.current)) {
                    r.current = e;
                    const t = window.setTimeout((()=>o(!1)), 100);
                    return ()=>window.clearTimeout(t)
                }
                r.current = e
            }
            ), [e]),
            (0,
            z.jsx)(Cpe, {
                className: Zu()(!i && !a && jpe.animated, t),
                children: bu(e)
            })
        }
        ;
        X.add("game-ui/game/components/toolbar/components/number-badge/number-badge.tsx", {
            get ButtonBadge() {
                return Cpe
            },
            set ButtonBadge(e) {
                Cpe = e
            },
            get AnimatedNumberBadge() {
                return Npe
            },
            set AnimatedNumberBadge(e) {
                Npe = e
            }
        });
        let wpe = {
            "right-menu": "right-menu_u58",
            rightMenu: "right-menu_u58",
            item: "item_sWO",
            "chirper-popup-anchor": "chirper-popup-anchor_p7b",
            chirperPopupAnchor: "chirper-popup-anchor_p7b",
            "chirper-popup": "chirper-popup_H95",
            chirperPopup: "chirper-popup_H95",
            lock: "lock_IUS lock_EMU",
            hint: "hint_Rv8"
        };
        X.add("game-ui/game/components/right-menu/right-menu.module.scss", {
            get classes() {
                return wpe
            },
            set classes(e) {
                Object.assign(wpe, e)
            }
        });
        const Ope = wpe;
        let Ppe = {
            base: "base_GQv",
            enter: "enter_ZkJ",
            "exit-active": "exit-active__eD",
            exitActive: "exit-active__eD",
            "enter-active": "enter-active_x_X",
            enterActive: "enter-active_x_X",
            exit: "exit_B1r"
        };
        X.add("game-ui/game/components/right-menu/right-menu-notifications.module.scss", {
            get classes() {
                return Ppe
            },
            set classes(e) {
                Object.assign(Ppe, e)
            }
        });
        const Lpe = Ppe
          , Ape = {
            direction: "left",
            alignment: "center"
        };
        var Mpe = YT({
            chirper: "Media/Game/Icons/Chirper.svg",
            notifications: "Media/Game/Icons/Notifications.svg",
            lifepath: "Media/Game/Icons/Lifepath.svg",
            journal: "Media/Game/Icons/Journal.svg"
        })
          , Rpe = ({className: e})=>{
            const t = sl(Cae).length
              , n = f4(Fv.Notifications)
              , s = f4(Fv.Chirper)
              , i = f4(Fv.Journal)
              , a = f4(Fv.LifePath)
              , o = f4(Fv.CinematicCamera)
              , r = sl(xC)
              , l = oN("Chirper")
              , c = oN("Followed Citizens")
              , u = oN("Event Journal")
              , d = sl(zN)
              , m = sl(QN)
              , h = sl(Ml)
              , g = sl(Lv)
              , p = sl(Gv)
              , f = !l.locked && h && !p && !s.visible && !i.visible && !a.visible && !o.visible && !r && g === Ov.main
              , x = (0,
            Y.useCallback)((()=>{
                i.visible ? Wj() : Kj(),
                i.toggle()
            }
            ), [i]);
            return (0,
            z.jsxs)("div", {
                className: Zu()(Ope.rightMenu, e),
                children: [(0,
                z.jsx)(V0, {
                    name: "GameBottomRight"
                }), (0,
                z.jsx)(wS, {
                    in: t > 0 || n.visible,
                    children: (0,
                    z.jsx)(mh, {
                        styles: Lpe,
                        children: (0,
                        z.jsx)(kpe, {
                            src: Mpe.notifications,
                            selected: n.visible,
                            onSelect: n.toggle,
                            shortcut: "Notification Panel",
                            ...Ape,
                            title: (0,
                            z.jsx)(_c.Main.TOOLTIP_TITLE_NOTIFICATIONS, {}),
                            description: (0,
                            z.jsx)(_c.Main.TOOLTIP_DESCRIPTION_NOTIFICATIONS, {}),
                            children: t > 0 && (0,
                            z.jsx)(Cpe, {
                                children: (0,
                                z.jsx)(Oc, {
                                    value: t,
                                    unit: vc.Integer
                                })
                            })
                        })
                    })
                }), (0,
                z.jsxs)("div", {
                    className: Zu()(Ope.item, Ope.chirperPopupAnchor),
                    children: [(0,
                    z.jsx)(Qge, {
                        disabled: !f,
                        className: Ope.chirperPopup,
                        onClick: s.toggle
                    }), (0,
                    z.jsx)(mT, {
                        uiTag: vT.value?.chirperPanelButton,
                        children: (0,
                        z.jsx)(kpe, {
                            src: Mpe.chirper,
                            selected: s.visible,
                            locked: l.locked,
                            selectSound: lp.chirper,
                            onSelect: s.toggle,
                            shortcut: "Chirper Panel",
                            ...Ape,
                            title: (0,
                            z.jsx)(_c.Main.TOOLTIP_TITLE_CHIRPER, {}),
                            description: (0,
                            z.jsx)(_c.Main.TOOLTIP_DESCRIPTION_CHIRPER, {}),
                            requirements: l.requirements,
                            direction: "left",
                            alignment: "start"
                        })
                    })]
                }), (0,
                z.jsx)(mT, {
                    uiTag: vT.value?.lifePathPanelButton,
                    children: (0,
                    z.jsx)(kpe, {
                        src: Mpe.lifepath,
                        selected: a.visible,
                        locked: c.locked,
                        onSelect: a.toggle,
                        shortcut: "Lifepath Panel",
                        ...Ape,
                        title: (0,
                        z.jsx)(_c.Main.TOOLTIP_TITLE_FOLLOWED_CITIZENS, {}),
                        description: (0,
                        z.jsx)(_c.Main.TOOLTIP_DESCRIPTION_FOLLOWED_CITIZENS, {}),
                        requirements: c.requirements,
                        direction: "left",
                        alignment: "start"
                    })
                }), (0,
                z.jsx)(mT, {
                    uiTag: vT.value?.eventJournalPanelButton,
                    children: (0,
                    z.jsx)(kpe, {
                        src: Mpe.journal,
                        selected: i.visible,
                        locked: u.locked,
                        onSelect: x,
                        shortcut: "Event Journal Panel",
                        ...Ape,
                        title: (0,
                        z.jsx)(_c.Main.TOOLTIP_TITLE_EVENT_JOURNAL, {}),
                        description: (0,
                        z.jsx)(_c.Main.TOOLTIP_DESCRIPTION_EVENT_JOURNAL, {}),
                        requirements: u.requirements,
                        direction: "left",
                        alignment: "start"
                    })
                }), (d || m) && (0,
                z.jsx)(Spe, {
                    className: Ope.item
                })]
            })
        }
        ;
        const kpe = Y.forwardRef((function({src: e, selected: t, locked: n, selectSound: s, shortcut: i, children: a, className: o, onSelect: r, ...l}, c) {
            const u = Dm()
              , d = sl(Dl)
              , [m,h] = (0,
            Y.useState)(!1)
              , [g,p] = (0,
            Y.useState)(!1);
            ol(wm, (e=>u && p(!!e.find((e=>"Back" === e.name)))));
            const f = m && !n && !t
              , x = t && !g;
            return (0,
            z.jsx)(H6, {
                ...l,
                locked: n,
                shortcut: (0,
                z.jsx)(BT, {
                    action: i,
                    active: d && !t,
                    shortName: wp.FallbackToControl
                }),
                children: (0,
                z.jsxs)("div", {
                    ref: c,
                    className: Zu()(Ope.item, o),
                    children: [(0,
                    z.jsx)(UT, {
                        action: f ? "Select" : x ? "Back" : void 0,
                        className: Ope.hint
                    }), (0,
                    z.jsx)(Ah, {
                        onFocusChange: h,
                        children: (0,
                        z.jsxs)(tb, {
                            disableHint: !0,
                            src: e,
                            selected: t,
                            disabled: n,
                            selectSound: s,
                            theme: Jge,
                            className: Jge.toggleStates,
                            onSelect: r,
                            focusKey: u ? yg : void 0,
                            shortcut: i,
                            children: [a, n && (0,
                            z.jsx)(OZ, {
                                className: Ope.lock
                            })]
                        })
                    })]
                })
            })
        }
        ));
        X.add("game-ui/game/components/right-menu/right-menu.tsx", {
            get images() {
                return Mpe
            },
            set images(e) {
                Mpe = e
            },
            get RightMenu() {
                return Rpe
            },
            set RightMenu(e) {
                Rpe = e
            }
        });
        let Dpe = {
            "city-name-field": "city-name-field_XDy field_eKJ selectable_otQ",
            cityNameField: "city-name-field_XDy field_eKJ selectable_otQ",
            container: "container_MC3",
            input: "input_JJ_ content_syM",
            label: "label_mWz content_syM"
        };
        X.add("game-ui/game/components/toolbar/bottom/city-name-field/city-name-field.module.scss", {
            get classes() {
                return Dpe
            },
            set classes(e) {
                Object.assign(Dpe, e)
            }
        });
        const Fpe = Dpe;
        var Upe = Y.memo((function({name: e, onChange: t, onBlur: n}) {
            const [s,i] = (0,
            Y.useState)(!1)
              , [a,o] = (0,
            Y.useState)(!1)
              , r = (0,
            Y.useCallback)((()=>i(!0)), [])
              , l = (0,
            Y.useCallback)((()=>{
                n(),
                i(!1)
            }
            ), [n]);
            return (0,
            z.jsx)(BQ, {
                disabled: s,
                title: (0,
                z.jsx)(_c.Main.TOOLTIP_TITLE_CITY_NAME, {}),
                description: (0,
                z.jsx)(_c.Main.TOOLTIP_DESCRIPTION_CITY_NAME, {}),
                children: (0,
                z.jsxs)(Sp, {
                    className: Fpe.cityNameField,
                    onFocusChange: o,
                    children: [(0,
                    z.jsx)(UT, {
                        action: s ? "Back" : "Select",
                        active: a,
                        className: YQ.hint
                    }), (0,
                    z.jsx)(HH, {
                        disableHint: !0,
                        value: e,
                        vkTitle: (0,
                        z.jsx)(_c.VirtualKeyboard.TITLE, {
                            hash: "CityName"
                        }),
                        theme: Fpe,
                        onChange: t,
                        onFocus: r,
                        onBlur: l
                    })]
                })
            })
        }
        ), ((e,t)=>e.name === t.name));
        const Bpe = ()=>{
            const e = sl(BL)
              , [t,n] = (0,
            Y.useState)(e);
            (0,
            Y.useEffect)((()=>{
                n(e)
            }
            ), [e]);
            const s = (0,
            Y.useCallback)((e=>{
                n(e.target.value)
            }
            ), [])
              , i = (0,
            Y.useCallback)((()=>{
                const s = t.trim()
                  , i = s || e;
                KL(i),
                n(i)
            }
            ), [e, t]);
            return (0,
            z.jsx)(Upe, {
                name: t,
                onBlur: i,
                onChange: s
            })
        }
        ;
        X.add("game-ui/game/components/toolbar/bottom/city-name-field/city-name-field.tsx", {
            get CityNameField() {
                return Bpe
            },
            set CityNameField(e) {
                Bpe = e
            }
        });
        let Gpe = {
            content: "content_B0O",
            indicators: "indicators_ZC7",
            icon: "icon_Tkh",
            active: "active_nrD",
            trend: "trend_NRr",
            visible: "visible__qP",
            "dev-info": "dev-info_PVK",
            devInfo: "dev-info_PVK",
            factors: "factors_IuM"
        };
        X.add("game-ui/game/components/toolbar/bottom/happiness-field/happiness-field.module.scss", {
            get classes() {
                return Gpe
            },
            set classes(e) {
                Object.assign(Gpe, e)
            }
        });
        const Vpe = Gpe
          , Hpe = ["Media/Game/Icons/Depressed.svg", "Media/Game/Icons/Sad.svg", "Media/Game/Icons/Neutral.svg", "Media/Game/Icons/Content.svg", "Media/Game/Icons/Happy.svg"]
          , Kpe = ()=>{
            const e = sl(rj);
            return e.length > 0 ? (0,
            z.jsxs)(z.Fragment, {
                children: [(0,
                z.jsx)(jS, {}), (0,
                z.jsx)("div", {
                    className: Vpe.factors,
                    children: e.map(((e,t)=>(0,
                    z.jsx)(WS, {
                        left: e.weight > 0 ? (0,
                        z.jsx)(_c.Common.HAPPINESS_FACTOR_POSITIVE, {
                            hash: e.factor
                        }) : (0,
                        z.jsx)(_c.Common.HAPPINESS_FACTOR_NEGATIVE, {
                            hash: e.factor
                        }),
                        right: (0,
                        z.jsx)("div", {
                            className: $p(x6, e.weight),
                            children: (0,
                            z.jsx)(Oc, {
                                value: e.weight,
                                signed: !0
                            })
                        })
                    }, t)))
                })]
            }) : null
        }
        ;
        var Wpe = ()=>{
            const [e,t] = (0,
            Y.useState)(!1)
              , n = sl(Kq)
              , s = sl(oj)
              , i = function(e) {
                return e > 70 ? 4 : e > 55 ? 3 : e > 40 ? 2 : e > 25 ? 1 : 0
            }(s)
              , a = function(e) {
                const [t,n] = (0,
                Y.useState)(0)
                  , s = (0,
                Y.useRef)(e)
                  , i = (0,
                Y.useRef)(e)
                  , a = (0,
                Y.useRef)(null)
                  , o = (0,
                Y.useRef)(null)
                  , r = (0,
                Y.useMemo)((()=>{
                    const e = ()=>{
                        n(0),
                        o.current = null
                    }
                      , t = ()=>{
                        const r = i.current - s.current;
                        Math.abs(r) > 0 ? (s.current = i.current,
                        n(r),
                        o.current && window.clearTimeout(o.current),
                        o.current = window.setTimeout(e, Ype),
                        a.current = window.setTimeout(t, zpe)) : a.current = null
                    }
                    ;
                    return t
                }
                ), []);
                return (0,
                Y.useEffect)((()=>{
                    i.current = e,
                    null == a.current && r()
                }
                ), [r, e]),
                (0,
                Y.useEffect)((()=>()=>{
                    null != a.current && window.clearTimeout(a.current),
                    null != o.current && window.clearTimeout(o.current)
                }
                ), []),
                t
            }(s)
              , o = Nv("Happiness");
            return (0,
            z.jsx)(BQ, {
                title: (0,
                z.jsx)(_c.CityInfoPanel.TOOLTIP_HAPPINESS_TITLE, {}),
                description: (0,
                z.jsx)(_c.CityInfoPanel.TOOLTIP_HAPPINESS_DESCRIPTION, {}),
                content: (0,
                z.jsx)(Kpe, {}),
                children: (0,
                z.jsx)(Ah, {
                    onFocusChange: t,
                    children: (0,
                    z.jsxs)(KQ, {
                        contentClassName: Vpe.content,
                        onSelect: o,
                        children: [(0,
                        z.jsx)(UT, {
                            action: "Select",
                            active: e,
                            className: YQ.hint
                        }), (0,
                        z.jsx)("img", {
                            src: "Media/Game/Misc/HappinessMinus.svg",
                            className: Zu()(Vpe.trend, a < 0 && Vpe.visible)
                        }), (0,
                        z.jsx)("div", {
                            className: Vpe.indicators,
                            children: Hpe.map(((e,t)=>(0,
                            z.jsx)("img", {
                                src: e,
                                className: Zu()(Vpe.icon, t === i && Vpe.active)
                            }, t)))
                        }), (0,
                        z.jsx)("img", {
                            src: "Media/Game/Misc/HappinessPlus.svg",
                            className: Zu()(Vpe.trend, a > 0 && Vpe.visible)
                        }), n && (0,
                        z.jsx)("div", {
                            className: Vpe.devInfo,
                            children: s
                        })]
                    })
                })
            })
        }
        ;
        const zpe = 15e3
          , Ype = 1e4;
        X.add("game-ui/game/components/toolbar/bottom/happiness-field/happiness-field.tsx", {
            get HappinessField() {
                return Wpe
            },
            set HappinessField(e) {
                Wpe = e
            }
        });
        let $pe = {
            content: "content_QTZ",
            icon: "icon_bCS",
            value: "value_ruP",
            negative: "negative_xQP",
            trend: "trend_IAr",
            "trend-icon": "trend-icon_AgE",
            trendIcon: "trend-icon_AgE",
            positive: "positive_PUr",
            unlimited: "unlimited_Dsm"
        };
        X.add("game-ui/game/components/toolbar/components/stat-field/stat-field.module.scss", {
            get classes() {
                return $pe
            },
            set classes(e) {
                Object.assign($pe, e)
            }
        });
        const qpe = $pe;
        var Xpe = ({icon: e, value: t, valueUnit: n, trend: s, trendIcon: i, unlimited: a=!1, className: o, onSelect: r})=>a ? (0,
        z.jsx)(Qpe, {
            icon: e,
            onSelect: r,
            className: o
        }) : (0,
        z.jsxs)(KQ, {
            contentClassName: qpe.content,
            onSelect: r,
            className: Zu()(qpe.statField, o),
            children: [(0,
            z.jsx)("img", {
                src: e,
                className: qpe.icon
            }), a ? (0,
            z.jsx)("div", {
                className: qpe.unlimited,
                children: "∞"
            }) : (0,
            z.jsxs)(z.Fragment, {
                children: [(0,
                z.jsx)("div", {
                    className: Zu()(qpe.value, t < 0 && qpe.negative),
                    children: (0,
                    z.jsx)(Oc, {
                        value: t,
                        unit: n
                    })
                }), i && "number" == typeof s && (0,
                z.jsx)("div", {
                    className: qpe.trend,
                    children: (0,
                    z.jsx)(Z_, {
                        src: i,
                        className: Zu()(qpe.trendIcon, $p(qpe, s))
                    })
                })]
            })]
        })
          , Qpe = ({icon: e, className: t, onSelect: n, shortcut: s})=>(0,
        z.jsxs)(KQ, {
            contentClassName: qpe.content,
            onSelect: n,
            shortcut: s,
            className: Zu()(qpe.statField, t),
            children: [(0,
            z.jsx)("img", {
                src: e,
                className: qpe.icon
            }), (0,
            z.jsx)("div", {
                className: qpe.unlimited,
                children: "∞"
            })]
        })
          , Zpe = ({icon: e, value: t, valueUnit: n, trend: s, thresholdt: i, unlimited: a=!1, className: o, onSelect: r, shortcut: l})=>{
            const c = (0,
            Y.useRef)(null)
              , u = t.value
              , d = s.value
              , m = (0,
            Y.useCallback)((()=>{
                const e = i.value
                  , n = Math.abs(t.value)
                  , a = Math.abs(s.value);
                return 0 === a ? void 0 : a <= n * e.x ? `Media/Glyphs/${s.value < 0 ? "TrendDown" : "TrendUp"}.svg` : a <= n * e.y ? `Media/Glyphs/${s.value < 0 ? "TrendDownMedium" : "TrendUpMedium"}.svg` : `Media/Glyphs/${s.value < 0 ? "TrendDownHigh" : "TrendUpHigh"}.svg`
            }
            ), [i, s, t])
              , h = (0,
            Y.useRef)()
              , [g,p] = (0,
            Y.useState)((()=>(0,
            z.jsx)("div", {
                className: qpe.trendIcon
            })))
              , f = sc();
            return ol(t, (e=>{
                c.current && (c.current.innerHTML = Yc(f, e, n),
                c.current.classList[e >= 0 ? "remove" : "add"](qpe.negative))
            }
            )),
            ol(s, (e=>{
                const t = m();
                h.current !== t && (h.current = t,
                p(t ? (0,
                z.jsx)(Z_, {
                    src: t,
                    className: Zu()(qpe.trendIcon, $p(qpe, e))
                }) : (0,
                z.jsx)("div", {
                    className: qpe.trendIcon
                })))
            }
            )),
            a ? (0,
            z.jsx)(Qpe, {
                icon: e,
                onSelect: r,
                shortcut: l,
                className: o
            }) : (0,
            z.jsxs)(KQ, {
                contentClassName: qpe.content,
                onSelect: r,
                shortcut: l,
                className: Zu()(qpe.statField, o),
                children: [(0,
                z.jsx)("img", {
                    src: e,
                    className: qpe.icon
                }), a ? (0,
                z.jsx)("div", {
                    className: qpe.unlimited,
                    children: "∞"
                }) : (0,
                z.jsxs)(z.Fragment, {
                    children: [(0,
                    z.jsx)("div", {
                        className: Zu()(qpe.value, u < 0 && qpe.negative),
                        ref: c,
                        children: (0,
                        z.jsx)(Oc, {
                            value: u,
                            unit: n
                        })
                    }), g && "number" == typeof d && (0,
                    z.jsx)("div", {
                        className: qpe.trend,
                        children: g
                    })]
                })]
            })
        }
        ;
        X.add("game-ui/game/components/toolbar/components/stat-field/stat-field.tsx", {
            get StatField() {
                return Xpe
            },
            set StatField(e) {
                Xpe = e
            },
            get UnlimitedStatField() {
                return Qpe
            },
            set UnlimitedStatField(e) {
                Qpe = e
            },
            get StatFieldTrend() {
                return Zpe
            },
            set StatFieldTrend(e) {
                Zpe = e
            }
        });
        let Jpe = {
            trend: "trend_K7y",
            positive: "positive_n5t",
            negative: "negative_Moc",
            container: "container_DC2"
        };
        X.add("game-ui/game/components/toolbar/bottom/money-field/money-field.module.scss", {
            get classes() {
                return Jpe
            },
            set classes(e) {
                Object.assign(Jpe, e)
            }
        });
        const efe = Jpe;
        var tfe = ()=>{
            const e = (0,
            Y.useRef)(null)
              , t = sc()
              , n = al(UL)
              , [s,i] = (0,
            Y.useState)((()=>$p(efe, n.current)));
            return ol(UL, (s=>{
                e.current && (e.current.innerHTML = Yc(t, s, vc.MoneyPerHour, !0),
                i($p(efe, n.current)))
            }
            )),
            (0,
            z.jsxs)("div", {
                className: efe.trend,
                children: [(0,
                z.jsx)(_c.Toolbar.CURRENT_TREND, {}), (0,
                z.jsx)("div", {
                    className: s,
                    ref: e,
                    children: (0,
                    z.jsx)(Oc, {
                        value: n.current,
                        unit: vc.MoneyPerHour,
                        signed: !0
                    })
                })]
            })
        }
        ;
        const nfe = ()=>{
            const [e,t] = (0,
            Y.useState)(!1)
              , n = sl(GL)
              , s = rN("City Budget")
              , i = sl(vC)
              , a = f4(Fv.Economy)
              , o = (0,
            Y.useCallback)((()=>{
                Hv(Fv.Economy),
                i && a.visible && CC(!0)
            }
            ), [a.visible, i]);
            return (0,
            z.jsxs)("div", {
                className: efe.container,
                children: [(0,
                z.jsx)(BQ, {
                    title: (0,
                    z.jsx)(_c.Main.TOOLTIP_TITLE_MONEY, {}),
                    description: n ? (0,
                    z.jsx)(_c.Main.TOOLTIP_DESCRIPTION_UNLIMITED_MONEY, {}) : (0,
                    z.jsx)(_c.Main.TOOLTIP_DESCRIPTION_MONEY, {}),
                    content: (0,
                    z.jsx)(tfe, {}),
                    children: (0,
                    z.jsx)(Ah, {
                        onFocusChange: t,
                        children: (0,
                        z.jsx)(Zpe, {
                            icon: "Media/Game/Icons/Money.svg",
                            value: FL,
                            unlimited: n,
                            valueUnit: vc.Integer,
                            trend: UL,
                            thresholdt: HL,
                            onSelect: s ? void 0 : o,
                            shortcut: i ? "Economy Panel" : void 0,
                            className: efe.moneyField
                        })
                    })
                }), (0,
                z.jsx)(UT, {
                    action: "Select",
                    active: !s && e,
                    className: YQ.hint
                })]
            })
        }
        ;
        X.add("game-ui/game/components/toolbar/bottom/money-field/money-field.tsx", {
            get MoneyField() {
                return nfe
            },
            set MoneyField(e) {
                nfe = e
            }
        });
        let sfe = {
            trend: "trend_IdP",
            positive: "positive_yei",
            negative: "negative_LzO",
            container: "container_Kmm"
        };
        X.add("game-ui/game/components/toolbar/bottom/population-field/population-field.module.scss", {
            get classes() {
                return sfe
            },
            set classes(e) {
                Object.assign(sfe, e)
            }
        });
        const ife = sfe;
        var afe = ()=>{
            const e = (0,
            Y.useRef)(null)
              , t = sc()
              , [n] = (0,
            Y.useState)((()=>DL.value));
            return ol(DL, (n=>{
                e.current && (e.current.innerHTML = Yc(t, n, vc.IntegerPerHour, !0),
                e.current.className = $p(ife, n) ?? "")
            }
            )),
            (0,
            z.jsxs)("div", {
                className: ife.trend,
                children: [(0,
                z.jsx)(_c.Toolbar.CURRENT_TREND, {}), (0,
                z.jsx)("div", {
                    className: $p(ife, n),
                    ref: e,
                    children: (0,
                    z.jsx)(Oc, {
                        value: n,
                        unit: vc.IntegerPerHour,
                        signed: !0
                    })
                })]
            })
        }
        ;
        const ofe = ()=>{
            const [e,t] = (0,
            Y.useState)(!1)
              , n = Nv("Population");
            return (0,
            z.jsxs)(Ip, {
                onFocusChange: t,
                className: ife.container,
                children: [(0,
                z.jsx)(BQ, {
                    title: (0,
                    z.jsx)(_c.Main.TOOLTIP_TITLE_POPULATION, {}),
                    description: (0,
                    z.jsx)(_c.Main.TOOLTIP_DESCRIPTION_POPULATION, {}),
                    content: (0,
                    z.jsx)(afe, {}),
                    children: (0,
                    z.jsx)(Zpe, {
                        icon: "Media/Game/Icons/Citizen.svg",
                        value: kL,
                        valueUnit: vc.Integer,
                        trend: DL,
                        thresholdt: VL,
                        onSelect: n,
                        className: ife.populationField
                    })
                }), (0,
                z.jsx)(UT, {
                    action: "Select",
                    active: void 0 !== n && e,
                    className: YQ.hint
                })]
            })
        }
        ;
        X.add("game-ui/game/components/toolbar/bottom/population-field/population-field.tsx", {
            get PopulationField() {
                return ofe
            },
            set PopulationField(e) {
                ofe = e
            }
        });
        let rfe = {
            width: "116px",
            height: "36px",
            shadowHeight: "1.5px",
            rangeFill: "rgba(255, 255, 255, 0.08)",
            shadowFill: "rgba(0, 0, 0, 0.2)",
            image: "image_E3g"
        };
        X.add("game-ui/game/components/toolbar/top/city-info-field/demand-bars.module.scss", {
            get classes() {
                return rfe
            },
            set classes(e) {
                Object.assign(rfe, e)
            }
        });
        const lfe = rfe;
        var cfe = (0,
        Y.memo)((function({items: e, className: t}) {
            const n = Vm(lfe.width)
              , s = Vm(lfe.height)
              , i = s / Math.max(1, e.length)
              , a = i / 2
              , o = Vm(lfe.shadowHeight);
            return (0,
            z.jsx)(xd, {
                children: (0,
                z.jsx)("div", {
                    className: Zu()(lfe.demandBars, t),
                    children: (0,
                    z.jsxs)("svg", {
                        viewBox: `0 0 ${n} ${s}`,
                        className: lfe.image,
                        children: [(0,
                        z.jsxs)("linearGradient", {
                            id: "shadow",
                            gradientUnits: "objectBoundingBox",
                            x1: 0,
                            x2: 0,
                            y1: 1,
                            y2: 0,
                            children: [(0,
                            z.jsx)("stop", {
                                offset: "0",
                                stopColor: lfe.shadowFill
                            }), (0,
                            z.jsx)("stop", {
                                offset: o / i,
                                stopColor: lfe.shadowFill
                            }), (0,
                            z.jsx)("stop", {
                                offset: o / i,
                                stopColor: "rgba(0, 0, 0, 0)"
                            }), (0,
                            z.jsx)("stop", {
                                offset: "1",
                                stopColor: "rgba(0, 0, 0, 0)"
                            })]
                        }), e.map(((e,t)=>(0,
                        z.jsxs)(Y.Fragment, {
                            children: [(0,
                            z.jsx)("clipPath", {
                                id: e.key,
                                children: (0,
                                z.jsx)("rect", {
                                    x: "0",
                                    y: t * i,
                                    width: n,
                                    height: i,
                                    rx: a,
                                    ry: a
                                })
                            }), (0,
                            z.jsx)("rect", {
                                x: "0",
                                y: t * i,
                                width: n,
                                height: i,
                                rx: a,
                                ry: a,
                                fill: lfe.rangeFill
                            }), (0,
                            z.jsx)("rect", {
                                id: `${e.key}-bar`,
                                x: 0,
                                y: t * i,
                                width: 100 * Od(e.value, 0, 1) + "%",
                                height: i,
                                rx: a,
                                ry: a,
                                clipPath: `url(#${e.key})`,
                                fill: e.color
                            }), (0,
                            z.jsx)("rect", {
                                x: "0",
                                y: t * i,
                                width: n,
                                height: i,
                                rx: a,
                                ry: a,
                                fill: "url(#shadow)"
                            })]
                        }, e.key)))]
                    })
                })
            })
        }
        ));
        X.add("game-ui/game/components/toolbar/top/city-info-field/demand-bars.tsx", {
            get DemandBars() {
                return cfe
            },
            set DemandBars(e) {
                cfe = e
            }
        });
        let ufe = {
            button: "button_s2g button_ECf item_It6 item-mouse-states_Fmi item-selected_tAM item-focused_FuT",
            "no-border": "no-border_Kqc",
            noBorder: "no-border_Kqc",
            "toggle-states": "toggle-states_X82 toggle-states_DTm",
            toggleStates: "toggle-states_X82 toggle-states_DTm",
            icon: "icon_KJZ icon_soN icon_Iwk"
        };
        X.add("game-ui/game/components/toolbar/components/feature-button/toolbar-feature-button.module.scss", {
            get classes() {
                return ufe
            },
            set classes(e) {
                Object.assign(ufe, e)
            }
        });
        const dfe = ufe;
        let mfe = {
            "city-info-field": "city-info-field_kp7",
            cityInfoField: "city-info-field_kp7",
            field: "field_OvX",
            "unlocking-tooltip": "unlocking-tooltip_WHX",
            unlockingTooltip: "unlocking-tooltip_WHX",
            toggle: "toggle_kzL",
            "small-lock": "small-lock_k2N",
            smallLock: "small-lock_k2N",
            lock: "lock_D8i lock_EMU",
            legend: "legend_wn_",
            hint: "hint_n9h",
            "gamepad-tooltip-offset": "gamepad-tooltip-offset_CNf",
            gamepadTooltipOffset: "gamepad-tooltip-offset_CNf"
        };
        X.add("game-ui/game/components/toolbar/top/city-info-field/city-info-field.module.scss", {
            get classes() {
                return mfe
            },
            set classes(e) {
                Object.assign(mfe, e)
            }
        });
        const hfe = mfe;
        var gfe = YT({
            City: "Media/Game/Icons/City.svg"
        })
          , pfe = ({enableShortcuts: e})=>{
            const [t,n] = (0,
            Y.useState)(!1)
              , s = f4(Fv.CityInfo)
              , i = oN("City Info Panel")
              , a = rN("Residential Medium")
              , o = rN("Residential High")
              , r = rN("ZonesOffice")
              , l = Dm()
              , c = sl(Dl)
              , u = t && !i.locked && !s.visible
              , d = s.visible
              , m = e ? "City Information Panel" : void 0;
            return (0,
            z.jsxs)("div", {
                className: hfe.cityInfoField,
                children: [(0,
                z.jsx)(mT, {
                    uiTag: vT.value?.cityInfoPanelButton,
                    children: (0,
                    z.jsx)(H6, {
                        title: (0,
                        z.jsx)(_c.Main.TOOLTIP_TITLE_CITY_INFO, {}),
                        description: (0,
                        z.jsx)(_c.Main.TOOLTIP_DESCRIPTION_CITY_INFO, {}),
                        shortcut: (0,
                        z.jsx)(BT, {
                            action: m,
                            active: c
                        }),
                        locked: i.locked,
                        requirements: i.requirements,
                        content: l && (0,
                        z.jsx)(GQ, {
                            title: (0,
                            z.jsx)(_c.Main.TOOLTIP_TITLE_DEMAND, {}),
                            description: (0,
                            z.jsx)(_c.Main.TOOLTIP_DESCRIPTION_DEMAND, {}),
                            content: (0,
                            z.jsxs)("div", {
                                className: hfe.legend,
                                children: [(0,
                                z.jsx)(_fe, {
                                    type: Qte.ResidentialLow
                                }), !a && (0,
                                z.jsx)(_fe, {
                                    type: Qte.ResidentialMedium
                                }), !o && (0,
                                z.jsx)(_fe, {
                                    type: Qte.ResidentialHigh
                                }), (0,
                                z.jsx)(_fe, {
                                    type: Qte.Commercial
                                }), (0,
                                z.jsx)(_fe, {
                                    type: Qte.Industrial
                                }), !r && (0,
                                z.jsx)(_fe, {
                                    type: Qte.Office
                                })]
                            })
                        }),
                        className: hfe.gamepadTooltipOffset,
                        children: (0,
                        z.jsx)(Ah, {
                            onFocusChange: n,
                            children: (0,
                            z.jsxs)(tb, {
                                disableHint: !0,
                                src: gfe.City,
                                selected: s.visible,
                                disabled: i.locked,
                                theme: dfe,
                                focusKey: l ? yg : void 0,
                                className: Zu()(hfe.toggle, dfe.toggleStates),
                                onSelect: s.toggle,
                                shortcut: e ? m : void 0,
                                children: [(0,
                                z.jsx)(UT, {
                                    action: u ? "Select" : d ? "Back" : void 0,
                                    className: hfe.hint
                                }), i.locked && (0,
                                z.jsx)(OZ, {
                                    className: hfe.lock
                                })]
                            })
                        })
                    })
                }), (0,
                z.jsx)(mT, {
                    uiTag: vT.value?.toolbarDemand,
                    children: (0,
                    z.jsx)(BQ, {
                        title: (0,
                        z.jsx)(_c.Main.TOOLTIP_TITLE_DEMAND, {}),
                        description: (0,
                        z.jsx)(_c.Main.TOOLTIP_DESCRIPTION_DEMAND, {}),
                        content: (0,
                        z.jsxs)("div", {
                            className: hfe.legend,
                            children: [(0,
                            z.jsx)(_fe, {
                                type: Qte.ResidentialLow
                            }), !a && (0,
                            z.jsx)(_fe, {
                                type: Qte.ResidentialMedium
                            }), !o && (0,
                            z.jsx)(_fe, {
                                type: Qte.ResidentialHigh
                            }), (0,
                            z.jsx)(_fe, {
                                type: Qte.Commercial
                            }), (0,
                            z.jsx)(_fe, {
                                type: Qte.Industrial
                            }), !r && (0,
                            z.jsx)(_fe, {
                                type: Qte.Office
                            })]
                        }),
                        children: (0,
                        z.jsx)(vfe, {
                            resMedLocked: a,
                            resHighLocked: o,
                            officeLocked: r
                        })
                    })
                })]
            })
        }
        ;
        const ffe = parseInt(lfe.width)
          , xfe = (e,t)=>{
            const n = document.querySelector(`#${e}-bar`);
            n && (n.style.width = `${Math.round(Od(t, 0, 1) * ffe)}px`)
        }
          , vfe = ({resMedLocked: e, resHighLocked: t, officeLocked: n})=>{
            const s = (0,
            Y.useCallback)((e=>xfe("ResidentialLow", e)), [])
              , i = (0,
            Y.useCallback)((e=>xfe("ResidentialMedium", e)), [])
              , a = (0,
            Y.useCallback)((e=>xfe("ResidentialHigh", e)), [])
              , o = (0,
            Y.useCallback)((e=>xfe("Commercial", e)), [])
              , r = (0,
            Y.useCallback)((e=>xfe("Industrial", e)), [])
              , l = (0,
            Y.useCallback)((e=>xfe("Office", e)), [])
              , c = ol($y, s)
              , u = ol(qy, i)
              , d = ol(Xy, a)
              , m = ol(Qy, o)
              , h = ol(Zy, r)
              , g = ol(Jy, l)
              , p = (0,
            Y.useMemo)((()=>{
                const s = [];
                return s.push({
                    key: "ResidentialLow",
                    color: Zte[Qte.ResidentialLow],
                    value: c
                }),
                e || s.push({
                    key: "ResidentialMedium",
                    color: Zte[Qte.ResidentialMedium],
                    value: u
                }),
                t || s.push({
                    key: "ResidentialHigh",
                    color: Zte[Qte.ResidentialHigh],
                    value: d
                }),
                s.push({
                    key: "Commercial",
                    color: Zte[Qte.Commercial],
                    value: m
                }),
                s.push({
                    key: "Industrial",
                    color: Zte[Qte.Industrial],
                    value: h
                }),
                n || s.push({
                    key: "Office",
                    color: Zte[Qte.Office],
                    value: g
                }),
                s
            }
            ), [n, t, e]);
            return (0,
            z.jsx)(cfe, {
                items: p,
                className: hfe.field
            })
        }
          , _fe = ({type: e})=>(0,
        z.jsx)(xQ, {
            color: Zte[e],
            label: (0,
            z.jsx)(_c.CityInfoPanel.DEMAND_TITLE, {
                hash: Qte[e]
            })
        });
        X.add("game-ui/game/components/toolbar/top/city-info-field/city-info-field.tsx", {
            get images() {
                return gfe
            },
            set images(e) {
                gfe = e
            },
            get CityInfoField() {
                return pfe
            },
            set CityInfoField(e) {
                pfe = e
            }
        });
        let bfe = {
            "progression-message-feed": "progression-message-feed_P4X",
            progressionMessageFeed: "progression-message-feed_P4X",
            "item-transition": "item-transition_ugO",
            itemTransition: "item-transition_ugO",
            enter: "enter_nmi",
            "enter-active": "enter-active_bWQ",
            enterActive: "enter-active_bWQ",
            exit: "exit_mXQ",
            "exit-active": "exit-active_SEi",
            exitActive: "exit-active_SEi",
            item: "item_XMq",
            amount: "amount_nbC",
            reason: "reason_tLs",
            space: "space_m_Q"
        };
        X.add("game-ui/game/components/toolbar/top/progression-field/progression-message-feed.module.scss", {
            get classes() {
                return bfe
            },
            set classes(e) {
                Object.assign(bfe, e)
            }
        });
        const Tfe = bfe;
        var Efe = ({className: e})=>{
            const [t,n] = (0,
            Y.useState)([])
              , s = sl(Lv)
              , i = sl(kK) === RK.Loading
              , a = s !== Ov.main && s !== Ov.freeCamera
              , o = (0,
            Y.useMemo)((()=>new Sfe(n)), []);
            return o.paused = a,
            (0,
            Y.useEffect)((()=>{
                i && o.clear()
            }
            ), [i, o]),
            (0,
            Y.useEffect)((()=>()=>o.dispose()), [o]),
            (0,
            z.jsx)("div", {
                className: Zu()(Tfe.progressionMessageFeed, e),
                children: (0,
                z.jsx)(ud, {
                    children: t.map((e=>(0,
                    z.jsx)(Ife, {
                        data: e
                    }, e.time)))
                })
            })
        }
        ;
        const Ife = ({data: e})=>((0,
        Y.useEffect)((()=>cp(lp.xpEvent)), []),
        (0,
        z.jsx)(NS, {
            styles: Tfe,
            exitCollapseHeight: !1,
            children: (0,
            z.jsxs)("div", {
                className: Tfe.itemTransition,
                children: [(0,
                z.jsxs)("div", {
                    className: Tfe.item,
                    children: [(0,
                    z.jsx)("div", {
                        className: Tfe.amount,
                        children: (0,
                        z.jsx)(Oc, {
                            signed: !0,
                            value: e.message.amount,
                            unit: vc.XP
                        })
                    }), (0,
                    z.jsx)("div", {
                        className: Tfe.reason,
                        children: (0,
                        z.jsx)(_c.Progression.XP_REASON, {
                            hash: e.message.reason
                        })
                    })]
                }), (0,
                z.jsx)("div", {
                    className: Tfe.space
                })]
            })
        }));
        class Sfe {
            constructor(e) {
                this.listener = e,
                this.activeMessages = [],
                this.pendingMessages = [],
                this.updateTimeoutHandle = 0,
                this.paused = !1,
                this.subscription = MN.subscribe(this.handleMessageAdded.bind(this))
            }
            handleMessageAdded(e) {
                this.pendingMessages.unshift(e),
                window.clearTimeout(this.updateTimeoutHandle),
                this.update()
            }
            update() {
                const e = performance.now();
                let t = !1;
                for (let n = this.activeMessages.length - 1; n >= 0; n--) {
                    const s = this.activeMessages[n];
                    (s.time + 4e3 < e || s.time > e) && (this.activeMessages.splice(n, 1),
                    t = !0)
                }
                let n = this.paused ? e : this.activeMessages.reduce(((e,t)=>Math.max(e, t.time)), 0);
                if (this.activeMessages.length < 4 && e - n > 500) {
                    const s = this.pendingMessages.pop();
                    null != s && (this.activeMessages.push({
                        message: s,
                        time: e
                    }),
                    n = e,
                    t = !0)
                }
                t && this.listener([...this.activeMessages]);
                let s = null;
                if (this.activeMessages.length > 0) {
                    const t = this.activeMessages.reduce(((e,t)=>Math.min(e, t.time)), e);
                    s = Math.min(t + 4e3, s ?? Number.MAX_VALUE)
                }
                this.pendingMessages.length > 0 && (s = Math.min(e + 500, s ?? Number.MAX_VALUE)),
                null != s && window.setTimeout(this.update.bind(this), s - e)
            }
            clear() {
                this.pendingMessages.length = 0,
                window.clearTimeout(this.updateTimeoutHandle)
            }
            dispose() {
                this.clear(),
                this.subscription.dispose()
            }
        }
        X.add("game-ui/game/components/toolbar/top/progression-field/progression-message-feed.tsx", {
            get ProgressionMessageFeed() {
                return Efe
            },
            set ProgressionMessageFeed(e) {
                Efe = e
            }
        });
        let yfe = {
            strokeWidth: "6",
            "progress-circle": "progress-circle_jvw progress-circle_OLN",
            progressCircle: "progress-circle_jvw progress-circle_OLN",
            progress: "progress_i1E progress_mlv",
            circle: "circle_Apc"
        };
        X.add("game-ui/game/components/toolbar/top/progression-field/progress-circle.module.scss", {
            get classes() {
                return yfe
            },
            set classes(e) {
                Object.assign(yfe, e)
            }
        });
        const jfe = yfe;
        let Cfe = {
            "progression-field": "progression-field_Lho",
            progressionField: "progression-field_Lho",
            field: "field_p2F",
            "max-milestone-reached": "max-milestone-reached___5",
            maxMilestoneReached: "max-milestone-reached___5",
            toggle: "toggle_bAE",
            icon: "icon_Gzn",
            progress: "progress_NK4",
            feed: "feed_zoj",
            lock: "lock_YHO lock_EMU",
            milestone: "milestone_Eev",
            hint: "hint_PkL",
            "gamepad-tooltip-content": "gamepad-tooltip-content_aSN",
            gamepadTooltipContent: "gamepad-tooltip-content_aSN",
            "gamepad-tooltip-offset": "gamepad-tooltip-offset_lPO",
            gamepadTooltipOffset: "gamepad-tooltip-offset_lPO"
        };
        X.add("game-ui/game/components/toolbar/top/progression-field/progression-field.module.scss", {
            get classes() {
                return Cfe
            },
            set classes(e) {
                Object.assign(Cfe, e)
            }
        });
        const Nfe = Cfe
          , wfe = {
            tension: 150,
            friction: 20
        }
          , Ofe = ()=>{
            const e = sl(PN)
              , t = sl(LN)
              , n = sl(AN)
              , s = Sz(wfe, n)
              , i = Math.max(t - e, 0)
              , a = Od(s - e, 0, i);
            return (0,
            z.jsx)(Jk, {
                progress: a,
                max: i,
                theme: jfe,
                className: Nfe.progress
            })
        }
          , Pfe = ()=>{
            const e = sl(PN)
              , t = sl(LN)
              , n = sl(AN)
              , s = Sz(wfe, n)
              , i = Math.max(t - e, 0)
              , a = Od(s - e, 0, i);
            return (0,
            z.jsx)(uu, {
                value: a,
                total: i,
                unit: vc.XP
            })
        }
        ;
        var Lfe = ({enableShortcuts: e})=>{
            const [t,n] = (0,
            Y.useState)(!1)
              , s = f4(Fv.Progression)
              , i = oN("Progression Panel")
              , a = Dm()
              , o = sl(ON)
              , r = sl(RN)
              , l = sl(QC)
              , c = sl(Dl)
              , u = e ? "Progression Panel" : void 0
              , d = !r && !i.locked
              , m = t && !i.locked && !s.visible
              , h = s.visible;
            return (0,
            z.jsxs)("div", {
                className: Nfe.progressionField,
                children: [(0,
                z.jsx)(mT, {
                    uiTag: vT.value?.progressionPanelButton,
                    children: (0,
                    z.jsx)(H6, {
                        title: (0,
                        z.jsx)(_c.Main.TOOLTIP_TITLE_PROGRESSION, {}),
                        description: (0,
                        z.jsx)(_c.Main.TOOLTIP_DESCRIPTION_PROGRESSION, {}),
                        content: (0,
                        z.jsxs)(z.Fragment, {
                            children: [r ? void 0 : (0,
                            z.jsx)(z.Fragment, {
                                children: (0,
                                z.jsx)(Pfe, {})
                            }), a && (0,
                            z.jsx)(GQ, {
                                className: Nfe.gamepadTooltipContent,
                                title: (0,
                                z.jsx)(_c.Main.TOOLTIP_TITLE_CURRENT_MILESTONE, {}),
                                description: r ? (0,
                                z.jsx)(_c.Main.TOOLTIP_DESCRIPTION_MAX_MILESTONE, {}) : (0,
                                z.jsx)(_c.Main.TOOLTIP_DESCRIPTION_CURRENT_MILESTONE, {})
                            })]
                        }),
                        shortcut: (0,
                        z.jsx)(BT, {
                            action: u,
                            active: c
                        }),
                        locked: i.locked,
                        requirements: i.requirements,
                        className: Nfe.gamepadTooltipOffset,
                        children: (0,
                        z.jsx)(Ah, {
                            onFocusChange: n,
                            children: (0,
                            z.jsxs)(U_, {
                                disableHint: !0,
                                selected: s.visible,
                                disabled: i.locked,
                                focusKey: a ? yg : void 0,
                                className: Zu()(Nfe.toggle, dfe.toggleStates, d && dfe.noBorder),
                                theme: dfe,
                                onSelect: s.toggle,
                                shortcut: u,
                                children: [r ? (0,
                                z.jsx)("img", {
                                    src: "Media/Game/Icons/Trophy.svg",
                                    className: dfe.icon
                                }) : (0,
                                z.jsx)("div", {
                                    className: Nfe.milestone,
                                    children: (0,
                                    z.jsx)(Oc, {
                                        value: o
                                    })
                                }), d && (0,
                                z.jsx)(Ofe, {}), l > 0 && (0,
                                z.jsx)(Npe, {
                                    value: l,
                                    className: jpe.devPointBadge
                                }), i.locked && (0,
                                z.jsx)(OZ, {
                                    className: Nfe.lock
                                }), (0,
                                z.jsx)(UT, {
                                    action: m ? "Select" : h ? "Back" : void 0,
                                    className: Nfe.hint
                                })]
                            })
                        })
                    })
                }), (0,
                z.jsx)(BQ, {
                    title: (0,
                    z.jsx)(_c.Main.TOOLTIP_TITLE_CURRENT_MILESTONE, {}),
                    description: r ? (0,
                    z.jsx)(_c.Main.TOOLTIP_DESCRIPTION_MAX_MILESTONE, {}) : (0,
                    z.jsx)(_c.Main.TOOLTIP_DESCRIPTION_CURRENT_MILESTONE, {}),
                    children: (0,
                    z.jsx)("div", {
                        className: Zu()(Nfe.field, r && Nfe.maxMilestoneReached),
                        children: (0,
                        z.jsx)(_c.Progression.MILESTONE_NAME, {
                            index: o
                        })
                    })
                }), !r && (0,
                z.jsx)(Efe, {
                    className: Nfe.feed
                })]
            })
        }
        ;
        X.add("game-ui/game/components/toolbar/top/progression-field/progression-field.tsx", {
            get ProgressionField() {
                return Lfe
            },
            set ProgressionField(e) {
                Lfe = e
            }
        });
        let Afe = {
            lock: "lock_EMU",
            hint: "hint_Wu1",
            "hint-right": "hint-right_flW",
            hintRight: "hint-right_flW",
            "gamepad-tooltip-offset": "gamepad-tooltip-offset_IJ7",
            gamepadTooltipOffset: "gamepad-tooltip-offset_IJ7"
        };
        X.add("game-ui/game/components/toolbar/top/toggles.module.scss", {
            get classes() {
                return Afe
            },
            set classes(e) {
                Object.assign(Afe, e)
            }
        });
        const Mfe = Afe;
        var Rfe = YT({
            Economy: "Media/Game/Icons/Economy.svg",
            TransportationOverview: "Media/Game/Icons/TransportationOverview.svg",
            CityStatistics: "Media/Game/Icons/CityStatistics.svg",
            MapTile: "Media/Game/Icons/MapTile.svg",
            PhotoMode: "Media/Game/Icons/PhotoMode.svg"
        })
          , kfe = ({enableShortcuts: e})=>{
            const [t,n] = (0,
            Y.useState)(!1)
              , s = f4(Fv.Economy)
              , i = oN("City Budget")
              , a = Dm()
              , [o,r] = (0,
            Y.useState)(!1);
            ol(wm, (e=>a && r(!!e.find((e=>"Close" === e.name)))));
            const l = sl(Dl)
              , c = t && !i.locked && !s.visible
              , u = s.visible && o
              , d = sl(vC)
              , m = "Economy Panel"
              , h = (0,
            Y.useCallback)((()=>{
                s.toggle(),
                d && s.visible && CC(!0)
            }
            ), [d, s]);
            return (0,
            z.jsx)(mT, {
                uiTag: vT.value?.economyPanelButton,
                children: (0,
                z.jsx)(H6, {
                    title: (0,
                    z.jsx)(_c.Main.TOOLTIP_TITLE_CITY_ECONOMY, {}),
                    description: (0,
                    z.jsx)(_c.Main.TOOLTIP_DESCRIPTION_CITY_ECONOMY, {}),
                    shortcut: (0,
                    z.jsx)(BT, {
                        action: m,
                        active: l,
                        shortName: wp.FallbackToControl
                    }),
                    locked: i.locked,
                    requirements: i.requirements,
                    className: Mfe.gamepadTooltipOffset,
                    children: (0,
                    z.jsx)(Ah, {
                        onFocusChange: n,
                        children: (0,
                        z.jsx)(Yee, {
                            disabled: i.locked,
                            onClick: h,
                            onDisabledClick: ()=>cp(lp.clickDisableButton),
                            children: (0,
                            z.jsxs)(tb, {
                                disableHint: !0,
                                src: Rfe.Economy,
                                selected: s.visible,
                                disabled: i.locked,
                                selectSound: lp.economy,
                                theme: dfe,
                                className: dfe.toggleStates,
                                onSelect: h,
                                focusKey: a ? yg : void 0,
                                shortcut: e ? m : void 0,
                                children: [(0,
                                z.jsx)(UT, {
                                    action: c ? "Select" : u ? "Back" : void 0,
                                    className: Mfe.hint
                                }), i.locked && (0,
                                z.jsx)(OZ, {
                                    className: Mfe.lock
                                })]
                            })
                        })
                    })
                })
            })
        }
          , Dfe = ({enableShortcuts: e})=>{
            const [t,n] = (0,
            Y.useState)(!1)
              , s = f4(Fv.TransportationOverview)
              , i = oN("Transportation Overview")
              , a = Dm()
              , [o,r] = (0,
            Y.useState)(!1);
            ol(wm, (e=>a && r(!!e.find((e=>"Close" === e.name)))));
            const l = sl(Dl)
              , c = t && !i.locked && !s.visible
              , u = s.visible && o
              , d = "Transportation Overview Panel";
            return (0,
            z.jsx)(mT, {
                uiTag: vT.value?.transportationOverviewPanelButton,
                children: (0,
                z.jsx)(H6, {
                    title: (0,
                    z.jsx)(_c.Main.TOOLTIP_TITLE_LINES_OVERVIEW, {}),
                    description: (0,
                    z.jsx)(_c.Main.TOOLTIP_DESCRIPTION_LINES_OVERVIEW, {}),
                    shortcut: (0,
                    z.jsx)(BT, {
                        action: d,
                        active: l,
                        shortName: wp.FallbackToControl
                    }),
                    locked: i.locked,
                    requirements: i.requirements,
                    className: Mfe.gamepadTooltipOffset,
                    children: (0,
                    z.jsx)(Ah, {
                        onFocusChange: n,
                        children: (0,
                        z.jsx)(Yee, {
                            disabled: i.locked,
                            onClick: s.toggle,
                            onDisabledClick: ()=>cp(lp.clickDisableButton),
                            children: (0,
                            z.jsxs)(tb, {
                                disableHint: !0,
                                src: Rfe.TransportationOverview,
                                selected: s.visible,
                                disabled: i.locked,
                                theme: dfe,
                                className: dfe.toggleStates,
                                onSelect: s.toggle,
                                focusKey: a ? yg : void 0,
                                shortcut: e ? d : void 0,
                                children: [(0,
                                z.jsx)(UT, {
                                    action: c ? "Select" : u ? "Back" : void 0,
                                    className: Mfe.hint
                                }), i.locked && (0,
                                z.jsx)(OZ, {
                                    className: Mfe.lock
                                })]
                            })
                        })
                    })
                })
            })
        }
          , Ffe = ({enableShortcuts: e})=>{
            const [t,n] = (0,
            Y.useState)(!1)
              , s = f4(Fv.Statistics)
              , i = oN("City Statistics")
              , a = Dm()
              , o = sl(Dl)
              , r = t && !i.locked && !s.visible
              , l = s.visible
              , c = "Statistic Panel";
            return (0,
            z.jsx)(mT, {
                uiTag: vT.value?.statisticsPanelButton,
                children: (0,
                z.jsx)(H6, {
                    title: (0,
                    z.jsx)(_c.Main.TOOLTIP_TITLE_CITY_STATISTICS, {}),
                    description: (0,
                    z.jsx)(_c.Main.TOOLTIP_DESCRIPTION_CITY_STATISTICS, {}),
                    shortcut: (0,
                    z.jsx)(BT, {
                        action: c,
                        active: o,
                        shortName: wp.FallbackToControl
                    }),
                    locked: i.locked,
                    requirements: i.requirements,
                    className: Mfe.gamepadTooltipOffset,
                    children: (0,
                    z.jsx)(Ah, {
                        onFocusChange: n,
                        children: (0,
                        z.jsx)(Yee, {
                            disabled: i.locked,
                            onClick: s.toggle,
                            onDisabledClick: ()=>cp(lp.clickDisableButton),
                            children: (0,
                            z.jsxs)(tb, {
                                disableHint: !0,
                                src: Rfe.CityStatistics,
                                selected: s.visible,
                                disabled: i.locked,
                                theme: dfe,
                                className: dfe.toggleStates,
                                onSelect: s.toggle,
                                focusKey: a ? yg : void 0,
                                shortcut: e ? c : void 0,
                                children: [(0,
                                z.jsx)(UT, {
                                    action: r ? "Select" : l ? "Back" : void 0,
                                    className: Mfe.hint
                                }), i.locked && (0,
                                z.jsx)(OZ, {
                                    className: Mfe.lock
                                })]
                            })
                        })
                    })
                })
            })
        }
          , Ufe = ({enableShortcuts: e})=>{
            const [t,n] = (0,
            Y.useState)(!1)
              , s = sl(vC)
              , i = (0,
            Y.useRef)(!1)
              , a = !Ur(sl(SL), Zp)
              , o = sl(Bv)
              , r = sl(iP)
              , l = sl(yC)
              , c = oN("Map Tiles")
              , u = (0,
            Y.useCallback)((()=>CC(!s)), [s])
              , d = Dm()
              , m = sl(Dl)
              , h = "Map Tile Purchase Panel";
            (0,
            Y.useEffect)((()=>{
                s && !i.current && (pA(),
                qw(),
                requestAnimationFrame((()=>{
                    CP($P),
                    OL(Zp)
                }
                )),
                i.current = !0),
                s || (i.current = !1)
            }
            ), [s, a, r.id]);
            const g = s ? "Back" : "Select"
              , p = (s && !o || t) && !c.locked;
            return (0,
            z.jsx)(mT, {
                uiTag: vT.value?.mapTilePanelButton,
                children: (0,
                z.jsx)(H6, {
                    title: (0,
                    z.jsx)(_c.Main.TOOLTIP_TITLE_MAP_TILES, {}),
                    description: (0,
                    z.jsx)(_c.Main.TOOLTIP_DESCRIPTION_MAP_TILES, {}),
                    shortcut: (0,
                    z.jsx)(BT, {
                        action: h,
                        active: m,
                        shortName: wp.FallbackToControl
                    }),
                    locked: c.locked,
                    requirements: c.requirements,
                    className: Mfe.gamepadTooltipOffset,
                    children: (0,
                    z.jsx)(Ah, {
                        onFocusChange: n,
                        children: (0,
                        z.jsxs)(tb, {
                            disableHint: !0,
                            selectAction: g,
                            src: Rfe.MapTile,
                            selected: s && !o,
                            disabled: c.locked,
                            focusKey: d ? yg : void 0,
                            theme: dfe,
                            className: dfe.toggleStates,
                            onSelect: u,
                            shortcut: e ? h : void 0,
                            children: [(0,
                            z.jsx)(UT, {
                                action: g,
                                active: p,
                                className: Zu()(Mfe.hint, Mfe.hintRight)
                            }), !c.locked && l > 0 && (0,
                            z.jsx)(Npe, {
                                value: l,
                                className: jpe.mapTileBadge
                            }), c.locked && (0,
                            z.jsx)(OZ, {
                                className: Mfe.lock
                            })]
                        })
                    })
                })
            })
        }
          , Bfe = ({enableShortcuts: e})=>{
            const [t,n] = (0,
            Y.useState)(!1)
              , s = f4(Fv.PhotoMode)
              , i = oN("Photo Mode")
              , a = Dm()
              , o = sl(Dl)
              , r = t && !i.locked && !s.visible
              , l = s.visible
              , c = "Photo Mode Panel";
            return (0,
            z.jsx)(mT, {
                uiTag: vT.value?.photoModePanelButton,
                children: (0,
                z.jsx)(H6, {
                    title: (0,
                    z.jsx)(_c.Main.TOOLTIP_TITLE_PHOTO_MODE, {}),
                    description: (0,
                    z.jsx)(_c.Main.TOOLTIP_DESCRIPTION_PHOTO_MODE, {}),
                    shortcut: (0,
                    z.jsx)(BT, {
                        action: c,
                        active: o,
                        shortName: wp.FallbackToControl
                    }),
                    locked: i.locked,
                    requirements: i.requirements,
                    className: Mfe.gamepadTooltipOffset,
                    children: (0,
                    z.jsx)(Ah, {
                        onFocusChange: n,
                        children: (0,
                        z.jsxs)(tb, {
                            disableHint: !0,
                            src: Rfe.PhotoMode,
                            selected: s.visible,
                            disabled: i.locked,
                            theme: dfe,
                            className: dfe.toggleStates,
                            onSelect: s.toggle,
                            focusKey: a ? yg : void 0,
                            shortcut: e ? c : void 0,
                            children: [(0,
                            z.jsx)(UT, {
                                action: r ? "Select" : l ? "Back" : void 0,
                                className: Mfe.hint
                            }), i.locked && (0,
                            z.jsx)(OZ, {
                                className: Mfe.lock
                            })]
                        })
                    })
                })
            })
        }
        ;
        X.add("game-ui/game/components/toolbar/top/toggles.tsx", {
            get images() {
                return Rfe
            },
            set images(e) {
                Rfe = e
            },
            get EconomyPanelToggle() {
                return kfe
            },
            set EconomyPanelToggle(e) {
                kfe = e
            },
            get TransportationOverviewToggle() {
                return Dfe
            },
            set TransportationOverviewToggle(e) {
                Dfe = e
            },
            get CityStatisticsToggle() {
                return Ffe
            },
            set CityStatisticsToggle(e) {
                Ffe = e
            },
            get MapTilePurchaseToggle() {
                return Ufe
            },
            set MapTilePurchaseToggle(e) {
                Ufe = e
            },
            get PhotoModeToggle() {
                return Bfe
            },
            set PhotoModeToggle(e) {
                Bfe = e
            }
        });
        let Gfe = {
            "toolbar-button-strip": "toolbar-button-strip_CoK",
            toolbarButtonStrip: "toolbar-button-strip_CoK",
            group: "group_i85",
            button: "button_cBV",
            highlight: "highlight_XBc",
            lock: "lock_bNk",
            "item-inner": "item-inner_R9q",
            itemInner: "item-inner_R9q",
            hint: "hint_j1W",
            "gamepad-tooltip-offset": "gamepad-tooltip-offset_Yz4",
            gamepadTooltipOffset: "gamepad-tooltip-offset_Yz4"
        };
        X.add("game-ui/game/components/toolbar/top/toolbar-button-strip/toolbar-button-strip.module.scss", {
            get classes() {
                return Gfe
            },
            set classes(e) {
                Object.assign(Gfe, e)
            }
        });
        const Vfe = Gfe;
        var Hfe = ({focusKey: e, className: t, enableShortcuts: n})=>{
            const s = sl(pL)
              , i = Math.min(s.length - 1, 1)
              , a = (0,
            Y.useMemo)((()=>-1 !== i && s[i].children.length > 0 ? Dr(s[i].children[0].entity) : null), [s, i]);
            return (0,
            z.jsx)("div", {
                className: Zu()(Vfe.toolbarButtonStrip, t),
                children: s.map(((t,s)=>(0,
                z.jsx)("div", {
                    className: Vfe.group,
                    children: (0,
                    z.jsx)(Kge, {
                        focusKey: s === i ? e : yg,
                        initialFocused: s === i ? a : void 0,
                        direction: kg.Horizontal,
                        children: t.children.map((e=>(0,
                        z.jsx)(Kfe, {
                            item: e,
                            enableShortcuts: n
                        }, Dr(e.entity))))
                    })
                }, Dr(t.entity))))
            })
        }
        ;
        const Kfe = ({item: e, enableShortcuts: t})=>{
            const [n,s] = (0,
            Y.useState)(!1)
              , i = (0,
            Y.useCallback)((()=>{
                c(Ur(e.entity, yL.value) || Ur(e.entity, IL.value))
            }
            ), [e])
              , a = rN("IntroListCompleted")
              , o = ol(yL, i)
              , r = ol(IL, i)
              , [l,c] = (0,
            Y.useState)((()=>Ur(e.entity, o) || Ur(e.entity, r)))
              , u = (0,
            Y.useCallback)((()=>{
                qw(),
                AL(),
                NC(),
                e.type === hL.menu ? OL(e.entity) : (LL(e.entity, !0),
                ig(e.uiTag, !0))
            }
            ), [e.entity, e.type, e.uiTag])
              , d = e.locked && (e.type === hL.asset || a)
              , m = ll(xT, e.entity)
              , h = sl(Dl)
              , [g,p] = (0,
            Y.useState)(!1);
            ol(wm, (t=>{
                p(!!t.find((n=>"Close" === n.name || "Bulldoze Tool" === e.name && "Back" === n.name && !t.find((e=>"Exit Underground Mode" === e.name)))))
            }
            ));
            const f = n && !d && !l
              , x = l && g
              , v = t ? e.shortcut : void 0;
            return (0,
            z.jsx)(Ah, {
                onFocusChange: s,
                children: (0,
                z.jsxs)(tb, {
                    disableHint: !0,
                    focusKey: Dr(e.entity),
                    src: e.icon,
                    selected: l,
                    disabled: d,
                    selectSound: (l ? e.deselectSound : e.selectSound) ?? void 0,
                    theme: T5,
                    allowFocusableChildren: !0,
                    className: Zu()(Vfe.button, T5.toggleStates, e.locked && T5.locked),
                    onSelect: l ? AL : u,
                    shortcut: v,
                    children: [(0,
                    z.jsx)(mT, {
                        uiTag: e.uiTag,
                        active: !(e.locked && e.type === hL.asset),
                        children: (0,
                        z.jsx)(H6, {
                            title: null != m ? (0,
                            z.jsx)(cc, {
                                id: m.titleId
                            }) : e.name,
                            description: null != m ? (0,
                            z.jsx)(cc, {
                                id: m.descriptionId
                            }) : void 0,
                            shortcut: (0,
                            z.jsx)(BT, {
                                action: v,
                                active: h,
                                shortName: wp.FallbackToControl
                            }),
                            locked: e.locked,
                            requirements: e.requirements,
                            className: Vfe.gamepadTooltipOffset,
                            children: (0,
                            z.jsx)(Sp, {
                                className: Vfe.itemInner
                            })
                        })
                    }), e.highlight && (0,
                    z.jsx)(y1, {
                        className: Vfe.highlight
                    }), e.locked && (0,
                    z.jsx)(OZ, {
                        className: Vfe.lock
                    }), (0,
                    z.jsx)(UT, {
                        action: f ? "Select" : x ? "Back" : void 0,
                        className: Vfe.hint
                    })]
                })
            })
        }
        ;
        X.add("game-ui/game/components/toolbar/top/toolbar-button-strip/toolbar-button-strip.tsx", {
            get ToolbarButtonStrip() {
                return Hfe
            },
            set ToolbarButtonStrip(e) {
                Hfe = e
            }
        });
        let Wfe = {
            icon: "icon_rqi icon_KJZ icon_soN icon_Iwk",
            underground: "underground_heZ",
            lock: "lock_okm lock_EMU",
            hint: "hint_Y7P hint_Wu1",
            "gamepad-tooltip-offset": "gamepad-tooltip-offset_Uj0",
            gamepadTooltipOffset: "gamepad-tooltip-offset_Uj0"
        };
        X.add("game-ui/game/components/toolbar/top/undergound-mode-toggle/underground-mode-toggle.module.scss", {
            get classes() {
                return Wfe
            },
            set classes(e) {
                Object.assign(Wfe, e)
            }
        });
        const zfe = Wfe;
        YT({
            underground: "Media/Game/Misc/Underground.svg",
            undergroundMask: "Media/Game/Misc/UndergroundToggleMask.svg"
        });
        var Yfe = (0,
        Y.memo)((function({enableShortcuts: e}) {
            const [t,n] = (0,
            Y.useState)(!1)
              , [s,i] = (0,
            Y.useState)(fP.value)
              , a = al(fP);
            ol(fP, (async e=>{
                const t = new qm;
                await uh(t, 2),
                e === a.current && i(e)
            }
            ));
            const o = sl(xP)
              , r = (0,
            Y.useCallback)((()=>FP(!o)), [o])
              , l = oN("Underground Mode")
              , c = Dm()
              , u = sl(Dl)
              , [d,m] = (0,
            Y.useState)(!1);
            return ol(wm, (e=>{
                m(!!e.find((e=>"Close" === e.name)))
            }
            )),
            rg(vT.value?.toolbarUnderground, o),
            (0,
            z.jsx)(mT, {
                uiTag: vT.value?.toolbarUnderground,
                children: (0,
                z.jsx)(H6, {
                    title: (0,
                    z.jsx)(_c.Main.TOOLTIP_TITLE_UNDERGROUND, {}),
                    description: (0,
                    z.jsx)(_c.Main.TOOLTIP_DESCRIPTION_UNDERGROUND, {}),
                    shortcut: (0,
                    z.jsx)(BT, {
                        action: e ? "Change Elevation" : void 0,
                        active: !l.locked && s && u,
                        shortName: wp.FallbackToControl
                    }),
                    locked: l.locked,
                    requirements: l.requirements,
                    className: zfe.gamepadTooltipOffset,
                    children: (0,
                    z.jsx)(Ah, {
                        onFocusChange: n,
                        children: (0,
                        z.jsxs)(U_, {
                            disableHint: !0,
                            selected: o,
                            disabled: l.locked || !s,
                            selectSound: o ? lp.increaseElevation : lp.decreaseElevation,
                            theme: dfe,
                            className: dfe.toggleStates,
                            focusKey: c ? yg : void 0,
                            onSelect: r,
                            shortcut: e ? o ? "Increase Elevation" : "Decrease Elevation" : void 0,
                            children: [(0,
                            z.jsx)("div", {
                                className: Zu()(zfe.icon, o && zfe.underground)
                            }), l.locked && (0,
                            z.jsx)(OZ, {
                                className: zfe.lock
                            }), (0,
                            z.jsx)(UT, {
                                action: "Select",
                                active: t && !l.locked && !o,
                                className: zfe.hint
                            }), (0,
                            z.jsx)(UT, {
                                action: "Back",
                                active: o && !d,
                                className: zfe.hint
                            })]
                        })
                    })
                })
            })
        }
        ));
        X.add("game-ui/game/components/toolbar/top/undergound-mode-toggle/underground-mode-toggle.tsx", {
            get UndergroundModeToggle() {
                return Yfe
            },
            set UndergroundModeToggle(e) {
                Yfe = e
            }
        });
        let $fe = {
            toolbar: "toolbar_QYu",
            hidden: "hidden__OM",
            "only-status-visible": "only-status-visible_lx7",
            onlyStatusVisible: "only-status-visible_lx7",
            "social-menu-anchor": "social-menu-anchor_oJe",
            socialMenuAnchor: "social-menu-anchor_oJe",
            "social-menu": "social-menu_nHI",
            socialMenu: "social-menu_nHI",
            "left-side-menu": "left-side-menu_DLV",
            leftSideMenu: "left-side-menu_DLV",
            top: "top_ZSs",
            bottom: "bottom_vae",
            paused: "paused_ICO",
            container: "container_yy5",
            "top-inner": "top-inner_v2o container_yy5",
            topInner: "top-inner_v2o container_yy5",
            "bottom-inner": "bottom-inner_ZYV container_yy5",
            bottomInner: "bottom-inner_ZYV container_yy5",
            "extra-padding": "extra-padding_z3b",
            extraPadding: "extra-padding_z3b",
            spacer: "spacer_oEi",
            start: "start_hR7",
            end: "end_G0e",
            divider: "divider_GaZ",
            "large-divider": "large-divider_XGP",
            largeDivider: "large-divider_XGP",
            "extra-large-divider": "extra-large-divider_Bc3",
            extraLargeDivider: "extra-large-divider_Bc3",
            "bulldoze-bar": "bulldoze-bar_D37",
            bulldozeBar: "bulldoze-bar_D37",
            active: "active_hed"
        };
        X.add("game-ui/game/components/toolbar/toolbar.module.scss", {
            get classes() {
                return $fe
            },
            set classes(e) {
                Object.assign($fe, e)
            }
        });
        const qfe = $fe
          , Xfe = new Ig("toolbar_top")
          , Qfe = new Ig("toolbar_bottom")
          , Zfe = new Ig("button_strip")
          , Jfe = (0,
        z.jsx)("div", {
            className: qfe.divider
        })
          , exe = (0,
        z.jsx)("div", {
            className: qfe.spacer
        });
        var txe = (0,
        Y.memo)((function({focusKey: e, className: t, hidden: n, onlyStatusVisible: s}) {
            const i = (0,
            Y.useRef)(null);
            sl(vT);
            const a = f4(Fv.PhotoMode)
              , o = (0,
            Y.useCallback)((()=>s ? Qfe : i.current || Xfe), [s])
              , r = (0,
            Y.useCallback)((e=>{
                i.current = e
            }
            ), [])
              , l = n || a.visible;
            return (0,
            z.jsx)(yp, {
                children: (0,
                z.jsx)(np, {
                    focusKey: e,
                    initialFocused: s ? Qfe : Xfe,
                    direction: kg.Vertical,
                    onRefocus: o,
                    onChange: r,
                    children: (0,
                    z.jsxs)("div", {
                        className: Zu()(qfe.toolbar, t, {
                            [qfe.hidden]: l,
                            [qfe.onlyStatusVisible]: s
                        }),
                        children: [(0,
                        z.jsxs)(Ep, {
                            disabled: s,
                            children: [(0,
                            z.jsxs)("div", {
                                className: qfe.socialMenuAnchor,
                                children: [(0,
                                z.jsx)($ge, {
                                    className: qfe.leftSideMenu
                                }), (0,
                                z.jsx)(Rpe, {
                                    className: qfe.socialMenu
                                })]
                            }), (0,
                            z.jsx)(nxe, {}), (0,
                            z.jsx)(sxe, {
                                enableShortcuts: !l && !s
                            })]
                        }), (0,
                        z.jsx)(ixe, {})]
                    })
                })
            })
        }
        ));
        const nxe = ()=>{
            const e = sl(iP).id === BP;
            return cg(vT.value?.toolbarBulldozerBar, e),
            (0,
            z.jsx)("div", {
                className: Zu()(qfe.bulldozeBar, e && qfe.active)
            })
        }
          , sxe = ({enableShortcuts: e})=>{
            const t = sl(vC)
              , n = f4(Fv.PhotoMode);
            return (0,
            z.jsx)(np, {
                allowLooping: !0,
                focusKey: Xfe,
                initialFocused: Zfe,
                direction: kg.Horizontal,
                jumpSections: !0,
                children: (0,
                z.jsx)("div", {
                    className: qfe.top,
                    children: (0,
                    z.jsxs)("div", {
                        className: qfe.topInner,
                        children: [(0,
                        z.jsxs)("div", {
                            className: qfe.start,
                            children: [(0,
                            z.jsx)(Kge, {
                                layout: "right",
                                children: (0,
                                z.jsx)(Ufe, {
                                    enableShortcuts: !n.visible
                                })
                            }), Jfe, (0,
                            z.jsxs)(Kge, {
                                children: [(0,
                                z.jsx)(Lfe, {
                                    enableShortcuts: e
                                }), Jfe, (0,
                                z.jsx)(pfe, {
                                    enableShortcuts: e
                                })]
                            })]
                        }), (0,
                        z.jsx)(Hfe, {
                            focusKey: Zfe,
                            enableShortcuts: e
                        }), (0,
                        z.jsxs)("div", {
                            className: qfe.end,
                            children: [exe, (0,
                            z.jsxs)(Kge, {
                                children: [(0,
                                z.jsx)(kfe, {
                                    enableShortcuts: e
                                }), Jfe, (0,
                                z.jsx)(Dfe, {
                                    enableShortcuts: e
                                }), Jfe, (0,
                                z.jsx)(Ffe, {
                                    enableShortcuts: e
                                }), Jfe, (0,
                                z.jsx)(Yfe, {
                                    enableShortcuts: e
                                })]
                            }), exe, (0,
                            z.jsx)(Kge, {
                                layout: "left",
                                children: (0,
                                z.jsx)(Bfe, {
                                    enableShortcuts: !t
                                })
                            })]
                        })]
                    })
                })
            })
        }
          , ixe = ()=>{
            const e = sl(WO)
              , t = Dm();
            return (0,
            z.jsx)("div", {
                className: Zu()(qfe.bottom, e && qfe.paused),
                children: (0,
                z.jsx)("div", {
                    className: Zu()(qfe.bottomInner, t && qfe.extraPadding),
                    children: (0,
                    z.jsxs)(np, {
                        allowLooping: !0,
                        direction: kg.Horizontal,
                        focusKey: Qfe,
                        children: [(0,
                        z.jsx)(QQ, {}), (0,
                        z.jsx)(U2, {}), (0,
                        z.jsx)(Bpe, {}), (0,
                        z.jsx)(ofe, {}), (0,
                        z.jsx)(nfe, {}), (0,
                        z.jsx)(Wpe, {})]
                    })
                })
            })
        }
        ;
        X.add("game-ui/game/components/toolbar/toolbar.tsx", {
            get Toolbar() {
                return txe
            },
            set Toolbar(e) {
                txe = e
            }
        });
        var axe = ({children: e})=>{
            const t = sl(Wh)
              , n = sl(zh)
              , s = sl(Dh)
              , i = tT()
              , a = sl(Fh);
            (0,
            Y.useEffect)((()=>{
                null !== n && Hh(!1)
            }
            ), [n]);
            const o = (0,
            Y.useMemo)((()=>{
                const e = null != s && null != a && null === t
                  , o = null != s && null == n
                  , r = null != t && null != n && Xb(t, n)
                  , l = null != t && null != n && Qb(t, n)
                  , c = null != t && (t.completed || t.advisorActivation || !t.mandatory);
                let u = !1;
                if (t && n) {
                    const e = t.phases.findIndex((e=>Ur(e.entity, n.entity)))
                      , [s,i] = eT(t, e);
                    u = s === i - 1
                }
                return {
                    "Continue Tutorial": r && !u ? Jh : null,
                    "Finish Tutorial": r && u ? Jh : null,
                    "Previous Tutorial Phase": l ? Jb : null,
                    "Focus Tutorial List": o ? Zh : null,
                    "Start Next Tutorial": e ? function() {
                        AL(),
                        Qh(a, Zp, !1)
                    }
                    : null,
                    Advisor: i ? gg : null,
                    "Close Tutorial": c ? eg : null
                }
            }
            ), [t, s, n, i, a]);
            return (0,
            z.jsx)(Mg, {
                actions: o,
                children: e
            })
        }
        ;
        X.add("game-ui/game/components/tutorials/tutorial-action-consumer.tsx", {
            get TutorialActionConsumer() {
                return axe
            },
            set TutorialActionConsumer(e) {
                axe = e
            }
        });
        var oxe, rxe = ({onTutorialActionNeeded: e, onSetControlledFocusKey: t})=>{
            const n = sl(kh)
              , s = sl(Wh)
              , i = sl(Yh) && null === s
              , a = sl($h)
              , o = sl(hg)
              , r = sl(Vh)
              , l = sl(Rh)
              , c = r && l;
            return (0,
            Y.useEffect)((()=>Zh(c)), [c]),
            (0,
            Y.useEffect)((()=>{
                n ? t(oxe.tutorialIntro) : i ? t(oxe.tutorialListIntro) : a ? t(oxe.tutorialListOutro) : c ? t(oxe.tutorialList) : t()
            }
            ), [t, n, c, i, a]),
            (0,
            z.jsx)($xe, {
                tutorialIntroVisible: n,
                tutorialListIntroVisible: i,
                tutorialListOutroVisible: a,
                localization: _c.Tutorials,
                advisorPanelVisible: o,
                onCompleteListIntro: ng,
                onTutorialActionNeeded: e,
                onSetControlledFocusKey: t
            })
        }
        ;
        X.add("game-ui/game/components/tutorials/tutorial-wrapper.tsx", {
            get TutorialWrapper() {
                return rxe
            },
            set TutorialWrapper(e) {
                rxe = e
            }
        }),
        function(e) {
            e[e.none = 0] = "none",
            e[e.toolbar = 1] = "toolbar",
            e[e.toolOptions = 2] = "toolOptions",
            e[e.assetMenu = 3] = "assetMenu",
            e[e.upgradesMenu = 4] = "upgradesMenu",
            e[e.mapTilePurchase = 5] = "mapTilePurchase",
            e[e.selectedInfo = 6] = "selectedInfo",
            e[e.infoViews = 7] = "infoViews",
            e[e.advisorPanel = 8] = "advisorPanel",
            e[e.tutorialIntro = 9] = "tutorialIntro",
            e[e.tutorialListIntro = 10] = "tutorialListIntro",
            e[e.tutorialListOutro = 11] = "tutorialListOutro",
            e[e.tutorialList = 12] = "tutorialList",
            e[e.tutorialCardCenter = 13] = "tutorialCardCenter",
            e[e.tutorialReminder = 14] = "tutorialReminder",
            e[e.signatureUnlocks = 15] = "signatureUnlocks",
            e[e.milestoneUnlocks = 16] = "milestoneUnlocks",
            e[e.activeTool = 17] = "activeTool"
        }(oxe || (oxe = {}));
        const lxe = [oxe.tutorialIntro, oxe.tutorialListIntro, oxe.tutorialListOutro, oxe.signatureUnlocks, oxe.milestoneUnlocks];
        var cxe = ({focusKey: e, hidden: t})=>{
            const [n,s] = (0,
            Y.useState)(!1)
              , [i,a] = (0,
            Y.useState)(!1)
              , o = sl(WO)
              , r = !Ur(sl(SL), Zp)
              , l = S2()
              , [c,u] = (0,
            Y.useState)(!1)
              , [d,m] = (0,
            Y.useState)(!1)
              , [h,g] = (0,
            Y.useState)();
            (0,
            Y.useEffect)((()=>{
                l || u(!1)
            }
            ), [l]);
            const p = sl(kK) === RK.None
              , f = sl(Bv)
              , x = Gu(f, Fv.InfoviewMenu)
              , v = sl(xC)
              , _ = sl(vC)
              , b = sl(Vw)
              , T = sl(DN)
              , E = !Ur(T, Zp) && p
              , I = sl(HN)
              , S = !E && I.length > 0 && p
              , y = sl(iP)
              , j = Dm()
              , C = sl(Gv)
              , N = sl(hg)
              , w = sl(ohe)
              , O = Gge()
              , P = sl(Aw)
              , L = Qce(O, P, w)
              , [A,M] = (0,
            Y.useState)(!1)
              , R = (0,
            Y.useCallback)((()=>{
                M(!1),
                pA()
            }
            ), []);
            (0,
            Y.useEffect)((()=>{
                A && !L && R()
            }
            ), [R, L, A]);
            const k = (0,
            Y.useRef)(P);
            O && (k.current = P);
            const D = oN("Infoviews")
              , F = null !== sl(ef)
              , U = F && !C && !O && !x
              , B = F && !x && !U
              , [G,V] = (0,
            Y.useState)(!1);
            (0,
            Y.useEffect)((()=>{
                F || V(!1)
            }
            ), [F]),
            (0,
            Y.useEffect)((()=>{
                v || _ || (a(!1),
                NC()),
                _ && !v && a(!0)
            }
            ), [v, _]);
            const H = sl(Lv)
              , K = L && (y.id === GP || A)
              , W = bW()
              , $ = cee()
              , q = (0,
            Y.useMemo)((()=>({
                "Info View": D.locked ? null : ()=>{
                    Gu(Bv.value, Fv.InfoviewMenu) ? tf() : F ? G ? (Kv(Fv.InfoviewMenu),
                    V(!0)) : V((e=>!e)) : Kv(Fv.InfoviewMenu)
                }
                ,
                "Tool Options": !c && l ? ()=>{
                    u((e=>!e))
                }
                : null,
                "Upgrades Menu": !K || A || l ? null : ()=>{
                    M(!A)
                }
                ,
                "Move Vertical": v ? e=>{
                    a(-1 === e)
                }
                : void 0,
                Quicksave: W,
                Quickload: $
            })), [v, c, l, K, A, W, $, F, G, D.locked, M])
              , X = (0,
            Y.useCallback)((()=>u(!1)), [])
              , Q = (0,
            Y.useCallback)((()=>qw()), []);
            let Z;
            Z = E ? oxe.milestoneUnlocks : S ? oxe.signatureUnlocks : h || (null != f ? f.__Type : N && !d ? oxe.advisorPanel : l && c ? oxe.toolOptions : O && w ? oxe.none : O && !A ? oxe.selectedInfo : L && A ? oxe.upgradesMenu : F && G ? oxe.infoViews : v && !i ? oxe.mapTilePurchase : r ? oxe.assetMenu : y.id !== GP ? oxe.activeTool : oxe.toolbar),
            (v || _) && j && i && Z === oxe.activeTool && (Z = oxe.toolbar),
            zp(!j || !i);
            i9(!(lxe.includes(Z) && H !== Ov.freeCamera));
            const J = A || r
              , ee = c
              , te = N || x
              , ne = Z === oxe.activeTool ? 66 : 0;
            return (0,
            z.jsxs)(Ah, {
                onFocusChange: s,
                children: [(0,
                z.jsx)(d1, {
                    blockingPanelActive: C
                }), (0,
                z.jsx)(yre, {
                    children: (0,
                    z.jsx)(axe, {
                        children: (0,
                        z.jsx)(Mg, {
                            actions: q,
                            children: (0,
                            z.jsx)(Wm, {
                                children: (0,
                                z.jsxs)("div", {
                                    className: Zu()(qle.gameMainScreen, {
                                        [qle.uiHidden]: t
                                    }),
                                    children: [(0,
                                    z.jsxs)(op, {
                                        focusKey: t ? Sg : e,
                                        focused: Z,
                                        activation: qu.Always,
                                        debugName: "GameMainScreen",
                                        children: [(0,
                                        z.jsxs)("div", {
                                            className: qle.mainContainer,
                                            children: [(0,
                                            z.jsx)("div", {
                                                className: qle.infoLayout,
                                                children: (0,
                                                z.jsx)(wS, {
                                                    in: U,
                                                    children: (0,
                                                    z.jsx)(M8, {
                                                        closeHint: "Close",
                                                        focusKey: oxe.infoViews,
                                                        className: qle.infoviewMenu,
                                                        onClose: sf
                                                    })
                                                })
                                            }), (0,
                                            z.jsx)("div", {
                                                className: qle.infoLayout,
                                                children: (0,
                                                z.jsx)(wS, {
                                                    in: O,
                                                    children: (0,
                                                    z.jsx)(Fge, {
                                                        focusKey: y.id === GP ? oxe.selectedInfo : Sg,
                                                        className: qle.selectedInfoPanel,
                                                        onClose: Q,
                                                        showHint: J !== te && !ee
                                                    })
                                                })
                                            }), j ? n && (0,
                                            z.jsxs)("div", {
                                                className: qle.topLayout,
                                                children: [(0,
                                                z.jsx)(nce, {
                                                    miniPanelVisible: B
                                                }), (0,
                                                z.jsx)(mT, {
                                                    uiTag: vT.value?.actionHints,
                                                    children: (0,
                                                    z.jsx)(IT, {
                                                        className: qle.actionHints,
                                                        delay: ne,
                                                        delayIgnoreCounter: 3,
                                                        excludedActions: ET
                                                    })
                                                }), (0,
                                                z.jsx)(uxe, {
                                                    visible: N,
                                                    orientation: "Vertical"
                                                })]
                                            }) : (0,
                                            z.jsxs)("div", {
                                                className: qle.infoMenuLayout,
                                                children: [(0,
                                                z.jsx)(nce, {
                                                    miniPanelVisible: B
                                                }), (0,
                                                z.jsx)(V0, {
                                                    name: "GameTopLeft"
                                                })]
                                            }), (0,
                                            z.jsxs)("div", {
                                                className: qle.toolLayout,
                                                children: [(0,
                                                z.jsx)("div", {
                                                    className: qle.toolSideColumn,
                                                    children: (0,
                                                    z.jsx)(wS, {
                                                        in: l,
                                                        children: (0,
                                                        z.jsx)(E2, {
                                                            focusKey: oxe.toolOptions,
                                                            onClose: X,
                                                            showHint: l && !ee || c && !te
                                                        })
                                                    })
                                                }), (0,
                                                z.jsxs)("div", {
                                                    className: qle.toolMainColumn,
                                                    children: [(0,
                                                    z.jsx)(wS, {
                                                        in: r,
                                                        children: (0,
                                                        z.jsx)(ote, {
                                                            focusKey: oxe.assetMenu,
                                                            onClose: AL,
                                                            className: qle.toolPanel
                                                        })
                                                    }), (0,
                                                    z.jsx)(wS, {
                                                        in: L,
                                                        children: (0,
                                                        z.jsx)(Xce, {
                                                            focusKey: oxe.upgradesMenu,
                                                            className: qle.toolPanel,
                                                            showOpenHint: !A && L,
                                                            onClose: R
                                                        })
                                                    }), (0,
                                                    z.jsx)(wS, {
                                                        in: v,
                                                        children: (0,
                                                        z.jsx)(lce, {
                                                            focusKey: oxe.mapTilePurchase,
                                                            className: qle.mapTilePurchasePanel,
                                                            onClose: NC,
                                                            showHint: !f
                                                        })
                                                    })]
                                                }), (0,
                                                z.jsx)("div", {
                                                    className: qle.toolSideColumn
                                                })]
                                            }), (0,
                                            z.jsx)(ud, {
                                                children: f && (0,
                                                z.jsx)(ap, {
                                                    focusKey: f.__Type,
                                                    children: (0,
                                                    z.jsx)(Qle, {
                                                        panel: f
                                                    })
                                                }, f.__Type)
                                            }), (0,
                                            z.jsx)(k2, {
                                                className: qle.bpIndicator
                                            }), !j && (0,
                                            z.jsx)(uxe, {
                                                visible: N
                                            })]
                                        }), (0,
                                        z.jsx)(txe, {
                                            onlyStatusVisible: v,
                                            focusKey: oxe.toolbar
                                        }), (0,
                                        z.jsx)(wS, {
                                            in: O && null !== b,
                                            children: O && b && (0,
                                            z.jsx)(Bce, {
                                                onClose: Q,
                                                developerInfoSection: b
                                            })
                                        }), (0,
                                        z.jsx)("div", {
                                            className: Zu()(qle.pauseOverlay, o && qle.paused)
                                        }), (0,
                                        z.jsx)(rxe, {
                                            focusKey: e,
                                            onTutorialActionNeeded: m,
                                            onSetControlledFocusKey: g
                                        }), S && (0,
                                        z.jsx)(l_, {
                                            children: (0,
                                            z.jsx)(jce, {
                                                focusKey: oxe.signatureUnlocks,
                                                entities: I,
                                                onClose: KN
                                            })
                                        }), E && (0,
                                        z.jsx)(l_, {
                                            children: (0,
                                            z.jsx)(Ice, {
                                                focusKey: oxe.milestoneUnlocks,
                                                milestone: T,
                                                onClose: FN
                                            })
                                        }), (0,
                                        z.jsx)(V0, {
                                            name: "Game"
                                        })]
                                    }), (0,
                                    z.jsx)(p9, {})]
                                })
                            })
                        })
                    })
                })]
            })
        }
        ;
        const uxe = (0,
        Y.memo)((function({visible: e, orientation: t="Horizontal"}) {
            const n = tT()
              , s = sl(Dl);
            return (0,
            z.jsxs)("div", {
                className: Zu()(qle.pauseMenuLayout, "Horizontal" === t && qle.horizontal, "Vertical" === t && qle.vertical),
                children: [(0,
                z.jsx)(V0, {
                    name: "GameTopRight"
                }), n && (0,
                z.jsxs)("div", {
                    className: qle.pauseMenuToggle,
                    children: [(0,
                    z.jsx)(UT, {
                        action: "Advisor",
                        className: qle.hint
                    }), (0,
                    z.jsx)(BQ, {
                        title: (0,
                        z.jsx)(_c.Main.TOOLTIP_TITLE_ADVISOR, {}),
                        description: (0,
                        z.jsx)(_c.Main.TOOLTIP_DESCRIPTION_ADVISOR, {}),
                        shortcut: (0,
                        z.jsx)(BT, {
                            action: "Advisor",
                            active: s
                        }),
                        children: (0,
                        z.jsx)(a9, {
                            src: "Media/Glyphs/Advisor.svg",
                            selected: e,
                            className: qle.pauseMenuToggle,
                            onSelect: gg
                        })
                    })]
                }), (0,
                z.jsxs)("div", {
                    className: qle.pauseMenuToggle,
                    children: [(0,
                    z.jsx)(UT, {
                        action: "Pause Menu",
                        className: qle.hint
                    }), (0,
                    z.jsx)(mT, {
                        uiTag: vT.value?.pauseMenuButton,
                        children: (0,
                        z.jsx)(BQ, {
                            title: (0,
                            z.jsx)(_c.Main.TOOLTIP_TITLE_PAUSE_MENU, {}),
                            description: (0,
                            z.jsx)(_c.Main.TOOLTIP_DESCRIPTION_PAUSE_MENU, {}),
                            shortcut: (0,
                            z.jsx)(BT, {
                                action: "Pause Menu",
                                active: s
                            }),
                            children: (0,
                            z.jsx)(a9, {
                                src: "Media/Glyphs/Gear.svg",
                                onSelect: kv
                            })
                        })
                    })]
                })]
            })
        }
        ), ((e,t)=>e.visible === t.visible));
        X.add("game-ui/game/components/game-main-screen.tsx", {
            get Key() {
                return oxe
            },
            set Key(e) {
                oxe = e
            },
            get GameMainScreen() {
                return cxe
            },
            set GameMainScreen(e) {
                cxe = e
            }
        });
        let dxe = {
            header: "header_Quv header_Bpo child-opacity-transition_nkS",
            content: "content_OGC content_AD7 child-opacity-transition_nkS",
            footer: "footer_H3w footer_pD5 child-opacity-transition_nkS"
        };
        X.add("game-ui/common/panel/themes/light.module.scss", {
            get classes() {
                return dxe
            },
            set classes(e) {
                Object.assign(dxe, e)
            }
        });
        const mxe = dxe;
        let hxe = {
            "tutorial-intro-panel": "tutorial-intro-panel_gJl",
            tutorialIntroPanel: "tutorial-intro-panel_gJl",
            wrapper: "wrapper_GJY",
            wide: "wide_RVn",
            intro: "intro_dph",
            "image-layout": "image-layout_DU8",
            imageLayout: "image-layout_DU8",
            image: "image_KoE",
            chirper: "chirper_KjN",
            logo: "logo_igH",
            content: "content_vpm",
            title: "title_QRS",
            subtitle: "subtitle_gN8",
            description: "description_VKr",
            "checkbox-container": "checkbox-container_ety",
            checkboxContainer: "checkbox-container_ety",
            "checkbox-label": "checkbox-label_YsL",
            checkboxLabel: "checkbox-label_YsL",
            checkbox: "checkbox_OCf",
            divider: "divider_agt",
            "button-container": "button-container_vXF",
            buttonContainer: "button-container_vXF",
            button: "button_b9w",
            "dialog-button": "dialog-button_iCQ",
            dialogButton: "dialog-button_iCQ",
            hint: "hint_f_u",
            header: "header_Abn"
        };
        X.add("game-ui/game/components/tutorials/tutorial-intro-panel/tutorial-intro-panel.module.scss", {
            get classes() {
                return hxe
            },
            set classes(e) {
                Object.assign(hxe, e)
            }
        });
        const gxe = hxe
          , pxe = new Ig("BEGIN");
        var fxe;
        !function(e) {
            e[e.Welcome = 0] = "Welcome",
            e[e.Preface = 1] = "Preface",
            e[e.TutorialConfirmation = 2] = "TutorialConfirmation"
        }(fxe || (fxe = {}));
        var xxe = ({focusKey: e})=>{
            const [t,n] = (0,
            Y.useState)(fxe.Welcome)
              , s = (0,
            Y.useCallback)((e=>n(e ? fxe.Preface : fxe.TutorialConfirmation)), [])
              , i = (0,
            Y.useCallback)((e=>{
                e ? n(fxe.Welcome) : tg(!1)
            }
            ), [])
              , a = (0,
            Y.useCallback)((()=>tg(!0)), []);
            return (0,
            z.jsx)(rE, {
                focusKey: e,
                theme: mxe,
                className: Zu()(gxe.tutorialIntroPanel, {
                    [gxe.intro]: t === fxe.Welcome
                }),
                contentClassName: gxe.content,
                children: (0,
                z.jsxs)(np, {
                    initialFocused: pxe,
                    children: [t === fxe.Welcome && (0,
                    z.jsx)(vxe, {
                        onContinue: s
                    }), t === fxe.Preface && (0,
                    z.jsx)(_xe, {
                        onContinue: a
                    }), t === fxe.TutorialConfirmation && (0,
                    z.jsx)(bxe, {
                        onContinue: i
                    })]
                })
            })
        }
        ;
        const vxe = ({onContinue: e})=>{
            const [t,n] = (0,
            Y.useState)(!0)
              , s = (0,
            Y.useCallback)((()=>{
                e(t)
            }
            ), [t, e])
              , [i,a] = (0,
            Y.useState)(!1)
              , o = Dm();
            return (0,
            z.jsxs)("div", {
                className: Zu()(gxe.wrapper, gxe.wide),
                children: [(0,
                z.jsxs)("div", {
                    className: gxe.imageLayout,
                    children: [(0,
                    z.jsx)("img", {
                        src: "Media/Game/Milestones/Cityscape01.svg",
                        className: gxe.image
                    }), (0,
                    z.jsx)("img", {
                        src: "Media/Tutorials/GameLogo.svg",
                        className: gxe.logo
                    })]
                }), (0,
                z.jsx)("div", {
                    className: gxe.title,
                    children: (0,
                    z.jsx)(_c.Tutorials.INTRO_TITLE, {})
                }), (0,
                z.jsx)("div", {
                    className: gxe.subtitle,
                    children: (0,
                    z.jsx)(_c.Tutorials.INTRO_SUBTITLE, {})
                }), (0,
                z.jsx)("div", {
                    className: gxe.description,
                    children: (0,
                    z.jsx)(Cb, {
                        children: (0,
                        z.jsx)(_c.Tutorials.INTRO, {})
                    })
                }), (0,
                z.jsx)(U_, {
                    focusKey: pxe,
                    theme: ZE,
                    className: gxe.button,
                    onSelect: s,
                    selected: !o,
                    shortcut: o ? void 0 : "Confirm",
                    children: (0,
                    z.jsx)(_c.Tutorials.BEGIN_WITH_TUTORIALS, {})
                }), (0,
                z.jsxs)(Ip, {
                    onFocusChange: a,
                    className: gxe.checkboxContainer,
                    children: [(0,
                    z.jsx)(UT, {
                        action: "Select",
                        active: i,
                        className: gxe.hint
                    }), (0,
                    z.jsx)(Hb, {
                        checked: t,
                        onChange: n,
                        className: gxe.checkbox
                    }), (0,
                    z.jsx)("div", {
                        className: gxe.checkboxLabel,
                        children: (0,
                        z.jsx)(_c.Tutorials.ENABLE_TUTORIALS_CONFIRM, {})
                    })]
                })]
            })
        }
          , _xe = ({onContinue: e})=>{
            const t = (0,
            Y.useCallback)((()=>e(!0)), [e])
              , n = Dm();
            return (0,
            z.jsxs)("div", {
                className: gxe.wrapper,
                children: [(0,
                z.jsxs)("div", {
                    className: gxe.imageLayout,
                    children: [(0,
                    z.jsx)("img", {
                        src: "Media/Tutorials/GameLogo.svg",
                        className: gxe.logo
                    }), (0,
                    z.jsx)("img", {
                        src: "Media/Game/Icons/Chirper.svg",
                        className: gxe.chirper
                    })]
                }), (0,
                z.jsx)("div", {
                    className: gxe.divider
                }), (0,
                z.jsx)("div", {
                    className: gxe.description,
                    children: (0,
                    z.jsx)(Cb, {
                        children: (0,
                        z.jsx)(_c.Tutorials.BEFORE_STARTING, {})
                    })
                }), (0,
                z.jsx)(U_, {
                    theme: ZE,
                    className: gxe.button,
                    onSelect: t,
                    selected: !n,
                    shortcut: n ? void 0 : "Confirm",
                    children: (0,
                    z.jsx)(_c.Tutorials.BEFORE_STARTING_CONFIRM, {})
                })]
            })
        }
          , bxe = ({onContinue: e})=>{
            const t = (0,
            Y.useCallback)((()=>e(!1)), [e])
              , n = (0,
            Y.useCallback)((()=>e(!0)), [e])
              , s = Dm();
            return (0,
            z.jsxs)("div", {
                className: gxe.wrapper,
                children: [(0,
                z.jsxs)("div", {
                    className: gxe.imageLayout,
                    children: [(0,
                    z.jsx)("img", {
                        src: "Media/Tutorials/GameLogo.svg",
                        className: gxe.logo
                    }), (0,
                    z.jsx)("img", {
                        src: "Media/Game/Icons/Chirper.svg",
                        className: gxe.chirper
                    })]
                }), (0,
                z.jsx)("div", {
                    className: gxe.divider
                }), (0,
                z.jsx)("div", {
                    className: gxe.description,
                    children: (0,
                    z.jsx)(Cb, {
                        renderer: Rb,
                        children: s ? (0,
                        z.jsx)(_c.Tutorials.DISABLE_CONFIRMATION_TEXT_GAMEPAD, {}) : (0,
                        z.jsx)(_c.Tutorials.DISABLE_CONFIRMATION_TEXT, {})
                    })
                }), (0,
                z.jsxs)("div", {
                    className: gxe.buttonContainer,
                    children: [(0,
                    z.jsx)(U_, {
                        theme: ZE,
                        className: Zu()(gxe.button, gxe.dialogButton),
                        onSelect: t,
                        children: (0,
                        z.jsx)(_c.Common.YES, {})
                    }), (0,
                    z.jsx)(U_, {
                        theme: ZE,
                        className: Zu()(gxe.button, gxe.dialogButton, ZE.negative),
                        onSelect: n,
                        children: (0,
                        z.jsx)(_c.Common.NO, {})
                    })]
                })]
            })
        }
        ;
        X.add("game-ui/game/components/tutorials/tutorial-intro-panel/tutorial-intro-panel.tsx", {
            get TutorialIntroPanel() {
                return xxe
            },
            set TutorialIntroPanel(e) {
                xxe = e
            }
        });
        const Txe = new Ig("BEGIN");
        var Exe = ({focusKey: e, localization: t, onCompleteListIntro: n})=>{
            const s = Dm();
            return (0,
            z.jsx)(rE, {
                focusKey: e,
                theme: mxe,
                className: gxe.tutorialIntroPanel,
                contentClassName: gxe.content,
                children: (0,
                z.jsx)(np, {
                    initialFocused: Txe,
                    children: (0,
                    z.jsxs)("div", {
                        className: gxe.wrapper,
                        children: [(0,
                        z.jsxs)("div", {
                            className: gxe.imageLayout,
                            children: [(0,
                            z.jsx)("img", {
                                src: "Media/Tutorials/GameLogo.svg",
                                className: gxe.logo
                            }), (0,
                            z.jsx)("img", {
                                src: "Media/Game/Icons/Chirper.svg",
                                className: gxe.chirper
                            })]
                        }), (0,
                        z.jsx)("div", {
                            className: gxe.divider
                        }), (0,
                        z.jsx)("div", {
                            className: gxe.header,
                            children: (0,
                            z.jsx)(t.TITLE, {
                                hash: "Welcome"
                            })
                        }), (0,
                        z.jsx)("div", {
                            className: gxe.description,
                            children: (0,
                            z.jsx)(Cb, {
                                children: (0,
                                z.jsx)(t.TODO_INTRO, {})
                            })
                        }), t === _c.EditorTutorials ? (0,
                        z.jsxs)("div", {
                            className: gxe.buttonContainer,
                            children: [(0,
                            z.jsx)(U_, {
                                theme: ZE,
                                className: Zu()(gxe.button, gxe.dialogButton),
                                onSelect: ()=>n(!0),
                                children: (0,
                                z.jsx)(_c.Common.YES, {})
                            }), (0,
                            z.jsx)(U_, {
                                theme: ZE,
                                className: Zu()(gxe.button, gxe.dialogButton, ZE.negative),
                                onSelect: ()=>n(!1),
                                children: (0,
                                z.jsx)(_c.Common.NO, {})
                            })]
                        }) : (0,
                        z.jsx)(U_, {
                            theme: ZE,
                            className: gxe.button,
                            onSelect: ()=>n(!0),
                            selected: !s,
                            shortcut: s ? void 0 : "Confirm",
                            children: (0,
                            z.jsx)(_c.Tutorials.TODO_INTRO_CONFIRM, {})
                        })]
                    })
                })
            })
        }
        ;
        X.add("game-ui/game/components/tutorials/tutorial-intro-panel/tutorial-list-intro-panel.tsx", {
            get TutorialListIntroPanel() {
                return Exe
            },
            set TutorialListIntroPanel(e) {
                Exe = e
            }
        });
        const Ixe = new Ig("BEGIN");
        var Sxe = ({focusKey: e})=>{
            const t = Dm()
              , n = (0,
            Y.useCallback)((()=>{
                Av(Ov.newGame),
                sg()
            }
            ), []);
            return (0,
            z.jsx)(rE, {
                focusKey: e,
                theme: mxe,
                className: gxe.tutorialIntroPanel,
                contentClassName: gxe.content,
                children: (0,
                z.jsx)(np, {
                    initialFocused: Ixe,
                    children: (0,
                    z.jsxs)("div", {
                        className: Zu()(gxe.wrapper, gxe.wide),
                        children: [(0,
                        z.jsxs)("div", {
                            className: gxe.imageLayout,
                            children: [(0,
                            z.jsx)("img", {
                                src: "Media/Tutorials/GameLogo.svg",
                                className: gxe.logo
                            }), (0,
                            z.jsx)("img", {
                                src: "Media/Game/Icons/Chirper.svg",
                                className: gxe.chirper
                            })]
                        }), (0,
                        z.jsx)("div", {
                            className: gxe.divider
                        }), (0,
                        z.jsx)("div", {
                            className: gxe.description,
                            children: (0,
                            z.jsx)(Cb, {
                                renderer: Rb,
                                children: t ? (0,
                                z.jsx)(_c.Tutorials.TODO_OUTRO_GAMEPAD, {}) : (0,
                                z.jsx)(_c.Tutorials.TODO_OUTRO, {})
                            })
                        }), (0,
                        z.jsxs)("div", {
                            className: gxe.buttonContainer,
                            children: [(0,
                            z.jsx)(U_, {
                                theme: ZE,
                                className: Zu()(gxe.button, gxe.dialogButton),
                                onSelect: sg,
                                children: (0,
                                z.jsx)(_c.Tutorials.TODO_OUTRO_CONTINUE, {})
                            }), (0,
                            z.jsx)(U_, {
                                theme: ZE,
                                className: Zu()(gxe.button, gxe.dialogButton, ZE.negative),
                                onSelect: n,
                                selected: !t,
                                shortcut: t ? void 0 : "Confirm",
                                children: (0,
                                z.jsx)(_c.Tutorials.TODO_OUTRO_NEW_CITY, {})
                            })]
                        })]
                    })
                })
            })
        }
        ;
        X.add("game-ui/game/components/tutorials/tutorial-intro-panel/tutorial-list-outro-panel.tsx", {
            get TutorialListOutroPanel() {
                return Sxe
            },
            set TutorialListOutroPanel(e) {
                Sxe = e
            }
        });
        let yxe = {
            enter: "enter_wwI",
            "enter-active": "enter-active_p_T",
            enterActive: "enter-active_p_T",
            exit: "exit_rZO",
            "exit-active": "exit-active_vTx",
            exitActive: "exit-active_vTx"
        };
        X.add("game-ui/game/components/tutorials/tutorial-panel-transition.module.scss", {
            get classes() {
                return yxe
            },
            set classes(e) {
                Object.assign(yxe, e)
            }
        });
        const jxe = yxe;
        let Cxe = {
            "panel-content": "panel-content_p59",
            panelContent: "panel-content_p59",
            "tutorial-layout": "tutorial-layout_dTO tutorial-layout_iuN",
            tutorialLayout: "tutorial-layout_dTO tutorial-layout_iuN",
            image: "image_e92 image_NyN",
            columns: "columns_WiK columns_ITy",
            scrollable: "scrollable_pas scrollable_ErH"
        };
        X.add("game-ui/game/components/tutorials/tutorial-card/tutorial-card.module.scss", {
            get classes() {
                return Cxe
            },
            set classes(e) {
                Object.assign(Cxe, e)
            }
        });
        const Nxe = Cxe;
        var wxe = ({tutorial: e, phase: t, className: n, expanded: s, localization: i, onToggle: a, onClose: o})=>{
            const r = Dm()
              , l = e?.completed || e?.advisorActivation || !e?.mandatory;
            return (0,
            z.jsx)(o5, {
                isFocusRoot: !0,
                headerText: t && (0,
                z.jsx)(_c.Tutorials.TITLE, {
                    hash: t.name
                }),
                theme: lte,
                expanded: s,
                transition: jxe,
                transitionSounds: up,
                className: Zu()(Nxe.tutorialCard, n),
                contentClassName: Nxe.panelContent,
                onToggleExpanded: a,
                onClose: l ? o : void 0,
                showCloseHint: l,
                togglable: !r,
                children: e && t && (0,
                z.jsx)(iT, {
                    closeable: l,
                    pagesVisible: !0,
                    tutorial: e,
                    phase: t,
                    theme: Nxe,
                    localization: i,
                    scrollable: !0
                })
            })
        }
        ;
        X.add("game-ui/game/components/tutorials/tutorial-card/tutorial-card.tsx", {
            get TutorialCard() {
                return wxe
            },
            set TutorialCard(e) {
                wxe = e
            }
        });
        let Oxe = {
            "tutorial-layout": "tutorial-layout_QpW tutorial-layout_iuN",
            tutorialLayout: "tutorial-layout_QpW tutorial-layout_iuN",
            "tutorial-center-card": "tutorial-center-card_j6a",
            tutorialCenterCard: "tutorial-center-card_j6a",
            image: "image_khW image_NyN",
            triggers: "triggers_tif"
        };
        X.add("game-ui/game/components/tutorials/tutorial-center-card/tutorial-center-card.module.scss", {
            get classes() {
                return Oxe
            },
            set classes(e) {
                Object.assign(Oxe, e)
            }
        });
        const Pxe = Oxe;
        var Lxe = ({tutorial: e, phase: t, className: n, localization: s, onClose: i})=>{
            const a = e?.completed || e?.advisorActivation || !e?.mandatory
              , o = a ? "Close Tutorial" : void 0;
            return (0,
            z.jsx)(rE, {
                focusKey: oxe.tutorialCardCenter,
                header: e && (0,
                z.jsx)(dE, {
                    children: (0,
                    z.jsx)(_c.Tutorials.TITLE, {
                        hash: e.name
                    })
                }),
                theme: lte,
                transitionSounds: up,
                className: Zu()(Pxe.tutorialCenterCard, n),
                onClose: a ? i : void 0,
                showCloseHint: o,
                unfocusedHintAction: o,
                children: e && t && (0,
                z.jsx)(iT, {
                    theme: Pxe,
                    tutorial: e,
                    phase: t,
                    pagesVisible: !0,
                    localization: s,
                    scrollable: !0
                })
            })
        }
        ;
        X.add("game-ui/game/components/tutorials/tutorial-center-card/tutorial-center-card.tsx", {
            get TutorialCenterCard() {
                return Lxe
            },
            set TutorialCenterCard(e) {
                Lxe = e
            }
        });
        let Axe = {
            toggle: "toggle_Tm5"
        };
        X.add("game-ui/game/components/tutorials/tutorial-list-panel/tutorial-list-checkbox.module.scss", {
            get classes() {
                return Axe
            },
            set classes(e) {
                Object.assign(Axe, e)
            }
        });
        const Mxe = Axe;
        let Rxe = {
            "tutorial-list-panel": "tutorial-list-panel_lGU",
            tutorialListPanel: "tutorial-list-panel_lGU",
            header: "header_GVY",
            "item-right": "item-right_ay5",
            itemRight: "item-right_ay5",
            "item-left": "item-left_Wz1",
            itemLeft: "item-left_Wz1",
            content: "content_oLZ tutorial-layout_iuN",
            hints: "hints_enS tutorial-layout_iuN",
            "item-hint": "item-hint_hBI",
            itemHint: "item-hint_hBI",
            "hints-content": "hints-content_Mmn",
            hintsContent: "hints-content_Mmn",
            item: "item_GYF",
            completed: "completed_tbu",
            selected: "selected_txY",
            checkbox: "checkbox_y4W",
            title: "title_SfK",
            label: "label_nNX",
            "play-button": "play-button_Zaj",
            playButton: "play-button_Zaj",
            blink: "blink_hSS",
            "play-icon": "play-icon_Bax",
            playIcon: "play-icon_Bax"
        };
        X.add("game-ui/game/components/tutorials/tutorial-list-panel/tutorial-list-panel.module.scss", {
            get classes() {
                return Rxe
            },
            set classes(e) {
                Object.assign(Rxe, e)
            }
        });
        const kxe = Rxe;
        var Dxe = ({list: e, className: t, expanded: n, onToggle: s, focusKey: i})=>{
            const a = sl(Wh)
              , o = sl(Fh)
              , r = (0,
            Y.useMemo)((()=>e?.hints.filter((e=>null != e && e.completed)).sort(((e,t)=>(e?.priority ?? 0) - (t?.priority ?? 0)))), [e?.hints])
              , l = (0,
            Y.useMemo)((()=>({
                Back: ()=>{
                    Hh(!1)
                }
            })), [])
              , c = sl(Vh)
              , u = Dm();
            zp(!c || !u),
            (0,
            Y.useEffect)((()=>(Hh(!0),
            ()=>Hh(!1))), []);
            const d = e?.tutorials.reduce(((e,t)=>{
                const n = t?.alternatives?.some((e=>Ur(e, o)))
                  , s = Ur(t.entity, a?.entity)
                  , i = null == t || !Ur(t.entity, o) && !n && !(t.active || t.completed);
                return s || i ? e : t
            }
            ), void 0);
            return (0,
            z.jsx)(Mg, {
                actions: l,
                children: (0,
                z.jsx)(o5, {
                    isFocusRoot: !0,
                    expanded: n,
                    focusKey: i,
                    headerText: e && (0,
                    z.jsx)(_c.Tutorials.TITLE, {
                        hash: e.name
                    }),
                    theme: lte,
                    onToggleExpanded: s,
                    transition: jxe,
                    transitionSounds: up,
                    headerIcon: d && !n ? (0,
                    z.jsx)("div", {
                        className: Zu()(kxe.playButton),
                        children: (0,
                        z.jsx)(Z_, {
                            src: "Media/Radio/Play.svg",
                            className: kxe.playIcon
                        })
                    }) : void 0,
                    showCloseHint: n,
                    unfocusedHintAction: n && !a?.active ? "Focus Tutorial List" : void 0,
                    className: Zu()(kxe.tutorialListPanel, t),
                    togglable: !u,
                    children: (0,
                    z.jsxs)(np, {
                        onRefocus: ()=>d?.name || e?.tutorials[0].name || "",
                        children: [(0,
                        z.jsxs)("div", {
                            className: kxe.content,
                            children: [(0,
                            z.jsx)("div", {
                                className: kxe.header,
                                children: (0,
                                z.jsx)(_c.Tutorials.TASKS, {})
                            }), e?.tutorials.map((e=>{
                                const t = e?.alternatives?.some((e=>Ur(e, o)))
                                  , n = null == e || !Ur(e.entity, o) && !t && !(e.active || e.completed);
                                return null != e && (0,
                                z.jsx)(Fxe, {
                                    tutorial: e,
                                    active: Ur(e.entity, a?.entity),
                                    disabled: n
                                }, Dr(e.entity))
                            }
                            ))]
                        }), r && r.length > 0 && (0,
                        z.jsx)(Bxe, {
                            activeTutorial: a,
                            hints: r
                        })]
                    })
                })
            })
        }
        ;
        const Fxe = ({tutorial: e, disabled: t=!1, active: n=!1, hint: s=!1})=>{
            const i = (0,
            Y.useCallback)((()=>{
                AL(),
                Hh(!1),
                !n && Qh(e.entity, Zp, !1)
            }
            ), [n, e.entity]);
            return (0,
            z.jsxs)(U_, {
                focusKey: t ? Sg : e.name,
                disabled: t,
                className: Zu()(kxe.item, {
                    [kxe.completed]: e.completed,
                    [kxe.selected]: n
                }),
                onSelect: i,
                disableHint: !0,
                children: [(0,
                z.jsxs)("div", {
                    className: kxe.itemLeft,
                    children: [(0,
                    z.jsx)(Uxe, {
                        active: n,
                        disabled: t,
                        completed: e.completed
                    }), (0,
                    z.jsx)("div", {
                        className: Zu()(kxe.playButton, t && "disabled"),
                        children: (0,
                        z.jsx)(Z_, {
                            src: "Media/Radio/Play.svg",
                            className: kxe.playIcon
                        })
                    })]
                }), (0,
                z.jsxs)("div", {
                    className: kxe.title,
                    children: [(0,
                    z.jsx)("div", {
                        className: kxe.label,
                        children: (0,
                        z.jsx)(_c.Tutorials.TITLE, {
                            hash: e.name
                        })
                    }), (0,
                    z.jsx)("div", {
                        className: kxe.itemRight,
                        children: !s && (0,
                        z.jsx)(Hb, {
                            focusKey: Sg,
                            checked: e.completed,
                            disabled: t,
                            theme: Mxe,
                            className: kxe.checkbox
                        })
                    })]
                })]
            })
        }
          , Uxe = ({active: e, disabled: t, completed: n})=>{
            const s = wh((0,
            Y.useContext)(Ju))
              , i = !(s || t || n || e)
              , a = s && !t;
            return (0,
            z.jsx)(UT, {
                action: i ? "Start Next Tutorial" : "Select",
                active: i || a,
                className: kxe.itemHint
            })
        }
          , Bxe = ({activeTutorial: e, hints: t})=>(0,
        z.jsxs)("div", {
            className: kxe.hints,
            children: [(0,
            z.jsx)("div", {
                className: kxe.header,
                children: (0,
                z.jsx)(_c.Tutorials.HINTS_TITLE, {})
            }), (0,
            z.jsx)(mb, {
                className: kxe.hintsContent,
                children: t.map((t=>t && (0,
                z.jsx)(Fxe, {
                    hint: !0,
                    tutorial: t,
                    active: Ur(e?.entity, t.entity)
                }, Dr(t.entity))))
            })]
        });
        X.add("game-ui/game/components/tutorials/tutorial-list-panel/tutorial-list-panel.tsx", {
            get TutorialListPanel() {
                return Dxe
            },
            set TutorialListPanel(e) {
                Dxe = e
            }
        });
        var Gxe = ({onClose: e, className: t})=>(0,
        z.jsx)(rE, {
            focusKey: oxe.tutorialReminder,
            onClose: e,
            header: (0,
            z.jsx)(dE, {
                children: (0,
                z.jsx)(_c.Tutorials.LIST_REMINDER_TITLE, {})
            }),
            theme: lte,
            transitionSounds: up,
            className: Zu()(Pxe.tutorialCenterCard, "tutorial-reminder", t),
            showCloseHint: !0,
            children: (0,
            z.jsx)(aT, {
                image: "Media/Tutorials/ReminderPanel.png",
                description: (0,
                z.jsx)(_c.Tutorials.LIST_REMINDER_DESCRIPTION, {}),
                nextVisible: !0,
                onActivateNextPhase: e
            })
        });
        X.add("game-ui/game/components/tutorials/tutorial-list-reminder.tsx", {
            get TutorialListReminder() {
                return Gxe
            },
            set TutorialListReminder(e) {
                Gxe = e
            }
        });
        let Vxe = {
            "tutorial-renderer": "tutorial-renderer_wve",
            tutorialRenderer: "tutorial-renderer_wve",
            "top-right-layout": "top-right-layout_sSC",
            topRightLayout: "top-right-layout_sSC",
            "bottom-left-layout": "bottom-left-layout_TpC",
            bottomLeftLayout: "bottom-left-layout_TpC",
            "top-right-panel": "top-right-panel_A2r",
            topRightPanel: "top-right-panel_A2r",
            "list-panel": "list-panel_MBq top-right-panel_A2r",
            listPanel: "list-panel_MBq top-right-panel_A2r",
            "advisor-panel": "advisor-panel_mrr top-right-panel_A2r",
            advisorPanel: "advisor-panel_mrr top-right-panel_A2r",
            "card-panel": "card-panel_UGb top-right-panel_A2r",
            cardPanel: "card-panel_UGb top-right-panel_A2r",
            "center-layout": "center-layout_Uqg",
            centerLayout: "center-layout_Uqg"
        };
        X.add("game-ui/game/components/tutorials/tutorial-renderer/tutorial-renderer.module.scss", {
            get classes() {
                return Vxe
            },
            set classes(e) {
                Object.assign(Vxe, e)
            }
        });
        const Hxe = Vxe;
        var Kxe = (0,
        Y.memo)((function({className: e, onTutorialActionNeeded: t, localization: n, onSetControlledFocusKey: s, onTutorialReminder: i}) {
            const a = sl(Dh)
              , o = sl(Wh)
              , r = sl(zh)
              , l = sl(kh)
              , c = sl(Yh)
              , u = sl($h)
              , d = sl(Uh)
              , m = sl(hg)
              , h = sl(Vv)
              , g = sl(Vh)
              , p = [Pv.Center, Pv.Right].includes(h)
              , f = r?.type === mg.Card
              , x = r?.type === mg.CenterCard
              , v = (0,
            Y.useMemo)((()=>{
                if (null !== a) {
                    if (null !== o)
                        return !a.tutorials.find((e=>Ur(e.entity, o.entity))) && !a.hints.find((e=>Ur(e.entity, o.entity)));
                    if (!Ur(d, Zp))
                        return !a.tutorials.find((e=>Ur(e.entity, d))) && !a.hints.find((e=>Ur(e.entity, d)))
                }
                return !1
            }
            ), [o, a, d])
              , [_,b] = (0,
            Y.useState)(!1)
              , [T,E] = (0,
            Y.useState)(!1)
              , [I,S] = (0,
            Y.useState)(!0)
              , y = (0,
            Y.useCallback)((e=>{
                b(e),
                e && (E(!1),
                S(!1)),
                e && !Gu(Bv, Fv.InfoviewMenu) && zv()
            }
            ), [])
              , j = (0,
            Y.useCallback)((e=>{
                E(e),
                e && (b(!1),
                S(!1)),
                e && !Gu(Bv, Fv.InfoviewMenu) && zv()
            }
            ), [])
              , C = (0,
            Y.useCallback)((e=>{
                S(e),
                e && (b(!1),
                E(!1)),
                e && !Gu(Bv, Fv.InfoviewMenu) && zv()
            }
            ), [])
              , N = null !== a && !v && !c && !u
              , w = (0,
            Y.useMemo)((()=>{
                const e = !p && !I && !_ && (T || f)
                  , t = !(p || _ || f && e || !a);
                return {
                    finalCard: e,
                    finalList: t,
                    finalAdvisorPanel: !p && (!e || !f) && (!t || !N) && m
                }
            }
            ), [_, m, p, T, f, a, I, N])
              , [O,P] = Wxe(o, a);
            return (0,
            Y.useEffect)((()=>()=>gg(!1)), []),
            (0,
            Y.useEffect)((()=>{
                j(f),
                S(!f)
            }
            ), [j, f]),
            (0,
            Y.useEffect)((()=>{
                g && P()
            }
            ), [P, g]),
            (0,
            Y.useEffect)((()=>{
                if (i?.(O),
                O)
                    return s?.(oxe.tutorialReminder),
                    ()=>s?.(void 0)
            }
            ), [O, s, i]),
            (0,
            Y.useEffect)((()=>{
                t?.(!!r)
            }
            ), [r, t]),
            l ? null : (0,
            z.jsxs)("div", {
                className: Zu()(Hxe.tutorialRenderer, e),
                children: [n === _c.Tutorials && (0,
                z.jsxs)("div", {
                    className: Hxe.topRightLayout,
                    children: [(0,
                    z.jsx)(wS, {
                        in: m,
                        children: (0,
                        z.jsx)(g5, {
                            focusKey: w.finalCard || g ? Sg : oxe.advisorPanel,
                            expanded: w.finalAdvisorPanel,
                            onToggle: y,
                            onClose: gg,
                            className: Hxe.advisorPanel,
                            localization: n
                        })
                    }), (0,
                    z.jsx)(wS, {
                        in: N,
                        children: (0,
                        z.jsx)(Dxe, {
                            focusKey: oxe.tutorialList,
                            list: a,
                            expanded: I && w.finalList,
                            onToggle: C,
                            className: Hxe.listPanel
                        })
                    }), (0,
                    z.jsx)(wS, {
                        in: f,
                        children: (0,
                        z.jsx)(wxe, {
                            tutorial: o,
                            phase: r,
                            expanded: w.finalCard,
                            onToggle: j,
                            onClose: eg,
                            className: Hxe.cardPanel,
                            localization: n
                        })
                    })]
                }), (0,
                z.jsxs)("div", {
                    className: Hxe.centerLayout,
                    children: [(0,
                    z.jsx)(wS, {
                        in: x,
                        children: (0,
                        z.jsx)(Lxe, {
                            tutorial: o,
                            phase: r,
                            onClose: eg,
                            className: Hxe.phasePanel,
                            localization: n
                        })
                    }), (0,
                    z.jsx)(wS, {
                        in: O,
                        children: (0,
                        z.jsx)(Gxe, {
                            onClose: P,
                            className: Hxe.phasePanel
                        })
                    })]
                })]
            })
        }
        ));
        const Wxe = (e,t)=>{
            const [n,s] = (0,
            Y.useState)(!1)
              , i = sl(Yh)
              , a = (0,
            Y.useRef)()
              , o = (0,
            Y.useCallback)((()=>{
                s(!1),
                clearTimeout(a.current)
            }
            ), []);
            return (0,
            Y.useEffect)((()=>{
                if (!e && t && t.intro && !i)
                    return a.current = setTimeout((()=>s(!0)), 6e4),
                    ()=>clearTimeout(a.current);
                s(!1)
            }
            ), [e, t, i]),
            [n, o]
        }
        ;
        X.add("game-ui/game/components/tutorials/tutorial-renderer/tutorial-renderer.tsx", {
            get TutorialRenderer() {
                return Kxe
            },
            set TutorialRenderer(e) {
                Kxe = e
            }
        });
        let zxe = {
            "tutorials-renderer": "tutorials-renderer_BtC",
            tutorialsRenderer: "tutorials-renderer_BtC"
        };
        X.add("game-ui/game/components/tutorials/tutorial-container.module.scss", {
            get classes() {
                return zxe
            },
            set classes(e) {
                Object.assign(zxe, e)
            }
        });
        const Yxe = zxe
          , $xe = ({tutorialIntroVisible: e, tutorialListIntroVisible: t, tutorialListOutroVisible: n, advisorPanelVisible: s, onCompleteListIntro: i, onSetControlledFocusKey: a, onTutorialActionNeeded: o, localization: r})=>{
            const [l,c] = (0,
            Y.useState)(!1);
            let u;
            return u = e ? oxe.tutorialIntro : t ? oxe.tutorialListIntro : n ? oxe.tutorialListOutro : s ? oxe.advisorPanel : l ? oxe.tutorialReminder : oxe.tutorialList,
            (0,
            z.jsx)(z.Fragment, {
                children: (0,
                z.jsxs)(op, {
                    focusKey: u || Sg,
                    focused: u,
                    activation: qu.Always,
                    debugName: "TutorialContainer",
                    children: [e && (0,
                    z.jsx)(l_, {
                        children: (0,
                        z.jsx)(xxe, {
                            focusKey: oxe.tutorialIntro
                        })
                    }), t && (0,
                    z.jsxs)(l_, {
                        children: [(0,
                        z.jsx)(Exe, {
                            focusKey: oxe.tutorialListIntro,
                            localization: r,
                            onCompleteListIntro: i
                        }), ";"]
                    }), n && (0,
                    z.jsx)(l_, {
                        children: (0,
                        z.jsx)(Sxe, {
                            focusKey: oxe.tutorialListOutro
                        })
                    }), (0,
                    z.jsx)(Kxe, {
                        className: Yxe.tutorialsRenderer,
                        localization: r,
                        onSetControlledFocusKey: a,
                        onTutorialActionNeeded: o,
                        onTutorialReminder: c
                    })]
                })
            })
        }
        ;
        X.add("game-ui/game/components/tutorials/tutorial-container.tsx", {});
        var qxe = ()=>{
            const e = sl(N2)
              , t = sl(L2)
              , n = sl(O2) && null === t
              , s = sl(P2);
            return (0,
            z.jsx)($xe, {
                tutorialIntroVisible: e,
                tutorialListIntroVisible: n,
                tutorialListOutroVisible: s,
                localization: _c.EditorTutorials,
                onCompleteListIntro: A2
            })
        }
        ;
        X.add("game-ui/editor/components/editor-tutorial-container.tsx", {
            get EditorTutorialContainer() {
                return qxe
            },
            set EditorTutorialContainer(e) {
                qxe = e
            }
        });
        const Xxe = "editorTool";
        var Qxe = $r(Xxe, "tools")
          , Zxe = $r(Xxe, "activeTool")
          , Jxe = el(Xxe, "selectTool");
        X.add("game-ui/editor/data-binding/editor-tool-bindings.ts", {
            get tools() {
                return tools
            },
            set tools(e) {
                tools = e
            },
            get activeTool() {
                return activeTool
            },
            set activeTool(e) {
                activeTool = e
            },
            get selectTool() {
                return Jxe
            },
            set selectTool(e) {
                Jxe = e
            }
        });
        let eve = {
            button: "button_iZC",
            icon: "icon_oET",
            hint: "hint_WBr"
        };
        X.add("game-ui/editor/themes/editor-tool-button.module.scss", {
            get classes() {
                return eve
            },
            set classes(e) {
                Object.assign(eve, e)
            }
        });
        const tve = eve;
        let nve = {
            "editor-toolbar": "editor-toolbar_i1J",
            editorToolbar: "editor-toolbar_i1J",
            button: "button_i0V"
        };
        X.add("game-ui/editor/components/toolbar/toolbar.module.scss", {
            get classes() {
                return nve
            },
            set classes(e) {
                Object.assign(nve, e)
            }
        });
        const sve = nve;
        var ive = ({className: e})=>{
            const t = sl(Qxe)
              , n = sl(Zxe)
              , s = (0,
            Y.useCallback)((e=>Jxe(Zxe.value !== e ? e : null)), []);
            return (0,
            z.jsx)("div", {
                className: Zu()(sve.editorToolbar, e),
                children: (0,
                z.jsx)(np, {
                    direction: kg.Horizontal,
                    children: t.map((({id: e, icon: t, uiTag: i, shortcut: a, disabled: o})=>(0,
                    z.jsx)(ave, {
                        id: e,
                        icon: t,
                        uiTag: i,
                        shortcut: a,
                        tooltip: (0,
                        z.jsx)(_c.Editor.TOOL, {
                            hash: e
                        }),
                        selected: n === e,
                        disabled: o,
                        onSelect: s
                    }, e)))
                })
            })
        }
        ;
        const ave = ({id: e, icon: t, tooltip: n, uiTag: s, shortcut: i, selected: a, disabled: o, onSelect: r})=>{
            const l = (0,
            Y.useCallback)((()=>r(e)), [e, r])
              , c = sl(Dl);
            return (0,
            z.jsx)(mT, {
                uiTag: s,
                editor: !0,
                children: (0,
                z.jsx)(BQ, {
                    title: n,
                    description: null,
                    shortcut: i && (0,
                    z.jsx)(BT, {
                        action: i,
                        active: c,
                        shortName: wp.FallbackToControl
                    }),
                    children: (0,
                    z.jsx)(tb, {
                        src: t,
                        disabled: o,
                        theme: tve,
                        selected: a,
                        className: sve.button,
                        onSelect: l,
                        shortcut: i
                    })
                })
            })
        }
        ;
        X.add("game-ui/editor/components/toolbar/toolbar.tsx", {
            get Toolbar() {
                return ive
            },
            set Toolbar(e) {
                ive = e
            }
        });
        let ove = {
            "editor-main-screen": "editor-main-screen_m89",
            editorMainScreen: "editor-main-screen_m89",
            main: "main_k4u",
            "top-layout": "top-layout_cRm",
            topLayout: "top-layout_cRm",
            "tool-options": "tool-options_Cqd",
            toolOptions: "tool-options_Cqd",
            toolbar: "toolbar_Qbd",
            "editor-panel": "editor-panel_oDZ",
            editorPanel: "editor-panel_oDZ",
            "tutorials-renderer": "tutorials-renderer_Vfx",
            tutorialsRenderer: "tutorials-renderer_Vfx"
        };
        X.add("game-ui/editor/components/editor-main-screen.module.scss", {
            get classes() {
                return ove
            },
            set classes(e) {
                Object.assign(ove, e)
            }
        });
        const rve = ove;
        var lve = "Tool Options"
          , cve = "Editor Panel"
          , uve = "Infoview";
        var dve = ({focusKey: e, className: t, onPauseMenuToggle: n})=>{
            (0,
            Y.useEffect)((()=>{
                const e = ["Media/Placeholder.svg", "Media/Editor/Thumbnails/Fallback_Generic.svg"].map((e=>{
                    const t = new Image;
                    return t.src = e,
                    t
                }
                ));
                return ()=>e.forEach((e=>e.src = ""))
            }
            ), []);
            const s = sl(ZM)
              , i = sl(n1)
              , a = S2()
              , [o,r] = (0,
            Y.useState)(!1)
              , l = cZ()
              , c = sl(iP)
              , u = c.id === GP
              , d = sl(ef)
              , [m,h] = (0,
            Y.useState)(!1)
              , g = sl(j2)
              , p = (0,
            Y.useCallback)((()=>{
                a && r((e=>!e))
            }
            ), [a])
              , f = (0,
            Y.useCallback)((()=>r(!1)), [])
              , x = (0,
            Y.useCallback)((()=>{
                const e = Object.keys(W0).length / 2;
                s1((i + 1) % e)
            }
            ), [i])
              , v = (0,
            Y.useMemo)((()=>({
                ...l,
                Back: !u || s || null !== d || o ? ()=>{
                    u ? s ? aR() : null !== d ? nf(Zp) : o && f() : (c.id === BP && cp(lp.bulldozeEnd),
                    CP(GP))
                }
                : null,
                "Pause Menu": n,
                "Change Elevation": OP,
                "Photo Mode Panel": x,
                "Tool Options": a ? p : null,
                "Info View": ()=>h((e=>!e))
            })), [d, c, f, u, s, n, x, l, p, o, a]);
            (0,
            Y.useEffect)((()=>{
                a || r(!1)
            }
            ), [a]);
            const _ = (0,
            Y.useMemo)((()=>o ? lve : m ? uve : s ? cve : void 0), [s, m, o])
              , b = (0,
            Y.useMemo)((()=>a && (0,
            z.jsx)(np, {
                focusKey: o ? lve : Sg,
                children: (0,
                z.jsx)(I2, {
                    onClose: f,
                    focusKey: lve
                })
            })), [f, o, a]);
            return (0,
            z.jsx)(Mg, {
                actions: v,
                children: (0,
                z.jsxs)(vg, {
                    children: [(0,
                    z.jsx)(d1, {}), (0,
                    z.jsx)(np, {
                        focusKey: e,
                        activation: qu.Always,
                        forceFocus: _,
                        children: (0,
                        z.jsxs)("div", {
                            className: Zu()(rve.editorMainScreen, t),
                            children: [(0,
                            z.jsxs)("div", {
                                className: rve.main,
                                children: [(0,
                                z.jsxs)("div", {
                                    className: rve.topLayout,
                                    children: [(0,
                                    z.jsx)(WM, {}), (0,
                                    z.jsx)(s9, {})]
                                }), (0,
                                z.jsx)(ive, {
                                    className: rve.toolbar
                                }), (0,
                                z.jsx)(h4, {
                                    resizeDirection: "left",
                                    className: rve.editorPanel,
                                    footer: b,
                                    focusKey: cve,
                                    active: s
                                })]
                            }), (0,
                            z.jsx)(n5, {
                                onPauseMenuToggle: n
                            }), (0,
                            z.jsx)(V0, {
                                name: "Editor"
                            }), !g && (0,
                            z.jsx)(qxe, {})]
                        })
                    })]
                })
            })
        }
        ;
        X.add("game-ui/editor/components/editor-main-screen.tsx", {
            get TOOL_OPTIONS_KEY() {
                return lve
            },
            set TOOL_OPTIONS_KEY(e) {
                lve = e
            },
            get EDITOR_PANEL_KEY() {
                return cve
            },
            set EDITOR_PANEL_KEY(e) {
                cve = e
            },
            get INFOVIEW_KEY() {
                return uve
            },
            set INFOVIEW_KEY(e) {
                uve = e
            },
            get EditorMainScreen() {
                return dve
            },
            set EditorMainScreen(e) {
                dve = e
            }
        });
        var mve = ()=>{
            const e = sl(AQ);
            (0,
            Y.useEffect)((()=>{
                MQ(LQ.main)
            }
            ), []);
            const t = e !== LQ.main
              , n = (0,
            Y.useCallback)((()=>{
                e !== LQ.pauseMenu ? MQ(LQ.pauseMenu) : MQ(LQ.main)
            }
            ), [e])
              , s = (0,
            Y.useCallback)((()=>MQ(LQ.pauseMenu)), [])
              , i = (0,
            Y.useCallback)((()=>MQ(LQ.main)), [])
              , a = (0,
            Y.useContext)(xE);
            (0,
            Y.useEffect)((()=>{
                const e = ME.subscribe((e=>{
                    a.showDialog((0,
                    z.jsx)(KI, {
                        ...e
                    }))
                }
                ));
                return ()=>e.dispose()
            }
            ), [a]);
            const o = (0,
            Y.useCallback)((()=>{
                a.showDialog((0,
                z.jsx)(zI, {
                    message: (0,
                    z.jsx)(_c.Common.DIALOG_MESSAGE, {
                        hash: "ProgressLoss"
                    }),
                    onConfirm: NM
                }))
            }
            ), [a]);
            return (0,
            z.jsx)(FY, {
                children: (0,
                z.jsxs)(op, {
                    focused: e,
                    activation: qu.Always,
                    children: [(0,
                    z.jsx)(dve, {
                        focusKey: LQ.main,
                        onPauseMenuToggle: n
                    }), e === LQ.freeCamera && (0,
                    z.jsx)(uZ, {
                        focusKey: LQ.freeCamera,
                        onClose: i
                    }), (0,
                    z.jsx)(ud, {
                        children: t && (0,
                        z.jsx)(G0, {
                            children: (0,
                            z.jsxs)(ud, {
                                children: [e === LQ.pauseMenu && (0,
                                z.jsx)(EZ, {
                                    focusKey: LQ.pauseMenu,
                                    onSelectScreen: MQ,
                                    onClose: i,
                                    onNewMap: o
                                }, LQ.pauseMenu), e === LQ.options && (0,
                                z.jsx)(M0, {
                                    focusKey: LQ.options,
                                    onClose: s
                                }, LQ.options)]
                            })
                        }, "pause")
                    })]
                })
            })
        }
        ;
        X.add("game-ui/editor/components/editor-ui.tsx", {
            get EditorUI() {
                return mve
            },
            set EditorUI(e) {
                mve = e
            }
        });
        let hve = {
            "debug-prefab-tool-panel": "debug-prefab-tool-panel_xQO",
            debugPrefabToolPanel: "debug-prefab-tool-panel_xQO"
        };
        X.add("game-ui/debug/components/debug-prefab-tool/debug-prefab-tool.module.scss", {
            get classes() {
                return hve
            },
            set classes(e) {
                Object.assign(hve, e)
            }
        });
        const gve = hve
          , pve = new Ig("CHILDREN");
        var fve = ({children: e})=>{
            const t = sl(kq)
              , n = sl(ZM)
              , s = (0,
            Y.useMemo)((()=>({
                "Debug Prefab Tool": ()=>Jxe(n ? null : "PrefabTool")
            })), [n]);
            return t ? (0,
            z.jsx)(Mg, {
                actions: s,
                children: (0,
                z.jsxs)(op, {
                    focused: pve,
                    children: [(0,
                    z.jsx)(ap, {
                        focusKey: pve,
                        children: e
                    }), n && (0,
                    z.jsx)(h4, {
                        active: !0,
                        resizeDirection: "left",
                        className: gve.debugPrefabToolPanel,
                        hideAdvisor: !0
                    })]
                })
            }) : (0,
            z.jsx)(z.Fragment, {
                children: e
            })
        }
        ;
        X.add("game-ui/debug/components/debug-prefab-tool/debug-prefab-tool.tsx", {
            get DebugPrefabToolRenderer() {
                return fve
            },
            set DebugPrefabToolRenderer(e) {
                fve = e
            }
        });
        let xve = {
            button: "button_Qvi",
            psn: "psn_Xvd",
            gdk: "gdk_VmN",
            icon: "icon_Z6Y",
            label: "label_yYE"
        };
        X.add("game-ui/menu/components/paradox-panel/account-link-button.module.scss", {
            get classes() {
                return xve
            },
            set classes(e) {
                Object.assign(xve, e)
            }
        });
        const vve = xve;
        let _ve = {
            "paradox-panel": "paradox-panel_iFS",
            paradoxPanel: "paradox-panel_iFS",
            "incentive-container": "incentive-container_e7Y",
            incentiveContainer: "incentive-container_e7Y",
            "incentive-image": "incentive-image_Qzc",
            incentiveImage: "incentive-image_Qzc",
            "incentive-main": "incentive-main_IhA",
            incentiveMain: "incentive-main_IhA",
            "incentive-prompt": "incentive-prompt_k0u",
            incentivePrompt: "incentive-prompt_k0u",
            "incentive-footer": "incentive-footer_UuL",
            incentiveFooter: "incentive-footer_UuL",
            "incentive-legal": "incentive-legal_MJN",
            incentiveLegal: "incentive-legal_MJN",
            header: "header_MiJ",
            logo: "logo_opg",
            title: "title_S09",
            content: "content_VTM",
            error: "error_HSS",
            user: "user_LhQ",
            "user-info": "user-info_n0Q",
            userInfo: "user-info_n0Q",
            "user-name": "user-name_GiO",
            userName: "user-name_GiO",
            "avatar-mask": "avatar-mask_EqN",
            avatarMask: "avatar-mask_EqN",
            avatar: "avatar_rvW",
            "button-row": "button-row_LTO",
            buttonRow: "button-row_LTO",
            "button-container": "button-container_sgE",
            buttonContainer: "button-container_sgE",
            button: "button_o5e",
            "legal-row": "legal-row_qI2",
            legalRow: "legal-row_qI2",
            "legal-row-center": "legal-row-center_ZHk",
            legalRowCenter: "legal-row-center_ZHk",
            "legal-link": "legal-link_Cxy item-states_QjV",
            legalLink: "legal-link_Cxy item-states_QjV"
        };
        X.add("game-ui/menu/components/paradox-panel/paradox-panel.module.scss", {
            get classes() {
                return _ve
            },
            set classes(e) {
                Object.assign(_ve, e)
            }
        });
        const bve = _ve;
        var Tve = ({className: e})=>{
            const t = sl(cI)
              , n = sl(pI)
              , s = sl(fI);
            return (0,
            z.jsx)("div", {
                className: Zu()(bve.paradoxPanel, e),
                children: n && s ? t ? (0,
                z.jsx)(Ive, {}) : (0,
                z.jsx)(Eve, {}) : (0,
                z.jsx)(Sve, {
                    label: s ? (0,
                    z.jsx)(_c.Paradox.NO_INTERNET_CONNECTION, {}) : (0,
                    z.jsx)(_c.Paradox.SDK_DISABLED, {})
                })
            })
        }
        ;
        const Eve = ()=>{
            const e = sl(pI);
            return (0,
            z.jsxs)("div", {
                className: bve.incentiveContainer,
                children: [(0,
                z.jsxs)("div", {
                    className: bve.incentiveMain,
                    children: [(0,
                    z.jsx)("div", {
                        className: bve.incentiveImage
                    }), (0,
                    z.jsx)("div", {
                        className: bve.incentivePrompt,
                        children: (0,
                        z.jsx)(_c.Paradox.LOGIN_INCENTIVE, {})
                    })]
                }), (0,
                z.jsxs)("div", {
                    className: bve.incentiveFooter,
                    children: [(0,
                    z.jsx)(Eg, {
                        tooltip: e ? null : (0,
                        z.jsx)(_c.Paradox.NO_INTERNET_CONNECTION, {}),
                        children: (0,
                        z.jsx)(qI, {
                            tinted: e,
                            src: "Media/Menu/Paradox/ParadoxLogoNoText.svg",
                            theme: mJ,
                            onSelect: SI,
                            disabled: !e,
                            children: (0,
                            z.jsx)(_c.Paradox.LOGIN_BUTTON, {})
                        })
                    }), (0,
                    z.jsx)("div", {
                        className: bve.incentiveLegal,
                        children: (0,
                        z.jsx)(yve, {
                            className: bve.legalRowCenter
                        })
                    })]
                })]
            })
        }
          , Ive = ()=>{
            const e = sl(uI)
              , t = sl(dI)
              , n = sl(mI)
              , s = sl(gI)
              , i = function(e) {
                return (0,
                Y.useMemo)((()=>null !== e && e.length >= 3 && e.indexOf("@") >= 1 ? e[0] + "***@***" + e[e.length - 1] : e), [e])
            }(sl(hI));
            return (0,
            z.jsxs)(z.Fragment, {
                children: [(0,
                z.jsxs)("div", {
                    className: bve.header,
                    children: [(0,
                    z.jsx)(Z_, {
                        src: "Media/Menu/Paradox/ParadoxLogoNoText.svg",
                        className: bve.logo
                    }), (0,
                    z.jsx)("div", {
                        className: bve.title,
                        children: (0,
                        z.jsx)(_c.Paradox.PARADOX_ACCOUNT, {})
                    })]
                }), (0,
                z.jsxs)("div", {
                    className: bve.content,
                    children: [(0,
                    z.jsxs)("div", {
                        className: bve.user,
                        children: [(0,
                        z.jsx)("div", {
                            className: bve.avatarMask,
                            children: (0,
                            z.jsx)("img", {
                                className: bve.avatar,
                                src: s ?? "Media/Menu/Paradox/ParadoxLogoNoText.svg"
                            })
                        }), (0,
                        z.jsxs)("div", {
                            className: bve.userInfo,
                            children: [(0,
                            z.jsx)("div", {
                                className: bve.userName,
                                children: n
                            }), (0,
                            z.jsx)("div", {
                                className: bve.userName,
                                children: i
                            })]
                        })]
                    }), (0,
                    z.jsxs)("div", {
                        className: bve.buttonContainer,
                        children: [(0,
                        z.jsxs)("div", {
                            className: bve.buttonRow,
                            children: [e === CI.unlinked && (0,
                            z.jsx)(qI, {
                                src: `Media/Menu/Platforms/${t}.svg`,
                                theme: vve,
                                className: Zu()(bve.button, {
                                    [vve.psn]: "PSN" === t,
                                    [vve.gdk]: "XboxLive" === t
                                }),
                                onSelect: xI,
                                children: (0,
                                z.jsx)(_c.Paradox.ACCOUNT_LINK_PROMPT, {})
                            }), e === CI.linked && (0,
                            z.jsx)(U_, {
                                theme: mJ,
                                className: bve.button,
                                onSelect: vI,
                                children: (0,
                                z.jsx)(_c.Paradox.UNLINK_ACCOUNT_BUTTON, {})
                            }), (0,
                            z.jsx)(U_, {
                                theme: mJ,
                                className: bve.button,
                                onSelect: _I,
                                children: (0,
                                z.jsx)(_c.Paradox.LOGOUT_BUTTON, {})
                            })]
                        }), (0,
                        z.jsx)(yve, {})]
                    })]
                })]
            })
        }
          , Sve = ({label: e})=>(0,
        z.jsxs)(z.Fragment, {
            children: [(0,
            z.jsxs)("div", {
                className: bve.header,
                children: [(0,
                z.jsx)(Z_, {
                    src: "Media/Menu/Paradox/ParadoxLogoNoText.svg",
                    className: bve.logo
                }), (0,
                z.jsx)("div", {
                    className: bve.title,
                    children: (0,
                    z.jsx)(_c.Paradox.PARADOX_ACCOUNT, {})
                })]
            }), (0,
            z.jsx)("div", {
                className: bve.content,
                children: (0,
                z.jsx)("div", {
                    className: bve.error,
                    children: e
                })
            })]
        })
          , yve = ({className: e})=>(0,
        z.jsxs)("div", {
            className: Zu()(bve.legalRow, e),
            children: [(0,
            z.jsx)(U_, {
                className: bve.legalLink,
                onSelect: RI,
                children: (0,
                z.jsx)(_c.Paradox.TERMS_OF_USE, {})
            }), (0,
            z.jsx)(U_, {
                className: bve.legalLink,
                onSelect: kI,
                children: (0,
                z.jsx)(_c.Paradox.PRIVACY_POLICY, {})
            })]
        });
        X.add("game-ui/menu/components/paradox-panel/paradox-panel.tsx", {
            get ParadoxPanel() {
                return Tve
            },
            set ParadoxPanel(e) {
                Tve = e
            }
        });
        let jve = {
            logo: "logo_C34 child-opacity-transition_nkS",
            content: "content_reP",
            column: "column_cmR",
            "column-content": "column-content_eJA",
            columnContent: "column-content_eJA",
            panel: "panel_X0A child-opacity-transition_nkS",
            last: "last_ljC",
            "paradox-panel": "paradox-panel_CK7 child-opacity-transition_nkS",
            paradoxPanel: "paradox-panel_CK7 child-opacity-transition_nkS",
            "notifications-panel": "notifications-panel_AGm child-opacity-transition_nkS",
            notificationsPanel: "notifications-panel_AGm child-opacity-transition_nkS"
        };
        X.add("game-ui/menu/components/game-pause-screen/game-pause-screen.module.scss", {
            get classes() {
                return jve
            },
            set classes(e) {
                Object.assign(jve, e)
            }
        });
        const Cve = jve;
        var Nve = Y.forwardRef((function({focusKey: e, className: t, onClose: n}, s) {
            const i = sl(xM)
              , a = sl(Mv)
              , o = (0,
            Y.useMemo)((()=>({
                Back: n,
                "Pause Menu": n
            })), [n])
              , r = hZ();
            return (0,
            z.jsx)(_Z, {
                ref: s,
                focusKey: e,
                className: t,
                children: (0,
                z.jsx)(FY, {
                    children: (0,
                    z.jsx)(Np, {
                        children: (0,
                        z.jsxs)(Mg, {
                            actions: o,
                            children: [(0,
                            z.jsx)("img", {
                                src: "Media/Menu/GameLogo.svg",
                                className: Cve.logo
                            }), (0,
                            z.jsx)(np, {
                                children: (0,
                                z.jsxs)("div", {
                                    className: Cve.content,
                                    children: [(0,
                                    z.jsx)("div", {
                                        className: Cve.column
                                    }), (0,
                                    z.jsx)("div", {
                                        className: Zu()(Cve.column, Cve.columnContent),
                                        children: (0,
                                        z.jsxs)(np, {
                                            allowLooping: !0,
                                            direction: kg.Vertical,
                                            children: [(0,
                                            z.jsx)(qI, {
                                                tinted: !0,
                                                src: "Media/Glyphs/ArrowRight.svg",
                                                theme: tS,
                                                onSelect: n,
                                                children: (0,
                                                z.jsx)(_c.Menu.RESUME_GAME, {})
                                            }), (0,
                                            z.jsx)(qI, {
                                                tinted: !0,
                                                src: "Media/Glyphs/Save.svg",
                                                theme: tS,
                                                onSelect: ()=>Av(Ov.saveGame),
                                                children: (0,
                                                z.jsx)(_c.Menu.SAVE_GAME, {})
                                            }), (0,
                                            z.jsx)(qI, {
                                                tinted: !0,
                                                src: "Media/Glyphs/Plus.svg",
                                                theme: tS,
                                                onSelect: ()=>Av(Ov.newGame),
                                                children: (0,
                                                z.jsx)(_c.Menu.NEW_GAME, {})
                                            }), (0,
                                            z.jsx)(qI, {
                                                tinted: !0,
                                                disabled: 0 === i.length,
                                                src: "Media/Glyphs/Progress.svg",
                                                theme: tS,
                                                onSelect: ()=>Av(Ov.loadGame),
                                                children: (0,
                                                z.jsx)(_c.Menu.LOAD_GAME, {})
                                            }), (0,
                                            z.jsx)(qI, {
                                                tinted: !0,
                                                src: "Media/Glyphs/Gear.svg",
                                                theme: tS,
                                                onSelect: ()=>Av(Ov.options),
                                                children: (0,
                                                z.jsx)(_c.Menu.OPTIONS, {})
                                            }), (0,
                                            z.jsx)(qI, {
                                                tinted: !0,
                                                src: "Media/Glyphs/Close.svg",
                                                theme: tS,
                                                onSelect: r,
                                                disabled: !a,
                                                children: (0,
                                                z.jsx)(_c.Menu.EXIT_GAME, {})
                                            })]
                                        })
                                    }), (0,
                                    z.jsxs)("div", {
                                        className: Zu()(Cve.column, Cve.columnContent),
                                        children: [(0,
                                        z.jsx)(Tve, {
                                            className: Cve.paradoxPanel
                                        }), (0,
                                        z.jsx)(Mae, {
                                            className: Cve.notificationsPanel
                                        })]
                                    }), (0,
                                    z.jsx)("div", {
                                        className: Cve.column
                                    })]
                                })
                            })]
                        })
                    })
                })
            })
        }
        ));
        X.add("game-ui/menu/components/game-pause-screen/game-pause-screen.tsx", {
            get GamePauseScreen() {
                return Nve
            },
            set GamePauseScreen(e) {
                Nve = e
            }
        });
        var wve = (0,
        Y.memo)((function() {
            const e = sl(Lv)
              , t = e !== Ov.main && e !== Ov.freeCamera;
            return (0,
            z.jsx)(fve, {
                children: (0,
                z.jsx)(vg, {
                    children: (0,
                    z.jsxs)(Ove, {
                        children: [(0,
                        z.jsx)(Lve, {}), (0,
                        z.jsx)(Ave, {
                            menuVisible: t
                        }), (0,
                        z.jsxs)(op, {
                            focused: e,
                            activation: qu.Always,
                            debugName: "GameUI",
                            children: [(0,
                            z.jsxs)(ud, {
                                children: [(0,
                                z.jsx)(cxe, {
                                    focusKey: Ov.main,
                                    hidden: t
                                }), t && (0,
                                z.jsx)(Pve, {
                                    activeScreen: e
                                }, "game:pause")]
                            }), e === Ov.freeCamera && (0,
                            z.jsx)(uZ, {
                                focusKey: Ov.freeCamera,
                                onClose: Rv
                            }, Ov.freeCamera)]
                        })]
                    })
                })
            })
        }
        ));
        const Ove = ({children: e})=>{
            const t = lZ();
            return (0,
            z.jsx)(Mg, {
                actions: t,
                children: e
            })
        }
          , Pve = ({activeScreen: e})=>(0,
        z.jsx)(G0, {
            children: (0,
            z.jsxs)(ud, {
                children: [e === Ov.pauseMenu && (0,
                z.jsx)(Nve, {
                    focusKey: Ov.pauseMenu,
                    onClose: Rv
                }, Ov.pauseMenu), e === Ov.saveGame && (0,
                z.jsx)(xW, {
                    focusKey: Ov.saveGame,
                    onClose: kv
                }, Ov.saveGame), e === Ov.newGame && (0,
                z.jsx)(a7, {
                    focusKey: Ov.newGame,
                    onClose: kv,
                    requireConfirmation: !0
                }, Ov.newGame), e === Ov.loadGame && (0,
                z.jsx)(oee, {
                    focusKey: Ov.loadGame,
                    onClose: kv,
                    requireConfirmation: !0
                }, Ov.loadGame), e === Ov.options && (0,
                z.jsx)(M0, {
                    focusKey: Ov.options,
                    onClose: kv
                }, Ov.options)]
            })
        })
          , Lve = (0,
        Y.memo)((function() {
            const e = (0,
            Y.useContext)(xE);
            return (0,
            Y.useEffect)((()=>{
                const t = ME.subscribe((t=>{
                    e.showDialog((0,
                    z.jsx)(KI, {
                        ...t
                    }))
                }
                ));
                return ()=>t.dispose()
            }
            ), [e]),
            null
        }
        ))
          , Ave = (0,
        Y.memo)((function({menuVisible: e}) {
            i9(!e);
            const t = sl(uM)
              , n = UY();
            return (0,
            Y.useEffect)((()=>{
                !e && (n.length > 0 || t) && kv()
            }
            ), [e, t, n.length]),
            null
        }
        ));
        X.add("game-ui/game/components/game-ui.tsx", {
            get GameUI() {
                return wve
            },
            set GameUI(e) {
                wve = e
            }
        });
        var Mve = ({children: e})=>{
            const t = sl(Up)
              , n = (0,
            Y.useMemo)((()=>({
                "Switch User": ()=>{
                    cp(lp.selectItem),
                    Hp()
                }
            })), []);
            return (0,
            z.jsx)(Mg, {
                actions: n,
                disabled: !t,
                children: e
            })
        }
        ;
        X.add("game-ui/menu/components/user-switch-prompt/user-switch-prompt-consumer.tsx", {
            get UserSwitchPromptConsumer() {
                return Mve
            },
            set UserSwitchPromptConsumer(e) {
                Mve = e
            }
        });
        let Rve = {
            "credits-renderer": "credits-renderer_BaD",
            creditsRenderer: "credits-renderer_BaD",
            h1: "h1_z8F",
            h2: "h2_xgG",
            h3: "h3_LtF",
            line: "line_hIW",
            licenses: "licenses_RXV",
            "image-line": "image-line_lv2",
            imageLine: "image-line_lv2",
            image: "image_idP"
        };
        X.add("game-ui/menu/components/credits-screen/credits-renderer/credits-renderer.module.scss", {
            get classes() {
                return Rve
            },
            set classes(e) {
                Object.assign(Rve, e)
            }
        });
        const kve = Rve;
        var Dve = ({lines: e, images: t, speed: n, onComplete: s})=>{
            const i = (0,
            Y.useRef)(null)
              , a = (0,
            Y.useMemo)((()=>[{
                data: {
                    node: null,
                    style: _b.None,
                    images: []
                }
            }, ...e, {
                data: {
                    node: null,
                    style: _b.None,
                    images: []
                }
            }]), [e])
              , o = function(e, t) {
                const n = Hm()
                  , s = (0,
                Y.useCallback)(((s,i)=>0 === i ? Gve * n : i === e.length - 1 ? Vve * n : s.data.images.length > 0 ? ($ve(s.data.style, s.data.images, t) + Bve) * n : Fve[s.data.style] * n), [n, e.length, t]);
                return dH(s, e, 1)
            }(a, t)
              , r = function(e, t) {
                const n = Hm();
                return (0,
                Y.useCallback)((s=>{
                    if (0 === s)
                        return (0,
                        z.jsx)("div", {
                            style: Kve
                        }, "start");
                    if (s === e.length - 1)
                        return (0,
                        z.jsx)("div", {
                            style: Wve
                        }, "end");
                    const i = e[s];
                    if (i.data.images.length > 0) {
                        const e = $ve(i.data.style, i.data.images, t);
                        return (0,
                        z.jsx)("div", {
                            className: kve.imageLine,
                            style: {
                                height: (e + Bve) * n
                            },
                            children: i.data.images.map(((e,s)=>{
                                const a = qve(i.data.style, e, t);
                                return (0,
                                z.jsx)("img", {
                                    src: e,
                                    width: a.x * n,
                                    height: a.y * n,
                                    className: kve.image
                                }, s)
                            }
                            ))
                        }, s)
                    }
                    return (0,
                    z.jsx)("div", {
                        className: Zu()(Hve[i.data.style], Yve(i.source)),
                        style: {
                            height: Fve[i.data.style] * n
                        },
                        children: i.data.node
                    }, s)
                }
                ), [t, e, n])
            }(a, t)
              , {list: l, onScroll: c} = lH(i, o, "vertical", void 0, r)
              , u = Hm()
              , [d,m] = (0,
            Y.useState)();
            return (0,
            Y.useEffect)((()=>{
                if (!i.current)
                    return;
                let e = 0;
                const t = a=>{
                    if (!i.current)
                        return;
                    const o = (a - (d ?? a)) / 1e3;
                    m(a);
                    const r = Math.max(i.current.scrollTop + n * o * u, 0)
                      , l = i.current.scrollHeight - i.current.offsetHeight;
                    i.current.scrollTop = r,
                    c(),
                    r < l ? e = window.requestAnimationFrame(t) : s()
                }
                ;
                return e = window.requestAnimationFrame(t),
                ()=>window.cancelAnimationFrame(e)
            }
            ), [c, s, u, n, d]),
            (0,
            z.jsx)("div", {
                ref: i,
                className: kve.creditsRenderer,
                onScroll: c,
                children: l
            })
        }
        ;
        const Fve = [32, 160, 80, 68, 32, 32, 32]
          , Uve = [240, 720, 480, 312, 240, 240, 240]
          , Bve = 80
          , Gve = 700
          , Vve = 920;
        const Hve = [kve.line, kve.h1, kve.h2, kve.h3, kve.line, kve.line, kve.line]
          , Kve = zve(Gve)
          , Wve = zve(Vve);
        function zve(e) {
            return {
                height: `${e}rem`
            }
        }
        function Yve(e) {
            if ("Licenses" === e)
                return kve.licenses
        }
        function $ve(e, t, n) {
            let s = 0;
            for (const i of t)
                s = Math.max(s, qve(e, i, n).y);
            return s
        }
        function qve(e, t, n) {
            const s = n.get(t)
              , i = Uve[e];
            if (null != s && s.width > 0 && s.height > 0) {
                const e = Math.sqrt(i * i / (s.width * s.height));
                return {
                    x: e * s.width,
                    y: e * s.height
                }
            }
            return {
                x: Uve[e],
                y: Uve[e]
            }
        }
        X.add("game-ui/menu/components/credits-screen/credits-renderer/credits-renderer.tsx", {
            get CreditsRenderer() {
                return Dve
            },
            set CreditsRenderer(e) {
                Dve = e
            }
        });
        let Xve = {
            content: "content_qY6 child-opacity-transition_nkS"
        };
        X.add("game-ui/menu/components/credits-screen/credits-screen.module.scss", {
            get classes() {
                return Xve
            },
            set classes(e) {
                Object.assign(Xve, e)
            }
        });
        const Qve = Xve;
        var Zve = 150
          , Jve = 250;
        var e_e = Y.forwardRef((function({focusKey: e, className: t, onClose: n}, s) {
            const i = function(e) {
                const [t,n] = (0,
                Y.useState)(null)
                  , s = Array.isArray(e) ? e : [e];
                return (0,
                Y.useEffect)((()=>{
                    let e = 0;
                    const t = []
                      , i = s.map(((i,a)=>n_e(i, (i=>{
                        t[a] = i,
                        e++,
                        e === s.length && n(t.flat())
                    }
                    ))));
                    return ()=>{
                        i.forEach((e=>e()))
                    }
                }
                ), [s.join(" ")]),
                t
            }(sl(vM))
              , a = function(e) {
                const [t,n] = (0,
                Y.useState)(null);
                return (0,
                Y.useEffect)((()=>{
                    let t = 0;
                    const s = new Map
                      , i = ()=>{
                        t++,
                        t === s.size && n(s)
                    }
                    ;
                    if (null != e)
                        for (const t of e)
                            for (const e of t.data.images)
                                if (!s.has(e)) {
                                    const t = new Image;
                                    t.src = e,
                                    t.addEventListener("load", i),
                                    t.addEventListener("error", i),
                                    s.set(e, t)
                                }
                    return 0 === s.size && n(s),
                    ()=>{
                        for (const e of s.values())
                            e.removeEventListener("load", i),
                            e.removeEventListener("error", i)
                    }
                }
                ), [e]),
                t
            }(i)
              , [o,r] = (0,
            Y.useState)(2)
              , l = (0,
            Y.useMemo)((()=>({
                "Credit Speed": e=>r(Od(o - e, -7, 7))
            })), [o]);
            return (0,
            z.jsx)(Mg, {
                actions: l,
                children: (0,
                z.jsx)(WK, {
                    ref: s,
                    focusKey: e,
                    title: (0,
                    z.jsx)(_c.Menu.CREDITS, {}),
                    className: t,
                    onClose: n,
                    children: (0,
                    z.jsx)("div", {
                        className: Qve.content,
                        children: i?.length && null != a && (0,
                        z.jsx)(Dve, {
                            lines: i,
                            images: a,
                            speed: 0 === o ? 0 : o > 0 ? 100 * Math.pow(2, o - 2) : -100 * Math.pow(2, -o - 2),
                            onComplete: n
                        })
                    })
                })
            })
        }
        ));
        const t_e = /(\w+[/])*(?<name>\w+)\.\w+$/
          , n_e = (e,t)=>{
            const n = new XMLHttpRequest;
            return n.open("GET", e),
            n.onload = function() {
                const s = new sy
                  , i = Pb(n.responseText, !0, !0, Jve, Zve)
                  , a = t_e.exec(e)
                  , o = a && a.groups ? a.groups.name : e
                  , r = i.map((e=>({
                    data: s.render(e),
                    source: o
                })));
                t(r)
            }
            ,
            n.send(),
            ()=>{
                n.abort()
            }
        }
        ;
        X.add("game-ui/menu/components/credits-screen/credits-screen.tsx", {
            get longCreditLineLength() {
                return Zve
            },
            set longCreditLineLength(e) {
                Zve = e
            },
            get maxCreditLineLength() {
                return Jve
            },
            set maxCreditLineLength(e) {
                Jve = e
            },
            get CreditsScreen() {
                return e_e
            },
            set CreditsScreen(e) {
                e_e = e
            }
        });
        let s_e = {
            logo: "logo_xOs child-opacity-transition_nkS",
            content: "content_LhM",
            column: "column_y44",
            "column-content": "column-content_iGB",
            columnContent: "column-content_iGB",
            panel: "panel_H2O child-opacity-transition_nkS",
            "paradox-panel": "paradox-panel_t14 child-opacity-transition_nkS",
            paradoxPanel: "paradox-panel_t14 child-opacity-transition_nkS",
            "notifications-panel": "notifications-panel_c5F child-opacity-transition_nkS",
            notificationsPanel: "notifications-panel_c5F child-opacity-transition_nkS",
            "button-label-left": "button-label-left_YKT",
            buttonLabelLeft: "button-label-left_YKT",
            "button-label-right": "button-label-right_ZdY",
            buttonLabelRight: "button-label-right_ZdY",
            "warning-icon": "warning-icon_z7M",
            warningIcon: "warning-icon_z7M"
        };
        X.add("game-ui/menu/components/main-menu-screen/main-menu-screen.module.scss", {
            get classes() {
                return s_e
            },
            set classes(e) {
                Object.assign(s_e, e)
            }
        });
        const i_e = s_e
          , a_e = (0,
        z.jsx)(zI, {
            title: (0,
            z.jsx)(_c.Common.CONFIRMATION, {}),
            message: (0,
            z.jsx)(_c.Menu.APPLICATION_QUIT_MESSAGE, {}),
            onConfirm: ()=>HE()
        });
        var o_e = e=>(0,
        z.jsx)("div", {
            className: Zu()(i_e.column, i_e.columnContent),
            children: e.children
        })
          , r_e = Y.forwardRef((function({focusKey: e, className: t}, n) {
            const s = (0,
            Y.useContext)(xE)
              , i = sl(xM)
              , a = sl(eM)
              , o = sl(lM);
            return (0,
            z.jsx)(z.Fragment, {
                children: (0,
                z.jsxs)(_Z, {
                    ref: n,
                    focusKey: e,
                    className: t,
                    children: [(0,
                    z.jsx)("img", {
                        src: "Media/Menu/GameLogo.svg",
                        className: i_e.logo
                    }), (0,
                    z.jsxs)(np, {
                        children: [(0,
                        z.jsxs)("div", {
                            className: i_e.content,
                            children: [(0,
                            z.jsx)("div", {
                                className: i_e.column
                            }), (0,
                            z.jsx)(np, {
                                allowLooping: !0,
                                direction: kg.Vertical,
                                children: (0,
                                z.jsxs)(o_e, {
                                    children: [(0,
                                    z.jsx)(l_e, {}), (0,
                                    z.jsx)(qI, {
                                        tinted: !0,
                                        src: "Media/Glyphs/Plus.svg",
                                        theme: tS,
                                        onSelect: ()=>bM(HA.NewGame),
                                        children: (0,
                                        z.jsx)(_c.Menu.NEW_GAME, {})
                                    }), (0,
                                    z.jsx)(qI, {
                                        tinted: !0,
                                        disabled: 0 === i.length,
                                        src: "Media/Glyphs/Progress.svg",
                                        theme: tS,
                                        onSelect: ()=>bM(HA.LoadGame),
                                        children: (0,
                                        z.jsx)(_c.Menu.LOAD_GAME, {})
                                    }), !a && (0,
                                    z.jsxs)(qI, {
                                        tinted: !0,
                                        src: "Media/Glyphs/Pen.svg",
                                        theme: tS,
                                        onSelect: NM,
                                        children: [(0,
                                        z.jsx)("div", {
                                            className: i_e.buttonLabelLeft,
                                            children: (0,
                                            z.jsx)(_c.Menu.EDITOR, {})
                                        }), (0,
                                        z.jsx)("div", {
                                            className: i_e.buttonLabelRight,
                                            children: (0,
                                            z.jsx)(yZ, {})
                                        })]
                                    }), (0,
                                    z.jsx)(c_e, {
                                        fallbackToLogin: !0
                                    }), (0,
                                    z.jsx)(qI, {
                                        tinted: !0,
                                        src: "Media/Glyphs/Gear.svg",
                                        theme: tS,
                                        onSelect: ()=>bM(HA.Options),
                                        children: (0,
                                        z.jsx)(_c.Menu.OPTIONS, {})
                                    }), (0,
                                    z.jsx)(qI, {
                                        tinted: !0,
                                        src: "Media/Glyphs/Credits.svg",
                                        theme: tS,
                                        onSelect: ()=>bM(HA.Credits),
                                        children: (0,
                                        z.jsx)(_c.Menu.CREDITS, {})
                                    }), o && (0,
                                    z.jsx)(qI, {
                                        tinted: !0,
                                        src: "Media/Glyphs/Close.svg",
                                        theme: tS,
                                        onSelect: ()=>s.showDialog(a_e),
                                        children: (0,
                                        z.jsx)(_c.Menu.EXIT_APPLICATION, {})
                                    })]
                                })
                            }), (0,
                            z.jsxs)("div", {
                                className: Zu()(i_e.column, i_e.columnContent),
                                children: [(0,
                                z.jsx)(Tve, {
                                    className: i_e.paradoxPanel
                                }), (0,
                                z.jsx)(Mae, {
                                    className: i_e.notificationsPanel
                                })]
                            }), (0,
                            z.jsx)("div", {
                                className: i_e.column
                            })]
                        }), (0,
                        z.jsx)(V0, {
                            name: "Menu"
                        })]
                    })]
                })
            })
        }
        ));
        const l_e = ()=>{
            const e = (0,
            Y.useContext)(xE)
              , t = sl(DE)
              , n = wW(t)
              , [s,i] = (0,
            Y.useState)(!0)
              , {setBackdrop: a} = pq();
            (0,
            Y.useEffect)((()=>{
                if (t) {
                    (async()=>{
                        const e = await UE(t.contentPrerequisites);
                        i(e)
                    }
                    )()
                }
            }
            ), [t]);
            const o = (0,
            Y.useCallback)((()=>{
                const n = ()=>{
                    a(t?.preview),
                    TM()
                }
                ;
                s ? n() : t && e.showDialog((0,
                z.jsx)(b$, {
                    metadata: t,
                    title: (0,
                    z.jsx)(_c.Common.WARNING, {}),
                    onConfirm: n
                }))
            }
            ), [t, e, s, a]);
            return (0,
            z.jsxs)(qI, {
                tinted: !0,
                disabled: !t,
                src: "Media/Glyphs/ArrowRight.svg",
                theme: tS,
                onSelect: o,
                children: [!s && n && (0,
                z.jsx)(Eg, {
                    tooltip: (0,
                    z.jsxs)(NH, {
                        children: [(0,
                        z.jsx)(_c.GameListScreen.TOOLTIP_MISSING_REQUIRED_CONTENT, {}), (0,
                        z.jsx)(NW, {
                            prerequisites: n
                        })]
                    }),
                    children: (0,
                    z.jsx)("img", {
                        className: i_e.warningIcon,
                        src: "Media/Misc/Warning.svg"
                    })
                }), (0,
                z.jsx)(_c.Menu.CONTINUE_GAME, {})]
            })
        }
        ;
        var c_e = ({fallbackToLogin: e})=>{
            const t = sl(cI)
              , n = sl(pI)
              , s = sl(fI)
              , i = sl(JA)
              , a = function(e, t, n) {
                return e ? t ? n ? null : (0,
                z.jsx)(_c.Paradox.NO_INTERNET_CONNECTION, {}) : (0,
                z.jsx)(_c.Paradox.UGC_DISABLED, {}) : (0,
                z.jsx)(_c.Paradox.SDK_DISABLED, {})
            }(s, i, n)
              , o = sl(tM);
            return (0,
            z.jsx)(z.Fragment, {
                children: !o && (0,
                z.jsx)(Eg, {
                    tooltip: a,
                    children: (0,
                    z.jsxs)(qI, {
                        tinted: !0,
                        src: "Media/Glyphs/ParadoxMods.svg",
                        theme: tS,
                        disabled: !i || !s || !e && !t,
                        onSelect: OM,
                        children: [(0,
                        z.jsx)("div", {
                            className: i_e.buttonLabelLeft,
                            children: (0,
                            z.jsx)(_c.Menu.PDX_MODS, {})
                        }), (0,
                        z.jsx)("div", {
                            className: i_e.buttonLabelRight,
                            children: (0,
                            z.jsx)(yZ, {})
                        })]
                    })
                })
            })
        }
        ;
        X.add("game-ui/menu/components/main-menu-screen/main-menu-screen.tsx", {
            get MainMenuNavigation() {
                return o_e
            },
            set MainMenuNavigation(e) {
                o_e = e
            },
            get MainMenuScreen() {
                return r_e
            },
            set MainMenuScreen(e) {
                r_e = e
            },
            get ModsUIButton() {
                return c_e
            },
            set ModsUIButton(e) {
                c_e = e
            }
        });
        let u_e = {
            base: "base_TVJ",
            enter: "enter_YpG",
            "exit-active": "exit-active_Hh_",
            exitActive: "exit-active_Hh_",
            "enter-active": "enter-active_I0d",
            enterActive: "enter-active_I0d",
            exit: "exit_L_k"
        };
        X.add("game-ui/menu/components/menu-ui-backdrops/cross-fade.module.scss", {
            get classes() {
                return u_e
            },
            set classes(e) {
                Object.assign(u_e, e)
            }
        });
        const d_e = u_e;
        let m_e = {
            backdrop: "backdrop_VVy",
            backdropImage: "backdropImage_mrh"
        };
        X.add("game-ui/menu/components/menu-ui-backdrops/menu-ui-backdrops.module.scss", {
            get classes() {
                return m_e
            },
            set classes(e) {
                Object.assign(m_e, e)
            }
        });
        const h_e = m_e;
        var g_e = ["Media/Menu/Backdrops/Backgound01.png", "Media/Menu/Backdrops/Backgound02.png", "Media/Menu/Backdrops/Backgound03.png", "Media/Menu/Backdrops/Backgound04.png", "Media/Menu/Backdrops/Backgound05.png", "Media/Menu/Backdrops/Backgound06.png", "Media/Menu/Backdrops/Backgound07.png"];
        var p_e = ()=>{
            const [e,t] = (0,
            Y.useState)((()=>Math.floor(Math.random() * g_e.length)));
            (0,
            Y.useEffect)((()=>{
                let e;
                const n = ()=>{
                    e = setTimeout((()=>{
                        t((e=>e + 1 === g_e.length ? 0 : e + 1)),
                        clearTimeout(e),
                        n()
                    }
                    ), 3e4)
                }
                ;
                return n(),
                ()=>{
                    clearTimeout(e)
                }
            }
            ), []);
            const n = g_e[e];
            return (0,
            z.jsxs)(z.Fragment, {
                children: [(0,
                z.jsx)("div", {
                    className: h_e.backdrop
                }), (0,
                z.jsx)(ud, {
                    children: (0,
                    z.jsx)(mh, {
                        styles: d_e,
                        children: (0,
                        z.jsx)("div", {
                            className: h_e.backdropImage,
                            style: {
                                backgroundImage: `url('${n}')`
                            }
                        })
                    }, n)
                })]
            })
        }
        ;
        X.add("game-ui/menu/components/menu-ui-backdrops/menu-ui-backdrops.tsx", {
            get BACKDROPS_LIST() {
                return g_e
            },
            set BACKDROPS_LIST(e) {
                g_e = e
            },
            get MenuUIBackdrops() {
                return p_e
            },
            set MenuUIBackdrops(e) {
                p_e = e
            }
        });
        let f_e = {
            "user-switch-prompt": "user-switch-prompt_UJI",
            userSwitchPrompt: "user-switch-prompt_UJI",
            avatar: "avatar_MH0",
            label: "label_deh",
            action: "action_J_6"
        };
        X.add("game-ui/menu/components/user-switch-prompt/user-switch-prompt.module.scss", {
            get classes() {
                return f_e
            },
            set classes(e) {
                Object.assign(f_e, e)
            }
        });
        const x_e = f_e
          , v_e = "Media/AvatarFallback.svg";
        var __e = ({className: e})=>{
            const t = Dm()
              , n = sl(Bp)
              , s = sl(Gp)
              , [i,a] = function(e) {
                const [t,n] = (0,
                Y.useState)(null);
                (0,
                Y.useEffect)((()=>n((t=>e !== t ? null : e))), [e]);
                const s = null !== e && e !== t ? e : v_e
                  , i = (0,
                Y.useCallback)((()=>e !== v_e && n(e)), [e]);
                return [s, i]
            }(n);
            return (0,
            z.jsxs)(U_, {
                focusKey: Sg,
                className: Zu()(x_e.userSwitchPrompt, e),
                onSelect: Hp,
                children: [(0,
                z.jsx)("img", {
                    src: i || void 0,
                    onError: a,
                    className: x_e.avatar
                }), (0,
                z.jsx)("div", {
                    className: x_e.label,
                    children: Vr(s) ? (0,
                    z.jsx)(_c.Menu.SWITCH_USER, {}) : s
                }), t && (0,
                z.jsx)(IT, {
                    specifiedActions: ["Switch User"],
                    labels: !1,
                    buttonAs: "div"
                })]
            })
        }
        ;
        X.add("game-ui/menu/components/user-switch-prompt/user-switch-prompt.tsx", {
            get UserSwitchPrompt() {
                return __e
            },
            set UserSwitchPrompt(e) {
                __e = e
            }
        });
        let b_e = {
            "menu-ui": "menu-ui_I8X menu-theme_k91",
            menuUi: "menu-ui_I8X menu-theme_k91",
            "content-container": "content-container_DDJ",
            contentContainer: "content-container_DDJ",
            content: "content_fc3",
            "action-hints": "action-hints_qUT child-opacity-transition_nkS",
            actionHints: "action-hints_qUT child-opacity-transition_nkS",
            version: "version_VJt",
            corner: "corner_Uxw",
            "bp-indicator": "bp-indicator_E_n",
            bpIndicator: "bp-indicator_E_n",
            "user-switch-prompt": "user-switch-prompt_m_H",
            userSwitchPrompt: "user-switch-prompt_m_H"
        };
        X.add("game-ui/menu/components/menu-ui.module.scss", {
            get classes() {
                return b_e
            },
            set classes(e) {
                Object.assign(b_e, e)
            }
        });
        const T_e = b_e
          , E_e = "whatsnew";
        var I_e, S_e = $r(E_e, "panel"), y_e = $r(E_e, "visible"), j_e = $r(E_e, "initialTab"), C_e = el(E_e, "close");
        !function(e) {
            e[e.Left = 0] = "Left",
            e[e.Center = 1] = "Center",
            e[e.Right = 2] = "Right"
        }(I_e || (I_e = {})),
        X.add("game-ui/menu/data-binding/whats-new-bindings.ts", {
            get whatsNewPanel() {
                return whatsNewPanel
            },
            set whatsNewPanel(e) {
                whatsNewPanel = e
            },
            get whatsNewPanelVisible() {
                return whatsNewPanelVisible
            },
            set whatsNewPanelVisible(e) {
                whatsNewPanelVisible = e
            },
            get whatsNewPanelInitialTab() {
                return whatsNewPanelInitialTab
            },
            set whatsNewPanelInitialTab(e) {
                whatsNewPanelInitialTab = e
            },
            get closeWhatsNewPanel() {
                return C_e
            },
            set closeWhatsNewPanel(e) {
                C_e = e
            },
            get Justify() {
                return I_e
            },
            set Justify(e) {
                I_e = e
            }
        });
        let N_e = {
            "page-switcher": "page-switcher_dTl",
            pageSwitcher: "page-switcher_dTl",
            page: "page_pOh"
        };
        X.add("game-ui/common/animations/paging/page-switcher.module.scss", {
            get classes() {
                return N_e
            },
            set classes(e) {
                Object.assign(N_e, e)
            }
        });
        const w_e = N_e;
        var O_e = Y.createContext(null)
          , P_e = Y.createContext(null);
        const L_e = Y.forwardRef((function({activePage: e, transitionStyles: t, className: n, children: s}, i) {
            const a = (0,
            Y.useRef)({
                activePage: e,
                previousPage: e
            });
            a.current.activePage !== e && (a.current = {
                activePage: e,
                previousPage: a.current.activePage
            });
            const o = a.current.previousPage
              , r = (0,
            Y.useMemo)((()=>({
                activePage: e,
                previousPage: o,
                transitionStyles: t
            })), [e, o, t]);
            return (0,
            z.jsx)("div", {
                ref: i,
                className: Zu()(w_e.pageSwitcher, n),
                children: (0,
                z.jsx)(O_e.Provider, {
                    value: r,
                    children: (0,
                    z.jsx)(op, {
                        focused: e,
                        children: (0,
                        z.jsx)(ud, {
                            children: (0,
                            z.jsx)(P_e.Provider, {
                                value: e,
                                children: (0,
                                z.jsx)(ap, {
                                    focusKey: e,
                                    children: s
                                })
                            }, e)
                        })
                    })
                })
            })
        }
        ));
        var A_e;
        !function(e) {
            e[e.None = 0] = "None",
            e[e.Previous = 1] = "Previous",
            e[e.Next = 2] = "Next"
        }(A_e || (A_e = {}));
        const M_e = ({className: e, children: t, ...n})=>{
            const s = (0,
            Y.useContext)(O_e)
              , i = (0,
            Y.useContext)(P_e)
              , a = (0,
            Y.useMemo)((()=>null == s || null == i ? A_e.None : s.activePage === i ? s.previousPage > i ? A_e.Previous : A_e.Next : s.previousPage === i ? s.activePage > i ? A_e.Previous : A_e.Next : A_e.None), [s, i]);
            return (0,
            z.jsx)(mh, {
                styles: a !== A_e.None && null != s ? s.transitionStyles : null,
                children: (0,
                z.jsx)("div", {
                    ...n,
                    className: Zu()(w_e.page, e, a === A_e.Previous && s?.transitionStyles?.previous, a === A_e.Next && s?.transitionStyles?.next),
                    children: t
                })
            })
        }
        ;
        X.add("game-ui/common/animations/paging/page-switcher.tsx", {
            get PageSwitcher() {
                return L_e
            },
            set PageSwitcher(e) {
                L_e = e
            },
            get Page() {
                return M_e
            },
            set Page(e) {
                M_e = e
            }
        });
        let R_e = {
            enter: "enter_bXD",
            "enter-active": "enter-active_vgh",
            enterActive: "enter-active_vgh",
            exit: "exit_XFe",
            "exit-active": "exit-active_BSo",
            exitActive: "exit-active_BSo",
            previous: "previous_IPO",
            next: "next_K_o"
        };
        X.add("game-ui/common/animations/paging/transitions/horizontal-transition.module.scss", {
            get classes() {
                return R_e
            },
            set classes(e) {
                Object.assign(R_e, e)
            }
        });
        const k_e = R_e;
        let D_e = {
            "dlc-selector": "dlc-selector_tES",
            dlcSelector: "dlc-selector_tES",
            button: "button_Sv_",
            header: "header_fRa",
            icon: "icon_m9v",
            title: "title_eie",
            page: "page_dx1",
            "page-content": "page-content_glG",
            pageContent: "page-content_glG",
            spacer: "spacer_YWX"
        };
        X.add("game-ui/menu/components/whats-new-panel/dlc-selector/dlc-selector.module.scss", {
            get classes() {
                return D_e
            },
            set classes(e) {
                Object.assign(D_e, e)
            }
        });
        const F_e = D_e;
        var U_e = YT({
            ArrowLeft: "Media/Glyphs/ThickStrokeArrowLeft.svg",
            ArrowRight: "Media/Glyphs/ThickStrokeArrowRight.svg"
        })
          , B_e = ({selected: e, onSelect: t})=>{
            const n = S_e.value[e].dlc
              , s = (0,
            Y.useCallback)((()=>{
                t(Math.max(0, e - 1))
            }
            ), [t, e])
              , i = (0,
            Y.useCallback)((()=>{
                t(Math.min(S_e.value.length - 1, e + 1))
            }
            ), [t, e]);
            return (0,
            z.jsxs)(Sp, {
                className: F_e.dlcSelector,
                children: [S_e.value.length > 1 && (0,
                z.jsx)(tb, {
                    focusKey: Sg,
                    tinted: !0,
                    disabled: 0 === e,
                    src: U_e.ArrowLeft,
                    className: F_e.button,
                    onSelect: s
                }), (0,
                z.jsx)("div", {
                    className: F_e.spacer
                }), (0,
                z.jsx)(L_e, {
                    transitionStyles: k_e,
                    className: F_e.header,
                    activePage: e,
                    children: (0,
                    z.jsx)(M_e, {
                        className: F_e.page,
                        children: (0,
                        z.jsxs)("div", {
                            className: F_e.pageContent,
                            children: [(0,
                            z.jsx)(Y_, {
                                src: `Media/DLC/${n}.svg`,
                                className: F_e.icon
                            }), (0,
                            z.jsx)("div", {
                                className: F_e.title,
                                children: (0,
                                z.jsx)(_c.Common.DLC_TITLE, {
                                    hash: n
                                })
                            })]
                        })
                    })
                }), S_e.value.length > 1 && (0,
                z.jsx)(tb, {
                    focusKey: Sg,
                    tinted: !0,
                    disabled: e === S_e.value.length - 1,
                    src: U_e.ArrowRight,
                    className: F_e.button,
                    onSelect: i
                })]
            })
        }
        ;
        X.add("game-ui/menu/components/whats-new-panel/dlc-selector/dlc-selector.tsx", {
            get images() {
                return U_e
            },
            set images(e) {
                U_e = e
            },
            get DlcSelector() {
                return B_e
            },
            set DlcSelector(e) {
                B_e = e
            }
        });
        let G_e = {
            "page-selector": "page-selector_JA1",
            pageSelector: "page-selector_JA1",
            toggle: "toggle_nf2",
            "page-button": "page-button_x9U",
            pageButton: "page-button_x9U",
            icon: "icon_Csr",
            prev: "prev_pUf",
            next: "next_ebX",
            hidden: "hidden_XO6"
        };
        X.add("game-ui/menu/components/whats-new-panel/page-selector/page-selector.module.scss", {
            get classes() {
                return G_e
            },
            set classes(e) {
                Object.assign(G_e, e)
            }
        });
        const V_e = G_e;
        var H_e = ({pages: e, selected: t, onSelect: n})=>{
            const s = {
                ...mJ,
                ...V_e
            }
              , i = (0,
            Y.useCallback)((()=>{
                n(t - 1)
            }
            ), [n, t])
              , a = (0,
            Y.useCallback)((()=>{
                n(t + 1)
            }
            ), [n, t])
              , o = Dm();
            return (0,
            z.jsxs)("div", {
                className: V_e.pageSelector,
                children: [!o && t > 0 ? (0,
                z.jsx)(tb, {
                    tinted: !0,
                    focusKey: Sg,
                    theme: s,
                    src: "Media/Glyphs/ArrowLeft.svg",
                    onSelect: i,
                    className: Zu()(V_e.pageButton, V_e.prev)
                }) : (0,
                z.jsx)("div", {
                    className: Zu()(V_e.pageButton, V_e.prev)
                }), e > 1 && Array.from({
                    length: e
                }, ((e,s)=>(0,
                z.jsx)(P7, {
                    focusKey: Sg,
                    checked: t === s,
                    className: V_e.toggle,
                    onChange: ()=>n(s)
                }, s))), !o && t < e - 1 ? (0,
                z.jsx)(tb, {
                    tinted: !0,
                    focusKey: Sg,
                    theme: s,
                    src: "Media/Glyphs/ArrowRight.svg",
                    onSelect: a,
                    className: Zu()(V_e.pageButton, V_e.next)
                }) : (0,
                z.jsx)("div", {
                    className: Zu()(V_e.pageButton, V_e.next)
                })]
            })
        }
        ;
        X.add("game-ui/menu/components/whats-new-panel/page-selector/page-selector.tsx", {
            get PageSelector() {
                return H_e
            },
            set PageSelector(e) {
                H_e = e
            }
        });
        let K_e = {
            "whats-new-page": "whats-new-page_s08",
            whatsNewPage: "whats-new-page_s08",
            scrollable: "scrollable_xNZ",
            wrapper: "wrapper_f0E",
            item: "item_ze5",
            images: "images_cAd",
            text: "text_pzC",
            title: "title_kTI",
            "sub-title": "sub-title_ltz",
            subTitle: "sub-title_ltz",
            paragraphs: "paragraphs_pOF",
            paragraphsLeft: "paragraphsLeft_AkP",
            paragraphsRight: "paragraphsRight_HVa",
            paragraphsCenter: "paragraphsCenter_PXp"
        };
        X.add("game-ui/menu/components/whats-new-panel/whats-new-page/whats-new-page.module.scss", {
            get classes() {
                return K_e
            },
            set classes(e) {
                Object.assign(K_e, e)
            }
        });
        const W_e = K_e;
        var z_e = ({page: e})=>{
            const t = Dm();
            return (0,
            z.jsx)(M_e, {
                className: W_e.whatsNewPage,
                children: (0,
                z.jsx)(mb, {
                    className: W_e.scrollable,
                    autoScroll: t,
                    children: (0,
                    z.jsx)("div", {
                        className: W_e.wrapper,
                        children: e.items?.map(((e,t)=>(0,
                        z.jsx)(Y_e, {
                            item: e
                        }, t)))
                    })
                })
            })
        }
        ;
        const Y_e = ({item: e})=>(0,
        z.jsxs)("div", {
            className: W_e.item,
            style: {
                alignItems: e.justify === I_e.Left ? "flex-start" : e.justify === I_e.Right ? "flex-end" : "center",
                width: e.width + "%"
            },
            children: [e.images?.length > 0 && (0,
            z.jsx)("div", {
                className: W_e.images,
                children: e.images.map(((t,n)=>(0,
                z.jsx)(Y_, {
                    src: t.image,
                    className: W_e.image,
                    style: $_e(e.justify, t)
                }, n)))
            }), e.title && (0,
            z.jsx)("div", {
                className: Zu()(W_e.title, W_e.text, W_e.heading),
                children: (0,
                z.jsx)(cc, {
                    id: e.title
                })
            }), e.subtitle && (0,
            z.jsx)("div", {
                className: Zu()(W_e.subTitle, W_e.text, W_e.heading),
                children: (0,
                z.jsx)(cc, {
                    id: e.subtitle
                })
            }), e.paragraphs && (0,
            z.jsx)("div", {
                className: Zu()(W_e.paragraphs, W_e.text),
                children: (0,
                z.jsx)(Cb, {
                    className: Zu()(e.justify === I_e.Left ? W_e.paragraphsLeft : e.justify === I_e.Right ? W_e.paragraphsRight : W_e.paragraphsCenter),
                    children: (0,
                    z.jsx)(cc, {
                        id: e.paragraphs
                    })
                })
            })]
        });
        function $_e(e, t) {
            return {
                marginLeft: e === I_e.Right ? "2%" : e === I_e.Left ? void 0 : "1%",
                marginRight: e === I_e.Left ? "2%" : e === I_e.Right ? void 0 : "1%",
                width: `${t.width}%`,
                "--w": t.aspectRatio.x,
                "--h": t.aspectRatio.y
            }
        }
        X.add("game-ui/menu/components/whats-new-panel/whats-new-page/whats-new-page.tsx", {
            get WhatsNewPage() {
                return z_e
            },
            set WhatsNewPage(e) {
                z_e = e
            }
        });
        let q_e = {
            "whats-new-tab": "whats-new-tab_F6q",
            whatsNewTab: "whats-new-tab_F6q",
            fadeIn: "fadeIn_VdL"
        };
        X.add("game-ui/menu/components/whats-new-panel/whats-new-tab/whats-new-tab.module.scss", {
            get classes() {
                return q_e
            },
            set classes(e) {
                Object.assign(q_e, e)
            }
        });
        const X_e = q_e;
        var Q_e = ({tab: e, selectedPage: t})=>(0,
        z.jsx)(L_e, {
            activePage: t,
            transitionStyles: k_e,
            className: X_e.whatsNewTab,
            children: (0,
            z.jsx)(z_e, {
                page: e.pages[t]
            })
        }, e.id);
        X.add("game-ui/menu/components/whats-new-panel/whats-new-tab/whats-new-tab.tsx", {
            get WhatsNewTab() {
                return Q_e
            },
            set WhatsNewTab(e) {
                Q_e = e
            }
        });
        let Z_e = {
            layout: "layout_Wtx",
            "whats-new-panel": "whats-new-panel_hJt menu-theme_k91",
            whatsNewPanel: "whats-new-panel_hJt menu-theme_k91",
            "button-container": "button-container_iYr",
            buttonContainer: "button-container_iYr",
            button: "button__xS",
            dismiss: "dismiss_Z9k",
            label: "label_Zni",
            checkbox: "checkbox_WJa"
        };
        X.add("game-ui/menu/components/whats-new-panel/whats-new-panel.module.scss", {
            get classes() {
                return Z_e
            },
            set classes(e) {
                Object.assign(Z_e, e)
            }
        });
        const J_e = Z_e
          , ebe = new Ig("CHILDREN")
          , tbe = new Ig("WHATS_NEW_KEY")
          , nbe = new Ig("OK")
          , sbe = new Ig("DISMISS");
        var ibe = ({children: e})=>{
            const t = sl(S_e)
              , n = sl(j_e)
              , s = Dm()
              , [i,a] = (0,
            Y.useState)(n)
              , [o,r] = (0,
            Y.useState)(0)
              , [l,c] = (0,
            Y.useState)(!1)
              , u = sl(y_e) && t.length > 0
              , d = (0,
            Y.useCallback)((()=>C_e(l)), [l]);
            let m;
            m = u ? tbe : ebe;
            const h = (0,
            Y.useMemo)((()=>({
                "Switch Slide": t?.length > 0 && t[i].pages?.length > 1 ? e=>{
                    e < 0 && o > 0 ? (cp(lp.selectPreviousItem),
                    r(Math.max(0, o - 1))) : e > 0 && o < S_e.value[i].pages.length - 1 && (cp(lp.selectNextItem),
                    r(Math.min(S_e.value[i].pages.length - 1, o + 1)))
                }
                : null,
                "Switch DLC": t?.length > 1 ? e=>{
                    e < 0 && i > 0 ? (cp(lp.selectPreviousItem),
                    r(0),
                    a(Math.max(0, i - 1))) : e > 0 && i < S_e.value.length - 1 && (cp(lp.selectNextItem),
                    r(0),
                    a(Math.min(S_e.value.length - 1, i + 1)))
                }
                : null
            })), [o, i, t])
              , g = (0,
            Y.useCallback)((e=>{
                r(0),
                a(e)
            }
            ), []);
            return (0,
            z.jsxs)(op, {
                focused: m,
                children: [(0,
                z.jsx)(ap, {
                    focusKey: ebe,
                    children: e
                }), u && (0,
                z.jsx)(ap, {
                    focusKey: tbe,
                    children: (0,
                    z.jsx)(l_, {
                        children: (0,
                        z.jsx)(Fg, {
                            onAction: d,
                            children: (0,
                            z.jsx)(Mg, {
                                actions: h,
                                children: (0,
                                z.jsx)(yp, {
                                    children: (0,
                                    z.jsx)(mh, {
                                        styles: y9,
                                        children: (0,
                                        z.jsxs)("div", {
                                            className: J_e.layout,
                                            children: [(0,
                                            z.jsx)(Ip, {
                                                className: J_e.whatsNewPanel,
                                                children: (0,
                                                z.jsxs)(np, {
                                                    direction: kg.Horizontal,
                                                    initialFocused: nbe,
                                                    children: [(0,
                                                    z.jsx)(B_e, {
                                                        selected: i,
                                                        onSelect: g
                                                    }), (0,
                                                    z.jsx)(Q_e, {
                                                        tab: t[i],
                                                        selectedPage: o
                                                    }), (0,
                                                    z.jsx)(Ip, {
                                                        className: J_e.buttonContainer,
                                                        children: (0,
                                                        z.jsx)(U_, {
                                                            focusKey: nbe,
                                                            theme: ZE,
                                                            onSelect: d,
                                                            className: J_e.button,
                                                            children: (0,
                                                            z.jsx)(_c.Common.OK, {})
                                                        })
                                                    }), (0,
                                                    z.jsx)(H_e, {
                                                        selected: o,
                                                        onSelect: r,
                                                        pages: t[i].pages?.length
                                                    }), (0,
                                                    z.jsxs)(Ip, {
                                                        className: J_e.dismiss,
                                                        children: [(0,
                                                        z.jsx)(Hb, {
                                                            focusKey: sbe,
                                                            checked: l,
                                                            onChange: c,
                                                            className: J_e.checkbox
                                                        }), (0,
                                                        z.jsx)("div", {
                                                            className: J_e.label,
                                                            children: (0,
                                                            z.jsx)(_c.Common.DONT_SHOW_AGAIN, {})
                                                        })]
                                                    })]
                                                })
                                            }), s && (0,
                                            z.jsx)(IT, {
                                                className: T_e.actionHints
                                            })]
                                        })
                                    })
                                })
                            })
                        })
                    })
                })]
            })
        }
        ;
        X.add("game-ui/menu/components/whats-new-panel/whats-new-panel.tsx", {
            get WhatsNewPanel() {
                return ibe
            },
            set WhatsNewPanel(e) {
                ibe = e
            }
        });
        var abe = ()=>{
            const e = sl(qA)
              , t = sl($A)
              , n = sl(Up)
              , s = (0,
            Y.useCallback)((()=>bM(HA.Menu)), [])
              , i = (0,
            Y.useContext)(xE);
            (0,
            Y.useEffect)((()=>{
                const e = ME.subscribe((e=>{
                    i.showDialog((0,
                    z.jsx)(KI, {
                        ...e
                    }))
                }
                ));
                return ()=>e.dispose()
            }
            ), [i]);
            const a = (0,
            Y.useCallback)((()=>{
                zE(e)
            }
            ), [e]);
            return (0,
            z.jsx)(ibe, {
                children: (0,
                z.jsx)(FY, {
                    children: (0,
                    z.jsxs)(Mve, {
                        children: [(0,
                        z.jsx)(p_e, {}), (0,
                        z.jsxs)("div", {
                            className: T_e.menuUi,
                            children: [(0,
                            z.jsx)("div", {
                                className: T_e.contentContainer,
                                children: (0,
                                z.jsxs)(Ah, {
                                    children: [(0,
                                    z.jsx)("div", {
                                        className: T_e.content,
                                        children: (0,
                                        z.jsx)(op, {
                                            focused: t,
                                            activation: qu.Always,
                                            children: (0,
                                            z.jsxs)(ud, {
                                                children: [t === HA.Menu && (0,
                                                z.jsx)(r_e, {
                                                    focusKey: HA.Menu
                                                }, HA.Menu), t === HA.NewGame && (0,
                                                z.jsx)(a7, {
                                                    focusKey: HA.NewGame,
                                                    onClose: s
                                                }, HA.NewGame), t === HA.LoadGame && (0,
                                                z.jsx)(oee, {
                                                    focusKey: HA.LoadGame,
                                                    onClose: s
                                                }, HA.LoadGame), t === HA.Options && (0,
                                                z.jsx)(M0, {
                                                    focusKey: HA.Options,
                                                    onClose: s
                                                }, HA.Options), t === HA.Credits && (0,
                                                z.jsx)(e_e, {
                                                    focusKey: HA.Credits,
                                                    onClose: s
                                                }, HA.Credits)]
                                            })
                                        })
                                    }), (0,
                                    z.jsx)(rbe, {}), (0,
                                    z.jsx)(obe, {})]
                                })
                            }), (0,
                            z.jsx)("div", {
                                className: T_e.version,
                                onClick: a,
                                children: e
                            }), (0,
                            z.jsxs)("div", {
                                className: T_e.corner,
                                children: [n && (0,
                                z.jsx)(__e, {
                                    className: T_e.userSwitchPrompt
                                }), (0,
                                z.jsx)(k2, {
                                    className: T_e.bpIndicator
                                })]
                            })]
                        })]
                    })
                })
            })
        }
        ;
        const obe = ()=>{
            const e = wh((0,
            Y.useContext)(Ju));
            return Wp(!e),
            zp(!e),
            null
        }
          , rbe = ()=>{
            const e = wh((0,
            Y.useContext)(Ju));
            return Dm() ? (0,
            z.jsx)(IT, {
                disabled: !e,
                className: T_e.actionHints
            }) : null
        }
        ;
        X.add("game-ui/menu/components/menu-ui.tsx", {
            get MenuUI() {
                return abe
            },
            set MenuUI(e) {
                abe = e
            }
        });
        const lbe = ()=>{
            const e = sl(CE)
              , t = (()=>{
                const e = sl($E)
                  , [t,n] = (0,
                Y.useState)(!1)
                  , [s,i] = (0,
                Y.useState)(_A);
                return (0,
                Y.useEffect)((()=>{
                    let t = 0
                      , s = e?.length || 0;
                    e && e.length ? async function() {
                        const a = []
                          , o = ()=>{
                            t++,
                            t === s && s > 0 && (TA(a),
                            i(a),
                            n(!0))
                        }
                        ;
                        e.forEach((e=>{
                            if (bA.has(e))
                                return o();
                            bA.add(e),
                            import(e).then((t=>{
                                if (a.push(t.default),
                                t.hasCSS) {
                                    s++;
                                    const t = e.replace(".mjs", ".css");
                                    bA.has(t) ? o() : (bA.add(t),
                                    vA(t, o))
                                }
                                o()
                            }
                            )).catch((e=>{
                                o()
                            }
                            ))
                        }
                        ))
                    }() : (TA(_A),
                    i(_A),
                    n(!0))
                }
                ), [e]),
                {
                    ready: t,
                    registry: s,
                    mods: e
                }
            }
            )()
              , n = t.ready ? e : null;
            return zT(null !== n),
            (0,
            z.jsx)(Eq, {
                children: (0,
                z.jsxs)(gq, {
                    children: [(0,
                    z.jsxs)(j_, {
                        children: [(0,
                        z.jsx)(N_, {}), (0,
                        z.jsx)(_q, {
                            children: (0,
                            z.jsx)(Pq, {
                                children: (0,
                                z.jsx)(bE, {
                                    children: (0,
                                    z.jsxs)(NQ, {
                                        children: [(0,
                                        z.jsx)(xq, {}), n && (0,
                                        z.jsx)(v$, {
                                            activeUiClassName: String(n).toLowerCase(),
                                            children: "Menu" === n ? (0,
                                            z.jsx)(abe, {}) : "Game" === n ? (0,
                                            z.jsx)(wve, {}) : "Editor" === n && (0,
                                            z.jsx)(mve, {})
                                        })]
                                    })
                                })
                            })
                        })]
                    }), (0,
                    z.jsx)(cq, {
                        uiReady: !!n
                    }, "overlayUI")]
                })
            })
        }
        ;
        let cbe = {
            "app-container": "app-container_Y5l",
            appContainer: "app-container_Y5l"
        };
        X.add("game-ui/common/app/app-container.module.scss", {
            get classes() {
                return cbe
            },
            set classes(e) {
                Object.assign(cbe, e)
            }
        });
        const ube = cbe;
        function dbe() {
            const e = document.createElement("div");
            return e.className = ube.appContainer,
            document.body.appendChild(e),
            e
        }
        X.add("game-ui/common/app/app-container.ts", {
            get createAppContainer() {
                return dbe
            },
            set createAppContainer(e) {
                dbe = e
            }
        }),
        Rr().whenReady.then((()=>{
            function e(e) {
                e && (t.dispose(),
                function() {
                    const e = (0,
                    Q.createRoot)(dbe());
                    e.render((0,
                    z.jsx)(lbe, {}))
                }())
            }
            const t = jE.subscribe(e);
            e(t.value)
        }
        )),
        X.add("game-ui/index.tsx", {})
    }
    )()
}
)();
